/*
#############################################################################################
# Mortal Online (Unknown) SDK
# Generated with TheFeckless UE3 SDK Generator v1.4_Beta-Rev.51
# ========================================================================================= #
# File: NowGame_functions.h
# ========================================================================================= #
# Credits: uNrEaL, Tamimego, SystemFiles, R00T88, _silencer, the1domo, K@N@VEL
# Thanks: HOOAH07, lowHertz
# Forums: www.uc-forum.com, www.gamedeception.net
#############################################################################################
*/

#ifdef _MSC_VER
	#pragma pack ( push, 0x4 )
#endif

/*
# ========================================================================================= #
# Functions
# ========================================================================================= #
*/

// Function NowGame.AnimNodeBlendByMountRotation.GetPlayerController
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* UAnimNodeBlendByMountRotation::GetPlayerController ( )
{
	static UFunction* pFnGetPlayerController = NULL;

	if ( ! pFnGetPlayerController )
		pFnGetPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 45509 ];

	UAnimNodeBlendByMountRotation_execGetPlayerController_Parms GetPlayerController_Parms;

	pFnGetPlayerController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerController, &GetPlayerController_Parms, NULL );

	pFnGetPlayerController->FunctionFlags |= 0x400;

	return GetPlayerController_Parms.ReturnValue;
};

// Function NowGame.AnimNodeBlendByMountRotation.GetPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* UAnimNodeBlendByMountRotation::GetPawn ( )
{
	static UFunction* pFnGetPawn = NULL;

	if ( ! pFnGetPawn )
		pFnGetPawn = (UFunction*) UObject::GObjObjects()->Data[ 45507 ];

	UAnimNodeBlendByMountRotation_execGetPawn_Parms GetPawn_Parms;

	pFnGetPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPawn, &GetPawn_Parms, NULL );

	pFnGetPawn->FunctionFlags |= 0x400;

	return GetPawn_Parms.ReturnValue;
};

// Function NowGame.AnimNodeBlendByMountRotation.GetAtlasAvatar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarAiMount*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarAiMount* UAnimNodeBlendByMountRotation::GetAtlasAvatar ( )
{
	static UFunction* pFnGetAtlasAvatar = NULL;

	if ( ! pFnGetAtlasAvatar )
		pFnGetAtlasAvatar = (UFunction*) UObject::GObjObjects()->Data[ 45505 ];

	UAnimNodeBlendByMountRotation_execGetAtlasAvatar_Parms GetAtlasAvatar_Parms;

	pFnGetAtlasAvatar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasAvatar, &GetAtlasAvatar_Parms, NULL );

	pFnGetAtlasAvatar->FunctionFlags |= 0x400;

	return GetAtlasAvatar_Parms.ReturnValue;
};

// Function NowGame.AnimNodeBlendByMountRotation.SetActiveChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ChildIndex                     ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )

void UAnimNodeBlendByMountRotation::SetActiveChild ( int ChildIndex, float BlendTime )
{
	static UFunction* pFnSetActiveChild = NULL;

	if ( ! pFnSetActiveChild )
		pFnSetActiveChild = (UFunction*) UObject::GObjObjects()->Data[ 45502 ];

	UAnimNodeBlendByMountRotation_execSetActiveChild_Parms SetActiveChild_Parms;
	SetActiveChild_Parms.ChildIndex = ChildIndex;
	SetActiveChild_Parms.BlendTime = BlendTime;

	pFnSetActiveChild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveChild, &SetActiveChild_Parms, NULL );

	pFnSetActiveChild->FunctionFlags |= 0x400;
};

// Function NowGame.AnimNodeBlendBySpeedMount.GetPlayerController
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* UAnimNodeBlendBySpeedMount::GetPlayerController ( )
{
	static UFunction* pFnGetPlayerController = NULL;

	if ( ! pFnGetPlayerController )
		pFnGetPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 45531 ];

	UAnimNodeBlendBySpeedMount_execGetPlayerController_Parms GetPlayerController_Parms;

	pFnGetPlayerController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerController, &GetPlayerController_Parms, NULL );

	pFnGetPlayerController->FunctionFlags |= 0x400;

	return GetPlayerController_Parms.ReturnValue;
};

// Function NowGame.AnimNodeBlendBySpeedMount.GetPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* UAnimNodeBlendBySpeedMount::GetPawn ( )
{
	static UFunction* pFnGetPawn = NULL;

	if ( ! pFnGetPawn )
		pFnGetPawn = (UFunction*) UObject::GObjObjects()->Data[ 45529 ];

	UAnimNodeBlendBySpeedMount_execGetPawn_Parms GetPawn_Parms;

	pFnGetPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPawn, &GetPawn_Parms, NULL );

	pFnGetPawn->FunctionFlags |= 0x400;

	return GetPawn_Parms.ReturnValue;
};

// Function NowGame.AnimNodeBlendBySpeedMount.GetAtlasAvatar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarAiMount*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarAiMount* UAnimNodeBlendBySpeedMount::GetAtlasAvatar ( )
{
	static UFunction* pFnGetAtlasAvatar = NULL;

	if ( ! pFnGetAtlasAvatar )
		pFnGetAtlasAvatar = (UFunction*) UObject::GObjObjects()->Data[ 45527 ];

	UAnimNodeBlendBySpeedMount_execGetAtlasAvatar_Parms GetAtlasAvatar_Parms;

	pFnGetAtlasAvatar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasAvatar, &GetAtlasAvatar_Parms, NULL );

	pFnGetAtlasAvatar->FunctionFlags |= 0x400;

	return GetAtlasAvatar_Parms.ReturnValue;
};

// Function NowGame.AnimNodeBlendBySpeedMount.SetActiveChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ChildIndex                     ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )

void UAnimNodeBlendBySpeedMount::SetActiveChild ( int ChildIndex, float BlendTime )
{
	static UFunction* pFnSetActiveChild = NULL;

	if ( ! pFnSetActiveChild )
		pFnSetActiveChild = (UFunction*) UObject::GObjObjects()->Data[ 45524 ];

	UAnimNodeBlendBySpeedMount_execSetActiveChild_Parms SetActiveChild_Parms;
	SetActiveChild_Parms.ChildIndex = ChildIndex;
	SetActiveChild_Parms.BlendTime = BlendTime;

	pFnSetActiveChild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveChild, &SetActiveChild_Parms, NULL );

	pFnSetActiveChild->FunctionFlags |= 0x400;
};

// Function NowGame.AnimNodeBlendListInteractionAi.SetActiveChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ChildIndex                     ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )

void UAnimNodeBlendListInteractionAi::SetActiveChild ( int ChildIndex, float BlendTime )
{
	static UFunction* pFnSetActiveChild = NULL;

	if ( ! pFnSetActiveChild )
		pFnSetActiveChild = (UFunction*) UObject::GObjObjects()->Data[ 45542 ];

	UAnimNodeBlendListInteractionAi_execSetActiveChild_Parms SetActiveChild_Parms;
	SetActiveChild_Parms.ChildIndex = ChildIndex;
	SetActiveChild_Parms.BlendTime = BlendTime;

	pFnSetActiveChild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveChild, &SetActiveChild_Parms, NULL );

	pFnSetActiveChild->FunctionFlags |= 0x400;
};

// Function NowGame.AnimNodeBlendListMountAdditive.SetIndexAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FName                   NewAnimName                    ( CPF_Parm )

void UAnimNodeBlendListMountAdditive::SetIndexAnim ( int Index, struct FName NewAnimName )
{
	static UFunction* pFnSetIndexAnim = NULL;

	if ( ! pFnSetIndexAnim )
		pFnSetIndexAnim = (UFunction*) UObject::GObjObjects()->Data[ 45545 ];

	UAnimNodeBlendListMountAdditive_execSetIndexAnim_Parms SetIndexAnim_Parms;
	SetIndexAnim_Parms.Index = Index;
	memcpy ( &SetIndexAnim_Parms.NewAnimName, &NewAnimName, 0x8 );

	pFnSetIndexAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetIndexAnim, &SetIndexAnim_Parms, NULL );

	pFnSetIndexAnim->FunctionFlags |= 0x400;
};

// Function NowGame.AnimNodeBlendListMountSpeed.SetActiveChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ChildIndex                     ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )

void UAnimNodeBlendListMountSpeed::SetActiveChild ( int ChildIndex, float BlendTime )
{
	static UFunction* pFnSetActiveChild = NULL;

	if ( ! pFnSetActiveChild )
		pFnSetActiveChild = (UFunction*) UObject::GObjObjects()->Data[ 45550 ];

	UAnimNodeBlendListMountSpeed_execSetActiveChild_Parms SetActiveChild_Parms;
	SetActiveChild_Parms.ChildIndex = ChildIndex;
	SetActiveChild_Parms.BlendTime = BlendTime;

	pFnSetActiveChild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveChild, &SetActiveChild_Parms, NULL );

	pFnSetActiveChild->FunctionFlags |= 0x400;
};

// Function NowGame.AnimNodeBlendListPlayOnce.SetActiveChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ChildIndex                     ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )

void UAnimNodeBlendListPlayOnce::SetActiveChild ( int ChildIndex, float BlendTime )
{
	static UFunction* pFnSetActiveChild = NULL;

	if ( ! pFnSetActiveChild )
		pFnSetActiveChild = (UFunction*) UObject::GObjObjects()->Data[ 45554 ];

	UAnimNodeBlendListPlayOnce_execSetActiveChild_Parms SetActiveChild_Parms;
	SetActiveChild_Parms.ChildIndex = ChildIndex;
	SetActiveChild_Parms.BlendTime = BlendTime;

	pFnSetActiveChild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveChild, &SetActiveChild_Parms, NULL );

	pFnSetActiveChild->FunctionFlags |= 0x400;
};

// Function NowGame.CharacterSlot.SetCharacterSize
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          fSize                          ( CPF_Parm )

void ACharacterSlot::eventSetCharacterSize ( float fSize )
{
	static UFunction* pFnSetCharacterSize = NULL;

	if ( ! pFnSetCharacterSize )
		pFnSetCharacterSize = (UFunction*) UObject::GObjObjects()->Data[ 45731 ];

	ACharacterSlot_eventSetCharacterSize_Parms SetCharacterSize_Parms;
	SetCharacterSize_Parms.fSize = fSize;

	this->ProcessEvent ( pFnSetCharacterSize, &SetCharacterSize_Parms, NULL );
};

// Function NowGame.CharacterSlot.GenerateMeshes
// [0x00020002] 
// Parameters infos:

void ACharacterSlot::GenerateMeshes ( )
{
	static UFunction* pFnGenerateMeshes = NULL;

	if ( ! pFnGenerateMeshes )
		pFnGenerateMeshes = (UFunction*) UObject::GObjObjects()->Data[ 45730 ];

	ACharacterSlot_execGenerateMeshes_Parms GenerateMeshes_Parms;

	this->ProcessEvent ( pFnGenerateMeshes, &GenerateMeshes_Parms, NULL );
};

// Function NowGame.CharacterSlot.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ACharacterSlot::eventTick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 45728 ];

	ACharacterSlot_eventTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.CharacterSlot.TickInitAnimation
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ACharacterSlot::TickInitAnimation ( float fDeltaTime )
{
	static UFunction* pFnTickInitAnimation = NULL;

	if ( ! pFnTickInitAnimation )
		pFnTickInitAnimation = (UFunction*) UObject::GObjObjects()->Data[ 45724 ];

	ACharacterSlot_execTickInitAnimation_Parms TickInitAnimation_Parms;
	TickInitAnimation_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickInitAnimation, &TickInitAnimation_Parms, NULL );
};

// Function NowGame.CharacterSlot.SmallStoneEffect
// [0x00020002] 
// Parameters infos:
// class USkeletalMeshComponent*  Component                      ( CPF_Parm | CPF_EditInline )

void ACharacterSlot::SmallStoneEffect ( class USkeletalMeshComponent* Component )
{
	static UFunction* pFnSmallStoneEffect = NULL;

	if ( ! pFnSmallStoneEffect )
		pFnSmallStoneEffect = (UFunction*) UObject::GObjObjects()->Data[ 45721 ];

	ACharacterSlot_execSmallStoneEffect_Parms SmallStoneEffect_Parms;
	SmallStoneEffect_Parms.Component = Component;

	this->ProcessEvent ( pFnSmallStoneEffect, &SmallStoneEffect_Parms, NULL );
};

// Function NowGame.CharacterSlot.Hide
// [0x00020002] 
// Parameters infos:

void ACharacterSlot::Hide ( )
{
	static UFunction* pFnHide = NULL;

	if ( ! pFnHide )
		pFnHide = (UFunction*) UObject::GObjObjects()->Data[ 45720 ];

	ACharacterSlot_execHide_Parms Hide_Parms;

	this->ProcessEvent ( pFnHide, &Hide_Parms, NULL );
};

// Function NowGame.CharacterSlot.DeleteAnim
// [0x00020002] 
// Parameters infos:

void ACharacterSlot::DeleteAnim ( )
{
	static UFunction* pFnDeleteAnim = NULL;

	if ( ! pFnDeleteAnim )
		pFnDeleteAnim = (UFunction*) UObject::GObjObjects()->Data[ 45716 ];

	ACharacterSlot_execDeleteAnim_Parms DeleteAnim_Parms;

	this->ProcessEvent ( pFnDeleteAnim, &DeleteAnim_Parms, NULL );
};

// Function NowGame.CharacterSlot.Delete
// [0x00020002] 
// Parameters infos:

void ACharacterSlot::Delete ( )
{
	static UFunction* pFnDelete = NULL;

	if ( ! pFnDelete )
		pFnDelete = (UFunction*) UObject::GObjObjects()->Data[ 45713 ];

	ACharacterSlot_execDelete_Parms Delete_Parms;

	this->ProcessEvent ( pFnDelete, &Delete_Parms, NULL );
};

// Function NowGame.CharacterSlot.DeSelect
// [0x00020002] 
// Parameters infos:

void ACharacterSlot::DeSelect ( )
{
	static UFunction* pFnDeSelect = NULL;

	if ( ! pFnDeSelect )
		pFnDeSelect = (UFunction*) UObject::GObjObjects()->Data[ 45711 ];

	ACharacterSlot_execDeSelect_Parms DeSelect_Parms;

	this->ProcessEvent ( pFnDeSelect, &DeSelect_Parms, NULL );
};

// Function NowGame.CharacterSlot.Select
// [0x00020002] 
// Parameters infos:

void ACharacterSlot::Select ( )
{
	static UFunction* pFnSelect = NULL;

	if ( ! pFnSelect )
		pFnSelect = (UFunction*) UObject::GObjObjects()->Data[ 45706 ];

	ACharacterSlot_execSelect_Parms Select_Parms;

	this->ProcessEvent ( pFnSelect, &Select_Parms, NULL );
};

// Function NowGame.CharacterSlot.TriggerOutAnim
// [0x00020002] 
// Parameters infos:

void ACharacterSlot::TriggerOutAnim ( )
{
	static UFunction* pFnTriggerOutAnim = NULL;

	if ( ! pFnTriggerOutAnim )
		pFnTriggerOutAnim = (UFunction*) UObject::GObjObjects()->Data[ 45699 ];

	ACharacterSlot_execTriggerOutAnim_Parms TriggerOutAnim_Parms;

	this->ProcessEvent ( pFnTriggerOutAnim, &TriggerOutAnim_Parms, NULL );
};

// Function NowGame.CharacterSlot.DoOutAnimation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ACharacterSlot::eventDoOutAnimation ( )
{
	static UFunction* pFnDoOutAnimation = NULL;

	if ( ! pFnDoOutAnimation )
		pFnDoOutAnimation = (UFunction*) UObject::GObjObjects()->Data[ 45698 ];

	ACharacterSlot_eventDoOutAnimation_Parms DoOutAnimation_Parms;

	this->ProcessEvent ( pFnDoOutAnimation, &DoOutAnimation_Parms, NULL );
};

// Function NowGame.CharacterSlot.DoInitAnimation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ACharacterSlot::eventDoInitAnimation ( )
{
	static UFunction* pFnDoInitAnimation = NULL;

	if ( ! pFnDoInitAnimation )
		pFnDoInitAnimation = (UFunction*) UObject::GObjObjects()->Data[ 45696 ];

	ACharacterSlot_eventDoInitAnimation_Parms DoInitAnimation_Parms;

	this->ProcessEvent ( pFnDoInitAnimation, &DoInitAnimation_Parms, NULL );
};

// Function NowGame.CharacterSlot.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ACharacterSlot::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 45695 ];

	ACharacterSlot_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.CharacterSlot.ParseData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ACharacterSlot::ParseData ( )
{
	static UFunction* pFnParseData = NULL;

	if ( ! pFnParseData )
		pFnParseData = (UFunction*) UObject::GObjObjects()->Data[ 45694 ];

	ACharacterSlot_execParseData_Parms ParseData_Parms;

	pFnParseData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnParseData, &ParseData_Parms, NULL );

	pFnParseData->FunctionFlags |= 0x400;
};

// Function NowGame.CharacterSlot.CanCustomize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ACharacterSlot::CanCustomize ( )
{
	static UFunction* pFnCanCustomize = NULL;

	if ( ! pFnCanCustomize )
		pFnCanCustomize = (UFunction*) UObject::GObjObjects()->Data[ 45692 ];

	ACharacterSlot_execCanCustomize_Parms CanCustomize_Parms;

	pFnCanCustomize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanCustomize, &CanCustomize_Parms, NULL );

	pFnCanCustomize->FunctionFlags |= 0x400;

	return CanCustomize_Parms.ReturnValue;
};

// Function NowGame.CharacterSlotCreate.DeltaRotation
// [0x00020002] 
// Parameters infos:
// int                            iRotation                      ( CPF_Parm )

void ACharacterSlotCreate::DeltaRotation ( int iRotation )
{
	static UFunction* pFnDeltaRotation = NULL;

	if ( ! pFnDeltaRotation )
		pFnDeltaRotation = (UFunction*) UObject::GObjObjects()->Data[ 45788 ];

	ACharacterSlotCreate_execDeltaRotation_Parms DeltaRotation_Parms;
	DeltaRotation_Parms.iRotation = iRotation;

	this->ProcessEvent ( pFnDeltaRotation, &DeltaRotation_Parms, NULL );
};

// Function NowGame.CharacterSlotCreate.SetCharacterSize
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fSize                          ( CPF_Parm )

void ACharacterSlotCreate::eventSetCharacterSize ( float fSize )
{
	static UFunction* pFnSetCharacterSize = NULL;

	if ( ! pFnSetCharacterSize )
		pFnSetCharacterSize = (UFunction*) UObject::GObjObjects()->Data[ 45784 ];

	ACharacterSlotCreate_eventSetCharacterSize_Parms SetCharacterSize_Parms;
	SetCharacterSize_Parms.fSize = fSize;

	this->ProcessEvent ( pFnSetCharacterSize, &SetCharacterSize_Parms, NULL );
};

// Function NowGame.CharacterSlotCreate.RaceToInt
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

int ACharacterSlotCreate::RaceToInt ( struct FString sString )
{
	static UFunction* pFnRaceToInt = NULL;

	if ( ! pFnRaceToInt )
		pFnRaceToInt = (UFunction*) UObject::GObjObjects()->Data[ 45780 ];

	ACharacterSlotCreate_execRaceToInt_Parms RaceToInt_Parms;
	memcpy ( &RaceToInt_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnRaceToInt, &RaceToInt_Parms, NULL );

	return RaceToInt_Parms.ReturnValue;
};

// Function NowGame.CharacterSlotCreate.SelectedRaces
// [0x00020002] 
// Parameters infos:
// struct FString                 sRace1                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sRace2                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sRace3                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sRace4                         ( CPF_Parm | CPF_NeedCtorLink )

void ACharacterSlotCreate::SelectedRaces ( struct FString sRace1, struct FString sRace2, struct FString sRace3, struct FString sRace4 )
{
	static UFunction* pFnSelectedRaces = NULL;

	if ( ! pFnSelectedRaces )
		pFnSelectedRaces = (UFunction*) UObject::GObjObjects()->Data[ 45774 ];

	ACharacterSlotCreate_execSelectedRaces_Parms SelectedRaces_Parms;
	memcpy ( &SelectedRaces_Parms.sRace1, &sRace1, 0xC );
	memcpy ( &SelectedRaces_Parms.sRace2, &sRace2, 0xC );
	memcpy ( &SelectedRaces_Parms.sRace3, &sRace3, 0xC );
	memcpy ( &SelectedRaces_Parms.sRace4, &sRace4, 0xC );

	this->ProcessEvent ( pFnSelectedRaces, &SelectedRaces_Parms, NULL );
};

// Function NowGame.CharacterSlotCreate.SetRaceState
// [0x00020002] 
// Parameters infos:
// int                            iNewState                      ( CPF_Parm )

void ACharacterSlotCreate::SetRaceState ( int iNewState )
{
	static UFunction* pFnSetRaceState = NULL;

	if ( ! pFnSetRaceState )
		pFnSetRaceState = (UFunction*) UObject::GObjObjects()->Data[ 45771 ];

	ACharacterSlotCreate_execSetRaceState_Parms SetRaceState_Parms;
	SetRaceState_Parms.iNewState = iNewState;

	this->ProcessEvent ( pFnSetRaceState, &SetRaceState_Parms, NULL );
};

// Function NowGame.CharacterSlotCreate.Select
// [0x00020002] 
// Parameters infos:

void ACharacterSlotCreate::Select ( )
{
	static UFunction* pFnSelect = NULL;

	if ( ! pFnSelect )
		pFnSelect = (UFunction*) UObject::GObjObjects()->Data[ 45769 ];

	ACharacterSlotCreate_execSelect_Parms Select_Parms;

	this->ProcessEvent ( pFnSelect, &Select_Parms, NULL );
};

// Function NowGame.CharacterSlotCreate.GenerateMeshes
// [0x00020002] 
// Parameters infos:

void ACharacterSlotCreate::GenerateMeshes ( )
{
	static UFunction* pFnGenerateMeshes = NULL;

	if ( ! pFnGenerateMeshes )
		pFnGenerateMeshes = (UFunction*) UObject::GObjObjects()->Data[ 45767 ];

	ACharacterSlotCreate_execGenerateMeshes_Parms GenerateMeshes_Parms;

	this->ProcessEvent ( pFnGenerateMeshes, &GenerateMeshes_Parms, NULL );
};

// Function NowGame.CharacterSlotCreate.DoInitAnimation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ACharacterSlotCreate::eventDoInitAnimation ( )
{
	static UFunction* pFnDoInitAnimation = NULL;

	if ( ! pFnDoInitAnimation )
		pFnDoInitAnimation = (UFunction*) UObject::GObjObjects()->Data[ 45766 ];

	ACharacterSlotCreate_eventDoInitAnimation_Parms DoInitAnimation_Parms;

	this->ProcessEvent ( pFnDoInitAnimation, &DoInitAnimation_Parms, NULL );
};

// Function NowGame.CharacterSlotCreate.PlayCustom
// [0x00020002] 
// Parameters infos:
// struct FName                   AnimName                       ( CPF_Parm )

void ACharacterSlotCreate::PlayCustom ( struct FName AnimName )
{
	static UFunction* pFnPlayCustom = NULL;

	if ( ! pFnPlayCustom )
		pFnPlayCustom = (UFunction*) UObject::GObjObjects()->Data[ 45764 ];

	ACharacterSlotCreate_execPlayCustom_Parms PlayCustom_Parms;
	memcpy ( &PlayCustom_Parms.AnimName, &AnimName, 0x8 );

	this->ProcessEvent ( pFnPlayCustom, &PlayCustom_Parms, NULL );
};

// Function NowGame.CharacterSlotCreate.Tick
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ACharacterSlotCreate::eventTick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 45761 ];

	ACharacterSlotCreate_eventTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ChatManager.IsValidName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iMaxChar                       ( CPF_Parm )

bool UChatManager::eventIsValidName ( struct FString sName, int iMaxChar )
{
	static UFunction* pFnIsValidName = NULL;

	if ( ! pFnIsValidName )
		pFnIsValidName = (UFunction*) UObject::GObjObjects()->Data[ 46086 ];

	UChatManager_eventIsValidName_Parms IsValidName_Parms;
	memcpy ( &IsValidName_Parms.sName, &sName, 0xC );
	IsValidName_Parms.iMaxChar = iMaxChar;

	this->ProcessEvent ( pFnIsValidName, &IsValidName_Parms, NULL );

	return IsValidName_Parms.ReturnValue;
};

// Function NowGame.ChatManager.DoWhoSetSurname
// [0x00020002] 
// Parameters infos:
// TArray< struct FString >       msgParts                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::DoWhoSetSurname ( TArray< struct FString > msgParts )
{
	static UFunction* pFnDoWhoSetSurname = NULL;

	if ( ! pFnDoWhoSetSurname )
		pFnDoWhoSetSurname = (UFunction*) UObject::GObjObjects()->Data[ 46082 ];

	UChatManager_execDoWhoSetSurname_Parms DoWhoSetSurname_Parms;
	memcpy ( &DoWhoSetSurname_Parms.msgParts, &msgParts, 0xC );

	this->ProcessEvent ( pFnDoWhoSetSurname, &DoWhoSetSurname_Parms, NULL );
};

// Function NowGame.ChatManager.GetWorldInfo
// [0x00020002] 
// Parameters infos:
// class AWorldInfo*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AWorldInfo* UChatManager::GetWorldInfo ( )
{
	static UFunction* pFnGetWorldInfo = NULL;

	if ( ! pFnGetWorldInfo )
		pFnGetWorldInfo = (UFunction*) UObject::GObjObjects()->Data[ 46080 ];

	UChatManager_execGetWorldInfo_Parms GetWorldInfo_Parms;

	this->ProcessEvent ( pFnGetWorldInfo, &GetWorldInfo_Parms, NULL );

	return GetWorldInfo_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CmdMurderCount
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdMurderCount ( )
{
	static UFunction* pFnCmdMurderCount = NULL;

	if ( ! pFnCmdMurderCount )
		pFnCmdMurderCount = (UFunction*) UObject::GObjObjects()->Data[ 46073 ];

	UChatManager_execCmdMurderCount_Parms CmdMurderCount_Parms;

	this->ProcessEvent ( pFnCmdMurderCount, &CmdMurderCount_Parms, NULL );
};

// Function NowGame.ChatManager.CmdTestmode
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdTestmode ( )
{
	static UFunction* pFnCmdTestmode = NULL;

	if ( ! pFnCmdTestmode )
		pFnCmdTestmode = (UFunction*) UObject::GObjObjects()->Data[ 46071 ];

	UChatManager_execCmdTestmode_Parms CmdTestmode_Parms;

	this->ProcessEvent ( pFnCmdTestmode, &CmdTestmode_Parms, NULL );
};

// Function NowGame.ChatManager.CmdStopReading
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdStopReading ( )
{
	static UFunction* pFnCmdStopReading = NULL;

	if ( ! pFnCmdStopReading )
		pFnCmdStopReading = (UFunction*) UObject::GObjObjects()->Data[ 46070 ];

	UChatManager_execCmdStopReading_Parms CmdStopReading_Parms;

	this->ProcessEvent ( pFnCmdStopReading, &CmdStopReading_Parms, NULL );
};

// Function NowGame.ChatManager.CmdEndTutorial
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdEndTutorial ( )
{
	static UFunction* pFnCmdEndTutorial = NULL;

	if ( ! pFnCmdEndTutorial )
		pFnCmdEndTutorial = (UFunction*) UObject::GObjObjects()->Data[ 46068 ];

	UChatManager_execCmdEndTutorial_Parms CmdEndTutorial_Parms;

	this->ProcessEvent ( pFnCmdEndTutorial, &CmdEndTutorial_Parms, NULL );
};

// Function NowGame.ChatManager.CmdStatLossCount
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdStatLossCount ( )
{
	static UFunction* pFnCmdStatLossCount = NULL;

	if ( ! pFnCmdStatLossCount )
		pFnCmdStatLossCount = (UFunction*) UObject::GObjObjects()->Data[ 46059 ];

	UChatManager_execCmdStatLossCount_Parms CmdStatLossCount_Parms;

	this->ProcessEvent ( pFnCmdStatLossCount, &CmdStatLossCount_Parms, NULL );
};

// Function NowGame.ChatManager.CmdCallGuards
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdCallGuards ( )
{
	static UFunction* pFnCmdCallGuards = NULL;

	if ( ! pFnCmdCallGuards )
		pFnCmdCallGuards = (UFunction*) UObject::GObjObjects()->Data[ 46048 ];

	UChatManager_execCmdCallGuards_Parms CmdCallGuards_Parms;

	this->ProcessEvent ( pFnCmdCallGuards, &CmdCallGuards_Parms, NULL );
};

// Function NowGame.ChatManager.CmdWhoMe
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdWhoMe ( )
{
	static UFunction* pFnCmdWhoMe = NULL;

	if ( ! pFnCmdWhoMe )
		pFnCmdWhoMe = (UFunction*) UObject::GObjObjects()->Data[ 46047 ];

	UChatManager_execCmdWhoMe_Parms CmdWhoMe_Parms;

	this->ProcessEvent ( pFnCmdWhoMe, &CmdWhoMe_Parms, NULL );
};

// Function NowGame.ChatManager.CmdWho
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdWho ( )
{
	static UFunction* pFnCmdWho = NULL;

	if ( ! pFnCmdWho )
		pFnCmdWho = (UFunction*) UObject::GObjObjects()->Data[ 46045 ];

	UChatManager_execCmdWho_Parms CmdWho_Parms;

	this->ProcessEvent ( pFnCmdWho, &CmdWho_Parms, NULL );
};

// Function NowGame.ChatManager.CmdFriendCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 sInput                         ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::CmdFriendCommand ( struct FString sInput )
{
	static UFunction* pFnCmdFriendCommand = NULL;

	if ( ! pFnCmdFriendCommand )
		pFnCmdFriendCommand = (UFunction*) UObject::GObjObjects()->Data[ 46039 ];

	UChatManager_execCmdFriendCommand_Parms CmdFriendCommand_Parms;
	memcpy ( &CmdFriendCommand_Parms.sInput, &sInput, 0xC );

	this->ProcessEvent ( pFnCmdFriendCommand, &CmdFriendCommand_Parms, NULL );
};

// Function NowGame.ChatManager.CmdPet
// [0x00020002] 
// Parameters infos:
// struct FString                 sInput                         ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::CmdPet ( struct FString sInput )
{
	static UFunction* pFnCmdPet = NULL;

	if ( ! pFnCmdPet )
		pFnCmdPet = (UFunction*) UObject::GObjObjects()->Data[ 46020 ];

	UChatManager_execCmdPet_Parms CmdPet_Parms;
	memcpy ( &CmdPet_Parms.sInput, &sInput, 0xC );

	this->ProcessEvent ( pFnCmdPet, &CmdPet_Parms, NULL );
};

// Function NowGame.ChatManager.CmdTrade
// [0x00024002] 
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_OptionalParm | CPF_Parm )

void UChatManager::CmdTrade ( class ANowAtlasAvatar* aActor )
{
	static UFunction* pFnCmdTrade = NULL;

	if ( ! pFnCmdTrade )
		pFnCmdTrade = (UFunction*) UObject::GObjObjects()->Data[ 46008 ];

	UChatManager_execCmdTrade_Parms CmdTrade_Parms;
	CmdTrade_Parms.aActor = aActor;

	this->ProcessEvent ( pFnCmdTrade, &CmdTrade_Parms, NULL );
};

// Function NowGame.ChatManager.CheckCommandOk
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WhatCommand                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::CheckCommandOk ( struct FString WhatCommand )
{
	static UFunction* pFnCheckCommandOk = NULL;

	if ( ! pFnCheckCommandOk )
		pFnCheckCommandOk = (UFunction*) UObject::GObjObjects()->Data[ 46003 ];

	UChatManager_execCheckCommandOk_Parms CheckCommandOk_Parms;
	memcpy ( &CheckCommandOk_Parms.WhatCommand, &WhatCommand, 0xC );

	this->ProcessEvent ( pFnCheckCommandOk, &CheckCommandOk_Parms, NULL );

	return CheckCommandOk_Parms.ReturnValue;
};

// Function NowGame.ChatManager.HandleAiCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )
// TArray< struct FString >       messageparts                   ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::HandleAiCommand ( struct FString sCommand, TArray< struct FString > messageparts )
{
	static UFunction* pFnHandleAiCommand = NULL;

	if ( ! pFnHandleAiCommand )
		pFnHandleAiCommand = (UFunction*) UObject::GObjObjects()->Data[ 45992 ];

	UChatManager_execHandleAiCommand_Parms HandleAiCommand_Parms;
	memcpy ( &HandleAiCommand_Parms.sCommand, &sCommand, 0xC );
	memcpy ( &HandleAiCommand_Parms.messageparts, &messageparts, 0xC );

	this->ProcessEvent ( pFnHandleAiCommand, &HandleAiCommand_Parms, NULL );

	return HandleAiCommand_Parms.ReturnValue;
};

// Function NowGame.ChatManager.HandleTSCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )
// TArray< struct FString >       messageparts                   ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::HandleTSCommand ( struct FString sCommand, TArray< struct FString > messageparts )
{
	static UFunction* pFnHandleTSCommand = NULL;

	if ( ! pFnHandleTSCommand )
		pFnHandleTSCommand = (UFunction*) UObject::GObjObjects()->Data[ 45985 ];

	UChatManager_execHandleTSCommand_Parms HandleTSCommand_Parms;
	memcpy ( &HandleTSCommand_Parms.sCommand, &sCommand, 0xC );
	memcpy ( &HandleTSCommand_Parms.messageparts, &messageparts, 0xC );

	this->ProcessEvent ( pFnHandleTSCommand, &HandleTSCommand_Parms, NULL );

	return HandleTSCommand_Parms.ReturnValue;
};

// Function NowGame.ChatManager.HandleDebugCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )
// TArray< struct FString >       messageparts                   ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::HandleDebugCommand ( struct FString sCommand, TArray< struct FString > messageparts )
{
	static UFunction* pFnHandleDebugCommand = NULL;

	if ( ! pFnHandleDebugCommand )
		pFnHandleDebugCommand = (UFunction*) UObject::GObjObjects()->Data[ 45975 ];

	UChatManager_execHandleDebugCommand_Parms HandleDebugCommand_Parms;
	memcpy ( &HandleDebugCommand_Parms.sCommand, &sCommand, 0xC );
	memcpy ( &HandleDebugCommand_Parms.messageparts, &messageparts, 0xC );

	this->ProcessEvent ( pFnHandleDebugCommand, &HandleDebugCommand_Parms, NULL );

	return HandleDebugCommand_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CmdMod
// [0x00024002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bIgnoreMeParse                 ( CPF_OptionalParm | CPF_Parm )

void UChatManager::CmdMod ( struct FString sCommand, struct FString sMessage, unsigned long bIgnoreMeParse )
{
	static UFunction* pFnCmdMod = NULL;

	if ( ! pFnCmdMod )
		pFnCmdMod = (UFunction*) UObject::GObjObjects()->Data[ 45966 ];

	UChatManager_execCmdMod_Parms CmdMod_Parms;
	memcpy ( &CmdMod_Parms.sCommand, &sCommand, 0xC );
	memcpy ( &CmdMod_Parms.sMessage, &sMessage, 0xC );
	CmdMod_Parms.bIgnoreMeParse = bIgnoreMeParse;

	this->ProcessEvent ( pFnCmdMod, &CmdMod_Parms, NULL );
};

// Function NowGame.ChatManager.CheckCommandForMeAndTgt
// [0x00024002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bIgnoreMeParse                 ( CPF_OptionalParm | CPF_Parm )

struct FString UChatManager::CheckCommandForMeAndTgt ( struct FString sMessage, unsigned long bIgnoreMeParse )
{
	static UFunction* pFnCheckCommandForMeAndTgt = NULL;

	if ( ! pFnCheckCommandForMeAndTgt )
		pFnCheckCommandForMeAndTgt = (UFunction*) UObject::GObjObjects()->Data[ 45958 ];

	UChatManager_execCheckCommandForMeAndTgt_Parms CheckCommandForMeAndTgt_Parms;
	memcpy ( &CheckCommandForMeAndTgt_Parms.sMessage, &sMessage, 0xC );
	CheckCommandForMeAndTgt_Parms.bIgnoreMeParse = bIgnoreMeParse;

	this->ProcessEvent ( pFnCheckCommandForMeAndTgt, &CheckCommandForMeAndTgt_Parms, NULL );

	return CheckCommandForMeAndTgt_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CmdCast
// [0x00020002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::CmdCast ( struct FString sCommand )
{
	static UFunction* pFnCmdCast = NULL;

	if ( ! pFnCmdCast )
		pFnCmdCast = (UFunction*) UObject::GObjObjects()->Data[ 45951 ];

	UChatManager_execCmdCast_Parms CmdCast_Parms;
	memcpy ( &CmdCast_Parms.sCommand, &sCommand, 0xC );

	this->ProcessEvent ( pFnCmdCast, &CmdCast_Parms, NULL );
};

// Function NowGame.ChatManager.CmdSkill
// [0x00020002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::CmdSkill ( struct FString sCommand )
{
	static UFunction* pFnCmdSkill = NULL;

	if ( ! pFnCmdSkill )
		pFnCmdSkill = (UFunction*) UObject::GObjObjects()->Data[ 45947 ];

	UChatManager_execCmdSkill_Parms CmdSkill_Parms;
	memcpy ( &CmdSkill_Parms.sCommand, &sCommand, 0xC );

	this->ProcessEvent ( pFnCmdSkill, &CmdSkill_Parms, NULL );
};

// Function NowGame.ChatManager.CmdEmote
// [0x00020002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::CmdEmote ( struct FString sCommand )
{
	static UFunction* pFnCmdEmote = NULL;

	if ( ! pFnCmdEmote )
		pFnCmdEmote = (UFunction*) UObject::GObjObjects()->Data[ 45941 ];

	UChatManager_execCmdEmote_Parms CmdEmote_Parms;
	memcpy ( &CmdEmote_Parms.sCommand, &sCommand, 0xC );

	this->ProcessEvent ( pFnCmdEmote, &CmdEmote_Parms, NULL );
};

// Function NowGame.ChatManager.CmdOrder
// [0x00020002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::CmdOrder ( struct FString sCommand )
{
	static UFunction* pFnCmdOrder = NULL;

	if ( ! pFnCmdOrder )
		pFnCmdOrder = (UFunction*) UObject::GObjObjects()->Data[ 45938 ];

	UChatManager_execCmdOrder_Parms CmdOrder_Parms;
	memcpy ( &CmdOrder_Parms.sCommand, &sCommand, 0xC );

	this->ProcessEvent ( pFnCmdOrder, &CmdOrder_Parms, NULL );
};

// Function NowGame.ChatManager.CmdOptions
// [0x00020002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::CmdOptions ( struct FString sCommand )
{
	static UFunction* pFnCmdOptions = NULL;

	if ( ! pFnCmdOptions )
		pFnCmdOptions = (UFunction*) UObject::GObjObjects()->Data[ 45932 ];

	UChatManager_execCmdOptions_Parms CmdOptions_Parms;
	memcpy ( &CmdOptions_Parms.sCommand, &sCommand, 0xC );

	this->ProcessEvent ( pFnCmdOptions, &CmdOptions_Parms, NULL );
};

// Function NowGame.ChatManager.HandleOutgoingCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::HandleOutgoingCommand ( struct FString sMessage )
{
	static UFunction* pFnHandleOutgoingCommand = NULL;

	if ( ! pFnHandleOutgoingCommand )
		pFnHandleOutgoingCommand = (UFunction*) UObject::GObjObjects()->Data[ 45916 ];

	UChatManager_execHandleOutgoingCommand_Parms HandleOutgoingCommand_Parms;
	memcpy ( &HandleOutgoingCommand_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnHandleOutgoingCommand, &HandleOutgoingCommand_Parms, NULL );
};

// Function NowGame.ChatManager.CheckForChatSpam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UChatManager::CheckForChatSpam ( )
{
	static UFunction* pFnCheckForChatSpam = NULL;

	if ( ! pFnCheckForChatSpam )
		pFnCheckForChatSpam = (UFunction*) UObject::GObjObjects()->Data[ 45914 ];

	UChatManager_execCheckForChatSpam_Parms CheckForChatSpam_Parms;

	this->ProcessEvent ( pFnCheckForChatSpam, &CheckForChatSpam_Parms, NULL );

	return CheckForChatSpam_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CheckForCommandSpam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fMinTime                       ( CPF_Parm )

bool UChatManager::CheckForCommandSpam ( float fMinTime )
{
	static UFunction* pFnCheckForCommandSpam = NULL;

	if ( ! pFnCheckForCommandSpam )
		pFnCheckForCommandSpam = (UFunction*) UObject::GObjObjects()->Data[ 45911 ];

	UChatManager_execCheckForCommandSpam_Parms CheckForCommandSpam_Parms;
	CheckForCommandSpam_Parms.fMinTime = fMinTime;

	this->ProcessEvent ( pFnCheckForCommandSpam, &CheckForCommandSpam_Parms, NULL );

	return CheckForCommandSpam_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CheckMyPawn
// [0x00020002] 
// Parameters infos:

void UChatManager::CheckMyPawn ( )
{
	static UFunction* pFnCheckMyPawn = NULL;

	if ( ! pFnCheckMyPawn )
		pFnCheckMyPawn = (UFunction*) UObject::GObjObjects()->Data[ 45910 ];

	UChatManager_execCheckMyPawn_Parms CheckMyPawn_Parms;

	this->ProcessEvent ( pFnCheckMyPawn, &CheckMyPawn_Parms, NULL );
};

// Function NowGame.ChatManager.ChanGuild
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::ChanGuild ( struct FString sMessage )
{
	static UFunction* pFnChanGuild = NULL;

	if ( ! pFnChanGuild )
		pFnChanGuild = (UFunction*) UObject::GObjObjects()->Data[ 45902 ];

	UChatManager_execChanGuild_Parms ChanGuild_Parms;
	memcpy ( &ChanGuild_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnChanGuild, &ChanGuild_Parms, NULL );

	return ChanGuild_Parms.ReturnValue;
};

// Function NowGame.ChatManager.GetSubSystem
// [0x00020002] 
// Parameters infos:
// class UOnlineSubsystemNowGame* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UOnlineSubsystemNowGame* UChatManager::GetSubSystem ( )
{
	static UFunction* pFnGetSubSystem = NULL;

	if ( ! pFnGetSubSystem )
		pFnGetSubSystem = (UFunction*) UObject::GObjObjects()->Data[ 45899 ];

	UChatManager_execGetSubSystem_Parms GetSubSystem_Parms;

	this->ProcessEvent ( pFnGetSubSystem, &GetSubSystem_Parms, NULL );

	return GetSubSystem_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CheckForChannelCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::CheckForChannelCommand ( struct FString sMessage )
{
	static UFunction* pFnCheckForChannelCommand = NULL;

	if ( ! pFnCheckForChannelCommand )
		pFnCheckForChannelCommand = (UFunction*) UObject::GObjObjects()->Data[ 45889 ];

	UChatManager_execCheckForChannelCommand_Parms CheckForChannelCommand_Parms;
	memcpy ( &CheckForChannelCommand_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnCheckForChannelCommand, &CheckForChannelCommand_Parms, NULL );

	return CheckForChannelCommand_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CheckForTalkCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::CheckForTalkCommand ( struct FString sMessage )
{
	static UFunction* pFnCheckForTalkCommand = NULL;

	if ( ! pFnCheckForTalkCommand )
		pFnCheckForTalkCommand = (UFunction*) UObject::GObjObjects()->Data[ 45886 ];

	UChatManager_execCheckForTalkCommand_Parms CheckForTalkCommand_Parms;
	memcpy ( &CheckForTalkCommand_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnCheckForTalkCommand, &CheckForTalkCommand_Parms, NULL );

	return CheckForTalkCommand_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CheckChatText
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 InText                         ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::CheckChatText ( struct FString InText )
{
	static UFunction* pFnCheckChatText = NULL;

	if ( ! pFnCheckChatText )
		pFnCheckChatText = (UFunction*) UObject::GObjObjects()->Data[ 45880 ];

	UChatManager_execCheckChatText_Parms CheckChatText_Parms;
	memcpy ( &CheckChatText_Parms.InText, &InText, 0xC );

	this->ProcessEvent ( pFnCheckChatText, &CheckChatText_Parms, NULL );

	return CheckChatText_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CheckOkChar
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 InText                         ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::CheckOkChar ( struct FString InText )
{
	static UFunction* pFnCheckOkChar = NULL;

	if ( ! pFnCheckOkChar )
		pFnCheckOkChar = (UFunction*) UObject::GObjObjects()->Data[ 45877 ];

	UChatManager_execCheckOkChar_Parms CheckOkChar_Parms;
	memcpy ( &CheckOkChar_Parms.InText, &InText, 0xC );

	this->ProcessEvent ( pFnCheckOkChar, &CheckOkChar_Parms, NULL );

	return CheckOkChar_Parms.ReturnValue;
};

// Function NowGame.ChatManager.HandleOutgoingChat
// [0x00020002] 
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::HandleOutgoingChat ( struct FString sMessage )
{
	static UFunction* pFnHandleOutgoingChat = NULL;

	if ( ! pFnHandleOutgoingChat )
		pFnHandleOutgoingChat = (UFunction*) UObject::GObjObjects()->Data[ 45875 ];

	UChatManager_execHandleOutgoingChat_Parms HandleOutgoingChat_Parms;
	memcpy ( &HandleOutgoingChat_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnHandleOutgoingChat, &HandleOutgoingChat_Parms, NULL );
};

// Function NowGame.ChatManager.HandleOutgoingMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::HandleOutgoingMessage ( struct FString sMessage )
{
	static UFunction* pFnHandleOutgoingMessage = NULL;

	if ( ! pFnHandleOutgoingMessage )
		pFnHandleOutgoingMessage = (UFunction*) UObject::GObjObjects()->Data[ 45873 ];

	UChatManager_execHandleOutgoingMessage_Parms HandleOutgoingMessage_Parms;
	memcpy ( &HandleOutgoingMessage_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnHandleOutgoingMessage, &HandleOutgoingMessage_Parms, NULL );
};

// Function NowGame.ChatManager.GetGFXHud
// [0x00020002] 
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* UChatManager::GetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = (UFunction*) UObject::GObjObjects()->Data[ 45869 ];

	UChatManager_execGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.ChatManager.IsNumber
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Number                         ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::IsNumber ( struct FString Number )
{
	static UFunction* pFnIsNumber = NULL;

	if ( ! pFnIsNumber )
		pFnIsNumber = (UFunction*) UObject::GObjObjects()->Data[ 45863 ];

	UChatManager_execIsNumber_Parms IsNumber_Parms;
	memcpy ( &IsNumber_Parms.Number, &Number, 0xC );

	this->ProcessEvent ( pFnIsNumber, &IsNumber_Parms, NULL );

	return IsNumber_Parms.ReturnValue;
};

// Function NowGame.ChatManager.GetActorFromNameOrId
// [0x00420002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 whatName                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class AActor* UChatManager::GetActorFromNameOrId ( struct FString* whatName )
{
	static UFunction* pFnGetActorFromNameOrId = NULL;

	if ( ! pFnGetActorFromNameOrId )
		pFnGetActorFromNameOrId = (UFunction*) UObject::GObjObjects()->Data[ 45855 ];

	UChatManager_execGetActorFromNameOrId_Parms GetActorFromNameOrId_Parms;

	this->ProcessEvent ( pFnGetActorFromNameOrId, &GetActorFromNameOrId_Parms, NULL );

	if ( whatName )
		memcpy ( whatName, &GetActorFromNameOrId_Parms.whatName, 0xC );

	return GetActorFromNameOrId_Parms.ReturnValue;
};

// Function NowGame.ChatManager.GetChannelFromString
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

int UChatManager::GetChannelFromString ( struct FString sString )
{
	static UFunction* pFnGetChannelFromString = NULL;

	if ( ! pFnGetChannelFromString )
		pFnGetChannelFromString = (UFunction*) UObject::GObjObjects()->Data[ 45851 ];

	UChatManager_execGetChannelFromString_Parms GetChannelFromString_Parms;
	memcpy ( &GetChannelFromString_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnGetChannelFromString, &GetChannelFromString_Parms, NULL );

	return GetChannelFromString_Parms.ReturnValue;
};

// Function NowGame.ChatManager.GetLogMessageChannelIndex
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iChannel                       ( CPF_Parm )

int UChatManager::eventGetLogMessageChannelIndex ( int iChannel )
{
	static UFunction* pFnGetLogMessageChannelIndex = NULL;

	if ( ! pFnGetLogMessageChannelIndex )
		pFnGetLogMessageChannelIndex = (UFunction*) UObject::GObjObjects()->Data[ 45846 ];

	UChatManager_eventGetLogMessageChannelIndex_Parms GetLogMessageChannelIndex_Parms;
	GetLogMessageChannelIndex_Parms.iChannel = iChannel;

	this->ProcessEvent ( pFnGetLogMessageChannelIndex, &GetLogMessageChannelIndex_Parms, NULL );

	return GetLogMessageChannelIndex_Parms.ReturnValue;
};

// Function NowGame.ChatManager.LogMessage
// [0x00024002] 
// Parameters infos:
// int                            iChannel                       ( CPF_Parm )
// struct FString                 sMsg                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTalker                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UChatManager::LogMessage ( int iChannel, struct FString sMsg, struct FString sTalker )
{
	static UFunction* pFnLogMessage = NULL;

	if ( ! pFnLogMessage )
		pFnLogMessage = (UFunction*) UObject::GObjObjects()->Data[ 45841 ];

	UChatManager_execLogMessage_Parms LogMessage_Parms;
	LogMessage_Parms.iChannel = iChannel;
	memcpy ( &LogMessage_Parms.sMsg, &sMsg, 0xC );
	memcpy ( &LogMessage_Parms.sTalker, &sTalker, 0xC );

	this->ProcessEvent ( pFnLogMessage, &LogMessage_Parms, NULL );
};

// Function NowGame.ChatManager.ShowMessage
// [0x00024002] 
// Parameters infos:
// int                            iChannel                       ( CPF_Parm )
// struct FString                 sMsg                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTalker                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UChatManager::ShowMessage ( int iChannel, struct FString sMsg, struct FString sTalker )
{
	static UFunction* pFnShowMessage = NULL;

	if ( ! pFnShowMessage )
		pFnShowMessage = (UFunction*) UObject::GObjObjects()->Data[ 45837 ];

	UChatManager_execShowMessage_Parms ShowMessage_Parms;
	ShowMessage_Parms.iChannel = iChannel;
	memcpy ( &ShowMessage_Parms.sMsg, &sMsg, 0xC );
	memcpy ( &ShowMessage_Parms.sTalker, &sTalker, 0xC );

	this->ProcessEvent ( pFnShowMessage, &ShowMessage_Parms, NULL );
};

// Function NowGame.ChatManager.HandleIncomingMessage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::eventHandleIncomingMessage ( struct FString sMessage )
{
	static UFunction* pFnHandleIncomingMessage = NULL;

	if ( ! pFnHandleIncomingMessage )
		pFnHandleIncomingMessage = (UFunction*) UObject::GObjObjects()->Data[ 45821 ];

	UChatManager_eventHandleIncomingMessage_Parms HandleIncomingMessage_Parms;
	memcpy ( &HandleIncomingMessage_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnHandleIncomingMessage, &HandleIncomingMessage_Parms, NULL );
};

// Function NowGame.ChatManager.InitManager
// [0x00020002] 
// Parameters infos:

void UChatManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = (UFunction*) UObject::GObjObjects()->Data[ 45820 ];

	UChatManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.ChatManager.ToggleOculus
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UChatManager::ToggleOculus ( )
{
	static UFunction* pFnToggleOculus = NULL;

	if ( ! pFnToggleOculus )
		pFnToggleOculus = (UFunction*) UObject::GObjObjects()->Data[ 45819 ];

	UChatManager_execToggleOculus_Parms ToggleOculus_Parms;

	pFnToggleOculus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleOculus, &ToggleOculus_Parms, NULL );

	pFnToggleOculus->FunctionFlags |= 0x400;
};

// Function NowGame.ChatManager.ToggleUnitTimes
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UChatManager::ToggleUnitTimes ( )
{
	static UFunction* pFnToggleUnitTimes = NULL;

	if ( ! pFnToggleUnitTimes )
		pFnToggleUnitTimes = (UFunction*) UObject::GObjObjects()->Data[ 45818 ];

	UChatManager_execToggleUnitTimes_Parms ToggleUnitTimes_Parms;

	pFnToggleUnitTimes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleUnitTimes, &ToggleUnitTimes_Parms, NULL );

	pFnToggleUnitTimes->FunctionFlags |= 0x400;
};

// Function NowGame.ChatManager.ToggleFPS
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UChatManager::ToggleFPS ( )
{
	static UFunction* pFnToggleFPS = NULL;

	if ( ! pFnToggleFPS )
		pFnToggleFPS = (UFunction*) UObject::GObjObjects()->Data[ 45817 ];

	UChatManager_execToggleFPS_Parms ToggleFPS_Parms;

	pFnToggleFPS->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleFPS, &ToggleFPS_Parms, NULL );

	pFnToggleFPS->FunctionFlags |= 0x400;
};

// Function NowGame.ChatManager.DropLoot
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UChatManager::DropLoot ( )
{
	static UFunction* pFnDropLoot = NULL;

	if ( ! pFnDropLoot )
		pFnDropLoot = (UFunction*) UObject::GObjObjects()->Data[ 45816 ];

	UChatManager_execDropLoot_Parms DropLoot_Parms;

	pFnDropLoot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDropLoot, &DropLoot_Parms, NULL );

	pFnDropLoot->FunctionFlags |= 0x400;
};

// Function NowGame.ChatManager.StartDuel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                pTarget                        ( CPF_Parm )

void UChatManager::StartDuel ( class ANowPawn* pTarget )
{
	static UFunction* pFnStartDuel = NULL;

	if ( ! pFnStartDuel )
		pFnStartDuel = (UFunction*) UObject::GObjObjects()->Data[ 45814 ];

	UChatManager_execStartDuel_Parms StartDuel_Parms;
	StartDuel_Parms.pTarget = pTarget;

	pFnStartDuel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartDuel, &StartDuel_Parms, NULL );

	pFnStartDuel->FunctionFlags |= 0x400;
};

// Function NowGame.ChatManager.IsAvatarId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::IsAvatarId ( struct FString sString )
{
	static UFunction* pFnIsAvatarId = NULL;

	if ( ! pFnIsAvatarId )
		pFnIsAvatarId = (UFunction*) UObject::GObjObjects()->Data[ 45811 ];

	UChatManager_execIsAvatarId_Parms IsAvatarId_Parms;
	memcpy ( &IsAvatarId_Parms.sString, &sString, 0xC );

	pFnIsAvatarId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAvatarId, &IsAvatarId_Parms, NULL );

	pFnIsAvatarId->FunctionFlags |= 0x400;

	return IsAvatarId_Parms.ReturnValue;
};

// Function NowGame.ClientEffect.SetScreenColor
// [0x00020002] 
// Parameters infos:
// struct FColor                  WhatColor                      ( CPF_Parm )

void UClientEffect::SetScreenColor ( struct FColor WhatColor )
{
	static UFunction* pFnSetScreenColor = NULL;

	if ( ! pFnSetScreenColor )
		pFnSetScreenColor = (UFunction*) UObject::GObjObjects()->Data[ 46133 ];

	UClientEffect_execSetScreenColor_Parms SetScreenColor_Parms;
	memcpy ( &SetScreenColor_Parms.WhatColor, &WhatColor, 0x4 );

	this->ProcessEvent ( pFnSetScreenColor, &SetScreenColor_Parms, NULL );
};

// Function NowGame.ClientEffect.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientEffect::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46123 ];

	UClientEffect_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientEffect.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientEffect::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46119 ];

	UClientEffect_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewMode.NumberPress
// [0x00020000] 
// Parameters infos:
// int                            iNumber                        ( CPF_Parm )

void UClientViewMode::NumberPress ( int iNumber )
{
	static UFunction* pFnNumberPress = NULL;

	if ( ! pFnNumberPress )
		pFnNumberPress = (UFunction*) UObject::GObjObjects()->Data[ 46170 ];

	UClientViewMode_execNumberPress_Parms NumberPress_Parms;
	NumberPress_Parms.iNumber = iNumber;

	this->ProcessEvent ( pFnNumberPress, &NumberPress_Parms, NULL );
};

// Function NowGame.ClientViewMode.Escape
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewMode::Escape ( )
{
	static UFunction* pFnEscape = NULL;

	if ( ! pFnEscape )
		pFnEscape = (UFunction*) UObject::GObjObjects()->Data[ 46168 ];

	UClientViewMode_execEscape_Parms Escape_Parms;

	this->ProcessEvent ( pFnEscape, &Escape_Parms, NULL );

	return Escape_Parms.ReturnValue;
};

// Function NowGame.ClientViewMode.RightClick
// [0x00020000] 
// Parameters infos:

void UClientViewMode::RightClick ( )
{
	static UFunction* pFnRightClick = NULL;

	if ( ! pFnRightClick )
		pFnRightClick = (UFunction*) UObject::GObjObjects()->Data[ 46167 ];

	UClientViewMode_execRightClick_Parms RightClick_Parms;

	this->ProcessEvent ( pFnRightClick, &RightClick_Parms, NULL );
};

// Function NowGame.ClientViewMode.LeftClick
// [0x00020000] 
// Parameters infos:

void UClientViewMode::LeftClick ( )
{
	static UFunction* pFnLeftClick = NULL;

	if ( ! pFnLeftClick )
		pFnLeftClick = (UFunction*) UObject::GObjObjects()->Data[ 46166 ];

	UClientViewMode_execLeftClick_Parms LeftClick_Parms;

	this->ProcessEvent ( pFnLeftClick, &LeftClick_Parms, NULL );
};

// Function NowGame.ClientViewMode.CanvasTick
// [0x00020000] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UClientViewMode::CanvasTick ( class UCanvas* C )
{
	static UFunction* pFnCanvasTick = NULL;

	if ( ! pFnCanvasTick )
		pFnCanvasTick = (UFunction*) UObject::GObjObjects()->Data[ 46164 ];

	UClientViewMode_execCanvasTick_Parms CanvasTick_Parms;
	CanvasTick_Parms.C = C;

	this->ProcessEvent ( pFnCanvasTick, &CanvasTick_Parms, NULL );
};

// Function NowGame.ClientViewMode.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewMode::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = (UFunction*) UObject::GObjObjects()->Data[ 46162 ];

	UClientViewMode_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewMode.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewMode::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46160 ];

	UClientViewMode_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewMode.Tick
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewMode::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46158 ];

	UClientViewMode_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewMode.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewMode::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46156 ];

	UClientViewMode_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModePackageMode.Escape
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModePackageMode::Escape ( )
{
	static UFunction* pFnEscape = NULL;

	if ( ! pFnEscape )
		pFnEscape = (UFunction*) UObject::GObjObjects()->Data[ 46570 ];

	UClientViewModePackageMode_execEscape_Parms Escape_Parms;

	this->ProcessEvent ( pFnEscape, &Escape_Parms, NULL );

	return Escape_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePackageMode.CanvasTick
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UClientViewModePackageMode::CanvasTick ( class UCanvas* C )
{
	static UFunction* pFnCanvasTick = NULL;

	if ( ! pFnCanvasTick )
		pFnCanvasTick = (UFunction*) UObject::GObjObjects()->Data[ 46566 ];

	UClientViewModePackageMode_execCanvasTick_Parms CanvasTick_Parms;
	CanvasTick_Parms.C = C;

	this->ProcessEvent ( pFnCanvasTick, &CanvasTick_Parms, NULL );
};

// Function NowGame.ClientViewModePackageMode.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModePackageMode::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46564 ];

	UClientViewModePackageMode_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModePackageMode.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModePackageMode::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46562 ];

	UClientViewModePackageMode_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModePackageMode.GetPackageData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UClientViewModePackageMode::GetPackageData ( )
{
	static UFunction* pFnGetPackageData = NULL;

	if ( ! pFnGetPackageData )
		pFnGetPackageData = (UFunction*) UObject::GObjObjects()->Data[ 46561 ];

	UClientViewModePackageMode_execGetPackageData_Parms GetPackageData_Parms;

	pFnGetPackageData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPackageData, &GetPackageData_Parms, NULL );

	pFnGetPackageData->FunctionFlags |= 0x400;
};

// Function NowGame.ClientViewModePackageMode.ResetPackageData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UClientViewModePackageMode::ResetPackageData ( )
{
	static UFunction* pFnResetPackageData = NULL;

	if ( ! pFnResetPackageData )
		pFnResetPackageData = (UFunction*) UObject::GObjObjects()->Data[ 46560 ];

	UClientViewModePackageMode_execResetPackageData_Parms ResetPackageData_Parms;

	pFnResetPackageData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetPackageData, &ResetPackageData_Parms, NULL );

	pFnResetPackageData->FunctionFlags |= 0x400;
};

// Function NowGame.ClientViewModeStructureBuild.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewModeStructureBuild::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46390 ];

	UClientViewModeStructureBuild_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.Escape
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeStructureBuild::Escape ( )
{
	static UFunction* pFnEscape = NULL;

	if ( ! pFnEscape )
		pFnEscape = (UFunction*) UObject::GObjObjects()->Data[ 46388 ];

	UClientViewModeStructureBuild_execEscape_Parms Escape_Parms;

	this->ProcessEvent ( pFnEscape, &Escape_Parms, NULL );

	return Escape_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeStructureBuild.DrawDebugCylinder
// [0x00024002] 
// Parameters infos:
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 End                            ( CPF_Parm )
// float                          Radius                         ( CPF_Parm )
// int                            Segments                       ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UClientViewModeStructureBuild::DrawDebugCylinder ( struct FVector Start, struct FVector End, float Radius, int Segments, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawDebugCylinder = NULL;

	if ( ! pFnDrawDebugCylinder )
		pFnDrawDebugCylinder = (UFunction*) UObject::GObjObjects()->Data[ 46379 ];

	UClientViewModeStructureBuild_execDrawDebugCylinder_Parms DrawDebugCylinder_Parms;
	memcpy ( &DrawDebugCylinder_Parms.Start, &Start, 0xC );
	memcpy ( &DrawDebugCylinder_Parms.End, &End, 0xC );
	DrawDebugCylinder_Parms.Radius = Radius;
	DrawDebugCylinder_Parms.Segments = Segments;
	DrawDebugCylinder_Parms.R = R;
	DrawDebugCylinder_Parms.G = G;
	DrawDebugCylinder_Parms.B = B;
	DrawDebugCylinder_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawDebugCylinder, &DrawDebugCylinder_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.DrawMoDebugLine
// [0x00024002] 
// Parameters infos:
// struct FVector                 LineStart                      ( CPF_Parm )
// struct FVector                 LineEnd                        ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UClientViewModeStructureBuild::DrawMoDebugLine ( struct FVector LineStart, struct FVector LineEnd, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawMoDebugLine = NULL;

	if ( ! pFnDrawMoDebugLine )
		pFnDrawMoDebugLine = (UFunction*) UObject::GObjObjects()->Data[ 46372 ];

	UClientViewModeStructureBuild_execDrawMoDebugLine_Parms DrawMoDebugLine_Parms;
	memcpy ( &DrawMoDebugLine_Parms.LineStart, &LineStart, 0xC );
	memcpy ( &DrawMoDebugLine_Parms.LineEnd, &LineEnd, 0xC );
	DrawMoDebugLine_Parms.R = R;
	DrawMoDebugLine_Parms.G = G;
	DrawMoDebugLine_Parms.B = B;
	DrawMoDebugLine_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawMoDebugLine, &DrawMoDebugLine_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.IsInGuildTerritory
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLoc                           ( CPF_Parm )

bool UClientViewModeStructureBuild::IsInGuildTerritory ( struct FVector vLoc )
{
	static UFunction* pFnIsInGuildTerritory = NULL;

	if ( ! pFnIsInGuildTerritory )
		pFnIsInGuildTerritory = (UFunction*) UObject::GObjObjects()->Data[ 46360 ];

	UClientViewModeStructureBuild_execIsInGuildTerritory_Parms IsInGuildTerritory_Parms;
	memcpy ( &IsInGuildTerritory_Parms.vLoc, &vLoc, 0xC );

	this->ProcessEvent ( pFnIsInGuildTerritory, &IsInGuildTerritory_Parms, NULL );

	return IsInGuildTerritory_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeStructureBuild.CheckForPreviewAOEActor
// [0x00020002] 
// Parameters infos:

void UClientViewModeStructureBuild::CheckForPreviewAOEActor ( )
{
	static UFunction* pFnCheckForPreviewAOEActor = NULL;

	if ( ! pFnCheckForPreviewAOEActor )
		pFnCheckForPreviewAOEActor = (UFunction*) UObject::GObjObjects()->Data[ 46353 ];

	UClientViewModeStructureBuild_execCheckForPreviewAOEActor_Parms CheckForPreviewAOEActor_Parms;

	this->ProcessEvent ( pFnCheckForPreviewAOEActor, &CheckForPreviewAOEActor_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.GetHouseAoeRange
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowAtlasAvatarPlayerHouse* myHouse                        ( CPF_Parm )

float UClientViewModeStructureBuild::GetHouseAoeRange ( class ANowAtlasAvatarPlayerHouse* myHouse )
{
	static UFunction* pFnGetHouseAoeRange = NULL;

	if ( ! pFnGetHouseAoeRange )
		pFnGetHouseAoeRange = (UFunction*) UObject::GObjObjects()->Data[ 46349 ];

	UClientViewModeStructureBuild_execGetHouseAoeRange_Parms GetHouseAoeRange_Parms;
	GetHouseAoeRange_Parms.myHouse = myHouse;

	this->ProcessEvent ( pFnGetHouseAoeRange, &GetHouseAoeRange_Parms, NULL );

	return GetHouseAoeRange_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeStructureBuild.VerifyPoint
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm )
// unsigned long                  bMessage                       ( CPF_Parm )

bool UClientViewModeStructureBuild::VerifyPoint ( struct FVector WhatPoint, unsigned long bMessage )
{
	static UFunction* pFnVerifyPoint = NULL;

	if ( ! pFnVerifyPoint )
		pFnVerifyPoint = (UFunction*) UObject::GObjObjects()->Data[ 46337 ];

	UClientViewModeStructureBuild_execVerifyPoint_Parms VerifyPoint_Parms;
	memcpy ( &VerifyPoint_Parms.WhatPoint, &WhatPoint, 0xC );
	VerifyPoint_Parms.bMessage = bMessage;

	this->ProcessEvent ( pFnVerifyPoint, &VerifyPoint_Parms, NULL );

	return VerifyPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeStructureBuild.GroundPoint
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm | CPF_OutParm )

bool UClientViewModeStructureBuild::GroundPoint ( struct FVector* WhatPoint )
{
	static UFunction* pFnGroundPoint = NULL;

	if ( ! pFnGroundPoint )
		pFnGroundPoint = (UFunction*) UObject::GObjObjects()->Data[ 46328 ];

	UClientViewModeStructureBuild_execGroundPoint_Parms GroundPoint_Parms;

	this->ProcessEvent ( pFnGroundPoint, &GroundPoint_Parms, NULL );

	if ( WhatPoint )
		memcpy ( WhatPoint, &GroundPoint_Parms.WhatPoint, 0xC );

	return GroundPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeStructureBuild.ResetPreviewMaterials
// [0x00020000] 
// Parameters infos:

void UClientViewModeStructureBuild::ResetPreviewMaterials ( )
{
	static UFunction* pFnResetPreviewMaterials = NULL;

	if ( ! pFnResetPreviewMaterials )
		pFnResetPreviewMaterials = (UFunction*) UObject::GObjObjects()->Data[ 46327 ];

	UClientViewModeStructureBuild_execResetPreviewMaterials_Parms ResetPreviewMaterials_Parms;

	this->ProcessEvent ( pFnResetPreviewMaterials, &ResetPreviewMaterials_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.GetPlacePoint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UClientViewModeStructureBuild::GetPlacePoint ( )
{
	static UFunction* pFnGetPlacePoint = NULL;

	if ( ! pFnGetPlacePoint )
		pFnGetPlacePoint = (UFunction*) UObject::GObjObjects()->Data[ 46320 ];

	UClientViewModeStructureBuild_execGetPlacePoint_Parms GetPlacePoint_Parms;

	this->ProcessEvent ( pFnGetPlacePoint, &GetPlacePoint_Parms, NULL );

	return GetPlacePoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeStructureBuild.CalcHeightAdd
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fMouseY                        ( CPF_Parm )

float UClientViewModeStructureBuild::CalcHeightAdd ( float fMouseY )
{
	static UFunction* pFnCalcHeightAdd = NULL;

	if ( ! pFnCalcHeightAdd )
		pFnCalcHeightAdd = (UFunction*) UObject::GObjObjects()->Data[ 46317 ];

	UClientViewModeStructureBuild_execCalcHeightAdd_Parms CalcHeightAdd_Parms;
	CalcHeightAdd_Parms.fMouseY = fMouseY;

	this->ProcessEvent ( pFnCalcHeightAdd, &CalcHeightAdd_Parms, NULL );

	return CalcHeightAdd_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeStructureBuild.CornerCheck
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm )

bool UClientViewModeStructureBuild::CornerCheck ( struct FVector WhatPoint )
{
	static UFunction* pFnCornerCheck = NULL;

	if ( ! pFnCornerCheck )
		pFnCornerCheck = (UFunction*) UObject::GObjObjects()->Data[ 46307 ];

	UClientViewModeStructureBuild_execCornerCheck_Parms CornerCheck_Parms;
	memcpy ( &CornerCheck_Parms.WhatPoint, &WhatPoint, 0xC );

	this->ProcessEvent ( pFnCornerCheck, &CornerCheck_Parms, NULL );

	return CornerCheck_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeStructureBuild.UpdateStructureHelpers
// [0x00820002] 
// Parameters infos:

void UClientViewModeStructureBuild::UpdateStructureHelpers ( )
{
	static UFunction* pFnUpdateStructureHelpers = NULL;

	if ( ! pFnUpdateStructureHelpers )
		pFnUpdateStructureHelpers = (UFunction*) UObject::GObjObjects()->Data[ 46305 ];

	UClientViewModeStructureBuild_execUpdateStructureHelpers_Parms UpdateStructureHelpers_Parms;

	this->ProcessEvent ( pFnUpdateStructureHelpers, &UpdateStructureHelpers_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.FinalPlaceStructureCheck
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeStructureBuild::FinalPlaceStructureCheck ( )
{
	static UFunction* pFnFinalPlaceStructureCheck = NULL;

	if ( ! pFnFinalPlaceStructureCheck )
		pFnFinalPlaceStructureCheck = (UFunction*) UObject::GObjObjects()->Data[ 46303 ];

	UClientViewModeStructureBuild_execFinalPlaceStructureCheck_Parms FinalPlaceStructureCheck_Parms;

	this->ProcessEvent ( pFnFinalPlaceStructureCheck, &FinalPlaceStructureCheck_Parms, NULL );

	return FinalPlaceStructureCheck_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeStructureBuild.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModeStructureBuild::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46299 ];

	UClientViewModeStructureBuild_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.InitPylonInfo
// [0x00020002] 
// Parameters infos:

void UClientViewModeStructureBuild::InitPylonInfo ( )
{
	static UFunction* pFnInitPylonInfo = NULL;

	if ( ! pFnInitPylonInfo )
		pFnInitPylonInfo = (UFunction*) UObject::GObjObjects()->Data[ 46297 ];

	UClientViewModeStructureBuild_execInitPylonInfo_Parms InitPylonInfo_Parms;

	this->ProcessEvent ( pFnInitPylonInfo, &InitPylonInfo_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.SetDenyMat
// [0x00020002] 
// Parameters infos:

void UClientViewModeStructureBuild::SetDenyMat ( )
{
	static UFunction* pFnSetDenyMat = NULL;

	if ( ! pFnSetDenyMat )
		pFnSetDenyMat = (UFunction*) UObject::GObjObjects()->Data[ 46295 ];

	UClientViewModeStructureBuild_execSetDenyMat_Parms SetDenyMat_Parms;

	this->ProcessEvent ( pFnSetDenyMat, &SetDenyMat_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.SetOkMat
// [0x00020002] 
// Parameters infos:

void UClientViewModeStructureBuild::SetOkMat ( )
{
	static UFunction* pFnSetOkMat = NULL;

	if ( ! pFnSetOkMat )
		pFnSetOkMat = (UFunction*) UObject::GObjObjects()->Data[ 46293 ];

	UClientViewModeStructureBuild_execSetOkMat_Parms SetOkMat_Parms;

	this->ProcessEvent ( pFnSetOkMat, &SetOkMat_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.UpdateHelperMesh
// [0x00020002] 
// Parameters infos:

void UClientViewModeStructureBuild::UpdateHelperMesh ( )
{
	static UFunction* pFnUpdateHelperMesh = NULL;

	if ( ! pFnUpdateHelperMesh )
		pFnUpdateHelperMesh = (UFunction*) UObject::GObjObjects()->Data[ 46292 ];

	UClientViewModeStructureBuild_execUpdateHelperMesh_Parms UpdateHelperMesh_Parms;

	this->ProcessEvent ( pFnUpdateHelperMesh, &UpdateHelperMesh_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.GiveStateMessage
// [0x00020002] 
// Parameters infos:

void UClientViewModeStructureBuild::GiveStateMessage ( )
{
	static UFunction* pFnGiveStateMessage = NULL;

	if ( ! pFnGiveStateMessage )
		pFnGiveStateMessage = (UFunction*) UObject::GObjObjects()->Data[ 46291 ];

	UClientViewModeStructureBuild_execGiveStateMessage_Parms GiveStateMessage_Parms;

	this->ProcessEvent ( pFnGiveStateMessage, &GiveStateMessage_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.PlayPlaceEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void UClientViewModeStructureBuild::eventPlayPlaceEffect ( )
{
	static UFunction* pFnPlayPlaceEffect = NULL;

	if ( ! pFnPlayPlaceEffect )
		pFnPlayPlaceEffect = (UFunction*) UObject::GObjObjects()->Data[ 46288 ];

	UClientViewModeStructureBuild_eventPlayPlaceEffect_Parms PlayPlaceEffect_Parms;

	this->ProcessEvent ( pFnPlayPlaceEffect, &PlayPlaceEffect_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.CheckTouching
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeStructureBuild::CheckTouching ( )
{
	static UFunction* pFnCheckTouching = NULL;

	if ( ! pFnCheckTouching )
		pFnCheckTouching = (UFunction*) UObject::GObjObjects()->Data[ 46279 ];

	UClientViewModeStructureBuild_execCheckTouching_Parms CheckTouching_Parms;

	this->ProcessEvent ( pFnCheckTouching, &CheckTouching_Parms, NULL );

	return CheckTouching_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeStructureBuild.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeStructureBuild::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = (UFunction*) UObject::GObjObjects()->Data[ 46277 ];

	UClientViewModeStructureBuild_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeStructureBuild.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModeStructureBuild::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46274 ];

	UClientViewModeStructureBuild_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModeStructureBuild.GetInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UClientViewModeStructureBuild::GetInfo ( )
{
	static UFunction* pFnGetInfo = NULL;

	if ( ! pFnGetInfo )
		pFnGetInfo = (UFunction*) UObject::GObjObjects()->Data[ 46273 ];

	UClientViewModeStructureBuild_execGetInfo_Parms GetInfo_Parms;

	pFnGetInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInfo, &GetInfo_Parms, NULL );

	pFnGetInfo->FunctionFlags |= 0x400;
};

// Function NowGame.ClientViewModeGateBuild.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewModeGateBuild::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46482 ];

	UClientViewModeGateBuild_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewModeGateBuild.DrawDebugCylinder
// [0x00024002] 
// Parameters infos:
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 End                            ( CPF_Parm )
// float                          Radius                         ( CPF_Parm )
// int                            Segments                       ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UClientViewModeGateBuild::DrawDebugCylinder ( struct FVector Start, struct FVector End, float Radius, int Segments, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawDebugCylinder = NULL;

	if ( ! pFnDrawDebugCylinder )
		pFnDrawDebugCylinder = (UFunction*) UObject::GObjObjects()->Data[ 46473 ];

	UClientViewModeGateBuild_execDrawDebugCylinder_Parms DrawDebugCylinder_Parms;
	memcpy ( &DrawDebugCylinder_Parms.Start, &Start, 0xC );
	memcpy ( &DrawDebugCylinder_Parms.End, &End, 0xC );
	DrawDebugCylinder_Parms.Radius = Radius;
	DrawDebugCylinder_Parms.Segments = Segments;
	DrawDebugCylinder_Parms.R = R;
	DrawDebugCylinder_Parms.G = G;
	DrawDebugCylinder_Parms.B = B;
	DrawDebugCylinder_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawDebugCylinder, &DrawDebugCylinder_Parms, NULL );
};

// Function NowGame.ClientViewModeGateBuild.FindConnectPoint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UClientViewModeGateBuild::FindConnectPoint ( )
{
	static UFunction* pFnFindConnectPoint = NULL;

	if ( ! pFnFindConnectPoint )
		pFnFindConnectPoint = (UFunction*) UObject::GObjObjects()->Data[ 46466 ];

	UClientViewModeGateBuild_execFindConnectPoint_Parms FindConnectPoint_Parms;

	this->ProcessEvent ( pFnFindConnectPoint, &FindConnectPoint_Parms, NULL );

	return FindConnectPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeGateBuild.FindSecondConnectPoint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UClientViewModeGateBuild::FindSecondConnectPoint ( )
{
	static UFunction* pFnFindSecondConnectPoint = NULL;

	if ( ! pFnFindSecondConnectPoint )
		pFnFindSecondConnectPoint = (UFunction*) UObject::GObjObjects()->Data[ 46461 ];

	UClientViewModeGateBuild_execFindSecondConnectPoint_Parms FindSecondConnectPoint_Parms;

	this->ProcessEvent ( pFnFindSecondConnectPoint, &FindSecondConnectPoint_Parms, NULL );

	return FindSecondConnectPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeGateBuild.FindMyConnectPoint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vCloseTo                       ( CPF_Parm )

struct FVector UClientViewModeGateBuild::FindMyConnectPoint ( struct FVector vCloseTo )
{
	static UFunction* pFnFindMyConnectPoint = NULL;

	if ( ! pFnFindMyConnectPoint )
		pFnFindMyConnectPoint = (UFunction*) UObject::GObjObjects()->Data[ 46454 ];

	UClientViewModeGateBuild_execFindMyConnectPoint_Parms FindMyConnectPoint_Parms;
	memcpy ( &FindMyConnectPoint_Parms.vCloseTo, &vCloseTo, 0xC );

	this->ProcessEvent ( pFnFindMyConnectPoint, &FindMyConnectPoint_Parms, NULL );

	return FindMyConnectPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeGateBuild.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModeGateBuild::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46448 ];

	UClientViewModeGateBuild_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModeGateBuild.GetPlacePoint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UClientViewModeGateBuild::GetPlacePoint ( )
{
	static UFunction* pFnGetPlacePoint = NULL;

	if ( ! pFnGetPlacePoint )
		pFnGetPlacePoint = (UFunction*) UObject::GObjObjects()->Data[ 46445 ];

	UClientViewModeGateBuild_execGetPlacePoint_Parms GetPlacePoint_Parms;

	this->ProcessEvent ( pFnGetPlacePoint, &GetPlacePoint_Parms, NULL );

	return GetPlacePoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeGateBuild.GiveStateMessage
// [0x00020002] 
// Parameters infos:

void UClientViewModeGateBuild::GiveStateMessage ( )
{
	static UFunction* pFnGiveStateMessage = NULL;

	if ( ! pFnGiveStateMessage )
		pFnGiveStateMessage = (UFunction*) UObject::GObjObjects()->Data[ 46444 ];

	UClientViewModeGateBuild_execGiveStateMessage_Parms GiveStateMessage_Parms;

	this->ProcessEvent ( pFnGiveStateMessage, &GiveStateMessage_Parms, NULL );
};

// Function NowGame.ClientViewModeGateBuild.Escape
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeGateBuild::Escape ( )
{
	static UFunction* pFnEscape = NULL;

	if ( ! pFnEscape )
		pFnEscape = (UFunction*) UObject::GObjObjects()->Data[ 46442 ];

	UClientViewModeGateBuild_execEscape_Parms Escape_Parms;

	this->ProcessEvent ( pFnEscape, &Escape_Parms, NULL );

	return Escape_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeGateBuild.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModeGateBuild::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46438 ];

	UClientViewModeGateBuild_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModeGateBuild.PlayPlaceEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void UClientViewModeGateBuild::eventPlayPlaceEffect ( )
{
	static UFunction* pFnPlayPlaceEffect = NULL;

	if ( ! pFnPlayPlaceEffect )
		pFnPlayPlaceEffect = (UFunction*) UObject::GObjObjects()->Data[ 46435 ];

	UClientViewModeGateBuild_eventPlayPlaceEffect_Parms PlayPlaceEffect_Parms;

	this->ProcessEvent ( pFnPlayPlaceEffect, &PlayPlaceEffect_Parms, NULL );
};

// Function NowGame.ClientViewModeGateBuild.GetWallConnectPoints
// [0x00820002] 
// Parameters infos:

void UClientViewModeGateBuild::GetWallConnectPoints ( )
{
	static UFunction* pFnGetWallConnectPoints = NULL;

	if ( ! pFnGetWallConnectPoints )
		pFnGetWallConnectPoints = (UFunction*) UObject::GObjObjects()->Data[ 46427 ];

	UClientViewModeGateBuild_execGetWallConnectPoints_Parms GetWallConnectPoints_Parms;

	this->ProcessEvent ( pFnGetWallConnectPoints, &GetWallConnectPoints_Parms, NULL );
};

// Function NowGame.ClientViewModeGateBuild.FinalPlaceStructureCheck
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeGateBuild::FinalPlaceStructureCheck ( )
{
	static UFunction* pFnFinalPlaceStructureCheck = NULL;

	if ( ! pFnFinalPlaceStructureCheck )
		pFnFinalPlaceStructureCheck = (UFunction*) UObject::GObjObjects()->Data[ 46425 ];

	UClientViewModeGateBuild_execFinalPlaceStructureCheck_Parms FinalPlaceStructureCheck_Parms;

	this->ProcessEvent ( pFnFinalPlaceStructureCheck, &FinalPlaceStructureCheck_Parms, NULL );

	return FinalPlaceStructureCheck_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeGateBuild.CheckTouching
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeGateBuild::CheckTouching ( )
{
	static UFunction* pFnCheckTouching = NULL;

	if ( ! pFnCheckTouching )
		pFnCheckTouching = (UFunction*) UObject::GObjObjects()->Data[ 46414 ];

	UClientViewModeGateBuild_execCheckTouching_Parms CheckTouching_Parms;

	this->ProcessEvent ( pFnCheckTouching, &CheckTouching_Parms, NULL );

	return CheckTouching_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeGateBuild.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeGateBuild::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = (UFunction*) UObject::GObjObjects()->Data[ 46412 ];

	UClientViewModeGateBuild_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeGateBuild.GetInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UClientViewModeGateBuild::GetInfo ( )
{
	static UFunction* pFnGetInfo = NULL;

	if ( ! pFnGetInfo )
		pFnGetInfo = (UFunction*) UObject::GObjObjects()->Data[ 46411 ];

	UClientViewModeGateBuild_execGetInfo_Parms GetInfo_Parms;

	pFnGetInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInfo, &GetInfo_Parms, NULL );

	pFnGetInfo->FunctionFlags |= 0x400;
};

// Function NowGame.ClientViewModeMineBuild.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewModeMineBuild::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46547 ];

	UClientViewModeMineBuild_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewModeMineBuild.CloseToStone
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeMineBuild::CloseToStone ( )
{
	static UFunction* pFnCloseToStone = NULL;

	if ( ! pFnCloseToStone )
		pFnCloseToStone = (UFunction*) UObject::GObjObjects()->Data[ 46539 ];

	UClientViewModeMineBuild_execCloseToStone_Parms CloseToStone_Parms;

	this->ProcessEvent ( pFnCloseToStone, &CloseToStone_Parms, NULL );

	return CloseToStone_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeMineBuild.FinalPlaceStructureCheck
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeMineBuild::FinalPlaceStructureCheck ( )
{
	static UFunction* pFnFinalPlaceStructureCheck = NULL;

	if ( ! pFnFinalPlaceStructureCheck )
		pFnFinalPlaceStructureCheck = (UFunction*) UObject::GObjObjects()->Data[ 46537 ];

	UClientViewModeMineBuild_execFinalPlaceStructureCheck_Parms FinalPlaceStructureCheck_Parms;

	this->ProcessEvent ( pFnFinalPlaceStructureCheck, &FinalPlaceStructureCheck_Parms, NULL );

	return FinalPlaceStructureCheck_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeMineBuild.GroundPoint
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm | CPF_OutParm )

bool UClientViewModeMineBuild::GroundPoint ( struct FVector* WhatPoint )
{
	static UFunction* pFnGroundPoint = NULL;

	if ( ! pFnGroundPoint )
		pFnGroundPoint = (UFunction*) UObject::GObjObjects()->Data[ 46534 ];

	UClientViewModeMineBuild_execGroundPoint_Parms GroundPoint_Parms;

	this->ProcessEvent ( pFnGroundPoint, &GroundPoint_Parms, NULL );

	if ( WhatPoint )
		memcpy ( WhatPoint, &GroundPoint_Parms.WhatPoint, 0xC );

	return GroundPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeMineBuild.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModeMineBuild::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46531 ];

	UClientViewModeMineBuild_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModeMineBuild.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeMineBuild::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = (UFunction*) UObject::GObjObjects()->Data[ 46529 ];

	UClientViewModeMineBuild_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeMineBuild.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModeMineBuild::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46527 ];

	UClientViewModeMineBuild_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModePatrolSphereBuild.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewModePatrolSphereBuild::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46577 ];

	UClientViewModePatrolSphereBuild_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewModePatrolSphereBuild.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModePatrolSphereBuild::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46575 ];

	UClientViewModePatrolSphereBuild_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModePatrolSphereBuild.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModePatrolSphereBuild::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46573 ];

	UClientViewModePatrolSphereBuild_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModeWallBuild.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewModeWallBuild::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46987 ];

	UClientViewModeWallBuild_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewModeWallBuild.DrawDebugCylinder
// [0x00024002] 
// Parameters infos:
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 End                            ( CPF_Parm )
// float                          Radius                         ( CPF_Parm )
// int                            Segments                       ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UClientViewModeWallBuild::DrawDebugCylinder ( struct FVector Start, struct FVector End, float Radius, int Segments, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawDebugCylinder = NULL;

	if ( ! pFnDrawDebugCylinder )
		pFnDrawDebugCylinder = (UFunction*) UObject::GObjObjects()->Data[ 46978 ];

	UClientViewModeWallBuild_execDrawDebugCylinder_Parms DrawDebugCylinder_Parms;
	memcpy ( &DrawDebugCylinder_Parms.Start, &Start, 0xC );
	memcpy ( &DrawDebugCylinder_Parms.End, &End, 0xC );
	DrawDebugCylinder_Parms.Radius = Radius;
	DrawDebugCylinder_Parms.Segments = Segments;
	DrawDebugCylinder_Parms.R = R;
	DrawDebugCylinder_Parms.G = G;
	DrawDebugCylinder_Parms.B = B;
	DrawDebugCylinder_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawDebugCylinder, &DrawDebugCylinder_Parms, NULL );
};

// Function NowGame.ClientViewModeWallBuild.FindConnectPoint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UClientViewModeWallBuild::FindConnectPoint ( )
{
	static UFunction* pFnFindConnectPoint = NULL;

	if ( ! pFnFindConnectPoint )
		pFnFindConnectPoint = (UFunction*) UObject::GObjObjects()->Data[ 46971 ];

	UClientViewModeWallBuild_execFindConnectPoint_Parms FindConnectPoint_Parms;

	this->ProcessEvent ( pFnFindConnectPoint, &FindConnectPoint_Parms, NULL );

	return FindConnectPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeWallBuild.FindSecondConnectPoint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UClientViewModeWallBuild::FindSecondConnectPoint ( )
{
	static UFunction* pFnFindSecondConnectPoint = NULL;

	if ( ! pFnFindSecondConnectPoint )
		pFnFindSecondConnectPoint = (UFunction*) UObject::GObjObjects()->Data[ 46966 ];

	UClientViewModeWallBuild_execFindSecondConnectPoint_Parms FindSecondConnectPoint_Parms;

	this->ProcessEvent ( pFnFindSecondConnectPoint, &FindSecondConnectPoint_Parms, NULL );

	return FindSecondConnectPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeWallBuild.FindMyConnectPoint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vCloseTo                       ( CPF_Parm )

struct FVector UClientViewModeWallBuild::FindMyConnectPoint ( struct FVector vCloseTo )
{
	static UFunction* pFnFindMyConnectPoint = NULL;

	if ( ! pFnFindMyConnectPoint )
		pFnFindMyConnectPoint = (UFunction*) UObject::GObjObjects()->Data[ 46959 ];

	UClientViewModeWallBuild_execFindMyConnectPoint_Parms FindMyConnectPoint_Parms;
	memcpy ( &FindMyConnectPoint_Parms.vCloseTo, &vCloseTo, 0xC );

	this->ProcessEvent ( pFnFindMyConnectPoint, &FindMyConnectPoint_Parms, NULL );

	return FindMyConnectPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeWallBuild.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModeWallBuild::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46953 ];

	UClientViewModeWallBuild_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModeWallBuild.GetPlacePoint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UClientViewModeWallBuild::GetPlacePoint ( )
{
	static UFunction* pFnGetPlacePoint = NULL;

	if ( ! pFnGetPlacePoint )
		pFnGetPlacePoint = (UFunction*) UObject::GObjObjects()->Data[ 46949 ];

	UClientViewModeWallBuild_execGetPlacePoint_Parms GetPlacePoint_Parms;

	this->ProcessEvent ( pFnGetPlacePoint, &GetPlacePoint_Parms, NULL );

	return GetPlacePoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeWallBuild.GiveStateMessage
// [0x00020002] 
// Parameters infos:

void UClientViewModeWallBuild::GiveStateMessage ( )
{
	static UFunction* pFnGiveStateMessage = NULL;

	if ( ! pFnGiveStateMessage )
		pFnGiveStateMessage = (UFunction*) UObject::GObjObjects()->Data[ 46948 ];

	UClientViewModeWallBuild_execGiveStateMessage_Parms GiveStateMessage_Parms;

	this->ProcessEvent ( pFnGiveStateMessage, &GiveStateMessage_Parms, NULL );
};

// Function NowGame.ClientViewModeWallBuild.Escape
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeWallBuild::Escape ( )
{
	static UFunction* pFnEscape = NULL;

	if ( ! pFnEscape )
		pFnEscape = (UFunction*) UObject::GObjObjects()->Data[ 46946 ];

	UClientViewModeWallBuild_execEscape_Parms Escape_Parms;

	this->ProcessEvent ( pFnEscape, &Escape_Parms, NULL );

	return Escape_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeWallBuild.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModeWallBuild::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46944 ];

	UClientViewModeWallBuild_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModeWallBuild.PlayPlaceEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void UClientViewModeWallBuild::eventPlayPlaceEffect ( )
{
	static UFunction* pFnPlayPlaceEffect = NULL;

	if ( ! pFnPlayPlaceEffect )
		pFnPlayPlaceEffect = (UFunction*) UObject::GObjObjects()->Data[ 46941 ];

	UClientViewModeWallBuild_eventPlayPlaceEffect_Parms PlayPlaceEffect_Parms;

	this->ProcessEvent ( pFnPlayPlaceEffect, &PlayPlaceEffect_Parms, NULL );
};

// Function NowGame.ClientViewModeWallBuild.GetWallConnectPoints
// [0x00820002] 
// Parameters infos:

void UClientViewModeWallBuild::GetWallConnectPoints ( )
{
	static UFunction* pFnGetWallConnectPoints = NULL;

	if ( ! pFnGetWallConnectPoints )
		pFnGetWallConnectPoints = (UFunction*) UObject::GObjObjects()->Data[ 46934 ];

	UClientViewModeWallBuild_execGetWallConnectPoints_Parms GetWallConnectPoints_Parms;

	this->ProcessEvent ( pFnGetWallConnectPoints, &GetWallConnectPoints_Parms, NULL );
};

// Function NowGame.ClientViewModeWallBuild.FinalPlaceStructureCheck
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeWallBuild::FinalPlaceStructureCheck ( )
{
	static UFunction* pFnFinalPlaceStructureCheck = NULL;

	if ( ! pFnFinalPlaceStructureCheck )
		pFnFinalPlaceStructureCheck = (UFunction*) UObject::GObjObjects()->Data[ 46932 ];

	UClientViewModeWallBuild_execFinalPlaceStructureCheck_Parms FinalPlaceStructureCheck_Parms;

	this->ProcessEvent ( pFnFinalPlaceStructureCheck, &FinalPlaceStructureCheck_Parms, NULL );

	return FinalPlaceStructureCheck_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeWallBuild.CheckTouching
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeWallBuild::CheckTouching ( )
{
	static UFunction* pFnCheckTouching = NULL;

	if ( ! pFnCheckTouching )
		pFnCheckTouching = (UFunction*) UObject::GObjObjects()->Data[ 46921 ];

	UClientViewModeWallBuild_execCheckTouching_Parms CheckTouching_Parms;

	this->ProcessEvent ( pFnCheckTouching, &CheckTouching_Parms, NULL );

	return CheckTouching_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeWallBuild.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeWallBuild::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = (UFunction*) UObject::GObjObjects()->Data[ 46919 ];

	UClientViewModeWallBuild_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeWallBuild.GetInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UClientViewModeWallBuild::GetInfo ( )
{
	static UFunction* pFnGetInfo = NULL;

	if ( ! pFnGetInfo )
		pFnGetInfo = (UFunction*) UObject::GObjObjects()->Data[ 46918 ];

	UClientViewModeWallBuild_execGetInfo_Parms GetInfo_Parms;

	pFnGetInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInfo, &GetInfo_Parms, NULL );

	pFnGetInfo->FunctionFlags |= 0x400;
};

// Function NowGame.ClientViewModeTSNpcPlace.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewModeTSNpcPlace::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46869 ];

	UClientViewModeTSNpcPlace_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewModeTSNpcPlace.UpdateSelected
// [0x00020002] 
// Parameters infos:

void UClientViewModeTSNpcPlace::UpdateSelected ( )
{
	static UFunction* pFnUpdateSelected = NULL;

	if ( ! pFnUpdateSelected )
		pFnUpdateSelected = (UFunction*) UObject::GObjObjects()->Data[ 46864 ];

	UClientViewModeTSNpcPlace_execUpdateSelected_Parms UpdateSelected_Parms;

	this->ProcessEvent ( pFnUpdateSelected, &UpdateSelected_Parms, NULL );
};

// Function NowGame.ClientViewModeTSNpcPlace.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModeTSNpcPlace::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46862 ];

	UClientViewModeTSNpcPlace_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModeTSNpcPlace.FindTerritoryStructures
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeTSNpcPlace::FindTerritoryStructures ( )
{
	static UFunction* pFnFindTerritoryStructures = NULL;

	if ( ! pFnFindTerritoryStructures )
		pFnFindTerritoryStructures = (UFunction*) UObject::GObjObjects()->Data[ 46847 ];

	UClientViewModeTSNpcPlace_execFindTerritoryStructures_Parms FindTerritoryStructures_Parms;

	this->ProcessEvent ( pFnFindTerritoryStructures, &FindTerritoryStructures_Parms, NULL );

	return FindTerritoryStructures_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeTSNpcPlace.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModeTSNpcPlace::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46845 ];

	UClientViewModeTSNpcPlace_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModeTSNpcPlace.GetSlot
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UClientViewModeTSNpcPlace::GetSlot ( )
{
	static UFunction* pFnGetSlot = NULL;

	if ( ! pFnGetSlot )
		pFnGetSlot = (UFunction*) UObject::GObjObjects()->Data[ 46843 ];

	UClientViewModeTSNpcPlace_execGetSlot_Parms GetSlot_Parms;

	this->ProcessEvent ( pFnGetSlot, &GetSlot_Parms, NULL );

	return GetSlot_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeTSNpcPlace.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeTSNpcPlace::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = (UFunction*) UObject::GObjObjects()->Data[ 46840 ];

	UClientViewModeTSNpcPlace_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeTSNpcPlace.GetItemData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UClientViewModeTSNpcPlace::GetItemData ( )
{
	static UFunction* pFnGetItemData = NULL;

	if ( ! pFnGetItemData )
		pFnGetItemData = (UFunction*) UObject::GObjObjects()->Data[ 46839 ];

	UClientViewModeTSNpcPlace_execGetItemData_Parms GetItemData_Parms;

	pFnGetItemData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemData, &GetItemData_Parms, NULL );

	pFnGetItemData->FunctionFlags |= 0x400;
};

// Function NowGame.ClientViewModeTSUpgradeTier.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewModeTSUpgradeTier::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46908 ];

	UClientViewModeTSUpgradeTier_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewModeTSUpgradeTier.UpdateSelected
// [0x00020002] 
// Parameters infos:

void UClientViewModeTSUpgradeTier::UpdateSelected ( )
{
	static UFunction* pFnUpdateSelected = NULL;

	if ( ! pFnUpdateSelected )
		pFnUpdateSelected = (UFunction*) UObject::GObjObjects()->Data[ 46903 ];

	UClientViewModeTSUpgradeTier_execUpdateSelected_Parms UpdateSelected_Parms;

	this->ProcessEvent ( pFnUpdateSelected, &UpdateSelected_Parms, NULL );
};

// Function NowGame.ClientViewModeTSUpgradeTier.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModeTSUpgradeTier::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46901 ];

	UClientViewModeTSUpgradeTier_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModeTSUpgradeTier.FindTerritoryStructures
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeTSUpgradeTier::FindTerritoryStructures ( )
{
	static UFunction* pFnFindTerritoryStructures = NULL;

	if ( ! pFnFindTerritoryStructures )
		pFnFindTerritoryStructures = (UFunction*) UObject::GObjObjects()->Data[ 46895 ];

	UClientViewModeTSUpgradeTier_execFindTerritoryStructures_Parms FindTerritoryStructures_Parms;

	this->ProcessEvent ( pFnFindTerritoryStructures, &FindTerritoryStructures_Parms, NULL );

	return FindTerritoryStructures_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeTSUpgradeTier.SetAllMaterials
// [0x00020002] 
// Parameters infos:
// class ANowStaticMeshActorSpawnable* aStructure                     ( CPF_Parm )
// class UMaterialInstanceConstant* NewMat                         ( CPF_Parm )

void UClientViewModeTSUpgradeTier::SetAllMaterials ( class ANowStaticMeshActorSpawnable* aStructure, class UMaterialInstanceConstant* NewMat )
{
	static UFunction* pFnSetAllMaterials = NULL;

	if ( ! pFnSetAllMaterials )
		pFnSetAllMaterials = (UFunction*) UObject::GObjObjects()->Data[ 46891 ];

	UClientViewModeTSUpgradeTier_execSetAllMaterials_Parms SetAllMaterials_Parms;
	SetAllMaterials_Parms.aStructure = aStructure;
	SetAllMaterials_Parms.NewMat = NewMat;

	this->ProcessEvent ( pFnSetAllMaterials, &SetAllMaterials_Parms, NULL );
};

// Function NowGame.ClientViewModeTSUpgradeTier.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModeTSUpgradeTier::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46889 ];

	UClientViewModeTSUpgradeTier_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModeTSUpgradeTier.GetSlot
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UClientViewModeTSUpgradeTier::GetSlot ( )
{
	static UFunction* pFnGetSlot = NULL;

	if ( ! pFnGetSlot )
		pFnGetSlot = (UFunction*) UObject::GObjObjects()->Data[ 46887 ];

	UClientViewModeTSUpgradeTier_execGetSlot_Parms GetSlot_Parms;

	this->ProcessEvent ( pFnGetSlot, &GetSlot_Parms, NULL );

	return GetSlot_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeTSUpgradeTier.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeTSUpgradeTier::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = (UFunction*) UObject::GObjObjects()->Data[ 46880 ];

	UClientViewModeTSUpgradeTier_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeTSUpgradeTier.IniteTSUpgradeTier
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UClientViewModeTSUpgradeTier::IniteTSUpgradeTier ( )
{
	static UFunction* pFnIniteTSUpgradeTier = NULL;

	if ( ! pFnIniteTSUpgradeTier )
		pFnIniteTSUpgradeTier = (UFunction*) UObject::GObjObjects()->Data[ 46879 ];

	UClientViewModeTSUpgradeTier_execIniteTSUpgradeTier_Parms IniteTSUpgradeTier_Parms;

	pFnIniteTSUpgradeTier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIniteTSUpgradeTier, &IniteTSUpgradeTier_Parms, NULL );

	pFnIniteTSUpgradeTier->FunctionFlags |= 0x400;
};

// Function NowGame.CombatSystemNew.GetNowPawn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* UCombatSystemNew::eventGetNowPawn ( )
{
	static UFunction* pFnGetNowPawn = NULL;

	if ( ! pFnGetNowPawn )
		pFnGetNowPawn = (UFunction*) UObject::GObjObjects()->Data[ 47059 ];

	UCombatSystemNew_eventGetNowPawn_Parms GetNowPawn_Parms;

	this->ProcessEvent ( pFnGetNowPawn, &GetNowPawn_Parms, NULL );

	return GetNowPawn_Parms.ReturnValue;
};

// Function NowGame.CombatSystemNew.TickCombat
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemNew::TickCombat ( float DeltaTime )
{
	static UFunction* pFnTickCombat = NULL;

	if ( ! pFnTickCombat )
		pFnTickCombat = (UFunction*) UObject::GObjObjects()->Data[ 47057 ];

	UCombatSystemNew_execTickCombat_Parms TickCombat_Parms;
	TickCombat_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombat, &TickCombat_Parms, NULL );
};

// Function NowGame.CombatSystemNew.GetTimerCount
// [0x00024002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

float UCombatSystemNew::GetTimerCount ( struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnGetTimerCount = NULL;

	if ( ! pFnGetTimerCount )
		pFnGetTimerCount = (UFunction*) UObject::GObjObjects()->Data[ 47053 ];

	UCombatSystemNew_execGetTimerCount_Parms GetTimerCount_Parms;
	memcpy ( &GetTimerCount_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	GetTimerCount_Parms.inObj = inObj;

	this->ProcessEvent ( pFnGetTimerCount, &GetTimerCount_Parms, NULL );

	return GetTimerCount_Parms.ReturnValue;
};

// Function NowGame.CombatSystemNew.IsTimerActive
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

bool UCombatSystemNew::IsTimerActive ( struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnIsTimerActive = NULL;

	if ( ! pFnIsTimerActive )
		pFnIsTimerActive = (UFunction*) UObject::GObjObjects()->Data[ 47049 ];

	UCombatSystemNew_execIsTimerActive_Parms IsTimerActive_Parms;
	memcpy ( &IsTimerActive_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	IsTimerActive_Parms.inObj = inObj;

	this->ProcessEvent ( pFnIsTimerActive, &IsTimerActive_Parms, NULL );

	return IsTimerActive_Parms.ReturnValue;
};

// Function NowGame.CombatSystemNew.ClearTimer
// [0x00024002] 
// Parameters infos:
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemNew::ClearTimer ( struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnClearTimer = NULL;

	if ( ! pFnClearTimer )
		pFnClearTimer = (UFunction*) UObject::GObjObjects()->Data[ 47046 ];

	UCombatSystemNew_execClearTimer_Parms ClearTimer_Parms;
	memcpy ( &ClearTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	ClearTimer_Parms.inObj = inObj;

	this->ProcessEvent ( pFnClearTimer, &ClearTimer_Parms, NULL );
};

// Function NowGame.CombatSystemNew.SetTimer
// [0x00024002] 
// Parameters infos:
// float                          InRate                         ( CPF_Parm )
// unsigned long                  inbLoop                        ( CPF_OptionalParm | CPF_Parm )
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemNew::SetTimer ( float InRate, unsigned long inbLoop, struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnSetTimer = NULL;

	if ( ! pFnSetTimer )
		pFnSetTimer = (UFunction*) UObject::GObjObjects()->Data[ 47041 ];

	UCombatSystemNew_execSetTimer_Parms SetTimer_Parms;
	SetTimer_Parms.InRate = InRate;
	SetTimer_Parms.inbLoop = inbLoop;
	memcpy ( &SetTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	SetTimer_Parms.inObj = inObj;

	this->ProcessEvent ( pFnSetTimer, &SetTimer_Parms, NULL );
};

// Function NowGame.CombatSystemNew.ReturnHitInfo
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPhysicsAsset*           TestPhys                       ( CPF_Parm )
// struct FName                   HitBone                        ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

int UCombatSystemNew::ReturnHitInfo ( class UPhysicsAsset* TestPhys, struct FName HitBone, class AActor* HitActor )
{
	static UFunction* pFnReturnHitInfo = NULL;

	if ( ! pFnReturnHitInfo )
		pFnReturnHitInfo = (UFunction*) UObject::GObjObjects()->Data[ 47034 ];

	UCombatSystemNew_execReturnHitInfo_Parms ReturnHitInfo_Parms;
	ReturnHitInfo_Parms.TestPhys = TestPhys;
	memcpy ( &ReturnHitInfo_Parms.HitBone, &HitBone, 0x8 );
	ReturnHitInfo_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnReturnHitInfo, &ReturnHitInfo_Parms, NULL );

	return ReturnHitInfo_Parms.ReturnValue;
};

// Function NowGame.CombatSystemNew.getHitPart
// [0x00C20002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  HitActor                       ( CPF_Parm )
// struct FVector                 StartTrace                     ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// struct FVector                 HitLoc                         ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm | CPF_OutParm )

int UCombatSystemNew::getHitPart ( class AActor* HitActor, struct FVector StartTrace, struct FVector EndTrace, struct FVector HitLoc, struct FTraceHitInfo* HitInfo )
{
	static UFunction* pFngetHitPart = NULL;

	if ( ! pFngetHitPart )
		pFngetHitPart = (UFunction*) UObject::GObjObjects()->Data[ 47021 ];

	UCombatSystemNew_execgetHitPart_Parms getHitPart_Parms;
	getHitPart_Parms.HitActor = HitActor;
	memcpy ( &getHitPart_Parms.StartTrace, &StartTrace, 0xC );
	memcpy ( &getHitPart_Parms.EndTrace, &EndTrace, 0xC );
	memcpy ( &getHitPart_Parms.HitLoc, &HitLoc, 0xC );

	this->ProcessEvent ( pFngetHitPart, &getHitPart_Parms, NULL );

	if ( HitInfo )
		memcpy ( HitInfo, &getHitPart_Parms.HitInfo, 0x1C );

	return getHitPart_Parms.ReturnValue;
};

// Function NowGame.CombatSystemNew.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UCombatSystemNew::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 47019 ];

	UCombatSystemNew_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.CombatSystemNew.ClientHitFeedback
// [0x00020000] 
// Parameters infos:
// unsigned long                  bStructure                     ( CPF_Parm )
// unsigned long                  bBlocked                       ( CPF_Parm )

void UCombatSystemNew::ClientHitFeedback ( unsigned long bStructure, unsigned long bBlocked )
{
	static UFunction* pFnClientHitFeedback = NULL;

	if ( ! pFnClientHitFeedback )
		pFnClientHitFeedback = (UFunction*) UObject::GObjObjects()->Data[ 47016 ];

	UCombatSystemNew_execClientHitFeedback_Parms ClientHitFeedback_Parms;
	ClientHitFeedback_Parms.bStructure = bStructure;
	ClientHitFeedback_Parms.bBlocked = bBlocked;

	this->ProcessEvent ( pFnClientHitFeedback, &ClientHitFeedback_Parms, NULL );
};

// Function NowGame.CombatSystemNew.DrawDebugInfo
// [0x00020000] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UCombatSystemNew::DrawDebugInfo ( class UCanvas* C )
{
	static UFunction* pFnDrawDebugInfo = NULL;

	if ( ! pFnDrawDebugInfo )
		pFnDrawDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 47014 ];

	UCombatSystemNew_execDrawDebugInfo_Parms DrawDebugInfo_Parms;
	DrawDebugInfo_Parms.C = C;

	this->ProcessEvent ( pFnDrawDebugInfo, &DrawDebugInfo_Parms, NULL );
};

// Function NowGame.CombatSystemNew.CancelCharge
// [0x00020000] 
// Parameters infos:

void UCombatSystemNew::CancelCharge ( )
{
	static UFunction* pFnCancelCharge = NULL;

	if ( ! pFnCancelCharge )
		pFnCancelCharge = (UFunction*) UObject::GObjObjects()->Data[ 47013 ];

	UCombatSystemNew_execCancelCharge_Parms CancelCharge_Parms;

	this->ProcessEvent ( pFnCancelCharge, &CancelCharge_Parms, NULL );
};

// Function NowGame.CombatSystemNew.UpdateWeaponStats
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   MyPawn                         ( CPF_Parm )

void UCombatSystemNew::eventUpdateWeaponStats ( class APawn* MyPawn )
{
	static UFunction* pFnUpdateWeaponStats = NULL;

	if ( ! pFnUpdateWeaponStats )
		pFnUpdateWeaponStats = (UFunction*) UObject::GObjObjects()->Data[ 47011 ];

	UCombatSystemNew_eventUpdateWeaponStats_Parms UpdateWeaponStats_Parms;
	UpdateWeaponStats_Parms.MyPawn = MyPawn;

	this->ProcessEvent ( pFnUpdateWeaponStats, &UpdateWeaponStats_Parms, NULL );
};

// Function NowGame.CombatSystemNew.PlayerWasHit
// [0x00020000] 
// Parameters infos:
// int                            lastBoneID                     ( CPF_Parm )

void UCombatSystemNew::PlayerWasHit ( int lastBoneID )
{
	static UFunction* pFnPlayerWasHit = NULL;

	if ( ! pFnPlayerWasHit )
		pFnPlayerWasHit = (UFunction*) UObject::GObjObjects()->Data[ 47009 ];

	UCombatSystemNew_execPlayerWasHit_Parms PlayerWasHit_Parms;
	PlayerWasHit_Parms.lastBoneID = lastBoneID;

	this->ProcessEvent ( pFnPlayerWasHit, &PlayerWasHit_Parms, NULL );
};

// Function NowGame.CombatSystemNew.SetIntParam
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// int                            NewParam                       ( CPF_Parm )

void UCombatSystemNew::eventSetIntParam ( int NewParam )
{
	static UFunction* pFnSetIntParam = NULL;

	if ( ! pFnSetIntParam )
		pFnSetIntParam = (UFunction*) UObject::GObjObjects()->Data[ 47007 ];

	UCombatSystemNew_eventSetIntParam_Parms SetIntParam_Parms;
	SetIntParam_Parms.NewParam = NewParam;

	this->ProcessEvent ( pFnSetIntParam, &SetIntParam_Parms, NULL );
};

// Function NowGame.CombatSystemNew.ChargeReady
// [0x00020000] 
// Parameters infos:

void UCombatSystemNew::ChargeReady ( )
{
	static UFunction* pFnChargeReady = NULL;

	if ( ! pFnChargeReady )
		pFnChargeReady = (UFunction*) UObject::GObjObjects()->Data[ 47006 ];

	UCombatSystemNew_execChargeReady_Parms ChargeReady_Parms;

	this->ProcessEvent ( pFnChargeReady, &ChargeReady_Parms, NULL );
};

// Function NowGame.CombatSystemNew.StopAltFire
// [0x00024000] 
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemNew::StopAltFire ( unsigned long bForce )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = (UFunction*) UObject::GObjObjects()->Data[ 47004 ];

	UCombatSystemNew_execStopAltFire_Parms StopAltFire_Parms;
	StopAltFire_Parms.bForce = bForce;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.CombatSystemNew.StartAltFire
// [0x00020000] 
// Parameters infos:

void UCombatSystemNew::StartAltFire ( )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = (UFunction*) UObject::GObjObjects()->Data[ 47003 ];

	UCombatSystemNew_execStartAltFire_Parms StartAltFire_Parms;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.CombatSystemNew.StopFire
// [0x00024000] 
// Parameters infos:
// unsigned long                  TargetSelf                     ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemNew::StopFire ( unsigned long TargetSelf )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 47001 ];

	UCombatSystemNew_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.TargetSelf = TargetSelf;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.CombatSystemNew.StartFire
// [0x00020000] 
// Parameters infos:

void UCombatSystemNew::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 47000 ];

	UCombatSystemNew_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.CombatSystemNew.ExitMode
// [0x00020000] 
// Parameters infos:

void UCombatSystemNew::ExitMode ( )
{
	static UFunction* pFnExitMode = NULL;

	if ( ! pFnExitMode )
		pFnExitMode = (UFunction*) UObject::GObjObjects()->Data[ 46999 ];

	UCombatSystemNew_execExitMode_Parms ExitMode_Parms;

	this->ProcessEvent ( pFnExitMode, &ExitMode_Parms, NULL );
};

// Function NowGame.CombatSystemNew.InitMode
// [0x00020000] 
// Parameters infos:

void UCombatSystemNew::InitMode ( )
{
	static UFunction* pFnInitMode = NULL;

	if ( ! pFnInitMode )
		pFnInitMode = (UFunction*) UObject::GObjObjects()->Data[ 46998 ];

	UCombatSystemNew_execInitMode_Parms InitMode_Parms;

	this->ProcessEvent ( pFnInitMode, &InitMode_Parms, NULL );
};

// Function NowGame.CombatSystemNew.UseFireOnWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UCombatSystemNew::UseFireOnWeapon ( )
{
	static UFunction* pFnUseFireOnWeapon = NULL;

	if ( ! pFnUseFireOnWeapon )
		pFnUseFireOnWeapon = (UFunction*) UObject::GObjObjects()->Data[ 46997 ];

	UCombatSystemNew_execUseFireOnWeapon_Parms UseFireOnWeapon_Parms;

	pFnUseFireOnWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseFireOnWeapon, &UseFireOnWeapon_Parms, NULL );

	pFnUseFireOnWeapon->FunctionFlags |= 0x400;
};

// Function NowGame.CombatSystemNew.StartClientAnimations
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 WhatAction                     ( CPF_Parm | CPF_NeedCtorLink )
// float                          AnimRate                       ( CPF_Parm )

void UCombatSystemNew::StartClientAnimations ( struct FString WhatAction, float AnimRate )
{
	static UFunction* pFnStartClientAnimations = NULL;

	if ( ! pFnStartClientAnimations )
		pFnStartClientAnimations = (UFunction*) UObject::GObjObjects()->Data[ 46994 ];

	UCombatSystemNew_execStartClientAnimations_Parms StartClientAnimations_Parms;
	memcpy ( &StartClientAnimations_Parms.WhatAction, &WhatAction, 0xC );
	StartClientAnimations_Parms.AnimRate = AnimRate;

	pFnStartClientAnimations->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartClientAnimations, &StartClientAnimations_Parms, NULL );

	pFnStartClientAnimations->FunctionFlags |= 0x400;
};

// Function NowGame.CombatSystemFishingNew.ProjectileHitWater
// [0x00020002] 
// Parameters infos:
// class AActor*                  WaterVolume                    ( CPF_Parm )
// float                          Depth                          ( CPF_Parm )

void UCombatSystemFishingNew::ProjectileHitWater ( class AActor* WaterVolume, float Depth )
{
	static UFunction* pFnProjectileHitWater = NULL;

	if ( ! pFnProjectileHitWater )
		pFnProjectileHitWater = (UFunction*) UObject::GObjObjects()->Data[ 47146 ];

	UCombatSystemFishingNew_execProjectileHitWater_Parms ProjectileHitWater_Parms;
	ProjectileHitWater_Parms.WaterVolume = WaterVolume;
	ProjectileHitWater_Parms.Depth = Depth;

	this->ProcessEvent ( pFnProjectileHitWater, &ProjectileHitWater_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.ProjectileHit
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FTraceHitInfo           hitInfoTmp                     ( CPF_Parm )
// struct FVector                 StartTrace                     ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// struct FVector                 HitLocTmp                      ( CPF_Parm )

void UCombatSystemFishingNew::ProjectileHit ( class AActor* Target, struct FTraceHitInfo hitInfoTmp, struct FVector StartTrace, struct FVector EndTrace, struct FVector HitLocTmp )
{
	static UFunction* pFnProjectileHit = NULL;

	if ( ! pFnProjectileHit )
		pFnProjectileHit = (UFunction*) UObject::GObjObjects()->Data[ 47140 ];

	UCombatSystemFishingNew_execProjectileHit_Parms ProjectileHit_Parms;
	ProjectileHit_Parms.Target = Target;
	memcpy ( &ProjectileHit_Parms.hitInfoTmp, &hitInfoTmp, 0x1C );
	memcpy ( &ProjectileHit_Parms.StartTrace, &StartTrace, 0xC );
	memcpy ( &ProjectileHit_Parms.EndTrace, &EndTrace, 0xC );
	memcpy ( &ProjectileHit_Parms.HitLocTmp, &HitLocTmp, 0xC );

	this->ProcessEvent ( pFnProjectileHit, &ProjectileHit_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.ProjectileLanded
// [0x00020002] 
// Parameters infos:
// struct FVector                 Loc                            ( CPF_Parm )
// class AActor*                  Volume                         ( CPF_Parm )

void UCombatSystemFishingNew::ProjectileLanded ( struct FVector Loc, class AActor* Volume )
{
	static UFunction* pFnProjectileLanded = NULL;

	if ( ! pFnProjectileLanded )
		pFnProjectileLanded = (UFunction*) UObject::GObjObjects()->Data[ 47137 ];

	UCombatSystemFishingNew_execProjectileLanded_Parms ProjectileLanded_Parms;
	memcpy ( &ProjectileLanded_Parms.Loc, &Loc, 0xC );
	ProjectileLanded_Parms.Volume = Volume;

	this->ProcessEvent ( pFnProjectileLanded, &ProjectileLanded_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.TellB
// [0x00024002] 
// Parameters infos:
// unsigned char                  I                              ( CPF_Parm )
// struct FString                 Value                          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UCombatSystemFishingNew::TellB ( unsigned char I, struct FString Value )
{
	static UFunction* pFnTellB = NULL;

	if ( ! pFnTellB )
		pFnTellB = (UFunction*) UObject::GObjObjects()->Data[ 47134 ];

	UCombatSystemFishingNew_execTellB_Parms TellB_Parms;
	TellB_Parms.I = I;
	memcpy ( &TellB_Parms.Value, &Value, 0xC );

	this->ProcessEvent ( pFnTellB, &TellB_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.AbortFishing
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::AbortFishing ( )
{
	static UFunction* pFnAbortFishing = NULL;

	if ( ! pFnAbortFishing )
		pFnAbortFishing = (UFunction*) UObject::GObjObjects()->Data[ 47133 ];

	UCombatSystemFishingNew_execAbortFishing_Parms AbortFishing_Parms;

	this->ProcessEvent ( pFnAbortFishing, &AbortFishing_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.TickCombat
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemFishingNew::TickCombat ( float DeltaTime )
{
	static UFunction* pFnTickCombat = NULL;

	if ( ! pFnTickCombat )
		pFnTickCombat = (UFunction*) UObject::GObjObjects()->Data[ 47123 ];

	UCombatSystemFishingNew_execTickCombat_Parms TickCombat_Parms;
	TickCombat_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombat, &TickCombat_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.RemoveAllProjectiles
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::RemoveAllProjectiles ( )
{
	static UFunction* pFnRemoveAllProjectiles = NULL;

	if ( ! pFnRemoveAllProjectiles )
		pFnRemoveAllProjectiles = (UFunction*) UObject::GObjObjects()->Data[ 47120 ];

	UCombatSystemFishingNew_execRemoveAllProjectiles_Parms RemoveAllProjectiles_Parms;

	this->ProcessEvent ( pFnRemoveAllProjectiles, &RemoveAllProjectiles_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.Tug
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::Tug ( )
{
	static UFunction* pFnTug = NULL;

	if ( ! pFnTug )
		pFnTug = (UFunction*) UObject::GObjObjects()->Data[ 47118 ];

	UCombatSystemFishingNew_execTug_Parms Tug_Parms;

	this->ProcessEvent ( pFnTug, &Tug_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.Throw
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::Throw ( )
{
	static UFunction* pFnThrow = NULL;

	if ( ! pFnThrow )
		pFnThrow = (UFunction*) UObject::GObjObjects()->Data[ 47106 ];

	UCombatSystemFishingNew_execThrow_Parms Throw_Parms;

	this->ProcessEvent ( pFnThrow, &Throw_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.CheckMove
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UCombatSystemFishingNew::CheckMove ( )
{
	static UFunction* pFnCheckMove = NULL;

	if ( ! pFnCheckMove )
		pFnCheckMove = (UFunction*) UObject::GObjObjects()->Data[ 47104 ];

	UCombatSystemFishingNew_execCheckMove_Parms CheckMove_Parms;

	this->ProcessEvent ( pFnCheckMove, &CheckMove_Parms, NULL );

	return CheckMove_Parms.ReturnValue;
};

// Function NowGame.CombatSystemFishingNew.PlayerFishEvent
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iValue                         ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )

void UCombatSystemFishingNew::eventPlayerFishEvent ( int iValue, float fValue )
{
	static UFunction* pFnPlayerFishEvent = NULL;

	if ( ! pFnPlayerFishEvent )
		pFnPlayerFishEvent = (UFunction*) UObject::GObjObjects()->Data[ 47100 ];

	UCombatSystemFishingNew_eventPlayerFishEvent_Parms PlayerFishEvent_Parms;
	PlayerFishEvent_Parms.iValue = iValue;
	PlayerFishEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnPlayerFishEvent, &PlayerFishEvent_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.PlayFishEffect
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            WhatEffect                     ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemFishingNew::eventPlayFishEffect ( int WhatEffect )
{
	static UFunction* pFnPlayFishEffect = NULL;

	if ( ! pFnPlayFishEffect )
		pFnPlayFishEffect = (UFunction*) UObject::GObjObjects()->Data[ 47097 ];

	UCombatSystemFishingNew_eventPlayFishEffect_Parms PlayFishEffect_Parms;
	PlayFishEffect_Parms.WhatEffect = WhatEffect;

	this->ProcessEvent ( pFnPlayFishEffect, &PlayFishEffect_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.StopFire
// [0x00024002] 
// Parameters infos:
// unsigned long                  TargetSelf                     ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemFishingNew::StopFire ( unsigned long TargetSelf )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 47094 ];

	UCombatSystemFishingNew_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.TargetSelf = TargetSelf;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.StartFire
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 47090 ];

	UCombatSystemFishingNew_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.ExitMode
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::ExitMode ( )
{
	static UFunction* pFnExitMode = NULL;

	if ( ! pFnExitMode )
		pFnExitMode = (UFunction*) UObject::GObjObjects()->Data[ 47088 ];

	UCombatSystemFishingNew_execExitMode_Parms ExitMode_Parms;

	this->ProcessEvent ( pFnExitMode, &ExitMode_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.InitMode
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::InitMode ( )
{
	static UFunction* pFnInitMode = NULL;

	if ( ! pFnInitMode )
		pFnInitMode = (UFunction*) UObject::GObjObjects()->Data[ 47083 ];

	UCombatSystemFishingNew_execInitMode_Parms InitMode_Parms;

	this->ProcessEvent ( pFnInitMode, &InitMode_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.UpdateTugAnimations
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  PlayerPull                     ( CPF_Parm )
// unsigned long                  FishPull                       ( CPF_Parm )

void UCombatSystemFishingNew::eventUpdateTugAnimations ( unsigned long PlayerPull, unsigned long FishPull )
{
	static UFunction* pFnUpdateTugAnimations = NULL;

	if ( ! pFnUpdateTugAnimations )
		pFnUpdateTugAnimations = (UFunction*) UObject::GObjObjects()->Data[ 47079 ];

	UCombatSystemFishingNew_eventUpdateTugAnimations_Parms UpdateTugAnimations_Parms;
	UpdateTugAnimations_Parms.PlayerPull = PlayerPull;
	UpdateTugAnimations_Parms.FishPull = FishPull;

	this->ProcessEvent ( pFnUpdateTugAnimations, &UpdateTugAnimations_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UCombatSystemFishingNew::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 47074 ];

	UCombatSystemFishingNew_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.SwitchPlayerTugState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bState                         ( CPF_Parm )
// float                          dTime                          ( CPF_Parm )

void UCombatSystemFishingNew::SwitchPlayerTugState ( unsigned long bState, float dTime )
{
	static UFunction* pFnSwitchPlayerTugState = NULL;

	if ( ! pFnSwitchPlayerTugState )
		pFnSwitchPlayerTugState = (UFunction*) UObject::GObjObjects()->Data[ 47071 ];

	UCombatSystemFishingNew_execSwitchPlayerTugState_Parms SwitchPlayerTugState_Parms;
	SwitchPlayerTugState_Parms.bState = bState;
	SwitchPlayerTugState_Parms.dTime = dTime;

	pFnSwitchPlayerTugState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSwitchPlayerTugState, &SwitchPlayerTugState_Parms, NULL );

	pFnSwitchPlayerTugState->FunctionFlags |= 0x400;
};

// Function NowGame.CombatSystemFishingNew.GetBlockResult
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UCombatSystemFishingNew::GetBlockResult ( )
{
	static UFunction* pFnGetBlockResult = NULL;

	if ( ! pFnGetBlockResult )
		pFnGetBlockResult = (UFunction*) UObject::GObjObjects()->Data[ 47069 ];

	UCombatSystemFishingNew_execGetBlockResult_Parms GetBlockResult_Parms;

	pFnGetBlockResult->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBlockResult, &GetBlockResult_Parms, NULL );

	pFnGetBlockResult->FunctionFlags |= 0x400;

	return GetBlockResult_Parms.ReturnValue;
};

// Function NowGame.CombatSystemFishingNew.GetSuccessValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UCombatSystemFishingNew::GetSuccessValue ( )
{
	static UFunction* pFnGetSuccessValue = NULL;

	if ( ! pFnGetSuccessValue )
		pFnGetSuccessValue = (UFunction*) UObject::GObjObjects()->Data[ 47067 ];

	UCombatSystemFishingNew_execGetSuccessValue_Parms GetSuccessValue_Parms;

	pFnGetSuccessValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSuccessValue, &GetSuccessValue_Parms, NULL );

	pFnGetSuccessValue->FunctionFlags |= 0x400;

	return GetSuccessValue_Parms.ReturnValue;
};

// Function NowGame.CombatSystemFishingNew.UpdateTugSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

bool UCombatSystemFishingNew::UpdateTugSession ( float DeltaTime )
{
	static UFunction* pFnUpdateTugSession = NULL;

	if ( ! pFnUpdateTugSession )
		pFnUpdateTugSession = (UFunction*) UObject::GObjObjects()->Data[ 47064 ];

	UCombatSystemFishingNew_execUpdateTugSession_Parms UpdateTugSession_Parms;
	UpdateTugSession_Parms.DeltaTime = DeltaTime;

	pFnUpdateTugSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateTugSession, &UpdateTugSession_Parms, NULL );

	pFnUpdateTugSession->FunctionFlags |= 0x400;

	return UpdateTugSession_Parms.ReturnValue;
};

// Function NowGame.CombatSystemFishingNew.InitTugwarGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UCombatSystemFishingNew::InitTugwarGame ( )
{
	static UFunction* pFnInitTugwarGame = NULL;

	if ( ! pFnInitTugwarGame )
		pFnInitTugwarGame = (UFunction*) UObject::GObjObjects()->Data[ 47063 ];

	UCombatSystemFishingNew_execInitTugwarGame_Parms InitTugwarGame_Parms;

	pFnInitTugwarGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitTugwarGame, &InitTugwarGame_Parms, NULL );

	pFnInitTugwarGame->FunctionFlags |= 0x400;
};

// Function NowGame.CombatSystemMagicNew.TraceAndGetTarget
// [0x00820002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          SpellRange                     ( CPF_Parm )

class AActor* UCombatSystemMagicNew::TraceAndGetTarget ( float SpellRange )
{
	static UFunction* pFnTraceAndGetTarget = NULL;

	if ( ! pFnTraceAndGetTarget )
		pFnTraceAndGetTarget = (UFunction*) UObject::GObjObjects()->Data[ 47292 ];

	UCombatSystemMagicNew_execTraceAndGetTarget_Parms TraceAndGetTarget_Parms;
	TraceAndGetTarget_Parms.SpellRange = SpellRange;

	this->ProcessEvent ( pFnTraceAndGetTarget, &TraceAndGetTarget_Parms, NULL );

	return TraceAndGetTarget_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.CheckForFXEmitter
// [0x00020002] 
// Parameters infos:

void UCombatSystemMagicNew::CheckForFXEmitter ( )
{
	static UFunction* pFnCheckForFXEmitter = NULL;

	if ( ! pFnCheckForFXEmitter )
		pFnCheckForFXEmitter = (UFunction*) UObject::GObjObjects()->Data[ 47291 ];

	UCombatSystemMagicNew_execCheckForFXEmitter_Parms CheckForFXEmitter_Parms;

	this->ProcessEvent ( pFnCheckForFXEmitter, &CheckForFXEmitter_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.StartChargeFX
// [0x00020002] 
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )

void UCombatSystemMagicNew::StartChargeFX ( int SpellID )
{
	static UFunction* pFnStartChargeFX = NULL;

	if ( ! pFnStartChargeFX )
		pFnStartChargeFX = (UFunction*) UObject::GObjObjects()->Data[ 47287 ];

	UCombatSystemMagicNew_execStartChargeFX_Parms StartChargeFX_Parms;
	StartChargeFX_Parms.SpellID = SpellID;

	this->ProcessEvent ( pFnStartChargeFX, &StartChargeFX_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.StartNewChargeFX
// [0x00024002] 
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )
// class UAnimNotify_PlayIndexedParticleEffect* AnimNotifyData                 ( CPF_Const | CPF_OptionalParm | CPF_Parm )

void UCombatSystemMagicNew::StartNewChargeFX ( int SpellID, class UAnimNotify_PlayIndexedParticleEffect* AnimNotifyData )
{
	static UFunction* pFnStartNewChargeFX = NULL;

	if ( ! pFnStartNewChargeFX )
		pFnStartNewChargeFX = (UFunction*) UObject::GObjObjects()->Data[ 47282 ];

	UCombatSystemMagicNew_execStartNewChargeFX_Parms StartNewChargeFX_Parms;
	StartNewChargeFX_Parms.SpellID = SpellID;
	StartNewChargeFX_Parms.AnimNotifyData = AnimNotifyData;

	this->ProcessEvent ( pFnStartNewChargeFX, &StartNewChargeFX_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.spawnLateEffect
// [0x00020002] 
// Parameters infos:

void UCombatSystemMagicNew::spawnLateEffect ( )
{
	static UFunction* pFnspawnLateEffect = NULL;

	if ( ! pFnspawnLateEffect )
		pFnspawnLateEffect = (UFunction*) UObject::GObjObjects()->Data[ 47279 ];

	UCombatSystemMagicNew_execspawnLateEffect_Parms spawnLateEffect_Parms;

	this->ProcessEvent ( pFnspawnLateEffect, &spawnLateEffect_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.StartReleaseFX
// [0x00824002] 
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )
// unsigned long                  selfPwnage                     ( CPF_OptionalParm | CPF_Parm )
// struct FString                 SocketName                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct FString                 BoneName                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UCombatSystemMagicNew::StartReleaseFX ( int SpellID, unsigned long selfPwnage, struct FString SocketName, struct FString BoneName )
{
	static UFunction* pFnStartReleaseFX = NULL;

	if ( ! pFnStartReleaseFX )
		pFnStartReleaseFX = (UFunction*) UObject::GObjObjects()->Data[ 47264 ];

	UCombatSystemMagicNew_execStartReleaseFX_Parms StartReleaseFX_Parms;
	StartReleaseFX_Parms.SpellID = SpellID;
	StartReleaseFX_Parms.selfPwnage = selfPwnage;
	memcpy ( &StartReleaseFX_Parms.SocketName, &SocketName, 0xC );
	memcpy ( &StartReleaseFX_Parms.BoneName, &BoneName, 0xC );

	this->ProcessEvent ( pFnStartReleaseFX, &StartReleaseFX_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.StopParticleFX
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UCombatSystemMagicNew::StopParticleFX ( int Index )
{
	static UFunction* pFnStopParticleFX = NULL;

	if ( ! pFnStopParticleFX )
		pFnStopParticleFX = (UFunction*) UObject::GObjObjects()->Data[ 47262 ];

	UCombatSystemMagicNew_execStopParticleFX_Parms StopParticleFX_Parms;
	StopParticleFX_Parms.Index = Index;

	this->ProcessEvent ( pFnStopParticleFX, &StopParticleFX_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.GetNewTraceEndStraight
// [0x00C20002] 
// Parameters infos:
// int                            Speed                          ( CPF_Parm )
// struct FVector                 EndShot                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 StartShot                      ( CPF_Parm | CPF_OutParm )

void UCombatSystemMagicNew::GetNewTraceEndStraight ( int Speed, struct FVector* EndShot, struct FVector* StartShot )
{
	static UFunction* pFnGetNewTraceEndStraight = NULL;

	if ( ! pFnGetNewTraceEndStraight )
		pFnGetNewTraceEndStraight = (UFunction*) UObject::GObjObjects()->Data[ 47257 ];

	UCombatSystemMagicNew_execGetNewTraceEndStraight_Parms GetNewTraceEndStraight_Parms;
	GetNewTraceEndStraight_Parms.Speed = Speed;

	this->ProcessEvent ( pFnGetNewTraceEndStraight, &GetNewTraceEndStraight_Parms, NULL );

	if ( EndShot )
		memcpy ( EndShot, &GetNewTraceEndStraight_Parms.EndShot, 0xC );

	if ( StartShot )
		memcpy ( StartShot, &GetNewTraceEndStraight_Parms.StartShot, 0xC );
};

// Function NowGame.CombatSystemMagicNew.GetTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* UCombatSystemMagicNew::GetTarget ( )
{
	static UFunction* pFnGetTarget = NULL;

	if ( ! pFnGetTarget )
		pFnGetTarget = (UFunction*) UObject::GObjObjects()->Data[ 47255 ];

	UCombatSystemMagicNew_execGetTarget_Parms GetTarget_Parms;

	this->ProcessEvent ( pFnGetTarget, &GetTarget_Parms, NULL );

	return GetTarget_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.CancelSpells
// [0x00020002] 
// Parameters infos:

void UCombatSystemMagicNew::CancelSpells ( )
{
	static UFunction* pFnCancelSpells = NULL;

	if ( ! pFnCancelSpells )
		pFnCancelSpells = (UFunction*) UObject::GObjObjects()->Data[ 47247 ];

	UCombatSystemMagicNew_execCancelSpells_Parms CancelSpells_Parms;

	this->ProcessEvent ( pFnCancelSpells, &CancelSpells_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.SetMainEffectEmitter
// [0x00020002] 
// Parameters infos:
// class UParticleSystem*         PS                             ( CPF_Parm )

void UCombatSystemMagicNew::SetMainEffectEmitter ( class UParticleSystem* PS )
{
	static UFunction* pFnSetMainEffectEmitter = NULL;

	if ( ! pFnSetMainEffectEmitter )
		pFnSetMainEffectEmitter = (UFunction*) UObject::GObjObjects()->Data[ 47243 ];

	UCombatSystemMagicNew_execSetMainEffectEmitter_Parms SetMainEffectEmitter_Parms;
	SetMainEffectEmitter_Parms.PS = PS;

	this->ProcessEvent ( pFnSetMainEffectEmitter, &SetMainEffectEmitter_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.traceLocation
// [0x00824002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 traceMethod                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 TargetLoc                      ( CPF_OptionalParm | CPF_Parm )

struct FVector UCombatSystemMagicNew::traceLocation ( struct FString traceMethod, struct FVector TargetLoc )
{
	static UFunction* pFntraceLocation = NULL;

	if ( ! pFntraceLocation )
		pFntraceLocation = (UFunction*) UObject::GObjObjects()->Data[ 47233 ];

	UCombatSystemMagicNew_exectraceLocation_Parms traceLocation_Parms;
	memcpy ( &traceLocation_Parms.traceMethod, &traceMethod, 0xC );
	memcpy ( &traceLocation_Parms.TargetLoc, &TargetLoc, 0xC );

	this->ProcessEvent ( pFntraceLocation, &traceLocation_Parms, NULL );

	return traceLocation_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.traceCharacter
// [0x00C24002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 traceMethod                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 TargetLoc                      ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm | CPF_OutParm )

bool UCombatSystemMagicNew::traceCharacter ( struct FString traceMethod, struct FVector TargetLoc, class AActor** HitActor )
{
	static UFunction* pFntraceCharacter = NULL;

	if ( ! pFntraceCharacter )
		pFntraceCharacter = (UFunction*) UObject::GObjObjects()->Data[ 47221 ];

	UCombatSystemMagicNew_exectraceCharacter_Parms traceCharacter_Parms;
	memcpy ( &traceCharacter_Parms.traceMethod, &traceMethod, 0xC );
	memcpy ( &traceCharacter_Parms.TargetLoc, &TargetLoc, 0xC );

	this->ProcessEvent ( pFntraceCharacter, &traceCharacter_Parms, NULL );

	if ( HitActor )
		*HitActor = traceCharacter_Parms.HitActor;

	return traceCharacter_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.spellRelease
// [0x00824002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SpellID                        ( CPF_Parm )
// struct FVector                 TargetLoc                      ( CPF_OptionalParm | CPF_Parm )

bool UCombatSystemMagicNew::spellRelease ( int SpellID, struct FVector TargetLoc )
{
	static UFunction* pFnspellRelease = NULL;

	if ( ! pFnspellRelease )
		pFnspellRelease = (UFunction*) UObject::GObjObjects()->Data[ 47207 ];

	UCombatSystemMagicNew_execspellRelease_Parms spellRelease_Parms;
	spellRelease_Parms.SpellID = SpellID;
	memcpy ( &spellRelease_Parms.TargetLoc, &TargetLoc, 0xC );

	this->ProcessEvent ( pFnspellRelease, &spellRelease_Parms, NULL );

	return spellRelease_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.heldTooLong
// [0x00020002] 
// Parameters infos:

void UCombatSystemMagicNew::heldTooLong ( )
{
	static UFunction* pFnheldTooLong = NULL;

	if ( ! pFnheldTooLong )
		pFnheldTooLong = (UFunction*) UObject::GObjObjects()->Data[ 47206 ];

	UCombatSystemMagicNew_execheldTooLong_Parms heldTooLong_Parms;

	this->ProcessEvent ( pFnheldTooLong, &heldTooLong_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.ChargeReady
// [0x00020002] 
// Parameters infos:

void UCombatSystemMagicNew::ChargeReady ( )
{
	static UFunction* pFnChargeReady = NULL;

	if ( ! pFnChargeReady )
		pFnChargeReady = (UFunction*) UObject::GObjObjects()->Data[ 47204 ];

	UCombatSystemMagicNew_execChargeReady_Parms ChargeReady_Parms;

	this->ProcessEvent ( pFnChargeReady, &ChargeReady_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.SpellCharge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SpellID                        ( CPF_Parm )

bool UCombatSystemMagicNew::SpellCharge ( int SpellID )
{
	static UFunction* pFnSpellCharge = NULL;

	if ( ! pFnSpellCharge )
		pFnSpellCharge = (UFunction*) UObject::GObjObjects()->Data[ 47199 ];

	UCombatSystemMagicNew_execSpellCharge_Parms SpellCharge_Parms;
	SpellCharge_Parms.SpellID = SpellID;

	this->ProcessEvent ( pFnSpellCharge, &SpellCharge_Parms, NULL );

	return SpellCharge_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.checkActionAvailability
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SpellID                        ( CPF_Parm )

bool UCombatSystemMagicNew::checkActionAvailability ( int SpellID )
{
	static UFunction* pFncheckActionAvailability = NULL;

	if ( ! pFncheckActionAvailability )
		pFncheckActionAvailability = (UFunction*) UObject::GObjObjects()->Data[ 47187 ];

	UCombatSystemMagicNew_execcheckActionAvailability_Parms checkActionAvailability_Parms;
	checkActionAvailability_Parms.SpellID = SpellID;

	this->ProcessEvent ( pFncheckActionAvailability, &checkActionAvailability_Parms, NULL );

	return checkActionAvailability_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.SpellAction
// [0x00020002] 
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )

void UCombatSystemMagicNew::SpellAction ( int SpellID )
{
	static UFunction* pFnSpellAction = NULL;

	if ( ! pFnSpellAction )
		pFnSpellAction = (UFunction*) UObject::GObjObjects()->Data[ 47174 ];

	UCombatSystemMagicNew_execSpellAction_Parms SpellAction_Parms;
	SpellAction_Parms.SpellID = SpellID;

	this->ProcessEvent ( pFnSpellAction, &SpellAction_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.CheckGCD
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  spellRelease                   ( CPF_Parm )

bool UCombatSystemMagicNew::CheckGCD ( unsigned long spellRelease )
{
	static UFunction* pFnCheckGCD = NULL;

	if ( ! pFnCheckGCD )
		pFnCheckGCD = (UFunction*) UObject::GObjObjects()->Data[ 47170 ];

	UCombatSystemMagicNew_execCheckGCD_Parms CheckGCD_Parms;
	CheckGCD_Parms.spellRelease = spellRelease;

	this->ProcessEvent ( pFnCheckGCD, &CheckGCD_Parms, NULL );

	return CheckGCD_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UCombatSystemMagicNew::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 47167 ];

	UCombatSystemMagicNew_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.TickCombat
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemMagicNew::TickCombat ( float DeltaTime )
{
	static UFunction* pFnTickCombat = NULL;

	if ( ! pFnTickCombat )
		pFnTickCombat = (UFunction*) UObject::GObjObjects()->Data[ 47165 ];

	UCombatSystemMagicNew_execTickCombat_Parms TickCombat_Parms;
	TickCombat_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombat, &TickCombat_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.DrawDebugInfo
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UCombatSystemMagicNew::DrawDebugInfo ( class UCanvas* C )
{
	static UFunction* pFnDrawDebugInfo = NULL;

	if ( ! pFnDrawDebugInfo )
		pFnDrawDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 47161 ];

	UCombatSystemMagicNew_execDrawDebugInfo_Parms DrawDebugInfo_Parms;
	DrawDebugInfo_Parms.C = C;

	this->ProcessEvent ( pFnDrawDebugInfo, &DrawDebugInfo_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.ExitMode
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::ExitMode ( )
{
	static UFunction* pFnExitMode = NULL;

	if ( ! pFnExitMode )
		pFnExitMode = (UFunction*) UObject::GObjObjects()->Data[ 47621 ];

	UCombatSystemMeleeNew_execExitMode_Parms ExitMode_Parms;

	this->ProcessEvent ( pFnExitMode, &ExitMode_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.GetHitForce
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UCombatSystemMeleeNew::GetHitForce ( )
{
	static UFunction* pFnGetHitForce = NULL;

	if ( ! pFnGetHitForce )
		pFnGetHitForce = (UFunction*) UObject::GObjObjects()->Data[ 47616 ];

	UCombatSystemMeleeNew_execGetHitForce_Parms GetHitForce_Parms;

	this->ProcessEvent ( pFnGetHitForce, &GetHitForce_Parms, NULL );

	return GetHitForce_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.GetMeleeHitPart
// [0x00C24002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StarTrace                      ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_OptionalParm | CPF_Parm )
// int                            HitPart                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 HitLoc                         ( CPF_Parm | CPF_OutParm )

bool UCombatSystemMeleeNew::GetMeleeHitPart ( struct FVector StarTrace, struct FVector EndTrace, class AActor* HitActor, int* HitPart, struct FVector* HitLoc )
{
	static UFunction* pFnGetMeleeHitPart = NULL;

	if ( ! pFnGetMeleeHitPart )
		pFnGetMeleeHitPart = (UFunction*) UObject::GObjObjects()->Data[ 47599 ];

	UCombatSystemMeleeNew_execGetMeleeHitPart_Parms GetMeleeHitPart_Parms;
	memcpy ( &GetMeleeHitPart_Parms.StarTrace, &StarTrace, 0xC );
	memcpy ( &GetMeleeHitPart_Parms.EndTrace, &EndTrace, 0xC );
	GetMeleeHitPart_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnGetMeleeHitPart, &GetMeleeHitPart_Parms, NULL );

	if ( HitPart )
		*HitPart = GetMeleeHitPart_Parms.HitPart;

	if ( HitLoc )
		memcpy ( HitLoc, &GetMeleeHitPart_Parms.HitLoc, 0xC );

	return GetMeleeHitPart_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.GetMeleeBashHit
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UCombatSystemMeleeNew::GetMeleeBashHit ( )
{
	static UFunction* pFnGetMeleeBashHit = NULL;

	if ( ! pFnGetMeleeBashHit )
		pFnGetMeleeBashHit = (UFunction*) UObject::GObjObjects()->Data[ 47582 ];

	UCombatSystemMeleeNew_execGetMeleeBashHit_Parms GetMeleeBashHit_Parms;

	this->ProcessEvent ( pFnGetMeleeBashHit, &GetMeleeBashHit_Parms, NULL );

	return GetMeleeBashHit_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.GetMeleeChargeAnimation
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UCombatSystemMeleeNew::GetMeleeChargeAnimation ( )
{
	static UFunction* pFnGetMeleeChargeAnimation = NULL;

	if ( ! pFnGetMeleeChargeAnimation )
		pFnGetMeleeChargeAnimation = (UFunction*) UObject::GObjObjects()->Data[ 47580 ];

	UCombatSystemMeleeNew_execGetMeleeChargeAnimation_Parms GetMeleeChargeAnimation_Parms;

	this->ProcessEvent ( pFnGetMeleeChargeAnimation, &GetMeleeChargeAnimation_Parms, NULL );

	return GetMeleeChargeAnimation_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.GetMountSwing
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UCombatSystemMeleeNew::GetMountSwing ( )
{
	static UFunction* pFnGetMountSwing = NULL;

	if ( ! pFnGetMountSwing )
		pFnGetMountSwing = (UFunction*) UObject::GObjObjects()->Data[ 47578 ];

	UCombatSystemMeleeNew_execGetMountSwing_Parms GetMountSwing_Parms;

	this->ProcessEvent ( pFnGetMountSwing, &GetMountSwing_Parms, NULL );

	return GetMountSwing_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.ResetTraceFunction
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::ResetTraceFunction ( )
{
	static UFunction* pFnResetTraceFunction = NULL;

	if ( ! pFnResetTraceFunction )
		pFnResetTraceFunction = (UFunction*) UObject::GObjObjects()->Data[ 47577 ];

	UCombatSystemMeleeNew_execResetTraceFunction_Parms ResetTraceFunction_Parms;

	this->ProcessEvent ( pFnResetTraceFunction, &ResetTraceFunction_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.HandleTraceHit
// [0x00020002] 
// Parameters infos:
// struct FVector                 outHitLocation                 ( CPF_Parm )
// int                            outHitPart                     ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

void UCombatSystemMeleeNew::HandleTraceHit ( struct FVector outHitLocation, int outHitPart, class AActor* HitActor )
{
	static UFunction* pFnHandleTraceHit = NULL;

	if ( ! pFnHandleTraceHit )
		pFnHandleTraceHit = (UFunction*) UObject::GObjObjects()->Data[ 47573 ];

	UCombatSystemMeleeNew_execHandleTraceHit_Parms HandleTraceHit_Parms;
	memcpy ( &HandleTraceHit_Parms.outHitLocation, &outHitLocation, 0xC );
	HandleTraceHit_Parms.outHitPart = outHitPart;
	HandleTraceHit_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnHandleTraceHit, &HandleTraceHit_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.DoCostantTrace
// [0x00820002] 
// Parameters infos:

void UCombatSystemMeleeNew::DoCostantTrace ( )
{
	static UFunction* pFnDoCostantTrace = NULL;

	if ( ! pFnDoCostantTrace )
		pFnDoCostantTrace = (UFunction*) UObject::GObjObjects()->Data[ 47561 ];

	UCombatSystemMeleeNew_execDoCostantTrace_Parms DoCostantTrace_Parms;

	this->ProcessEvent ( pFnDoCostantTrace, &DoCostantTrace_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UCombatSystemMeleeNew::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 47558 ];

	UCombatSystemMeleeNew_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.TickCombat
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemMeleeNew::TickCombat ( float DeltaTime )
{
	static UFunction* pFnTickCombat = NULL;

	if ( ! pFnTickCombat )
		pFnTickCombat = (UFunction*) UObject::GObjObjects()->Data[ 47549 ];

	UCombatSystemMeleeNew_execTickCombat_Parms TickCombat_Parms;
	TickCombat_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombat, &TickCombat_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.IsPointCloserToHandle
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vHitPoint                      ( CPF_Parm )
// struct FVector                 vStarTrace                     ( CPF_Parm )
// struct FVector                 vEndTrace                      ( CPF_Parm )

bool UCombatSystemMeleeNew::IsPointCloserToHandle ( struct FVector vHitPoint, struct FVector vStarTrace, struct FVector vEndTrace )
{
	static UFunction* pFnIsPointCloserToHandle = NULL;

	if ( ! pFnIsPointCloserToHandle )
		pFnIsPointCloserToHandle = (UFunction*) UObject::GObjObjects()->Data[ 47539 ];

	UCombatSystemMeleeNew_execIsPointCloserToHandle_Parms IsPointCloserToHandle_Parms;
	memcpy ( &IsPointCloserToHandle_Parms.vHitPoint, &vHitPoint, 0xC );
	memcpy ( &IsPointCloserToHandle_Parms.vStarTrace, &vStarTrace, 0xC );
	memcpy ( &IsPointCloserToHandle_Parms.vEndTrace, &vEndTrace, 0xC );

	this->ProcessEvent ( pFnIsPointCloserToHandle, &IsPointCloserToHandle_Parms, NULL );

	return IsPointCloserToHandle_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.CheckWeaponCollision
// [0x00820002] 
// Parameters infos:

void UCombatSystemMeleeNew::CheckWeaponCollision ( )
{
	static UFunction* pFnCheckWeaponCollision = NULL;

	if ( ! pFnCheckWeaponCollision )
		pFnCheckWeaponCollision = (UFunction*) UObject::GObjObjects()->Data[ 47524 ];

	UCombatSystemMeleeNew_execCheckWeaponCollision_Parms CheckWeaponCollision_Parms;

	this->ProcessEvent ( pFnCheckWeaponCollision, &CheckWeaponCollision_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.CheckMountThrustCollision
// [0x00820002] 
// Parameters infos:

void UCombatSystemMeleeNew::CheckMountThrustCollision ( )
{
	static UFunction* pFnCheckMountThrustCollision = NULL;

	if ( ! pFnCheckMountThrustCollision )
		pFnCheckMountThrustCollision = (UFunction*) UObject::GObjObjects()->Data[ 47513 ];

	UCombatSystemMeleeNew_execCheckMountThrustCollision_Parms CheckMountThrustCollision_Parms;

	this->ProcessEvent ( pFnCheckMountThrustCollision, &CheckMountThrustCollision_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.UpdateArmIK
// [0x00020002] 
// Parameters infos:
// float                          NewStr                         ( CPF_Parm )

void UCombatSystemMeleeNew::UpdateArmIK ( float NewStr )
{
	static UFunction* pFnUpdateArmIK = NULL;

	if ( ! pFnUpdateArmIK )
		pFnUpdateArmIK = (UFunction*) UObject::GObjObjects()->Data[ 47510 ];

	UCombatSystemMeleeNew_execUpdateArmIK_Parms UpdateArmIK_Parms;
	UpdateArmIK_Parms.NewStr = NewStr;

	this->ProcessEvent ( pFnUpdateArmIK, &UpdateArmIK_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.CheckForStructureTarget
// [0x00820002] 
// Parameters infos:

void UCombatSystemMeleeNew::CheckForStructureTarget ( )
{
	static UFunction* pFnCheckForStructureTarget = NULL;

	if ( ! pFnCheckForStructureTarget )
		pFnCheckForStructureTarget = (UFunction*) UObject::GObjObjects()->Data[ 47498 ];

	UCombatSystemMeleeNew_execCheckForStructureTarget_Parms CheckForStructureTarget_Parms;

	this->ProcessEvent ( pFnCheckForStructureTarget, &CheckForStructureTarget_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.SortDel
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )
// class AActor*                  B                              ( CPF_Parm )

int UCombatSystemMeleeNew::SortDel ( class AActor* A, class AActor* B )
{
	static UFunction* pFnSortDel = NULL;

	if ( ! pFnSortDel )
		pFnSortDel = (UFunction*) UObject::GObjObjects()->Data[ 47321 ];

	UCombatSystemMeleeNew_execSortDel_Parms SortDel_Parms;
	SortDel_Parms.A = A;
	SortDel_Parms.B = B;

	this->ProcessEvent ( pFnSortDel, &SortDel_Parms, NULL );

	return SortDel_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.GetPossibleTargets
// [0x00820002] 
// Parameters infos:

void UCombatSystemMeleeNew::GetPossibleTargets ( )
{
	static UFunction* pFnGetPossibleTargets = NULL;

	if ( ! pFnGetPossibleTargets )
		pFnGetPossibleTargets = (UFunction*) UObject::GObjObjects()->Data[ 47489 ];

	UCombatSystemMeleeNew_execGetPossibleTargets_Parms GetPossibleTargets_Parms;

	this->ProcessEvent ( pFnGetPossibleTargets, &GetPossibleTargets_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.ClientHitFeedback
// [0x00020002] 
// Parameters infos:
// unsigned long                  bStructure                     ( CPF_Parm )
// unsigned long                  bBlocked                       ( CPF_Parm )

void UCombatSystemMeleeNew::ClientHitFeedback ( unsigned long bStructure, unsigned long bBlocked )
{
	static UFunction* pFnClientHitFeedback = NULL;

	if ( ! pFnClientHitFeedback )
		pFnClientHitFeedback = (UFunction*) UObject::GObjObjects()->Data[ 47485 ];

	UCombatSystemMeleeNew_execClientHitFeedback_Parms ClientHitFeedback_Parms;
	ClientHitFeedback_Parms.bStructure = bStructure;
	ClientHitFeedback_Parms.bBlocked = bBlocked;

	this->ProcessEvent ( pFnClientHitFeedback, &ClientHitFeedback_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.CancelCharge
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::CancelCharge ( )
{
	static UFunction* pFnCancelCharge = NULL;

	if ( ! pFnCancelCharge )
		pFnCancelCharge = (UFunction*) UObject::GObjObjects()->Data[ 47484 ];

	UCombatSystemMeleeNew_execCancelCharge_Parms CancelCharge_Parms;

	this->ProcessEvent ( pFnCancelCharge, &CancelCharge_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.StopAltFire
// [0x00024002] 
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemMeleeNew::StopAltFire ( unsigned long bForce )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = (UFunction*) UObject::GObjObjects()->Data[ 47482 ];

	UCombatSystemMeleeNew_execStopAltFire_Parms StopAltFire_Parms;
	StopAltFire_Parms.bForce = bForce;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.StartAltFire
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::StartAltFire ( )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = (UFunction*) UObject::GObjObjects()->Data[ 47480 ];

	UCombatSystemMeleeNew_execStartAltFire_Parms StartAltFire_Parms;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.SendHitToServer
// [0x00020002] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            HitPart                        ( CPF_Parm )
// class AActor*                  HitTarget                      ( CPF_Parm )

void UCombatSystemMeleeNew::SendHitToServer ( struct FVector HitLocation, int HitPart, class AActor* HitTarget )
{
	static UFunction* pFnSendHitToServer = NULL;

	if ( ! pFnSendHitToServer )
		pFnSendHitToServer = (UFunction*) UObject::GObjObjects()->Data[ 47476 ];

	UCombatSystemMeleeNew_execSendHitToServer_Parms SendHitToServer_Parms;
	memcpy ( &SendHitToServer_Parms.HitLocation, &HitLocation, 0xC );
	SendHitToServer_Parms.HitPart = HitPart;
	SendHitToServer_Parms.HitTarget = HitTarget;

	this->ProcessEvent ( pFnSendHitToServer, &SendHitToServer_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.UnTriggerBloodTrail
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::UnTriggerBloodTrail ( )
{
	static UFunction* pFnUnTriggerBloodTrail = NULL;

	if ( ! pFnUnTriggerBloodTrail )
		pFnUnTriggerBloodTrail = (UFunction*) UObject::GObjObjects()->Data[ 47475 ];

	UCombatSystemMeleeNew_execUnTriggerBloodTrail_Parms UnTriggerBloodTrail_Parms;

	this->ProcessEvent ( pFnUnTriggerBloodTrail, &UnTriggerBloodTrail_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.TriggerBloodTrail
// [0x00824002] 
// Parameters infos:
// unsigned long                  bBlunt                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bRight                         ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemMeleeNew::TriggerBloodTrail ( unsigned long bBlunt, unsigned long bRight )
{
	static UFunction* pFnTriggerBloodTrail = NULL;

	if ( ! pFnTriggerBloodTrail )
		pFnTriggerBloodTrail = (UFunction*) UObject::GObjObjects()->Data[ 47466 ];

	UCombatSystemMeleeNew_execTriggerBloodTrail_Parms TriggerBloodTrail_Parms;
	TriggerBloodTrail_Parms.bBlunt = bBlunt;
	TriggerBloodTrail_Parms.bRight = bRight;

	this->ProcessEvent ( pFnTriggerBloodTrail, &TriggerBloodTrail_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.ServExecCombatMoveAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            AnimEnum                       ( CPF_Parm )
// float                          AnimRate                       ( CPF_Parm )

void UCombatSystemMeleeNew::ServExecCombatMoveAnim ( int AnimEnum, float AnimRate )
{
	static UFunction* pFnServExecCombatMoveAnim = NULL;

	if ( ! pFnServExecCombatMoveAnim )
		pFnServExecCombatMoveAnim = (UFunction*) UObject::GObjObjects()->Data[ 47463 ];

	UCombatSystemMeleeNew_execServExecCombatMoveAnim_Parms ServExecCombatMoveAnim_Parms;
	ServExecCombatMoveAnim_Parms.AnimEnum = AnimEnum;
	ServExecCombatMoveAnim_Parms.AnimRate = AnimRate;

	pFnServExecCombatMoveAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServExecCombatMoveAnim, &ServExecCombatMoveAnim_Parms, NULL );

	pFnServExecCombatMoveAnim->FunctionFlags |= 0x400;
};

// Function NowGame.CombatSystemMeleeNew.ServExecCombatMove
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            Idx                            ( CPF_Parm )
// class AActor*                  Target                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIsTellB                       ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemMeleeNew::ServExecCombatMove ( int Idx, class AActor* Target, unsigned long bIsTellB )
{
	static UFunction* pFnServExecCombatMove = NULL;

	if ( ! pFnServExecCombatMove )
		pFnServExecCombatMove = (UFunction*) UObject::GObjObjects()->Data[ 47459 ];

	UCombatSystemMeleeNew_execServExecCombatMove_Parms ServExecCombatMove_Parms;
	ServExecCombatMove_Parms.Idx = Idx;
	ServExecCombatMove_Parms.Target = Target;
	ServExecCombatMove_Parms.bIsTellB = bIsTellB;

	pFnServExecCombatMove->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServExecCombatMove, &ServExecCombatMove_Parms, NULL );

	pFnServExecCombatMove->FunctionFlags |= 0x400;
};

// Function NowGame.CombatSystemMeleeNew.StopFire
// [0x00024002] 
// Parameters infos:
// unsigned long                  TargetSelf                     ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemMeleeNew::StopFire ( unsigned long TargetSelf )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 47456 ];

	UCombatSystemMeleeNew_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.TargetSelf = TargetSelf;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.StartFire
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 47450 ];

	UCombatSystemMeleeNew_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.UpdateMeleeMountAim
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::UpdateMeleeMountAim ( )
{
	static UFunction* pFnUpdateMeleeMountAim = NULL;

	if ( ! pFnUpdateMeleeMountAim )
		pFnUpdateMeleeMountAim = (UFunction*) UObject::GObjObjects()->Data[ 47447 ];

	UCombatSystemMeleeNew_execUpdateMeleeMountAim_Parms UpdateMeleeMountAim_Parms;

	this->ProcessEvent ( pFnUpdateMeleeMountAim, &UpdateMeleeMountAim_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.ResetMeleeMountAim
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::ResetMeleeMountAim ( )
{
	static UFunction* pFnResetMeleeMountAim = NULL;

	if ( ! pFnResetMeleeMountAim )
		pFnResetMeleeMountAim = (UFunction*) UObject::GObjObjects()->Data[ 47446 ];

	UCombatSystemMeleeNew_execResetMeleeMountAim_Parms ResetMeleeMountAim_Parms;

	this->ProcessEvent ( pFnResetMeleeMountAim, &ResetMeleeMountAim_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.GetMeleeMountAim
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::GetMeleeMountAim ( )
{
	static UFunction* pFnGetMeleeMountAim = NULL;

	if ( ! pFnGetMeleeMountAim )
		pFnGetMeleeMountAim = (UFunction*) UObject::GObjObjects()->Data[ 47445 ];

	UCombatSystemMeleeNew_execGetMeleeMountAim_Parms GetMeleeMountAim_Parms;

	this->ProcessEvent ( pFnGetMeleeMountAim, &GetMeleeMountAim_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.StartShieldBash
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::StartShieldBash ( )
{
	static UFunction* pFnStartShieldBash = NULL;

	if ( ! pFnStartShieldBash )
		pFnStartShieldBash = (UFunction*) UObject::GObjObjects()->Data[ 47442 ];

	UCombatSystemMeleeNew_execStartShieldBash_Parms StartShieldBash_Parms;

	this->ProcessEvent ( pFnStartShieldBash, &StartShieldBash_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.PlayHitSound
// [0x00020002] 
// Parameters infos:
// unsigned long                  bHandleHitFeedback             ( CPF_Parm )
// unsigned long                  bBlunt                         ( CPF_Parm )

void UCombatSystemMeleeNew::PlayHitSound ( unsigned long bHandleHitFeedback, unsigned long bBlunt )
{
	static UFunction* pFnPlayHitSound = NULL;

	if ( ! pFnPlayHitSound )
		pFnPlayHitSound = (UFunction*) UObject::GObjObjects()->Data[ 47435 ];

	UCombatSystemMeleeNew_execPlayHitSound_Parms PlayHitSound_Parms;
	PlayHitSound_Parms.bHandleHitFeedback = bHandleHitFeedback;
	PlayHitSound_Parms.bBlunt = bBlunt;

	this->ProcessEvent ( pFnPlayHitSound, &PlayHitSound_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.GetTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* UCombatSystemMeleeNew::GetTarget ( )
{
	static UFunction* pFnGetTarget = NULL;

	if ( ! pFnGetTarget )
		pFnGetTarget = (UFunction*) UObject::GObjObjects()->Data[ 47433 ];

	UCombatSystemMeleeNew_execGetTarget_Parms GetTarget_Parms;

	this->ProcessEvent ( pFnGetTarget, &GetTarget_Parms, NULL );

	return GetTarget_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.CheckStamina
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bLeftWeapon                    ( CPF_Parm )

bool UCombatSystemMeleeNew::CheckStamina ( unsigned long bLeftWeapon )
{
	static UFunction* pFnCheckStamina = NULL;

	if ( ! pFnCheckStamina )
		pFnCheckStamina = (UFunction*) UObject::GObjObjects()->Data[ 47428 ];

	UCombatSystemMeleeNew_execCheckStamina_Parms CheckStamina_Parms;
	CheckStamina_Parms.bLeftWeapon = bLeftWeapon;

	this->ProcessEvent ( pFnCheckStamina, &CheckStamina_Parms, NULL );

	return CheckStamina_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.TickStaminaDrain
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::TickStaminaDrain ( )
{
	static UFunction* pFnTickStaminaDrain = NULL;

	if ( ! pFnTickStaminaDrain )
		pFnTickStaminaDrain = (UFunction*) UObject::GObjObjects()->Data[ 47424 ];

	UCombatSystemMeleeNew_execTickStaminaDrain_Parms TickStaminaDrain_Parms;

	this->ProcessEvent ( pFnTickStaminaDrain, &TickStaminaDrain_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.TickCombatMoves
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemMeleeNew::TickCombatMoves ( float DeltaTime )
{
	static UFunction* pFnTickCombatMoves = NULL;

	if ( ! pFnTickCombatMoves )
		pFnTickCombatMoves = (UFunction*) UObject::GObjObjects()->Data[ 47421 ];

	UCombatSystemMeleeNew_execTickCombatMoves_Parms TickCombatMoves_Parms;
	TickCombatMoves_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombatMoves, &TickCombatMoves_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.TriggerCombatMoveHit
// [0x00020002] 
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )

void UCombatSystemMeleeNew::TriggerCombatMoveHit ( class AActor* WhatActor )
{
	static UFunction* pFnTriggerCombatMoveHit = NULL;

	if ( ! pFnTriggerCombatMoveHit )
		pFnTriggerCombatMoveHit = (UFunction*) UObject::GObjObjects()->Data[ 47419 ];

	UCombatSystemMeleeNew_execTriggerCombatMoveHit_Parms TriggerCombatMoveHit_Parms;
	TriggerCombatMoveHit_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnTriggerCombatMoveHit, &TriggerCombatMoveHit_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.AddCombatMove
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// float                          newTimer                       ( CPF_Parm )
// struct FString                 newAddB                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  newAddBOnTarget                ( CPF_Parm )
// unsigned long                  newbTrace                      ( CPF_Parm )
// struct FString                 newActionName                  ( CPF_Parm | CPF_NeedCtorLink )
// int                            newActionEnum                  ( CPF_Parm )
// float                          newStamina                     ( CPF_Parm )
// struct FString                 newTellb                       ( CPF_Parm | CPF_NeedCtorLink )
// float                          newTraceStartPct               ( CPF_Parm )
// float                          newStunTimePct                 ( CPF_Parm )
// int                            newCombatReqEnum               ( CPF_Parm )
// unsigned long                  bDual                          ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemMeleeNew::eventAddCombatMove ( float newTimer, struct FString newAddB, unsigned long newAddBOnTarget, unsigned long newbTrace, struct FString newActionName, int newActionEnum, float newStamina, struct FString newTellb, float newTraceStartPct, float newStunTimePct, int newCombatReqEnum, unsigned long bDual )
{
	static UFunction* pFnAddCombatMove = NULL;

	if ( ! pFnAddCombatMove )
		pFnAddCombatMove = (UFunction*) UObject::GObjObjects()->Data[ 47399 ];

	UCombatSystemMeleeNew_eventAddCombatMove_Parms AddCombatMove_Parms;
	AddCombatMove_Parms.newTimer = newTimer;
	memcpy ( &AddCombatMove_Parms.newAddB, &newAddB, 0xC );
	AddCombatMove_Parms.newAddBOnTarget = newAddBOnTarget;
	AddCombatMove_Parms.newbTrace = newbTrace;
	memcpy ( &AddCombatMove_Parms.newActionName, &newActionName, 0xC );
	AddCombatMove_Parms.newActionEnum = newActionEnum;
	AddCombatMove_Parms.newStamina = newStamina;
	memcpy ( &AddCombatMove_Parms.newTellb, &newTellb, 0xC );
	AddCombatMove_Parms.newTraceStartPct = newTraceStartPct;
	AddCombatMove_Parms.newStunTimePct = newStunTimePct;
	AddCombatMove_Parms.newCombatReqEnum = newCombatReqEnum;
	AddCombatMove_Parms.bDual = bDual;

	this->ProcessEvent ( pFnAddCombatMove, &AddCombatMove_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.ClearCombatMoves
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::ClearCombatMoves ( )
{
	static UFunction* pFnClearCombatMoves = NULL;

	if ( ! pFnClearCombatMoves )
		pFnClearCombatMoves = (UFunction*) UObject::GObjObjects()->Data[ 47398 ];

	UCombatSystemMeleeNew_execClearCombatMoves_Parms ClearCombatMoves_Parms;

	this->ProcessEvent ( pFnClearCombatMoves, &ClearCombatMoves_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.PlayerWasHit
// [0x00020002] 
// Parameters infos:
// int                            lastBoneID                     ( CPF_Parm )

void UCombatSystemMeleeNew::PlayerWasHit ( int lastBoneID )
{
	static UFunction* pFnPlayerWasHit = NULL;

	if ( ! pFnPlayerWasHit )
		pFnPlayerWasHit = (UFunction*) UObject::GObjObjects()->Data[ 47394 ];

	UCombatSystemMeleeNew_execPlayerWasHit_Parms PlayerWasHit_Parms;
	PlayerWasHit_Parms.lastBoneID = lastBoneID;

	this->ProcessEvent ( pFnPlayerWasHit, &PlayerWasHit_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.CheckBlockStart
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UCombatSystemMeleeNew::CheckBlockStart ( )
{
	static UFunction* pFnCheckBlockStart = NULL;

	if ( ! pFnCheckBlockStart )
		pFnCheckBlockStart = (UFunction*) UObject::GObjObjects()->Data[ 47388 ];

	UCombatSystemMeleeNew_execCheckBlockStart_Parms CheckBlockStart_Parms;

	this->ProcessEvent ( pFnCheckBlockStart, &CheckBlockStart_Parms, NULL );

	return CheckBlockStart_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.TriggerHitDetection
// [0x00020002] 
// Parameters infos:
// float                          Time                           ( CPF_Parm )
// float                          NewMiddle                      ( CPF_Parm )
// unsigned long                  bCombatMove                    ( CPF_Parm )

void UCombatSystemMeleeNew::TriggerHitDetection ( float Time, float NewMiddle, unsigned long bCombatMove )
{
	static UFunction* pFnTriggerHitDetection = NULL;

	if ( ! pFnTriggerHitDetection )
		pFnTriggerHitDetection = (UFunction*) UObject::GObjObjects()->Data[ 47384 ];

	UCombatSystemMeleeNew_execTriggerHitDetection_Parms TriggerHitDetection_Parms;
	TriggerHitDetection_Parms.Time = Time;
	TriggerHitDetection_Parms.NewMiddle = NewMiddle;
	TriggerHitDetection_Parms.bCombatMove = bCombatMove;

	this->ProcessEvent ( pFnTriggerHitDetection, &TriggerHitDetection_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.UpdateWeaponStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   MyPawn                         ( CPF_Parm )

void UCombatSystemMeleeNew::eventUpdateWeaponStats ( class APawn* MyPawn )
{
	static UFunction* pFnUpdateWeaponStats = NULL;

	if ( ! pFnUpdateWeaponStats )
		pFnUpdateWeaponStats = (UFunction*) UObject::GObjObjects()->Data[ 47381 ];

	UCombatSystemMeleeNew_eventUpdateWeaponStats_Parms UpdateWeaponStats_Parms;
	UpdateWeaponStats_Parms.MyPawn = MyPawn;

	this->ProcessEvent ( pFnUpdateWeaponStats, &UpdateWeaponStats_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.GetCounter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UCombatSystemMeleeNew::GetCounter ( )
{
	static UFunction* pFnGetCounter = NULL;

	if ( ! pFnGetCounter )
		pFnGetCounter = (UFunction*) UObject::GObjObjects()->Data[ 47379 ];

	UCombatSystemMeleeNew_execGetCounter_Parms GetCounter_Parms;

	this->ProcessEvent ( pFnGetCounter, &GetCounter_Parms, NULL );

	return GetCounter_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.SetCounterTimer
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::SetCounterTimer ( )
{
	static UFunction* pFnSetCounterTimer = NULL;

	if ( ! pFnSetCounterTimer )
		pFnSetCounterTimer = (UFunction*) UObject::GObjObjects()->Data[ 47378 ];

	UCombatSystemMeleeNew_execSetCounterTimer_Parms SetCounterTimer_Parms;

	this->ProcessEvent ( pFnSetCounterTimer, &SetCounterTimer_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.ResetCounterTimer
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::ResetCounterTimer ( )
{
	static UFunction* pFnResetCounterTimer = NULL;

	if ( ! pFnResetCounterTimer )
		pFnResetCounterTimer = (UFunction*) UObject::GObjObjects()->Data[ 47377 ];

	UCombatSystemMeleeNew_execResetCounterTimer_Parms ResetCounterTimer_Parms;

	this->ProcessEvent ( pFnResetCounterTimer, &ResetCounterTimer_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.LastSwing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UCombatSystemMeleeNew::LastSwing ( )
{
	static UFunction* pFnLastSwing = NULL;

	if ( ! pFnLastSwing )
		pFnLastSwing = (UFunction*) UObject::GObjObjects()->Data[ 47375 ];

	UCombatSystemMeleeNew_execLastSwing_Parms LastSwing_Parms;

	this->ProcessEvent ( pFnLastSwing, &LastSwing_Parms, NULL );

	return LastSwing_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.SetLastSwing
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::SetLastSwing ( )
{
	static UFunction* pFnSetLastSwing = NULL;

	if ( ! pFnSetLastSwing )
		pFnSetLastSwing = (UFunction*) UObject::GObjObjects()->Data[ 47374 ];

	UCombatSystemMeleeNew_execSetLastSwing_Parms SetLastSwing_Parms;

	this->ProcessEvent ( pFnSetLastSwing, &SetLastSwing_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.TickAim
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemRangedNew::TickAim ( float DeltaTime )
{
	static UFunction* pFnTickAim = NULL;

	if ( ! pFnTickAim )
		pFnTickAim = (UFunction*) UObject::GObjObjects()->Data[ 47775 ];

	UCombatSystemRangedNew_execTickAim_Parms TickAim_Parms;
	TickAim_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickAim, &TickAim_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.ResetShakeBlend
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::ResetShakeBlend ( )
{
	static UFunction* pFnResetShakeBlend = NULL;

	if ( ! pFnResetShakeBlend )
		pFnResetShakeBlend = (UFunction*) UObject::GObjObjects()->Data[ 47774 ];

	UCombatSystemRangedNew_execResetShakeBlend_Parms ResetShakeBlend_Parms;

	this->ProcessEvent ( pFnResetShakeBlend, &ResetShakeBlend_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.setProjectileVars
// [0x00C20002] 
// Parameters infos:
// int                            shotSpeed                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 shotDir                        ( CPF_Parm | CPF_OutParm )

void UCombatSystemRangedNew::setProjectileVars ( int* shotSpeed, struct FVector* shotDir )
{
	static UFunction* pFnsetProjectileVars = NULL;

	if ( ! pFnsetProjectileVars )
		pFnsetProjectileVars = (UFunction*) UObject::GObjObjects()->Data[ 47768 ];

	UCombatSystemRangedNew_execsetProjectileVars_Parms setProjectileVars_Parms;

	this->ProcessEvent ( pFnsetProjectileVars, &setProjectileVars_Parms, NULL );

	if ( shotSpeed )
		*shotSpeed = setProjectileVars_Parms.shotSpeed;

	if ( shotDir )
		memcpy ( shotDir, &setProjectileVars_Parms.shotDir, 0xC );
};

// Function NowGame.CombatSystemRangedNew.resetEverything
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::resetEverything ( )
{
	static UFunction* pFnresetEverything = NULL;

	if ( ! pFnresetEverything )
		pFnresetEverything = (UFunction*) UObject::GObjObjects()->Data[ 47767 ];

	UCombatSystemRangedNew_execresetEverything_Parms resetEverything_Parms;

	this->ProcessEvent ( pFnresetEverything, &resetEverything_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.TickAndCalcNewVelocity
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::TickAndCalcNewVelocity ( )
{
	static UFunction* pFnTickAndCalcNewVelocity = NULL;

	if ( ! pFnTickAndCalcNewVelocity )
		pFnTickAndCalcNewVelocity = (UFunction*) UObject::GObjObjects()->Data[ 47766 ];

	UCombatSystemRangedNew_execTickAndCalcNewVelocity_Parms TickAndCalcNewVelocity_Parms;

	this->ProcessEvent ( pFnTickAndCalcNewVelocity, &TickAndCalcNewVelocity_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.BreathOut
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::BreathOut ( )
{
	static UFunction* pFnBreathOut = NULL;

	if ( ! pFnBreathOut )
		pFnBreathOut = (UFunction*) UObject::GObjObjects()->Data[ 47764 ];

	UCombatSystemRangedNew_execBreathOut_Parms BreathOut_Parms;

	this->ProcessEvent ( pFnBreathOut, &BreathOut_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.BreathIn
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::BreathIn ( )
{
	static UFunction* pFnBreathIn = NULL;

	if ( ! pFnBreathIn )
		pFnBreathIn = (UFunction*) UObject::GObjObjects()->Data[ 47762 ];

	UCombatSystemRangedNew_execBreathIn_Parms BreathIn_Parms;

	this->ProcessEvent ( pFnBreathIn, &BreathIn_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.StopAltFire
// [0x00024002] 
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemRangedNew::StopAltFire ( unsigned long bForce )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = (UFunction*) UObject::GObjObjects()->Data[ 47760 ];

	UCombatSystemRangedNew_execStopAltFire_Parms StopAltFire_Parms;
	StopAltFire_Parms.bForce = bForce;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.StartAltFire
// [0x00020000] 
// Parameters infos:

void UCombatSystemRangedNew::StartAltFire ( )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = (UFunction*) UObject::GObjObjects()->Data[ 47759 ];

	UCombatSystemRangedNew_execStartAltFire_Parms StartAltFire_Parms;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.CancelCharge
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::CancelCharge ( )
{
	static UFunction* pFnCancelCharge = NULL;

	if ( ! pFnCancelCharge )
		pFnCancelCharge = (UFunction*) UObject::GObjObjects()->Data[ 47758 ];

	UCombatSystemRangedNew_execCancelCharge_Parms CancelCharge_Parms;

	this->ProcessEvent ( pFnCancelCharge, &CancelCharge_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.ExitMode
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::ExitMode ( )
{
	static UFunction* pFnExitMode = NULL;

	if ( ! pFnExitMode )
		pFnExitMode = (UFunction*) UObject::GObjObjects()->Data[ 47757 ];

	UCombatSystemRangedNew_execExitMode_Parms ExitMode_Parms;

	this->ProcessEvent ( pFnExitMode, &ExitMode_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.modifyMaxRangeFromChargeTime
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UCombatSystemRangedNew::modifyMaxRangeFromChargeTime ( )
{
	static UFunction* pFnmodifyMaxRangeFromChargeTime = NULL;

	if ( ! pFnmodifyMaxRangeFromChargeTime )
		pFnmodifyMaxRangeFromChargeTime = (UFunction*) UObject::GObjObjects()->Data[ 47754 ];

	UCombatSystemRangedNew_execmodifyMaxRangeFromChargeTime_Parms modifyMaxRangeFromChargeTime_Parms;

	this->ProcessEvent ( pFnmodifyMaxRangeFromChargeTime, &modifyMaxRangeFromChargeTime_Parms, NULL );

	return modifyMaxRangeFromChargeTime_Parms.ReturnValue;
};

// Function NowGame.CombatSystemRangedNew.getPercentOfStrengthReq
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UCombatSystemRangedNew::getPercentOfStrengthReq ( )
{
	static UFunction* pFngetPercentOfStrengthReq = NULL;

	if ( ! pFngetPercentOfStrengthReq )
		pFngetPercentOfStrengthReq = (UFunction*) UObject::GObjObjects()->Data[ 47750 ];

	UCombatSystemRangedNew_execgetPercentOfStrengthReq_Parms getPercentOfStrengthReq_Parms;

	this->ProcessEvent ( pFngetPercentOfStrengthReq, &getPercentOfStrengthReq_Parms, NULL );

	return getPercentOfStrengthReq_Parms.ReturnValue;
};

// Function NowGame.CombatSystemRangedNew.getStrength
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UCombatSystemRangedNew::getStrength ( )
{
	static UFunction* pFngetStrength = NULL;

	if ( ! pFngetStrength )
		pFngetStrength = (UFunction*) UObject::GObjObjects()->Data[ 47744 ];

	UCombatSystemRangedNew_execgetStrength_Parms getStrength_Parms;

	this->ProcessEvent ( pFngetStrength, &getStrength_Parms, NULL );

	return getStrength_Parms.ReturnValue;
};

// Function NowGame.CombatSystemRangedNew.HandlePawnHit
// [0x00020002] 
// Parameters infos:
// int                            iHitPart                       ( CPF_Parm )
// class AActor*                  pTarget                        ( CPF_Parm )

void UCombatSystemRangedNew::HandlePawnHit ( int iHitPart, class AActor* pTarget )
{
	static UFunction* pFnHandlePawnHit = NULL;

	if ( ! pFnHandlePawnHit )
		pFnHandlePawnHit = (UFunction*) UObject::GObjObjects()->Data[ 47741 ];

	UCombatSystemRangedNew_execHandlePawnHit_Parms HandlePawnHit_Parms;
	HandlePawnHit_Parms.iHitPart = iHitPart;
	HandlePawnHit_Parms.pTarget = pTarget;

	this->ProcessEvent ( pFnHandlePawnHit, &HandlePawnHit_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.registerProjectileHit
// [0x00020002] 
// Parameters infos:
// class AActor*                  pHitActorTmp                   ( CPF_Parm )
// struct FTraceHitInfo           hitInfoTmp                     ( CPF_Parm )
// struct FVector                 StartTrace                     ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// struct FVector                 HitLocTmp                      ( CPF_Parm )

void UCombatSystemRangedNew::registerProjectileHit ( class AActor* pHitActorTmp, struct FTraceHitInfo hitInfoTmp, struct FVector StartTrace, struct FVector EndTrace, struct FVector HitLocTmp )
{
	static UFunction* pFnregisterProjectileHit = NULL;

	if ( ! pFnregisterProjectileHit )
		pFnregisterProjectileHit = (UFunction*) UObject::GObjObjects()->Data[ 47727 ];

	UCombatSystemRangedNew_execregisterProjectileHit_Parms registerProjectileHit_Parms;
	registerProjectileHit_Parms.pHitActorTmp = pHitActorTmp;
	memcpy ( &registerProjectileHit_Parms.hitInfoTmp, &hitInfoTmp, 0x1C );
	memcpy ( &registerProjectileHit_Parms.StartTrace, &StartTrace, 0xC );
	memcpy ( &registerProjectileHit_Parms.EndTrace, &EndTrace, 0xC );
	memcpy ( &registerProjectileHit_Parms.HitLocTmp, &HitLocTmp, 0xC );

	this->ProcessEvent ( pFnregisterProjectileHit, &registerProjectileHit_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.PhatTrace
// [0x00820002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  SkelMeshComp                   ( CPF_Parm | CPF_EditInline )
// struct FVector                 vStartTrace                    ( CPF_Parm )
// struct FVector                 vEndTrace                      ( CPF_Parm )

struct FName UCombatSystemRangedNew::PhatTrace ( class USkeletalMeshComponent* SkelMeshComp, struct FVector vStartTrace, struct FVector vEndTrace )
{
	static UFunction* pFnPhatTrace = NULL;

	if ( ! pFnPhatTrace )
		pFnPhatTrace = (UFunction*) UObject::GObjObjects()->Data[ 47721 ];

	UCombatSystemRangedNew_execPhatTrace_Parms PhatTrace_Parms;
	PhatTrace_Parms.SkelMeshComp = SkelMeshComp;
	memcpy ( &PhatTrace_Parms.vStartTrace, &vStartTrace, 0xC );
	memcpy ( &PhatTrace_Parms.vEndTrace, &vEndTrace, 0xC );

	this->ProcessEvent ( pFnPhatTrace, &PhatTrace_Parms, NULL );

	return PhatTrace_Parms.ReturnValue;
};

// Function NowGame.CombatSystemRangedNew.registerProjectileLanded
// [0x00020000] 
// Parameters infos:
// struct FVector                 HitLocTmp                      ( CPF_Parm )

void UCombatSystemRangedNew::registerProjectileLanded ( struct FVector HitLocTmp )
{
	static UFunction* pFnregisterProjectileLanded = NULL;

	if ( ! pFnregisterProjectileLanded )
		pFnregisterProjectileLanded = (UFunction*) UObject::GObjObjects()->Data[ 47719 ];

	UCombatSystemRangedNew_execregisterProjectileLanded_Parms registerProjectileLanded_Parms;
	memcpy ( &registerProjectileLanded_Parms.HitLocTmp, &HitLocTmp, 0xC );

	this->ProcessEvent ( pFnregisterProjectileLanded, &registerProjectileLanded_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.GetPossiblePlayerTargets
// [0x00C20002] 
// Parameters infos:
// TArray< class AActor* >        vPawns                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UCombatSystemRangedNew::GetPossiblePlayerTargets ( TArray< class AActor* >* vPawns )
{
	static UFunction* pFnGetPossiblePlayerTargets = NULL;

	if ( ! pFnGetPossiblePlayerTargets )
		pFnGetPossiblePlayerTargets = (UFunction*) UObject::GObjObjects()->Data[ 47711 ];

	UCombatSystemRangedNew_execGetPossiblePlayerTargets_Parms GetPossiblePlayerTargets_Parms;

	this->ProcessEvent ( pFnGetPossiblePlayerTargets, &GetPossiblePlayerTargets_Parms, NULL );

	if ( vPawns )
		memcpy ( vPawns, &GetPossiblePlayerTargets_Parms.vPawns, 0xC );
};

// Function NowGame.CombatSystemRangedNew.StopFire
// [0x00824002] 
// Parameters infos:
// unsigned long                  TargetSelf                     ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemRangedNew::StopFire ( unsigned long TargetSelf )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 47694 ];

	UCombatSystemRangedNew_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.TargetSelf = TargetSelf;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.ChargeReady
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::ChargeReady ( )
{
	static UFunction* pFnChargeReady = NULL;

	if ( ! pFnChargeReady )
		pFnChargeReady = (UFunction*) UObject::GObjObjects()->Data[ 47693 ];

	UCombatSystemRangedNew_execChargeReady_Parms ChargeReady_Parms;

	this->ProcessEvent ( pFnChargeReady, &ChargeReady_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.setChargeTimesinHUD
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::setChargeTimesinHUD ( )
{
	static UFunction* pFnsetChargeTimesinHUD = NULL;

	if ( ! pFnsetChargeTimesinHUD )
		pFnsetChargeTimesinHUD = (UFunction*) UObject::GObjObjects()->Data[ 47687 ];

	UCombatSystemRangedNew_execsetChargeTimesinHUD_Parms setChargeTimesinHUD_Parms;

	this->ProcessEvent ( pFnsetChargeTimesinHUD, &setChargeTimesinHUD_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.StartFire
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 47683 ];

	UCombatSystemRangedNew_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.GetShakeBlendNodes
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::GetShakeBlendNodes ( )
{
	static UFunction* pFnGetShakeBlendNodes = NULL;

	if ( ! pFnGetShakeBlendNodes )
		pFnGetShakeBlendNodes = (UFunction*) UObject::GObjObjects()->Data[ 47682 ];

	UCombatSystemRangedNew_execGetShakeBlendNodes_Parms GetShakeBlendNodes_Parms;

	this->ProcessEvent ( pFnGetShakeBlendNodes, &GetShakeBlendNodes_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.TickStaminaDrain
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::TickStaminaDrain ( )
{
	static UFunction* pFnTickStaminaDrain = NULL;

	if ( ! pFnTickStaminaDrain )
		pFnTickStaminaDrain = (UFunction*) UObject::GObjObjects()->Data[ 47678 ];

	UCombatSystemRangedNew_execTickStaminaDrain_Parms TickStaminaDrain_Parms;

	this->ProcessEvent ( pFnTickStaminaDrain, &TickStaminaDrain_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UCombatSystemRangedNew::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 47675 ];

	UCombatSystemRangedNew_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.UpdateWeaponStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   MyPawn                         ( CPF_Parm )

void UCombatSystemRangedNew::eventUpdateWeaponStats ( class APawn* MyPawn )
{
	static UFunction* pFnUpdateWeaponStats = NULL;

	if ( ! pFnUpdateWeaponStats )
		pFnUpdateWeaponStats = (UFunction*) UObject::GObjObjects()->Data[ 47673 ];

	UCombatSystemRangedNew_eventUpdateWeaponStats_Parms UpdateWeaponStats_Parms;
	UpdateWeaponStats_Parms.MyPawn = MyPawn;

	this->ProcessEvent ( pFnUpdateWeaponStats, &UpdateWeaponStats_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.TickCombat
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemRangedNew::TickCombat ( float DeltaTime )
{
	static UFunction* pFnTickCombat = NULL;

	if ( ! pFnTickCombat )
		pFnTickCombat = (UFunction*) UObject::GObjObjects()->Data[ 47671 ];

	UCombatSystemRangedNew_execTickCombat_Parms TickCombat_Parms;
	TickCombat_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombat, &TickCombat_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.UseFireOnWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UCombatSystemRangedNew::UseFireOnWeapon ( )
{
	static UFunction* pFnUseFireOnWeapon = NULL;

	if ( ! pFnUseFireOnWeapon )
		pFnUseFireOnWeapon = (UFunction*) UObject::GObjObjects()->Data[ 47670 ];

	UCombatSystemRangedNew_execUseFireOnWeapon_Parms UseFireOnWeapon_Parms;

	pFnUseFireOnWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseFireOnWeapon, &UseFireOnWeapon_Parms, NULL );

	pFnUseFireOnWeapon->FunctionFlags |= 0x400;
};

// Function NowGame.LoginManager.GetGFXHud
// [0x00020002] 
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* ULoginManager::GetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = (UFunction*) UObject::GObjObjects()->Data[ 47865 ];

	ULoginManager_execGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.LoginManager.CheckConnection
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

bool ULoginManager::CheckConnection ( float DeltaTime )
{
	static UFunction* pFnCheckConnection = NULL;

	if ( ! pFnCheckConnection )
		pFnCheckConnection = (UFunction*) UObject::GObjObjects()->Data[ 47860 ];

	ULoginManager_execCheckConnection_Parms CheckConnection_Parms;
	CheckConnection_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnCheckConnection, &CheckConnection_Parms, NULL );

	return CheckConnection_Parms.ReturnValue;
};

// Function NowGame.LoginManager.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ULoginManager::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 47858 ];

	ULoginManager_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.LoginManager.ResetManager
// [0x00020002] 
// Parameters infos:

void ULoginManager::ResetManager ( )
{
	static UFunction* pFnResetManager = NULL;

	if ( ! pFnResetManager )
		pFnResetManager = (UFunction*) UObject::GObjObjects()->Data[ 47857 ];

	ULoginManager_execResetManager_Parms ResetManager_Parms;

	this->ProcessEvent ( pFnResetManager, &ResetManager_Parms, NULL );
};

// Function NowGame.LoginManager.LoginScreenIsClosed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ULoginManager::eventLoginScreenIsClosed ( )
{
	static UFunction* pFnLoginScreenIsClosed = NULL;

	if ( ! pFnLoginScreenIsClosed )
		pFnLoginScreenIsClosed = (UFunction*) UObject::GObjObjects()->Data[ 47855 ];

	ULoginManager_eventLoginScreenIsClosed_Parms LoginScreenIsClosed_Parms;

	this->ProcessEvent ( pFnLoginScreenIsClosed, &LoginScreenIsClosed_Parms, NULL );

	return LoginScreenIsClosed_Parms.ReturnValue;
};

// Function NowGame.LoginManager.LoginScreenHasBeenClose
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fHowLong                       ( CPF_Parm )

bool ULoginManager::eventLoginScreenHasBeenClose ( float fHowLong )
{
	static UFunction* pFnLoginScreenHasBeenClose = NULL;

	if ( ! pFnLoginScreenHasBeenClose )
		pFnLoginScreenHasBeenClose = (UFunction*) UObject::GObjObjects()->Data[ 47852 ];

	ULoginManager_eventLoginScreenHasBeenClose_Parms LoginScreenHasBeenClose_Parms;
	LoginScreenHasBeenClose_Parms.fHowLong = fHowLong;

	this->ProcessEvent ( pFnLoginScreenHasBeenClose, &LoginScreenHasBeenClose_Parms, NULL );

	return LoginScreenHasBeenClose_Parms.ReturnValue;
};

// Function NowGame.LoginManager.CloseLoginScreen
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ULoginManager::eventCloseLoginScreen ( )
{
	static UFunction* pFnCloseLoginScreen = NULL;

	if ( ! pFnCloseLoginScreen )
		pFnCloseLoginScreen = (UFunction*) UObject::GObjObjects()->Data[ 47846 ];

	ULoginManager_eventCloseLoginScreen_Parms CloseLoginScreen_Parms;

	this->ProcessEvent ( pFnCloseLoginScreen, &CloseLoginScreen_Parms, NULL );
};

// Function NowGame.LoginManager.IsLoaded
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ULoginManager::IsLoaded ( )
{
	static UFunction* pFnIsLoaded = NULL;

	if ( ! pFnIsLoaded )
		pFnIsLoaded = (UFunction*) UObject::GObjObjects()->Data[ 47844 ];

	ULoginManager_execIsLoaded_Parms IsLoaded_Parms;

	this->ProcessEvent ( pFnIsLoaded, &IsLoaded_Parms, NULL );

	return IsLoaded_Parms.ReturnValue;
};

// Function NowGame.LoginManager.SendClientOk
// [0x00020002] 
// Parameters infos:

void ULoginManager::SendClientOk ( )
{
	static UFunction* pFnSendClientOk = NULL;

	if ( ! pFnSendClientOk )
		pFnSendClientOk = (UFunction*) UObject::GObjObjects()->Data[ 47843 ];

	ULoginManager_execSendClientOk_Parms SendClientOk_Parms;

	this->ProcessEvent ( pFnSendClientOk, &SendClientOk_Parms, NULL );
};

// Function NowGame.LoginManager.ClientReady
// [0x00020002] 
// Parameters infos:

void ULoginManager::ClientReady ( )
{
	static UFunction* pFnClientReady = NULL;

	if ( ! pFnClientReady )
		pFnClientReady = (UFunction*) UObject::GObjObjects()->Data[ 47842 ];

	ULoginManager_execClientReady_Parms ClientReady_Parms;

	this->ProcessEvent ( pFnClientReady, &ClientReady_Parms, NULL );
};

// Function NowGame.LoginManager.SetLoadingState
// [0x00020002] 
// Parameters infos:
// int                            NewState                       ( CPF_Parm )

void ULoginManager::SetLoadingState ( int NewState )
{
	static UFunction* pFnSetLoadingState = NULL;

	if ( ! pFnSetLoadingState )
		pFnSetLoadingState = (UFunction*) UObject::GObjObjects()->Data[ 47840 ];

	ULoginManager_execSetLoadingState_Parms SetLoadingState_Parms;
	SetLoadingState_Parms.NewState = NewState;

	this->ProcessEvent ( pFnSetLoadingState, &SetLoadingState_Parms, NULL );
};

// Function NowGame.LoginManager.ShowGFXLoading
// [0x00020002] 
// Parameters infos:

void ULoginManager::ShowGFXLoading ( )
{
	static UFunction* pFnShowGFXLoading = NULL;

	if ( ! pFnShowGFXLoading )
		pFnShowGFXLoading = (UFunction*) UObject::GObjObjects()->Data[ 47839 ];

	ULoginManager_execShowGFXLoading_Parms ShowGFXLoading_Parms;

	this->ProcessEvent ( pFnShowGFXLoading, &ShowGFXLoading_Parms, NULL );
};

// Function NowGame.LoginManager.InitManager
// [0x00020002] 
// Parameters infos:

void ULoginManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = (UFunction*) UObject::GObjObjects()->Data[ 47827 ];

	ULoginManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.LoginManager.SendForcedLogin
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ULoginManager::SendForcedLogin ( )
{
	static UFunction* pFnSendForcedLogin = NULL;

	if ( ! pFnSendForcedLogin )
		pFnSendForcedLogin = (UFunction*) UObject::GObjObjects()->Data[ 47826 ];

	ULoginManager_execSendForcedLogin_Parms SendForcedLogin_Parms;

	pFnSendForcedLogin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendForcedLogin, &SendForcedLogin_Parms, NULL );

	pFnSendForcedLogin->FunctionFlags |= 0x400;
};

// Function NowGame.LoginManager.CheckForClientConnection
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ULoginManager::CheckForClientConnection ( )
{
	static UFunction* pFnCheckForClientConnection = NULL;

	if ( ! pFnCheckForClientConnection )
		pFnCheckForClientConnection = (UFunction*) UObject::GObjObjects()->Data[ 47824 ];

	ULoginManager_execCheckForClientConnection_Parms CheckForClientConnection_Parms;

	pFnCheckForClientConnection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckForClientConnection, &CheckForClientConnection_Parms, NULL );

	pFnCheckForClientConnection->FunctionFlags |= 0x400;

	return CheckForClientConnection_Parms.ReturnValue;
};

// Function NowGame.LoginManager.CheckLoginStage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ULoginManager::CheckLoginStage ( )
{
	static UFunction* pFnCheckLoginStage = NULL;

	if ( ! pFnCheckLoginStage )
		pFnCheckLoginStage = (UFunction*) UObject::GObjObjects()->Data[ 47822 ];

	ULoginManager_execCheckLoginStage_Parms CheckLoginStage_Parms;

	pFnCheckLoginStage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckLoginStage, &CheckLoginStage_Parms, NULL );

	pFnCheckLoginStage->FunctionFlags |= 0x400;

	return CheckLoginStage_Parms.ReturnValue;
};

// Function NowGame.MagicMeshFX.HandleStacking
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UMagicMeshFX::HandleStacking ( )
{
	static UFunction* pFnHandleStacking = NULL;

	if ( ! pFnHandleStacking )
		pFnHandleStacking = (UFunction*) UObject::GObjObjects()->Data[ 47889 ];

	UMagicMeshFX_execHandleStacking_Parms HandleStacking_Parms;

	this->ProcessEvent ( pFnHandleStacking, &HandleStacking_Parms, NULL );

	return HandleStacking_Parms.ReturnValue;
};

// Function NowGame.MagicMeshFX.AddParticleEffects
// [0x00020002] 
// Parameters infos:

void UMagicMeshFX::AddParticleEffects ( )
{
	static UFunction* pFnAddParticleEffects = NULL;

	if ( ! pFnAddParticleEffects )
		pFnAddParticleEffects = (UFunction*) UObject::GObjObjects()->Data[ 47886 ];

	UMagicMeshFX_execAddParticleEffects_Parms AddParticleEffects_Parms;

	this->ProcessEvent ( pFnAddParticleEffects, &AddParticleEffects_Parms, NULL );
};

// Function NowGame.MagicMeshFX.SetHidden
// [0x00020002] 
// Parameters infos:
// unsigned long                  bHidden                        ( CPF_Parm )

void UMagicMeshFX::SetHidden ( unsigned long bHidden )
{
	static UFunction* pFnSetHidden = NULL;

	if ( ! pFnSetHidden )
		pFnSetHidden = (UFunction*) UObject::GObjObjects()->Data[ 47883 ];

	UMagicMeshFX_execSetHidden_Parms SetHidden_Parms;
	SetHidden_Parms.bHidden = bHidden;

	this->ProcessEvent ( pFnSetHidden, &SetHidden_Parms, NULL );
};

// Function NowGame.MagicMeshFX.RemoveEffect
// [0x00020002] 
// Parameters infos:

void UMagicMeshFX::RemoveEffect ( )
{
	static UFunction* pFnRemoveEffect = NULL;

	if ( ! pFnRemoveEffect )
		pFnRemoveEffect = (UFunction*) UObject::GObjObjects()->Data[ 47881 ];

	UMagicMeshFX_execRemoveEffect_Parms RemoveEffect_Parms;

	this->ProcessEvent ( pFnRemoveEffect, &RemoveEffect_Parms, NULL );
};

// Function NowGame.MagicMeshFX.StartEffect
// [0x00020002] 
// Parameters infos:
// class AActor*                  pNewOwner                      ( CPF_Parm )

void UMagicMeshFX::StartEffect ( class AActor* pNewOwner )
{
	static UFunction* pFnStartEffect = NULL;

	if ( ! pFnStartEffect )
		pFnStartEffect = (UFunction*) UObject::GObjObjects()->Data[ 47879 ];

	UMagicMeshFX_execStartEffect_Parms StartEffect_Parms;
	StartEffect_Parms.pNewOwner = pNewOwner;

	this->ProcessEvent ( pFnStartEffect, &StartEffect_Parms, NULL );
};

// Function NowGame.MainMenuManager.InitAllSlots
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UMainMenuManager::eventInitAllSlots ( )
{
	static UFunction* pFnInitAllSlots = NULL;

	if ( ! pFnInitAllSlots )
		pFnInitAllSlots = (UFunction*) UObject::GObjObjects()->Data[ 47941 ];

	UMainMenuManager_eventInitAllSlots_Parms InitAllSlots_Parms;

	this->ProcessEvent ( pFnInitAllSlots, &InitAllSlots_Parms, NULL );
};

// Function NowGame.MainMenuManager.ResetSlots
// [0x00020002] 
// Parameters infos:

void UMainMenuManager::ResetSlots ( )
{
	static UFunction* pFnResetSlots = NULL;

	if ( ! pFnResetSlots )
		pFnResetSlots = (UFunction*) UObject::GObjObjects()->Data[ 47939 ];

	UMainMenuManager_execResetSlots_Parms ResetSlots_Parms;

	this->ProcessEvent ( pFnResetSlots, &ResetSlots_Parms, NULL );
};

// Function NowGame.MainMenuManager.FindCharacterSlots
// [0x00020002] 
// Parameters infos:

void UMainMenuManager::FindCharacterSlots ( )
{
	static UFunction* pFnFindCharacterSlots = NULL;

	if ( ! pFnFindCharacterSlots )
		pFnFindCharacterSlots = (UFunction*) UObject::GObjObjects()->Data[ 47937 ];

	UMainMenuManager_execFindCharacterSlots_Parms FindCharacterSlots_Parms;

	this->ProcessEvent ( pFnFindCharacterSlots, &FindCharacterSlots_Parms, NULL );
};

// Function NowGame.MainMenuManager.SetSlots
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iSlots                         ( CPF_Parm )

void UMainMenuManager::eventSetSlots ( int iSlots )
{
	static UFunction* pFnSetSlots = NULL;

	if ( ! pFnSetSlots )
		pFnSetSlots = (UFunction*) UObject::GObjObjects()->Data[ 47935 ];

	UMainMenuManager_eventSetSlots_Parms SetSlots_Parms;
	SetSlots_Parms.iSlots = iSlots;

	this->ProcessEvent ( pFnSetSlots, &SetSlots_Parms, NULL );
};

// Function NowGame.MainMenuManager.SelectCharacterByIndex
// [0x00020002] 
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UMainMenuManager::SelectCharacterByIndex ( int iSlot )
{
	static UFunction* pFnSelectCharacterByIndex = NULL;

	if ( ! pFnSelectCharacterByIndex )
		pFnSelectCharacterByIndex = (UFunction*) UObject::GObjObjects()->Data[ 47933 ];

	UMainMenuManager_execSelectCharacterByIndex_Parms SelectCharacterByIndex_Parms;
	SelectCharacterByIndex_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnSelectCharacterByIndex, &SelectCharacterByIndex_Parms, NULL );
};

// Function NowGame.MainMenuManager.DeleteCharacter
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UMainMenuManager::DeleteCharacter ( struct FString sName )
{
	static UFunction* pFnDeleteCharacter = NULL;

	if ( ! pFnDeleteCharacter )
		pFnDeleteCharacter = (UFunction*) UObject::GObjObjects()->Data[ 47930 ];

	UMainMenuManager_execDeleteCharacter_Parms DeleteCharacter_Parms;
	memcpy ( &DeleteCharacter_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnDeleteCharacter, &DeleteCharacter_Parms, NULL );
};

// Function NowGame.MainMenuManager.SelectCharacter
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UMainMenuManager::SelectCharacter ( struct FString sName )
{
	static UFunction* pFnSelectCharacter = NULL;

	if ( ! pFnSelectCharacter )
		pFnSelectCharacter = (UFunction*) UObject::GObjObjects()->Data[ 47927 ];

	UMainMenuManager_execSelectCharacter_Parms SelectCharacter_Parms;
	memcpy ( &SelectCharacter_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnSelectCharacter, &SelectCharacter_Parms, NULL );
};

// Function NowGame.MainMenuManager.OpenMainMenu
// [0x00020002] 
// Parameters infos:

void UMainMenuManager::OpenMainMenu ( )
{
	static UFunction* pFnOpenMainMenu = NULL;

	if ( ! pFnOpenMainMenu )
		pFnOpenMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 47919 ];

	UMainMenuManager_execOpenMainMenu_Parms OpenMainMenu_Parms;

	this->ProcessEvent ( pFnOpenMainMenu, &OpenMainMenu_Parms, NULL );
};

// Function NowGame.MainMenuManager.InitManager
// [0x00020002] 
// Parameters infos:

void UMainMenuManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = (UFunction*) UObject::GObjObjects()->Data[ 47918 ];

	UMainMenuManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.MainMenuManager.AvatarCreated
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMainMenuManager::AvatarCreated ( )
{
	static UFunction* pFnAvatarCreated = NULL;

	if ( ! pFnAvatarCreated )
		pFnAvatarCreated = (UFunction*) UObject::GObjObjects()->Data[ 47917 ];

	UMainMenuManager_execAvatarCreated_Parms AvatarCreated_Parms;

	pFnAvatarCreated->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAvatarCreated, &AvatarCreated_Parms, NULL );

	pFnAvatarCreated->FunctionFlags |= 0x400;
};

// Function NowGame.MainMenuManager.BadAvatarName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMainMenuManager::BadAvatarName ( )
{
	static UFunction* pFnBadAvatarName = NULL;

	if ( ! pFnBadAvatarName )
		pFnBadAvatarName = (UFunction*) UObject::GObjObjects()->Data[ 47916 ];

	UMainMenuManager_execBadAvatarName_Parms BadAvatarName_Parms;

	pFnBadAvatarName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBadAvatarName, &BadAvatarName_Parms, NULL );

	pFnBadAvatarName->FunctionFlags |= 0x400;
};

// Function NowGame.MainMenuManager.DoCreateCharacter
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMainMenuManager::DoCreateCharacter ( )
{
	static UFunction* pFnDoCreateCharacter = NULL;

	if ( ! pFnDoCreateCharacter )
		pFnDoCreateCharacter = (UFunction*) UObject::GObjObjects()->Data[ 47915 ];

	UMainMenuManager_execDoCreateCharacter_Parms DoCreateCharacter_Parms;

	pFnDoCreateCharacter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoCreateCharacter, &DoCreateCharacter_Parms, NULL );

	pFnDoCreateCharacter->FunctionFlags |= 0x400;
};

// Function NowGame.MainMenuManager.DoDeleteCharacter
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UMainMenuManager::DoDeleteCharacter ( struct FString sName )
{
	static UFunction* pFnDoDeleteCharacter = NULL;

	if ( ! pFnDoDeleteCharacter )
		pFnDoDeleteCharacter = (UFunction*) UObject::GObjObjects()->Data[ 47913 ];

	UMainMenuManager_execDoDeleteCharacter_Parms DoDeleteCharacter_Parms;
	memcpy ( &DoDeleteCharacter_Parms.sName, &sName, 0xC );

	pFnDoDeleteCharacter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoDeleteCharacter, &DoDeleteCharacter_Parms, NULL );

	pFnDoDeleteCharacter->FunctionFlags |= 0x400;
};

// Function NowGame.MortalBossFireEmitterSpawnable.PostBeginPlay
// [0x00820102] 
// Parameters infos:

void AMortalBossFireEmitterSpawnable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 47968 ];

	AMortalBossFireEmitterSpawnable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalBossPortalEmitterSpawnable.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalBossPortalEmitterSpawnable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 47972 ];

	AMortalBossPortalEmitterSpawnable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalCloudEmitter.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalCloudEmitter::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48010 ];

	AMortalCloudEmitter_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalCloudEmitter.PostBeginPlay
// [0x00820102] 
// Parameters infos:

void AMortalCloudEmitter::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48004 ];

	AMortalCloudEmitter_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalCloudEmitter.Degree
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DG                             ( CPF_Parm )

float AMortalCloudEmitter::Degree ( float DG )
{
	static UFunction* pFnDegree = NULL;

	if ( ! pFnDegree )
		pFnDegree = (UFunction*) UObject::GObjObjects()->Data[ 48001 ];

	AMortalCloudEmitter_execDegree_Parms Degree_Parms;
	Degree_Parms.DG = DG;

	this->ProcessEvent ( pFnDegree, &Degree_Parms, NULL );

	return Degree_Parms.ReturnValue;
};

// Function NowGame.MortalCloudEmitter.RelocateTo
// [0x00020002] 
// Parameters infos:
// int                            Nbr                            ( CPF_Parm )

void AMortalCloudEmitter::RelocateTo ( int Nbr )
{
	static UFunction* pFnRelocateTo = NULL;

	if ( ! pFnRelocateTo )
		pFnRelocateTo = (UFunction*) UObject::GObjObjects()->Data[ 47999 ];

	AMortalCloudEmitter_execRelocateTo_Parms RelocateTo_Parms;
	RelocateTo_Parms.Nbr = Nbr;

	this->ProcessEvent ( pFnRelocateTo, &RelocateTo_Parms, NULL );
};

// Function NowGame.MortalCloudEmitter.Replace
// [0x00020002] 
// Parameters infos:

void AMortalCloudEmitter::Replace ( )
{
	static UFunction* pFnReplace = NULL;

	if ( ! pFnReplace )
		pFnReplace = (UFunction*) UObject::GObjObjects()->Data[ 47998 ];

	AMortalCloudEmitter_execReplace_Parms Replace_Parms;

	this->ProcessEvent ( pFnReplace, &Replace_Parms, NULL );
};

// Function NowGame.MortalCloudEmitter.MoveAndRotate
// [0x00820002] 
// Parameters infos:
// class UWeatherControl*         Src                            ( CPF_Parm | CPF_EditInline )

void AMortalCloudEmitter::MoveAndRotate ( class UWeatherControl* Src )
{
	static UFunction* pFnMoveAndRotate = NULL;

	if ( ! pFnMoveAndRotate )
		pFnMoveAndRotate = (UFunction*) UObject::GObjObjects()->Data[ 47994 ];

	AMortalCloudEmitter_execMoveAndRotate_Parms MoveAndRotate_Parms;
	MoveAndRotate_Parms.Src = Src;

	this->ProcessEvent ( pFnMoveAndRotate, &MoveAndRotate_Parms, NULL );
};

// Function NowGame.MortalCloudEmitter.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalCloudEmitter::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 47988 ];

	AMortalCloudEmitter_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MortalExponentialHeightFog.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalExponentialHeightFog::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48042 ];

	AMortalExponentialHeightFog_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalExponentialHeightFog.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalExponentialHeightFog::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48040 ];

	AMortalExponentialHeightFog_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalExponentialHeightFog.Tick
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AMortalExponentialHeightFog::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 48037 ];

	AMortalExponentialHeightFog_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.MortalExponentialHeightFog.PostponedBase
// [0x00020002] 
// Parameters infos:

void AMortalExponentialHeightFog::PostponedBase ( )
{
	static UFunction* pFnPostponedBase = NULL;

	if ( ! pFnPostponedBase )
		pFnPostponedBase = (UFunction*) UObject::GObjObjects()->Data[ 48036 ];

	AMortalExponentialHeightFog_execPostponedBase_Parms PostponedBase_Parms;

	this->ProcessEvent ( pFnPostponedBase, &PostponedBase_Parms, NULL );
};

// Function NowGame.MortalExponentialHeightFog.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalExponentialHeightFog::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 48030 ];

	AMortalExponentialHeightFog_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MortalExponentialHeightFog.Update
// [0x00020002] 
// Parameters infos:
// float                          PartOfDay                      ( CPF_Parm )
// float                          SunRiseAt                      ( CPF_Parm )

void AMortalExponentialHeightFog::Update ( float PartOfDay, float SunRiseAt )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 48026 ];

	AMortalExponentialHeightFog_execUpdate_Parms Update_Parms;
	Update_Parms.PartOfDay = PartOfDay;
	Update_Parms.SunRiseAt = SunRiseAt;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function NowGame.MortalExponentialHeightFog.BaseAndLocateOnActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AMortalExponentialHeightFog::BaseAndLocateOnActor ( class AActor* Other )
{
	static UFunction* pFnBaseAndLocateOnActor = NULL;

	if ( ! pFnBaseAndLocateOnActor )
		pFnBaseAndLocateOnActor = (UFunction*) UObject::GObjObjects()->Data[ 48024 ];

	AMortalExponentialHeightFog_execBaseAndLocateOnActor_Parms BaseAndLocateOnActor_Parms;
	BaseAndLocateOnActor_Parms.Other = Other;

	this->ProcessEvent ( pFnBaseAndLocateOnActor, &BaseAndLocateOnActor_Parms, NULL );
};

// Function NowGame.MortalGibEmitterSpawnable.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalGibEmitterSpawnable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48045 ];

	AMortalGibEmitterSpawnable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalGolemDeathEffectSpawner.PostBeginPlay
// [0x00820102] 
// Parameters infos:

void AMortalGolemDeathEffectSpawner::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48048 ];

	AMortalGolemDeathEffectSpawner_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalLightning.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalLightning::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48067 ];

	AMortalLightning_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalLightning.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalLightning::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48066 ];

	AMortalLightning_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalLightning.TurnOff
// [0x00020002] 
// Parameters infos:

void AMortalLightning::TurnOff ( )
{
	static UFunction* pFnTurnOff = NULL;

	if ( ! pFnTurnOff )
		pFnTurnOff = (UFunction*) UObject::GObjObjects()->Data[ 48065 ];

	AMortalLightning_execTurnOff_Parms TurnOff_Parms;

	this->ProcessEvent ( pFnTurnOff, &TurnOff_Parms, NULL );
};

// Function NowGame.MortalLightning.SoundPlay
// [0x00020002] 
// Parameters infos:

void AMortalLightning::SoundPlay ( )
{
	static UFunction* pFnSoundPlay = NULL;

	if ( ! pFnSoundPlay )
		pFnSoundPlay = (UFunction*) UObject::GObjObjects()->Data[ 48064 ];

	AMortalLightning_execSoundPlay_Parms SoundPlay_Parms;

	this->ProcessEvent ( pFnSoundPlay, &SoundPlay_Parms, NULL );
};

// Function NowGame.MortalLightning.TurnOn
// [0x00020002] 
// Parameters infos:

void AMortalLightning::TurnOn ( )
{
	static UFunction* pFnTurnOn = NULL;

	if ( ! pFnTurnOn )
		pFnTurnOn = (UFunction*) UObject::GObjObjects()->Data[ 48062 ];

	AMortalLightning_execTurnOn_Parms TurnOn_Parms;

	this->ProcessEvent ( pFnTurnOn, &TurnOn_Parms, NULL );
};

// Function NowGame.MortalLightning.Play
// [0x00020002] 
// Parameters infos:

void AMortalLightning::Play ( )
{
	static UFunction* pFnPlay = NULL;

	if ( ! pFnPlay )
		pFnPlay = (UFunction*) UObject::GObjObjects()->Data[ 48061 ];

	AMortalLightning_execPlay_Parms Play_Parms;

	this->ProcessEvent ( pFnPlay, &Play_Parms, NULL );
};

// Function NowGame.MortalLightning.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalLightning::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 48058 ];

	AMortalLightning_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MortalRainSnowEmitterSpawnable.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalRainSnowEmitterSpawnable::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48087 ];

	AMortalRainSnowEmitterSpawnable_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalRainSnowEmitterSpawnable.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalRainSnowEmitterSpawnable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48086 ];

	AMortalRainSnowEmitterSpawnable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalRainSnowEmitterSpawnable.Deactivate
// [0x00020002] 
// Parameters infos:

void AMortalRainSnowEmitterSpawnable::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 48085 ];

	AMortalRainSnowEmitterSpawnable_execDeactivate_Parms Deactivate_Parms;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );
};

// Function NowGame.MortalRainSnowEmitterSpawnable.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalRainSnowEmitterSpawnable::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 48083 ];

	AMortalRainSnowEmitterSpawnable_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MortalSceneCaptureCubeMapActor.Destroyed
// [0x00020100] 
// Parameters infos:

void AMortalSceneCaptureCubeMapActor::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48104 ];

	AMortalSceneCaptureCubeMapActor_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalSceneCaptureCubeMapActor.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalSceneCaptureCubeMapActor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48103 ];

	AMortalSceneCaptureCubeMapActor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalSceneCaptureCubeMapActor.PostponedBase
// [0x00020002] 
// Parameters infos:

void AMortalSceneCaptureCubeMapActor::PostponedBase ( )
{
	static UFunction* pFnPostponedBase = NULL;

	if ( ! pFnPostponedBase )
		pFnPostponedBase = (UFunction*) UObject::GObjObjects()->Data[ 48102 ];

	AMortalSceneCaptureCubeMapActor_execPostponedBase_Parms PostponedBase_Parms;

	this->ProcessEvent ( pFnPostponedBase, &PostponedBase_Parms, NULL );
};

// Function NowGame.MortalSceneCaptureCubeMapActor.BaseAndLocateOnActor
// [0x00820002] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AMortalSceneCaptureCubeMapActor::BaseAndLocateOnActor ( class AActor* Other )
{
	static UFunction* pFnBaseAndLocateOnActor = NULL;

	if ( ! pFnBaseAndLocateOnActor )
		pFnBaseAndLocateOnActor = (UFunction*) UObject::GObjObjects()->Data[ 48098 ];

	AMortalSceneCaptureCubeMapActor_execBaseAndLocateOnActor_Parms BaseAndLocateOnActor_Parms;
	BaseAndLocateOnActor_Parms.Other = Other;

	this->ProcessEvent ( pFnBaseAndLocateOnActor, &BaseAndLocateOnActor_Parms, NULL );
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalSunDominantDirectionalLightMovable::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48142 ];

	AMortalSunDominantDirectionalLightMovable_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalSunDominantDirectionalLightMovable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48141 ];

	AMortalSunDominantDirectionalLightMovable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalSunDominantDirectionalLightMovable::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 48136 ];

	AMortalSunDominantDirectionalLightMovable_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.Degree
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DG                             ( CPF_Parm )

float AMortalSunDominantDirectionalLightMovable::Degree ( float DG )
{
	static UFunction* pFnDegree = NULL;

	if ( ! pFnDegree )
		pFnDegree = (UFunction*) UObject::GObjObjects()->Data[ 48133 ];

	AMortalSunDominantDirectionalLightMovable_execDegree_Parms Degree_Parms;
	Degree_Parms.DG = DG;

	this->ProcessEvent ( pFnDegree, &Degree_Parms, NULL );

	return Degree_Parms.ReturnValue;
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.CalcRotation
// [0x00820002] 
// Parameters infos:
// float                          PartOfDay                      ( CPF_Parm )
// float                          PartOfYear                     ( CPF_Parm )
// float                          SunRiseAt                      ( CPF_Parm )

void AMortalSunDominantDirectionalLightMovable::CalcRotation ( float PartOfDay, float PartOfYear, float SunRiseAt )
{
	static UFunction* pFnCalcRotation = NULL;

	if ( ! pFnCalcRotation )
		pFnCalcRotation = (UFunction*) UObject::GObjObjects()->Data[ 48127 ];

	AMortalSunDominantDirectionalLightMovable_execCalcRotation_Parms CalcRotation_Parms;
	CalcRotation_Parms.PartOfDay = PartOfDay;
	CalcRotation_Parms.PartOfYear = PartOfYear;
	CalcRotation_Parms.SunRiseAt = SunRiseAt;

	this->ProcessEvent ( pFnCalcRotation, &CalcRotation_Parms, NULL );
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.CalcIntensity
// [0x00020002] 
// Parameters infos:
// float                          PartOfDay                      ( CPF_Parm )
// float                          PartOfYear                     ( CPF_Parm )
// float                          SunRiseAt                      ( CPF_Parm )

void AMortalSunDominantDirectionalLightMovable::CalcIntensity ( float PartOfDay, float PartOfYear, float SunRiseAt )
{
	static UFunction* pFnCalcIntensity = NULL;

	if ( ! pFnCalcIntensity )
		pFnCalcIntensity = (UFunction*) UObject::GObjObjects()->Data[ 48122 ];

	AMortalSunDominantDirectionalLightMovable_execCalcIntensity_Parms CalcIntensity_Parms;
	CalcIntensity_Parms.PartOfDay = PartOfDay;
	CalcIntensity_Parms.PartOfYear = PartOfYear;
	CalcIntensity_Parms.SunRiseAt = SunRiseAt;

	this->ProcessEvent ( pFnCalcIntensity, &CalcIntensity_Parms, NULL );
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          PartOfDay                      ( CPF_Parm )
// float                          PartOfYear                     ( CPF_Parm )
// float                          SunRiseAt                      ( CPF_Parm )

void AMortalSunDominantDirectionalLightMovable::eventUpdate ( float PartOfDay, float PartOfYear, float SunRiseAt )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 48118 ];

	AMortalSunDominantDirectionalLightMovable_eventUpdate_Parms Update_Parms;
	Update_Parms.PartOfDay = PartOfDay;
	Update_Parms.PartOfYear = PartOfYear;
	Update_Parms.SunRiseAt = SunRiseAt;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function NowGame.MortalWeatherFogVolumeSphericalDensityInfo.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalWeatherFogVolumeSphericalDensityInfo::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48155 ];

	AMortalWeatherFogVolumeSphericalDensityInfo_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalWeatherFogVolumeSphericalDensityInfo.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalWeatherFogVolumeSphericalDensityInfo::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48154 ];

	AMortalWeatherFogVolumeSphericalDensityInfo_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalWeatherFogVolumeSphericalDensityInfo.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalWeatherFogVolumeSphericalDensityInfo::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 48150 ];

	AMortalWeatherFogVolumeSphericalDensityInfo_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MortalWeatherPostProcessVolume.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalWeatherPostProcessVolume::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48182 ];

	AMortalWeatherPostProcessVolume_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalWeatherPostProcessVolume.AddToPlayer
// [0x00020002] 
// Parameters infos:

void AMortalWeatherPostProcessVolume::AddToPlayer ( )
{
	static UFunction* pFnAddToPlayer = NULL;

	if ( ! pFnAddToPlayer )
		pFnAddToPlayer = (UFunction*) UObject::GObjObjects()->Data[ 48181 ];

	AMortalWeatherPostProcessVolume_execAddToPlayer_Parms AddToPlayer_Parms;

	this->ProcessEvent ( pFnAddToPlayer, &AddToPlayer_Parms, NULL );
};

// Function NowGame.MortalWeatherPostProcessVolume.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalWeatherPostProcessVolume::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48180 ];

	AMortalWeatherPostProcessVolume_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalWeatherPostProcessVolume.SetSetting
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AMortalWeatherPostProcessVolume::SetSetting ( )
{
	static UFunction* pFnSetSetting = NULL;

	if ( ! pFnSetSetting )
		pFnSetSetting = (UFunction*) UObject::GObjObjects()->Data[ 48179 ];

	AMortalWeatherPostProcessVolume_execSetSetting_Parms SetSetting_Parms;

	pFnSetSetting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSetting, &SetSetting_Parms, NULL );

	pFnSetSetting->FunctionFlags |= 0x400;
};

// Function NowGame.MortalWeatherPostProcessVolume.ReplaceClouds
// [0x00020002] 
// Parameters infos:

void AMortalWeatherPostProcessVolume::ReplaceClouds ( )
{
	static UFunction* pFnReplaceClouds = NULL;

	if ( ! pFnReplaceClouds )
		pFnReplaceClouds = (UFunction*) UObject::GObjObjects()->Data[ 48178 ];

	AMortalWeatherPostProcessVolume_execReplaceClouds_Parms ReplaceClouds_Parms;

	this->ProcessEvent ( pFnReplaceClouds, &ReplaceClouds_Parms, NULL );
};

// Function NowGame.MortalWeatherPostProcessVolume.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AMortalWeatherPostProcessVolume::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 48176 ];

	AMortalWeatherPostProcessVolume_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function NowGame.MortalWeatherPostProcessVolume.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AMortalWeatherPostProcessVolume::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 48171 ];

	AMortalWeatherPostProcessVolume_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.MortalWeatherPostProcessVolume.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalWeatherPostProcessVolume::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 48168 ];

	AMortalWeatherPostProcessVolume_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MountBrain.GetMountJumpZ
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UMountBrain::GetMountJumpZ ( )
{
	static UFunction* pFnGetMountJumpZ = NULL;

	if ( ! pFnGetMountJumpZ )
		pFnGetMountJumpZ = (UFunction*) UObject::GObjObjects()->Data[ 48397 ];

	UMountBrain_execGetMountJumpZ_Parms GetMountJumpZ_Parms;

	this->ProcessEvent ( pFnGetMountJumpZ, &GetMountJumpZ_Parms, NULL );

	return GetMountJumpZ_Parms.ReturnValue;
};

// Function NowGame.MountBrain.debugLog
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 whatLog                        ( CPF_Parm | CPF_NeedCtorLink )

void UMountBrain::eventdebugLog ( struct FString whatLog )
{
	static UFunction* pFndebugLog = NULL;

	if ( ! pFndebugLog )
		pFndebugLog = (UFunction*) UObject::GObjObjects()->Data[ 48395 ];

	UMountBrain_eventdebugLog_Parms debugLog_Parms;
	memcpy ( &debugLog_Parms.whatLog, &whatLog, 0xC );

	this->ProcessEvent ( pFndebugLog, &debugLog_Parms, NULL );
};

// Function NowGame.MountBrain.DrawMoDebugLine
// [0x00024002] 
// Parameters infos:
// struct FVector                 LineStart                      ( CPF_Parm )
// struct FVector                 LineEnd                        ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UMountBrain::DrawMoDebugLine ( struct FVector LineStart, struct FVector LineEnd, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawMoDebugLine = NULL;

	if ( ! pFnDrawMoDebugLine )
		pFnDrawMoDebugLine = (UFunction*) UObject::GObjObjects()->Data[ 48388 ];

	UMountBrain_execDrawMoDebugLine_Parms DrawMoDebugLine_Parms;
	memcpy ( &DrawMoDebugLine_Parms.LineStart, &LineStart, 0xC );
	memcpy ( &DrawMoDebugLine_Parms.LineEnd, &LineEnd, 0xC );
	DrawMoDebugLine_Parms.R = R;
	DrawMoDebugLine_Parms.G = G;
	DrawMoDebugLine_Parms.B = B;
	DrawMoDebugLine_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawMoDebugLine, &DrawMoDebugLine_Parms, NULL );
};

// Function NowGame.MountBrain.DrawHudDebug
// [0x00020002] 
// Parameters infos:

void UMountBrain::DrawHudDebug ( )
{
	static UFunction* pFnDrawHudDebug = NULL;

	if ( ! pFnDrawHudDebug )
		pFnDrawHudDebug = (UFunction*) UObject::GObjObjects()->Data[ 48386 ];

	UMountBrain_execDrawHudDebug_Parms DrawHudDebug_Parms;

	this->ProcessEvent ( pFnDrawHudDebug, &DrawHudDebug_Parms, NULL );
};

// Function NowGame.MountBrain.Bump
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                P                              ( CPF_Parm )

void UMountBrain::Bump ( class ANowPawn* P )
{
	static UFunction* pFnBump = NULL;

	if ( ! pFnBump )
		pFnBump = (UFunction*) UObject::GObjObjects()->Data[ 48382 ];

	UMountBrain_execBump_Parms Bump_Parms;
	Bump_Parms.P = P;

	this->ProcessEvent ( pFnBump, &Bump_Parms, NULL );
};

// Function NowGame.MountBrain.CheckForFall
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Difficulty                     ( CPF_OptionalParm | CPF_Parm )

bool UMountBrain::CheckForFall ( float Difficulty )
{
	static UFunction* pFnCheckForFall = NULL;

	if ( ! pFnCheckForFall )
		pFnCheckForFall = (UFunction*) UObject::GObjObjects()->Data[ 48378 ];

	UMountBrain_execCheckForFall_Parms CheckForFall_Parms;
	CheckForFall_Parms.Difficulty = Difficulty;

	this->ProcessEvent ( pFnCheckForFall, &CheckForFall_Parms, NULL );

	return CheckForFall_Parms.ReturnValue;
};

// Function NowGame.MountBrain.SetThrottleTimer
// [0x00020002] 
// Parameters infos:

void UMountBrain::SetThrottleTimer ( )
{
	static UFunction* pFnSetThrottleTimer = NULL;

	if ( ! pFnSetThrottleTimer )
		pFnSetThrottleTimer = (UFunction*) UObject::GObjObjects()->Data[ 48377 ];

	UMountBrain_execSetThrottleTimer_Parms SetThrottleTimer_Parms;

	this->ProcessEvent ( pFnSetThrottleTimer, &SetThrottleTimer_Parms, NULL );
};

// Function NowGame.MountBrain.SetSpeedInputTimer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UMountBrain::SetSpeedInputTimer ( )
{
	static UFunction* pFnSetSpeedInputTimer = NULL;

	if ( ! pFnSetSpeedInputTimer )
		pFnSetSpeedInputTimer = (UFunction*) UObject::GObjObjects()->Data[ 48375 ];

	UMountBrain_execSetSpeedInputTimer_Parms SetSpeedInputTimer_Parms;

	this->ProcessEvent ( pFnSetSpeedInputTimer, &SetSpeedInputTimer_Parms, NULL );

	return SetSpeedInputTimer_Parms.ReturnValue;
};

// Function NowGame.MountBrain.ManToMountAnim
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )
// float                          fTime                          ( CPF_Parm )

void UMountBrain::ManToMountAnim ( int iIndex, float fTime )
{
	static UFunction* pFnManToMountAnim = NULL;

	if ( ! pFnManToMountAnim )
		pFnManToMountAnim = (UFunction*) UObject::GObjObjects()->Data[ 48372 ];

	UMountBrain_execManToMountAnim_Parms ManToMountAnim_Parms;
	ManToMountAnim_Parms.iIndex = iIndex;
	ManToMountAnim_Parms.fTime = fTime;

	this->ProcessEvent ( pFnManToMountAnim, &ManToMountAnim_Parms, NULL );
};

// Function NowGame.MountBrain.CmdFullSpeedDown
// [0x00020002] 
// Parameters infos:

void UMountBrain::CmdFullSpeedDown ( )
{
	static UFunction* pFnCmdFullSpeedDown = NULL;

	if ( ! pFnCmdFullSpeedDown )
		pFnCmdFullSpeedDown = (UFunction*) UObject::GObjObjects()->Data[ 48371 ];

	UMountBrain_execCmdFullSpeedDown_Parms CmdFullSpeedDown_Parms;

	this->ProcessEvent ( pFnCmdFullSpeedDown, &CmdFullSpeedDown_Parms, NULL );
};

// Function NowGame.MountBrain.CmdFullSpeedUp
// [0x00020002] 
// Parameters infos:

void UMountBrain::CmdFullSpeedUp ( )
{
	static UFunction* pFnCmdFullSpeedUp = NULL;

	if ( ! pFnCmdFullSpeedUp )
		pFnCmdFullSpeedUp = (UFunction*) UObject::GObjObjects()->Data[ 48370 ];

	UMountBrain_execCmdFullSpeedUp_Parms CmdFullSpeedUp_Parms;

	this->ProcessEvent ( pFnCmdFullSpeedUp, &CmdFullSpeedUp_Parms, NULL );
};

// Function NowGame.MountBrain.CmdSpeedDown
// [0x00020002] 
// Parameters infos:

void UMountBrain::CmdSpeedDown ( )
{
	static UFunction* pFnCmdSpeedDown = NULL;

	if ( ! pFnCmdSpeedDown )
		pFnCmdSpeedDown = (UFunction*) UObject::GObjObjects()->Data[ 48369 ];

	UMountBrain_execCmdSpeedDown_Parms CmdSpeedDown_Parms;

	this->ProcessEvent ( pFnCmdSpeedDown, &CmdSpeedDown_Parms, NULL );
};

// Function NowGame.MountBrain.CmdSpeedUp
// [0x00020002] 
// Parameters infos:

void UMountBrain::CmdSpeedUp ( )
{
	static UFunction* pFnCmdSpeedUp = NULL;

	if ( ! pFnCmdSpeedUp )
		pFnCmdSpeedUp = (UFunction*) UObject::GObjObjects()->Data[ 48368 ];

	UMountBrain_execCmdSpeedUp_Parms CmdSpeedUp_Parms;

	this->ProcessEvent ( pFnCmdSpeedUp, &CmdSpeedUp_Parms, NULL );
};

// Function NowGame.MountBrain.CmdTurnLeft
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UMountBrain::CmdTurnLeft ( float fDeltaTime )
{
	static UFunction* pFnCmdTurnLeft = NULL;

	if ( ! pFnCmdTurnLeft )
		pFnCmdTurnLeft = (UFunction*) UObject::GObjObjects()->Data[ 48365 ];

	UMountBrain_execCmdTurnLeft_Parms CmdTurnLeft_Parms;
	CmdTurnLeft_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCmdTurnLeft, &CmdTurnLeft_Parms, NULL );
};

// Function NowGame.MountBrain.CmdTurnRight
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UMountBrain::CmdTurnRight ( float fDeltaTime )
{
	static UFunction* pFnCmdTurnRight = NULL;

	if ( ! pFnCmdTurnRight )
		pFnCmdTurnRight = (UFunction*) UObject::GObjObjects()->Data[ 48362 ];

	UMountBrain_execCmdTurnRight_Parms CmdTurnRight_Parms;
	CmdTurnRight_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCmdTurnRight, &CmdTurnRight_Parms, NULL );
};

// Function NowGame.MountBrain.GetTurnAmount
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UMountBrain::GetTurnAmount ( )
{
	static UFunction* pFnGetTurnAmount = NULL;

	if ( ! pFnGetTurnAmount )
		pFnGetTurnAmount = (UFunction*) UObject::GObjObjects()->Data[ 48358 ];

	UMountBrain_execGetTurnAmount_Parms GetTurnAmount_Parms;

	this->ProcessEvent ( pFnGetTurnAmount, &GetTurnAmount_Parms, NULL );

	return GetTurnAmount_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GetSubSystem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystemNowGame* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UOnlineSubsystemNowGame* UMountBrain::eventGetSubSystem ( )
{
	static UFunction* pFnGetSubSystem = NULL;

	if ( ! pFnGetSubSystem )
		pFnGetSubSystem = (UFunction*) UObject::GObjObjects()->Data[ 48355 ];

	UMountBrain_eventGetSubSystem_Parms GetSubSystem_Parms;

	this->ProcessEvent ( pFnGetSubSystem, &GetSubSystem_Parms, NULL );

	return GetSubSystem_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GetNowPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* UMountBrain::eventGetNowPC ( )
{
	static UFunction* pFnGetNowPC = NULL;

	if ( ! pFnGetNowPC )
		pFnGetNowPC = (UFunction*) UObject::GObjObjects()->Data[ 48353 ];

	UMountBrain_eventGetNowPC_Parms GetNowPC_Parms;

	this->ProcessEvent ( pFnGetNowPC, &GetNowPC_Parms, NULL );

	return GetNowPC_Parms.ReturnValue;
};

// Function NowGame.MountBrain.CalcStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UMountBrain::eventCalcStats ( )
{
	static UFunction* pFnCalcStats = NULL;

	if ( ! pFnCalcStats )
		pFnCalcStats = (UFunction*) UObject::GObjObjects()->Data[ 48335 ];

	UMountBrain_eventCalcStats_Parms CalcStats_Parms;

	this->ProcessEvent ( pFnCalcStats, &CalcStats_Parms, NULL );
};

// Function NowGame.MountBrain.TickDebug
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickDebug ( float DT )
{
	static UFunction* pFnTickDebug = NULL;

	if ( ! pFnTickDebug )
		pFnTickDebug = (UFunction*) UObject::GObjObjects()->Data[ 48333 ];

	UMountBrain_execTickDebug_Parms TickDebug_Parms;
	TickDebug_Parms.DT = DT;

	this->ProcessEvent ( pFnTickDebug, &TickDebug_Parms, NULL );
};

// Function NowGame.MountBrain.GetDir
// [0x00824002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AddYaw                         ( CPF_OptionalParm | CPF_Parm )

struct FVector UMountBrain::GetDir ( int AddYaw )
{
	static UFunction* pFnGetDir = NULL;

	if ( ! pFnGetDir )
		pFnGetDir = (UFunction*) UObject::GObjObjects()->Data[ 48329 ];

	UMountBrain_execGetDir_Parms GetDir_Parms;
	GetDir_Parms.AddYaw = AddYaw;

	this->ProcessEvent ( pFnGetDir, &GetDir_Parms, NULL );

	return GetDir_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GetStartTrace
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UMountBrain::GetStartTrace ( )
{
	static UFunction* pFnGetStartTrace = NULL;

	if ( ! pFnGetStartTrace )
		pFnGetStartTrace = (UFunction*) UObject::GObjObjects()->Data[ 48327 ];

	UMountBrain_execGetStartTrace_Parms GetStartTrace_Parms;

	this->ProcessEvent ( pFnGetStartTrace, &GetStartTrace_Parms, NULL );

	return GetStartTrace_Parms.ReturnValue;
};

// Function NowGame.MountBrain.AddDamageTaken
// [0x00020002] 
// Parameters infos:
// float                          Value                          ( CPF_Parm )

void UMountBrain::AddDamageTaken ( float Value )
{
	static UFunction* pFnAddDamageTaken = NULL;

	if ( ! pFnAddDamageTaken )
		pFnAddDamageTaken = (UFunction*) UObject::GObjObjects()->Data[ 48325 ];

	UMountBrain_execAddDamageTaken_Parms AddDamageTaken_Parms;
	AddDamageTaken_Parms.Value = Value;

	this->ProcessEvent ( pFnAddDamageTaken, &AddDamageTaken_Parms, NULL );
};

// Function NowGame.MountBrain.CheckKnockSpeed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UMountBrain::CheckKnockSpeed ( )
{
	static UFunction* pFnCheckKnockSpeed = NULL;

	if ( ! pFnCheckKnockSpeed )
		pFnCheckKnockSpeed = (UFunction*) UObject::GObjObjects()->Data[ 48323 ];

	UMountBrain_execCheckKnockSpeed_Parms CheckKnockSpeed_Parms;

	this->ProcessEvent ( pFnCheckKnockSpeed, &CheckKnockSpeed_Parms, NULL );

	return CheckKnockSpeed_Parms.ReturnValue;
};

// Function NowGame.MountBrain.CheckHeadUnderWater
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 AddVect                        ( CPF_Parm )

bool UMountBrain::CheckHeadUnderWater ( struct FVector AddVect )
{
	static UFunction* pFnCheckHeadUnderWater = NULL;

	if ( ! pFnCheckHeadUnderWater )
		pFnCheckHeadUnderWater = (UFunction*) UObject::GObjObjects()->Data[ 48319 ];

	UMountBrain_execCheckHeadUnderWater_Parms CheckHeadUnderWater_Parms;
	memcpy ( &CheckHeadUnderWater_Parms.AddVect, &AddVect, 0xC );

	this->ProcessEvent ( pFnCheckHeadUnderWater, &CheckHeadUnderWater_Parms, NULL );

	return CheckHeadUnderWater_Parms.ReturnValue;
};

// Function NowGame.MountBrain.LeaveMountOk
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UMountBrain::LeaveMountOk ( )
{
	static UFunction* pFnLeaveMountOk = NULL;

	if ( ! pFnLeaveMountOk )
		pFnLeaveMountOk = (UFunction*) UObject::GObjObjects()->Data[ 48317 ];

	UMountBrain_execLeaveMountOk_Parms LeaveMountOk_Parms;

	this->ProcessEvent ( pFnLeaveMountOk, &LeaveMountOk_Parms, NULL );

	return LeaveMountOk_Parms.ReturnValue;
};

// Function NowGame.MountBrain.SwimmingCorrect
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 ATrace                         ( CPF_Parm )

struct FVector UMountBrain::SwimmingCorrect ( struct FVector ATrace )
{
	static UFunction* pFnSwimmingCorrect = NULL;

	if ( ! pFnSwimmingCorrect )
		pFnSwimmingCorrect = (UFunction*) UObject::GObjObjects()->Data[ 48313 ];

	UMountBrain_execSwimmingCorrect_Parms SwimmingCorrect_Parms;
	memcpy ( &SwimmingCorrect_Parms.ATrace, &ATrace, 0xC );

	this->ProcessEvent ( pFnSwimmingCorrect, &SwimmingCorrect_Parms, NULL );

	return SwimmingCorrect_Parms.ReturnValue;
};

// Function NowGame.MountBrain.FullStop
// [0x00020002] 
// Parameters infos:

void UMountBrain::FullStop ( )
{
	static UFunction* pFnFullStop = NULL;

	if ( ! pFnFullStop )
		pFnFullStop = (UFunction*) UObject::GObjObjects()->Data[ 48312 ];

	UMountBrain_execFullStop_Parms FullStop_Parms;

	this->ProcessEvent ( pFnFullStop, &FullStop_Parms, NULL );
};

// Function NowGame.MountBrain.PanicStop
// [0x00020002] 
// Parameters infos:

void UMountBrain::PanicStop ( )
{
	static UFunction* pFnPanicStop = NULL;

	if ( ! pFnPanicStop )
		pFnPanicStop = (UFunction*) UObject::GObjObjects()->Data[ 48311 ];

	UMountBrain_execPanicStop_Parms PanicStop_Parms;

	this->ProcessEvent ( pFnPanicStop, &PanicStop_Parms, NULL );
};

// Function NowGame.MountBrain.GetMaxSpeed
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UMountBrain::GetMaxSpeed ( )
{
	static UFunction* pFnGetMaxSpeed = NULL;

	if ( ! pFnGetMaxSpeed )
		pFnGetMaxSpeed = (UFunction*) UObject::GObjObjects()->Data[ 48307 ];

	UMountBrain_execGetMaxSpeed_Parms GetMaxSpeed_Parms;

	this->ProcessEvent ( pFnGetMaxSpeed, &GetMaxSpeed_Parms, NULL );

	return GetMaxSpeed_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GetSpeed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UMountBrain::GetSpeed ( )
{
	static UFunction* pFnGetSpeed = NULL;

	if ( ! pFnGetSpeed )
		pFnGetSpeed = (UFunction*) UObject::GObjObjects()->Data[ 48303 ];

	UMountBrain_execGetSpeed_Parms GetSpeed_Parms;

	this->ProcessEvent ( pFnGetSpeed, &GetSpeed_Parms, NULL );

	return GetSpeed_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GetDeltaRot
// [0x00020002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator UMountBrain::GetDeltaRot ( )
{
	static UFunction* pFnGetDeltaRot = NULL;

	if ( ! pFnGetDeltaRot )
		pFnGetDeltaRot = (UFunction*) UObject::GObjObjects()->Data[ 48301 ];

	UMountBrain_execGetDeltaRot_Parms GetDeltaRot_Parms;

	this->ProcessEvent ( pFnGetDeltaRot, &GetDeltaRot_Parms, NULL );

	return GetDeltaRot_Parms.ReturnValue;
};

// Function NowGame.MountBrain.TickPitch
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickPitch ( float DT )
{
	static UFunction* pFnTickPitch = NULL;

	if ( ! pFnTickPitch )
		pFnTickPitch = (UFunction*) UObject::GObjObjects()->Data[ 48286 ];

	UMountBrain_execTickPitch_Parms TickPitch_Parms;
	TickPitch_Parms.DT = DT;

	this->ProcessEvent ( pFnTickPitch, &TickPitch_Parms, NULL );
};

// Function NowGame.MountBrain.TickCheckStamina
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickCheckStamina ( float DT )
{
	static UFunction* pFnTickCheckStamina = NULL;

	if ( ! pFnTickCheckStamina )
		pFnTickCheckStamina = (UFunction*) UObject::GObjObjects()->Data[ 48280 ];

	UMountBrain_execTickCheckStamina_Parms TickCheckStamina_Parms;
	TickCheckStamina_Parms.DT = DT;

	this->ProcessEvent ( pFnTickCheckStamina, &TickCheckStamina_Parms, NULL );
};

// Function NowGame.MountBrain.TickThrottle
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickThrottle ( float DT )
{
	static UFunction* pFnTickThrottle = NULL;

	if ( ! pFnTickThrottle )
		pFnTickThrottle = (UFunction*) UObject::GObjObjects()->Data[ 48278 ];

	UMountBrain_execTickThrottle_Parms TickThrottle_Parms;
	TickThrottle_Parms.DT = DT;

	this->ProcessEvent ( pFnTickThrottle, &TickThrottle_Parms, NULL );
};

// Function NowGame.MountBrain.TickKnockTimer
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickKnockTimer ( float DT )
{
	static UFunction* pFnTickKnockTimer = NULL;

	if ( ! pFnTickKnockTimer )
		pFnTickKnockTimer = (UFunction*) UObject::GObjObjects()->Data[ 48276 ];

	UMountBrain_execTickKnockTimer_Parms TickKnockTimer_Parms;
	TickKnockTimer_Parms.DT = DT;

	this->ProcessEvent ( pFnTickKnockTimer, &TickKnockTimer_Parms, NULL );
};

// Function NowGame.MountBrain.TickDamageTimer
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickDamageTimer ( float DT )
{
	static UFunction* pFnTickDamageTimer = NULL;

	if ( ! pFnTickDamageTimer )
		pFnTickDamageTimer = (UFunction*) UObject::GObjObjects()->Data[ 48274 ];

	UMountBrain_execTickDamageTimer_Parms TickDamageTimer_Parms;
	TickDamageTimer_Parms.DT = DT;

	this->ProcessEvent ( pFnTickDamageTimer, &TickDamageTimer_Parms, NULL );
};

// Function NowGame.MountBrain.TickBody
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickBody ( float DT )
{
	static UFunction* pFnTickBody = NULL;

	if ( ! pFnTickBody )
		pFnTickBody = (UFunction*) UObject::GObjObjects()->Data[ 48272 ];

	UMountBrain_execTickBody_Parms TickBody_Parms;
	TickBody_Parms.DT = DT;

	this->ProcessEvent ( pFnTickBody, &TickBody_Parms, NULL );
};

// Function NowGame.MountBrain.TickDrowningTimer
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickDrowningTimer ( float DT )
{
	static UFunction* pFnTickDrowningTimer = NULL;

	if ( ! pFnTickDrowningTimer )
		pFnTickDrowningTimer = (UFunction*) UObject::GObjObjects()->Data[ 48270 ];

	UMountBrain_execTickDrowningTimer_Parms TickDrowningTimer_Parms;
	TickDrowningTimer_Parms.DT = DT;

	this->ProcessEvent ( pFnTickDrowningTimer, &TickDrowningTimer_Parms, NULL );
};

// Function NowGame.MountBrain.GetStaminaReGain
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UMountBrain::GetStaminaReGain ( )
{
	static UFunction* pFnGetStaminaReGain = NULL;

	if ( ! pFnGetStaminaReGain )
		pFnGetStaminaReGain = (UFunction*) UObject::GObjObjects()->Data[ 48265 ];

	UMountBrain_execGetStaminaReGain_Parms GetStaminaReGain_Parms;

	this->ProcessEvent ( pFnGetStaminaReGain, &GetStaminaReGain_Parms, NULL );

	return GetStaminaReGain_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GetStaminaDrain
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UMountBrain::GetStaminaDrain ( )
{
	static UFunction* pFnGetStaminaDrain = NULL;

	if ( ! pFnGetStaminaDrain )
		pFnGetStaminaDrain = (UFunction*) UObject::GObjObjects()->Data[ 48261 ];

	UMountBrain_execGetStaminaDrain_Parms GetStaminaDrain_Parms;

	this->ProcessEvent ( pFnGetStaminaDrain, &GetStaminaDrain_Parms, NULL );

	return GetStaminaDrain_Parms.ReturnValue;
};

// Function NowGame.MountBrain.Tick
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::Tick ( float DT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 48259 ];

	UMountBrain_execTick_Parms Tick_Parms;
	Tick_Parms.DT = DT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.MountBrain.GetDriver
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* UMountBrain::GetDriver ( )
{
	static UFunction* pFnGetDriver = NULL;

	if ( ! pFnGetDriver )
		pFnGetDriver = (UFunction*) UObject::GObjObjects()->Data[ 48257 ];

	UMountBrain_execGetDriver_Parms GetDriver_Parms;

	this->ProcessEvent ( pFnGetDriver, &GetDriver_Parms, NULL );

	return GetDriver_Parms.ReturnValue;
};

// Function NowGame.MountBrain.InitBrain
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAiMountDynamic* NewMount                       ( CPF_Parm )

void UMountBrain::InitBrain ( class ANowAtlasAvatarAiMountDynamic* NewMount )
{
	static UFunction* pFnInitBrain = NULL;

	if ( ! pFnInitBrain )
		pFnInitBrain = (UFunction*) UObject::GObjObjects()->Data[ 48255 ];

	UMountBrain_execInitBrain_Parms InitBrain_Parms;
	InitBrain_Parms.NewMount = NewMount;

	this->ProcessEvent ( pFnInitBrain, &InitBrain_Parms, NULL );
};

// Function NowGame.MountBrain.CalcEnc
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMountBrain::CalcEnc ( )
{
	static UFunction* pFnCalcEnc = NULL;

	if ( ! pFnCalcEnc )
		pFnCalcEnc = (UFunction*) UObject::GObjObjects()->Data[ 48254 ];

	UMountBrain_execCalcEnc_Parms CalcEnc_Parms;

	pFnCalcEnc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcEnc, &CalcEnc_Parms, NULL );

	pFnCalcEnc->FunctionFlags |= 0x400;
};

// Function NowGame.MountBrain.SendDamageTaken
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMountBrain::SendDamageTaken ( )
{
	static UFunction* pFnSendDamageTaken = NULL;

	if ( ! pFnSendDamageTaken )
		pFnSendDamageTaken = (UFunction*) UObject::GObjObjects()->Data[ 48253 ];

	UMountBrain_execSendDamageTaken_Parms SendDamageTaken_Parms;

	pFnSendDamageTaken->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendDamageTaken, &SendDamageTaken_Parms, NULL );

	pFnSendDamageTaken->FunctionFlags |= 0x400;
};

// Function NowGame.NewTugSession.AddPlayerAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bPull                          ( CPF_Parm )
// float                          fLength                        ( CPF_Parm )

void UNewTugSession::AddPlayerAction ( unsigned long bPull, float fLength )
{
	static UFunction* pFnAddPlayerAction = NULL;

	if ( ! pFnAddPlayerAction )
		pFnAddPlayerAction = (UFunction*) UObject::GObjObjects()->Data[ 48427 ];

	UNewTugSession_execAddPlayerAction_Parms AddPlayerAction_Parms;
	AddPlayerAction_Parms.bPull = bPull;
	AddPlayerAction_Parms.fLength = fLength;

	pFnAddPlayerAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPlayerAction, &AddPlayerAction_Parms, NULL );

	pFnAddPlayerAction->FunctionFlags |= 0x400;
};

// Function NowGame.NewTugSession.FishUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

bool UNewTugSession::FishUpdate ( float DeltaTime )
{
	static UFunction* pFnFishUpdate = NULL;

	if ( ! pFnFishUpdate )
		pFnFishUpdate = (UFunction*) UObject::GObjObjects()->Data[ 48424 ];

	UNewTugSession_execFishUpdate_Parms FishUpdate_Parms;
	FishUpdate_Parms.DeltaTime = DeltaTime;

	pFnFishUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFishUpdate, &FishUpdate_Parms, NULL );

	pFnFishUpdate->FunctionFlags |= 0x400;

	return FishUpdate_Parms.ReturnValue;
};

// Function NowGame.NewTugSession.InitFish
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNewTugSession::InitFish ( )
{
	static UFunction* pFnInitFish = NULL;

	if ( ! pFnInitFish )
		pFnInitFish = (UFunction*) UObject::GObjObjects()->Data[ 48423 ];

	UNewTugSession_execInitFish_Parms InitFish_Parms;

	pFnInitFish->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitFish, &InitFish_Parms, NULL );

	pFnInitFish->FunctionFlags |= 0x400;
};

// Function NowGame.NewTugSession.CalculateSectionSuccess
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UNewTugSession::CalculateSectionSuccess ( )
{
	static UFunction* pFnCalculateSectionSuccess = NULL;

	if ( ! pFnCalculateSectionSuccess )
		pFnCalculateSectionSuccess = (UFunction*) UObject::GObjObjects()->Data[ 48421 ];

	UNewTugSession_execCalculateSectionSuccess_Parms CalculateSectionSuccess_Parms;

	pFnCalculateSectionSuccess->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalculateSectionSuccess, &CalculateSectionSuccess_Parms, NULL );

	pFnCalculateSectionSuccess->FunctionFlags |= 0x400;

	return CalculateSectionSuccess_Parms.ReturnValue;
};

// Function NowGame.NewTugSession.GetBlockResult
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNewTugSession::GetBlockResult ( )
{
	static UFunction* pFnGetBlockResult = NULL;

	if ( ! pFnGetBlockResult )
		pFnGetBlockResult = (UFunction*) UObject::GObjObjects()->Data[ 48419 ];

	UNewTugSession_execGetBlockResult_Parms GetBlockResult_Parms;

	pFnGetBlockResult->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBlockResult, &GetBlockResult_Parms, NULL );

	pFnGetBlockResult->FunctionFlags |= 0x400;

	return GetBlockResult_Parms.ReturnValue;
};

// Function NowGame.NewTugSession.GenerateFishData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fSessionTime                   ( CPF_Parm )

void UNewTugSession::GenerateFishData ( float fSessionTime )
{
	static UFunction* pFnGenerateFishData = NULL;

	if ( ! pFnGenerateFishData )
		pFnGenerateFishData = (UFunction*) UObject::GObjObjects()->Data[ 48417 ];

	UNewTugSession_execGenerateFishData_Parms GenerateFishData_Parms;
	GenerateFishData_Parms.fSessionTime = fSessionTime;

	pFnGenerateFishData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateFishData, &GenerateFishData_Parms, NULL );

	pFnGenerateFishData->FunctionFlags |= 0x400;
};

// Function NowGame.NewTugSession.GenerateNewSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNewTugSession::GenerateNewSession ( )
{
	static UFunction* pFnGenerateNewSession = NULL;

	if ( ! pFnGenerateNewSession )
		pFnGenerateNewSession = (UFunction*) UObject::GObjObjects()->Data[ 48416 ];

	UNewTugSession_execGenerateNewSession_Parms GenerateNewSession_Parms;

	pFnGenerateNewSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateNewSession, &GenerateNewSession_Parms, NULL );

	pFnGenerateNewSession->FunctionFlags |= 0x400;
};

// Function NowGame.NoobHelpManager.TookDamageHelp
// [0x00020002] 
// Parameters infos:

void UNoobHelpManager::TookDamageHelp ( )
{
	static UFunction* pFnTookDamageHelp = NULL;

	if ( ! pFnTookDamageHelp )
		pFnTookDamageHelp = (UFunction*) UObject::GObjObjects()->Data[ 48454 ];

	UNoobHelpManager_execTookDamageHelp_Parms TookDamageHelp_Parms;

	this->ProcessEvent ( pFnTookDamageHelp, &TookDamageHelp_Parms, NULL );
};

// Function NowGame.NoobHelpManager.DeathHelp
// [0x00020002] 
// Parameters infos:

void UNoobHelpManager::DeathHelp ( )
{
	static UFunction* pFnDeathHelp = NULL;

	if ( ! pFnDeathHelp )
		pFnDeathHelp = (UFunction*) UObject::GObjObjects()->Data[ 48453 ];

	UNoobHelpManager_execDeathHelp_Parms DeathHelp_Parms;

	this->ProcessEvent ( pFnDeathHelp, &DeathHelp_Parms, NULL );
};

// Function NowGame.NoobHelpManager.GreyHelp
// [0x00020002] 
// Parameters infos:

void UNoobHelpManager::GreyHelp ( )
{
	static UFunction* pFnGreyHelp = NULL;

	if ( ! pFnGreyHelp )
		pFnGreyHelp = (UFunction*) UObject::GObjObjects()->Data[ 48452 ];

	UNoobHelpManager_execGreyHelp_Parms GreyHelp_Parms;

	this->ProcessEvent ( pFnGreyHelp, &GreyHelp_Parms, NULL );
};

// Function NowGame.NoobHelpManager.UpdateDirectionHelper
// [0x00820002] 
// Parameters infos:

void UNoobHelpManager::UpdateDirectionHelper ( )
{
	static UFunction* pFnUpdateDirectionHelper = NULL;

	if ( ! pFnUpdateDirectionHelper )
		pFnUpdateDirectionHelper = (UFunction*) UObject::GObjObjects()->Data[ 48449 ];

	UNoobHelpManager_execUpdateDirectionHelper_Parms UpdateDirectionHelper_Parms;

	this->ProcessEvent ( pFnUpdateDirectionHelper, &UpdateDirectionHelper_Parms, NULL );
};

// Function NowGame.NoobHelpManager.UpdateNoobHelp
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNoobHelpManager::eventUpdateNoobHelp ( )
{
	static UFunction* pFnUpdateNoobHelp = NULL;

	if ( ! pFnUpdateNoobHelp )
		pFnUpdateNoobHelp = (UFunction*) UObject::GObjObjects()->Data[ 48448 ];

	UNoobHelpManager_eventUpdateNoobHelp_Parms UpdateNoobHelp_Parms;

	this->ProcessEvent ( pFnUpdateNoobHelp, &UpdateNoobHelp_Parms, NULL );
};

// Function NowGame.NoobHelpManager.InitManager
// [0x00020000] 
// Parameters infos:

void UNoobHelpManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = (UFunction*) UObject::GObjObjects()->Data[ 48447 ];

	UNoobHelpManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.NoobHelpManager.HasRobe
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNoobHelpManager::HasRobe ( )
{
	static UFunction* pFnHasRobe = NULL;

	if ( ! pFnHasRobe )
		pFnHasRobe = (UFunction*) UObject::GObjObjects()->Data[ 48445 ];

	UNoobHelpManager_execHasRobe_Parms HasRobe_Parms;

	pFnHasRobe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasRobe, &HasRobe_Parms, NULL );

	pFnHasRobe->FunctionFlags |= 0x400;

	return HasRobe_Parms.ReturnValue;
};

// Function NowGame.NoobHelpManager.HasLeather
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNoobHelpManager::HasLeather ( )
{
	static UFunction* pFnHasLeather = NULL;

	if ( ! pFnHasLeather )
		pFnHasLeather = (UFunction*) UObject::GObjObjects()->Data[ 48443 ];

	UNoobHelpManager_execHasLeather_Parms HasLeather_Parms;

	pFnHasLeather->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasLeather, &HasLeather_Parms, NULL );

	pFnHasLeather->FunctionFlags |= 0x400;

	return HasLeather_Parms.ReturnValue;
};

// Function NowGame.NoobHelpManager.GetNPCD
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNoobHelpManager::GetNPCD ( )
{
	static UFunction* pFnGetNPCD = NULL;

	if ( ! pFnGetNPCD )
		pFnGetNPCD = (UFunction*) UObject::GObjObjects()->Data[ 48441 ];

	UNoobHelpManager_execGetNPCD_Parms GetNPCD_Parms;

	pFnGetNPCD->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNPCD, &GetNPCD_Parms, NULL );

	pFnGetNPCD->FunctionFlags |= 0x400;

	return GetNPCD_Parms.ReturnValue;
};

// Function NowGame.NoobHelpManager.GetNPCC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNoobHelpManager::GetNPCC ( )
{
	static UFunction* pFnGetNPCC = NULL;

	if ( ! pFnGetNPCC )
		pFnGetNPCC = (UFunction*) UObject::GObjObjects()->Data[ 48439 ];

	UNoobHelpManager_execGetNPCC_Parms GetNPCC_Parms;

	pFnGetNPCC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNPCC, &GetNPCC_Parms, NULL );

	pFnGetNPCC->FunctionFlags |= 0x400;

	return GetNPCC_Parms.ReturnValue;
};

// Function NowGame.NoobHelpManager.GetNPCB
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNoobHelpManager::GetNPCB ( )
{
	static UFunction* pFnGetNPCB = NULL;

	if ( ! pFnGetNPCB )
		pFnGetNPCB = (UFunction*) UObject::GObjObjects()->Data[ 48437 ];

	UNoobHelpManager_execGetNPCB_Parms GetNPCB_Parms;

	pFnGetNPCB->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNPCB, &GetNPCB_Parms, NULL );

	pFnGetNPCB->FunctionFlags |= 0x400;

	return GetNPCB_Parms.ReturnValue;
};

// Function NowGame.NoobHelpManager.GetNPCA
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNoobHelpManager::GetNPCA ( )
{
	static UFunction* pFnGetNPCA = NULL;

	if ( ! pFnGetNPCA )
		pFnGetNPCA = (UFunction*) UObject::GObjObjects()->Data[ 48435 ];

	UNoobHelpManager_execGetNPCA_Parms GetNPCA_Parms;

	pFnGetNPCA->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNPCA, &GetNPCA_Parms, NULL );

	pFnGetNPCA->FunctionFlags |= 0x400;

	return GetNPCA_Parms.ReturnValue;
};

// Function NowGame.NowAiEffect.SetTargetActor
// [0x00020000] 
// Parameters infos:
// class AActor*                  NewActor                       ( CPF_Parm )

void ANowAiEffect::SetTargetActor ( class AActor* NewActor )
{
	static UFunction* pFnSetTargetActor = NULL;

	if ( ! pFnSetTargetActor )
		pFnSetTargetActor = (UFunction*) UObject::GObjObjects()->Data[ 48467 ];

	ANowAiEffect_execSetTargetActor_Parms SetTargetActor_Parms;
	SetTargetActor_Parms.NewActor = NewActor;

	this->ProcessEvent ( pFnSetTargetActor, &SetTargetActor_Parms, NULL );
};

// Function NowGame.NowAiEffect.SetTargetVect
// [0x00020000] 
// Parameters infos:
// struct FVector                 NewVector                      ( CPF_Parm )

void ANowAiEffect::SetTargetVect ( struct FVector NewVector )
{
	static UFunction* pFnSetTargetVect = NULL;

	if ( ! pFnSetTargetVect )
		pFnSetTargetVect = (UFunction*) UObject::GObjObjects()->Data[ 48465 ];

	ANowAiEffect_execSetTargetVect_Parms SetTargetVect_Parms;
	memcpy ( &SetTargetVect_Parms.NewVector, &NewVector, 0xC );

	this->ProcessEvent ( pFnSetTargetVect, &SetTargetVect_Parms, NULL );
};

// Function NowGame.NowAiEffect.InitEffectProjectile
// [0x00024000] 
// Parameters infos:
// unsigned long                  bDuped                         ( CPF_OptionalParm | CPF_Parm )

void ANowAiEffect::InitEffectProjectile ( unsigned long bDuped )
{
	static UFunction* pFnInitEffectProjectile = NULL;

	if ( ! pFnInitEffectProjectile )
		pFnInitEffectProjectile = (UFunction*) UObject::GObjObjects()->Data[ 48463 ];

	ANowAiEffect_execInitEffectProjectile_Parms InitEffectProjectile_Parms;
	InitEffectProjectile_Parms.bDuped = bDuped;

	this->ProcessEvent ( pFnInitEffectProjectile, &InitEffectProjectile_Parms, NULL );
};

// Function NowGame.NowAiIdleSpot.UpdateHelpers
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAiIdleSpot::UpdateHelpers ( )
{
	static UFunction* pFnUpdateHelpers = NULL;

	if ( ! pFnUpdateHelpers )
		pFnUpdateHelpers = (UFunction*) UObject::GObjObjects()->Data[ 48870 ];

	ANowAiIdleSpot_execUpdateHelpers_Parms UpdateHelpers_Parms;

	pFnUpdateHelpers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateHelpers, &UpdateHelpers_Parms, NULL );

	pFnUpdateHelpers->FunctionFlags |= 0x400;
};

// Function NowGame.NowAmbientSoundMovableDayNight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowAmbientSoundMovableDayNight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48883 ];

	ANowAmbientSoundMovableDayNight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAmbientSoundMovableDayNight.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowAmbientSoundMovableDayNight::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48882 ];

	ANowAmbientSoundMovableDayNight_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAmbientSoundMovableDayNight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowAmbientSoundMovableDayNight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 48879 ];

	ANowAmbientSoundMovableDayNight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowAmbientSoundMovableDayNight.SetDayTime
// [0x00020002] 
// Parameters infos:

void ANowAmbientSoundMovableDayNight::SetDayTime ( )
{
	static UFunction* pFnSetDayTime = NULL;

	if ( ! pFnSetDayTime )
		pFnSetDayTime = (UFunction*) UObject::GObjObjects()->Data[ 48878 ];

	ANowAmbientSoundMovableDayNight_execSetDayTime_Parms SetDayTime_Parms;

	this->ProcessEvent ( pFnSetDayTime, &SetDayTime_Parms, NULL );
};

// Function NowGame.NowAmbientSoundSimpleToggleableDayNight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowAmbientSoundSimpleToggleableDayNight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48897 ];

	ANowAmbientSoundSimpleToggleableDayNight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAmbientSoundSimpleToggleableDayNight.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowAmbientSoundSimpleToggleableDayNight::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48896 ];

	ANowAmbientSoundSimpleToggleableDayNight_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAmbientSoundSimpleToggleableDayNight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowAmbientSoundSimpleToggleableDayNight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 48894 ];

	ANowAmbientSoundSimpleToggleableDayNight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowAmbientSoundSimpleToggleableDayNight.SetDay
// [0x00020002] 
// Parameters infos:

void ANowAmbientSoundSimpleToggleableDayNight::SetDay ( )
{
	static UFunction* pFnSetDay = NULL;

	if ( ! pFnSetDay )
		pFnSetDay = (UFunction*) UObject::GObjObjects()->Data[ 48893 ];

	ANowAmbientSoundSimpleToggleableDayNight_execSetDay_Parms SetDay_Parms;

	this->ProcessEvent ( pFnSetDay, &SetDay_Parms, NULL );
};

// Function NowGame.NowAmbientSunLight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowAmbientSunLight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48933 ];

	ANowAmbientSunLight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAmbientSunLight.AddToPlayer
// [0x00020002] 
// Parameters infos:

void ANowAmbientSunLight::AddToPlayer ( )
{
	static UFunction* pFnAddToPlayer = NULL;

	if ( ! pFnAddToPlayer )
		pFnAddToPlayer = (UFunction*) UObject::GObjObjects()->Data[ 48932 ];

	ANowAmbientSunLight_execAddToPlayer_Parms AddToPlayer_Parms;

	this->ProcessEvent ( pFnAddToPlayer, &AddToPlayer_Parms, NULL );
};

// Function NowGame.NowAmbientSunLight.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowAmbientSunLight::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48931 ];

	ANowAmbientSunLight_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAmbientSunLight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowAmbientSunLight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 48928 ];

	ANowAmbientSunLight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowAmbientSunLight.UpdateBrightness
// [0x00020002] 
// Parameters infos:

void ANowAmbientSunLight::UpdateBrightness ( )
{
	static UFunction* pFnUpdateBrightness = NULL;

	if ( ! pFnUpdateBrightness )
		pFnUpdateBrightness = (UFunction*) UObject::GObjObjects()->Data[ 48926 ];

	ANowAmbientSunLight_execUpdateBrightness_Parms UpdateBrightness_Parms;

	this->ProcessEvent ( pFnUpdateBrightness, &UpdateBrightness_Parms, NULL );
};

// Function NowGame.NowAmbientSunLight.Update
// [0x00820002] 
// Parameters infos:
// float                          PartOfDay                      ( CPF_Parm )
// float                          PartOfNyxPos                   ( CPF_Parm )
// float                          PartOfYear                     ( CPF_Parm )
// float                          SunRiseAt                      ( CPF_Parm )

void ANowAmbientSunLight::Update ( float PartOfDay, float PartOfNyxPos, float PartOfYear, float SunRiseAt )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 48913 ];

	ANowAmbientSunLight_execUpdate_Parms Update_Parms;
	Update_Parms.PartOfDay = PartOfDay;
	Update_Parms.PartOfNyxPos = PartOfNyxPos;
	Update_Parms.PartOfYear = PartOfYear;
	Update_Parms.SunRiseAt = SunRiseAt;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.FindGoodSpot
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 StartLoc                       ( CPF_Parm )
// int                            iter                           ( CPF_Parm )

void ANowAtlasAvatar::eventFindGoodSpot ( struct FVector StartLoc, int iter )
{
	static UFunction* pFnFindGoodSpot = NULL;

	if ( ! pFnFindGoodSpot )
		pFnFindGoodSpot = (UFunction*) UObject::GObjObjects()->Data[ 49053 ];

	ANowAtlasAvatar_eventFindGoodSpot_Parms FindGoodSpot_Parms;
	memcpy ( &FindGoodSpot_Parms.StartLoc, &StartLoc, 0xC );
	FindGoodSpot_Parms.iter = iter;

	this->ProcessEvent ( pFnFindGoodSpot, &FindGoodSpot_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.PendingFindGoodSpot
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatar::eventPendingFindGoodSpot ( )
{
	static UFunction* pFnPendingFindGoodSpot = NULL;

	if ( ! pFnPendingFindGoodSpot )
		pFnPendingFindGoodSpot = (UFunction*) UObject::GObjObjects()->Data[ 49052 ];

	ANowAtlasAvatar_eventPendingFindGoodSpot_Parms PendingFindGoodSpot_Parms;

	this->ProcessEvent ( pFnPendingFindGoodSpot, &PendingFindGoodSpot_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.TriggerProjectileEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  ProjClass                      ( CPF_Parm )
// struct FName                   BoneName                       ( CPF_Parm )

void ANowAtlasAvatar::eventTriggerProjectileEffect ( class UClass* ProjClass, struct FName BoneName )
{
	static UFunction* pFnTriggerProjectileEffect = NULL;

	if ( ! pFnTriggerProjectileEffect )
		pFnTriggerProjectileEffect = (UFunction*) UObject::GObjObjects()->Data[ 49047 ];

	ANowAtlasAvatar_eventTriggerProjectileEffect_Parms TriggerProjectileEffect_Parms;
	TriggerProjectileEffect_Parms.ProjClass = ProjClass;
	memcpy ( &TriggerProjectileEffect_Parms.BoneName, &BoneName, 0x8 );

	this->ProcessEvent ( pFnTriggerProjectileEffect, &TriggerProjectileEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.AnimEffectTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void ANowAtlasAvatar::eventAnimEffectTarget ( class AActor* Target )
{
	static UFunction* pFnAnimEffectTarget = NULL;

	if ( ! pFnAnimEffectTarget )
		pFnAnimEffectTarget = (UFunction*) UObject::GObjObjects()->Data[ 49045 ];

	ANowAtlasAvatar_eventAnimEffectTarget_Parms AnimEffectTarget_Parms;
	AnimEffectTarget_Parms.Target = Target;

	this->ProcessEvent ( pFnAnimEffectTarget, &AnimEffectTarget_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.AnimEffectVector
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 Loc                            ( CPF_Parm )

void ANowAtlasAvatar::eventAnimEffectVector ( struct FVector Loc )
{
	static UFunction* pFnAnimEffectVector = NULL;

	if ( ! pFnAnimEffectVector )
		pFnAnimEffectVector = (UFunction*) UObject::GObjObjects()->Data[ 49043 ];

	ANowAtlasAvatar_eventAnimEffectVector_Parms AnimEffectVector_Parms;
	memcpy ( &AnimEffectVector_Parms.Loc, &Loc, 0xC );

	this->ProcessEvent ( pFnAnimEffectVector, &AnimEffectVector_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.SetTurn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FRotator                NewRot                         ( CPF_Parm )

void ANowAtlasAvatar::eventSetTurn ( struct FRotator NewRot )
{
	static UFunction* pFnSetTurn = NULL;

	if ( ! pFnSetTurn )
		pFnSetTurn = (UFunction*) UObject::GObjObjects()->Data[ 49041 ];

	ANowAtlasAvatar_eventSetTurn_Parms SetTurn_Parms;
	memcpy ( &SetTurn_Parms.NewRot, &NewRot, 0xC );

	this->ProcessEvent ( pFnSetTurn, &SetTurn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.GetCollisionExtent
// [0x00820103] ( FUNC_Final )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowAtlasAvatar::GetCollisionExtent ( )
{
	static UFunction* pFnGetCollisionExtent = NULL;

	if ( ! pFnGetCollisionExtent )
		pFnGetCollisionExtent = (UFunction*) UObject::GObjObjects()->Data[ 49038 ];

	ANowAtlasAvatar_execGetCollisionExtent_Parms GetCollisionExtent_Parms;

	this->ProcessEvent ( pFnGetCollisionExtent, &GetCollisionExtent_Parms, NULL );

	return GetCollisionExtent_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.GetHeight
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatar::GetHeight ( )
{
	static UFunction* pFnGetHeight = NULL;

	if ( ! pFnGetHeight )
		pFnGetHeight = (UFunction*) UObject::GObjObjects()->Data[ 49036 ];

	ANowAtlasAvatar_execGetHeight_Parms GetHeight_Parms;

	this->ProcessEvent ( pFnGetHeight, &GetHeight_Parms, NULL );

	return GetHeight_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.GetCollisionHeight
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatar::eventGetCollisionHeight ( )
{
	static UFunction* pFnGetCollisionHeight = NULL;

	if ( ! pFnGetCollisionHeight )
		pFnGetCollisionHeight = (UFunction*) UObject::GObjObjects()->Data[ 46189 ];

	ANowAtlasAvatar_eventGetCollisionHeight_Parms GetCollisionHeight_Parms;

	this->ProcessEvent ( pFnGetCollisionHeight, &GetCollisionHeight_Parms, NULL );

	return GetCollisionHeight_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.GetCollisionRadius
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatar::eventGetCollisionRadius ( )
{
	static UFunction* pFnGetCollisionRadius = NULL;

	if ( ! pFnGetCollisionRadius )
		pFnGetCollisionRadius = (UFunction*) UObject::GObjObjects()->Data[ 48299 ];

	ANowAtlasAvatar_eventGetCollisionRadius_Parms GetCollisionRadius_Parms;

	this->ProcessEvent ( pFnGetCollisionRadius, &GetCollisionRadius_Parms, NULL );

	return GetCollisionRadius_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.Resurrect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatar::eventResurrect ( )
{
	static UFunction* pFnResurrect = NULL;

	if ( ! pFnResurrect )
		pFnResurrect = (UFunction*) UObject::GObjObjects()->Data[ 49032 ];

	ANowAtlasAvatar_eventResurrect_Parms Resurrect_Parms;

	this->ProcessEvent ( pFnResurrect, &Resurrect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatar::eventSpawnCorpse ( float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = (UFunction*) UObject::GObjObjects()->Data[ 49027 ];

	ANowAtlasAvatar_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.CheckForDecalSpawn
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DmgTaken                       ( CPF_Parm )

void ANowAtlasAvatar::eventCheckForDecalSpawn ( float DmgTaken )
{
	static UFunction* pFnCheckForDecalSpawn = NULL;

	if ( ! pFnCheckForDecalSpawn )
		pFnCheckForDecalSpawn = (UFunction*) UObject::GObjObjects()->Data[ 49017 ];

	ANowAtlasAvatar_eventCheckForDecalSpawn_Parms CheckForDecalSpawn_Parms;
	CheckForDecalSpawn_Parms.DmgTaken = DmgTaken;

	this->ProcessEvent ( pFnCheckForDecalSpawn, &CheckForDecalSpawn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.SpawnHitFx
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// unsigned long                  ClientFeedBack                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIgnoreParticles               ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatar::eventSpawnHitFx ( struct FVector HitLocation, unsigned long ClientFeedBack, unsigned long bIgnoreParticles )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = (UFunction*) UObject::GObjObjects()->Data[ 49012 ];

	ANowAtlasAvatar_eventSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.HitLocation, &HitLocation, 0xC );
	SpawnHitFx_Parms.ClientFeedBack = ClientFeedBack;
	SpawnHitFx_Parms.bIgnoreParticles = bIgnoreParticles;

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.Degree
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DG                             ( CPF_Parm )

int ANowAtlasAvatar::Degree ( float DG )
{
	static UFunction* pFnDegree = NULL;

	if ( ! pFnDegree )
		pFnDegree = (UFunction*) UObject::GObjObjects()->Data[ 49009 ];

	ANowAtlasAvatar_execDegree_Parms Degree_Parms;
	Degree_Parms.DG = DG;

	this->ProcessEvent ( pFnDegree, &Degree_Parms, NULL );

	return Degree_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.GetFloatVal
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 crc                            ( CPF_Parm | CPF_NeedCtorLink )

float ANowAtlasAvatar::GetFloatVal ( struct FString crc )
{
	static UFunction* pFnGetFloatVal = NULL;

	if ( ! pFnGetFloatVal )
		pFnGetFloatVal = (UFunction*) UObject::GObjObjects()->Data[ 49006 ];

	ANowAtlasAvatar_execGetFloatVal_Parms GetFloatVal_Parms;
	memcpy ( &GetFloatVal_Parms.crc, &crc, 0xC );

	pFnGetFloatVal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFloatVal, &GetFloatVal_Parms, NULL );

	pFnGetFloatVal->FunctionFlags |= 0x400;

	return GetFloatVal_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatar::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 49004 ];

	ANowAtlasAvatar_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.SetLocalFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewFlag                        ( CPF_Parm )

void ANowAtlasAvatar::eventSetLocalFlag ( int NewFlag )
{
	static UFunction* pFnSetLocalFlag = NULL;

	if ( ! pFnSetLocalFlag )
		pFnSetLocalFlag = (UFunction*) UObject::GObjObjects()->Data[ 49000 ];

	ANowAtlasAvatar_eventSetLocalFlag_Parms SetLocalFlag_Parms;
	SetLocalFlag_Parms.NewFlag = NewFlag;

	this->ProcessEvent ( pFnSetLocalFlag, &SetLocalFlag_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.ChangedDisplayName
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatar::eventChangedDisplayName ( )
{
	static UFunction* pFnChangedDisplayName = NULL;

	if ( ! pFnChangedDisplayName )
		pFnChangedDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 48999 ];

	ANowAtlasAvatar_eventChangedDisplayName_Parms ChangedDisplayName_Parms;

	this->ProcessEvent ( pFnChangedDisplayName, &ChangedDisplayName_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.GetGuildFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatar::eventGetGuildFlag ( )
{
	static UFunction* pFnGetGuildFlag = NULL;

	if ( ! pFnGetGuildFlag )
		pFnGetGuildFlag = (UFunction*) UObject::GObjObjects()->Data[ 46057 ];

	ANowAtlasAvatar_eventGetGuildFlag_Parms GetGuildFlag_Parms;

	this->ProcessEvent ( pFnGetGuildFlag, &GetGuildFlag_Parms, NULL );

	return GetGuildFlag_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.SetPendingHidden
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bStart                         ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatar::eventSetPendingHidden ( unsigned long bStart )
{
	static UFunction* pFnSetPendingHidden = NULL;

	if ( ! pFnSetPendingHidden )
		pFnSetPendingHidden = (UFunction*) UObject::GObjObjects()->Data[ 48997 ];

	ANowAtlasAvatar_eventSetPendingHidden_Parms SetPendingHidden_Parms;
	SetPendingHidden_Parms.bStart = bStart;

	this->ProcessEvent ( pFnSetPendingHidden, &SetPendingHidden_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.ClearPendingGetAndCreateBody
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatar::eventClearPendingGetAndCreateBody ( )
{
	static UFunction* pFnClearPendingGetAndCreateBody = NULL;

	if ( ! pFnClearPendingGetAndCreateBody )
		pFnClearPendingGetAndCreateBody = (UFunction*) UObject::GObjObjects()->Data[ 48996 ];

	ANowAtlasAvatar_eventClearPendingGetAndCreateBody_Parms ClearPendingGetAndCreateBody_Parms;

	this->ProcessEvent ( pFnClearPendingGetAndCreateBody, &ClearPendingGetAndCreateBody_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.SetPendingGetAndCreateBody
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatar::eventSetPendingGetAndCreateBody ( )
{
	static UFunction* pFnSetPendingGetAndCreateBody = NULL;

	if ( ! pFnSetPendingGetAndCreateBody )
		pFnSetPendingGetAndCreateBody = (UFunction*) UObject::GObjObjects()->Data[ 48995 ];

	ANowAtlasAvatar_eventSetPendingGetAndCreateBody_Parms SetPendingGetAndCreateBody_Parms;

	this->ProcessEvent ( pFnSetPendingGetAndCreateBody, &SetPendingGetAndCreateBody_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.OpenGFXScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iGfxScene                      ( CPF_Parm )

void ANowAtlasAvatar::eventOpenGFXScene ( int iGfxScene )
{
	static UFunction* pFnOpenGFXScene = NULL;

	if ( ! pFnOpenGFXScene )
		pFnOpenGFXScene = (UFunction*) UObject::GObjObjects()->Data[ 48993 ];

	ANowAtlasAvatar_eventOpenGFXScene_Parms OpenGFXScene_Parms;
	OpenGFXScene_Parms.iGfxScene = iGfxScene;

	this->ProcessEvent ( pFnOpenGFXScene, &OpenGFXScene_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.GetAiTaxes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatar::GetAiTaxes ( )
{
	static UFunction* pFnGetAiTaxes = NULL;

	if ( ! pFnGetAiTaxes )
		pFnGetAiTaxes = (UFunction*) UObject::GObjObjects()->Data[ 48991 ];

	ANowAtlasAvatar_execGetAiTaxes_Parms GetAiTaxes_Parms;

	pFnGetAiTaxes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAiTaxes, &GetAiTaxes_Parms, NULL );

	pFnGetAiTaxes->FunctionFlags |= 0x400;

	return GetAiTaxes_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.GetHealthMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatar::GetHealthMax ( )
{
	static UFunction* pFnGetHealthMax = NULL;

	if ( ! pFnGetHealthMax )
		pFnGetHealthMax = (UFunction*) UObject::GObjObjects()->Data[ 48989 ];

	ANowAtlasAvatar_execGetHealthMax_Parms GetHealthMax_Parms;

	pFnGetHealthMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealthMax, &GetHealthMax_Parms, NULL );

	pFnGetHealthMax->FunctionFlags |= 0x400;

	return GetHealthMax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.GetHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatar::GetHealth ( )
{
	static UFunction* pFnGetHealth = NULL;

	if ( ! pFnGetHealth )
		pFnGetHealth = (UFunction*) UObject::GObjObjects()->Data[ 48987 ];

	ANowAtlasAvatar_execGetHealth_Parms GetHealth_Parms;

	pFnGetHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealth, &GetHealth_Parms, NULL );

	pFnGetHealth->FunctionFlags |= 0x400;

	return GetHealth_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.GetContentGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatar::GetContentGuid ( )
{
	static UFunction* pFnGetContentGuid = NULL;

	if ( ! pFnGetContentGuid )
		pFnGetContentGuid = (UFunction*) UObject::GObjObjects()->Data[ 46856 ];

	ANowAtlasAvatar_execGetContentGuid_Parms GetContentGuid_Parms;

	pFnGetContentGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetContentGuid, &GetContentGuid_Parms, NULL );

	pFnGetContentGuid->FunctionFlags |= 0x400;

	return GetContentGuid_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.ForceLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vNewLoc                        ( CPF_Parm )

void ANowAtlasAvatar::ForceLocation ( struct FVector vNewLoc )
{
	static UFunction* pFnForceLocation = NULL;

	if ( ! pFnForceLocation )
		pFnForceLocation = (UFunction*) UObject::GObjObjects()->Data[ 48985 ];

	ANowAtlasAvatar_execForceLocation_Parms ForceLocation_Parms;
	memcpy ( &ForceLocation_Parms.vNewLoc, &vNewLoc, 0xC );

	pFnForceLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceLocation, &ForceLocation_Parms, NULL );

	pFnForceLocation->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.SetComponent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UActorComponent*         NewAtlasComponent              ( CPF_Parm | CPF_EditInline )

void ANowAtlasAvatar::SetComponent ( class UActorComponent* NewAtlasComponent )
{
	static UFunction* pFnSetComponent = NULL;

	if ( ! pFnSetComponent )
		pFnSetComponent = (UFunction*) UObject::GObjObjects()->Data[ 48983 ];

	ANowAtlasAvatar_execSetComponent_Parms SetComponent_Parms;
	SetComponent_Parms.NewAtlasComponent = NewAtlasComponent;

	pFnSetComponent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetComponent, &SetComponent_Parms, NULL );

	pFnSetComponent->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.GetAndSetInteractionString
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatar::GetAndSetInteractionString ( )
{
	static UFunction* pFnGetAndSetInteractionString = NULL;

	if ( ! pFnGetAndSetInteractionString )
		pFnGetAndSetInteractionString = (UFunction*) UObject::GObjObjects()->Data[ 48982 ];

	ANowAtlasAvatar_execGetAndSetInteractionString_Parms GetAndSetInteractionString_Parms;

	pFnGetAndSetInteractionString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetInteractionString, &GetAndSetInteractionString_Parms, NULL );

	pFnGetAndSetInteractionString->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.GetAiIdentification
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatar::GetAiIdentification ( )
{
	static UFunction* pFnGetAiIdentification = NULL;

	if ( ! pFnGetAiIdentification )
		pFnGetAiIdentification = (UFunction*) UObject::GObjObjects()->Data[ 48980 ];

	ANowAtlasAvatar_execGetAiIdentification_Parms GetAiIdentification_Parms;

	pFnGetAiIdentification->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAiIdentification, &GetAiIdentification_Parms, NULL );

	pFnGetAiIdentification->FunctionFlags |= 0x400;

	return GetAiIdentification_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatar::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 48978 ];

	ANowAtlasAvatar_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.GetAndCreateBodyFinished
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatar::GetAndCreateBodyFinished ( )
{
	static UFunction* pFnGetAndCreateBodyFinished = NULL;

	if ( ! pFnGetAndCreateBodyFinished )
		pFnGetAndCreateBodyFinished = (UFunction*) UObject::GObjObjects()->Data[ 48977 ];

	ANowAtlasAvatar_execGetAndCreateBodyFinished_Parms GetAndCreateBodyFinished_Parms;

	pFnGetAndCreateBodyFinished->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateBodyFinished, &GetAndCreateBodyFinished_Parms, NULL );

	pFnGetAndCreateBodyFinished->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.GetAndCreateBody
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatar::GetAndCreateBody ( unsigned long bReInit )
{
	static UFunction* pFnGetAndCreateBody = NULL;

	if ( ! pFnGetAndCreateBody )
		pFnGetAndCreateBody = (UFunction*) UObject::GObjObjects()->Data[ 48975 ];

	ANowAtlasAvatar_execGetAndCreateBody_Parms GetAndCreateBody_Parms;
	GetAndCreateBody_Parms.bReInit = bReInit;

	pFnGetAndCreateBody->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateBody, &GetAndCreateBody_Parms, NULL );

	pFnGetAndCreateBody->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.CorrectMyPos
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatar::CorrectMyPos ( )
{
	static UFunction* pFnCorrectMyPos = NULL;

	if ( ! pFnCorrectMyPos )
		pFnCorrectMyPos = (UFunction*) UObject::GObjObjects()->Data[ 48974 ];

	ANowAtlasAvatar_execCorrectMyPos_Parms CorrectMyPos_Parms;

	pFnCorrectMyPos->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCorrectMyPos, &CorrectMyPos_Parms, NULL );

	pFnCorrectMyPos->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.GetFlag
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatar::GetFlag ( )
{
	static UFunction* pFnGetFlag = NULL;

	if ( ! pFnGetFlag )
		pFnGetFlag = (UFunction*) UObject::GObjObjects()->Data[ 48973 ];

	ANowAtlasAvatar_execGetFlag_Parms GetFlag_Parms;

	pFnGetFlag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFlag, &GetFlag_Parms, NULL );

	pFnGetFlag->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.NewRotation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatar::NewRotation ( )
{
	static UFunction* pFnNewRotation = NULL;

	if ( ! pFnNewRotation )
		pFnNewRotation = (UFunction*) UObject::GObjObjects()->Data[ 48972 ];

	ANowAtlasAvatar_execNewRotation_Parms NewRotation_Parms;

	pFnNewRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNewRotation, &NewRotation_Parms, NULL );

	pFnNewRotation->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.GetAtlasType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatar::GetAtlasType ( )
{
	static UFunction* pFnGetAtlasType = NULL;

	if ( ! pFnGetAtlasType )
		pFnGetAtlasType = (UFunction*) UObject::GObjObjects()->Data[ 48970 ];

	ANowAtlasAvatar_execGetAtlasType_Parms GetAtlasType_Parms;

	pFnGetAtlasType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasType, &GetAtlasType_Parms, NULL );

	pFnGetAtlasType->FunctionFlags |= 0x400;

	return GetAtlasType_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.TeleportPosUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatar::TeleportPosUpdate ( )
{
	static UFunction* pFnTeleportPosUpdate = NULL;

	if ( ! pFnTeleportPosUpdate )
		pFnTeleportPosUpdate = (UFunction*) UObject::GObjObjects()->Data[ 48969 ];

	ANowAtlasAvatar_execTeleportPosUpdate_Parms TeleportPosUpdate_Parms;

	pFnTeleportPosUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTeleportPosUpdate, &TeleportPosUpdate_Parms, NULL );

	pFnTeleportPosUpdate->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.GetAtlasComponent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UComponent*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )

class UComponent* ANowAtlasAvatar::GetAtlasComponent ( )
{
	static UFunction* pFnGetAtlasComponent = NULL;

	if ( ! pFnGetAtlasComponent )
		pFnGetAtlasComponent = (UFunction*) UObject::GObjObjects()->Data[ 48967 ];

	ANowAtlasAvatar_execGetAtlasComponent_Parms GetAtlasComponent_Parms;

	pFnGetAtlasComponent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasComponent, &GetAtlasComponent_Parms, NULL );

	pFnGetAtlasComponent->FunctionFlags |= 0x400;

	return GetAtlasComponent_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.Use
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatar::Use ( )
{
	static UFunction* pFnUse = NULL;

	if ( ! pFnUse )
		pFnUse = (UFunction*) UObject::GObjObjects()->Data[ 48966 ];

	ANowAtlasAvatar_execUse_Parms Use_Parms;

	pFnUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUse, &Use_Parms, NULL );

	pFnUse->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.StartPhysDeath
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            lastHitBoneID                  ( CPF_Parm )

void ANowAtlasAvatar::StartPhysDeath ( int lastHitBoneID )
{
	static UFunction* pFnStartPhysDeath = NULL;

	if ( ! pFnStartPhysDeath )
		pFnStartPhysDeath = (UFunction*) UObject::GObjObjects()->Data[ 48964 ];

	ANowAtlasAvatar_execStartPhysDeath_Parms StartPhysDeath_Parms;
	StartPhysDeath_Parms.lastHitBoneID = lastHitBoneID;

	pFnStartPhysDeath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartPhysDeath, &StartPhysDeath_Parms, NULL );

	pFnStartPhysDeath->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiSpawner.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowAtlasAvatarAiSpawner::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50084 ];

	ANowAtlasAvatarAiSpawner_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiSpawnerStructure.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowAtlasAvatarAiSpawnerStructure::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50089 ];

	ANowAtlasAvatarAiSpawnerStructure_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEditorOnly.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowAtlasAvatarEditorOnly::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50137 ];

	ANowAtlasAvatarEditorOnly_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEvent.DrawDebug
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          fRange                         ( CPF_Parm )

void ANowAtlasAvatarEvent::eventDrawDebug ( float fRange )
{
	static UFunction* pFnDrawDebug = NULL;

	if ( ! pFnDrawDebug )
		pFnDrawDebug = (UFunction*) UObject::GObjObjects()->Data[ 50146 ];

	ANowAtlasAvatarEvent_eventDrawDebug_Parms DrawDebug_Parms;
	DrawDebug_Parms.fRange = fRange;

	this->ProcessEvent ( pFnDrawDebug, &DrawDebug_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEvent.UnTriggerMe
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEvent::eventUnTriggerMe ( )
{
	static UFunction* pFnUnTriggerMe = NULL;

	if ( ! pFnUnTriggerMe )
		pFnUnTriggerMe = (UFunction*) UObject::GObjObjects()->Data[ 50145 ];

	ANowAtlasAvatarEvent_eventUnTriggerMe_Parms UnTriggerMe_Parms;

	this->ProcessEvent ( pFnUnTriggerMe, &UnTriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEvent.TriggerMe
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEvent::eventTriggerMe ( )
{
	static UFunction* pFnTriggerMe = NULL;

	if ( ! pFnTriggerMe )
		pFnTriggerMe = (UFunction*) UObject::GObjObjects()->Data[ 50144 ];

	ANowAtlasAvatarEvent_eventTriggerMe_Parms TriggerMe_Parms;

	this->ProcessEvent ( pFnTriggerMe, &TriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEvent.PostBeginPlay
// [0x00020000] 
// Parameters infos:

void ANowAtlasAvatarEvent::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50143 ];

	ANowAtlasAvatarEvent_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEvent.ShowDebug
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarEvent::ShowDebug ( )
{
	static UFunction* pFnShowDebug = NULL;

	if ( ! pFnShowDebug )
		pFnShowDebug = (UFunction*) UObject::GObjObjects()->Data[ 50142 ];

	ANowAtlasAvatarEvent_execShowDebug_Parms ShowDebug_Parms;

	pFnShowDebug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowDebug, &ShowDebug_Parms, NULL );

	pFnShowDebug->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerStructure.PlayKeySound
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerStructure::eventPlayKeySound ( )
{
	static UFunction* pFnPlayKeySound = NULL;

	if ( ! pFnPlayKeySound )
		pFnPlayKeySound = (UFunction*) UObject::GObjObjects()->Data[ 50283 ];

	ANowAtlasAvatarPlayerStructure_eventPlayKeySound_Parms PlayKeySound_Parms;

	this->ProcessEvent ( pFnPlayKeySound, &PlayKeySound_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerStructure.useKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerStructure::useKey ( struct FString ItemGuid )
{
	static UFunction* pFnuseKey = NULL;

	if ( ! pFnuseKey )
		pFnuseKey = (UFunction*) UObject::GObjObjects()->Data[ 50281 ];

	ANowAtlasAvatarPlayerStructure_execuseKey_Parms useKey_Parms;
	memcpy ( &useKey_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnuseKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnuseKey, &useKey_Parms, NULL );

	pFnuseKey->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerStructure.getHouseParamFloat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ParamName                      ( CPF_Parm | CPF_NeedCtorLink )

float ANowAtlasAvatarPlayerStructure::getHouseParamFloat ( struct FString ParamName )
{
	static UFunction* pFngetHouseParamFloat = NULL;

	if ( ! pFngetHouseParamFloat )
		pFngetHouseParamFloat = (UFunction*) UObject::GObjObjects()->Data[ 50278 ];

	ANowAtlasAvatarPlayerStructure_execgetHouseParamFloat_Parms getHouseParamFloat_Parms;
	memcpy ( &getHouseParamFloat_Parms.ParamName, &ParamName, 0xC );

	pFngetHouseParamFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseParamFloat, &getHouseParamFloat_Parms, NULL );

	pFngetHouseParamFloat->FunctionFlags |= 0x400;

	return getHouseParamFloat_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerStructure.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatarPlayerStructure::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 50276 ];

	ANowAtlasAvatarPlayerStructure_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarKeySwitchObject::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50340 ];

	ANowAtlasAvatarKeySwitchObject_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.initMeshes
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarKeySwitchObject::initMeshes ( )
{
	static UFunction* pFninitMeshes = NULL;

	if ( ! pFninitMeshes )
		pFninitMeshes = (UFunction*) UObject::GObjObjects()->Data[ 50339 ];

	ANowAtlasAvatarKeySwitchObject_execinitMeshes_Parms initMeshes_Parms;

	this->ProcessEvent ( pFninitMeshes, &initMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.Init
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarKeySwitchObject::Init ( )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 50338 ];

	ANowAtlasAvatarKeySwitchObject_execInit_Parms Init_Parms;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.isTargetingMesh
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UStaticMeshComponent*    Mesh                           ( CPF_Parm | CPF_EditInline )

bool ANowAtlasAvatarKeySwitchObject::isTargetingMesh ( class UStaticMeshComponent* Mesh )
{
	static UFunction* pFnisTargetingMesh = NULL;

	if ( ! pFnisTargetingMesh )
		pFnisTargetingMesh = (UFunction*) UObject::GObjObjects()->Data[ 50325 ];

	ANowAtlasAvatarKeySwitchObject_execisTargetingMesh_Parms isTargetingMesh_Parms;
	isTargetingMesh_Parms.Mesh = Mesh;

	this->ProcessEvent ( pFnisTargetingMesh, &isTargetingMesh_Parms, NULL );

	return isTargetingMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.setBlocking
// [0x00020002] 
// Parameters infos:
// unsigned long                  blocking                       ( CPF_Parm )

void ANowAtlasAvatarKeySwitchObject::setBlocking ( unsigned long blocking )
{
	static UFunction* pFnsetBlocking = NULL;

	if ( ! pFnsetBlocking )
		pFnsetBlocking = (UFunction*) UObject::GObjObjects()->Data[ 50320 ];

	ANowAtlasAvatarKeySwitchObject_execsetBlocking_Parms setBlocking_Parms;
	setBlocking_Parms.blocking = blocking;

	this->ProcessEvent ( pFnsetBlocking, &setBlocking_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.GameMessage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  msg                            ( CPF_Parm )

void ANowAtlasAvatarKeySwitchObject::eventGameMessage ( unsigned char msg )
{
	static UFunction* pFnGameMessage = NULL;

	if ( ! pFnGameMessage )
		pFnGameMessage = (UFunction*) UObject::GObjObjects()->Data[ 50315 ];

	ANowAtlasAvatarKeySwitchObject_eventGameMessage_Parms GameMessage_Parms;
	GameMessage_Parms.msg = msg;

	this->ProcessEvent ( pFnGameMessage, &GameMessage_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.isTargetingBaseMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObject::eventisTargetingBaseMesh ( )
{
	static UFunction* pFnisTargetingBaseMesh = NULL;

	if ( ! pFnisTargetingBaseMesh )
		pFnisTargetingBaseMesh = (UFunction*) UObject::GObjObjects()->Data[ 50313 ];

	ANowAtlasAvatarKeySwitchObject_eventisTargetingBaseMesh_Parms isTargetingBaseMesh_Parms;

	this->ProcessEvent ( pFnisTargetingBaseMesh, &isTargetingBaseMesh_Parms, NULL );

	return isTargetingBaseMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.isTargetingInteractionMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObject::eventisTargetingInteractionMesh ( )
{
	static UFunction* pFnisTargetingInteractionMesh = NULL;

	if ( ! pFnisTargetingInteractionMesh )
		pFnisTargetingInteractionMesh = (UFunction*) UObject::GObjObjects()->Data[ 50311 ];

	ANowAtlasAvatarKeySwitchObject_eventisTargetingInteractionMesh_Parms isTargetingInteractionMesh_Parms;

	this->ProcessEvent ( pFnisTargetingInteractionMesh, &isTargetingInteractionMesh_Parms, NULL );

	return isTargetingInteractionMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.setMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bObjectState                   ( CPF_Parm )

void ANowAtlasAvatarKeySwitchObject::eventsetMesh ( unsigned long bObjectState )
{
	static UFunction* pFnsetMesh = NULL;

	if ( ! pFnsetMesh )
		pFnsetMesh = (UFunction*) UObject::GObjObjects()->Data[ 50307 ];

	ANowAtlasAvatarKeySwitchObject_eventsetMesh_Parms setMesh_Parms;
	setMesh_Parms.bObjectState = bObjectState;

	this->ProcessEvent ( pFnsetMesh, &setMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.useKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarKeySwitchObject::useKey ( struct FString ItemGuid )
{
	static UFunction* pFnuseKey = NULL;

	if ( ! pFnuseKey )
		pFnuseKey = (UFunction*) UObject::GObjObjects()->Data[ 50305 ];

	ANowAtlasAvatarKeySwitchObject_execuseKey_Parms useKey_Parms;
	memcpy ( &useKey_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnuseKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnuseKey, &useKey_Parms, NULL );

	pFnuseKey->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.getContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarKeySwitchObject::getContentInfo ( )
{
	static UFunction* pFngetContentInfo = NULL;

	if ( ! pFngetContentInfo )
		pFngetContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 50304 ];

	ANowAtlasAvatarKeySwitchObject_execgetContentInfo_Parms getContentInfo_Parms;

	pFngetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetContentInfo, &getContentInfo_Parms, NULL );

	pFngetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.isKeyMatching
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarKeySwitchObject::isKeyMatching ( struct FString ItemGuid )
{
	static UFunction* pFnisKeyMatching = NULL;

	if ( ! pFnisKeyMatching )
		pFnisKeyMatching = (UFunction*) UObject::GObjObjects()->Data[ 50301 ];

	ANowAtlasAvatarKeySwitchObject_execisKeyMatching_Parms isKeyMatching_Parms;
	memcpy ( &isKeyMatching_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnisKeyMatching->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisKeyMatching, &isKeyMatching_Parms, NULL );

	pFnisKeyMatching->FunctionFlags |= 0x400;

	return isKeyMatching_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.isObjectLocked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObject::isObjectLocked ( )
{
	static UFunction* pFnisObjectLocked = NULL;

	if ( ! pFnisObjectLocked )
		pFnisObjectLocked = (UFunction*) UObject::GObjObjects()->Data[ 50299 ];

	ANowAtlasAvatarKeySwitchObject_execisObjectLocked_Parms isObjectLocked_Parms;

	pFnisObjectLocked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisObjectLocked, &isObjectLocked_Parms, NULL );

	pFnisObjectLocked->FunctionFlags |= 0x400;

	return isObjectLocked_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.DestroyKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObject::DestroyKey ( )
{
	static UFunction* pFnDestroyKey = NULL;

	if ( ! pFnDestroyKey )
		pFnDestroyKey = (UFunction*) UObject::GObjObjects()->Data[ 50297 ];

	ANowAtlasAvatarKeySwitchObject_execDestroyKey_Parms DestroyKey_Parms;

	pFnDestroyKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDestroyKey, &DestroyKey_Parms, NULL );

	pFnDestroyKey->FunctionFlags |= 0x400;

	return DestroyKey_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.Update
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObject::Update ( )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 50295 ];

	ANowAtlasAvatarKeySwitchObject_execUpdate_Parms Update_Parms;

	pFnUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );

	pFnUpdate->FunctionFlags |= 0x400;

	return Update_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarKeySwitchObject::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50292 ];

	ANowAtlasAvatarKeySwitchObject_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectChest.isTargetingInteractionMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObjectChest::eventisTargetingInteractionMesh ( )
{
	static UFunction* pFnisTargetingInteractionMesh = NULL;

	if ( ! pFnisTargetingInteractionMesh )
		pFnisTargetingInteractionMesh = (UFunction*) UObject::GObjObjects()->Data[ 50352 ];

	ANowAtlasAvatarKeySwitchObjectChest_eventisTargetingInteractionMesh_Parms isTargetingInteractionMesh_Parms;

	this->ProcessEvent ( pFnisTargetingInteractionMesh, &isTargetingInteractionMesh_Parms, NULL );

	return isTargetingInteractionMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectChest.useKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarKeySwitchObjectChest::useKey ( struct FString ItemGuid )
{
	static UFunction* pFnuseKey = NULL;

	if ( ! pFnuseKey )
		pFnuseKey = (UFunction*) UObject::GObjObjects()->Data[ 50350 ];

	ANowAtlasAvatarKeySwitchObjectChest_execuseKey_Parms useKey_Parms;
	memcpy ( &useKey_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnuseKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnuseKey, &useKey_Parms, NULL );

	pFnuseKey->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectChest.Update
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObjectChest::Update ( )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 50348 ];

	ANowAtlasAvatarKeySwitchObjectChest_execUpdate_Parms Update_Parms;

	pFnUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );

	pFnUpdate->FunctionFlags |= 0x400;

	return Update_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectChest.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarKeySwitchObjectChest::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50345 ];

	ANowAtlasAvatarKeySwitchObjectChest_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectDoor.useKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarKeySwitchObjectDoor::useKey ( struct FString ItemGuid )
{
	static UFunction* pFnuseKey = NULL;

	if ( ! pFnuseKey )
		pFnuseKey = (UFunction*) UObject::GObjObjects()->Data[ 50364 ];

	ANowAtlasAvatarKeySwitchObjectDoor_execuseKey_Parms useKey_Parms;
	memcpy ( &useKey_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnuseKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnuseKey, &useKey_Parms, NULL );

	pFnuseKey->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectDoor.Update
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObjectDoor::Update ( )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 50362 ];

	ANowAtlasAvatarKeySwitchObjectDoor_execUpdate_Parms Update_Parms;

	pFnUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );

	pFnUpdate->FunctionFlags |= 0x400;

	return Update_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectDoor.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarKeySwitchObjectDoor::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50359 ];

	ANowAtlasAvatarKeySwitchObjectDoor_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetGFX
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowGFXHud*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHud* ANowAtlasAvatarPlayerHouse::eventGetGFX ( )
{
	static UFunction* pFnGetGFX = NULL;

	if ( ! pFnGetGFX )
		pFnGetGFX = (UFunction*) UObject::GObjObjects()->Data[ 51059 ];

	ANowAtlasAvatarPlayerHouse_eventGetGFX_Parms GetGFX_Parms;

	this->ProcessEvent ( pFnGetGFX, &GetGFX_Parms, NULL );

	return GetGFX_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.importMeshStrings
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventimportMeshStrings ( )
{
	static UFunction* pFnimportMeshStrings = NULL;

	if ( ! pFnimportMeshStrings )
		pFnimportMeshStrings = (UFunction*) UObject::GObjObjects()->Data[ 51058 ];

	ANowAtlasAvatarPlayerHouse_eventimportMeshStrings_Parms importMeshStrings_Parms;

	this->ProcessEvent ( pFnimportMeshStrings, &importMeshStrings_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setDoorCollisionFalse
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setDoorCollisionFalse ( )
{
	static UFunction* pFnsetDoorCollisionFalse = NULL;

	if ( ! pFnsetDoorCollisionFalse )
		pFnsetDoorCollisionFalse = (UFunction*) UObject::GObjObjects()->Data[ 51056 ];

	ANowAtlasAvatarPlayerHouse_execsetDoorCollisionFalse_Parms setDoorCollisionFalse_Parms;

	this->ProcessEvent ( pFnsetDoorCollisionFalse, &setDoorCollisionFalse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setDoorCollisionTrue
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setDoorCollisionTrue ( )
{
	static UFunction* pFnsetDoorCollisionTrue = NULL;

	if ( ! pFnsetDoorCollisionTrue )
		pFnsetDoorCollisionTrue = (UFunction*) UObject::GObjObjects()->Data[ 51052 ];

	ANowAtlasAvatarPlayerHouse_execsetDoorCollisionTrue_Parms setDoorCollisionTrue_Parms;

	this->ProcessEvent ( pFnsetDoorCollisionTrue, &setDoorCollisionTrue_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.PendingHouseBuildingStatus
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::PendingHouseBuildingStatus ( )
{
	static UFunction* pFnPendingHouseBuildingStatus = NULL;

	if ( ! pFnPendingHouseBuildingStatus )
		pFnPendingHouseBuildingStatus = (UFunction*) UObject::GObjObjects()->Data[ 51051 ];

	ANowAtlasAvatarPlayerHouse_execPendingHouseBuildingStatus_Parms PendingHouseBuildingStatus_Parms;

	this->ProcessEvent ( pFnPendingHouseBuildingStatus, &PendingHouseBuildingStatus_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.initMovePlayersUpFromGround
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::initMovePlayersUpFromGround ( )
{
	static UFunction* pFninitMovePlayersUpFromGround = NULL;

	if ( ! pFninitMovePlayersUpFromGround )
		pFninitMovePlayersUpFromGround = (UFunction*) UObject::GObjObjects()->Data[ 51048 ];

	ANowAtlasAvatarPlayerHouse_execinitMovePlayersUpFromGround_Parms initMovePlayersUpFromGround_Parms;

	this->ProcessEvent ( pFninitMovePlayersUpFromGround, &initMovePlayersUpFromGround_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51047 ];

	ANowAtlasAvatarPlayerHouse_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setDoorStartMeshes
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setDoorStartMeshes ( )
{
	static UFunction* pFnsetDoorStartMeshes = NULL;

	if ( ! pFnsetDoorStartMeshes )
		pFnsetDoorStartMeshes = (UFunction*) UObject::GObjObjects()->Data[ 51041 ];

	ANowAtlasAvatarPlayerHouse_execsetDoorStartMeshes_Parms setDoorStartMeshes_Parms;

	this->ProcessEvent ( pFnsetDoorStartMeshes, &setDoorStartMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.addMeshes
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::addMeshes ( )
{
	static UFunction* pFnaddMeshes = NULL;

	if ( ! pFnaddMeshes )
		pFnaddMeshes = (UFunction*) UObject::GObjObjects()->Data[ 51040 ];

	ANowAtlasAvatarPlayerHouse_execaddMeshes_Parms addMeshes_Parms;

	this->ProcessEvent ( pFnaddMeshes, &addMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.CreateHouse
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::CreateHouse ( int _houseType )
{
	static UFunction* pFnCreateHouse = NULL;

	if ( ! pFnCreateHouse )
		pFnCreateHouse = (UFunction*) UObject::GObjObjects()->Data[ 51038 ];

	ANowAtlasAvatarPlayerHouse_execCreateHouse_Parms CreateHouse_Parms;
	CreateHouse_Parms._houseType = _houseType;

	this->ProcessEvent ( pFnCreateHouse, &CreateHouse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.CreateSign
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::CreateSign ( )
{
	static UFunction* pFnCreateSign = NULL;

	if ( ! pFnCreateSign )
		pFnCreateSign = (UFunction*) UObject::GObjObjects()->Data[ 51036 ];

	ANowAtlasAvatarPlayerHouse_execCreateSign_Parms CreateSign_Parms;

	this->ProcessEvent ( pFnCreateSign, &CreateSign_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.CreateDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::CreateDoor ( )
{
	static UFunction* pFnCreateDoor = NULL;

	if ( ! pFnCreateDoor )
		pFnCreateDoor = (UFunction*) UObject::GObjObjects()->Data[ 51030 ];

	ANowAtlasAvatarPlayerHouse_execCreateDoor_Parms CreateDoor_Parms;

	this->ProcessEvent ( pFnCreateDoor, &CreateDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.closeDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::closeDoor ( )
{
	static UFunction* pFncloseDoor = NULL;

	if ( ! pFncloseDoor )
		pFncloseDoor = (UFunction*) UObject::GObjObjects()->Data[ 51028 ];

	ANowAtlasAvatarPlayerHouse_execcloseDoor_Parms closeDoor_Parms;

	this->ProcessEvent ( pFncloseDoor, &closeDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.openDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::openDoor ( )
{
	static UFunction* pFnopenDoor = NULL;

	if ( ! pFnopenDoor )
		pFnopenDoor = (UFunction*) UObject::GObjObjects()->Data[ 51026 ];

	ANowAtlasAvatarPlayerHouse_execopenDoor_Parms openDoor_Parms;

	this->ProcessEvent ( pFnopenDoor, &openDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.targetStables
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// struct FVector                 EndShot                        ( CPF_Parm )
// struct FVector                 StartShot                      ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouse::targetStables ( struct FVector HitLocation, struct FVector HitNormal, struct FVector EndShot, struct FVector StartShot )
{
	static UFunction* pFntargetStables = NULL;

	if ( ! pFntargetStables )
		pFntargetStables = (UFunction*) UObject::GObjObjects()->Data[ 51020 ];

	ANowAtlasAvatarPlayerHouse_exectargetStables_Parms targetStables_Parms;
	memcpy ( &targetStables_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &targetStables_Parms.HitNormal, &HitNormal, 0xC );
	memcpy ( &targetStables_Parms.EndShot, &EndShot, 0xC );
	memcpy ( &targetStables_Parms.StartShot, &StartShot, 0xC );

	this->ProcessEvent ( pFntargetStables, &targetStables_Parms, NULL );

	return targetStables_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.TargetShop
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// struct FVector                 EndShot                        ( CPF_Parm )
// struct FVector                 StartShot                      ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouse::TargetShop ( struct FVector HitLocation, struct FVector HitNormal, struct FVector EndShot, struct FVector StartShot )
{
	static UFunction* pFnTargetShop = NULL;

	if ( ! pFnTargetShop )
		pFnTargetShop = (UFunction*) UObject::GObjObjects()->Data[ 51013 ];

	ANowAtlasAvatarPlayerHouse_execTargetShop_Parms TargetShop_Parms;
	memcpy ( &TargetShop_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TargetShop_Parms.HitNormal, &HitNormal, 0xC );
	memcpy ( &TargetShop_Parms.EndShot, &EndShot, 0xC );
	memcpy ( &TargetShop_Parms.StartShot, &StartShot, 0xC );

	this->ProcessEvent ( pFnTargetShop, &TargetShop_Parms, NULL );

	return TargetShop_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.hasDeposit
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::hasDeposit ( )
{
	static UFunction* pFnhasDeposit = NULL;

	if ( ! pFnhasDeposit )
		pFnhasDeposit = (UFunction*) UObject::GObjObjects()->Data[ 51011 ];

	ANowAtlasAvatarPlayerHouse_exechasDeposit_Parms hasDeposit_Parms;

	this->ProcessEvent ( pFnhasDeposit, &hasDeposit_Parms, NULL );

	return hasDeposit_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.TargetCraftinTable
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::eventTargetCraftinTable ( )
{
	static UFunction* pFnTargetCraftinTable = NULL;

	if ( ! pFnTargetCraftinTable )
		pFnTargetCraftinTable = (UFunction*) UObject::GObjObjects()->Data[ 51007 ];

	ANowAtlasAvatarPlayerHouse_eventTargetCraftinTable_Parms TargetCraftinTable_Parms;

	this->ProcessEvent ( pFnTargetCraftinTable, &TargetCraftinTable_Parms, NULL );

	return TargetCraftinTable_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.TargetMesh
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::eventTargetMesh ( )
{
	static UFunction* pFnTargetMesh = NULL;

	if ( ! pFnTargetMesh )
		pFnTargetMesh = (UFunction*) UObject::GObjObjects()->Data[ 50989 ];

	ANowAtlasAvatarPlayerHouse_eventTargetMesh_Parms TargetMesh_Parms;

	this->ProcessEvent ( pFnTargetMesh, &TargetMesh_Parms, NULL );

	return TargetMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.toCloseToTheDoor
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::eventtoCloseToTheDoor ( )
{
	static UFunction* pFntoCloseToTheDoor = NULL;

	if ( ! pFntoCloseToTheDoor )
		pFntoCloseToTheDoor = (UFunction*) UObject::GObjObjects()->Data[ 50973 ];

	ANowAtlasAvatarPlayerHouse_eventtoCloseToTheDoor_Parms toCloseToTheDoor_Parms;

	this->ProcessEvent ( pFntoCloseToTheDoor, &toCloseToTheDoor_Parms, NULL );

	return toCloseToTheDoor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getMesh
// [0x00C20802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iHitWorkbench                  ( CPF_Parm | CPF_OutParm )

class AActor* ANowAtlasAvatarPlayerHouse::eventgetMesh ( int* iHitWorkbench )
{
	static UFunction* pFngetMesh = NULL;

	if ( ! pFngetMesh )
		pFngetMesh = (UFunction*) UObject::GObjObjects()->Data[ 50957 ];

	ANowAtlasAvatarPlayerHouse_eventgetMesh_Parms getMesh_Parms;

	this->ProcessEvent ( pFngetMesh, &getMesh_Parms, NULL );

	if ( iHitWorkbench )
		*iHitWorkbench = getMesh_Parms.iHitWorkbench;

	return getMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.sendMessageToHouse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 messageTwo                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarPlayerHouse::eventsendMessageToHouse ( struct FString Message, struct FString messageTwo )
{
	static UFunction* pFnsendMessageToHouse = NULL;

	if ( ! pFnsendMessageToHouse )
		pFnsendMessageToHouse = (UFunction*) UObject::GObjObjects()->Data[ 50950 ];

	ANowAtlasAvatarPlayerHouse_eventsendMessageToHouse_Parms sendMessageToHouse_Parms;
	memcpy ( &sendMessageToHouse_Parms.Message, &Message, 0xC );
	memcpy ( &sendMessageToHouse_Parms.messageTwo, &messageTwo, 0xC );

	this->ProcessEvent ( pFnsendMessageToHouse, &sendMessageToHouse_Parms, NULL );

	return sendMessageToHouse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.sendReqBToHouse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarPlayerHouse::eventsendReqBToHouse ( struct FString Message )
{
	static UFunction* pFnsendReqBToHouse = NULL;

	if ( ! pFnsendReqBToHouse )
		pFnsendReqBToHouse = (UFunction*) UObject::GObjObjects()->Data[ 50944 ];

	ANowAtlasAvatarPlayerHouse_eventsendReqBToHouse_Parms sendReqBToHouse_Parms;
	memcpy ( &sendReqBToHouse_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnsendReqBToHouse, &sendReqBToHouse_Parms, NULL );

	return sendReqBToHouse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setnonGhostMode
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setnonGhostMode ( )
{
	static UFunction* pFnsetnonGhostMode = NULL;

	if ( ! pFnsetnonGhostMode )
		pFnsetnonGhostMode = (UFunction*) UObject::GObjObjects()->Data[ 50943 ];

	ANowAtlasAvatarPlayerHouse_execsetnonGhostMode_Parms setnonGhostMode_Parms;

	this->ProcessEvent ( pFnsetnonGhostMode, &setnonGhostMode_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setOldMaterial
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setOldMaterial ( )
{
	static UFunction* pFnsetOldMaterial = NULL;

	if ( ! pFnsetOldMaterial )
		pFnsetOldMaterial = (UFunction*) UObject::GObjObjects()->Data[ 50942 ];

	ANowAtlasAvatarPlayerHouse_execsetOldMaterial_Parms setOldMaterial_Parms;

	this->ProcessEvent ( pFnsetOldMaterial, &setOldMaterial_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setGhostMode
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setGhostMode ( )
{
	static UFunction* pFnsetGhostMode = NULL;

	if ( ! pFnsetGhostMode )
		pFnsetGhostMode = (UFunction*) UObject::GObjObjects()->Data[ 50938 ];

	ANowAtlasAvatarPlayerHouse_execsetGhostMode_Parms setGhostMode_Parms;

	this->ProcessEvent ( pFnsetGhostMode, &setGhostMode_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.destroyHousePlan
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::eventdestroyHousePlan ( )
{
	static UFunction* pFndestroyHousePlan = NULL;

	if ( ! pFndestroyHousePlan )
		pFndestroyHousePlan = (UFunction*) UObject::GObjObjects()->Data[ 50935 ];

	ANowAtlasAvatarPlayerHouse_eventdestroyHousePlan_Parms destroyHousePlan_Parms;

	this->ProcessEvent ( pFndestroyHousePlan, &destroyHousePlan_Parms, NULL );

	return destroyHousePlan_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setHouseMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventsetHouseMesh ( )
{
	static UFunction* pFnsetHouseMesh = NULL;

	if ( ! pFnsetHouseMesh )
		pFnsetHouseMesh = (UFunction*) UObject::GObjObjects()->Data[ 50934 ];

	ANowAtlasAvatarPlayerHouse_eventsetHouseMesh_Parms setHouseMesh_Parms;

	this->ProcessEvent ( pFnsetHouseMesh, &setHouseMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getDoorUsed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::getDoorUsed ( )
{
	static UFunction* pFngetDoorUsed = NULL;

	if ( ! pFngetDoorUsed )
		pFngetDoorUsed = (UFunction*) UObject::GObjObjects()->Data[ 50932 ];

	ANowAtlasAvatarPlayerHouse_execgetDoorUsed_Parms getDoorUsed_Parms;

	this->ProcessEvent ( pFngetDoorUsed, &getDoorUsed_Parms, NULL );

	return getDoorUsed_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleOpenDoor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  doorIsOpen                     ( CPF_Parm )
// int                            door                           ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::eventToggleOpenDoor ( unsigned long doorIsOpen, int door )
{
	static UFunction* pFnToggleOpenDoor = NULL;

	if ( ! pFnToggleOpenDoor )
		pFnToggleOpenDoor = (UFunction*) UObject::GObjObjects()->Data[ 50927 ];

	ANowAtlasAvatarPlayerHouse_eventToggleOpenDoor_Parms ToggleOpenDoor_Parms;
	ToggleOpenDoor_Parms.doorIsOpen = doorIsOpen;
	ToggleOpenDoor_Parms.door = door;

	this->ProcessEvent ( pFnToggleOpenDoor, &ToggleOpenDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isTargetingDoor
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            door                           ( CPF_Parm | CPF_OutParm )

bool ANowAtlasAvatarPlayerHouse::isTargetingDoor ( int* door )
{
	static UFunction* pFnisTargetingDoor = NULL;

	if ( ! pFnisTargetingDoor )
		pFnisTargetingDoor = (UFunction*) UObject::GObjObjects()->Data[ 50912 ];

	ANowAtlasAvatarPlayerHouse_execisTargetingDoor_Parms isTargetingDoor_Parms;

	this->ProcessEvent ( pFnisTargetingDoor, &isTargetingDoor_Parms, NULL );

	if ( door )
		*door = isTargetingDoor_Parms.door;

	return isTargetingDoor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.HelpConstruction
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::eventHelpConstruction ( )
{
	static UFunction* pFnHelpConstruction = NULL;

	if ( ! pFnHelpConstruction )
		pFnHelpConstruction = (UFunction*) UObject::GObjObjects()->Data[ 50908 ];

	ANowAtlasAvatarPlayerHouse_eventHelpConstruction_Parms HelpConstruction_Parms;

	this->ProcessEvent ( pFnHelpConstruction, &HelpConstruction_Parms, NULL );

	return HelpConstruction_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.stopWorking
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::stopWorking ( )
{
	static UFunction* pFnstopWorking = NULL;

	if ( ! pFnstopWorking )
		pFnstopWorking = (UFunction*) UObject::GObjObjects()->Data[ 50906 ];

	ANowAtlasAvatarPlayerHouse_execstopWorking_Parms stopWorking_Parms;

	this->ProcessEvent ( pFnstopWorking, &stopWorking_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isTargetingChest
// [0x00C20802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Chest                          ( CPF_Parm | CPF_OutParm )

bool ANowAtlasAvatarPlayerHouse::eventisTargetingChest ( int* Chest )
{
	static UFunction* pFnisTargetingChest = NULL;

	if ( ! pFnisTargetingChest )
		pFnisTargetingChest = (UFunction*) UObject::GObjObjects()->Data[ 50891 ];

	ANowAtlasAvatarPlayerHouse_eventisTargetingChest_Parms isTargetingChest_Parms;

	this->ProcessEvent ( pFnisTargetingChest, &isTargetingChest_Parms, NULL );

	if ( Chest )
		*Chest = isTargetingChest_Parms.Chest;

	return isTargetingChest_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleConstructionUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleConstructionUI ( )
{
	static UFunction* pFnToggleConstructionUI = NULL;

	if ( ! pFnToggleConstructionUI )
		pFnToggleConstructionUI = (UFunction*) UObject::GObjObjects()->Data[ 50890 ];

	ANowAtlasAvatarPlayerHouse_eventToggleConstructionUI_Parms ToggleConstructionUI_Parms;

	this->ProcessEvent ( pFnToggleConstructionUI, &ToggleConstructionUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleSignUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleSignUI ( )
{
	static UFunction* pFnToggleSignUI = NULL;

	if ( ! pFnToggleSignUI )
		pFnToggleSignUI = (UFunction*) UObject::GObjObjects()->Data[ 50889 ];

	ANowAtlasAvatarPlayerHouse_eventToggleSignUI_Parms ToggleSignUI_Parms;

	this->ProcessEvent ( pFnToggleSignUI, &ToggleSignUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleStartConstructionUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleStartConstructionUI ( )
{
	static UFunction* pFnToggleStartConstructionUI = NULL;

	if ( ! pFnToggleStartConstructionUI )
		pFnToggleStartConstructionUI = (UFunction*) UObject::GObjObjects()->Data[ 50887 ];

	ANowAtlasAvatarPlayerHouse_eventToggleStartConstructionUI_Parms ToggleStartConstructionUI_Parms;

	this->ProcessEvent ( pFnToggleStartConstructionUI, &ToggleStartConstructionUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.SetHouseRotation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FRotator                Rot                            ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::eventSetHouseRotation ( struct FRotator Rot )
{
	static UFunction* pFnSetHouseRotation = NULL;

	if ( ! pFnSetHouseRotation )
		pFnSetHouseRotation = (UFunction*) UObject::GObjObjects()->Data[ 50885 ];

	ANowAtlasAvatarPlayerHouse_eventSetHouseRotation_Parms SetHouseRotation_Parms;
	memcpy ( &SetHouseRotation_Parms.Rot, &Rot, 0xC );

	this->ProcessEvent ( pFnSetHouseRotation, &SetHouseRotation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleHouseTradeUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleHouseTradeUI ( )
{
	static UFunction* pFnToggleHouseTradeUI = NULL;

	if ( ! pFnToggleHouseTradeUI )
		pFnToggleHouseTradeUI = (UFunction*) UObject::GObjObjects()->Data[ 50882 ];

	ANowAtlasAvatarPlayerHouse_eventToggleHouseTradeUI_Parms ToggleHouseTradeUI_Parms;

	this->ProcessEvent ( pFnToggleHouseTradeUI, &ToggleHouseTradeUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleeCreateNewGuildUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleeCreateNewGuildUI ( )
{
	static UFunction* pFnToggleeCreateNewGuildUI = NULL;

	if ( ! pFnToggleeCreateNewGuildUI )
		pFnToggleeCreateNewGuildUI = (UFunction*) UObject::GObjObjects()->Data[ 50878 ];

	ANowAtlasAvatarPlayerHouse_eventToggleeCreateNewGuildUI_Parms ToggleeCreateNewGuildUI_Parms;

	this->ProcessEvent ( pFnToggleeCreateNewGuildUI, &ToggleeCreateNewGuildUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleGuildStoneUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleGuildStoneUI ( )
{
	static UFunction* pFnToggleGuildStoneUI = NULL;

	if ( ! pFnToggleGuildStoneUI )
		pFnToggleGuildStoneUI = (UFunction*) UObject::GObjObjects()->Data[ 50876 ];

	ANowAtlasAvatarPlayerHouse_eventToggleGuildStoneUI_Parms ToggleGuildStoneUI_Parms;

	this->ProcessEvent ( pFnToggleGuildStoneUI, &ToggleGuildStoneUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleCraftingUI
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// int                            craftingType                   ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::eventToggleCraftingUI ( int craftingType )
{
	static UFunction* pFnToggleCraftingUI = NULL;

	if ( ! pFnToggleCraftingUI )
		pFnToggleCraftingUI = (UFunction*) UObject::GObjObjects()->Data[ 50874 ];

	ANowAtlasAvatarPlayerHouse_eventToggleCraftingUI_Parms ToggleCraftingUI_Parms;
	ToggleCraftingUI_Parms.craftingType = craftingType;

	this->ProcessEvent ( pFnToggleCraftingUI, &ToggleCraftingUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse._useKey
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Target                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            TargetIndex                    ( CPF_Parm | CPF_OutParm )

bool ANowAtlasAvatarPlayerHouse::event_useKey ( struct FString* Target, int* TargetIndex )
{
	static UFunction* pFn_useKey = NULL;

	if ( ! pFn_useKey )
		pFn_useKey = (UFunction*) UObject::GObjObjects()->Data[ 50867 ];

	ANowAtlasAvatarPlayerHouse_event_useKey_Parms _useKey_Parms;

	this->ProcessEvent ( pFn_useKey, &_useKey_Parms, NULL );

	if ( Target )
		memcpy ( Target, &_useKey_Parms.Target, 0xC );

	if ( TargetIndex )
		*TargetIndex = _useKey_Parms.TargetIndex;

	return _useKey_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse._sendMessageToPlayer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 messsage                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerHouse::event_sendMessageToPlayer ( struct FString messsage )
{
	static UFunction* pFn_sendMessageToPlayer = NULL;

	if ( ! pFn_sendMessageToPlayer )
		pFn_sendMessageToPlayer = (UFunction*) UObject::GObjObjects()->Data[ 50864 ];

	ANowAtlasAvatarPlayerHouse_event_sendMessageToPlayer_Parms _sendMessageToPlayer_Parms;
	memcpy ( &_sendMessageToPlayer_Parms.messsage, &messsage, 0xC );

	this->ProcessEvent ( pFn_sendMessageToPlayer, &_sendMessageToPlayer_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setDoorMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )
// int                            _nrOfDoors                     ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setDoorMeshes ( int _houseType, int _tier, int _nrOfDoors )
{
	static UFunction* pFnsetDoorMeshes = NULL;

	if ( ! pFnsetDoorMeshes )
		pFnsetDoorMeshes = (UFunction*) UObject::GObjObjects()->Data[ 50859 ];

	ANowAtlasAvatarPlayerHouse_execsetDoorMeshes_Parms setDoorMeshes_Parms;
	setDoorMeshes_Parms._houseType = _houseType;
	setDoorMeshes_Parms._tier = _tier;
	setDoorMeshes_Parms._nrOfDoors = _nrOfDoors;

	this->ProcessEvent ( pFnsetDoorMeshes, &setDoorMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setStairsMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )
// int                            _nrOfStairs                    ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setStairsMeshes ( int _houseType, int _tier, int _nrOfStairs )
{
	static UFunction* pFnsetStairsMeshes = NULL;

	if ( ! pFnsetStairsMeshes )
		pFnsetStairsMeshes = (UFunction*) UObject::GObjObjects()->Data[ 50854 ];

	ANowAtlasAvatarPlayerHouse_execsetStairsMeshes_Parms setStairsMeshes_Parms;
	setStairsMeshes_Parms._houseType = _houseType;
	setStairsMeshes_Parms._tier = _tier;
	setStairsMeshes_Parms._nrOfStairs = _nrOfStairs;

	this->ProcessEvent ( pFnsetStairsMeshes, &setStairsMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setChestMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setChestMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetChestMesh = NULL;

	if ( ! pFnsetChestMesh )
		pFnsetChestMesh = (UFunction*) UObject::GObjObjects()->Data[ 50850 ];

	ANowAtlasAvatarPlayerHouse_execsetChestMesh_Parms setChestMesh_Parms;
	setChestMesh_Parms._houseType = _houseType;
	setChestMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetChestMesh, &setChestMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setSignMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setSignMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetSignMesh = NULL;

	if ( ! pFnsetSignMesh )
		pFnsetSignMesh = (UFunction*) UObject::GObjObjects()->Data[ 50846 ];

	ANowAtlasAvatarPlayerHouse_execsetSignMesh_Parms setSignMesh_Parms;
	setSignMesh_Parms._houseType = _houseType;
	setSignMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetSignMesh, &setSignMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isPlayersInRange
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Distance                       ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouse::eventisPlayersInRange ( float Distance )
{
	static UFunction* pFnisPlayersInRange = NULL;

	if ( ! pFnisPlayersInRange )
		pFnisPlayersInRange = (UFunction*) UObject::GObjObjects()->Data[ 50843 ];

	ANowAtlasAvatarPlayerHouse_eventisPlayersInRange_Parms isPlayersInRange_Parms;
	isPlayersInRange_Parms.Distance = Distance;

	this->ProcessEvent ( pFnisPlayersInRange, &isPlayersInRange_Parms, NULL );

	return isPlayersInRange_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setHouseVolumeMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setHouseVolumeMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseVolumeMesh = NULL;

	if ( ! pFnsetHouseVolumeMesh )
		pFnsetHouseVolumeMesh = (UFunction*) UObject::GObjObjects()->Data[ 50840 ];

	ANowAtlasAvatarPlayerHouse_execsetHouseVolumeMesh_Parms setHouseVolumeMesh_Parms;
	setHouseVolumeMesh_Parms._houseType = _houseType;
	setHouseVolumeMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseVolumeMesh, &setHouseVolumeMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse._setModuleMeshes
// [0x00020002] 
// Parameters infos:
// int                            N                              ( CPF_Parm )
// struct FString                 houseType                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            Tier                           ( CPF_Parm )
// int                            moduleType                     ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::_setModuleMeshes ( int N, struct FString houseType, int Tier, int moduleType )
{
	static UFunction* pFn_setModuleMeshes = NULL;

	if ( ! pFn_setModuleMeshes )
		pFn_setModuleMeshes = (UFunction*) UObject::GObjObjects()->Data[ 50835 ];

	ANowAtlasAvatarPlayerHouse_exec_setModuleMeshes_Parms _setModuleMeshes_Parms;
	_setModuleMeshes_Parms.N = N;
	memcpy ( &_setModuleMeshes_Parms.houseType, &houseType, 0xC );
	_setModuleMeshes_Parms.Tier = Tier;
	_setModuleMeshes_Parms.moduleType = moduleType;

	this->ProcessEvent ( pFn_setModuleMeshes, &_setModuleMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setModuleStairs
// [0x00020000] 
// Parameters infos:
// int                            N                              ( CPF_Parm )
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )
// int                            _nrOfStairs                    ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setModuleStairs ( int N, int _houseType, int _tier, int _nrOfStairs )
{
	static UFunction* pFnsetModuleStairs = NULL;

	if ( ! pFnsetModuleStairs )
		pFnsetModuleStairs = (UFunction*) UObject::GObjObjects()->Data[ 50830 ];

	ANowAtlasAvatarPlayerHouse_execsetModuleStairs_Parms setModuleStairs_Parms;
	setModuleStairs_Parms.N = N;
	setModuleStairs_Parms._houseType = _houseType;
	setModuleStairs_Parms._tier = _tier;
	setModuleStairs_Parms._nrOfStairs = _nrOfStairs;

	this->ProcessEvent ( pFnsetModuleStairs, &setModuleStairs_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setModuleDoors
// [0x00020000] 
// Parameters infos:
// int                            N                              ( CPF_Parm )
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )
// int                            _nrOfDoors                     ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setModuleDoors ( int N, int _houseType, int _tier, int _nrOfDoors )
{
	static UFunction* pFnsetModuleDoors = NULL;

	if ( ! pFnsetModuleDoors )
		pFnsetModuleDoors = (UFunction*) UObject::GObjObjects()->Data[ 50825 ];

	ANowAtlasAvatarPlayerHouse_execsetModuleDoors_Parms setModuleDoors_Parms;
	setModuleDoors_Parms.N = N;
	setModuleDoors_Parms._houseType = _houseType;
	setModuleDoors_Parms._tier = _tier;
	setModuleDoors_Parms._nrOfDoors = _nrOfDoors;

	this->ProcessEvent ( pFnsetModuleDoors, &setModuleDoors_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setModuleMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setModuleMeshes ( int _houseType, int _tier )
{
	static UFunction* pFnsetModuleMeshes = NULL;

	if ( ! pFnsetModuleMeshes )
		pFnsetModuleMeshes = (UFunction*) UObject::GObjObjects()->Data[ 50818 ];

	ANowAtlasAvatarPlayerHouse_execsetModuleMeshes_Parms setModuleMeshes_Parms;
	setModuleMeshes_Parms._houseType = _houseType;
	setModuleMeshes_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetModuleMeshes, &setModuleMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.DoHouseTrade
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventDoHouseTrade ( )
{
	static UFunction* pFnDoHouseTrade = NULL;

	if ( ! pFnDoHouseTrade )
		pFnDoHouseTrade = (UFunction*) UObject::GObjObjects()->Data[ 50815 ];

	ANowAtlasAvatarPlayerHouse_eventDoHouseTrade_Parms DoHouseTrade_Parms;

	this->ProcessEvent ( pFnDoHouseTrade, &DoHouseTrade_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setHouseMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setHouseMeshes ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseMeshes = NULL;

	if ( ! pFnsetHouseMeshes )
		pFnsetHouseMeshes = (UFunction*) UObject::GObjObjects()->Data[ 50812 ];

	ANowAtlasAvatarPlayerHouse_execsetHouseMeshes_Parms setHouseMeshes_Parms;
	setHouseMeshes_Parms._houseType = _houseType;
	setHouseMeshes_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseMeshes, &setHouseMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.RemoveHouseMeshes
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::RemoveHouseMeshes ( )
{
	static UFunction* pFnRemoveHouseMeshes = NULL;

	if ( ! pFnRemoveHouseMeshes )
		pFnRemoveHouseMeshes = (UFunction*) UObject::GObjObjects()->Data[ 50810 ];

	ANowAtlasAvatarPlayerHouse_execRemoveHouseMeshes_Parms RemoveHouseMeshes_Parms;

	this->ProcessEvent ( pFnRemoveHouseMeshes, &RemoveHouseMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setHouseProps
// [0x00020000] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setHouseProps ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseProps = NULL;

	if ( ! pFnsetHouseProps )
		pFnsetHouseProps = (UFunction*) UObject::GObjObjects()->Data[ 50807 ];

	ANowAtlasAvatarPlayerHouse_execsetHouseProps_Parms setHouseProps_Parms;
	setHouseProps_Parms._houseType = _houseType;
	setHouseProps_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseProps, &setHouseProps_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setDemolishedMesh
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setDemolishedMesh ( )
{
	static UFunction* pFnsetDemolishedMesh = NULL;

	if ( ! pFnsetDemolishedMesh )
		pFnsetDemolishedMesh = (UFunction*) UObject::GObjObjects()->Data[ 50806 ];

	ANowAtlasAvatarPlayerHouse_execsetDemolishedMesh_Parms setDemolishedMesh_Parms;

	this->ProcessEvent ( pFnsetDemolishedMesh, &setDemolishedMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.playHouseDestruction
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::playHouseDestruction ( )
{
	static UFunction* pFnplayHouseDestruction = NULL;

	if ( ! pFnplayHouseDestruction )
		pFnplayHouseDestruction = (UFunction*) UObject::GObjObjects()->Data[ 50805 ];

	ANowAtlasAvatarPlayerHouse_execplayHouseDestruction_Parms playHouseDestruction_Parms;

	this->ProcessEvent ( pFnplayHouseDestruction, &playHouseDestruction_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setGuildStoneMesh
// [0x00020002] 
// Parameters infos:
// int                            HouseTier                      ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setGuildStoneMesh ( int HouseTier )
{
	static UFunction* pFnsetGuildStoneMesh = NULL;

	if ( ! pFnsetGuildStoneMesh )
		pFnsetGuildStoneMesh = (UFunction*) UObject::GObjObjects()->Data[ 50802 ];

	ANowAtlasAvatarPlayerHouse_execsetGuildStoneMesh_Parms setGuildStoneMesh_Parms;
	setGuildStoneMesh_Parms.HouseTier = HouseTier;

	this->ProcessEvent ( pFnsetGuildStoneMesh, &setGuildStoneMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.SetGuildStoneLevel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iNewLevel                      ( CPF_Parm )
// int                            HouseTier                      ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::eventSetGuildStoneLevel ( int iNewLevel, int HouseTier )
{
	static UFunction* pFnSetGuildStoneLevel = NULL;

	if ( ! pFnSetGuildStoneLevel )
		pFnSetGuildStoneLevel = (UFunction*) UObject::GObjObjects()->Data[ 50798 ];

	ANowAtlasAvatarPlayerHouse_eventSetGuildStoneLevel_Parms SetGuildStoneLevel_Parms;
	SetGuildStoneLevel_Parms.iNewLevel = iNewLevel;
	SetGuildStoneLevel_Parms.HouseTier = HouseTier;

	this->ProcessEvent ( pFnSetGuildStoneLevel, &SetGuildStoneLevel_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse._getHouseMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::event_getHouseMesh ( )
{
	static UFunction* pFn_getHouseMesh = NULL;

	if ( ! pFn_getHouseMesh )
		pFn_getHouseMesh = (UFunction*) UObject::GObjObjects()->Data[ 50794 ];

	ANowAtlasAvatarPlayerHouse_event_getHouseMesh_Parms _getHouseMesh_Parms;

	this->ProcessEvent ( pFn_getHouseMesh, &_getHouseMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.sendMessageToClient
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerHouse::eventsendMessageToClient ( struct FString Message )
{
	static UFunction* pFnsendMessageToClient = NULL;

	if ( ! pFnsendMessageToClient )
		pFnsendMessageToClient = (UFunction*) UObject::GObjObjects()->Data[ 50791 ];

	ANowAtlasAvatarPlayerHouse_eventsendMessageToClient_Parms sendMessageToClient_Parms;
	memcpy ( &sendMessageToClient_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnsendMessageToClient, &sendMessageToClient_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerHouseOwner
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::eventisPlayerHouseOwner ( )
{
	static UFunction* pFnisPlayerHouseOwner = NULL;

	if ( ! pFnisPlayerHouseOwner )
		pFnisPlayerHouseOwner = (UFunction*) UObject::GObjObjects()->Data[ 50788 ];

	ANowAtlasAvatarPlayerHouse_eventisPlayerHouseOwner_Parms isPlayerHouseOwner_Parms;

	this->ProcessEvent ( pFnisPlayerHouseOwner, &isPlayerHouseOwner_Parms, NULL );

	return isPlayerHouseOwner_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.SpawnHitFx
// [0x00024800] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// unsigned long                  ClientFeedBack                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIgnoreParticles               ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarPlayerHouse::eventSpawnHitFx ( struct FVector HitLocation, unsigned long ClientFeedBack, unsigned long bIgnoreParticles )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = (UFunction*) UObject::GObjObjects()->Data[ 50784 ];

	ANowAtlasAvatarPlayerHouse_eventSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.HitLocation, &HitLocation, 0xC );
	SpawnHitFx_Parms.ClientFeedBack = ClientFeedBack;
	SpawnHitFx_Parms.bIgnoreParticles = bIgnoreParticles;

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setModWorkBench
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 StaticMesh                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 module                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            mod                            ( CPF_Parm )
// struct FString                 workBenchType                  ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerHouse::eventsetModWorkBench ( struct FString StaticMesh, struct FString module, int mod, struct FString workBenchType )
{
	static UFunction* pFnsetModWorkBench = NULL;

	if ( ! pFnsetModWorkBench )
		pFnsetModWorkBench = (UFunction*) UObject::GObjObjects()->Data[ 50778 ];

	ANowAtlasAvatarPlayerHouse_eventsetModWorkBench_Parms setModWorkBench_Parms;
	memcpy ( &setModWorkBench_Parms.StaticMesh, &StaticMesh, 0xC );
	memcpy ( &setModWorkBench_Parms.module, &module, 0xC );
	setModWorkBench_Parms.mod = mod;
	memcpy ( &setModWorkBench_Parms.workBenchType, &workBenchType, 0xC );

	this->ProcessEvent ( pFnsetModWorkBench, &setModWorkBench_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.clearWorkBench
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            module                         ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::eventclearWorkBench ( int module )
{
	static UFunction* pFnclearWorkBench = NULL;

	if ( ! pFnclearWorkBench )
		pFnclearWorkBench = (UFunction*) UObject::GObjObjects()->Data[ 50776 ];

	ANowAtlasAvatarPlayerHouse_eventclearWorkBench_Parms clearWorkBench_Parms;
	clearWorkBench_Parms.module = module;

	this->ProcessEvent ( pFnclearWorkBench, &clearWorkBench_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerInDoor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::eventisPlayerInDoor ( )
{
	static UFunction* pFnisPlayerInDoor = NULL;

	if ( ! pFnisPlayerInDoor )
		pFnisPlayerInDoor = (UFunction*) UObject::GObjObjects()->Data[ 50770 ];

	ANowAtlasAvatarPlayerHouse_eventisPlayerInDoor_Parms isPlayerInDoor_Parms;

	this->ProcessEvent ( pFnisPlayerInDoor, &isPlayerInDoor_Parms, NULL );

	return isPlayerInDoor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetPylonGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::GetPylonGuid ( )
{
	static UFunction* pFnGetPylonGuid = NULL;

	if ( ! pFnGetPylonGuid )
		pFnGetPylonGuid = (UFunction*) UObject::GObjObjects()->Data[ 50768 ];

	ANowAtlasAvatarPlayerHouse_execGetPylonGuid_Parms GetPylonGuid_Parms;

	pFnGetPylonGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPylonGuid, &GetPylonGuid_Parms, NULL );

	pFnGetPylonGuid->FunctionFlags |= 0x400;

	return GetPylonGuid_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetGuildTaxName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::GetGuildTaxName ( )
{
	static UFunction* pFnGetGuildTaxName = NULL;

	if ( ! pFnGetGuildTaxName )
		pFnGetGuildTaxName = (UFunction*) UObject::GObjObjects()->Data[ 50766 ];

	ANowAtlasAvatarPlayerHouse_execGetGuildTaxName_Parms GetGuildTaxName_Parms;

	pFnGetGuildTaxName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuildTaxName, &GetGuildTaxName_Parms, NULL );

	pFnGetGuildTaxName->FunctionFlags |= 0x400;

	return GetGuildTaxName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetGuildTax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetGuildTax ( )
{
	static UFunction* pFnGetGuildTax = NULL;

	if ( ! pFnGetGuildTax )
		pFnGetGuildTax = (UFunction*) UObject::GObjObjects()->Data[ 50764 ];

	ANowAtlasAvatarPlayerHouse_execGetGuildTax_Parms GetGuildTax_Parms;

	pFnGetGuildTax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuildTax, &GetGuildTax_Parms, NULL );

	pFnGetGuildTax->FunctionFlags |= 0x400;

	return GetGuildTax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.IsMyHouse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::IsMyHouse ( )
{
	static UFunction* pFnIsMyHouse = NULL;

	if ( ! pFnIsMyHouse )
		pFnIsMyHouse = (UFunction*) UObject::GObjObjects()->Data[ 50762 ];

	ANowAtlasAvatarPlayerHouse_execIsMyHouse_Parms IsMyHouse_Parms;

	pFnIsMyHouse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsMyHouse, &IsMyHouse_Parms, NULL );

	pFnIsMyHouse->FunctionFlags |= 0x400;

	return IsMyHouse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetHealthMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetHealthMax ( )
{
	static UFunction* pFnGetHealthMax = NULL;

	if ( ! pFnGetHealthMax )
		pFnGetHealthMax = (UFunction*) UObject::GObjObjects()->Data[ 50760 ];

	ANowAtlasAvatarPlayerHouse_execGetHealthMax_Parms GetHealthMax_Parms;

	pFnGetHealthMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealthMax, &GetHealthMax_Parms, NULL );

	pFnGetHealthMax->FunctionFlags |= 0x400;

	return GetHealthMax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetHealth ( )
{
	static UFunction* pFnGetHealth = NULL;

	if ( ! pFnGetHealth )
		pFnGetHealth = (UFunction*) UObject::GObjObjects()->Data[ 50758 ];

	ANowAtlasAvatarPlayerHouse_execGetHealth_Parms GetHealth_Parms;

	pFnGetHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealth, &GetHealth_Parms, NULL );

	pFnGetHealth->FunctionFlags |= 0x400;

	return GetHealth_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetMaxPayment
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetMaxPayment ( )
{
	static UFunction* pFnGetMaxPayment = NULL;

	if ( ! pFnGetMaxPayment )
		pFnGetMaxPayment = (UFunction*) UObject::GObjObjects()->Data[ 50756 ];

	ANowAtlasAvatarPlayerHouse_execGetMaxPayment_Parms GetMaxPayment_Parms;

	pFnGetMaxPayment->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxPayment, &GetMaxPayment_Parms, NULL );

	pFnGetMaxPayment->FunctionFlags |= 0x400;

	return GetMaxPayment_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetUpkeepPaidTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetUpkeepPaidTime ( )
{
	static UFunction* pFnGetUpkeepPaidTime = NULL;

	if ( ! pFnGetUpkeepPaidTime )
		pFnGetUpkeepPaidTime = (UFunction*) UObject::GObjObjects()->Data[ 50754 ];

	ANowAtlasAvatarPlayerHouse_execGetUpkeepPaidTime_Parms GetUpkeepPaidTime_Parms;

	pFnGetUpkeepPaidTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUpkeepPaidTime, &GetUpkeepPaidTime_Parms, NULL );

	pFnGetUpkeepPaidTime->FunctionFlags |= 0x400;

	return GetUpkeepPaidTime_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetUpkeepPaid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetUpkeepPaid ( )
{
	static UFunction* pFnGetUpkeepPaid = NULL;

	if ( ! pFnGetUpkeepPaid )
		pFnGetUpkeepPaid = (UFunction*) UObject::GObjObjects()->Data[ 50752 ];

	ANowAtlasAvatarPlayerHouse_execGetUpkeepPaid_Parms GetUpkeepPaid_Parms;

	pFnGetUpkeepPaid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUpkeepPaid, &GetUpkeepPaid_Parms, NULL );

	pFnGetUpkeepPaid->FunctionFlags |= 0x400;

	return GetUpkeepPaid_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetUpkeep
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetUpkeep ( )
{
	static UFunction* pFnGetUpkeep = NULL;

	if ( ! pFnGetUpkeep )
		pFnGetUpkeep = (UFunction*) UObject::GObjObjects()->Data[ 50750 ];

	ANowAtlasAvatarPlayerHouse_execGetUpkeep_Parms GetUpkeep_Parms;

	pFnGetUpkeep->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUpkeep, &GetUpkeep_Parms, NULL );

	pFnGetUpkeep->FunctionFlags |= 0x400;

	return GetUpkeep_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetHouseID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetHouseID ( )
{
	static UFunction* pFnGetHouseID = NULL;

	if ( ! pFnGetHouseID )
		pFnGetHouseID = (UFunction*) UObject::GObjObjects()->Data[ 50748 ];

	ANowAtlasAvatarPlayerHouse_execGetHouseID_Parms GetHouseID_Parms;

	pFnGetHouseID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHouseID, &GetHouseID_Parms, NULL );

	pFnGetHouseID->FunctionFlags |= 0x400;

	return GetHouseID_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetCollisionName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::GetCollisionName ( )
{
	static UFunction* pFnGetCollisionName = NULL;

	if ( ! pFnGetCollisionName )
		pFnGetCollisionName = (UFunction*) UObject::GObjObjects()->Data[ 50746 ];

	ANowAtlasAvatarPlayerHouse_execGetCollisionName_Parms GetCollisionName_Parms;

	pFnGetCollisionName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCollisionName, &GetCollisionName_Parms, NULL );

	pFnGetCollisionName->FunctionFlags |= 0x400;

	return GetCollisionName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isDepositSharedWithGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::isDepositSharedWithGuild ( )
{
	static UFunction* pFnisDepositSharedWithGuild = NULL;

	if ( ! pFnisDepositSharedWithGuild )
		pFnisDepositSharedWithGuild = (UFunction*) UObject::GObjObjects()->Data[ 50744 ];

	ANowAtlasAvatarPlayerHouse_execisDepositSharedWithGuild_Parms isDepositSharedWithGuild_Parms;

	pFnisDepositSharedWithGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisDepositSharedWithGuild, &isDepositSharedWithGuild_Parms, NULL );

	pFnisDepositSharedWithGuild->FunctionFlags |= 0x400;

	return isDepositSharedWithGuild_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHouseTax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::getHouseTax ( )
{
	static UFunction* pFngetHouseTax = NULL;

	if ( ! pFngetHouseTax )
		pFngetHouseTax = (UFunction*) UObject::GObjObjects()->Data[ 50742 ];

	ANowAtlasAvatarPlayerHouse_execgetHouseTax_Parms getHouseTax_Parms;

	pFngetHouseTax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseTax, &getHouseTax_Parms, NULL );

	pFngetHouseTax->FunctionFlags |= 0x400;

	return getHouseTax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getSupportGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::getSupportGuild ( )
{
	static UFunction* pFngetSupportGuild = NULL;

	if ( ! pFngetSupportGuild )
		pFngetSupportGuild = (UFunction*) UObject::GObjObjects()->Data[ 50740 ];

	ANowAtlasAvatarPlayerHouse_execgetSupportGuild_Parms getSupportGuild_Parms;

	pFngetSupportGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetSupportGuild, &getSupportGuild_Parms, NULL );

	pFngetSupportGuild->FunctionFlags |= 0x400;

	return getSupportGuild_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::getGuild ( )
{
	static UFunction* pFngetGuild = NULL;

	if ( ! pFngetGuild )
		pFngetGuild = (UFunction*) UObject::GObjObjects()->Data[ 50738 ];

	ANowAtlasAvatarPlayerHouse_execgetGuild_Parms getGuild_Parms;

	pFngetGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetGuild, &getGuild_Parms, NULL );

	pFngetGuild->FunctionFlags |= 0x400;

	return getGuild_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.hasVendor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::hasVendor ( )
{
	static UFunction* pFnhasVendor = NULL;

	if ( ! pFnhasVendor )
		pFnhasVendor = (UFunction*) UObject::GObjObjects()->Data[ 50736 ];

	ANowAtlasAvatarPlayerHouse_exechasVendor_Parms hasVendor_Parms;

	pFnhasVendor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnhasVendor, &hasVendor_Parms, NULL );

	pFnhasVendor->FunctionFlags |= 0x400;

	return hasVendor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.SendHouseCommand
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Cmd                            ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerHouse::SendHouseCommand ( struct FString Cmd )
{
	static UFunction* pFnSendHouseCommand = NULL;

	if ( ! pFnSendHouseCommand )
		pFnSendHouseCommand = (UFunction*) UObject::GObjObjects()->Data[ 50734 ];

	ANowAtlasAvatarPlayerHouse_execSendHouseCommand_Parms SendHouseCommand_Parms;
	memcpy ( &SendHouseCommand_Parms.Cmd, &Cmd, 0xC );

	pFnSendHouseCommand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendHouseCommand, &SendHouseCommand_Parms, NULL );

	pFnSendHouseCommand->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getPlanSetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPlayerHouse_ContentInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPlayerHouse_ContentInfo* ANowAtlasAvatarPlayerHouse::getPlanSetContentInfo ( )
{
	static UFunction* pFngetPlanSetContentInfo = NULL;

	if ( ! pFngetPlanSetContentInfo )
		pFngetPlanSetContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 50732 ];

	ANowAtlasAvatarPlayerHouse_execgetPlanSetContentInfo_Parms getPlanSetContentInfo_Parms;

	pFngetPlanSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetPlanSetContentInfo, &getPlanSetContentInfo_Parms, NULL );

	pFngetPlanSetContentInfo->FunctionFlags |= 0x400;

	return getPlanSetContentInfo_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPlayerHouse_ContentInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPlayerHouse_ContentInfo* ANowAtlasAvatarPlayerHouse::getContentInfo ( )
{
	static UFunction* pFngetContentInfo = NULL;

	if ( ! pFngetContentInfo )
		pFngetContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 50730 ];

	ANowAtlasAvatarPlayerHouse_execgetContentInfo_Parms getContentInfo_Parms;

	pFngetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetContentInfo, &getContentInfo_Parms, NULL );

	pFngetContentInfo->FunctionFlags |= 0x400;

	return getContentInfo_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setModuleWorkBenches
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setModuleWorkBenches ( )
{
	static UFunction* pFnsetModuleWorkBenches = NULL;

	if ( ! pFnsetModuleWorkBenches )
		pFnsetModuleWorkBenches = (UFunction*) UObject::GObjObjects()->Data[ 50729 ];

	ANowAtlasAvatarPlayerHouse_execsetModuleWorkBenches_Parms setModuleWorkBenches_Parms;

	pFnsetModuleWorkBenches->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnsetModuleWorkBenches, &setModuleWorkBenches_Parms, NULL );

	pFnsetModuleWorkBenches->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHouseParamInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ParamName                      ( CPF_Parm | CPF_NeedCtorLink )

int ANowAtlasAvatarPlayerHouse::getHouseParamInt ( struct FString ParamName )
{
	static UFunction* pFngetHouseParamInt = NULL;

	if ( ! pFngetHouseParamInt )
		pFngetHouseParamInt = (UFunction*) UObject::GObjObjects()->Data[ 50726 ];

	ANowAtlasAvatarPlayerHouse_execgetHouseParamInt_Parms getHouseParamInt_Parms;
	memcpy ( &getHouseParamInt_Parms.ParamName, &ParamName, 0xC );

	pFngetHouseParamInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseParamInt, &getHouseParamInt_Parms, NULL );

	pFngetHouseParamInt->FunctionFlags |= 0x400;

	return getHouseParamInt_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHouseParamStr
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 ParamName                      ( CPF_Parm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::getHouseParamStr ( struct FString ParamName )
{
	static UFunction* pFngetHouseParamStr = NULL;

	if ( ! pFngetHouseParamStr )
		pFngetHouseParamStr = (UFunction*) UObject::GObjObjects()->Data[ 50723 ];

	ANowAtlasAvatarPlayerHouse_execgetHouseParamStr_Parms getHouseParamStr_Parms;
	memcpy ( &getHouseParamStr_Parms.ParamName, &ParamName, 0xC );

	pFngetHouseParamStr->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseParamStr, &getHouseParamStr_Parms, NULL );

	pFngetHouseParamStr->FunctionFlags |= 0x400;

	return getHouseParamStr_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHouseUpKeep
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::getHouseUpKeep ( )
{
	static UFunction* pFngetHouseUpKeep = NULL;

	if ( ! pFngetHouseUpKeep )
		pFngetHouseUpKeep = (UFunction*) UObject::GObjObjects()->Data[ 50721 ];

	ANowAtlasAvatarPlayerHouse_execgetHouseUpKeep_Parms getHouseUpKeep_Parms;

	pFngetHouseUpKeep->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseUpKeep, &getHouseUpKeep_Parms, NULL );

	pFngetHouseUpKeep->FunctionFlags |= 0x400;

	return getHouseUpKeep_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerMemberOfHouseGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::isPlayerMemberOfHouseGuild ( )
{
	static UFunction* pFnisPlayerMemberOfHouseGuild = NULL;

	if ( ! pFnisPlayerMemberOfHouseGuild )
		pFnisPlayerMemberOfHouseGuild = (UFunction*) UObject::GObjObjects()->Data[ 50719 ];

	ANowAtlasAvatarPlayerHouse_execisPlayerMemberOfHouseGuild_Parms isPlayerMemberOfHouseGuild_Parms;

	pFnisPlayerMemberOfHouseGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisPlayerMemberOfHouseGuild, &isPlayerMemberOfHouseGuild_Parms, NULL );

	pFnisPlayerMemberOfHouseGuild->FunctionFlags |= 0x400;

	return isPlayerMemberOfHouseGuild_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerGuildMember
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::isPlayerGuildMember ( )
{
	static UFunction* pFnisPlayerGuildMember = NULL;

	if ( ! pFnisPlayerGuildMember )
		pFnisPlayerGuildMember = (UFunction*) UObject::GObjObjects()->Data[ 46356 ];

	ANowAtlasAvatarPlayerHouse_execisPlayerGuildMember_Parms isPlayerGuildMember_Parms;

	pFnisPlayerGuildMember->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisPlayerGuildMember, &isPlayerGuildMember_Parms, NULL );

	pFnisPlayerGuildMember->FunctionFlags |= 0x400;

	return isPlayerGuildMember_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerInGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::isPlayerInGuild ( )
{
	static UFunction* pFnisPlayerInGuild = NULL;

	if ( ! pFnisPlayerInGuild )
		pFnisPlayerInGuild = (UFunction*) UObject::GObjObjects()->Data[ 50717 ];

	ANowAtlasAvatarPlayerHouse_execisPlayerInGuild_Parms isPlayerInGuild_Parms;

	pFnisPlayerInGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisPlayerInGuild, &isPlayerInGuild_Parms, NULL );

	pFnisPlayerInGuild->FunctionFlags |= 0x400;

	return isPlayerInGuild_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHitPoints
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::getHitPoints ( )
{
	static UFunction* pFngetHitPoints = NULL;

	if ( ! pFngetHitPoints )
		pFngetHitPoints = (UFunction*) UObject::GObjObjects()->Data[ 50715 ];

	ANowAtlasAvatarPlayerHouse_execgetHitPoints_Parms getHitPoints_Parms;

	pFngetHitPoints->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHitPoints, &getHitPoints_Parms, NULL );

	pFngetHitPoints->FunctionFlags |= 0x400;

	return getHitPoints_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isHouseAtMaxHP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::isHouseAtMaxHP ( )
{
	static UFunction* pFnisHouseAtMaxHP = NULL;

	if ( ! pFnisHouseAtMaxHP )
		pFnisHouseAtMaxHP = (UFunction*) UObject::GObjObjects()->Data[ 50713 ];

	ANowAtlasAvatarPlayerHouse_execisHouseAtMaxHP_Parms isHouseAtMaxHP_Parms;

	pFnisHouseAtMaxHP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisHouseAtMaxHP, &isHouseAtMaxHP_Parms, NULL );

	pFnisHouseAtMaxHP->FunctionFlags |= 0x400;

	return isHouseAtMaxHP_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isChestClosed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::isChestClosed ( )
{
	static UFunction* pFnisChestClosed = NULL;

	if ( ! pFnisChestClosed )
		pFnisChestClosed = (UFunction*) UObject::GObjObjects()->Data[ 50711 ];

	ANowAtlasAvatarPlayerHouse_execisChestClosed_Parms isChestClosed_Parms;

	pFnisChestClosed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisChestClosed, &isChestClosed_Parms, NULL );

	pFnisChestClosed->FunctionFlags |= 0x400;

	return isChestClosed_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getItemNameFromGuid
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       constructionMaterials          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerHouse::getItemNameFromGuid ( TArray< struct FString >* constructionMaterials )
{
	static UFunction* pFngetItemNameFromGuid = NULL;

	if ( ! pFngetItemNameFromGuid )
		pFngetItemNameFromGuid = (UFunction*) UObject::GObjObjects()->Data[ 50708 ];

	ANowAtlasAvatarPlayerHouse_execgetItemNameFromGuid_Parms getItemNameFromGuid_Parms;

	pFngetItemNameFromGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetItemNameFromGuid, &getItemNameFromGuid_Parms, NULL );

	pFngetItemNameFromGuid->FunctionFlags |= 0x400;

	if ( constructionMaterials )
		memcpy ( constructionMaterials, &getItemNameFromGuid_Parms.constructionMaterials, 0xC );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getResourceFromName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Resource                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            Resources                      ( CPF_Parm | CPF_OutParm )
// int                            Max                            ( CPF_Parm | CPF_OutParm )

void ANowAtlasAvatarPlayerHouse::getResourceFromName ( struct FString Resource, int* Resources, int* Max )
{
	static UFunction* pFngetResourceFromName = NULL;

	if ( ! pFngetResourceFromName )
		pFngetResourceFromName = (UFunction*) UObject::GObjObjects()->Data[ 50704 ];

	ANowAtlasAvatarPlayerHouse_execgetResourceFromName_Parms getResourceFromName_Parms;
	memcpy ( &getResourceFromName_Parms.Resource, &Resource, 0xC );

	pFngetResourceFromName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetResourceFromName, &getResourceFromName_Parms, NULL );

	pFngetResourceFromName->FunctionFlags |= 0x400;

	if ( Resources )
		*Resources = getResourceFromName_Parms.Resources;

	if ( Max )
		*Max = getResourceFromName_Parms.Max;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getLeatherResources
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Resources                      ( CPF_Parm | CPF_OutParm )
// int                            Max                            ( CPF_Parm | CPF_OutParm )

int ANowAtlasAvatarPlayerHouse::getLeatherResources ( int* Resources, int* Max )
{
	static UFunction* pFngetLeatherResources = NULL;

	if ( ! pFngetLeatherResources )
		pFngetLeatherResources = (UFunction*) UObject::GObjObjects()->Data[ 50700 ];

	ANowAtlasAvatarPlayerHouse_execgetLeatherResources_Parms getLeatherResources_Parms;

	pFngetLeatherResources->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetLeatherResources, &getLeatherResources_Parms, NULL );

	pFngetLeatherResources->FunctionFlags |= 0x400;

	if ( Resources )
		*Resources = getLeatherResources_Parms.Resources;

	if ( Max )
		*Max = getLeatherResources_Parms.Max;

	return getLeatherResources_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getStoneResources
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Resources                      ( CPF_Parm | CPF_OutParm )
// int                            Max                            ( CPF_Parm | CPF_OutParm )

int ANowAtlasAvatarPlayerHouse::getStoneResources ( int* Resources, int* Max )
{
	static UFunction* pFngetStoneResources = NULL;

	if ( ! pFngetStoneResources )
		pFngetStoneResources = (UFunction*) UObject::GObjObjects()->Data[ 50696 ];

	ANowAtlasAvatarPlayerHouse_execgetStoneResources_Parms getStoneResources_Parms;

	pFngetStoneResources->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetStoneResources, &getStoneResources_Parms, NULL );

	pFngetStoneResources->FunctionFlags |= 0x400;

	if ( Resources )
		*Resources = getStoneResources_Parms.Resources;

	if ( Max )
		*Max = getStoneResources_Parms.Max;

	return getStoneResources_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getWoodResources
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Resources                      ( CPF_Parm | CPF_OutParm )
// int                            Max                            ( CPF_Parm | CPF_OutParm )
// TArray< struct FString >       constructionMaterials          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

int ANowAtlasAvatarPlayerHouse::getWoodResources ( int* Resources, int* Max, TArray< struct FString >* constructionMaterials )
{
	static UFunction* pFngetWoodResources = NULL;

	if ( ! pFngetWoodResources )
		pFngetWoodResources = (UFunction*) UObject::GObjObjects()->Data[ 50690 ];

	ANowAtlasAvatarPlayerHouse_execgetWoodResources_Parms getWoodResources_Parms;

	pFngetWoodResources->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetWoodResources, &getWoodResources_Parms, NULL );

	pFngetWoodResources->FunctionFlags |= 0x400;

	if ( Resources )
		*Resources = getWoodResources_Parms.Resources;

	if ( Max )
		*Max = getWoodResources_Parms.Max;

	if ( constructionMaterials )
		memcpy ( constructionMaterials, &getWoodResources_Parms.constructionMaterials, 0xC );

	return getWoodResources_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetBankContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// int                            ItemQuantity                   ( CPF_Parm | CPF_OutParm )

void ANowAtlasAvatarPlayerHouse::GetBankContentInfo ( int iSlot, class UContentInfo** Info, int* ItemQuantity )
{
	static UFunction* pFnGetBankContentInfo = NULL;

	if ( ! pFnGetBankContentInfo )
		pFnGetBankContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 50686 ];

	ANowAtlasAvatarPlayerHouse_execGetBankContentInfo_Parms GetBankContentInfo_Parms;
	GetBankContentInfo_Parms.iSlot = iSlot;

	pFnGetBankContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBankContentInfo, &GetBankContentInfo_Parms, NULL );

	pFnGetBankContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetBankContentInfo_Parms.Info;

	if ( ItemQuantity )
		*ItemQuantity = GetBankContentInfo_Parms.ItemQuantity;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHouseMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::getHouseMesh ( )
{
	static UFunction* pFngetHouseMesh = NULL;

	if ( ! pFngetHouseMesh )
		pFngetHouseMesh = (UFunction*) UObject::GObjObjects()->Data[ 50685 ];

	ANowAtlasAvatarPlayerHouse_execgetHouseMesh_Parms getHouseMesh_Parms;

	pFngetHouseMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseMesh, &getHouseMesh_Parms, NULL );

	pFngetHouseMesh->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.startHouseConstruction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::startHouseConstruction ( )
{
	static UFunction* pFnstartHouseConstruction = NULL;

	if ( ! pFnstartHouseConstruction )
		pFnstartHouseConstruction = (UFunction*) UObject::GObjObjects()->Data[ 50684 ];

	ANowAtlasAvatarPlayerHouse_execstartHouseConstruction_Parms startHouseConstruction_Parms;

	pFnstartHouseConstruction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnstartHouseConstruction, &startHouseConstruction_Parms, NULL );

	pFnstartHouseConstruction->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.useKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerHouse::useKey ( struct FString ItemGuid )
{
	static UFunction* pFnuseKey = NULL;

	if ( ! pFnuseKey )
		pFnuseKey = (UFunction*) UObject::GObjObjects()->Data[ 50682 ];

	ANowAtlasAvatarPlayerHouse_execuseKey_Parms useKey_Parms;
	memcpy ( &useKey_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnuseKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnuseKey, &useKey_Parms, NULL );

	pFnuseKey->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isDoorLocked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            door                           ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouse::isDoorLocked ( int door )
{
	static UFunction* pFnisDoorLocked = NULL;

	if ( ! pFnisDoorLocked )
		pFnisDoorLocked = (UFunction*) UObject::GObjObjects()->Data[ 50679 ];

	ANowAtlasAvatarPlayerHouse_execisDoorLocked_Parms isDoorLocked_Parms;
	isDoorLocked_Parms.door = door;

	pFnisDoorLocked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisDoorLocked, &isDoorLocked_Parms, NULL );

	pFnisDoorLocked->FunctionFlags |= 0x400;

	return isDoorLocked_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isDoorOpen
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            door                           ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouse::isDoorOpen ( int door )
{
	static UFunction* pFnisDoorOpen = NULL;

	if ( ! pFnisDoorOpen )
		pFnisDoorOpen = (UFunction*) UObject::GObjObjects()->Data[ 50676 ];

	ANowAtlasAvatarPlayerHouse_execisDoorOpen_Parms isDoorOpen_Parms;
	isDoorOpen_Parms.door = door;

	pFnisDoorOpen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisDoorOpen, &isDoorOpen_Parms, NULL );

	pFnisDoorOpen->FunctionFlags |= 0x400;

	return isDoorOpen_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHouseBuildingStatus
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::getHouseBuildingStatus ( )
{
	static UFunction* pFngetHouseBuildingStatus = NULL;

	if ( ! pFngetHouseBuildingStatus )
		pFngetHouseBuildingStatus = (UFunction*) UObject::GObjObjects()->Data[ 50674 ];

	ANowAtlasAvatarPlayerHouse_execgetHouseBuildingStatus_Parms getHouseBuildingStatus_Parms;

	pFngetHouseBuildingStatus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseBuildingStatus, &getHouseBuildingStatus_Parms, NULL );

	pFngetHouseBuildingStatus->FunctionFlags |= 0x400;

	return getHouseBuildingStatus_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleDoor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            doorIsOpen                     ( CPF_Parm )
// int                            door                           ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::ToggleDoor ( int doorIsOpen, int door )
{
	static UFunction* pFnToggleDoor = NULL;

	if ( ! pFnToggleDoor )
		pFnToggleDoor = (UFunction*) UObject::GObjObjects()->Data[ 50671 ];

	ANowAtlasAvatarPlayerHouse_execToggleDoor_Parms ToggleDoor_Parms;
	ToggleDoor_Parms.doorIsOpen = doorIsOpen;
	ToggleDoor_Parms.door = door;

	pFnToggleDoor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleDoor, &ToggleDoor_Parms, NULL );

	pFnToggleDoor->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetOwner
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::GetOwner ( )
{
	static UFunction* pFnGetOwner = NULL;

	if ( ! pFnGetOwner )
		pFnGetOwner = (UFunction*) UObject::GObjObjects()->Data[ 50669 ];

	ANowAtlasAvatarPlayerHouse_execGetOwner_Parms GetOwner_Parms;

	pFnGetOwner->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetOwner, &GetOwner_Parms, NULL );

	pFnGetOwner->FunctionFlags |= 0x400;

	return GetOwner_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = (UFunction*) UObject::GObjObjects()->Data[ 50667 ];

	ANowAtlasAvatarPlayerHouse_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarPlayerHouse::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50664 ];

	ANowAtlasAvatarPlayerHouse_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetDisplayName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::GetDisplayName ( )
{
	static UFunction* pFnGetDisplayName = NULL;

	if ( ! pFnGetDisplayName )
		pFnGetDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 50662 ];

	ANowAtlasAvatarPlayerHouse_execGetDisplayName_Parms GetDisplayName_Parms;

	pFnGetDisplayName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayName, &GetDisplayName_Parms, NULL );

	pFnGetDisplayName->FunctionFlags |= 0x400;

	return GetDisplayName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.TargetMesh
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerKeep::eventTargetMesh ( )
{
	static UFunction* pFnTargetMesh = NULL;

	if ( ! pFnTargetMesh )
		pFnTargetMesh = (UFunction*) UObject::GObjObjects()->Data[ 51152 ];

	ANowAtlasAvatarPlayerKeep_eventTargetMesh_Parms TargetMesh_Parms;

	this->ProcessEvent ( pFnTargetMesh, &TargetMesh_Parms, NULL );

	return TargetMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.importMeshStrings
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::importMeshStrings ( )
{
	static UFunction* pFnimportMeshStrings = NULL;

	if ( ! pFnimportMeshStrings )
		pFnimportMeshStrings = (UFunction*) UObject::GObjObjects()->Data[ 51151 ];

	ANowAtlasAvatarPlayerKeep_execimportMeshStrings_Parms importMeshStrings_Parms;

	this->ProcessEvent ( pFnimportMeshStrings, &importMeshStrings_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setHouseVolumeMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::setHouseVolumeMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseVolumeMesh = NULL;

	if ( ! pFnsetHouseVolumeMesh )
		pFnsetHouseVolumeMesh = (UFunction*) UObject::GObjObjects()->Data[ 51148 ];

	ANowAtlasAvatarPlayerKeep_execsetHouseVolumeMesh_Parms setHouseVolumeMesh_Parms;
	setHouseVolumeMesh_Parms._houseType = _houseType;
	setHouseVolumeMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseVolumeMesh, &setHouseVolumeMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setGuildStoneMesh
// [0x00020002] 
// Parameters infos:
// int                            HouseTier                      ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::setGuildStoneMesh ( int HouseTier )
{
	static UFunction* pFnsetGuildStoneMesh = NULL;

	if ( ! pFnsetGuildStoneMesh )
		pFnsetGuildStoneMesh = (UFunction*) UObject::GObjObjects()->Data[ 51146 ];

	ANowAtlasAvatarPlayerKeep_execsetGuildStoneMesh_Parms setGuildStoneMesh_Parms;
	setGuildStoneMesh_Parms.HouseTier = HouseTier;

	this->ProcessEvent ( pFnsetGuildStoneMesh, &setGuildStoneMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setWallConnectionPoints
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::setWallConnectionPoints ( )
{
	static UFunction* pFnsetWallConnectionPoints = NULL;

	if ( ! pFnsetWallConnectionPoints )
		pFnsetWallConnectionPoints = (UFunction*) UObject::GObjObjects()->Data[ 51145 ];

	ANowAtlasAvatarPlayerKeep_execsetWallConnectionPoints_Parms setWallConnectionPoints_Parms;

	this->ProcessEvent ( pFnsetWallConnectionPoints, &setWallConnectionPoints_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setHouseMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::setHouseMeshes ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseMeshes = NULL;

	if ( ! pFnsetHouseMeshes )
		pFnsetHouseMeshes = (UFunction*) UObject::GObjObjects()->Data[ 51142 ];

	ANowAtlasAvatarPlayerKeep_execsetHouseMeshes_Parms setHouseMeshes_Parms;
	setHouseMeshes_Parms._houseType = _houseType;
	setHouseMeshes_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseMeshes, &setHouseMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.closeDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::closeDoor ( )
{
	static UFunction* pFncloseDoor = NULL;

	if ( ! pFncloseDoor )
		pFncloseDoor = (UFunction*) UObject::GObjObjects()->Data[ 51141 ];

	ANowAtlasAvatarPlayerKeep_execcloseDoor_Parms closeDoor_Parms;

	this->ProcessEvent ( pFncloseDoor, &closeDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.openDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::openDoor ( )
{
	static UFunction* pFnopenDoor = NULL;

	if ( ! pFnopenDoor )
		pFnopenDoor = (UFunction*) UObject::GObjObjects()->Data[ 51140 ];

	ANowAtlasAvatarPlayerKeep_execopenDoor_Parms openDoor_Parms;

	this->ProcessEvent ( pFnopenDoor, &openDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setDoorMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )
// int                            _nrOfDoors                     ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::setDoorMeshes ( int _houseType, int _tier, int _nrOfDoors )
{
	static UFunction* pFnsetDoorMeshes = NULL;

	if ( ! pFnsetDoorMeshes )
		pFnsetDoorMeshes = (UFunction*) UObject::GObjObjects()->Data[ 51136 ];

	ANowAtlasAvatarPlayerKeep_execsetDoorMeshes_Parms setDoorMeshes_Parms;
	setDoorMeshes_Parms._houseType = _houseType;
	setDoorMeshes_Parms._tier = _tier;
	setDoorMeshes_Parms._nrOfDoors = _nrOfDoors;

	this->ProcessEvent ( pFnsetDoorMeshes, &setDoorMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setChestMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::setChestMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetChestMesh = NULL;

	if ( ! pFnsetChestMesh )
		pFnsetChestMesh = (UFunction*) UObject::GObjObjects()->Data[ 51132 ];

	ANowAtlasAvatarPlayerKeep_execsetChestMesh_Parms setChestMesh_Parms;
	setChestMesh_Parms._houseType = _houseType;
	setChestMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetChestMesh, &setChestMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setSignMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::setSignMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetSignMesh = NULL;

	if ( ! pFnsetSignMesh )
		pFnsetSignMesh = (UFunction*) UObject::GObjObjects()->Data[ 51128 ];

	ANowAtlasAvatarPlayerKeep_execsetSignMesh_Parms setSignMesh_Parms;
	setSignMesh_Parms._houseType = _houseType;
	setSignMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetSignMesh, &setSignMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.removeWarTable
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::removeWarTable ( )
{
	static UFunction* pFnremoveWarTable = NULL;

	if ( ! pFnremoveWarTable )
		pFnremoveWarTable = (UFunction*) UObject::GObjObjects()->Data[ 51127 ];

	ANowAtlasAvatarPlayerKeep_execremoveWarTable_Parms removeWarTable_Parms;

	this->ProcessEvent ( pFnremoveWarTable, &removeWarTable_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.Destroyed
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 51126 ];

	ANowAtlasAvatarPlayerKeep_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.RemoveHouseMeshes
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::RemoveHouseMeshes ( )
{
	static UFunction* pFnRemoveHouseMeshes = NULL;

	if ( ! pFnRemoveHouseMeshes )
		pFnRemoveHouseMeshes = (UFunction*) UObject::GObjObjects()->Data[ 51125 ];

	ANowAtlasAvatarPlayerKeep_execRemoveHouseMeshes_Parms RemoveHouseMeshes_Parms;

	this->ProcessEvent ( pFnRemoveHouseMeshes, &RemoveHouseMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setWarTable
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::setWarTable ( )
{
	static UFunction* pFnsetWarTable = NULL;

	if ( ! pFnsetWarTable )
		pFnsetWarTable = (UFunction*) UObject::GObjObjects()->Data[ 51123 ];

	ANowAtlasAvatarPlayerKeep_execsetWarTable_Parms setWarTable_Parms;

	this->ProcessEvent ( pFnsetWarTable, &setWarTable_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.CreateHouse
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::CreateHouse ( int _houseType )
{
	static UFunction* pFnCreateHouse = NULL;

	if ( ! pFnCreateHouse )
		pFnCreateHouse = (UFunction*) UObject::GObjObjects()->Data[ 51121 ];

	ANowAtlasAvatarPlayerKeep_execCreateHouse_Parms CreateHouse_Parms;
	CreateHouse_Parms._houseType = _houseType;

	this->ProcessEvent ( pFnCreateHouse, &CreateHouse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setGhostMode
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::setGhostMode ( )
{
	static UFunction* pFnsetGhostMode = NULL;

	if ( ! pFnsetGhostMode )
		pFnsetGhostMode = (UFunction*) UObject::GObjObjects()->Data[ 51120 ];

	ANowAtlasAvatarPlayerKeep_execsetGhostMode_Parms setGhostMode_Parms;

	this->ProcessEvent ( pFnsetGhostMode, &setGhostMode_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetLastRoundInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerKeep::GetLastRoundInfo ( )
{
	static UFunction* pFnGetLastRoundInfo = NULL;

	if ( ! pFnGetLastRoundInfo )
		pFnGetLastRoundInfo = (UFunction*) UObject::GObjObjects()->Data[ 51118 ];

	ANowAtlasAvatarPlayerKeep_execGetLastRoundInfo_Parms GetLastRoundInfo_Parms;

	pFnGetLastRoundInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLastRoundInfo, &GetLastRoundInfo_Parms, NULL );

	pFnGetLastRoundInfo->FunctionFlags |= 0x400;

	return GetLastRoundInfo_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetNumberOfNPC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerKeep::GetNumberOfNPC ( )
{
	static UFunction* pFnGetNumberOfNPC = NULL;

	if ( ! pFnGetNumberOfNPC )
		pFnGetNumberOfNPC = (UFunction*) UObject::GObjObjects()->Data[ 51116 ];

	ANowAtlasAvatarPlayerKeep_execGetNumberOfNPC_Parms GetNumberOfNPC_Parms;

	pFnGetNumberOfNPC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumberOfNPC, &GetNumberOfNPC_Parms, NULL );

	pFnGetNumberOfNPC->FunctionFlags |= 0x400;

	return GetNumberOfNPC_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetCPUpkeep
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerKeep::GetCPUpkeep ( )
{
	static UFunction* pFnGetCPUpkeep = NULL;

	if ( ! pFnGetCPUpkeep )
		pFnGetCPUpkeep = (UFunction*) UObject::GObjObjects()->Data[ 51114 ];

	ANowAtlasAvatarPlayerKeep_execGetCPUpkeep_Parms GetCPUpkeep_Parms;

	pFnGetCPUpkeep->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCPUpkeep, &GetCPUpkeep_Parms, NULL );

	pFnGetCPUpkeep->FunctionFlags |= 0x400;

	return GetCPUpkeep_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetPylonGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerKeep::GetPylonGuid ( )
{
	static UFunction* pFnGetPylonGuid = NULL;

	if ( ! pFnGetPylonGuid )
		pFnGetPylonGuid = (UFunction*) UObject::GObjObjects()->Data[ 51112 ];

	ANowAtlasAvatarPlayerKeep_execGetPylonGuid_Parms GetPylonGuid_Parms;

	pFnGetPylonGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPylonGuid, &GetPylonGuid_Parms, NULL );

	pFnGetPylonGuid->FunctionFlags |= 0x400;

	return GetPylonGuid_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetSlotInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            slotId                         ( CPF_Parm )
// struct FString                 sDisplayName                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool ANowAtlasAvatarPlayerKeep::GetSlotInfo ( int slotId, struct FString* sDisplayName )
{
	static UFunction* pFnGetSlotInfo = NULL;

	if ( ! pFnGetSlotInfo )
		pFnGetSlotInfo = (UFunction*) UObject::GObjObjects()->Data[ 51108 ];

	ANowAtlasAvatarPlayerKeep_execGetSlotInfo_Parms GetSlotInfo_Parms;
	GetSlotInfo_Parms.slotId = slotId;

	pFnGetSlotInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotInfo, &GetSlotInfo_Parms, NULL );

	pFnGetSlotInfo->FunctionFlags |= 0x400;

	if ( sDisplayName )
		memcpy ( sDisplayName, &GetSlotInfo_Parms.sDisplayName, 0xC );

	return GetSlotInfo_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetKeepSlotOffsetPct
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            slotId                         ( CPF_Parm )

struct FVector ANowAtlasAvatarPlayerKeep::GetKeepSlotOffsetPct ( int slotId )
{
	static UFunction* pFnGetKeepSlotOffsetPct = NULL;

	if ( ! pFnGetKeepSlotOffsetPct )
		pFnGetKeepSlotOffsetPct = (UFunction*) UObject::GObjObjects()->Data[ 51105 ];

	ANowAtlasAvatarPlayerKeep_execGetKeepSlotOffsetPct_Parms GetKeepSlotOffsetPct_Parms;
	GetKeepSlotOffsetPct_Parms.slotId = slotId;

	pFnGetKeepSlotOffsetPct->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetKeepSlotOffsetPct, &GetKeepSlotOffsetPct_Parms, NULL );

	pFnGetKeepSlotOffsetPct->FunctionFlags |= 0x400;

	return GetKeepSlotOffsetPct_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetKeepSlotOffset
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            slotId                         ( CPF_Parm )

struct FVector ANowAtlasAvatarPlayerKeep::GetKeepSlotOffset ( int slotId )
{
	static UFunction* pFnGetKeepSlotOffset = NULL;

	if ( ! pFnGetKeepSlotOffset )
		pFnGetKeepSlotOffset = (UFunction*) UObject::GObjObjects()->Data[ 46511 ];

	ANowAtlasAvatarPlayerKeep_execGetKeepSlotOffset_Parms GetKeepSlotOffset_Parms;
	GetKeepSlotOffset_Parms.slotId = slotId;

	pFnGetKeepSlotOffset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetKeepSlotOffset, &GetKeepSlotOffset_Parms, NULL );

	pFnGetKeepSlotOffset->FunctionFlags |= 0x400;

	return GetKeepSlotOffset_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.importMeshStrings
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerPalisadeGate::importMeshStrings ( )
{
	static UFunction* pFnimportMeshStrings = NULL;

	if ( ! pFnimportMeshStrings )
		pFnimportMeshStrings = (UFunction*) UObject::GObjObjects()->Data[ 51206 ];

	ANowAtlasAvatarPlayerPalisadeGate_execimportMeshStrings_Parms importMeshStrings_Parms;

	this->ProcessEvent ( pFnimportMeshStrings, &importMeshStrings_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setHouseVolumeMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerPalisadeGate::setHouseVolumeMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseVolumeMesh = NULL;

	if ( ! pFnsetHouseVolumeMesh )
		pFnsetHouseVolumeMesh = (UFunction*) UObject::GObjObjects()->Data[ 51203 ];

	ANowAtlasAvatarPlayerPalisadeGate_execsetHouseVolumeMesh_Parms setHouseVolumeMesh_Parms;
	setHouseVolumeMesh_Parms._houseType = _houseType;
	setHouseVolumeMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseVolumeMesh, &setHouseVolumeMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setHouseMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerPalisadeGate::setHouseMeshes ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseMeshes = NULL;

	if ( ! pFnsetHouseMeshes )
		pFnsetHouseMeshes = (UFunction*) UObject::GObjObjects()->Data[ 51200 ];

	ANowAtlasAvatarPlayerPalisadeGate_execsetHouseMeshes_Parms setHouseMeshes_Parms;
	setHouseMeshes_Parms._houseType = _houseType;
	setHouseMeshes_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseMeshes, &setHouseMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.closeDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerPalisadeGate::closeDoor ( )
{
	static UFunction* pFncloseDoor = NULL;

	if ( ! pFncloseDoor )
		pFncloseDoor = (UFunction*) UObject::GObjObjects()->Data[ 51199 ];

	ANowAtlasAvatarPlayerPalisadeGate_execcloseDoor_Parms closeDoor_Parms;

	this->ProcessEvent ( pFncloseDoor, &closeDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.openDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerPalisadeGate::openDoor ( )
{
	static UFunction* pFnopenDoor = NULL;

	if ( ! pFnopenDoor )
		pFnopenDoor = (UFunction*) UObject::GObjObjects()->Data[ 51198 ];

	ANowAtlasAvatarPlayerPalisadeGate_execopenDoor_Parms openDoor_Parms;

	this->ProcessEvent ( pFnopenDoor, &openDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setDoorMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )
// int                            _nrOfDoors                     ( CPF_Parm )

void ANowAtlasAvatarPlayerPalisadeGate::setDoorMeshes ( int _houseType, int _tier, int _nrOfDoors )
{
	static UFunction* pFnsetDoorMeshes = NULL;

	if ( ! pFnsetDoorMeshes )
		pFnsetDoorMeshes = (UFunction*) UObject::GObjObjects()->Data[ 51194 ];

	ANowAtlasAvatarPlayerPalisadeGate_execsetDoorMeshes_Parms setDoorMeshes_Parms;
	setDoorMeshes_Parms._houseType = _houseType;
	setDoorMeshes_Parms._tier = _tier;
	setDoorMeshes_Parms._nrOfDoors = _nrOfDoors;

	this->ProcessEvent ( pFnsetDoorMeshes, &setDoorMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setChestMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerPalisadeGate::setChestMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetChestMesh = NULL;

	if ( ! pFnsetChestMesh )
		pFnsetChestMesh = (UFunction*) UObject::GObjObjects()->Data[ 51190 ];

	ANowAtlasAvatarPlayerPalisadeGate_execsetChestMesh_Parms setChestMesh_Parms;
	setChestMesh_Parms._houseType = _houseType;
	setChestMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetChestMesh, &setChestMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setSignMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerPalisadeGate::setSignMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetSignMesh = NULL;

	if ( ! pFnsetSignMesh )
		pFnsetSignMesh = (UFunction*) UObject::GObjObjects()->Data[ 51186 ];

	ANowAtlasAvatarPlayerPalisadeGate_execsetSignMesh_Parms setSignMesh_Parms;
	setSignMesh_Parms._houseType = _houseType;
	setSignMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetSignMesh, &setSignMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.CreateHouse
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )

void ANowAtlasAvatarPlayerPalisadeGate::CreateHouse ( int _houseType )
{
	static UFunction* pFnCreateHouse = NULL;

	if ( ! pFnCreateHouse )
		pFnCreateHouse = (UFunction*) UObject::GObjObjects()->Data[ 51184 ];

	ANowAtlasAvatarPlayerPalisadeGate_execCreateHouse_Parms CreateHouse_Parms;
	CreateHouse_Parms._houseType = _houseType;

	this->ProcessEvent ( pFnCreateHouse, &CreateHouse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setGhostMode
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerPalisadeGate::setGhostMode ( )
{
	static UFunction* pFnsetGhostMode = NULL;

	if ( ! pFnsetGhostMode )
		pFnsetGhostMode = (UFunction*) UObject::GObjObjects()->Data[ 51183 ];

	ANowAtlasAvatarPlayerPalisadeGate_execsetGhostMode_Parms setGhostMode_Parms;

	this->ProcessEvent ( pFnsetGhostMode, &setGhostMode_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.SetActivateCrossNodeAvatarList
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerPalisadeGate::SetActivateCrossNodeAvatarList ( )
{
	static UFunction* pFnSetActivateCrossNodeAvatarList = NULL;

	if ( ! pFnSetActivateCrossNodeAvatarList )
		pFnSetActivateCrossNodeAvatarList = (UFunction*) UObject::GObjObjects()->Data[ 51182 ];

	ANowAtlasAvatarPlayerPalisadeGate_execSetActivateCrossNodeAvatarList_Parms SetActivateCrossNodeAvatarList_Parms;

	this->ProcessEvent ( pFnSetActivateCrossNodeAvatarList, &SetActivateCrossNodeAvatarList_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.Destroyed
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerPalisadeGate::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 51181 ];

	ANowAtlasAvatarPlayerPalisadeGate_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.FindGoodSpot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 StartLoc                       ( CPF_Parm )
// int                            iter                           ( CPF_Parm )

void ANowAtlasAvatarPlayerPalisadeGate::eventFindGoodSpot ( struct FVector StartLoc, int iter )
{
	static UFunction* pFnFindGoodSpot = NULL;

	if ( ! pFnFindGoodSpot )
		pFnFindGoodSpot = (UFunction*) UObject::GObjObjects()->Data[ 51178 ];

	ANowAtlasAvatarPlayerPalisadeGate_eventFindGoodSpot_Parms FindGoodSpot_Parms;
	memcpy ( &FindGoodSpot_Parms.StartLoc, &StartLoc, 0xC );
	FindGoodSpot_Parms.iter = iter;

	this->ProcessEvent ( pFnFindGoodSpot, &FindGoodSpot_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerPalisadeGate::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51177 ];

	ANowAtlasAvatarPlayerPalisadeGate_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.PendingHouseBuildingStatus
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarWorldBridge::PendingHouseBuildingStatus ( )
{
	static UFunction* pFnPendingHouseBuildingStatus = NULL;

	if ( ! pFnPendingHouseBuildingStatus )
		pFnPendingHouseBuildingStatus = (UFunction*) UObject::GObjObjects()->Data[ 50539 ];

	ANowAtlasAvatarWorldBridge_execPendingHouseBuildingStatus_Parms PendingHouseBuildingStatus_Parms;

	this->ProcessEvent ( pFnPendingHouseBuildingStatus, &PendingHouseBuildingStatus_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.initMovePlayersUpFromGround
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarWorldBridge::initMovePlayersUpFromGround ( )
{
	static UFunction* pFninitMovePlayersUpFromGround = NULL;

	if ( ! pFninitMovePlayersUpFromGround )
		pFninitMovePlayersUpFromGround = (UFunction*) UObject::GObjObjects()->Data[ 50535 ];

	ANowAtlasAvatarWorldBridge_execinitMovePlayersUpFromGround_Parms initMovePlayersUpFromGround_Parms;

	this->ProcessEvent ( pFninitMovePlayersUpFromGround, &initMovePlayersUpFromGround_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarWorldBridge::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50534 ];

	ANowAtlasAvatarWorldBridge_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.sendMessageToBridge
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 messageTwo                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarWorldBridge::eventsendMessageToBridge ( struct FString Message, struct FString messageTwo )
{
	static UFunction* pFnsendMessageToBridge = NULL;

	if ( ! pFnsendMessageToBridge )
		pFnsendMessageToBridge = (UFunction*) UObject::GObjObjects()->Data[ 50527 ];

	ANowAtlasAvatarWorldBridge_eventsendMessageToBridge_Parms sendMessageToBridge_Parms;
	memcpy ( &sendMessageToBridge_Parms.Message, &Message, 0xC );
	memcpy ( &sendMessageToBridge_Parms.messageTwo, &messageTwo, 0xC );

	this->ProcessEvent ( pFnsendMessageToBridge, &sendMessageToBridge_Parms, NULL );

	return sendMessageToBridge_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.stopWorking
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarWorldBridge::stopWorking ( )
{
	static UFunction* pFnstopWorking = NULL;

	if ( ! pFnstopWorking )
		pFnstopWorking = (UFunction*) UObject::GObjObjects()->Data[ 50525 ];

	ANowAtlasAvatarWorldBridge_execstopWorking_Parms stopWorking_Parms;

	this->ProcessEvent ( pFnstopWorking, &stopWorking_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.HelpConstruction
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarWorldBridge::eventHelpConstruction ( )
{
	static UFunction* pFnHelpConstruction = NULL;

	if ( ! pFnHelpConstruction )
		pFnHelpConstruction = (UFunction*) UObject::GObjObjects()->Data[ 50520 ];

	ANowAtlasAvatarWorldBridge_eventHelpConstruction_Parms HelpConstruction_Parms;

	this->ProcessEvent ( pFnHelpConstruction, &HelpConstruction_Parms, NULL );

	return HelpConstruction_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.isTargetingInventoryMesh
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarWorldBridge::eventisTargetingInventoryMesh ( )
{
	static UFunction* pFnisTargetingInventoryMesh = NULL;

	if ( ! pFnisTargetingInventoryMesh )
		pFnisTargetingInventoryMesh = (UFunction*) UObject::GObjObjects()->Data[ 50506 ];

	ANowAtlasAvatarWorldBridge_eventisTargetingInventoryMesh_Parms isTargetingInventoryMesh_Parms;

	this->ProcessEvent ( pFnisTargetingInventoryMesh, &isTargetingInventoryMesh_Parms, NULL );

	return isTargetingInventoryMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge._sendMessageToPlayer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 messsage                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarWorldBridge::event_sendMessageToPlayer ( struct FString messsage )
{
	static UFunction* pFn_sendMessageToPlayer = NULL;

	if ( ! pFn_sendMessageToPlayer )
		pFn_sendMessageToPlayer = (UFunction*) UObject::GObjObjects()->Data[ 50503 ];

	ANowAtlasAvatarWorldBridge_event_sendMessageToPlayer_Parms _sendMessageToPlayer_Parms;
	memcpy ( &_sendMessageToPlayer_Parms.messsage, &messsage, 0xC );

	this->ProcessEvent ( pFn_sendMessageToPlayer, &_sendMessageToPlayer_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.isPlayersInRange
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Distance                       ( CPF_Parm )

bool ANowAtlasAvatarWorldBridge::eventisPlayersInRange ( float Distance )
{
	static UFunction* pFnisPlayersInRange = NULL;

	if ( ! pFnisPlayersInRange )
		pFnisPlayersInRange = (UFunction*) UObject::GObjObjects()->Data[ 50499 ];

	ANowAtlasAvatarWorldBridge_eventisPlayersInRange_Parms isPlayersInRange_Parms;
	isPlayersInRange_Parms.Distance = Distance;

	this->ProcessEvent ( pFnisPlayersInRange, &isPlayersInRange_Parms, NULL );

	return isPlayersInRange_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.DoHouseTrade
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarWorldBridge::eventDoHouseTrade ( )
{
	static UFunction* pFnDoHouseTrade = NULL;

	if ( ! pFnDoHouseTrade )
		pFnDoHouseTrade = (UFunction*) UObject::GObjObjects()->Data[ 50496 ];

	ANowAtlasAvatarWorldBridge_eventDoHouseTrade_Parms DoHouseTrade_Parms;

	this->ProcessEvent ( pFnDoHouseTrade, &DoHouseTrade_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.setBridgeMeshes
// [0x00020002] 
// Parameters infos:
// int                            _BridgeStatus                  ( CPF_Parm )

void ANowAtlasAvatarWorldBridge::setBridgeMeshes ( int _BridgeStatus )
{
	static UFunction* pFnsetBridgeMeshes = NULL;

	if ( ! pFnsetBridgeMeshes )
		pFnsetBridgeMeshes = (UFunction*) UObject::GObjObjects()->Data[ 50494 ];

	ANowAtlasAvatarWorldBridge_execsetBridgeMeshes_Parms setBridgeMeshes_Parms;
	setBridgeMeshes_Parms._BridgeStatus = _BridgeStatus;

	this->ProcessEvent ( pFnsetBridgeMeshes, &setBridgeMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge._getBridgeMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarWorldBridge::event_getBridgeMesh ( )
{
	static UFunction* pFn_getBridgeMesh = NULL;

	if ( ! pFn_getBridgeMesh )
		pFn_getBridgeMesh = (UFunction*) UObject::GObjObjects()->Data[ 50493 ];

	ANowAtlasAvatarWorldBridge_event_getBridgeMesh_Parms _getBridgeMesh_Parms;

	this->ProcessEvent ( pFn_getBridgeMesh, &_getBridgeMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.sendMessageToClient
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarWorldBridge::eventsendMessageToClient ( struct FString Message )
{
	static UFunction* pFnsendMessageToClient = NULL;

	if ( ! pFnsendMessageToClient )
		pFnsendMessageToClient = (UFunction*) UObject::GObjObjects()->Data[ 50490 ];

	ANowAtlasAvatarWorldBridge_eventsendMessageToClient_Parms sendMessageToClient_Parms;
	memcpy ( &sendMessageToClient_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnsendMessageToClient, &sendMessageToClient_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.GetCI
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UWorldConstructable_ContentInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UWorldConstructable_ContentInfo* ANowAtlasAvatarWorldBridge::GetCI ( )
{
	static UFunction* pFnGetCI = NULL;

	if ( ! pFnGetCI )
		pFnGetCI = (UFunction*) UObject::GObjObjects()->Data[ 50488 ];

	ANowAtlasAvatarWorldBridge_execGetCI_Parms GetCI_Parms;

	pFnGetCI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCI, &GetCI_Parms, NULL );

	pFnGetCI->FunctionFlags |= 0x400;

	return GetCI_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.GetObejctContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarWorldBridge::GetObejctContentInfo ( )
{
	static UFunction* pFnGetObejctContentInfo = NULL;

	if ( ! pFnGetObejctContentInfo )
		pFnGetObejctContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 50486 ];

	ANowAtlasAvatarWorldBridge_execGetObejctContentInfo_Parms GetObejctContentInfo_Parms;

	pFnGetObejctContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetObejctContentInfo, &GetObejctContentInfo_Parms, NULL );

	pFnGetObejctContentInfo->FunctionFlags |= 0x400;

	return GetObejctContentInfo_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.getBridgeBuildingStatus
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarWorldBridge::getBridgeBuildingStatus ( )
{
	static UFunction* pFngetBridgeBuildingStatus = NULL;

	if ( ! pFngetBridgeBuildingStatus )
		pFngetBridgeBuildingStatus = (UFunction*) UObject::GObjObjects()->Data[ 50484 ];

	ANowAtlasAvatarWorldBridge_execgetBridgeBuildingStatus_Parms getBridgeBuildingStatus_Parms;

	pFngetBridgeBuildingStatus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetBridgeBuildingStatus, &getBridgeBuildingStatus_Parms, NULL );

	pFngetBridgeBuildingStatus->FunctionFlags |= 0x400;

	return getBridgeBuildingStatus_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.getHitPoints
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarWorldBridge::getHitPoints ( )
{
	static UFunction* pFngetHitPoints = NULL;

	if ( ! pFngetHitPoints )
		pFngetHitPoints = (UFunction*) UObject::GObjObjects()->Data[ 50482 ];

	ANowAtlasAvatarWorldBridge_execgetHitPoints_Parms getHitPoints_Parms;

	pFngetHitPoints->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHitPoints, &getHitPoints_Parms, NULL );

	pFngetHitPoints->FunctionFlags |= 0x400;

	return getHitPoints_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.isHouseAtMaxHP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarWorldBridge::isHouseAtMaxHP ( )
{
	static UFunction* pFnisHouseAtMaxHP = NULL;

	if ( ! pFnisHouseAtMaxHP )
		pFnisHouseAtMaxHP = (UFunction*) UObject::GObjObjects()->Data[ 50480 ];

	ANowAtlasAvatarWorldBridge_execisHouseAtMaxHP_Parms isHouseAtMaxHP_Parms;

	pFnisHouseAtMaxHP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisHouseAtMaxHP, &isHouseAtMaxHP_Parms, NULL );

	pFnisHouseAtMaxHP->FunctionFlags |= 0x400;

	return isHouseAtMaxHP_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.getResourceFromName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Resource                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            Resources                      ( CPF_Parm | CPF_OutParm )
// int                            Max                            ( CPF_Parm | CPF_OutParm )

void ANowAtlasAvatarWorldBridge::getResourceFromName ( struct FString Resource, int* Resources, int* Max )
{
	static UFunction* pFngetResourceFromName = NULL;

	if ( ! pFngetResourceFromName )
		pFngetResourceFromName = (UFunction*) UObject::GObjObjects()->Data[ 50476 ];

	ANowAtlasAvatarWorldBridge_execgetResourceFromName_Parms getResourceFromName_Parms;
	memcpy ( &getResourceFromName_Parms.Resource, &Resource, 0xC );

	pFngetResourceFromName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetResourceFromName, &getResourceFromName_Parms, NULL );

	pFngetResourceFromName->FunctionFlags |= 0x400;

	if ( Resources )
		*Resources = getResourceFromName_Parms.Resources;

	if ( Max )
		*Max = getResourceFromName_Parms.Max;
};

// Function NowGame.NowAtlasAvatarWorldBridge.getHouseMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarWorldBridge::getHouseMesh ( )
{
	static UFunction* pFngetHouseMesh = NULL;

	if ( ! pFngetHouseMesh )
		pFngetHouseMesh = (UFunction*) UObject::GObjObjects()->Data[ 50475 ];

	ANowAtlasAvatarWorldBridge_execgetHouseMesh_Parms getHouseMesh_Parms;

	pFngetHouseMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseMesh, &getHouseMesh_Parms, NULL );

	pFngetHouseMesh->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarWorldBridge.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarWorldBridge::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = (UFunction*) UObject::GObjObjects()->Data[ 50473 ];

	ANowAtlasAvatarWorldBridge_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarWorldBridge::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50470 ];

	ANowAtlasAvatarWorldBridge_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPalisad.setBridgeMeshes
// [0x00020002] 
// Parameters infos:
// int                            _BridgeStatus                  ( CPF_Parm )

void ANowAtlasAvatarPalisad::setBridgeMeshes ( int _BridgeStatus )
{
	static UFunction* pFnsetBridgeMeshes = NULL;

	if ( ! pFnsetBridgeMeshes )
		pFnsetBridgeMeshes = (UFunction*) UObject::GObjObjects()->Data[ 50553 ];

	ANowAtlasAvatarPalisad_execsetBridgeMeshes_Parms setBridgeMeshes_Parms;
	setBridgeMeshes_Parms._BridgeStatus = _BridgeStatus;

	this->ProcessEvent ( pFnsetBridgeMeshes, &setBridgeMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPalisad.PendingHouseBuildingStatus
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPalisad::PendingHouseBuildingStatus ( )
{
	static UFunction* pFnPendingHouseBuildingStatus = NULL;

	if ( ! pFnPendingHouseBuildingStatus )
		pFnPendingHouseBuildingStatus = (UFunction*) UObject::GObjObjects()->Data[ 50552 ];

	ANowAtlasAvatarPalisad_execPendingHouseBuildingStatus_Parms PendingHouseBuildingStatus_Parms;

	this->ProcessEvent ( pFnPendingHouseBuildingStatus, &PendingHouseBuildingStatus_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPalisad.SetActivateCrossNodeAvatarList
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPalisad::SetActivateCrossNodeAvatarList ( )
{
	static UFunction* pFnSetActivateCrossNodeAvatarList = NULL;

	if ( ! pFnSetActivateCrossNodeAvatarList )
		pFnSetActivateCrossNodeAvatarList = (UFunction*) UObject::GObjObjects()->Data[ 50551 ];

	ANowAtlasAvatarPalisad_execSetActivateCrossNodeAvatarList_Parms SetActivateCrossNodeAvatarList_Parms;

	this->ProcessEvent ( pFnSetActivateCrossNodeAvatarList, &SetActivateCrossNodeAvatarList_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPalisad.Destroyed
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPalisad::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 50550 ];

	ANowAtlasAvatarPalisad_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPalisad.FindGoodSpot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 StartLoc                       ( CPF_Parm )
// int                            iter                           ( CPF_Parm )

void ANowAtlasAvatarPalisad::eventFindGoodSpot ( struct FVector StartLoc, int iter )
{
	static UFunction* pFnFindGoodSpot = NULL;

	if ( ! pFnFindGoodSpot )
		pFnFindGoodSpot = (UFunction*) UObject::GObjObjects()->Data[ 50547 ];

	ANowAtlasAvatarPalisad_eventFindGoodSpot_Parms FindGoodSpot_Parms;
	memcpy ( &FindGoodSpot_Parms.StartLoc, &StartLoc, 0xC );
	FindGoodSpot_Parms.iter = iter;

	this->ProcessEvent ( pFnFindGoodSpot, &FindGoodSpot_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPalisad.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPalisad::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50546 ];

	ANowAtlasAvatarPalisad_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldDestructableObject.playDestruction
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarWorldDestructableObject::eventplayDestruction ( )
{
	static UFunction* pFnplayDestruction = NULL;

	if ( ! pFnplayDestruction )
		pFnplayDestruction = (UFunction*) UObject::GObjObjects()->Data[ 51767 ];

	ANowAtlasAvatarWorldDestructableObject_eventplayDestruction_Parms playDestruction_Parms;

	this->ProcessEvent ( pFnplayDestruction, &playDestruction_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldDestructableObject.getHouseMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarWorldDestructableObject::getHouseMesh ( )
{
	static UFunction* pFngetHouseMesh = NULL;

	if ( ! pFngetHouseMesh )
		pFngetHouseMesh = (UFunction*) UObject::GObjObjects()->Data[ 51766 ];

	ANowAtlasAvatarWorldDestructableObject_execgetHouseMesh_Parms getHouseMesh_Parms;

	pFngetHouseMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseMesh, &getHouseMesh_Parms, NULL );

	pFngetHouseMesh->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarWorldDestructableObject.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarWorldDestructableObject::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 51763 ];

	ANowAtlasAvatarWorldDestructableObject_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldDestructableObject.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarWorldDestructableObject::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = (UFunction*) UObject::GObjObjects()->Data[ 51761 ];

	ANowAtlasAvatarWorldDestructableObject_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiege.ResetAnims
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiege::eventResetAnims ( )
{
	static UFunction* pFnResetAnims = NULL;

	if ( ! pFnResetAnims )
		pFnResetAnims = (UFunction*) UObject::GObjObjects()->Data[ 51328 ];

	ANowAtlasAvatarSiege_eventResetAnims_Parms ResetAnims_Parms;

	this->ProcessEvent ( pFnResetAnims, &ResetAnims_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiege.HideBone
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiege::eventHideBone ( )
{
	static UFunction* pFnHideBone = NULL;

	if ( ! pFnHideBone )
		pFnHideBone = (UFunction*) UObject::GObjObjects()->Data[ 51327 ];

	ANowAtlasAvatarSiege_eventHideBone_Parms HideBone_Parms;

	this->ProcessEvent ( pFnHideBone, &HideBone_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiege.ShowBone
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiege::eventShowBone ( )
{
	static UFunction* pFnShowBone = NULL;

	if ( ! pFnShowBone )
		pFnShowBone = (UFunction*) UObject::GObjObjects()->Data[ 51326 ];

	ANowAtlasAvatarSiege_eventShowBone_Parms ShowBone_Parms;

	this->ProcessEvent ( pFnShowBone, &ShowBone_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiege.TraceBoneHit
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiege::eventTraceBoneHit ( )
{
	static UFunction* pFnTraceBoneHit = NULL;

	if ( ! pFnTraceBoneHit )
		pFnTraceBoneHit = (UFunction*) UObject::GObjObjects()->Data[ 51325 ];

	ANowAtlasAvatarSiege_eventTraceBoneHit_Parms TraceBoneHit_Parms;

	this->ProcessEvent ( pFnTraceBoneHit, &TraceBoneHit_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiege.Fire
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiege::eventFire ( )
{
	static UFunction* pFnFire = NULL;

	if ( ! pFnFire )
		pFnFire = (UFunction*) UObject::GObjObjects()->Data[ 51324 ];

	ANowAtlasAvatarSiege_eventFire_Parms Fire_Parms;

	this->ProcessEvent ( pFnFire, &Fire_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiege.PostBeginPlay
// [0x00020000] 
// Parameters infos:

void ANowAtlasAvatarSiege::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51323 ];

	ANowAtlasAvatarSiege_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiege.DealDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ActorsToDamage                 ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarSiege::DealDamage ( struct FString ActorsToDamage )
{
	static UFunction* pFnDealDamage = NULL;

	if ( ! pFnDealDamage )
		pFnDealDamage = (UFunction*) UObject::GObjObjects()->Data[ 51321 ];

	ANowAtlasAvatarSiege_execDealDamage_Parms DealDamage_Parms;
	memcpy ( &DealDamage_Parms.ActorsToDamage, &ActorsToDamage, 0xC );

	pFnDealDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDealDamage, &DealDamage_Parms, NULL );

	pFnDealDamage->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiege.SiegeUse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Letter                         ( CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarSiege::SiegeUse ( struct FString Letter )
{
	static UFunction* pFnSiegeUse = NULL;

	if ( ! pFnSiegeUse )
		pFnSiegeUse = (UFunction*) UObject::GObjObjects()->Data[ 51318 ];

	ANowAtlasAvatarSiege_execSiegeUse_Parms SiegeUse_Parms;
	memcpy ( &SiegeUse_Parms.Letter, &Letter, 0xC );

	pFnSiegeUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSiegeUse, &SiegeUse_Parms, NULL );

	pFnSiegeUse->FunctionFlags |= 0x400;

	return SiegeUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiege.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarSiege::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 51315 ];

	ANowAtlasAvatarSiege_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiegeHailCaster.ResetAnims
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeHailCaster::eventResetAnims ( )
{
	static UFunction* pFnResetAnims = NULL;

	if ( ! pFnResetAnims )
		pFnResetAnims = (UFunction*) UObject::GObjObjects()->Data[ 51573 ];

	ANowAtlasAvatarSiegeHailCaster_eventResetAnims_Parms ResetAnims_Parms;

	this->ProcessEvent ( pFnResetAnims, &ResetAnims_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeHailCaster.HideBone
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeHailCaster::eventHideBone ( )
{
	static UFunction* pFnHideBone = NULL;

	if ( ! pFnHideBone )
		pFnHideBone = (UFunction*) UObject::GObjObjects()->Data[ 51571 ];

	ANowAtlasAvatarSiegeHailCaster_eventHideBone_Parms HideBone_Parms;

	this->ProcessEvent ( pFnHideBone, &HideBone_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeHailCaster.ShowBone
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeHailCaster::eventShowBone ( )
{
	static UFunction* pFnShowBone = NULL;

	if ( ! pFnShowBone )
		pFnShowBone = (UFunction*) UObject::GObjObjects()->Data[ 51569 ];

	ANowAtlasAvatarSiegeHailCaster_eventShowBone_Parms ShowBone_Parms;

	this->ProcessEvent ( pFnShowBone, &ShowBone_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeHailCaster.TraceBoneHit
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeHailCaster::eventTraceBoneHit ( )
{
	static UFunction* pFnTraceBoneHit = NULL;

	if ( ! pFnTraceBoneHit )
		pFnTraceBoneHit = (UFunction*) UObject::GObjObjects()->Data[ 51556 ];

	ANowAtlasAvatarSiegeHailCaster_eventTraceBoneHit_Parms TraceBoneHit_Parms;

	this->ProcessEvent ( pFnTraceBoneHit, &TraceBoneHit_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeHailCaster.Fire
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeHailCaster::eventFire ( )
{
	static UFunction* pFnFire = NULL;

	if ( ! pFnFire )
		pFnFire = (UFunction*) UObject::GObjObjects()->Data[ 51532 ];

	ANowAtlasAvatarSiegeHailCaster_eventFire_Parms Fire_Parms;

	this->ProcessEvent ( pFnFire, &Fire_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeHailCaster.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarSiegeHailCaster::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 51529 ];

	ANowAtlasAvatarSiegeHailCaster_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSkM.RecalcTimeToDestSync
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarSkM::RecalcTimeToDestSync ( )
{
	static UFunction* pFnRecalcTimeToDestSync = NULL;

	if ( ! pFnRecalcTimeToDestSync )
		pFnRecalcTimeToDestSync = (UFunction*) UObject::GObjObjects()->Data[ 49129 ];

	ANowAtlasAvatarSkM_execRecalcTimeToDestSync_Parms RecalcTimeToDestSync_Parms;

	this->ProcessEvent ( pFnRecalcTimeToDestSync, &RecalcTimeToDestSync_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.SetLocationWithGroundCheck
// [0x00820002] 
// Parameters infos:
// struct FVector                 NewPos                         ( CPF_Parm )

void ANowAtlasAvatarSkM::SetLocationWithGroundCheck ( struct FVector NewPos )
{
	static UFunction* pFnSetLocationWithGroundCheck = NULL;

	if ( ! pFnSetLocationWithGroundCheck )
		pFnSetLocationWithGroundCheck = (UFunction*) UObject::GObjObjects()->Data[ 49124 ];

	ANowAtlasAvatarSkM_execSetLocationWithGroundCheck_Parms SetLocationWithGroundCheck_Parms;
	memcpy ( &SetLocationWithGroundCheck_Parms.NewPos, &NewPos, 0xC );

	this->ProcessEvent ( pFnSetLocationWithGroundCheck, &SetLocationWithGroundCheck_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.DrawDebugInfo
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowAtlasAvatarSkM::DrawDebugInfo ( float DeltaTime )
{
	static UFunction* pFnDrawDebugInfo = NULL;

	if ( ! pFnDrawDebugInfo )
		pFnDrawDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 49119 ];

	ANowAtlasAvatarSkM_execDrawDebugInfo_Parms DrawDebugInfo_Parms;
	DrawDebugInfo_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnDrawDebugInfo, &DrawDebugInfo_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.DrawSelfRadius
// [0x00020002] 
// Parameters infos:
// float                          SelfRadius                     ( CPF_Parm )

void ANowAtlasAvatarSkM::DrawSelfRadius ( float SelfRadius )
{
	static UFunction* pFnDrawSelfRadius = NULL;

	if ( ! pFnDrawSelfRadius )
		pFnDrawSelfRadius = (UFunction*) UObject::GObjObjects()->Data[ 49114 ];

	ANowAtlasAvatarSkM_execDrawSelfRadius_Parms DrawSelfRadius_Parms;
	DrawSelfRadius_Parms.SelfRadius = SelfRadius;

	this->ProcessEvent ( pFnDrawSelfRadius, &DrawSelfRadius_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.SetNewMoveSpeed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          NewMoveSpeed                   ( CPF_Parm )

void ANowAtlasAvatarSkM::eventSetNewMoveSpeed ( float NewMoveSpeed )
{
	static UFunction* pFnSetNewMoveSpeed = NULL;

	if ( ! pFnSetNewMoveSpeed )
		pFnSetNewMoveSpeed = (UFunction*) UObject::GObjObjects()->Data[ 49112 ];

	ANowAtlasAvatarSkM_eventSetNewMoveSpeed_Parms SetNewMoveSpeed_Parms;
	SetNewMoveSpeed_Parms.NewMoveSpeed = NewMoveSpeed;

	this->ProcessEvent ( pFnSetNewMoveSpeed, &SetNewMoveSpeed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.GetBlockingNode
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeBlendList*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UAnimNodeBlendList* ANowAtlasAvatarSkM::eventGetBlockingNode ( )
{
	static UFunction* pFnGetBlockingNode = NULL;

	if ( ! pFnGetBlockingNode )
		pFnGetBlockingNode = (UFunction*) UObject::GObjObjects()->Data[ 49110 ];

	ANowAtlasAvatarSkM_eventGetBlockingNode_Parms GetBlockingNode_Parms;

	this->ProcessEvent ( pFnGetBlockingNode, &GetBlockingNode_Parms, NULL );

	return GetBlockingNode_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSkM.JumpOffAvatar
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarSkM::JumpOffAvatar ( )
{
	static UFunction* pFnJumpOffAvatar = NULL;

	if ( ! pFnJumpOffAvatar )
		pFnJumpOffAvatar = (UFunction*) UObject::GObjObjects()->Data[ 49109 ];

	ANowAtlasAvatarSkM_execJumpOffAvatar_Parms JumpOffAvatar_Parms;

	this->ProcessEvent ( pFnJumpOffAvatar, &JumpOffAvatar_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.BaseChange
// [0x00020822] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSkM::eventBaseChange ( )
{
	static UFunction* pFnBaseChange = NULL;

	if ( ! pFnBaseChange )
		pFnBaseChange = (UFunction*) UObject::GObjObjects()->Data[ 49108 ];

	ANowAtlasAvatarSkM_eventBaseChange_Parms BaseChange_Parms;

	this->ProcessEvent ( pFnBaseChange, &BaseChange_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowAtlasAvatarSkM::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 49091 ];

	ANowAtlasAvatarSkM_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.SetLocalFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewFlag                        ( CPF_Parm )

void ANowAtlasAvatarSkM::eventSetLocalFlag ( int NewFlag )
{
	static UFunction* pFnSetLocalFlag = NULL;

	if ( ! pFnSetLocalFlag )
		pFnSetLocalFlag = (UFunction*) UObject::GObjObjects()->Data[ 49089 ];

	ANowAtlasAvatarSkM_eventSetLocalFlag_Parms SetLocalFlag_Parms;
	SetLocalFlag_Parms.NewFlag = NewFlag;

	this->ProcessEvent ( pFnSetLocalFlag, &SetLocalFlag_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarSkM::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 49088 ];

	ANowAtlasAvatarSkM_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.IsClientOwner
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarSkM::IsClientOwner ( )
{
	static UFunction* pFnIsClientOwner = NULL;

	if ( ! pFnIsClientOwner )
		pFnIsClientOwner = (UFunction*) UObject::GObjObjects()->Data[ 49086 ];

	ANowAtlasAvatarSkM_execIsClientOwner_Parms IsClientOwner_Parms;

	pFnIsClientOwner->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsClientOwner, &IsClientOwner_Parms, NULL );

	pFnIsClientOwner->FunctionFlags |= 0x400;

	return IsClientOwner_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSkM.TriggerFootNotify
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            FootIndex                      ( CPF_Parm )
// float                          FootForce                      ( CPF_Parm )

void ANowAtlasAvatarSkM::TriggerFootNotify ( int FootIndex, float FootForce )
{
	static UFunction* pFnTriggerFootNotify = NULL;

	if ( ! pFnTriggerFootNotify )
		pFnTriggerFootNotify = (UFunction*) UObject::GObjObjects()->Data[ 49083 ];

	ANowAtlasAvatarSkM_execTriggerFootNotify_Parms TriggerFootNotify_Parms;
	TriggerFootNotify_Parms.FootIndex = FootIndex;
	TriggerFootNotify_Parms.FootForce = FootForce;

	pFnTriggerFootNotify->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerFootNotify, &TriggerFootNotify_Parms, NULL );

	pFnTriggerFootNotify->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSkM.GetTargetPos
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowAtlasAvatarSkM::GetTargetPos ( )
{
	static UFunction* pFnGetTargetPos = NULL;

	if ( ! pFnGetTargetPos )
		pFnGetTargetPos = (UFunction*) UObject::GObjObjects()->Data[ 49081 ];

	ANowAtlasAvatarSkM_execGetTargetPos_Parms GetTargetPos_Parms;

	pFnGetTargetPos->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetPos, &GetTargetPos_Parms, NULL );

	pFnGetTargetPos->FunctionFlags |= 0x400;

	return GetTargetPos_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSkM.GetTargetDir
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator ANowAtlasAvatarSkM::GetTargetDir ( )
{
	static UFunction* pFnGetTargetDir = NULL;

	if ( ! pFnGetTargetDir )
		pFnGetTargetDir = (UFunction*) UObject::GObjObjects()->Data[ 49079 ];

	ANowAtlasAvatarSkM_execGetTargetDir_Parms GetTargetDir_Parms;

	pFnGetTargetDir->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetDir, &GetTargetDir_Parms, NULL );

	pFnGetTargetDir->FunctionFlags |= 0x400;

	return GetTargetDir_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.TeleportEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventTeleportEffect ( )
{
	static UFunction* pFnTeleportEffect = NULL;

	if ( ! pFnTeleportEffect )
		pFnTeleportEffect = (UFunction*) UObject::GObjObjects()->Data[ 49460 ];

	ANowAtlasAvatarAi_eventTeleportEffect_Parms TeleportEffect_Parms;

	this->ProcessEvent ( pFnTeleportEffect, &TeleportEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.HideMeshes
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bHide                          ( CPF_Parm )

void ANowAtlasAvatarAi::eventHideMeshes ( unsigned long bHide )
{
	static UFunction* pFnHideMeshes = NULL;

	if ( ! pFnHideMeshes )
		pFnHideMeshes = (UFunction*) UObject::GObjObjects()->Data[ 49458 ];

	ANowAtlasAvatarAi_eventHideMeshes_Parms HideMeshes_Parms;
	HideMeshes_Parms.bHide = bHide;

	this->ProcessEvent ( pFnHideMeshes, &HideMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.PlayEquip
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEquip                         ( CPF_Parm )

void ANowAtlasAvatarAi::PlayEquip ( unsigned long bEquip )
{
	static UFunction* pFnPlayEquip = NULL;

	if ( ! pFnPlayEquip )
		pFnPlayEquip = (UFunction*) UObject::GObjObjects()->Data[ 49456 ];

	ANowAtlasAvatarAi_execPlayEquip_Parms PlayEquip_Parms;
	PlayEquip_Parms.bEquip = bEquip;

	this->ProcessEvent ( pFnPlayEquip, &PlayEquip_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.CheckForIdleSpot
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventCheckForIdleSpot ( )
{
	static UFunction* pFnCheckForIdleSpot = NULL;

	if ( ! pFnCheckForIdleSpot )
		pFnCheckForIdleSpot = (UFunction*) UObject::GObjObjects()->Data[ 49453 ];

	ANowAtlasAvatarAi_eventCheckForIdleSpot_Parms CheckForIdleSpot_Parms;

	this->ProcessEvent ( pFnCheckForIdleSpot, &CheckForIdleSpot_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.FindGoodSpot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 StartLoc                       ( CPF_Parm )
// int                            iter                           ( CPF_Parm )

void ANowAtlasAvatarAi::eventFindGoodSpot ( struct FVector StartLoc, int iter )
{
	static UFunction* pFnFindGoodSpot = NULL;

	if ( ! pFnFindGoodSpot )
		pFnFindGoodSpot = (UFunction*) UObject::GObjObjects()->Data[ 49449 ];

	ANowAtlasAvatarAi_eventFindGoodSpot_Parms FindGoodSpot_Parms;
	memcpy ( &FindGoodSpot_Parms.StartLoc, &StartLoc, 0xC );
	FindGoodSpot_Parms.iter = iter;

	this->ProcessEvent ( pFnFindGoodSpot, &FindGoodSpot_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.CreateSyncMove
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventCreateSyncMove ( )
{
	static UFunction* pFnCreateSyncMove = NULL;

	if ( ! pFnCreateSyncMove )
		pFnCreateSyncMove = (UFunction*) UObject::GObjObjects()->Data[ 49444 ];

	ANowAtlasAvatarAi_eventCreateSyncMove_Parms CreateSyncMove_Parms;

	this->ProcessEvent ( pFnCreateSyncMove, &CreateSyncMove_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.GetANowPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowAtlasAvatarAi::eventGetANowPC ( )
{
	static UFunction* pFnGetANowPC = NULL;

	if ( ! pFnGetANowPC )
		pFnGetANowPC = (UFunction*) UObject::GObjObjects()->Data[ 49442 ];

	ANowAtlasAvatarAi_eventGetANowPC_Parms GetANowPC_Parms;

	this->ProcessEvent ( pFnGetANowPC, &GetANowPC_Parms, NULL );

	return GetANowPC_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetExtent
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowAtlasAvatarAi::GetExtent ( )
{
	static UFunction* pFnGetExtent = NULL;

	if ( ! pFnGetExtent )
		pFnGetExtent = (UFunction*) UObject::GObjObjects()->Data[ 49439 ];

	ANowAtlasAvatarAi_execGetExtent_Parms GetExtent_Parms;

	this->ProcessEvent ( pFnGetExtent, &GetExtent_Parms, NULL );

	return GetExtent_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.Landed
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void ANowAtlasAvatarAi::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 49436 ];

	ANowAtlasAvatarAi_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.GetDetourValue
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatarAi::GetDetourValue ( )
{
	static UFunction* pFnGetDetourValue = NULL;

	if ( ! pFnGetDetourValue )
		pFnGetDetourValue = (UFunction*) UObject::GObjObjects()->Data[ 49433 ];

	ANowAtlasAvatarAi_execGetDetourValue_Parms GetDetourValue_Parms;

	this->ProcessEvent ( pFnGetDetourValue, &GetDetourValue_Parms, NULL );

	return GetDetourValue_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.SpawnCorpse
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAi::eventSpawnCorpse ( float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = (UFunction*) UObject::GObjObjects()->Data[ 49425 ];

	ANowAtlasAvatarAi_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.CheckForBleed
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAi::CheckForBleed ( float fDeltaTime )
{
	static UFunction* pFnCheckForBleed = NULL;

	if ( ! pFnCheckForBleed )
		pFnCheckForBleed = (UFunction*) UObject::GObjObjects()->Data[ 49413 ];

	ANowAtlasAvatarAi_execCheckForBleed_Parms CheckForBleed_Parms;
	CheckForBleed_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCheckForBleed, &CheckForBleed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.InitSpawnEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 SpawnEffectName                ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarAi::eventInitSpawnEffect ( struct FString SpawnEffectName )
{
	static UFunction* pFnInitSpawnEffect = NULL;

	if ( ! pFnInitSpawnEffect )
		pFnInitSpawnEffect = (UFunction*) UObject::GObjObjects()->Data[ 49409 ];

	ANowAtlasAvatarAi_eventInitSpawnEffect_Parms InitSpawnEffect_Parms;
	memcpy ( &InitSpawnEffect_Parms.SpawnEffectName, &SpawnEffectName, 0xC );

	this->ProcessEvent ( pFnInitSpawnEffect, &InitSpawnEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.SetHiddenSpawn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bHiddenSpawn                   ( CPF_Parm )

void ANowAtlasAvatarAi::eventSetHiddenSpawn ( unsigned long bHiddenSpawn )
{
	static UFunction* pFnSetHiddenSpawn = NULL;

	if ( ! pFnSetHiddenSpawn )
		pFnSetHiddenSpawn = (UFunction*) UObject::GObjObjects()->Data[ 49407 ];

	ANowAtlasAvatarAi_eventSetHiddenSpawn_Parms SetHiddenSpawn_Parms;
	SetHiddenSpawn_Parms.bHiddenSpawn = bHiddenSpawn;

	this->ProcessEvent ( pFnSetHiddenSpawn, &SetHiddenSpawn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.StartSpawnAnimation
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bSetTimer                      ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAi::eventStartSpawnAnimation ( unsigned long bSetTimer )
{
	static UFunction* pFnStartSpawnAnimation = NULL;

	if ( ! pFnStartSpawnAnimation )
		pFnStartSpawnAnimation = (UFunction*) UObject::GObjObjects()->Data[ 49405 ];

	ANowAtlasAvatarAi_eventStartSpawnAnimation_Parms StartSpawnAnimation_Parms;
	StartSpawnAnimation_Parms.bSetTimer = bSetTimer;

	this->ProcessEvent ( pFnStartSpawnAnimation, &StartSpawnAnimation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.SetMoveType
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iNewMoveType                   ( CPF_Parm )

void ANowAtlasAvatarAi::eventSetMoveType ( int iNewMoveType )
{
	static UFunction* pFnSetMoveType = NULL;

	if ( ! pFnSetMoveType )
		pFnSetMoveType = (UFunction*) UObject::GObjObjects()->Data[ 49403 ];

	ANowAtlasAvatarAi_eventSetMoveType_Parms SetMoveType_Parms;
	SetMoveType_Parms.iNewMoveType = iNewMoveType;

	this->ProcessEvent ( pFnSetMoveType, &SetMoveType_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.AiProjectileEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sEffectName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 vVector                        ( CPF_Parm )
// class AActor*                  pTarget                        ( CPF_Parm )
// unsigned long                  bOnlyMesh                      ( CPF_Parm )

void ANowAtlasAvatarAi::eventAiProjectileEffect ( struct FString sEffectName, struct FVector vVector, class AActor* pTarget, unsigned long bOnlyMesh )
{
	static UFunction* pFnAiProjectileEffect = NULL;

	if ( ! pFnAiProjectileEffect )
		pFnAiProjectileEffect = (UFunction*) UObject::GObjObjects()->Data[ 49395 ];

	ANowAtlasAvatarAi_eventAiProjectileEffect_Parms AiProjectileEffect_Parms;
	memcpy ( &AiProjectileEffect_Parms.sEffectName, &sEffectName, 0xC );
	memcpy ( &AiProjectileEffect_Parms.vVector, &vVector, 0xC );
	AiProjectileEffect_Parms.pTarget = pTarget;
	AiProjectileEffect_Parms.bOnlyMesh = bOnlyMesh;

	this->ProcessEvent ( pFnAiProjectileEffect, &AiProjectileEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.AiAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iAnim                          ( CPF_Parm )
// struct FVector                 vVector                        ( CPF_Parm )
// class AActor*                  pTarget                        ( CPF_Parm )
// float                          fNewAnimLength                 ( CPF_Parm )

void ANowAtlasAvatarAi::eventAiAnim ( int iAnim, struct FVector vVector, class AActor* pTarget, float fNewAnimLength )
{
	static UFunction* pFnAiAnim = NULL;

	if ( ! pFnAiAnim )
		pFnAiAnim = (UFunction*) UObject::GObjObjects()->Data[ 49390 ];

	ANowAtlasAvatarAi_eventAiAnim_Parms AiAnim_Parms;
	AiAnim_Parms.iAnim = iAnim;
	memcpy ( &AiAnim_Parms.vVector, &vVector, 0xC );
	AiAnim_Parms.pTarget = pTarget;
	AiAnim_Parms.fNewAnimLength = fNewAnimLength;

	this->ProcessEvent ( pFnAiAnim, &AiAnim_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.TickDebug
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAi::TickDebug ( float fDeltaTime )
{
	static UFunction* pFnTickDebug = NULL;

	if ( ! pFnTickDebug )
		pFnTickDebug = (UFunction*) UObject::GObjObjects()->Data[ 49387 ];

	ANowAtlasAvatarAi_execTickDebug_Parms TickDebug_Parms;
	TickDebug_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickDebug, &TickDebug_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 49386 ];

	ANowAtlasAvatarAi_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.TriggerMove
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventTriggerMove ( )
{
	static UFunction* pFnTriggerMove = NULL;

	if ( ! pFnTriggerMove )
		pFnTriggerMove = (UFunction*) UObject::GObjObjects()->Data[ 49385 ];

	ANowAtlasAvatarAi_eventTriggerMove_Parms TriggerMove_Parms;

	this->ProcessEvent ( pFnTriggerMove, &TriggerMove_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.CreatePendingMove
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FsPendingMove           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vPos                           ( CPF_Parm )
// float                          fMoveTime                      ( CPF_Parm )
// float                          fTriggerTimer                  ( CPF_Parm )
// unsigned long                  bNewDetour                     ( CPF_Parm )
// unsigned long                  bTriggerd                      ( CPF_Parm )

struct FsPendingMove ANowAtlasAvatarAi::eventCreatePendingMove ( struct FVector vPos, float fMoveTime, float fTriggerTimer, unsigned long bNewDetour, unsigned long bTriggerd )
{
	static UFunction* pFnCreatePendingMove = NULL;

	if ( ! pFnCreatePendingMove )
		pFnCreatePendingMove = (UFunction*) UObject::GObjObjects()->Data[ 49377 ];

	ANowAtlasAvatarAi_eventCreatePendingMove_Parms CreatePendingMove_Parms;
	memcpy ( &CreatePendingMove_Parms.vPos, &vPos, 0xC );
	CreatePendingMove_Parms.fMoveTime = fMoveTime;
	CreatePendingMove_Parms.fTriggerTimer = fTriggerTimer;
	CreatePendingMove_Parms.bNewDetour = bNewDetour;
	CreatePendingMove_Parms.bTriggerd = bTriggerd;

	this->ProcessEvent ( pFnCreatePendingMove, &CreatePendingMove_Parms, NULL );

	return CreatePendingMove_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.SyncPosition
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventSyncPosition ( )
{
	static UFunction* pFnSyncPosition = NULL;

	if ( ! pFnSyncPosition )
		pFnSyncPosition = (UFunction*) UObject::GObjObjects()->Data[ 49375 ];

	ANowAtlasAvatarAi_eventSyncPosition_Parms SyncPosition_Parms;

	this->ProcessEvent ( pFnSyncPosition, &SyncPosition_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.SetLevel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewLevel                       ( CPF_Parm )

void ANowAtlasAvatarAi::eventSetLevel ( int NewLevel )
{
	static UFunction* pFnSetLevel = NULL;

	if ( ! pFnSetLevel )
		pFnSetLevel = (UFunction*) UObject::GObjObjects()->Data[ 49373 ];

	ANowAtlasAvatarAi_eventSetLevel_Parms SetLevel_Parms;
	SetLevel_Parms.NewLevel = NewLevel;

	this->ProcessEvent ( pFnSetLevel, &SetLevel_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.GetInfo
// [0x00420002] 
// Parameters infos:
// TArray< struct FString >       sLogArray                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ANowAtlasAvatarAi::GetInfo ( TArray< struct FString >* sLogArray )
{
	static UFunction* pFnGetInfo = NULL;

	if ( ! pFnGetInfo )
		pFnGetInfo = (UFunction*) UObject::GObjObjects()->Data[ 49365 ];

	ANowAtlasAvatarAi_execGetInfo_Parms GetInfo_Parms;

	this->ProcessEvent ( pFnGetInfo, &GetInfo_Parms, NULL );

	if ( sLogArray )
		memcpy ( sLogArray, &GetInfo_Parms.sLogArray, 0xC );
};

// Function NowGame.NowAtlasAvatarAi.GetNowPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowAtlasAvatarAi::eventGetNowPC ( )
{
	static UFunction* pFnGetNowPC = NULL;

	if ( ! pFnGetNowPC )
		pFnGetNowPC = (UFunction*) UObject::GObjObjects()->Data[ 49363 ];

	ANowAtlasAvatarAi_eventGetNowPC_Parms GetNowPC_Parms;

	this->ProcessEvent ( pFnGetNowPC, &GetNowPC_Parms, NULL );

	return GetNowPC_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.SetLocationWithGroundCheck
// [0x00020002] 
// Parameters infos:
// struct FVector                 NewPos                         ( CPF_Parm )

void ANowAtlasAvatarAi::SetLocationWithGroundCheck ( struct FVector NewPos )
{
	static UFunction* pFnSetLocationWithGroundCheck = NULL;

	if ( ! pFnSetLocationWithGroundCheck )
		pFnSetLocationWithGroundCheck = (UFunction*) UObject::GObjObjects()->Data[ 49361 ];

	ANowAtlasAvatarAi_execSetLocationWithGroundCheck_Parms SetLocationWithGroundCheck_Parms;
	memcpy ( &SetLocationWithGroundCheck_Parms.NewPos, &NewPos, 0xC );

	this->ProcessEvent ( pFnSetLocationWithGroundCheck, &SetLocationWithGroundCheck_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.UpdateDamageMaterial
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventUpdateDamageMaterial ( )
{
	static UFunction* pFnUpdateDamageMaterial = NULL;

	if ( ! pFnUpdateDamageMaterial )
		pFnUpdateDamageMaterial = (UFunction*) UObject::GObjObjects()->Data[ 49357 ];

	ANowAtlasAvatarAi_eventUpdateDamageMaterial_Parms UpdateDamageMaterial_Parms;

	this->ProcessEvent ( pFnUpdateDamageMaterial, &UpdateDamageMaterial_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.GetBloodSpawnLocation
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vOutLoc                        ( CPF_Parm | CPF_OutParm )

bool ANowAtlasAvatarAi::GetBloodSpawnLocation ( struct FVector* vOutLoc )
{
	static UFunction* pFnGetBloodSpawnLocation = NULL;

	if ( ! pFnGetBloodSpawnLocation )
		pFnGetBloodSpawnLocation = (UFunction*) UObject::GObjObjects()->Data[ 49350 ];

	ANowAtlasAvatarAi_execGetBloodSpawnLocation_Parms GetBloodSpawnLocation_Parms;

	this->ProcessEvent ( pFnGetBloodSpawnLocation, &GetBloodSpawnLocation_Parms, NULL );

	if ( vOutLoc )
		memcpy ( vOutLoc, &GetBloodSpawnLocation_Parms.vOutLoc, 0xC );

	return GetBloodSpawnLocation_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.AiTookDamage
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Attacker                       ( CPF_Parm )
// float                          Amount                         ( CPF_Parm )

void ANowAtlasAvatarAi::eventAiTookDamage ( class AActor* Attacker, float Amount )
{
	static UFunction* pFnAiTookDamage = NULL;

	if ( ! pFnAiTookDamage )
		pFnAiTookDamage = (UFunction*) UObject::GObjObjects()->Data[ 49342 ];

	ANowAtlasAvatarAi_eventAiTookDamage_Parms AiTookDamage_Parms;
	AiTookDamage_Parms.Attacker = Attacker;
	AiTookDamage_Parms.Amount = Amount;

	this->ProcessEvent ( pFnAiTookDamage, &AiTookDamage_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.GetLookAt
// [0x00020002] 
// Parameters infos:
// class USkelControlLookAt*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USkelControlLookAt* ANowAtlasAvatarAi::GetLookAt ( )
{
	static UFunction* pFnGetLookAt = NULL;

	if ( ! pFnGetLookAt )
		pFnGetLookAt = (UFunction*) UObject::GObjObjects()->Data[ 49340 ];

	ANowAtlasAvatarAi_execGetLookAt_Parms GetLookAt_Parms;

	this->ProcessEvent ( pFnGetLookAt, &GetLookAt_Parms, NULL );

	return GetLookAt_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.ResetLookAt
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventResetLookAt ( )
{
	static UFunction* pFnResetLookAt = NULL;

	if ( ! pFnResetLookAt )
		pFnResetLookAt = (UFunction*) UObject::GObjObjects()->Data[ 49339 ];

	ANowAtlasAvatarAi_eventResetLookAt_Parms ResetLookAt_Parms;

	this->ProcessEvent ( pFnResetLookAt, &ResetLookAt_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.TickLookAt
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAi::TickLookAt ( float fDeltaTime )
{
	static UFunction* pFnTickLookAt = NULL;

	if ( ! pFnTickLookAt )
		pFnTickLookAt = (UFunction*) UObject::GObjObjects()->Data[ 49336 ];

	ANowAtlasAvatarAi_execTickLookAt_Parms TickLookAt_Parms;
	TickLookAt_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickLookAt, &TickLookAt_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.AddStaticMeshObject
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class UStaticMesh*             STM                            ( CPF_Parm )
// struct FName                   SocketName                     ( CPF_Parm )

void ANowAtlasAvatarAi::eventAddStaticMeshObject ( class UStaticMesh* STM, struct FName SocketName )
{
	static UFunction* pFnAddStaticMeshObject = NULL;

	if ( ! pFnAddStaticMeshObject )
		pFnAddStaticMeshObject = (UFunction*) UObject::GObjObjects()->Data[ 49333 ];

	ANowAtlasAvatarAi_eventAddStaticMeshObject_Parms AddStaticMeshObject_Parms;
	AddStaticMeshObject_Parms.STM = STM;
	memcpy ( &AddStaticMeshObject_Parms.SocketName, &SocketName, 0x8 );

	this->ProcessEvent ( pFnAddStaticMeshObject, &AddStaticMeshObject_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.TickTurnTo
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAi::TickTurnTo ( float fDeltaTime )
{
	static UFunction* pFnTickTurnTo = NULL;

	if ( ! pFnTickTurnTo )
		pFnTickTurnTo = (UFunction*) UObject::GObjObjects()->Data[ 49328 ];

	ANowAtlasAvatarAi_execTickTurnTo_Parms TickTurnTo_Parms;
	TickTurnTo_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickTurnTo, &TickTurnTo_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.Tick
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAi::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 49326 ];

	ANowAtlasAvatarAi_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.TickPitch
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAi::TickPitch ( float fDeltaTime )
{
	static UFunction* pFnTickPitch = NULL;

	if ( ! pFnTickPitch )
		pFnTickPitch = (UFunction*) UObject::GObjObjects()->Data[ 49313 ];

	ANowAtlasAvatarAi_execTickPitch_Parms TickPitch_Parms;
	TickPitch_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickPitch, &TickPitch_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.cacheNodes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventcacheNodes ( )
{
	static UFunction* pFncacheNodes = NULL;

	if ( ! pFncacheNodes )
		pFncacheNodes = (UFunction*) UObject::GObjObjects()->Data[ 49312 ];

	ANowAtlasAvatarAi_eventcacheNodes_Parms cacheNodes_Parms;

	this->ProcessEvent ( pFncacheNodes, &cacheNodes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.SetAiState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  NewState                       ( CPF_Parm )

void ANowAtlasAvatarAi::eventSetAiState ( unsigned char NewState )
{
	static UFunction* pFnSetAiState = NULL;

	if ( ! pFnSetAiState )
		pFnSetAiState = (UFunction*) UObject::GObjObjects()->Data[ 49310 ];

	ANowAtlasAvatarAi_eventSetAiState_Parms SetAiState_Parms;
	SetAiState_Parms.NewState = NewState;

	this->ProcessEvent ( pFnSetAiState, &SetAiState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.CreateAiAttackType
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FsAiAttackTypes         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iDps                           ( CPF_Parm )
// int                            iDmg                           ( CPF_Parm )

struct FsAiAttackTypes ANowAtlasAvatarAi::eventCreateAiAttackType ( struct FString sName, int iDps, int iDmg )
{
	static UFunction* pFnCreateAiAttackType = NULL;

	if ( ! pFnCreateAiAttackType )
		pFnCreateAiAttackType = (UFunction*) UObject::GObjObjects()->Data[ 49304 ];

	ANowAtlasAvatarAi_eventCreateAiAttackType_Parms CreateAiAttackType_Parms;
	memcpy ( &CreateAiAttackType_Parms.sName, &sName, 0xC );
	CreateAiAttackType_Parms.iDps = iDps;
	CreateAiAttackType_Parms.iDmg = iDmg;

	this->ProcessEvent ( pFnCreateAiAttackType, &CreateAiAttackType_Parms, NULL );

	return CreateAiAttackType_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.AddMagicMeshFX
// [0x00020002] 
// Parameters infos:
// class UMagicMeshFX*            NewFX                          ( CPF_Parm )

void ANowAtlasAvatarAi::AddMagicMeshFX ( class UMagicMeshFX* NewFX )
{
	static UFunction* pFnAddMagicMeshFX = NULL;

	if ( ! pFnAddMagicMeshFX )
		pFnAddMagicMeshFX = (UFunction*) UObject::GObjObjects()->Data[ 49302 ];

	ANowAtlasAvatarAi_execAddMagicMeshFX_Parms AddMagicMeshFX_Parms;
	AddMagicMeshFX_Parms.NewFX = NewFX;

	this->ProcessEvent ( pFnAddMagicMeshFX, &AddMagicMeshFX_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.SetLocalFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewFlag                        ( CPF_Parm )

void ANowAtlasAvatarAi::eventSetLocalFlag ( int NewFlag )
{
	static UFunction* pFnSetLocalFlag = NULL;

	if ( ! pFnSetLocalFlag )
		pFnSetLocalFlag = (UFunction*) UObject::GObjObjects()->Data[ 49300 ];

	ANowAtlasAvatarAi_eventSetLocalFlag_Parms SetLocalFlag_Parms;
	SetLocalFlag_Parms.NewFlag = NewFlag;

	this->ProcessEvent ( pFnSetLocalFlag, &SetLocalFlag_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.ChangedDisplayName
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventChangedDisplayName ( )
{
	static UFunction* pFnChangedDisplayName = NULL;

	if ( ! pFnChangedDisplayName )
		pFnChangedDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 49297 ];

	ANowAtlasAvatarAi_eventChangedDisplayName_Parms ChangedDisplayName_Parms;

	this->ProcessEvent ( pFnChangedDisplayName, &ChangedDisplayName_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.StartMaterialDamage
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventStartMaterialDamage ( )
{
	static UFunction* pFnStartMaterialDamage = NULL;

	if ( ! pFnStartMaterialDamage )
		pFnStartMaterialDamage = (UFunction*) UObject::GObjObjects()->Data[ 49296 ];

	ANowAtlasAvatarAi_eventStartMaterialDamage_Parms StartMaterialDamage_Parms;

	this->ProcessEvent ( pFnStartMaterialDamage, &StartMaterialDamage_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.PendingUpdateAiTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventPendingUpdateAiTarget ( )
{
	static UFunction* pFnPendingUpdateAiTarget = NULL;

	if ( ! pFnPendingUpdateAiTarget )
		pFnPendingUpdateAiTarget = (UFunction*) UObject::GObjObjects()->Data[ 49295 ];

	ANowAtlasAvatarAi_eventPendingUpdateAiTarget_Parms PendingUpdateAiTarget_Parms;

	this->ProcessEvent ( pFnPendingUpdateAiTarget, &PendingUpdateAiTarget_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.PendingResetMoveType
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventPendingResetMoveType ( )
{
	static UFunction* pFnPendingResetMoveType = NULL;

	if ( ! pFnPendingResetMoveType )
		pFnPendingResetMoveType = (UFunction*) UObject::GObjObjects()->Data[ 49294 ];

	ANowAtlasAvatarAi_eventPendingResetMoveType_Parms PendingResetMoveType_Parms;

	this->ProcessEvent ( pFnPendingResetMoveType, &PendingResetMoveType_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAi::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 49293 ];

	ANowAtlasAvatarAi_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.GetLastHitBoneName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName ANowAtlasAvatarAi::GetLastHitBoneName ( )
{
	static UFunction* pFnGetLastHitBoneName = NULL;

	if ( ! pFnGetLastHitBoneName )
		pFnGetLastHitBoneName = (UFunction*) UObject::GObjObjects()->Data[ 49291 ];

	ANowAtlasAvatarAi_execGetLastHitBoneName_Parms GetLastHitBoneName_Parms;

	pFnGetLastHitBoneName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLastHitBoneName, &GetLastHitBoneName_Parms, NULL );

	pFnGetLastHitBoneName->FunctionFlags |= 0x400;

	return GetLastHitBoneName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetLastHitBoneGibGroup
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetLastHitBoneGibGroup ( )
{
	static UFunction* pFnGetLastHitBoneGibGroup = NULL;

	if ( ! pFnGetLastHitBoneGibGroup )
		pFnGetLastHitBoneGibGroup = (UFunction*) UObject::GObjObjects()->Data[ 49289 ];

	ANowAtlasAvatarAi_execGetLastHitBoneGibGroup_Parms GetLastHitBoneGibGroup_Parms;

	pFnGetLastHitBoneGibGroup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLastHitBoneGibGroup, &GetLastHitBoneGibGroup_Parms, NULL );

	pFnGetLastHitBoneGibGroup->FunctionFlags |= 0x400;

	return GetLastHitBoneGibGroup_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetLastHitBoneNames
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   BoneA                          ( CPF_Parm | CPF_OutParm )
// struct FName                   BoneB                          ( CPF_Parm | CPF_OutParm )

bool ANowAtlasAvatarAi::GetLastHitBoneNames ( struct FName* BoneA, struct FName* BoneB )
{
	static UFunction* pFnGetLastHitBoneNames = NULL;

	if ( ! pFnGetLastHitBoneNames )
		pFnGetLastHitBoneNames = (UFunction*) UObject::GObjObjects()->Data[ 49285 ];

	ANowAtlasAvatarAi_execGetLastHitBoneNames_Parms GetLastHitBoneNames_Parms;

	pFnGetLastHitBoneNames->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLastHitBoneNames, &GetLastHitBoneNames_Parms, NULL );

	pFnGetLastHitBoneNames->FunctionFlags |= 0x400;

	if ( BoneA )
		memcpy ( BoneA, &GetLastHitBoneNames_Parms.BoneA, 0x8 );

	if ( BoneB )
		memcpy ( BoneB, &GetLastHitBoneNames_Parms.BoneB, 0x8 );

	return GetLastHitBoneNames_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetDefaultName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAi::GetDefaultName ( )
{
	static UFunction* pFnGetDefaultName = NULL;

	if ( ! pFnGetDefaultName )
		pFnGetDefaultName = (UFunction*) UObject::GObjObjects()->Data[ 49283 ];

	ANowAtlasAvatarAi_execGetDefaultName_Parms GetDefaultName_Parms;

	pFnGetDefaultName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefaultName, &GetDefaultName_Parms, NULL );

	pFnGetDefaultName->FunctionFlags |= 0x400;

	return GetDefaultName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetDeathEffect
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAi::GetDeathEffect ( )
{
	static UFunction* pFnGetDeathEffect = NULL;

	if ( ! pFnGetDeathEffect )
		pFnGetDeathEffect = (UFunction*) UObject::GObjObjects()->Data[ 49281 ];

	ANowAtlasAvatarAi_execGetDeathEffect_Parms GetDeathEffect_Parms;

	pFnGetDeathEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDeathEffect, &GetDeathEffect_Parms, NULL );

	pFnGetDeathEffect->FunctionFlags |= 0x400;

	return GetDeathEffect_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetMoveSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatarAi::GetMoveSpeed ( )
{
	static UFunction* pFnGetMoveSpeed = NULL;

	if ( ! pFnGetMoveSpeed )
		pFnGetMoveSpeed = (UFunction*) UObject::GObjObjects()->Data[ 49279 ];

	ANowAtlasAvatarAi_execGetMoveSpeed_Parms GetMoveSpeed_Parms;

	pFnGetMoveSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMoveSpeed, &GetMoveSpeed_Parms, NULL );

	pFnGetMoveSpeed->FunctionFlags |= 0x400;

	return GetMoveSpeed_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.AddNewMove
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          newTimer                       ( CPF_Parm )
// struct FVector                 NewTarget                      ( CPF_Parm )

void ANowAtlasAvatarAi::AddNewMove ( float newTimer, struct FVector NewTarget )
{
	static UFunction* pFnAddNewMove = NULL;

	if ( ! pFnAddNewMove )
		pFnAddNewMove = (UFunction*) UObject::GObjObjects()->Data[ 49276 ];

	ANowAtlasAvatarAi_execAddNewMove_Parms AddNewMove_Parms;
	AddNewMove_Parms.newTimer = newTimer;
	memcpy ( &AddNewMove_Parms.NewTarget, &NewTarget, 0xC );

	pFnAddNewMove->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddNewMove, &AddNewMove_Parms, NULL );

	pFnAddNewMove->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.HasItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAi::HasItems ( )
{
	static UFunction* pFnHasItems = NULL;

	if ( ! pFnHasItems )
		pFnHasItems = (UFunction*) UObject::GObjObjects()->Data[ 46016 ];

	ANowAtlasAvatarAi_execHasItems_Parms HasItems_Parms;

	pFnHasItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasItems, &HasItems_Parms, NULL );

	pFnHasItems->FunctionFlags |= 0x400;

	return HasItems_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetInitalRotation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAi::GetInitalRotation ( )
{
	static UFunction* pFnGetInitalRotation = NULL;

	if ( ! pFnGetInitalRotation )
		pFnGetInitalRotation = (UFunction*) UObject::GObjObjects()->Data[ 49275 ];

	ANowAtlasAvatarAi_execGetInitalRotation_Parms GetInitalRotation_Parms;

	pFnGetInitalRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInitalRotation, &GetInitalRotation_Parms, NULL );

	pFnGetInitalRotation->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.AttackOrder
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  pVictim                        ( CPF_Parm )

void ANowAtlasAvatarAi::AttackOrder ( class AActor* pVictim )
{
	static UFunction* pFnAttackOrder = NULL;

	if ( ! pFnAttackOrder )
		pFnAttackOrder = (UFunction*) UObject::GObjObjects()->Data[ 49273 ];

	ANowAtlasAvatarAi_execAttackOrder_Parms AttackOrder_Parms;
	AttackOrder_Parms.pVictim = pVictim;

	pFnAttackOrder->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAttackOrder, &AttackOrder_Parms, NULL );

	pFnAttackOrder->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.IsGuard
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAi::IsGuard ( )
{
	static UFunction* pFnIsGuard = NULL;

	if ( ! pFnIsGuard )
		pFnIsGuard = (UFunction*) UObject::GObjObjects()->Data[ 46055 ];

	ANowAtlasAvatarAi_execIsGuard_Parms IsGuard_Parms;

	pFnIsGuard->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsGuard, &IsGuard_Parms, NULL );

	pFnIsGuard->FunctionFlags |= 0x400;

	return IsGuard_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.IsAi
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAi::IsAi ( )
{
	static UFunction* pFnIsAi = NULL;

	if ( ! pFnIsAi )
		pFnIsAi = (UFunction*) UObject::GObjObjects()->Data[ 49271 ];

	ANowAtlasAvatarAi_execIsAi_Parms IsAi_Parms;

	pFnIsAi->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAi, &IsAi_Parms, NULL );

	pFnIsAi->FunctionFlags |= 0x400;

	return IsAi_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.UpdateLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAi::UpdateLevel ( )
{
	static UFunction* pFnUpdateLevel = NULL;

	if ( ! pFnUpdateLevel )
		pFnUpdateLevel = (UFunction*) UObject::GObjObjects()->Data[ 49270 ];

	ANowAtlasAvatarAi_execUpdateLevel_Parms UpdateLevel_Parms;

	pFnUpdateLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateLevel, &UpdateLevel_Parms, NULL );

	pFnUpdateLevel->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatarAi::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 49268 ];

	ANowAtlasAvatarAi_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.GetPointCost
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetPointCost ( )
{
	static UFunction* pFnGetPointCost = NULL;

	if ( ! pFnGetPointCost )
		pFnGetPointCost = (UFunction*) UObject::GObjObjects()->Data[ 49266 ];

	ANowAtlasAvatarAi_execGetPointCost_Parms GetPointCost_Parms;

	pFnGetPointCost->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPointCost, &GetPointCost_Parms, NULL );

	pFnGetPointCost->FunctionFlags |= 0x400;

	return GetPointCost_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetLevelLock
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetLevelLock ( )
{
	static UFunction* pFnGetLevelLock = NULL;

	if ( ! pFnGetLevelLock )
		pFnGetLevelLock = (UFunction*) UObject::GObjObjects()->Data[ 49264 ];

	ANowAtlasAvatarAi_execGetLevelLock_Parms GetLevelLock_Parms;

	pFnGetLevelLock->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLevelLock, &GetLevelLock_Parms, NULL );

	pFnGetLevelLock->FunctionFlags |= 0x400;

	return GetLevelLock_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetWei
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetWei ( )
{
	static UFunction* pFnGetWei = NULL;

	if ( ! pFnGetWei )
		pFnGetWei = (UFunction*) UObject::GObjObjects()->Data[ 49262 ];

	ANowAtlasAvatarAi_execGetWei_Parms GetWei_Parms;

	pFnGetWei->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWei, &GetWei_Parms, NULL );

	pFnGetWei->FunctionFlags |= 0x400;

	return GetWei_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetSiz
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetSiz ( )
{
	static UFunction* pFnGetSiz = NULL;

	if ( ! pFnGetSiz )
		pFnGetSiz = (UFunction*) UObject::GObjObjects()->Data[ 49260 ];

	ANowAtlasAvatarAi_execGetSiz_Parms GetSiz_Parms;

	pFnGetSiz->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSiz, &GetSiz_Parms, NULL );

	pFnGetSiz->FunctionFlags |= 0x400;

	return GetSiz_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetSpe
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetSpe ( )
{
	static UFunction* pFnGetSpe = NULL;

	if ( ! pFnGetSpe )
		pFnGetSpe = (UFunction*) UObject::GObjObjects()->Data[ 49258 ];

	ANowAtlasAvatarAi_execGetSpe_Parms GetSpe_Parms;

	pFnGetSpe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpe, &GetSpe_Parms, NULL );

	pFnGetSpe->FunctionFlags |= 0x400;

	return GetSpe_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetInt ( )
{
	static UFunction* pFnGetInt = NULL;

	if ( ! pFnGetInt )
		pFnGetInt = (UFunction*) UObject::GObjObjects()->Data[ 49256 ];

	ANowAtlasAvatarAi_execGetInt_Parms GetInt_Parms;

	pFnGetInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInt, &GetInt_Parms, NULL );

	pFnGetInt->FunctionFlags |= 0x400;

	return GetInt_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetPsy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetPsy ( )
{
	static UFunction* pFnGetPsy = NULL;

	if ( ! pFnGetPsy )
		pFnGetPsy = (UFunction*) UObject::GObjObjects()->Data[ 49254 ];

	ANowAtlasAvatarAi_execGetPsy_Parms GetPsy_Parms;

	pFnGetPsy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPsy, &GetPsy_Parms, NULL );

	pFnGetPsy->FunctionFlags |= 0x400;

	return GetPsy_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetCon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetCon ( )
{
	static UFunction* pFnGetCon = NULL;

	if ( ! pFnGetCon )
		pFnGetCon = (UFunction*) UObject::GObjObjects()->Data[ 49252 ];

	ANowAtlasAvatarAi_execGetCon_Parms GetCon_Parms;

	pFnGetCon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCon, &GetCon_Parms, NULL );

	pFnGetCon->FunctionFlags |= 0x400;

	return GetCon_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetDex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetDex ( )
{
	static UFunction* pFnGetDex = NULL;

	if ( ! pFnGetDex )
		pFnGetDex = (UFunction*) UObject::GObjObjects()->Data[ 49250 ];

	ANowAtlasAvatarAi_execGetDex_Parms GetDex_Parms;

	pFnGetDex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDex, &GetDex_Parms, NULL );

	pFnGetDex->FunctionFlags |= 0x400;

	return GetDex_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetStr
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetStr ( )
{
	static UFunction* pFnGetStr = NULL;

	if ( ! pFnGetStr )
		pFnGetStr = (UFunction*) UObject::GObjObjects()->Data[ 49248 ];

	ANowAtlasAvatarAi_execGetStr_Parms GetStr_Parms;

	pFnGetStr->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStr, &GetStr_Parms, NULL );

	pFnGetStr->FunctionFlags |= 0x400;

	return GetStr_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetHealthMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetHealthMax ( )
{
	static UFunction* pFnGetHealthMax = NULL;

	if ( ! pFnGetHealthMax )
		pFnGetHealthMax = (UFunction*) UObject::GObjObjects()->Data[ 49246 ];

	ANowAtlasAvatarAi_execGetHealthMax_Parms GetHealthMax_Parms;

	pFnGetHealthMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealthMax, &GetHealthMax_Parms, NULL );

	pFnGetHealthMax->FunctionFlags |= 0x400;

	return GetHealthMax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetHealth ( )
{
	static UFunction* pFnGetHealth = NULL;

	if ( ! pFnGetHealth )
		pFnGetHealth = (UFunction*) UObject::GObjObjects()->Data[ 49244 ];

	ANowAtlasAvatarAi_execGetHealth_Parms GetHealth_Parms;

	pFnGetHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealth, &GetHealth_Parms, NULL );

	pFnGetHealth->FunctionFlags |= 0x400;

	return GetHealth_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetLevel ( )
{
	static UFunction* pFnGetLevel = NULL;

	if ( ! pFnGetLevel )
		pFnGetLevel = (UFunction*) UObject::GObjObjects()->Data[ 49242 ];

	ANowAtlasAvatarAi_execGetLevel_Parms GetLevel_Parms;

	pFnGetLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLevel, &GetLevel_Parms, NULL );

	pFnGetLevel->FunctionFlags |= 0x400;

	return GetLevel_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetSkillName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAi::GetSkillName ( )
{
	static UFunction* pFnGetSkillName = NULL;

	if ( ! pFnGetSkillName )
		pFnGetSkillName = (UFunction*) UObject::GObjObjects()->Data[ 49240 ];

	ANowAtlasAvatarAi_execGetSkillName_Parms GetSkillName_Parms;

	pFnGetSkillName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillName, &GetSkillName_Parms, NULL );

	pFnGetSkillName->FunctionFlags |= 0x400;

	return GetSkillName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetHunger
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetHunger ( )
{
	static UFunction* pFnGetHunger = NULL;

	if ( ! pFnGetHunger )
		pFnGetHunger = (UFunction*) UObject::GObjObjects()->Data[ 49238 ];

	ANowAtlasAvatarAi_execGetHunger_Parms GetHunger_Parms;

	pFnGetHunger->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHunger, &GetHunger_Parms, NULL );

	pFnGetHunger->FunctionFlags |= 0x400;

	return GetHunger_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetAttackInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FsAiAttackTypes > vAiAttacks                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ANowAtlasAvatarAi::GetAttackInfo ( TArray< struct FsAiAttackTypes >* vAiAttacks )
{
	static UFunction* pFnGetAttackInfo = NULL;

	if ( ! pFnGetAttackInfo )
		pFnGetAttackInfo = (UFunction*) UObject::GObjObjects()->Data[ 49235 ];

	ANowAtlasAvatarAi_execGetAttackInfo_Parms GetAttackInfo_Parms;

	pFnGetAttackInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAttackInfo, &GetAttackInfo_Parms, NULL );

	pFnGetAttackInfo->FunctionFlags |= 0x400;

	if ( vAiAttacks )
		memcpy ( vAiAttacks, &GetAttackInfo_Parms.vAiAttacks, 0xC );
};

// Function NowGame.NowAtlasAvatarAi.GetLoyalty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetLoyalty ( )
{
	static UFunction* pFnGetLoyalty = NULL;

	if ( ! pFnGetLoyalty )
		pFnGetLoyalty = (UFunction*) UObject::GObjObjects()->Data[ 49233 ];

	ANowAtlasAvatarAi_execGetLoyalty_Parms GetLoyalty_Parms;

	pFnGetLoyalty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLoyalty, &GetLoyalty_Parms, NULL );

	pFnGetLoyalty->FunctionFlags |= 0x400;

	return GetLoyalty_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.SetIdleLook
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAi::SetIdleLook ( )
{
	static UFunction* pFnSetIdleLook = NULL;

	if ( ! pFnSetIdleLook )
		pFnSetIdleLook = (UFunction*) UObject::GObjObjects()->Data[ 49232 ];

	ANowAtlasAvatarAi_execSetIdleLook_Parms SetIdleLook_Parms;

	pFnSetIdleLook->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetIdleLook, &SetIdleLook_Parms, NULL );

	pFnSetIdleLook->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.GetCubicSize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatarAi::GetCubicSize ( )
{
	static UFunction* pFnGetCubicSize = NULL;

	if ( ! pFnGetCubicSize )
		pFnGetCubicSize = (UFunction*) UObject::GObjObjects()->Data[ 49230 ];

	ANowAtlasAvatarAi_execGetCubicSize_Parms GetCubicSize_Parms;

	pFnGetCubicSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCubicSize, &GetCubicSize_Parms, NULL );

	pFnGetCubicSize->FunctionFlags |= 0x400;

	return GetCubicSize_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GroundCheck
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 NewPos                         ( CPF_Parm )

struct FVector ANowAtlasAvatarAi::GroundCheck ( struct FVector NewPos )
{
	static UFunction* pFnGroundCheck = NULL;

	if ( ! pFnGroundCheck )
		pFnGroundCheck = (UFunction*) UObject::GObjObjects()->Data[ 48777 ];

	ANowAtlasAvatarAi_execGroundCheck_Parms GroundCheck_Parms;
	memcpy ( &GroundCheck_Parms.NewPos, &NewPos, 0xC );

	pFnGroundCheck->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGroundCheck, &GroundCheck_Parms, NULL );

	pFnGroundCheck->FunctionFlags |= 0x400;

	return GroundCheck_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetMoveLength
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatarAi::GetMoveLength ( )
{
	static UFunction* pFnGetMoveLength = NULL;

	if ( ! pFnGetMoveLength )
		pFnGetMoveLength = (UFunction*) UObject::GObjObjects()->Data[ 49227 ];

	ANowAtlasAvatarAi_execGetMoveLength_Parms GetMoveLength_Parms;

	pFnGetMoveLength->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMoveLength, &GetMoveLength_Parms, NULL );

	pFnGetMoveLength->FunctionFlags |= 0x400;

	return GetMoveLength_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.ResetMoveType
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAi::ResetMoveType ( )
{
	static UFunction* pFnResetMoveType = NULL;

	if ( ! pFnResetMoveType )
		pFnResetMoveType = (UFunction*) UObject::GObjObjects()->Data[ 49226 ];

	ANowAtlasAvatarAi_execResetMoveType_Parms ResetMoveType_Parms;

	pFnResetMoveType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetMoveType, &ResetMoveType_Parms, NULL );

	pFnResetMoveType->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.GetAiGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAi::GetAiGuid ( )
{
	static UFunction* pFnGetAiGuid = NULL;

	if ( ! pFnGetAiGuid )
		pFnGetAiGuid = (UFunction*) UObject::GObjObjects()->Data[ 46018 ];

	ANowAtlasAvatarAi_execGetAiGuid_Parms GetAiGuid_Parms;

	pFnGetAiGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAiGuid, &GetAiGuid_Parms, NULL );

	pFnGetAiGuid->FunctionFlags |= 0x400;

	return GetAiGuid_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.StartSpawnEffect
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAi::StartSpawnEffect ( )
{
	static UFunction* pFnStartSpawnEffect = NULL;

	if ( ! pFnStartSpawnEffect )
		pFnStartSpawnEffect = (UFunction*) UObject::GObjObjects()->Data[ 49225 ];

	ANowAtlasAvatarAi_execStartSpawnEffect_Parms StartSpawnEffect_Parms;

	pFnStartSpawnEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartSpawnEffect, &StartSpawnEffect_Parms, NULL );

	pFnStartSpawnEffect->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.UpdateAiTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAi::UpdateAiTarget ( )
{
	static UFunction* pFnUpdateAiTarget = NULL;

	if ( ! pFnUpdateAiTarget )
		pFnUpdateAiTarget = (UFunction*) UObject::GObjObjects()->Data[ 49224 ];

	ANowAtlasAvatarAi_execUpdateAiTarget_Parms UpdateAiTarget_Parms;

	pFnUpdateAiTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAiTarget, &UpdateAiTarget_Parms, NULL );

	pFnUpdateAiTarget->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.GetAndCreateBodyFinished
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAi::GetAndCreateBodyFinished ( )
{
	static UFunction* pFnGetAndCreateBodyFinished = NULL;

	if ( ! pFnGetAndCreateBodyFinished )
		pFnGetAndCreateBodyFinished = (UFunction*) UObject::GObjObjects()->Data[ 49223 ];

	ANowAtlasAvatarAi_execGetAndCreateBodyFinished_Parms GetAndCreateBodyFinished_Parms;

	pFnGetAndCreateBodyFinished->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateBodyFinished, &GetAndCreateBodyFinished_Parms, NULL );

	pFnGetAndCreateBodyFinished->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.GetAndCreateBody
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAi::GetAndCreateBody ( unsigned long bReInit )
{
	static UFunction* pFnGetAndCreateBody = NULL;

	if ( ! pFnGetAndCreateBody )
		pFnGetAndCreateBody = (UFunction*) UObject::GObjObjects()->Data[ 49221 ];

	ANowAtlasAvatarAi_execGetAndCreateBody_Parms GetAndCreateBody_Parms;
	GetAndCreateBody_Parms.bReInit = bReInit;

	pFnGetAndCreateBody->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateBody, &GetAndCreateBody_Parms, NULL );

	pFnGetAndCreateBody->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.GetServerPos
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowAtlasAvatarAi::GetServerPos ( )
{
	static UFunction* pFnGetServerPos = NULL;

	if ( ! pFnGetServerPos )
		pFnGetServerPos = (UFunction*) UObject::GObjObjects()->Data[ 49219 ];

	ANowAtlasAvatarAi_execGetServerPos_Parms GetServerPos_Parms;

	pFnGetServerPos->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetServerPos, &GetServerPos_Parms, NULL );

	pFnGetServerPos->FunctionFlags |= 0x400;

	return GetServerPos_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.StopPhatSim
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventStopPhatSim ( )
{
	static UFunction* pFnStopPhatSim = NULL;

	if ( ! pFnStopPhatSim )
		pFnStopPhatSim = (UFunction*) UObject::GObjObjects()->Data[ 49739 ];

	ANowAtlasAvatarAiMount_eventStopPhatSim_Parms StopPhatSim_Parms;

	this->ProcessEvent ( pFnStopPhatSim, &StopPhatSim_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.StartPhatSim
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventStartPhatSim ( )
{
	static UFunction* pFnStartPhatSim = NULL;

	if ( ! pFnStartPhatSim )
		pFnStartPhatSim = (UFunction*) UObject::GObjObjects()->Data[ 49738 ];

	ANowAtlasAvatarAiMount_eventStartPhatSim_Parms StartPhatSim_Parms;

	this->ProcessEvent ( pFnStartPhatSim, &StartPhatSim_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.SetHasPhysAnimation
// [0x00020002] 
// Parameters infos:
// unsigned long                  NewValue                       ( CPF_Parm )

void ANowAtlasAvatarAiMount::SetHasPhysAnimation ( unsigned long NewValue )
{
	static UFunction* pFnSetHasPhysAnimation = NULL;

	if ( ! pFnSetHasPhysAnimation )
		pFnSetHasPhysAnimation = (UFunction*) UObject::GObjObjects()->Data[ 49736 ];

	ANowAtlasAvatarAiMount_execSetHasPhysAnimation_Parms SetHasPhysAnimation_Parms;
	SetHasPhysAnimation_Parms.NewValue = NewValue;

	this->ProcessEvent ( pFnSetHasPhysAnimation, &SetHasPhysAnimation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.GetNowPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowAtlasAvatarAiMount::eventGetNowPC ( )
{
	static UFunction* pFnGetNowPC = NULL;

	if ( ! pFnGetNowPC )
		pFnGetNowPC = (UFunction*) UObject::GObjObjects()->Data[ 49734 ];

	ANowAtlasAvatarAiMount_eventGetNowPC_Parms GetNowPC_Parms;

	this->ProcessEvent ( pFnGetNowPC, &GetNowPC_Parms, NULL );

	return GetNowPC_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.StopsProjectile
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AProjectile*             P                              ( CPF_Parm )

bool ANowAtlasAvatarAiMount::StopsProjectile ( class AProjectile* P )
{
	static UFunction* pFnStopsProjectile = NULL;

	if ( ! pFnStopsProjectile )
		pFnStopsProjectile = (UFunction*) UObject::GObjObjects()->Data[ 49731 ];

	ANowAtlasAvatarAiMount_execStopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;

	this->ProcessEvent ( pFnStopsProjectile, &StopsProjectile_Parms, NULL );

	return StopsProjectile_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.IsCombatTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiMount::IsCombatTarget ( )
{
	static UFunction* pFnIsCombatTarget = NULL;

	if ( ! pFnIsCombatTarget )
		pFnIsCombatTarget = (UFunction*) UObject::GObjObjects()->Data[ 49729 ];

	ANowAtlasAvatarAiMount_execIsCombatTarget_Parms IsCombatTarget_Parms;

	this->ProcessEvent ( pFnIsCombatTarget, &IsCombatTarget_Parms, NULL );

	return IsCombatTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.GetAnimNodePointers
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// int                            WhatType                       ( CPF_Parm )
// class UAnimNodePlayCustomAnim* AnimNode                       ( CPF_Parm | CPF_OutParm )
// class UAnimNodeSequence*       AnimSeq                        ( CPF_Parm | CPF_OutParm )

void ANowAtlasAvatarAiMount::eventGetAnimNodePointers ( int WhatType, class UAnimNodePlayCustomAnim** AnimNode, class UAnimNodeSequence** AnimSeq )
{
	static UFunction* pFnGetAnimNodePointers = NULL;

	if ( ! pFnGetAnimNodePointers )
		pFnGetAnimNodePointers = (UFunction*) UObject::GObjObjects()->Data[ 49725 ];

	ANowAtlasAvatarAiMount_eventGetAnimNodePointers_Parms GetAnimNodePointers_Parms;
	GetAnimNodePointers_Parms.WhatType = WhatType;

	this->ProcessEvent ( pFnGetAnimNodePointers, &GetAnimNodePointers_Parms, NULL );

	if ( AnimNode )
		*AnimNode = GetAnimNodePointers_Parms.AnimNode;

	if ( AnimSeq )
		*AnimSeq = GetAnimNodePointers_Parms.AnimSeq;
};

// Function NowGame.NowAtlasAvatarAiMount.ResetMinorAddAnimation
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiMount::ResetMinorAddAnimation ( )
{
	static UFunction* pFnResetMinorAddAnimation = NULL;

	if ( ! pFnResetMinorAddAnimation )
		pFnResetMinorAddAnimation = (UFunction*) UObject::GObjObjects()->Data[ 49723 ];

	ANowAtlasAvatarAiMount_execResetMinorAddAnimation_Parms ResetMinorAddAnimation_Parms;

	this->ProcessEvent ( pFnResetMinorAddAnimation, &ResetMinorAddAnimation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.PlayMinorAddAnimation
// [0x00020002] 
// Parameters infos:
// struct FName                   WhatAnim                       ( CPF_Parm )
// unsigned long                  bOverride                      ( CPF_Parm )
// float                          Time                           ( CPF_Parm )

void ANowAtlasAvatarAiMount::PlayMinorAddAnimation ( struct FName WhatAnim, unsigned long bOverride, float Time )
{
	static UFunction* pFnPlayMinorAddAnimation = NULL;

	if ( ! pFnPlayMinorAddAnimation )
		pFnPlayMinorAddAnimation = (UFunction*) UObject::GObjObjects()->Data[ 49718 ];

	ANowAtlasAvatarAiMount_execPlayMinorAddAnimation_Parms PlayMinorAddAnimation_Parms;
	memcpy ( &PlayMinorAddAnimation_Parms.WhatAnim, &WhatAnim, 0x8 );
	PlayMinorAddAnimation_Parms.bOverride = bOverride;
	PlayMinorAddAnimation_Parms.Time = Time;

	this->ProcessEvent ( pFnPlayMinorAddAnimation, &PlayMinorAddAnimation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.ManToMountAddOff
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiMount::ManToMountAddOff ( )
{
	static UFunction* pFnManToMountAddOff = NULL;

	if ( ! pFnManToMountAddOff )
		pFnManToMountAddOff = (UFunction*) UObject::GObjObjects()->Data[ 49717 ];

	ANowAtlasAvatarAiMount_execManToMountAddOff_Parms ManToMountAddOff_Parms;

	this->ProcessEvent ( pFnManToMountAddOff, &ManToMountAddOff_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.ManToMountAddOn
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void ANowAtlasAvatarAiMount::ManToMountAddOn ( int iIndex )
{
	static UFunction* pFnManToMountAddOn = NULL;

	if ( ! pFnManToMountAddOn )
		pFnManToMountAddOn = (UFunction*) UObject::GObjObjects()->Data[ 49715 ];

	ANowAtlasAvatarAiMount_execManToMountAddOn_Parms ManToMountAddOn_Parms;
	ManToMountAddOn_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnManToMountAddOn, &ManToMountAddOn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.Rear
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiMount::Rear ( )
{
	static UFunction* pFnRear = NULL;

	if ( ! pFnRear )
		pFnRear = (UFunction*) UObject::GObjObjects()->Data[ 49714 ];

	ANowAtlasAvatarAiMount_execRear_Parms Rear_Parms;

	this->ProcessEvent ( pFnRear, &Rear_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.GetMinSpeed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatarAiMount::eventGetMinSpeed ( )
{
	static UFunction* pFnGetMinSpeed = NULL;

	if ( ! pFnGetMinSpeed )
		pFnGetMinSpeed = (UFunction*) UObject::GObjObjects()->Data[ 49712 ];

	ANowAtlasAvatarAiMount_eventGetMinSpeed_Parms GetMinSpeed_Parms;

	this->ProcessEvent ( pFnGetMinSpeed, &GetMinSpeed_Parms, NULL );

	return GetMinSpeed_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.GetMaxSpeed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatarAiMount::eventGetMaxSpeed ( )
{
	static UFunction* pFnGetMaxSpeed = NULL;

	if ( ! pFnGetMaxSpeed )
		pFnGetMaxSpeed = (UFunction*) UObject::GObjObjects()->Data[ 49710 ];

	ANowAtlasAvatarAiMount_eventGetMaxSpeed_Parms GetMaxSpeed_Parms;

	this->ProcessEvent ( pFnGetMaxSpeed, &GetMaxSpeed_Parms, NULL );

	return GetMaxSpeed_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.SpawnProjectileEffect
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventSpawnProjectileEffect ( )
{
	static UFunction* pFnSpawnProjectileEffect = NULL;

	if ( ! pFnSpawnProjectileEffect )
		pFnSpawnProjectileEffect = (UFunction*) UObject::GObjObjects()->Data[ 49709 ];

	ANowAtlasAvatarAiMount_eventSpawnProjectileEffect_Parms SpawnProjectileEffect_Parms;

	this->ProcessEvent ( pFnSpawnProjectileEffect, &SpawnProjectileEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.RemoveSpellEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventRemoveSpellEffect ( )
{
	static UFunction* pFnRemoveSpellEffect = NULL;

	if ( ! pFnRemoveSpellEffect )
		pFnRemoveSpellEffect = (UFunction*) UObject::GObjObjects()->Data[ 49707 ];

	ANowAtlasAvatarAiMount_eventRemoveSpellEffect_Parms RemoveSpellEffect_Parms;

	this->ProcessEvent ( pFnRemoveSpellEffect, &RemoveSpellEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.SpawnReleaseSpellEffect
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  selfTarget                     ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiMount::eventSpawnReleaseSpellEffect ( unsigned long selfTarget )
{
	static UFunction* pFnSpawnReleaseSpellEffect = NULL;

	if ( ! pFnSpawnReleaseSpellEffect )
		pFnSpawnReleaseSpellEffect = (UFunction*) UObject::GObjObjects()->Data[ 49705 ];

	ANowAtlasAvatarAiMount_eventSpawnReleaseSpellEffect_Parms SpawnReleaseSpellEffect_Parms;
	SpawnReleaseSpellEffect_Parms.selfTarget = selfTarget;

	this->ProcessEvent ( pFnSpawnReleaseSpellEffect, &SpawnReleaseSpellEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.MagicFizzle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventMagicFizzle ( )
{
	static UFunction* pFnMagicFizzle = NULL;

	if ( ! pFnMagicFizzle )
		pFnMagicFizzle = (UFunction*) UObject::GObjObjects()->Data[ 49704 ];

	ANowAtlasAvatarAiMount_eventMagicFizzle_Parms MagicFizzle_Parms;

	this->ProcessEvent ( pFnMagicFizzle, &MagicFizzle_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.MagicSelfRelease
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventMagicSelfRelease ( )
{
	static UFunction* pFnMagicSelfRelease = NULL;

	if ( ! pFnMagicSelfRelease )
		pFnMagicSelfRelease = (UFunction*) UObject::GObjObjects()->Data[ 49703 ];

	ANowAtlasAvatarAiMount_eventMagicSelfRelease_Parms MagicSelfRelease_Parms;

	this->ProcessEvent ( pFnMagicSelfRelease, &MagicSelfRelease_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.MagicRelease
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventMagicRelease ( )
{
	static UFunction* pFnMagicRelease = NULL;

	if ( ! pFnMagicRelease )
		pFnMagicRelease = (UFunction*) UObject::GObjObjects()->Data[ 49702 ];

	ANowAtlasAvatarAiMount_eventMagicRelease_Parms MagicRelease_Parms;

	this->ProcessEvent ( pFnMagicRelease, &MagicRelease_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.PlayIndexedParticleEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UAnimNotify_PlayIndexedParticleEffect* AnimNotifyData                 ( CPF_Const | CPF_Parm )

void ANowAtlasAvatarAiMount::eventPlayIndexedParticleEffect ( class UAnimNotify_PlayIndexedParticleEffect* AnimNotifyData )
{
	static UFunction* pFnPlayIndexedParticleEffect = NULL;

	if ( ! pFnPlayIndexedParticleEffect )
		pFnPlayIndexedParticleEffect = (UFunction*) UObject::GObjObjects()->Data[ 49700 ];

	ANowAtlasAvatarAiMount_eventPlayIndexedParticleEffect_Parms PlayIndexedParticleEffect_Parms;
	PlayIndexedParticleEffect_Parms.AnimNotifyData = AnimNotifyData;

	this->ProcessEvent ( pFnPlayIndexedParticleEffect, &PlayIndexedParticleEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.DriverFellOff
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPawn*                OldDriver                      ( CPF_Parm )

void ANowAtlasAvatarAiMount::eventDriverFellOff ( class ANowPawn* OldDriver )
{
	static UFunction* pFnDriverFellOff = NULL;

	if ( ! pFnDriverFellOff )
		pFnDriverFellOff = (UFunction*) UObject::GObjObjects()->Data[ 49698 ];

	ANowAtlasAvatarAiMount_eventDriverFellOff_Parms DriverFellOff_Parms;
	DriverFellOff_Parms.OldDriver = OldDriver;

	this->ProcessEvent ( pFnDriverFellOff, &DriverFellOff_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.RemoveMe
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  Timer                          ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiMount::eventRemoveMe ( unsigned long Timer )
{
	static UFunction* pFnRemoveMe = NULL;

	if ( ! pFnRemoveMe )
		pFnRemoveMe = (UFunction*) UObject::GObjObjects()->Data[ 49695 ];

	ANowAtlasAvatarAiMount_eventRemoveMe_Parms RemoveMe_Parms;
	RemoveMe_Parms.Timer = Timer;

	this->ProcessEvent ( pFnRemoveMe, &RemoveMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiMount::eventSpawnCorpse ( float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = (UFunction*) UObject::GObjObjects()->Data[ 49691 ];

	ANowAtlasAvatarAiMount_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.SyncAnimSet
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bOnlyAnimSet                   ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiMount::eventSyncAnimSet ( unsigned long bOnlyAnimSet )
{
	static UFunction* pFnSyncAnimSet = NULL;

	if ( ! pFnSyncAnimSet )
		pFnSyncAnimSet = (UFunction*) UObject::GObjObjects()->Data[ 49685 ];

	ANowAtlasAvatarAiMount_eventSyncAnimSet_Parms SyncAnimSet_Parms;
	SyncAnimSet_Parms.bOnlyAnimSet = bOnlyAnimSet;

	this->ProcessEvent ( pFnSyncAnimSet, &SyncAnimSet_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.SyncAnimTree
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventSyncAnimTree ( )
{
	static UFunction* pFnSyncAnimTree = NULL;

	if ( ! pFnSyncAnimTree )
		pFnSyncAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 49684 ];

	ANowAtlasAvatarAiMount_eventSyncAnimTree_Parms SyncAnimTree_Parms;

	this->ProcessEvent ( pFnSyncAnimTree, &SyncAnimTree_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.GetDriver
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ANowAtlasAvatarAiMount::eventGetDriver ( )
{
	static UFunction* pFnGetDriver = NULL;

	if ( ! pFnGetDriver )
		pFnGetDriver = (UFunction*) UObject::GObjObjects()->Data[ 49682 ];

	ANowAtlasAvatarAiMount_eventGetDriver_Parms GetDriver_Parms;

	this->ProcessEvent ( pFnGetDriver, &GetDriver_Parms, NULL );

	return GetDriver_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.Bump
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowAtlasAvatarAiMount::eventBump ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitNormal )
{
	static UFunction* pFnBump = NULL;

	if ( ! pFnBump )
		pFnBump = (UFunction*) UObject::GObjObjects()->Data[ 49678 ];

	ANowAtlasAvatarAiMount_eventBump_Parms Bump_Parms;
	Bump_Parms.Other = Other;
	Bump_Parms.OtherComp = OtherComp;
	memcpy ( &Bump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnBump, &Bump_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.TookDamage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          HowMuchDamage                  ( CPF_Parm )
// float                          Total                          ( CPF_Parm )

void ANowAtlasAvatarAiMount::eventTookDamage ( float HowMuchDamage, float Total )
{
	static UFunction* pFnTookDamage = NULL;

	if ( ! pFnTookDamage )
		pFnTookDamage = (UFunction*) UObject::GObjObjects()->Data[ 49675 ];

	ANowAtlasAvatarAiMount_eventTookDamage_Parms TookDamage_Parms;
	TookDamage_Parms.HowMuchDamage = HowMuchDamage;
	TookDamage_Parms.Total = Total;

	this->ProcessEvent ( pFnTookDamage, &TookDamage_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.CheckLastUseTime
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiMount::eventCheckLastUseTime ( )
{
	static UFunction* pFnCheckLastUseTime = NULL;

	if ( ! pFnCheckLastUseTime )
		pFnCheckLastUseTime = (UFunction*) UObject::GObjObjects()->Data[ 49672 ];

	ANowAtlasAvatarAiMount_eventCheckLastUseTime_Parms CheckLastUseTime_Parms;

	this->ProcessEvent ( pFnCheckLastUseTime, &CheckLastUseTime_Parms, NULL );

	return CheckLastUseTime_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.WaitForRemount
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventWaitForRemount ( )
{
	static UFunction* pFnWaitForRemount = NULL;

	if ( ! pFnWaitForRemount )
		pFnWaitForRemount = (UFunction*) UObject::GObjObjects()->Data[ 49671 ];

	ANowAtlasAvatarAiMount_eventWaitForRemount_Parms WaitForRemount_Parms;

	this->ProcessEvent ( pFnWaitForRemount, &WaitForRemount_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.PlayClientThrowOffAnimation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventPlayClientThrowOffAnimation ( )
{
	static UFunction* pFnPlayClientThrowOffAnimation = NULL;

	if ( ! pFnPlayClientThrowOffAnimation )
		pFnPlayClientThrowOffAnimation = (UFunction*) UObject::GObjObjects()->Data[ 49670 ];

	ANowAtlasAvatarAiMount_eventPlayClientThrowOffAnimation_Parms PlayClientThrowOffAnimation_Parms;

	this->ProcessEvent ( pFnPlayClientThrowOffAnimation, &PlayClientThrowOffAnimation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.debugLog
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 whatLog                        ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarAiMount::eventdebugLog ( struct FString whatLog )
{
	static UFunction* pFndebugLog = NULL;

	if ( ! pFndebugLog )
		pFndebugLog = (UFunction*) UObject::GObjObjects()->Data[ 49668 ];

	ANowAtlasAvatarAiMount_eventdebugLog_Parms debugLog_Parms;
	memcpy ( &debugLog_Parms.whatLog, &whatLog, 0xC );

	this->ProcessEvent ( pFndebugLog, &debugLog_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.MountDied
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventMountDied ( )
{
	static UFunction* pFnMountDied = NULL;

	if ( ! pFnMountDied )
		pFnMountDied = (UFunction*) UObject::GObjObjects()->Data[ 49667 ];

	ANowAtlasAvatarAiMount_eventMountDied_Parms MountDied_Parms;

	this->ProcessEvent ( pFnMountDied, &MountDied_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.CheckPlayerOverweight
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowPawn*                WhatPawn                       ( CPF_Parm )

bool ANowAtlasAvatarAiMount::eventCheckPlayerOverweight ( class ANowPawn* WhatPawn )
{
	static UFunction* pFnCheckPlayerOverweight = NULL;

	if ( ! pFnCheckPlayerOverweight )
		pFnCheckPlayerOverweight = (UFunction*) UObject::GObjObjects()->Data[ 49662 ];

	ANowAtlasAvatarAiMount_eventCheckPlayerOverweight_Parms CheckPlayerOverweight_Parms;
	CheckPlayerOverweight_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnCheckPlayerOverweight, &CheckPlayerOverweight_Parms, NULL );

	return CheckPlayerOverweight_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.DoMountAnimations
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bMountOn                       ( CPF_Parm )
// unsigned long                  bIgnoreAnim                    ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiMount::eventDoMountAnimations ( unsigned long bMountOn, unsigned long bIgnoreAnim )
{
	static UFunction* pFnDoMountAnimations = NULL;

	if ( ! pFnDoMountAnimations )
		pFnDoMountAnimations = (UFunction*) UObject::GObjObjects()->Data[ 49654 ];

	ANowAtlasAvatarAiMount_eventDoMountAnimations_Parms DoMountAnimations_Parms;
	DoMountAnimations_Parms.bMountOn = bMountOn;
	DoMountAnimations_Parms.bIgnoreAnim = bIgnoreAnim;

	this->ProcessEvent ( pFnDoMountAnimations, &DoMountAnimations_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.UpdateAimOffset
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventUpdateAimOffset ( )
{
	static UFunction* pFnUpdateAimOffset = NULL;

	if ( ! pFnUpdateAimOffset )
		pFnUpdateAimOffset = (UFunction*) UObject::GObjObjects()->Data[ 49653 ];

	ANowAtlasAvatarAiMount_eventUpdateAimOffset_Parms UpdateAimOffset_Parms;

	this->ProcessEvent ( pFnUpdateAimOffset, &UpdateAimOffset_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.UpdateSpeeds
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventUpdateSpeeds ( )
{
	static UFunction* pFnUpdateSpeeds = NULL;

	if ( ! pFnUpdateSpeeds )
		pFnUpdateSpeeds = (UFunction*) UObject::GObjObjects()->Data[ 49651 ];

	ANowAtlasAvatarAiMount_eventUpdateSpeeds_Parms UpdateSpeeds_Parms;

	this->ProcessEvent ( pFnUpdateSpeeds, &UpdateSpeeds_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.Tick
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAiMount::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 49649 ];

	ANowAtlasAvatarAiMount_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.SetThrottle
// [0x00020002] 
// Parameters infos:
// int                            NewThrottle                    ( CPF_Parm )

void ANowAtlasAvatarAiMount::SetThrottle ( int NewThrottle )
{
	static UFunction* pFnSetThrottle = NULL;

	if ( ! pFnSetThrottle )
		pFnSetThrottle = (UFunction*) UObject::GObjObjects()->Data[ 49647 ];

	ANowAtlasAvatarAiMount_execSetThrottle_Parms SetThrottle_Parms;
	SetThrottle_Parms.NewThrottle = NewThrottle;

	this->ProcessEvent ( pFnSetThrottle, &SetThrottle_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.ForceUnHide
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiMount::ForceUnHide ( )
{
	static UFunction* pFnForceUnHide = NULL;

	if ( ! pFnForceUnHide )
		pFnForceUnHide = (UFunction*) UObject::GObjObjects()->Data[ 49646 ];

	ANowAtlasAvatarAiMount_execForceUnHide_Parms ForceUnHide_Parms;

	this->ProcessEvent ( pFnForceUnHide, &ForceUnHide_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.CheckForShow
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiMount::CheckForShow ( )
{
	static UFunction* pFnCheckForShow = NULL;

	if ( ! pFnCheckForShow )
		pFnCheckForShow = (UFunction*) UObject::GObjObjects()->Data[ 49643 ];

	ANowAtlasAvatarAiMount_execCheckForShow_Parms CheckForShow_Parms;

	this->ProcessEvent ( pFnCheckForShow, &CheckForShow_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.CheckForceRemove
// [0x00020000] 
// Parameters infos:

void ANowAtlasAvatarAiMount::CheckForceRemove ( )
{
	static UFunction* pFnCheckForceRemove = NULL;

	if ( ! pFnCheckForceRemove )
		pFnCheckForceRemove = (UFunction*) UObject::GObjObjects()->Data[ 49642 ];

	ANowAtlasAvatarAiMount_execCheckForceRemove_Parms CheckForceRemove_Parms;

	this->ProcessEvent ( pFnCheckForceRemove, &CheckForceRemove_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.MoveToGround
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventMoveToGround ( )
{
	static UFunction* pFnMoveToGround = NULL;

	if ( ! pFnMoveToGround )
		pFnMoveToGround = (UFunction*) UObject::GObjObjects()->Data[ 49634 ];

	ANowAtlasAvatarAiMount_eventMoveToGround_Parms MoveToGround_Parms;

	this->ProcessEvent ( pFnMoveToGround, &MoveToGround_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.CreateAndSetMountBrain
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventCreateAndSetMountBrain ( )
{
	static UFunction* pFnCreateAndSetMountBrain = NULL;

	if ( ! pFnCreateAndSetMountBrain )
		pFnCreateAndSetMountBrain = (UFunction*) UObject::GObjObjects()->Data[ 49633 ];

	ANowAtlasAvatarAiMount_eventCreateAndSetMountBrain_Parms CreateAndSetMountBrain_Parms;

	this->ProcessEvent ( pFnCreateAndSetMountBrain, &CreateAndSetMountBrain_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.DoPlayExtraSound
// [0x00020002] 
// Parameters infos:
// class USoundCue*               WhatSound                      ( CPF_Parm )

void ANowAtlasAvatarAiMount::DoPlayExtraSound ( class USoundCue* WhatSound )
{
	static UFunction* pFnDoPlayExtraSound = NULL;

	if ( ! pFnDoPlayExtraSound )
		pFnDoPlayExtraSound = (UFunction*) UObject::GObjObjects()->Data[ 49631 ];

	ANowAtlasAvatarAiMount_execDoPlayExtraSound_Parms DoPlayExtraSound_Parms;
	DoPlayExtraSound_Parms.WhatSound = WhatSound;

	this->ProcessEvent ( pFnDoPlayExtraSound, &DoPlayExtraSound_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.EquipmentMove
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventEquipmentMove ( )
{
	static UFunction* pFnEquipmentMove = NULL;

	if ( ! pFnEquipmentMove )
		pFnEquipmentMove = (UFunction*) UObject::GObjObjects()->Data[ 49630 ];

	ANowAtlasAvatarAiMount_eventEquipmentMove_Parms EquipmentMove_Parms;

	this->ProcessEvent ( pFnEquipmentMove, &EquipmentMove_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.EquipmentIdle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventEquipmentIdle ( )
{
	static UFunction* pFnEquipmentIdle = NULL;

	if ( ! pFnEquipmentIdle )
		pFnEquipmentIdle = (UFunction*) UObject::GObjObjects()->Data[ 49629 ];

	ANowAtlasAvatarAiMount_eventEquipmentIdle_Parms EquipmentIdle_Parms;

	this->ProcessEvent ( pFnEquipmentIdle, &EquipmentIdle_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.EquipmentSaddle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventEquipmentSaddle ( )
{
	static UFunction* pFnEquipmentSaddle = NULL;

	if ( ! pFnEquipmentSaddle )
		pFnEquipmentSaddle = (UFunction*) UObject::GObjObjects()->Data[ 49628 ];

	ANowAtlasAvatarAiMount_eventEquipmentSaddle_Parms EquipmentSaddle_Parms;

	this->ProcessEvent ( pFnEquipmentSaddle, &EquipmentSaddle_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.EquipmentMount2
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventEquipmentMount2 ( )
{
	static UFunction* pFnEquipmentMount2 = NULL;

	if ( ! pFnEquipmentMount2 )
		pFnEquipmentMount2 = (UFunction*) UObject::GObjObjects()->Data[ 49627 ];

	ANowAtlasAvatarAiMount_eventEquipmentMount2_Parms EquipmentMount2_Parms;

	this->ProcessEvent ( pFnEquipmentMount2, &EquipmentMount2_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.EquipmentMount1
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventEquipmentMount1 ( )
{
	static UFunction* pFnEquipmentMount1 = NULL;

	if ( ! pFnEquipmentMount1 )
		pFnEquipmentMount1 = (UFunction*) UObject::GObjObjects()->Data[ 49626 ];

	ANowAtlasAvatarAiMount_eventEquipmentMount1_Parms EquipmentMount1_Parms;

	this->ProcessEvent ( pFnEquipmentMount1, &EquipmentMount1_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.DoFootNotify
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            Foot                           ( CPF_Parm )
// float                          FootForce                      ( CPF_Parm )

void ANowAtlasAvatarAiMount::eventDoFootNotify ( int Foot, float FootForce )
{
	static UFunction* pFnDoFootNotify = NULL;

	if ( ! pFnDoFootNotify )
		pFnDoFootNotify = (UFunction*) UObject::GObjObjects()->Data[ 49621 ];

	ANowAtlasAvatarAiMount_eventDoFootNotify_Parms DoFootNotify_Parms;
	DoFootNotify_Parms.Foot = Foot;
	DoFootNotify_Parms.FootForce = FootForce;

	this->ProcessEvent ( pFnDoFootNotify, &DoFootNotify_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.ReInitSockets
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventReInitSockets ( )
{
	static UFunction* pFnReInitSockets = NULL;

	if ( ! pFnReInitSockets )
		pFnReInitSockets = (UFunction*) UObject::GObjObjects()->Data[ 49619 ];

	ANowAtlasAvatarAiMount_eventReInitSockets_Parms ReInitSockets_Parms;

	this->ProcessEvent ( pFnReInitSockets, &ReInitSockets_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.SetTraceTime
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          NewLength                      ( CPF_Parm )
// float                          NewMiddle                      ( CPF_Parm )
// unsigned long                  bCombatMove                    ( CPF_Parm )

void ANowAtlasAvatarAiMount::eventSetTraceTime ( float NewLength, float NewMiddle, unsigned long bCombatMove )
{
	static UFunction* pFnSetTraceTime = NULL;

	if ( ! pFnSetTraceTime )
		pFnSetTraceTime = (UFunction*) UObject::GObjObjects()->Data[ 49615 ];

	ANowAtlasAvatarAiMount_eventSetTraceTime_Parms SetTraceTime_Parms;
	SetTraceTime_Parms.NewLength = NewLength;
	SetTraceTime_Parms.NewMiddle = NewMiddle;
	SetTraceTime_Parms.bCombatMove = bCombatMove;

	this->ProcessEvent ( pFnSetTraceTime, &SetTraceTime_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.CheckConnection
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiMount::CheckConnection ( )
{
	static UFunction* pFnCheckConnection = NULL;

	if ( ! pFnCheckConnection )
		pFnCheckConnection = (UFunction*) UObject::GObjObjects()->Data[ 49614 ];

	ANowAtlasAvatarAiMount_execCheckConnection_Parms CheckConnection_Parms;

	this->ProcessEvent ( pFnCheckConnection, &CheckConnection_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.AddMeToManager
// [0x00024800] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bForceGenerate                 ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiMount::eventAddMeToManager ( unsigned long bForceGenerate )
{
	static UFunction* pFnAddMeToManager = NULL;

	if ( ! pFnAddMeToManager )
		pFnAddMeToManager = (UFunction*) UObject::GObjObjects()->Data[ 49612 ];

	ANowAtlasAvatarAiMount_eventAddMeToManager_Parms AddMeToManager_Parms;
	AddMeToManager_Parms.bForceGenerate = bForceGenerate;

	this->ProcessEvent ( pFnAddMeToManager, &AddMeToManager_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.UpdateDamageMaterial
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMount::eventUpdateDamageMaterial ( )
{
	static UFunction* pFnUpdateDamageMaterial = NULL;

	if ( ! pFnUpdateDamageMaterial )
		pFnUpdateDamageMaterial = (UFunction*) UObject::GObjObjects()->Data[ 49608 ];

	ANowAtlasAvatarAiMount_eventUpdateDamageMaterial_Parms UpdateDamageMaterial_Parms;

	this->ProcessEvent ( pFnUpdateDamageMaterial, &UpdateDamageMaterial_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.CanJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiMount::CanJump ( )
{
	static UFunction* pFnCanJump = NULL;

	if ( ! pFnCanJump )
		pFnCanJump = (UFunction*) UObject::GObjObjects()->Data[ 49606 ];

	ANowAtlasAvatarAiMount_execCanJump_Parms CanJump_Parms;

	this->ProcessEvent ( pFnCanJump, &CanJump_Parms, NULL );

	return CanJump_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowAtlasAvatarAiMount::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 49605 ];

	ANowAtlasAvatarAiMount_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMount.HasItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiMount::HasItems ( )
{
	static UFunction* pFnHasItems = NULL;

	if ( ! pFnHasItems )
		pFnHasItems = (UFunction*) UObject::GObjObjects()->Data[ 49603 ];

	ANowAtlasAvatarAiMount_execHasItems_Parms HasItems_Parms;

	pFnHasItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasItems, &HasItems_Parms, NULL );

	pFnHasItems->FunctionFlags |= 0x400;

	return HasItems_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.GetAndCreateArmor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiMount::GetAndCreateArmor ( )
{
	static UFunction* pFnGetAndCreateArmor = NULL;

	if ( ! pFnGetAndCreateArmor )
		pFnGetAndCreateArmor = (UFunction*) UObject::GObjObjects()->Data[ 49602 ];

	ANowAtlasAvatarAiMount_execGetAndCreateArmor_Parms GetAndCreateArmor_Parms;

	pFnGetAndCreateArmor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateArmor, &GetAndCreateArmor_Parms, NULL );

	pFnGetAndCreateArmor->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMount.GetAndSetStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiMount::GetAndSetStats ( )
{
	static UFunction* pFnGetAndSetStats = NULL;

	if ( ! pFnGetAndSetStats )
		pFnGetAndSetStats = (UFunction*) UObject::GObjObjects()->Data[ 49601 ];

	ANowAtlasAvatarAiMount_execGetAndSetStats_Parms GetAndSetStats_Parms;

	pFnGetAndSetStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetStats, &GetAndSetStats_Parms, NULL );

	pFnGetAndSetStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMount.GetHealthMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiMount::GetHealthMax ( )
{
	static UFunction* pFnGetHealthMax = NULL;

	if ( ! pFnGetHealthMax )
		pFnGetHealthMax = (UFunction*) UObject::GObjObjects()->Data[ 49599 ];

	ANowAtlasAvatarAiMount_execGetHealthMax_Parms GetHealthMax_Parms;

	pFnGetHealthMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealthMax, &GetHealthMax_Parms, NULL );

	pFnGetHealthMax->FunctionFlags |= 0x400;

	return GetHealthMax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.GetHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiMount::GetHealth ( )
{
	static UFunction* pFnGetHealth = NULL;

	if ( ! pFnGetHealth )
		pFnGetHealth = (UFunction*) UObject::GObjObjects()->Data[ 49597 ];

	ANowAtlasAvatarAiMount_execGetHealth_Parms GetHealth_Parms;

	pFnGetHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealth, &GetHealth_Parms, NULL );

	pFnGetHealth->FunctionFlags |= 0x400;

	return GetHealth_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.GetLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiMount::GetLevel ( )
{
	static UFunction* pFnGetLevel = NULL;

	if ( ! pFnGetLevel )
		pFnGetLevel = (UFunction*) UObject::GObjObjects()->Data[ 49595 ];

	ANowAtlasAvatarAiMount_execGetLevel_Parms GetLevel_Parms;

	pFnGetLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLevel, &GetLevel_Parms, NULL );

	pFnGetLevel->FunctionFlags |= 0x400;

	return GetLevel_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.CreateRidingInstance
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiMount::CreateRidingInstance ( )
{
	static UFunction* pFnCreateRidingInstance = NULL;

	if ( ! pFnCreateRidingInstance )
		pFnCreateRidingInstance = (UFunction*) UObject::GObjObjects()->Data[ 49594 ];

	ANowAtlasAvatarAiMount_execCreateRidingInstance_Parms CreateRidingInstance_Parms;

	pFnCreateRidingInstance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateRidingInstance, &CreateRidingInstance_Parms, NULL );

	pFnCreateRidingInstance->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMount.CreateRidingInstanceFromString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sContentInfo                   ( CPF_Parm | CPF_NeedCtorLink )
// class ANowPawn*                pNewDriver                     ( CPF_Parm )

void ANowAtlasAvatarAiMount::CreateRidingInstanceFromString ( struct FString sContentInfo, class ANowPawn* pNewDriver )
{
	static UFunction* pFnCreateRidingInstanceFromString = NULL;

	if ( ! pFnCreateRidingInstanceFromString )
		pFnCreateRidingInstanceFromString = (UFunction*) UObject::GObjObjects()->Data[ 49591 ];

	ANowAtlasAvatarAiMount_execCreateRidingInstanceFromString_Parms CreateRidingInstanceFromString_Parms;
	memcpy ( &CreateRidingInstanceFromString_Parms.sContentInfo, &sContentInfo, 0xC );
	CreateRidingInstanceFromString_Parms.pNewDriver = pNewDriver;

	pFnCreateRidingInstanceFromString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateRidingInstanceFromString, &CreateRidingInstanceFromString_Parms, NULL );

	pFnCreateRidingInstanceFromString->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMount.TriggerFootNotify
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            FootIndex                      ( CPF_Parm )
// float                          FootForce                      ( CPF_Parm )

void ANowAtlasAvatarAiMount::TriggerFootNotify ( int FootIndex, float FootForce )
{
	static UFunction* pFnTriggerFootNotify = NULL;

	if ( ! pFnTriggerFootNotify )
		pFnTriggerFootNotify = (UFunction*) UObject::GObjObjects()->Data[ 49588 ];

	ANowAtlasAvatarAiMount_execTriggerFootNotify_Parms TriggerFootNotify_Parms;
	TriggerFootNotify_Parms.FootIndex = FootIndex;
	TriggerFootNotify_Parms.FootForce = FootForce;

	pFnTriggerFootNotify->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerFootNotify, &TriggerFootNotify_Parms, NULL );

	pFnTriggerFootNotify->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMount.GetStatString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiMount::GetStatString ( )
{
	static UFunction* pFnGetStatString = NULL;

	if ( ! pFnGetStatString )
		pFnGetStatString = (UFunction*) UObject::GObjObjects()->Data[ 49586 ];

	ANowAtlasAvatarAiMount_execGetStatString_Parms GetStatString_Parms;

	pFnGetStatString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatString, &GetStatString_Parms, NULL );

	pFnGetStatString->FunctionFlags |= 0x400;

	return GetStatString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.GetArmorString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiMount::GetArmorString ( )
{
	static UFunction* pFnGetArmorString = NULL;

	if ( ! pFnGetArmorString )
		pFnGetArmorString = (UFunction*) UObject::GObjObjects()->Data[ 49584 ];

	ANowAtlasAvatarAiMount_execGetArmorString_Parms GetArmorString_Parms;

	pFnGetArmorString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetArmorString, &GetArmorString_Parms, NULL );

	pFnGetArmorString->FunctionFlags |= 0x400;

	return GetArmorString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.GetBodyString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiMount::GetBodyString ( )
{
	static UFunction* pFnGetBodyString = NULL;

	if ( ! pFnGetBodyString )
		pFnGetBodyString = (UFunction*) UObject::GObjObjects()->Data[ 49582 ];

	ANowAtlasAvatarAiMount_execGetBodyString_Parms GetBodyString_Parms;

	pFnGetBodyString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBodyString, &GetBodyString_Parms, NULL );

	pFnGetBodyString->FunctionFlags |= 0x400;

	return GetBodyString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.GotServerConnection
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiMount::GotServerConnection ( )
{
	static UFunction* pFnGotServerConnection = NULL;

	if ( ! pFnGotServerConnection )
		pFnGotServerConnection = (UFunction*) UObject::GObjObjects()->Data[ 49580 ];

	ANowAtlasAvatarAiMount_execGotServerConnection_Parms GotServerConnection_Parms;

	pFnGotServerConnection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGotServerConnection, &GotServerConnection_Parms, NULL );

	pFnGotServerConnection->FunctionFlags |= 0x400;

	return GotServerConnection_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatarAiMount::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 49578 ];

	ANowAtlasAvatarAiMount_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMount.SetContentInfoFromString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ContentClassString             ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarAiMount::SetContentInfoFromString ( struct FString ContentClassString )
{
	static UFunction* pFnSetContentInfoFromString = NULL;

	if ( ! pFnSetContentInfoFromString )
		pFnSetContentInfoFromString = (UFunction*) UObject::GObjObjects()->Data[ 49576 ];

	ANowAtlasAvatarAiMount_execSetContentInfoFromString_Parms SetContentInfoFromString_Parms;
	memcpy ( &SetContentInfoFromString_Parms.ContentClassString, &ContentClassString, 0xC );

	pFnSetContentInfoFromString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfoFromString, &SetContentInfoFromString_Parms, NULL );

	pFnSetContentInfoFromString->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMount.RemoveDriver
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiMount::RemoveDriver ( )
{
	static UFunction* pFnRemoveDriver = NULL;

	if ( ! pFnRemoveDriver )
		pFnRemoveDriver = (UFunction*) UObject::GObjObjects()->Data[ 49574 ];

	ANowAtlasAvatarAiMount_execRemoveDriver_Parms RemoveDriver_Parms;

	pFnRemoveDriver->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveDriver, &RemoveDriver_Parms, NULL );

	pFnRemoveDriver->FunctionFlags |= 0x400;

	return RemoveDriver_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.UpdateCurrentSkillLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiMount::UpdateCurrentSkillLevel ( )
{
	static UFunction* pFnUpdateCurrentSkillLevel = NULL;

	if ( ! pFnUpdateCurrentSkillLevel )
		pFnUpdateCurrentSkillLevel = (UFunction*) UObject::GObjObjects()->Data[ 49572 ];

	ANowAtlasAvatarAiMount_execUpdateCurrentSkillLevel_Parms UpdateCurrentSkillLevel_Parms;

	pFnUpdateCurrentSkillLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCurrentSkillLevel, &UpdateCurrentSkillLevel_Parms, NULL );

	pFnUpdateCurrentSkillLevel->FunctionFlags |= 0x400;

	return UpdateCurrentSkillLevel_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.TeleportPosUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiMount::TeleportPosUpdate ( )
{
	static UFunction* pFnTeleportPosUpdate = NULL;

	if ( ! pFnTeleportPosUpdate )
		pFnTeleportPosUpdate = (UFunction*) UObject::GObjObjects()->Data[ 49571 ];

	ANowAtlasAvatarAiMount_execTeleportPosUpdate_Parms TeleportPosUpdate_Parms;

	pFnTeleportPosUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTeleportPosUpdate, &TeleportPosUpdate_Parms, NULL );

	pFnTeleportPosUpdate->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMount.DriverIsKnockedDown
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiMount::DriverIsKnockedDown ( )
{
	static UFunction* pFnDriverIsKnockedDown = NULL;

	if ( ! pFnDriverIsKnockedDown )
		pFnDriverIsKnockedDown = (UFunction*) UObject::GObjObjects()->Data[ 49569 ];

	ANowAtlasAvatarAiMount_execDriverIsKnockedDown_Parms DriverIsKnockedDown_Parms;

	pFnDriverIsKnockedDown->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDriverIsKnockedDown, &DriverIsKnockedDown_Parms, NULL );

	pFnDriverIsKnockedDown->FunctionFlags |= 0x400;

	return DriverIsKnockedDown_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiMount::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = (UFunction*) UObject::GObjObjects()->Data[ 49567 ];

	ANowAtlasAvatarAiMount_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiMount::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 49564 ];

	ANowAtlasAvatarAiMount_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.GetItemMods
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiMount::GetItemMods ( )
{
	static UFunction* pFnGetItemMods = NULL;

	if ( ! pFnGetItemMods )
		pFnGetItemMods = (UFunction*) UObject::GObjObjects()->Data[ 49563 ];

	ANowAtlasAvatarAiMount_execGetItemMods_Parms GetItemMods_Parms;

	pFnGetItemMods->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemMods, &GetItemMods_Parms, NULL );

	pFnGetItemMods->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMount.UpdateStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiMount::UpdateStats ( )
{
	static UFunction* pFnUpdateStats = NULL;

	if ( ! pFnUpdateStats )
		pFnUpdateStats = (UFunction*) UObject::GObjObjects()->Data[ 49562 ];

	ANowAtlasAvatarAiMount_execUpdateStats_Parms UpdateStats_Parms;

	pFnUpdateStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateStats, &UpdateStats_Parms, NULL );

	pFnUpdateStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMount.GetNowPlayerController
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowAtlasAvatarAiMount::GetNowPlayerController ( )
{
	static UFunction* pFnGetNowPlayerController = NULL;

	if ( ! pFnGetNowPlayerController )
		pFnGetNowPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 49560 ];

	ANowAtlasAvatarAiMount_execGetNowPlayerController_Parms GetNowPlayerController_Parms;

	pFnGetNowPlayerController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNowPlayerController, &GetNowPlayerController_Parms, NULL );

	pFnGetNowPlayerController->FunctionFlags |= 0x400;

	return GetNowPlayerController_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.ResetThrottle
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiMount::ResetThrottle ( )
{
	static UFunction* pFnResetThrottle = NULL;

	if ( ! pFnResetThrottle )
		pFnResetThrottle = (UFunction*) UObject::GObjObjects()->Data[ 49559 ];

	ANowAtlasAvatarAiMount_execResetThrottle_Parms ResetThrottle_Parms;

	pFnResetThrottle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetThrottle, &ResetThrottle_Parms, NULL );

	pFnResetThrottle->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMount.ResetAi
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiMount::ResetAi ( )
{
	static UFunction* pFnResetAi = NULL;

	if ( ! pFnResetAi )
		pFnResetAi = (UFunction*) UObject::GObjObjects()->Data[ 49558 ];

	ANowAtlasAvatarAiMount_execResetAi_Parms ResetAi_Parms;

	pFnResetAi->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetAi, &ResetAi_Parms, NULL );

	pFnResetAi->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMount.DetachDriver
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiMount::DetachDriver ( )
{
	static UFunction* pFnDetachDriver = NULL;

	if ( ! pFnDetachDriver )
		pFnDetachDriver = (UFunction*) UObject::GObjObjects()->Data[ 49556 ];

	ANowAtlasAvatarAiMount_execDetachDriver_Parms DetachDriver_Parms;

	pFnDetachDriver->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDetachDriver, &DetachDriver_Parms, NULL );

	pFnDetachDriver->FunctionFlags |= 0x400;

	return DetachDriver_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.AttachDriver
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  WhatDriver                     ( CPF_Parm )
// unsigned long                  bInit                          ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiMount::AttachDriver ( class AActor* WhatDriver, unsigned long bInit )
{
	static UFunction* pFnAttachDriver = NULL;

	if ( ! pFnAttachDriver )
		pFnAttachDriver = (UFunction*) UObject::GObjObjects()->Data[ 49552 ];

	ANowAtlasAvatarAiMount_execAttachDriver_Parms AttachDriver_Parms;
	AttachDriver_Parms.WhatDriver = WhatDriver;
	AttachDriver_Parms.bInit = bInit;

	pFnAttachDriver->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAttachDriver, &AttachDriver_Parms, NULL );

	pFnAttachDriver->FunctionFlags |= 0x400;

	return AttachDriver_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMount.GetDisplayName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiMount::GetDisplayName ( )
{
	static UFunction* pFnGetDisplayName = NULL;

	if ( ! pFnGetDisplayName )
		pFnGetDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 49550 ];

	ANowAtlasAvatarAiMount_execGetDisplayName_Parms GetDisplayName_Parms;

	pFnGetDisplayName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayName, &GetDisplayName_Parms, NULL );

	pFnGetDisplayName->FunctionFlags |= 0x400;

	return GetDisplayName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.CreateAndSetMountBrain
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMountDynamic::eventCreateAndSetMountBrain ( )
{
	static UFunction* pFnCreateAndSetMountBrain = NULL;

	if ( ! pFnCreateAndSetMountBrain )
		pFnCreateAndSetMountBrain = (UFunction*) UObject::GObjObjects()->Data[ 49842 ];

	ANowAtlasAvatarAiMountDynamic_eventCreateAndSetMountBrain_Parms CreateAndSetMountBrain_Parms;

	this->ProcessEvent ( pFnCreateAndSetMountBrain, &CreateAndSetMountBrain_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetNowPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowAtlasAvatarAiMountDynamic::eventGetNowPC ( )
{
	static UFunction* pFnGetNowPC = NULL;

	if ( ! pFnGetNowPC )
		pFnGetNowPC = (UFunction*) UObject::GObjObjects()->Data[ 49840 ];

	ANowAtlasAvatarAiMountDynamic_eventGetNowPC_Parms GetNowPC_Parms;

	this->ProcessEvent ( pFnGetNowPC, &GetNowPC_Parms, NULL );

	return GetNowPC_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.StopPhatSim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMountDynamic::eventStopPhatSim ( )
{
	static UFunction* pFnStopPhatSim = NULL;

	if ( ! pFnStopPhatSim )
		pFnStopPhatSim = (UFunction*) UObject::GObjObjects()->Data[ 49839 ];

	ANowAtlasAvatarAiMountDynamic_eventStopPhatSim_Parms StopPhatSim_Parms;

	this->ProcessEvent ( pFnStopPhatSim, &StopPhatSim_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.StartPhatSim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMountDynamic::eventStartPhatSim ( )
{
	static UFunction* pFnStartPhatSim = NULL;

	if ( ! pFnStartPhatSim )
		pFnStartPhatSim = (UFunction*) UObject::GObjObjects()->Data[ 49838 ];

	ANowAtlasAvatarAiMountDynamic_eventStartPhatSim_Parms StartPhatSim_Parms;

	this->ProcessEvent ( pFnStartPhatSim, &StartPhatSim_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.SetFeatureParam
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            FeatureIndex                   ( CPF_Parm )
// int                            ByteValue                      ( CPF_Parm )
// float                          Strength                       ( CPF_Parm )
// unsigned long                  bHair                          ( CPF_Parm )
// class UTexture*                NewTexture                     ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 NewColor                       ( CPF_OptionalParm | CPF_Parm )
// class UMaterialInstance*       NewMaterial                    ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiMountDynamic::eventSetFeatureParam ( int FeatureIndex, int ByteValue, float Strength, unsigned long bHair, class UTexture* NewTexture, struct FVector NewColor, class UMaterialInstance* NewMaterial )
{
	static UFunction* pFnSetFeatureParam = NULL;

	if ( ! pFnSetFeatureParam )
		pFnSetFeatureParam = (UFunction*) UObject::GObjObjects()->Data[ 49828 ];

	ANowAtlasAvatarAiMountDynamic_eventSetFeatureParam_Parms SetFeatureParam_Parms;
	SetFeatureParam_Parms.FeatureIndex = FeatureIndex;
	SetFeatureParam_Parms.ByteValue = ByteValue;
	SetFeatureParam_Parms.Strength = Strength;
	SetFeatureParam_Parms.bHair = bHair;
	SetFeatureParam_Parms.NewTexture = NewTexture;
	memcpy ( &SetFeatureParam_Parms.NewColor, &NewColor, 0xC );
	SetFeatureParam_Parms.NewMaterial = NewMaterial;

	this->ProcessEvent ( pFnSetFeatureParam, &SetFeatureParam_Parms, NULL );

	return SetFeatureParam_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.SetBoneParam
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            FeatureIndex                   ( CPF_Parm )
// int                            ByteValue                      ( CPF_Parm )

void ANowAtlasAvatarAiMountDynamic::eventSetBoneParam ( int FeatureIndex, int ByteValue )
{
	static UFunction* pFnSetBoneParam = NULL;

	if ( ! pFnSetBoneParam )
		pFnSetBoneParam = (UFunction*) UObject::GObjObjects()->Data[ 49823 ];

	ANowAtlasAvatarAiMountDynamic_eventSetBoneParam_Parms SetBoneParam_Parms;
	SetBoneParam_Parms.FeatureIndex = FeatureIndex;
	SetBoneParam_Parms.ByteValue = ByteValue;

	this->ProcessEvent ( pFnSetBoneParam, &SetBoneParam_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.CacheDynamicFeatureBones
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiMountDynamic::eventCacheDynamicFeatureBones ( )
{
	static UFunction* pFnCacheDynamicFeatureBones = NULL;

	if ( ! pFnCacheDynamicFeatureBones )
		pFnCacheDynamicFeatureBones = (UFunction*) UObject::GObjObjects()->Data[ 49819 ];

	ANowAtlasAvatarAiMountDynamic_eventCacheDynamicFeatureBones_Parms CacheDynamicFeatureBones_Parms;

	this->ProcessEvent ( pFnCacheDynamicFeatureBones, &CacheDynamicFeatureBones_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.Tick
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAiMountDynamic::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 49817 ];

	ANowAtlasAvatarAiMountDynamic_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetInfo
// [0x00420002] 
// Parameters infos:
// TArray< struct FString >       sLogArray                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ANowAtlasAvatarAiMountDynamic::GetInfo ( TArray< struct FString >* sLogArray )
{
	static UFunction* pFnGetInfo = NULL;

	if ( ! pFnGetInfo )
		pFnGetInfo = (UFunction*) UObject::GObjObjects()->Data[ 49813 ];

	ANowAtlasAvatarAiMountDynamic_execGetInfo_Parms GetInfo_Parms;

	this->ProcessEvent ( pFnGetInfo, &GetInfo_Parms, NULL );

	if ( sLogArray )
		memcpy ( sLogArray, &GetInfo_Parms.sLogArray, 0xC );
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.AddMeToManager
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bForceGenerate                 ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiMountDynamic::eventAddMeToManager ( unsigned long bForceGenerate )
{
	static UFunction* pFnAddMeToManager = NULL;

	if ( ! pFnAddMeToManager )
		pFnAddMeToManager = (UFunction*) UObject::GObjObjects()->Data[ 49808 ];

	ANowAtlasAvatarAiMountDynamic_eventAddMeToManager_Parms AddMeToManager_Parms;
	AddMeToManager_Parms.bForceGenerate = bForceGenerate;

	this->ProcessEvent ( pFnAddMeToManager, &AddMeToManager_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetWei
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiMountDynamic::GetWei ( )
{
	static UFunction* pFnGetWei = NULL;

	if ( ! pFnGetWei )
		pFnGetWei = (UFunction*) UObject::GObjObjects()->Data[ 49806 ];

	ANowAtlasAvatarAiMountDynamic_execGetWei_Parms GetWei_Parms;

	pFnGetWei->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWei, &GetWei_Parms, NULL );

	pFnGetWei->FunctionFlags |= 0x400;

	return GetWei_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetSiz
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiMountDynamic::GetSiz ( )
{
	static UFunction* pFnGetSiz = NULL;

	if ( ! pFnGetSiz )
		pFnGetSiz = (UFunction*) UObject::GObjObjects()->Data[ 49804 ];

	ANowAtlasAvatarAiMountDynamic_execGetSiz_Parms GetSiz_Parms;

	pFnGetSiz->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSiz, &GetSiz_Parms, NULL );

	pFnGetSiz->FunctionFlags |= 0x400;

	return GetSiz_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetSpe
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiMountDynamic::GetSpe ( )
{
	static UFunction* pFnGetSpe = NULL;

	if ( ! pFnGetSpe )
		pFnGetSpe = (UFunction*) UObject::GObjObjects()->Data[ 49802 ];

	ANowAtlasAvatarAiMountDynamic_execGetSpe_Parms GetSpe_Parms;

	pFnGetSpe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpe, &GetSpe_Parms, NULL );

	pFnGetSpe->FunctionFlags |= 0x400;

	return GetSpe_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiMountDynamic::GetInt ( )
{
	static UFunction* pFnGetInt = NULL;

	if ( ! pFnGetInt )
		pFnGetInt = (UFunction*) UObject::GObjObjects()->Data[ 49800 ];

	ANowAtlasAvatarAiMountDynamic_execGetInt_Parms GetInt_Parms;

	pFnGetInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInt, &GetInt_Parms, NULL );

	pFnGetInt->FunctionFlags |= 0x400;

	return GetInt_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetPsy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiMountDynamic::GetPsy ( )
{
	static UFunction* pFnGetPsy = NULL;

	if ( ! pFnGetPsy )
		pFnGetPsy = (UFunction*) UObject::GObjObjects()->Data[ 49798 ];

	ANowAtlasAvatarAiMountDynamic_execGetPsy_Parms GetPsy_Parms;

	pFnGetPsy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPsy, &GetPsy_Parms, NULL );

	pFnGetPsy->FunctionFlags |= 0x400;

	return GetPsy_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetCon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiMountDynamic::GetCon ( )
{
	static UFunction* pFnGetCon = NULL;

	if ( ! pFnGetCon )
		pFnGetCon = (UFunction*) UObject::GObjObjects()->Data[ 49796 ];

	ANowAtlasAvatarAiMountDynamic_execGetCon_Parms GetCon_Parms;

	pFnGetCon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCon, &GetCon_Parms, NULL );

	pFnGetCon->FunctionFlags |= 0x400;

	return GetCon_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetDex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiMountDynamic::GetDex ( )
{
	static UFunction* pFnGetDex = NULL;

	if ( ! pFnGetDex )
		pFnGetDex = (UFunction*) UObject::GObjObjects()->Data[ 49794 ];

	ANowAtlasAvatarAiMountDynamic_execGetDex_Parms GetDex_Parms;

	pFnGetDex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDex, &GetDex_Parms, NULL );

	pFnGetDex->FunctionFlags |= 0x400;

	return GetDex_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetStr
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiMountDynamic::GetStr ( )
{
	static UFunction* pFnGetStr = NULL;

	if ( ! pFnGetStr )
		pFnGetStr = (UFunction*) UObject::GObjObjects()->Data[ 49792 ];

	ANowAtlasAvatarAiMountDynamic_execGetStr_Parms GetStr_Parms;

	pFnGetStr->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStr, &GetStr_Parms, NULL );

	pFnGetStr->FunctionFlags |= 0x400;

	return GetStr_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetItemMods
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiMountDynamic::GetItemMods ( )
{
	static UFunction* pFnGetItemMods = NULL;

	if ( ! pFnGetItemMods )
		pFnGetItemMods = (UFunction*) UObject::GObjObjects()->Data[ 49791 ];

	ANowAtlasAvatarAiMountDynamic_execGetItemMods_Parms GetItemMods_Parms;

	pFnGetItemMods->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemMods, &GetItemMods_Parms, NULL );

	pFnGetItemMods->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.UpdateStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiMountDynamic::UpdateStats ( )
{
	static UFunction* pFnUpdateStats = NULL;

	if ( ! pFnUpdateStats )
		pFnUpdateStats = (UFunction*) UObject::GObjObjects()->Data[ 49790 ];

	ANowAtlasAvatarAiMountDynamic_execUpdateStats_Parms UpdateStats_Parms;

	pFnUpdateStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateStats, &UpdateStats_Parms, NULL );

	pFnUpdateStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatarAiMountDynamic::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 49788 ];

	ANowAtlasAvatarAiMountDynamic_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.UpdateLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiMountDynamic::UpdateLevel ( )
{
	static UFunction* pFnUpdateLevel = NULL;

	if ( ! pFnUpdateLevel )
		pFnUpdateLevel = (UFunction*) UObject::GObjObjects()->Data[ 49787 ];

	ANowAtlasAvatarAiMountDynamic_execUpdateLevel_Parms UpdateLevel_Parms;

	pFnUpdateLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateLevel, &UpdateLevel_Parms, NULL );

	pFnUpdateLevel->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.SetBodyParam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            I                              ( CPF_Parm )
// int                            NewValue                       ( CPF_Parm )

void ANowAtlasAvatarAiMountDynamic::SetBodyParam ( int I, int NewValue )
{
	static UFunction* pFnSetBodyParam = NULL;

	if ( ! pFnSetBodyParam )
		pFnSetBodyParam = (UFunction*) UObject::GObjObjects()->Data[ 49784 ];

	ANowAtlasAvatarAiMountDynamic_execSetBodyParam_Parms SetBodyParam_Parms;
	SetBodyParam_Parms.I = I;
	SetBodyParam_Parms.NewValue = NewValue;

	pFnSetBodyParam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBodyParam, &SetBodyParam_Parms, NULL );

	pFnSetBodyParam->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UMaterialInstance*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TxtGroup                       ( CPF_Parm )
// int                            TxtIndex                       ( CPF_Parm )

class UMaterialInstance* ANowAtlasAvatarAiMountDynamic::GetMaterial ( int TxtGroup, int TxtIndex )
{
	static UFunction* pFnGetMaterial = NULL;

	if ( ! pFnGetMaterial )
		pFnGetMaterial = (UFunction*) UObject::GObjObjects()->Data[ 49780 ];

	ANowAtlasAvatarAiMountDynamic_execGetMaterial_Parms GetMaterial_Parms;
	GetMaterial_Parms.TxtGroup = TxtGroup;
	GetMaterial_Parms.TxtIndex = TxtIndex;

	pFnGetMaterial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterial, &GetMaterial_Parms, NULL );

	pFnGetMaterial->FunctionFlags |= 0x400;

	return GetMaterial_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetTexture
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UTexture*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TxtGroup                       ( CPF_Parm )
// int                            TxtIndex                       ( CPF_Parm )

class UTexture* ANowAtlasAvatarAiMountDynamic::GetTexture ( int TxtGroup, int TxtIndex )
{
	static UFunction* pFnGetTexture = NULL;

	if ( ! pFnGetTexture )
		pFnGetTexture = (UFunction*) UObject::GObjObjects()->Data[ 49776 ];

	ANowAtlasAvatarAiMountDynamic_execGetTexture_Parms GetTexture_Parms;
	GetTexture_Parms.TxtGroup = TxtGroup;
	GetTexture_Parms.TxtIndex = TxtIndex;

	pFnGetTexture->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTexture, &GetTexture_Parms, NULL );

	pFnGetTexture->FunctionFlags |= 0x400;

	return GetTexture_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetLinearColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ColorGroup                     ( CPF_Parm )
// int                            ColorIndex                     ( CPF_Parm )

struct FVector ANowAtlasAvatarAiMountDynamic::GetLinearColor ( int ColorGroup, int ColorIndex )
{
	static UFunction* pFnGetLinearColor = NULL;

	if ( ! pFnGetLinearColor )
		pFnGetLinearColor = (UFunction*) UObject::GObjObjects()->Data[ 49772 ];

	ANowAtlasAvatarAiMountDynamic_execGetLinearColor_Parms GetLinearColor_Parms;
	GetLinearColor_Parms.ColorGroup = ColorGroup;
	GetLinearColor_Parms.ColorIndex = ColorIndex;

	pFnGetLinearColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLinearColor, &GetLinearColor_Parms, NULL );

	pFnGetLinearColor->FunctionFlags |= 0x400;

	return GetLinearColor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetBodyStringAsBinary
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiMountDynamic::GetBodyStringAsBinary ( )
{
	static UFunction* pFnGetBodyStringAsBinary = NULL;

	if ( ! pFnGetBodyStringAsBinary )
		pFnGetBodyStringAsBinary = (UFunction*) UObject::GObjObjects()->Data[ 49770 ];

	ANowAtlasAvatarAiMountDynamic_execGetBodyStringAsBinary_Parms GetBodyStringAsBinary_Parms;

	pFnGetBodyStringAsBinary->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBodyStringAsBinary, &GetBodyStringAsBinary_Parms, NULL );

	pFnGetBodyStringAsBinary->FunctionFlags |= 0x400;

	return GetBodyStringAsBinary_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.RecalcStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiMountDynamic::RecalcStats ( )
{
	static UFunction* pFnRecalcStats = NULL;

	if ( ! pFnRecalcStats )
		pFnRecalcStats = (UFunction*) UObject::GObjObjects()->Data[ 49768 ];

	ANowAtlasAvatarAiMountDynamic_execRecalcStats_Parms RecalcStats_Parms;

	pFnRecalcStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecalcStats, &RecalcStats_Parms, NULL );

	pFnRecalcStats->FunctionFlags |= 0x400;

	return RecalcStats_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetStatString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiMountDynamic::GetStatString ( )
{
	static UFunction* pFnGetStatString = NULL;

	if ( ! pFnGetStatString )
		pFnGetStatString = (UFunction*) UObject::GObjObjects()->Data[ 49766 ];

	ANowAtlasAvatarAiMountDynamic_execGetStatString_Parms GetStatString_Parms;

	pFnGetStatString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatString, &GetStatString_Parms, NULL );

	pFnGetStatString->FunctionFlags |= 0x400;

	return GetStatString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetArmorString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiMountDynamic::GetArmorString ( )
{
	static UFunction* pFnGetArmorString = NULL;

	if ( ! pFnGetArmorString )
		pFnGetArmorString = (UFunction*) UObject::GObjObjects()->Data[ 49764 ];

	ANowAtlasAvatarAiMountDynamic_execGetArmorString_Parms GetArmorString_Parms;

	pFnGetArmorString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetArmorString, &GetArmorString_Parms, NULL );

	pFnGetArmorString->FunctionFlags |= 0x400;

	return GetArmorString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetBodyString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiMountDynamic::GetBodyString ( )
{
	static UFunction* pFnGetBodyString = NULL;

	if ( ! pFnGetBodyString )
		pFnGetBodyString = (UFunction*) UObject::GObjObjects()->Data[ 49762 ];

	ANowAtlasAvatarAiMountDynamic_execGetBodyString_Parms GetBodyString_Parms;

	pFnGetBodyString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBodyString, &GetBodyString_Parms, NULL );

	pFnGetBodyString->FunctionFlags |= 0x400;

	return GetBodyString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetAndSetStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiMountDynamic::GetAndSetStats ( )
{
	static UFunction* pFnGetAndSetStats = NULL;

	if ( ! pFnGetAndSetStats )
		pFnGetAndSetStats = (UFunction*) UObject::GObjObjects()->Data[ 49761 ];

	ANowAtlasAvatarAiMountDynamic_execGetAndSetStats_Parms GetAndSetStats_Parms;

	pFnGetAndSetStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetStats, &GetAndSetStats_Parms, NULL );

	pFnGetAndSetStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMountDynamic.GetAndCreateBody
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiMountDynamic::GetAndCreateBody ( unsigned long bReInit )
{
	static UFunction* pFnGetAndCreateBody = NULL;

	if ( ! pFnGetAndCreateBody )
		pFnGetAndCreateBody = (UFunction*) UObject::GObjObjects()->Data[ 49759 ];

	ANowAtlasAvatarAiMountDynamic_execGetAndCreateBody_Parms GetAndCreateBody_Parms;
	GetAndCreateBody_Parms.bReInit = bReInit;

	pFnGetAndCreateBody->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateBody, &GetAndCreateBody_Parms, NULL );

	pFnGetAndCreateBody->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicHorse.SetFeatureParam
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            FeatureIndex                   ( CPF_Parm )
// int                            ByteValue                      ( CPF_Parm )
// float                          Strength                       ( CPF_Parm )
// unsigned long                  bHair                          ( CPF_Parm )
// class UTexture*                NewTexture                     ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 NewColor                       ( CPF_OptionalParm | CPF_Parm )
// class UMaterialInstance*       NewMaterial                    ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiMountDynamicHorse::eventSetFeatureParam ( int FeatureIndex, int ByteValue, float Strength, unsigned long bHair, class UTexture* NewTexture, struct FVector NewColor, class UMaterialInstance* NewMaterial )
{
	static UFunction* pFnSetFeatureParam = NULL;

	if ( ! pFnSetFeatureParam )
		pFnSetFeatureParam = (UFunction*) UObject::GObjObjects()->Data[ 49868 ];

	ANowAtlasAvatarAiMountDynamicHorse_eventSetFeatureParam_Parms SetFeatureParam_Parms;
	SetFeatureParam_Parms.FeatureIndex = FeatureIndex;
	SetFeatureParam_Parms.ByteValue = ByteValue;
	SetFeatureParam_Parms.Strength = Strength;
	SetFeatureParam_Parms.bHair = bHair;
	SetFeatureParam_Parms.NewTexture = NewTexture;
	memcpy ( &SetFeatureParam_Parms.NewColor, &NewColor, 0xC );
	SetFeatureParam_Parms.NewMaterial = NewMaterial;

	this->ProcessEvent ( pFnSetFeatureParam, &SetFeatureParam_Parms, NULL );

	return SetFeatureParam_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicHorse.CanJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiMountDynamicHorse::CanJump ( )
{
	static UFunction* pFnCanJump = NULL;

	if ( ! pFnCanJump )
		pFnCanJump = (UFunction*) UObject::GObjObjects()->Data[ 49866 ];

	ANowAtlasAvatarAiMountDynamicHorse_execCanJump_Parms CanJump_Parms;

	this->ProcessEvent ( pFnCanJump, &CanJump_Parms, NULL );

	return CanJump_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicHorse.GetMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UMaterialInstance*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TxtGroup                       ( CPF_Parm )
// int                            TxtIndex                       ( CPF_Parm )

class UMaterialInstance* ANowAtlasAvatarAiMountDynamicHorse::GetMaterial ( int TxtGroup, int TxtIndex )
{
	static UFunction* pFnGetMaterial = NULL;

	if ( ! pFnGetMaterial )
		pFnGetMaterial = (UFunction*) UObject::GObjObjects()->Data[ 49862 ];

	ANowAtlasAvatarAiMountDynamicHorse_execGetMaterial_Parms GetMaterial_Parms;
	GetMaterial_Parms.TxtGroup = TxtGroup;
	GetMaterial_Parms.TxtIndex = TxtIndex;

	pFnGetMaterial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterial, &GetMaterial_Parms, NULL );

	pFnGetMaterial->FunctionFlags |= 0x400;

	return GetMaterial_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicHorse.GetTexture
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UTexture*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TxtGroup                       ( CPF_Parm )
// int                            TxtIndex                       ( CPF_Parm )

class UTexture* ANowAtlasAvatarAiMountDynamicHorse::GetTexture ( int TxtGroup, int TxtIndex )
{
	static UFunction* pFnGetTexture = NULL;

	if ( ! pFnGetTexture )
		pFnGetTexture = (UFunction*) UObject::GObjObjects()->Data[ 49858 ];

	ANowAtlasAvatarAiMountDynamicHorse_execGetTexture_Parms GetTexture_Parms;
	GetTexture_Parms.TxtGroup = TxtGroup;
	GetTexture_Parms.TxtIndex = TxtIndex;

	pFnGetTexture->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTexture, &GetTexture_Parms, NULL );

	pFnGetTexture->FunctionFlags |= 0x400;

	return GetTexture_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicHorse.GetLinearColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ColorGroup                     ( CPF_Parm )
// int                            ColorIndex                     ( CPF_Parm )

struct FVector ANowAtlasAvatarAiMountDynamicHorse::GetLinearColor ( int ColorGroup, int ColorIndex )
{
	static UFunction* pFnGetLinearColor = NULL;

	if ( ! pFnGetLinearColor )
		pFnGetLinearColor = (UFunction*) UObject::GObjObjects()->Data[ 49854 ];

	ANowAtlasAvatarAiMountDynamicHorse_execGetLinearColor_Parms GetLinearColor_Parms;
	GetLinearColor_Parms.ColorGroup = ColorGroup;
	GetLinearColor_Parms.ColorIndex = ColorIndex;

	pFnGetLinearColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLinearColor, &GetLinearColor_Parms, NULL );

	pFnGetLinearColor->FunctionFlags |= 0x400;

	return GetLinearColor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicLykiator.SetFeatureParam
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            FeatureIndex                   ( CPF_Parm )
// int                            ByteValue                      ( CPF_Parm )
// float                          Strength                       ( CPF_Parm )
// unsigned long                  bHair                          ( CPF_Parm )
// class UTexture*                NewTexture                     ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 NewColor                       ( CPF_OptionalParm | CPF_Parm )
// class UMaterialInstance*       NewMaterial                    ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiMountDynamicLykiator::eventSetFeatureParam ( int FeatureIndex, int ByteValue, float Strength, unsigned long bHair, class UTexture* NewTexture, struct FVector NewColor, class UMaterialInstance* NewMaterial )
{
	static UFunction* pFnSetFeatureParam = NULL;

	if ( ! pFnSetFeatureParam )
		pFnSetFeatureParam = (UFunction*) UObject::GObjObjects()->Data[ 49918 ];

	ANowAtlasAvatarAiMountDynamicLykiator_eventSetFeatureParam_Parms SetFeatureParam_Parms;
	SetFeatureParam_Parms.FeatureIndex = FeatureIndex;
	SetFeatureParam_Parms.ByteValue = ByteValue;
	SetFeatureParam_Parms.Strength = Strength;
	SetFeatureParam_Parms.bHair = bHair;
	SetFeatureParam_Parms.NewTexture = NewTexture;
	memcpy ( &SetFeatureParam_Parms.NewColor, &NewColor, 0xC );
	SetFeatureParam_Parms.NewMaterial = NewMaterial;

	this->ProcessEvent ( pFnSetFeatureParam, &SetFeatureParam_Parms, NULL );

	return SetFeatureParam_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicLykiator.CanJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiMountDynamicLykiator::CanJump ( )
{
	static UFunction* pFnCanJump = NULL;

	if ( ! pFnCanJump )
		pFnCanJump = (UFunction*) UObject::GObjObjects()->Data[ 49916 ];

	ANowAtlasAvatarAiMountDynamicLykiator_execCanJump_Parms CanJump_Parms;

	this->ProcessEvent ( pFnCanJump, &CanJump_Parms, NULL );

	return CanJump_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicLykiator.GetMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UMaterialInstance*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TxtGroup                       ( CPF_Parm )
// int                            TxtIndex                       ( CPF_Parm )

class UMaterialInstance* ANowAtlasAvatarAiMountDynamicLykiator::GetMaterial ( int TxtGroup, int TxtIndex )
{
	static UFunction* pFnGetMaterial = NULL;

	if ( ! pFnGetMaterial )
		pFnGetMaterial = (UFunction*) UObject::GObjObjects()->Data[ 49912 ];

	ANowAtlasAvatarAiMountDynamicLykiator_execGetMaterial_Parms GetMaterial_Parms;
	GetMaterial_Parms.TxtGroup = TxtGroup;
	GetMaterial_Parms.TxtIndex = TxtIndex;

	pFnGetMaterial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterial, &GetMaterial_Parms, NULL );

	pFnGetMaterial->FunctionFlags |= 0x400;

	return GetMaterial_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicLykiator.GetTexture
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UTexture*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TxtGroup                       ( CPF_Parm )
// int                            TxtIndex                       ( CPF_Parm )

class UTexture* ANowAtlasAvatarAiMountDynamicLykiator::GetTexture ( int TxtGroup, int TxtIndex )
{
	static UFunction* pFnGetTexture = NULL;

	if ( ! pFnGetTexture )
		pFnGetTexture = (UFunction*) UObject::GObjObjects()->Data[ 49908 ];

	ANowAtlasAvatarAiMountDynamicLykiator_execGetTexture_Parms GetTexture_Parms;
	GetTexture_Parms.TxtGroup = TxtGroup;
	GetTexture_Parms.TxtIndex = TxtIndex;

	pFnGetTexture->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTexture, &GetTexture_Parms, NULL );

	pFnGetTexture->FunctionFlags |= 0x400;

	return GetTexture_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicLykiator.GetLinearColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ColorGroup                     ( CPF_Parm )
// int                            ColorIndex                     ( CPF_Parm )

struct FVector ANowAtlasAvatarAiMountDynamicLykiator::GetLinearColor ( int ColorGroup, int ColorIndex )
{
	static UFunction* pFnGetLinearColor = NULL;

	if ( ! pFnGetLinearColor )
		pFnGetLinearColor = (UFunction*) UObject::GObjObjects()->Data[ 49904 ];

	ANowAtlasAvatarAiMountDynamicLykiator_execGetLinearColor_Parms GetLinearColor_Parms;
	GetLinearColor_Parms.ColorGroup = ColorGroup;
	GetLinearColor_Parms.ColorIndex = ColorIndex;

	pFnGetLinearColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLinearColor, &GetLinearColor_Parms, NULL );

	pFnGetLinearColor->FunctionFlags |= 0x400;

	return GetLinearColor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicMolva.SetFeatureParam
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            FeatureIndex                   ( CPF_Parm )
// int                            ByteValue                      ( CPF_Parm )
// float                          Strength                       ( CPF_Parm )
// unsigned long                  bHair                          ( CPF_Parm )
// class UTexture*                NewTexture                     ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 NewColor                       ( CPF_OptionalParm | CPF_Parm )
// class UMaterialInstance*       NewMaterial                    ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiMountDynamicMolva::eventSetFeatureParam ( int FeatureIndex, int ByteValue, float Strength, unsigned long bHair, class UTexture* NewTexture, struct FVector NewColor, class UMaterialInstance* NewMaterial )
{
	static UFunction* pFnSetFeatureParam = NULL;

	if ( ! pFnSetFeatureParam )
		pFnSetFeatureParam = (UFunction*) UObject::GObjObjects()->Data[ 49966 ];

	ANowAtlasAvatarAiMountDynamicMolva_eventSetFeatureParam_Parms SetFeatureParam_Parms;
	SetFeatureParam_Parms.FeatureIndex = FeatureIndex;
	SetFeatureParam_Parms.ByteValue = ByteValue;
	SetFeatureParam_Parms.Strength = Strength;
	SetFeatureParam_Parms.bHair = bHair;
	SetFeatureParam_Parms.NewTexture = NewTexture;
	memcpy ( &SetFeatureParam_Parms.NewColor, &NewColor, 0xC );
	SetFeatureParam_Parms.NewMaterial = NewMaterial;

	this->ProcessEvent ( pFnSetFeatureParam, &SetFeatureParam_Parms, NULL );

	return SetFeatureParam_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicMolva.CanJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiMountDynamicMolva::CanJump ( )
{
	static UFunction* pFnCanJump = NULL;

	if ( ! pFnCanJump )
		pFnCanJump = (UFunction*) UObject::GObjObjects()->Data[ 49964 ];

	ANowAtlasAvatarAiMountDynamicMolva_execCanJump_Parms CanJump_Parms;

	this->ProcessEvent ( pFnCanJump, &CanJump_Parms, NULL );

	return CanJump_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicMolva.GetMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UMaterialInstance*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TxtGroup                       ( CPF_Parm )
// int                            TxtIndex                       ( CPF_Parm )

class UMaterialInstance* ANowAtlasAvatarAiMountDynamicMolva::GetMaterial ( int TxtGroup, int TxtIndex )
{
	static UFunction* pFnGetMaterial = NULL;

	if ( ! pFnGetMaterial )
		pFnGetMaterial = (UFunction*) UObject::GObjObjects()->Data[ 49960 ];

	ANowAtlasAvatarAiMountDynamicMolva_execGetMaterial_Parms GetMaterial_Parms;
	GetMaterial_Parms.TxtGroup = TxtGroup;
	GetMaterial_Parms.TxtIndex = TxtIndex;

	pFnGetMaterial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterial, &GetMaterial_Parms, NULL );

	pFnGetMaterial->FunctionFlags |= 0x400;

	return GetMaterial_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicMolva.GetTexture
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UTexture*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TxtGroup                       ( CPF_Parm )
// int                            TxtIndex                       ( CPF_Parm )

class UTexture* ANowAtlasAvatarAiMountDynamicMolva::GetTexture ( int TxtGroup, int TxtIndex )
{
	static UFunction* pFnGetTexture = NULL;

	if ( ! pFnGetTexture )
		pFnGetTexture = (UFunction*) UObject::GObjObjects()->Data[ 49956 ];

	ANowAtlasAvatarAiMountDynamicMolva_execGetTexture_Parms GetTexture_Parms;
	GetTexture_Parms.TxtGroup = TxtGroup;
	GetTexture_Parms.TxtIndex = TxtIndex;

	pFnGetTexture->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTexture, &GetTexture_Parms, NULL );

	pFnGetTexture->FunctionFlags |= 0x400;

	return GetTexture_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiMountDynamicMolva.GetLinearColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ColorGroup                     ( CPF_Parm )
// int                            ColorIndex                     ( CPF_Parm )

struct FVector ANowAtlasAvatarAiMountDynamicMolva::GetLinearColor ( int ColorGroup, int ColorIndex )
{
	static UFunction* pFnGetLinearColor = NULL;

	if ( ! pFnGetLinearColor )
		pFnGetLinearColor = (UFunction*) UObject::GObjObjects()->Data[ 49952 ];

	ANowAtlasAvatarAiMountDynamicMolva_execGetLinearColor_Parms GetLinearColor_Parms;
	GetLinearColor_Parms.ColorGroup = ColorGroup;
	GetLinearColor_Parms.ColorIndex = ColorIndex;

	pFnGetLinearColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLinearColor, &GetLinearColor_Parms, NULL );

	pFnGetLinearColor->FunctionFlags |= 0x400;

	return GetLinearColor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiNPC.Resurrect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiNPC::eventResurrect ( )
{
	static UFunction* pFnResurrect = NULL;

	if ( ! pFnResurrect )
		pFnResurrect = (UFunction*) UObject::GObjObjects()->Data[ 50055 ];

	ANowAtlasAvatarAiNPC_eventResurrect_Parms Resurrect_Parms;

	this->ProcessEvent ( pFnResurrect, &Resurrect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiNPC::eventSpawnCorpse ( float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = (UFunction*) UObject::GObjObjects()->Data[ 50051 ];

	ANowAtlasAvatarAiNPC_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.tcpReceive
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarAiNPC::eventtcpReceive ( struct FString Text )
{
	static UFunction* pFntcpReceive = NULL;

	if ( ! pFntcpReceive )
		pFntcpReceive = (UFunction*) UObject::GObjObjects()->Data[ 50048 ];

	ANowAtlasAvatarAiNPC_eventtcpReceive_Parms tcpReceive_Parms;
	memcpy ( &tcpReceive_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFntcpReceive, &tcpReceive_Parms, NULL );

	return tcpReceive_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiNPC.TurnTo
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   WhatPawn                       ( CPF_Parm )

void ANowAtlasAvatarAiNPC::eventTurnTo ( class APawn* WhatPawn )
{
	static UFunction* pFnTurnTo = NULL;

	if ( ! pFnTurnTo )
		pFnTurnTo = (UFunction*) UObject::GObjObjects()->Data[ 50045 ];

	ANowAtlasAvatarAiNPC_eventTurnTo_Parms TurnTo_Parms;
	TurnTo_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnTurnTo, &TurnTo_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.TweenTurn
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAtlasAvatarAiNPC::TweenTurn ( float DT )
{
	static UFunction* pFnTweenTurn = NULL;

	if ( ! pFnTweenTurn )
		pFnTweenTurn = (UFunction*) UObject::GObjObjects()->Data[ 50042 ];

	ANowAtlasAvatarAiNPC_execTweenTurn_Parms TweenTurn_Parms;
	TweenTurn_Parms.DT = DT;

	this->ProcessEvent ( pFnTweenTurn, &TweenTurn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.ResetRotation
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarAiNPC::ResetRotation ( )
{
	static UFunction* pFnResetRotation = NULL;

	if ( ! pFnResetRotation )
		pFnResetRotation = (UFunction*) UObject::GObjObjects()->Data[ 50040 ];

	ANowAtlasAvatarAiNPC_execResetRotation_Parms ResetRotation_Parms;

	this->ProcessEvent ( pFnResetRotation, &ResetRotation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.SetInEtherWorlds
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  NewValue                       ( CPF_Parm )

void ANowAtlasAvatarAiNPC::eventSetInEtherWorlds ( unsigned long NewValue )
{
	static UFunction* pFnSetInEtherWorlds = NULL;

	if ( ! pFnSetInEtherWorlds )
		pFnSetInEtherWorlds = (UFunction*) UObject::GObjObjects()->Data[ 50035 ];

	ANowAtlasAvatarAiNPC_eventSetInEtherWorlds_Parms SetInEtherWorlds_Parms;
	SetInEtherWorlds_Parms.NewValue = NewValue;

	this->ProcessEvent ( pFnSetInEtherWorlds, &SetInEtherWorlds_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.TickNpcLookAt
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAtlasAvatarAiNPC::TickNpcLookAt ( float DT )
{
	static UFunction* pFnTickNpcLookAt = NULL;

	if ( ! pFnTickNpcLookAt )
		pFnTickNpcLookAt = (UFunction*) UObject::GObjObjects()->Data[ 50031 ];

	ANowAtlasAvatarAiNPC_execTickNpcLookAt_Parms TickNpcLookAt_Parms;
	TickNpcLookAt_Parms.DT = DT;

	this->ProcessEvent ( pFnTickNpcLookAt, &TickNpcLookAt_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.Tick
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAiNPC::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 50029 ];

	ANowAtlasAvatarAiNPC_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.SetAiState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  NewState                       ( CPF_Parm )

void ANowAtlasAvatarAiNPC::eventSetAiState ( unsigned char NewState )
{
	static UFunction* pFnSetAiState = NULL;

	if ( ! pFnSetAiState )
		pFnSetAiState = (UFunction*) UObject::GObjObjects()->Data[ 50027 ];

	ANowAtlasAvatarAiNPC_eventSetAiState_Parms SetAiState_Parms;
	SetAiState_Parms.NewState = NewState;

	this->ProcessEvent ( pFnSetAiState, &SetAiState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.CheckForLookAtTarget
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowPawn*                ForPawn                        ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiNPC::CheckForLookAtTarget ( class ANowPawn* ForPawn )
{
	static UFunction* pFnCheckForLookAtTarget = NULL;

	if ( ! pFnCheckForLookAtTarget )
		pFnCheckForLookAtTarget = (UFunction*) UObject::GObjObjects()->Data[ 50023 ];

	ANowAtlasAvatarAiNPC_execCheckForLookAtTarget_Parms CheckForLookAtTarget_Parms;
	CheckForLookAtTarget_Parms.ForPawn = ForPawn;

	this->ProcessEvent ( pFnCheckForLookAtTarget, &CheckForLookAtTarget_Parms, NULL );

	return CheckForLookAtTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiNPC.NPCInteraction
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iAnimation                     ( CPF_Parm )

void ANowAtlasAvatarAiNPC::eventNPCInteraction ( int iAnimation )
{
	static UFunction* pFnNPCInteraction = NULL;

	if ( ! pFnNPCInteraction )
		pFnNPCInteraction = (UFunction*) UObject::GObjObjects()->Data[ 50020 ];

	ANowAtlasAvatarAiNPC_eventNPCInteraction_Parms NPCInteraction_Parms;
	NPCInteraction_Parms.iAnimation = iAnimation;

	this->ProcessEvent ( pFnNPCInteraction, &NPCInteraction_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.AddStaticMeshObject
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UStaticMesh*             STM                            ( CPF_Parm )
// struct FName                   SocketName                     ( CPF_Parm )

void ANowAtlasAvatarAiNPC::eventAddStaticMeshObject ( class UStaticMesh* STM, struct FName SocketName )
{
	static UFunction* pFnAddStaticMeshObject = NULL;

	if ( ! pFnAddStaticMeshObject )
		pFnAddStaticMeshObject = (UFunction*) UObject::GObjObjects()->Data[ 50017 ];

	ANowAtlasAvatarAiNPC_eventAddStaticMeshObject_Parms AddStaticMeshObject_Parms;
	AddStaticMeshObject_Parms.STM = STM;
	memcpy ( &AddStaticMeshObject_Parms.SocketName, &SocketName, 0x8 );

	this->ProcessEvent ( pFnAddStaticMeshObject, &AddStaticMeshObject_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiNPC::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50016 ];

	ANowAtlasAvatarAiNPC_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.GetAiIdentification
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiNPC::GetAiIdentification ( )
{
	static UFunction* pFnGetAiIdentification = NULL;

	if ( ! pFnGetAiIdentification )
		pFnGetAiIdentification = (UFunction*) UObject::GObjObjects()->Data[ 50014 ];

	ANowAtlasAvatarAiNPC_execGetAiIdentification_Parms GetAiIdentification_Parms;

	pFnGetAiIdentification->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAiIdentification, &GetAiIdentification_Parms, NULL );

	pFnGetAiIdentification->FunctionFlags |= 0x400;

	return GetAiIdentification_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiNPC.GetAndSetInteractionString
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiNPC::GetAndSetInteractionString ( )
{
	static UFunction* pFnGetAndSetInteractionString = NULL;

	if ( ! pFnGetAndSetInteractionString )
		pFnGetAndSetInteractionString = (UFunction*) UObject::GObjObjects()->Data[ 50013 ];

	ANowAtlasAvatarAiNPC_execGetAndSetInteractionString_Parms GetAndSetInteractionString_Parms;

	pFnGetAndSetInteractionString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetInteractionString, &GetAndSetInteractionString_Parms, NULL );

	pFnGetAndSetInteractionString->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiNPC.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiNPC::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50010 ];

	ANowAtlasAvatarAiNPC_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiNPCTownCrier.Talk
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiNPCTownCrier::eventTalk ( )
{
	static UFunction* pFnTalk = NULL;

	if ( ! pFnTalk )
		pFnTalk = (UFunction*) UObject::GObjObjects()->Data[ 50078 ];

	ANowAtlasAvatarAiNPCTownCrier_eventTalk_Parms Talk_Parms;

	this->ProcessEvent ( pFnTalk, &Talk_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPCTownCrier.tcpReceive
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarAiNPCTownCrier::eventtcpReceive ( struct FString sString )
{
	static UFunction* pFntcpReceive = NULL;

	if ( ! pFntcpReceive )
		pFntcpReceive = (UFunction*) UObject::GObjObjects()->Data[ 50073 ];

	ANowAtlasAvatarAiNPCTownCrier_eventtcpReceive_Parms tcpReceive_Parms;
	memcpy ( &tcpReceive_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFntcpReceive, &tcpReceive_Parms, NULL );

	return tcpReceive_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiNPCTownCrier.InitTownCrier
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiNPCTownCrier::InitTownCrier ( )
{
	static UFunction* pFnInitTownCrier = NULL;

	if ( ! pFnInitTownCrier )
		pFnInitTownCrier = (UFunction*) UObject::GObjObjects()->Data[ 50067 ];

	ANowAtlasAvatarAiNPCTownCrier_execInitTownCrier_Parms InitTownCrier_Parms;

	this->ProcessEvent ( pFnInitTownCrier, &InitTownCrier_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPCTownCrier.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiNPCTownCrier::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50066 ];

	ANowAtlasAvatarAiNPCTownCrier_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPCTownCrier.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiNPCTownCrier::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50063 ];

	ANowAtlasAvatarAiNPCTownCrier_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpc.OpenUserInterface
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarNpc::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = (UFunction*) UObject::GObjObjects()->Data[ 50254 ];

	ANowAtlasAvatarNpc_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpc::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50251 ];

	ANowAtlasAvatarNpc_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpc.SpawnHitFx
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// unsigned long                  ClientFeedBack                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIgnoreParticles               ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarNpc::eventSpawnHitFx ( struct FVector HitLocation, unsigned long ClientFeedBack, unsigned long bIgnoreParticles )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = (UFunction*) UObject::GObjObjects()->Data[ 50247 ];

	ANowAtlasAvatarNpc_eventSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.HitLocation, &HitLocation, 0xC );
	SpawnHitFx_Parms.ClientFeedBack = ClientFeedBack;
	SpawnHitFx_Parms.bIgnoreParticles = bIgnoreParticles;

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.TurnTo
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   WhatPawn                       ( CPF_Parm )

void ANowAtlasAvatarNpc::eventTurnTo ( class APawn* WhatPawn )
{
	static UFunction* pFnTurnTo = NULL;

	if ( ! pFnTurnTo )
		pFnTurnTo = (UFunction*) UObject::GObjObjects()->Data[ 50244 ];

	ANowAtlasAvatarNpc_eventTurnTo_Parms TurnTo_Parms;
	TurnTo_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnTurnTo, &TurnTo_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.TweenTurn
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAtlasAvatarNpc::TweenTurn ( float DT )
{
	static UFunction* pFnTweenTurn = NULL;

	if ( ! pFnTweenTurn )
		pFnTweenTurn = (UFunction*) UObject::GObjObjects()->Data[ 50241 ];

	ANowAtlasAvatarNpc_execTweenTurn_Parms TweenTurn_Parms;
	TweenTurn_Parms.DT = DT;

	this->ProcessEvent ( pFnTweenTurn, &TweenTurn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.FindLookAtPoint
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarNpc::FindLookAtPoint ( )
{
	static UFunction* pFnFindLookAtPoint = NULL;

	if ( ! pFnFindLookAtPoint )
		pFnFindLookAtPoint = (UFunction*) UObject::GObjObjects()->Data[ 50237 ];

	ANowAtlasAvatarNpc_execFindLookAtPoint_Parms FindLookAtPoint_Parms;

	this->ProcessEvent ( pFnFindLookAtPoint, &FindLookAtPoint_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.CanOpenScene
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowPlayerController*    NPC                            ( CPF_Parm )

bool ANowAtlasAvatarNpc::CanOpenScene ( class ANowPlayerController* NPC )
{
	static UFunction* pFnCanOpenScene = NULL;

	if ( ! pFnCanOpenScene )
		pFnCanOpenScene = (UFunction*) UObject::GObjObjects()->Data[ 50234 ];

	ANowAtlasAvatarNpc_execCanOpenScene_Parms CanOpenScene_Parms;
	CanOpenScene_Parms.NPC = NPC;

	this->ProcessEvent ( pFnCanOpenScene, &CanOpenScene_Parms, NULL );

	return CanOpenScene_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpc.OpenUserGFXInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            OpenSceneIndex                 ( CPF_Parm )

void ANowAtlasAvatarNpc::eventOpenUserGFXInterface ( int OpenSceneIndex )
{
	static UFunction* pFnOpenUserGFXInterface = NULL;

	if ( ! pFnOpenUserGFXInterface )
		pFnOpenUserGFXInterface = (UFunction*) UObject::GObjObjects()->Data[ 50231 ];

	ANowAtlasAvatarNpc_eventOpenUserGFXInterface_Parms OpenUserGFXInterface_Parms;
	OpenUserGFXInterface_Parms.OpenSceneIndex = OpenSceneIndex;

	this->ProcessEvent ( pFnOpenUserGFXInterface, &OpenUserGFXInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowAtlasAvatarNpc::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 50229 ];

	ANowAtlasAvatarNpc_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarNpc::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50228 ];

	ANowAtlasAvatarNpc_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.SetTurnTo
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  NewValue                       ( CPF_Parm )

void ANowAtlasAvatarNpc::eventSetTurnTo ( unsigned long NewValue )
{
	static UFunction* pFnSetTurnTo = NULL;

	if ( ! pFnSetTurnTo )
		pFnSetTurnTo = (UFunction*) UObject::GObjObjects()->Data[ 50226 ];

	ANowAtlasAvatarNpc_eventSetTurnTo_Parms SetTurnTo_Parms;
	SetTurnTo_Parms.NewValue = NewValue;

	this->ProcessEvent ( pFnSetTurnTo, &SetTurnTo_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarNpc::eventSpawnCorpse ( float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = (UFunction*) UObject::GObjObjects()->Data[ 50222 ];

	ANowAtlasAvatarNpc_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.AddStaticMeshObject
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UStaticMesh*             STM                            ( CPF_Parm )
// struct FName                   SocketName                     ( CPF_Parm )

void ANowAtlasAvatarNpc::eventAddStaticMeshObject ( class UStaticMesh* STM, struct FName SocketName )
{
	static UFunction* pFnAddStaticMeshObject = NULL;

	if ( ! pFnAddStaticMeshObject )
		pFnAddStaticMeshObject = (UFunction*) UObject::GObjObjects()->Data[ 50219 ];

	ANowAtlasAvatarNpc_eventAddStaticMeshObject_Parms AddStaticMeshObject_Parms;
	AddStaticMeshObject_Parms.STM = STM;
	memcpy ( &AddStaticMeshObject_Parms.SocketName, &SocketName, 0x8 );

	this->ProcessEvent ( pFnAddStaticMeshObject, &AddStaticMeshObject_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.SetInEtherWorlds
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  NewValue                       ( CPF_Parm )

void ANowAtlasAvatarNpc::eventSetInEtherWorlds ( unsigned long NewValue )
{
	static UFunction* pFnSetInEtherWorlds = NULL;

	if ( ! pFnSetInEtherWorlds )
		pFnSetInEtherWorlds = (UFunction*) UObject::GObjObjects()->Data[ 50216 ];

	ANowAtlasAvatarNpc_eventSetInEtherWorlds_Parms SetInEtherWorlds_Parms;
	SetInEtherWorlds_Parms.NewValue = NewValue;

	this->ProcessEvent ( pFnSetInEtherWorlds, &SetInEtherWorlds_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.TickLookAt
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAtlasAvatarNpc::TickLookAt ( float DT )
{
	static UFunction* pFnTickLookAt = NULL;

	if ( ! pFnTickLookAt )
		pFnTickLookAt = (UFunction*) UObject::GObjObjects()->Data[ 50212 ];

	ANowAtlasAvatarNpc_execTickLookAt_Parms TickLookAt_Parms;
	TickLookAt_Parms.DT = DT;

	this->ProcessEvent ( pFnTickLookAt, &TickLookAt_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.CheckForLookAtTarget
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   ForPawn                        ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpc::CheckForLookAtTarget ( class APawn* ForPawn )
{
	static UFunction* pFnCheckForLookAtTarget = NULL;

	if ( ! pFnCheckForLookAtTarget )
		pFnCheckForLookAtTarget = (UFunction*) UObject::GObjObjects()->Data[ 50208 ];

	ANowAtlasAvatarNpc_execCheckForLookAtTarget_Parms CheckForLookAtTarget_Parms;
	CheckForLookAtTarget_Parms.ForPawn = ForPawn;

	this->ProcessEvent ( pFnCheckForLookAtTarget, &CheckForLookAtTarget_Parms, NULL );

	return CheckForLookAtTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarHouseBankerNpc.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarHouseBankerNpc::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50271 ];

	ANowAtlasAvatarHouseBankerNpc_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarHouseBankerNpc.setHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* house                          ( CPF_Parm )

void ANowAtlasAvatarHouseBankerNpc::setHouse ( class ANowAtlasAvatarPlayerHouse* house )
{
	static UFunction* pFnsetHouse = NULL;

	if ( ! pFnsetHouse )
		pFnsetHouse = (UFunction*) UObject::GObjObjects()->Data[ 50269 ];

	ANowAtlasAvatarHouseBankerNpc_execsetHouse_Parms setHouse_Parms;
	setHouse_Parms.house = house;

	this->ProcessEvent ( pFnsetHouse, &setHouse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarHouseBankerNpc.findHouse
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarHouseBankerNpc::findHouse ( )
{
	static UFunction* pFnfindHouse = NULL;

	if ( ! pFnfindHouse )
		pFnfindHouse = (UFunction*) UObject::GObjObjects()->Data[ 50267 ];

	ANowAtlasAvatarHouseBankerNpc_execfindHouse_Parms findHouse_Parms;

	this->ProcessEvent ( pFnfindHouse, &findHouse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarHouseBankerNpc.IsMyHouse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowAtlasAvatarPlayerHouse* house                          ( CPF_Parm )

bool ANowAtlasAvatarHouseBankerNpc::IsMyHouse ( class ANowAtlasAvatarPlayerHouse* house )
{
	static UFunction* pFnIsMyHouse = NULL;

	if ( ! pFnIsMyHouse )
		pFnIsMyHouse = (UFunction*) UObject::GObjObjects()->Data[ 50264 ];

	ANowAtlasAvatarHouseBankerNpc_execIsMyHouse_Parms IsMyHouse_Parms;
	IsMyHouse_Parms.house = house;

	pFnIsMyHouse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsMyHouse, &IsMyHouse_Parms, NULL );

	pFnIsMyHouse->FunctionFlags |= 0x400;

	return IsMyHouse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarHouseBankerNpc.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarHouseBankerNpc::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50261 ];

	ANowAtlasAvatarHouseBankerNpc_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcLibrary.OpenUserInterface
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarNpcLibrary::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = (UFunction*) UObject::GObjObjects()->Data[ 50376 ];

	ANowAtlasAvatarNpcLibrary_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpcLibrary.AssignSceneStr
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarNpcLibrary::AssignSceneStr ( )
{
	static UFunction* pFnAssignSceneStr = NULL;

	if ( ! pFnAssignSceneStr )
		pFnAssignSceneStr = (UFunction*) UObject::GObjObjects()->Data[ 50375 ];

	ANowAtlasAvatarNpcLibrary_execAssignSceneStr_Parms AssignSceneStr_Parms;

	pFnAssignSceneStr->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAssignSceneStr, &AssignSceneStr_Parms, NULL );

	pFnAssignSceneStr->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarNpcMailRecive.OpenMail
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarNpcMailRecive::eventOpenMail ( )
{
	static UFunction* pFnOpenMail = NULL;

	if ( ! pFnOpenMail )
		pFnOpenMail = (UFunction*) UObject::GObjObjects()->Data[ 50389 ];

	ANowAtlasAvatarNpcMailRecive_eventOpenMail_Parms OpenMail_Parms;

	this->ProcessEvent ( pFnOpenMail, &OpenMail_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpcMailRecive.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcMailRecive::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50386 ];

	ANowAtlasAvatarNpcMailRecive_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcMailRecive.GetMailIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarNpcMailRecive::GetMailIndex ( )
{
	static UFunction* pFnGetMailIndex = NULL;

	if ( ! pFnGetMailIndex )
		pFnGetMailIndex = (UFunction*) UObject::GObjObjects()->Data[ 50384 ];

	ANowAtlasAvatarNpcMailRecive_execGetMailIndex_Parms GetMailIndex_Parms;

	pFnGetMailIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMailIndex, &GetMailIndex_Parms, NULL );

	pFnGetMailIndex->FunctionFlags |= 0x400;

	return GetMailIndex_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcNoMove.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcNoMove::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50413 ];

	ANowAtlasAvatarNpcNoMove_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcQuestGiver.OpenUserInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarNpcQuestGiver::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = (UFunction*) UObject::GObjObjects()->Data[ 50425 ];

	ANowAtlasAvatarNpcQuestGiver_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpcQuestGiver.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcQuestGiver::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50422 ];

	ANowAtlasAvatarNpcQuestGiver_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcTalker.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcTalker::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50438 ];

	ANowAtlasAvatarNpcTalker_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcVendor.CheckUseDist
// [0x00020000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarNpcVendor::CheckUseDist ( )
{
	static UFunction* pFnCheckUseDist = NULL;

	if ( ! pFnCheckUseDist )
		pFnCheckUseDist = (UFunction*) UObject::GObjObjects()->Data[ 50449 ];

	ANowAtlasAvatarNpcVendor_execCheckUseDist_Parms CheckUseDist_Parms;

	this->ProcessEvent ( pFnCheckUseDist, &CheckUseDist_Parms, NULL );

	return CheckUseDist_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcVendor.OpenScene
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarNpcVendor::OpenScene ( )
{
	static UFunction* pFnOpenScene = NULL;

	if ( ! pFnOpenScene )
		pFnOpenScene = (UFunction*) UObject::GObjObjects()->Data[ 50448 ];

	ANowAtlasAvatarNpcVendor_execOpenScene_Parms OpenScene_Parms;

	pFnOpenScene->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenScene, &OpenScene_Parms, NULL );

	pFnOpenScene->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarNpcVendor.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcVendor::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50445 ];

	ANowAtlasAvatarNpcVendor_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcTutorialTrade.openVendorGUI
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarNpcTutorialTrade::openVendorGUI ( )
{
	static UFunction* pFnopenVendorGUI = NULL;

	if ( ! pFnopenVendorGUI )
		pFnopenVendorGUI = (UFunction*) UObject::GObjObjects()->Data[ 50460 ];

	ANowAtlasAvatarNpcTutorialTrade_execopenVendorGUI_Parms openVendorGUI_Parms;

	pFnopenVendorGUI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnopenVendorGUI, &openVendorGUI_Parms, NULL );

	pFnopenVendorGUI->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarNpcTutorialTrade.OpenScene
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarNpcTutorialTrade::OpenScene ( )
{
	static UFunction* pFnOpenScene = NULL;

	if ( ! pFnOpenScene )
		pFnOpenScene = (UFunction*) UObject::GObjObjects()->Data[ 50459 ];

	ANowAtlasAvatarNpcTutorialTrade_execOpenScene_Parms OpenScene_Parms;

	pFnOpenScene->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenScene, &OpenScene_Parms, NULL );

	pFnOpenScene->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarNpcTutorialTrade.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcTutorialTrade::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50456 ];

	ANowAtlasAvatarNpcTutorialTrade_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerVendor.FixMyPosition
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarPlayerVendor::FixMyPosition ( )
{
	static UFunction* pFnFixMyPosition = NULL;

	if ( ! pFnFixMyPosition )
		pFnFixMyPosition = (UFunction*) UObject::GObjObjects()->Data[ 51234 ];

	ANowAtlasAvatarPlayerVendor_execFixMyPosition_Parms FixMyPosition_Parms;

	this->ProcessEvent ( pFnFixMyPosition, &FixMyPosition_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerVendor.getVendor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatar*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatar* ANowAtlasAvatarPlayerVendor::eventgetVendor ( )
{
	static UFunction* pFngetVendor = NULL;

	if ( ! pFngetVendor )
		pFngetVendor = (UFunction*) UObject::GObjObjects()->Data[ 51229 ];

	ANowAtlasAvatarPlayerVendor_eventgetVendor_Parms getVendor_Parms;

	this->ProcessEvent ( pFngetVendor, &getVendor_Parms, NULL );

	return getVendor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerVendor.sendMessageToVendor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarPlayerVendor::eventsendMessageToVendor ( struct FString Message )
{
	static UFunction* pFnsendMessageToVendor = NULL;

	if ( ! pFnsendMessageToVendor )
		pFnsendMessageToVendor = (UFunction*) UObject::GObjObjects()->Data[ 51224 ];

	ANowAtlasAvatarPlayerVendor_eventsendMessageToVendor_Parms sendMessageToVendor_Parms;
	memcpy ( &sendMessageToVendor_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnsendMessageToVendor, &sendMessageToVendor_Parms, NULL );

	return sendMessageToVendor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerVendor.OpenUserInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerVendor::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = (UFunction*) UObject::GObjObjects()->Data[ 51217 ];

	ANowAtlasAvatarPlayerVendor_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerVendor.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerVendor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51216 ];

	ANowAtlasAvatarPlayerVendor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerVendor.Use
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarPlayerVendor::Use ( )
{
	static UFunction* pFnUse = NULL;

	if ( ! pFnUse )
		pFnUse = (UFunction*) UObject::GObjObjects()->Data[ 51215 ];

	ANowAtlasAvatarPlayerVendor_execUse_Parms Use_Parms;

	pFnUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUse, &Use_Parms, NULL );

	pFnUse->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarTellUse.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarTellUse::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 51592 ];

	ANowAtlasAvatarTellUse_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTellUseNpc.SpawnHitFx
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// unsigned long                  ClientFeedBack                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIgnoreParticles               ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarTellUseNpc::eventSpawnHitFx ( struct FVector HitLocation, unsigned long ClientFeedBack, unsigned long bIgnoreParticles )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = (UFunction*) UObject::GObjObjects()->Data[ 51599 ];

	ANowAtlasAvatarTellUseNpc_eventSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.HitLocation, &HitLocation, 0xC );
	SpawnHitFx_Parms.ClientFeedBack = ClientFeedBack;
	SpawnHitFx_Parms.bIgnoreParticles = bIgnoreParticles;

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarStM.DoPendingFindGoodSpot
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarStM::eventDoPendingFindGoodSpot ( )
{
	static UFunction* pFnDoPendingFindGoodSpot = NULL;

	if ( ! pFnDoPendingFindGoodSpot )
		pFnDoPendingFindGoodSpot = (UFunction*) UObject::GObjObjects()->Data[ 50119 ];

	ANowAtlasAvatarStM_eventDoPendingFindGoodSpot_Parms DoPendingFindGoodSpot_Parms;

	this->ProcessEvent ( pFnDoPendingFindGoodSpot, &DoPendingFindGoodSpot_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarStM.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarStM::eventSpawnCorpse ( float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = (UFunction*) UObject::GObjObjects()->Data[ 50115 ];

	ANowAtlasAvatarStM_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarStM.GetAndCreateBodyFinished
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarStM::GetAndCreateBodyFinished ( )
{
	static UFunction* pFnGetAndCreateBodyFinished = NULL;

	if ( ! pFnGetAndCreateBodyFinished )
		pFnGetAndCreateBodyFinished = (UFunction*) UObject::GObjObjects()->Data[ 50114 ];

	ANowAtlasAvatarStM_execGetAndCreateBodyFinished_Parms GetAndCreateBodyFinished_Parms;

	pFnGetAndCreateBodyFinished->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateBodyFinished, &GetAndCreateBodyFinished_Parms, NULL );

	pFnGetAndCreateBodyFinished->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarStM.GetAndCreateBody
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarStM::GetAndCreateBody ( unsigned long bReInit )
{
	static UFunction* pFnGetAndCreateBody = NULL;

	if ( ! pFnGetAndCreateBody )
		pFnGetAndCreateBody = (UFunction*) UObject::GObjObjects()->Data[ 50112 ];

	ANowAtlasAvatarStM_execGetAndCreateBody_Parms GetAndCreateBody_Parms;
	GetAndCreateBody_Parms.bReInit = bReInit;

	pFnGetAndCreateBody->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateBody, &GetAndCreateBody_Parms, NULL );

	pFnGetAndCreateBody->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarBuildAvatar.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarBuildAvatar::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50127 ];

	ANowAtlasAvatarBuildAvatar_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarBuildAvatar.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarBuildAvatar::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50124 ];

	ANowAtlasAvatarBuildAvatar_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPylon::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 51301 ];

	ANowAtlasAvatarPylon_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.DustEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPylon::eventDustEffect ( )
{
	static UFunction* pFnDustEffect = NULL;

	if ( ! pFnDustEffect )
		pFnDustEffect = (UFunction*) UObject::GObjObjects()->Data[ 51299 ];

	ANowAtlasAvatarPylon_eventDustEffect_Parms DustEffect_Parms;

	this->ProcessEvent ( pFnDustEffect, &DustEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.SpawnFracture
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPylon::eventSpawnFracture ( )
{
	static UFunction* pFnSpawnFracture = NULL;

	if ( ! pFnSpawnFracture )
		pFnSpawnFracture = (UFunction*) UObject::GObjObjects()->Data[ 51291 ];

	ANowAtlasAvatarPylon_eventSpawnFracture_Parms SpawnFracture_Parms;

	this->ProcessEvent ( pFnSpawnFracture, &SpawnFracture_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.SetTier
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            NewTier                        ( CPF_Parm )
// unsigned long                  bIgnoreEffects                 ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarPylon::eventSetTier ( int NewTier, unsigned long bIgnoreEffects )
{
	static UFunction* pFnSetTier = NULL;

	if ( ! pFnSetTier )
		pFnSetTier = (UFunction*) UObject::GObjObjects()->Data[ 51288 ];

	ANowAtlasAvatarPylon_eventSetTier_Parms SetTier_Parms;
	SetTier_Parms.NewTier = NewTier;
	SetTier_Parms.bIgnoreEffects = bIgnoreEffects;

	this->ProcessEvent ( pFnSetTier, &SetTier_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.TowerDestroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPylon::eventTowerDestroyed ( )
{
	static UFunction* pFnTowerDestroyed = NULL;

	if ( ! pFnTowerDestroyed )
		pFnTowerDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 51285 ];

	ANowAtlasAvatarPylon_eventTowerDestroyed_Parms TowerDestroyed_Parms;

	this->ProcessEvent ( pFnTowerDestroyed, &TowerDestroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.ChangedAoe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPylon::eventChangedAoe ( )
{
	static UFunction* pFnChangedAoe = NULL;

	if ( ! pFnChangedAoe )
		pFnChangedAoe = (UFunction*) UObject::GObjObjects()->Data[ 51284 ];

	ANowAtlasAvatarPylon_eventChangedAoe_Parms ChangedAoe_Parms;

	this->ProcessEvent ( pFnChangedAoe, &ChangedAoe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.SetMaterialShow
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Slot                           ( CPF_Parm )
// unsigned long                  bOn                            ( CPF_Parm )

void ANowAtlasAvatarPylon::eventSetMaterialShow ( int Slot, unsigned long bOn )
{
	static UFunction* pFnSetMaterialShow = NULL;

	if ( ! pFnSetMaterialShow )
		pFnSetMaterialShow = (UFunction*) UObject::GObjObjects()->Data[ 51276 ];

	ANowAtlasAvatarPylon_eventSetMaterialShow_Parms SetMaterialShow_Parms;
	SetMaterialShow_Parms.Slot = Slot;
	SetMaterialShow_Parms.bOn = bOn;

	this->ProcessEvent ( pFnSetMaterialShow, &SetMaterialShow_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.CreateLadders
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPylon::eventCreateLadders ( )
{
	static UFunction* pFnCreateLadders = NULL;

	if ( ! pFnCreateLadders )
		pFnCreateLadders = (UFunction*) UObject::GObjObjects()->Data[ 51272 ];

	ANowAtlasAvatarPylon_eventCreateLadders_Parms CreateLadders_Parms;

	this->ProcessEvent ( pFnCreateLadders, &CreateLadders_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.PlayHitEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          HpChange                       ( CPF_Parm )

void ANowAtlasAvatarPylon::eventPlayHitEffect ( float HpChange )
{
	static UFunction* pFnPlayHitEffect = NULL;

	if ( ! pFnPlayHitEffect )
		pFnPlayHitEffect = (UFunction*) UObject::GObjObjects()->Data[ 51269 ];

	ANowAtlasAvatarPylon_eventPlayHitEffect_Parms PlayHitEffect_Parms;
	PlayHitEffect_Parms.HpChange = HpChange;

	this->ProcessEvent ( pFnPlayHitEffect, &PlayHitEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPylon::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51268 ];

	ANowAtlasAvatarPylon_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.WasJustCreated
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPylon::WasJustCreated ( )
{
	static UFunction* pFnWasJustCreated = NULL;

	if ( ! pFnWasJustCreated )
		pFnWasJustCreated = (UFunction*) UObject::GObjObjects()->Data[ 51266 ];

	ANowAtlasAvatarPylon_execWasJustCreated_Parms WasJustCreated_Parms;

	this->ProcessEvent ( pFnWasJustCreated, &WasJustCreated_Parms, NULL );

	return WasJustCreated_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.UsedSign
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )

bool ANowAtlasAvatarPylon::eventUsedSign ( class APlayerController* PC )
{
	static UFunction* pFnUsedSign = NULL;

	if ( ! pFnUsedSign )
		pFnUsedSign = (UFunction*) UObject::GObjObjects()->Data[ 51261 ];

	ANowAtlasAvatarPylon_eventUsedSign_Parms UsedSign_Parms;
	UsedSign_Parms.PC = PC;

	this->ProcessEvent ( pFnUsedSign, &UsedSign_Parms, NULL );

	return UsedSign_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatarPylon::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 51259 ];

	ANowAtlasAvatarPylon_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPylon.GetLastRoundInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPylon::GetLastRoundInfo ( )
{
	static UFunction* pFnGetLastRoundInfo = NULL;

	if ( ! pFnGetLastRoundInfo )
		pFnGetLastRoundInfo = (UFunction*) UObject::GObjObjects()->Data[ 51257 ];

	ANowAtlasAvatarPylon_execGetLastRoundInfo_Parms GetLastRoundInfo_Parms;

	pFnGetLastRoundInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLastRoundInfo, &GetLastRoundInfo_Parms, NULL );

	pFnGetLastRoundInfo->FunctionFlags |= 0x400;

	return GetLastRoundInfo_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.GetGuildName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPylon::GetGuildName ( )
{
	static UFunction* pFnGetGuildName = NULL;

	if ( ! pFnGetGuildName )
		pFnGetGuildName = (UFunction*) UObject::GObjObjects()->Data[ 51255 ];

	ANowAtlasAvatarPylon_execGetGuildName_Parms GetGuildName_Parms;

	pFnGetGuildName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuildName, &GetGuildName_Parms, NULL );

	pFnGetGuildName->FunctionFlags |= 0x400;

	return GetGuildName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.GetPylonGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPylon::GetPylonGuid ( )
{
	static UFunction* pFnGetPylonGuid = NULL;

	if ( ! pFnGetPylonGuid )
		pFnGetPylonGuid = (UFunction*) UObject::GObjObjects()->Data[ 51253 ];

	ANowAtlasAvatarPylon_execGetPylonGuid_Parms GetPylonGuid_Parms;

	pFnGetPylonGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPylonGuid, &GetPylonGuid_Parms, NULL );

	pFnGetPylonGuid->FunctionFlags |= 0x400;

	return GetPylonGuid_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarPylon::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 51250 ];

	ANowAtlasAvatarPylon_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.InitPylon
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarPylon::InitPylon ( )
{
	static UFunction* pFnInitPylon = NULL;

	if ( ! pFnInitPylon )
		pFnInitPylon = (UFunction*) UObject::GObjObjects()->Data[ 51249 ];

	ANowAtlasAvatarPylon_execInitPylon_Parms InitPylon_Parms;

	pFnInitPylon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitPylon, &InitPylon_Parms, NULL );

	pFnInitPylon->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.FixupGoodSpot
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vPos                           ( CPF_Parm | CPF_OutParm )

bool ANowAtlasAvatarTerritoryStructure::FixupGoodSpot ( struct FVector* vPos )
{
	static UFunction* pFnFixupGoodSpot = NULL;

	if ( ! pFnFixupGoodSpot )
		pFnFixupGoodSpot = (UFunction*) UObject::GObjObjects()->Data[ 49063 ];

	ANowAtlasAvatarTerritoryStructure_execFixupGoodSpot_Parms FixupGoodSpot_Parms;

	this->ProcessEvent ( pFnFixupGoodSpot, &FixupGoodSpot_Parms, NULL );

	if ( vPos )
		memcpy ( vPos, &FixupGoodSpot_Parms.vPos, 0xC );

	return FixupGoodSpot_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarTerritoryStructure::eventTick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 51709 ];

	ANowAtlasAvatarTerritoryStructure_eventTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.MoveToGround
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::eventMoveToGround ( )
{
	static UFunction* pFnMoveToGround = NULL;

	if ( ! pFnMoveToGround )
		pFnMoveToGround = (UFunction*) UObject::GObjObjects()->Data[ 51708 ];

	ANowAtlasAvatarTerritoryStructure_eventMoveToGround_Parms MoveToGround_Parms;

	this->ProcessEvent ( pFnMoveToGround, &MoveToGround_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetNowPawn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* ANowAtlasAvatarTerritoryStructure::eventGetNowPawn ( )
{
	static UFunction* pFnGetNowPawn = NULL;

	if ( ! pFnGetNowPawn )
		pFnGetNowPawn = (UFunction*) UObject::GObjObjects()->Data[ 51706 ];

	ANowAtlasAvatarTerritoryStructure_eventGetNowPawn_Parms GetNowPawn_Parms;

	this->ProcessEvent ( pFnGetNowPawn, &GetNowPawn_Parms, NULL );

	return GetNowPawn_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.SpawnCorpse
// [0x00024800] ( FUNC_Event )
// Parameters infos:
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarTerritoryStructure::eventSpawnCorpse ( float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = (UFunction*) UObject::GObjObjects()->Data[ 51702 ];

	ANowAtlasAvatarTerritoryStructure_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.WasJustCreated
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarTerritoryStructure::WasJustCreated ( )
{
	static UFunction* pFnWasJustCreated = NULL;

	if ( ! pFnWasJustCreated )
		pFnWasJustCreated = (UFunction*) UObject::GObjObjects()->Data[ 51700 ];

	ANowAtlasAvatarTerritoryStructure_execWasJustCreated_Parms WasJustCreated_Parms;

	this->ProcessEvent ( pFnWasJustCreated, &WasJustCreated_Parms, NULL );

	return WasJustCreated_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.SpawnFracture
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::eventSpawnFracture ( )
{
	static UFunction* pFnSpawnFracture = NULL;

	if ( ! pFnSpawnFracture )
		pFnSpawnFracture = (UFunction*) UObject::GObjObjects()->Data[ 51696 ];

	ANowAtlasAvatarTerritoryStructure_eventSpawnFracture_Parms SpawnFracture_Parms;

	this->ProcessEvent ( pFnSpawnFracture, &SpawnFracture_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.LeaveDecal
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::LeaveDecal ( )
{
	static UFunction* pFnLeaveDecal = NULL;

	if ( ! pFnLeaveDecal )
		pFnLeaveDecal = (UFunction*) UObject::GObjObjects()->Data[ 51688 ];

	ANowAtlasAvatarTerritoryStructure_execLeaveDecal_Parms LeaveDecal_Parms;

	this->ProcessEvent ( pFnLeaveDecal, &LeaveDecal_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.StructureDestroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::eventStructureDestroyed ( )
{
	static UFunction* pFnStructureDestroyed = NULL;

	if ( ! pFnStructureDestroyed )
		pFnStructureDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 51686 ];

	ANowAtlasAvatarTerritoryStructure_eventStructureDestroyed_Parms StructureDestroyed_Parms;

	this->ProcessEvent ( pFnStructureDestroyed, &StructureDestroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.PlayStageDownEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::eventPlayStageDownEffect ( )
{
	static UFunction* pFnPlayStageDownEffect = NULL;

	if ( ! pFnPlayStageDownEffect )
		pFnPlayStageDownEffect = (UFunction*) UObject::GObjObjects()->Data[ 51685 ];

	ANowAtlasAvatarTerritoryStructure_eventPlayStageDownEffect_Parms PlayStageDownEffect_Parms;

	this->ProcessEvent ( pFnPlayStageDownEffect, &PlayStageDownEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetRandomPointOnBuilding
// [0x00C20002] 
// Parameters infos:
// struct FVector                 vHitLocation                   ( CPF_Parm | CPF_OutParm )
// struct FVector                 vHitNormal                     ( CPF_Parm | CPF_OutParm )

void ANowAtlasAvatarTerritoryStructure::GetRandomPointOnBuilding ( struct FVector* vHitLocation, struct FVector* vHitNormal )
{
	static UFunction* pFnGetRandomPointOnBuilding = NULL;

	if ( ! pFnGetRandomPointOnBuilding )
		pFnGetRandomPointOnBuilding = (UFunction*) UObject::GObjObjects()->Data[ 51680 ];

	ANowAtlasAvatarTerritoryStructure_execGetRandomPointOnBuilding_Parms GetRandomPointOnBuilding_Parms;

	this->ProcessEvent ( pFnGetRandomPointOnBuilding, &GetRandomPointOnBuilding_Parms, NULL );

	if ( vHitLocation )
		memcpy ( vHitLocation, &GetRandomPointOnBuilding_Parms.vHitLocation, 0xC );

	if ( vHitNormal )
		memcpy ( vHitNormal, &GetRandomPointOnBuilding_Parms.vHitNormal, 0xC );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.PlayDamagedEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::eventPlayDamagedEffect ( )
{
	static UFunction* pFnPlayDamagedEffect = NULL;

	if ( ! pFnPlayDamagedEffect )
		pFnPlayDamagedEffect = (UFunction*) UObject::GObjObjects()->Data[ 51677 ];

	ANowAtlasAvatarTerritoryStructure_eventPlayDamagedEffect_Parms PlayDamagedEffect_Parms;

	this->ProcessEvent ( pFnPlayDamagedEffect, &PlayDamagedEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.PlayRepairEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::eventPlayRepairEffect ( )
{
	static UFunction* pFnPlayRepairEffect = NULL;

	if ( ! pFnPlayRepairEffect )
		pFnPlayRepairEffect = (UFunction*) UObject::GObjObjects()->Data[ 51674 ];

	ANowAtlasAvatarTerritoryStructure_eventPlayRepairEffect_Parms PlayRepairEffect_Parms;

	this->ProcessEvent ( pFnPlayRepairEffect, &PlayRepairEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.TSHealthUpdate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fNewHealth                     ( CPF_Parm )

void ANowAtlasAvatarTerritoryStructure::eventTSHealthUpdate ( float fNewHealth )
{
	static UFunction* pFnTSHealthUpdate = NULL;

	if ( ! pFnTSHealthUpdate )
		pFnTSHealthUpdate = (UFunction*) UObject::GObjObjects()->Data[ 51672 ];

	ANowAtlasAvatarTerritoryStructure_eventTSHealthUpdate_Parms TSHealthUpdate_Parms;
	TSHealthUpdate_Parms.fNewHealth = fNewHealth;

	this->ProcessEvent ( pFnTSHealthUpdate, &TSHealthUpdate_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetInteractionString
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarTerritoryStructure::eventGetInteractionString ( )
{
	static UFunction* pFnGetInteractionString = NULL;

	if ( ! pFnGetInteractionString )
		pFnGetInteractionString = (UFunction*) UObject::GObjObjects()->Data[ 51670 ];

	ANowAtlasAvatarTerritoryStructure_eventGetInteractionString_Parms GetInteractionString_Parms;

	this->ProcessEvent ( pFnGetInteractionString, &GetInteractionString_Parms, NULL );

	return GetInteractionString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.SpawnStructureAdd
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  NewClass                       ( CPF_Parm )
// struct FVector                 vPos                           ( CPF_Parm )
// float                          fYaw                           ( CPF_Parm )

void ANowAtlasAvatarTerritoryStructure::eventSpawnStructureAdd ( class UClass* NewClass, struct FVector vPos, float fYaw )
{
	static UFunction* pFnSpawnStructureAdd = NULL;

	if ( ! pFnSpawnStructureAdd )
		pFnSpawnStructureAdd = (UFunction*) UObject::GObjObjects()->Data[ 51664 ];

	ANowAtlasAvatarTerritoryStructure_eventSpawnStructureAdd_Parms SpawnStructureAdd_Parms;
	SpawnStructureAdd_Parms.NewClass = NewClass;
	memcpy ( &SpawnStructureAdd_Parms.vPos, &vPos, 0xC );
	SpawnStructureAdd_Parms.fYaw = fYaw;

	this->ProcessEvent ( pFnSpawnStructureAdd, &SpawnStructureAdd_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.setWallConnectionPoints
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::eventsetWallConnectionPoints ( )
{
	static UFunction* pFnsetWallConnectionPoints = NULL;

	if ( ! pFnsetWallConnectionPoints )
		pFnsetWallConnectionPoints = (UFunction*) UObject::GObjObjects()->Data[ 51662 ];

	ANowAtlasAvatarTerritoryStructure_eventsetWallConnectionPoints_Parms setWallConnectionPoints_Parms;

	this->ProcessEvent ( pFnsetWallConnectionPoints, &setWallConnectionPoints_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.SetPendingCheckForMeshChange
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::eventSetPendingCheckForMeshChange ( )
{
	static UFunction* pFnSetPendingCheckForMeshChange = NULL;

	if ( ! pFnSetPendingCheckForMeshChange )
		pFnSetPendingCheckForMeshChange = (UFunction*) UObject::GObjObjects()->Data[ 51661 ];

	ANowAtlasAvatarTerritoryStructure_eventSetPendingCheckForMeshChange_Parms SetPendingCheckForMeshChange_Parms;

	this->ProcessEvent ( pFnSetPendingCheckForMeshChange, &SetPendingCheckForMeshChange_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.SetActivateCrossNodeAvatarList
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::SetActivateCrossNodeAvatarList ( )
{
	static UFunction* pFnSetActivateCrossNodeAvatarList = NULL;

	if ( ! pFnSetActivateCrossNodeAvatarList )
		pFnSetActivateCrossNodeAvatarList = (UFunction*) UObject::GObjObjects()->Data[ 51660 ];

	ANowAtlasAvatarTerritoryStructure_execSetActivateCrossNodeAvatarList_Parms SetActivateCrossNodeAvatarList_Parms;

	this->ProcessEvent ( pFnSetActivateCrossNodeAvatarList, &SetActivateCrossNodeAvatarList_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.RemoveStructureAdds
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::eventRemoveStructureAdds ( )
{
	static UFunction* pFnRemoveStructureAdds = NULL;

	if ( ! pFnRemoveStructureAdds )
		pFnRemoveStructureAdds = (UFunction*) UObject::GObjObjects()->Data[ 51658 ];

	ANowAtlasAvatarTerritoryStructure_eventRemoveStructureAdds_Parms RemoveStructureAdds_Parms;

	this->ProcessEvent ( pFnRemoveStructureAdds, &RemoveStructureAdds_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.Destroyed
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 51657 ];

	ANowAtlasAvatarTerritoryStructure_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51656 ];

	ANowAtlasAvatarTerritoryStructure_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.InitStructureAdds
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo_PlayerStructure* pPlayerStructureCI             ( CPF_Parm )

void ANowAtlasAvatarTerritoryStructure::InitStructureAdds ( class UContentInfo_PlayerStructure* pPlayerStructureCI )
{
	static UFunction* pFnInitStructureAdds = NULL;

	if ( ! pFnInitStructureAdds )
		pFnInitStructureAdds = (UFunction*) UObject::GObjObjects()->Data[ 51654 ];

	ANowAtlasAvatarTerritoryStructure_execInitStructureAdds_Parms InitStructureAdds_Parms;
	InitStructureAdds_Parms.pPlayerStructureCI = pPlayerStructureCI;

	pFnInitStructureAdds->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitStructureAdds, &InitStructureAdds_Parms, NULL );

	pFnInitStructureAdds->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.SetNewState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iNewState                      ( CPF_Parm )

void ANowAtlasAvatarTerritoryStructure::SetNewState ( int iNewState )
{
	static UFunction* pFnSetNewState = NULL;

	if ( ! pFnSetNewState )
		pFnSetNewState = (UFunction*) UObject::GObjObjects()->Data[ 51652 ];

	ANowAtlasAvatarTerritoryStructure_execSetNewState_Parms SetNewState_Parms;
	SetNewState_Parms.iNewState = iNewState;

	pFnSetNewState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNewState, &SetNewState_Parms, NULL );

	pFnSetNewState->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetNextStageMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UStaticMesh*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UStaticMesh* ANowAtlasAvatarTerritoryStructure::GetNextStageMesh ( )
{
	static UFunction* pFnGetNextStageMesh = NULL;

	if ( ! pFnGetNextStageMesh )
		pFnGetNextStageMesh = (UFunction*) UObject::GObjObjects()->Data[ 46899 ];

	ANowAtlasAvatarTerritoryStructure_execGetNextStageMesh_Parms GetNextStageMesh_Parms;

	pFnGetNextStageMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNextStageMesh, &GetNextStageMesh_Parms, NULL );

	pFnGetNextStageMesh->FunctionFlags |= 0x400;

	return GetNextStageMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetTSSlotOffset
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlotIndex                     ( CPF_Parm )
// unsigned long                  bOnlyFreeSlots                 ( CPF_Parm )

struct FVector ANowAtlasAvatarTerritoryStructure::GetTSSlotOffset ( int iSlotIndex, unsigned long bOnlyFreeSlots )
{
	static UFunction* pFnGetTSSlotOffset = NULL;

	if ( ! pFnGetTSSlotOffset )
		pFnGetTSSlotOffset = (UFunction*) UObject::GObjObjects()->Data[ 46860 ];

	ANowAtlasAvatarTerritoryStructure_execGetTSSlotOffset_Parms GetTSSlotOffset_Parms;
	GetTSSlotOffset_Parms.iSlotIndex = iSlotIndex;
	GetTSSlotOffset_Parms.bOnlyFreeSlots = bOnlyFreeSlots;

	pFnGetTSSlotOffset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTSSlotOffset, &GetTSSlotOffset_Parms, NULL );

	pFnGetTSSlotOffset->FunctionFlags |= 0x400;

	return GetTSSlotOffset_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarTerritoryStructure::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 51647 ];

	ANowAtlasAvatarTerritoryStructure_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatarTerritoryStructure::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 51645 ];

	ANowAtlasAvatarTerritoryStructure_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.CheckForMeshChange
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarTerritoryStructure::CheckForMeshChange ( )
{
	static UFunction* pFnCheckForMeshChange = NULL;

	if ( ! pFnCheckForMeshChange )
		pFnCheckForMeshChange = (UFunction*) UObject::GObjObjects()->Data[ 51644 ];

	ANowAtlasAvatarTerritoryStructure_execCheckForMeshChange_Parms CheckForMeshChange_Parms;

	pFnCheckForMeshChange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckForMeshChange, &CheckForMeshChange_Parms, NULL );

	pFnCheckForMeshChange->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetMaxSlots
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarTerritoryStructure::GetMaxSlots ( )
{
	static UFunction* pFnGetMaxSlots = NULL;

	if ( ! pFnGetMaxSlots )
		pFnGetMaxSlots = (UFunction*) UObject::GObjObjects()->Data[ 46858 ];

	ANowAtlasAvatarTerritoryStructure_execGetMaxSlots_Parms GetMaxSlots_Parms;

	pFnGetMaxSlots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxSlots, &GetMaxSlots_Parms, NULL );

	pFnGetMaxSlots->FunctionFlags |= 0x400;

	return GetMaxSlots_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.CalcStageMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarTerritoryStructure::CalcStageMesh ( )
{
	static UFunction* pFnCalcStageMesh = NULL;

	if ( ! pFnCalcStageMesh )
		pFnCalcStageMesh = (UFunction*) UObject::GObjObjects()->Data[ 51642 ];

	ANowAtlasAvatarTerritoryStructure_execCalcStageMesh_Parms CalcStageMesh_Parms;

	pFnCalcStageMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcStageMesh, &CalcStageMesh_Parms, NULL );

	pFnCalcStageMesh->FunctionFlags |= 0x400;

	return CalcStageMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetMetalMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarTerritoryStructure::GetMetalMax ( )
{
	static UFunction* pFnGetMetalMax = NULL;

	if ( ! pFnGetMetalMax )
		pFnGetMetalMax = (UFunction*) UObject::GObjObjects()->Data[ 51640 ];

	ANowAtlasAvatarTerritoryStructure_execGetMetalMax_Parms GetMetalMax_Parms;

	pFnGetMetalMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMetalMax, &GetMetalMax_Parms, NULL );

	pFnGetMetalMax->FunctionFlags |= 0x400;

	return GetMetalMax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetMetal
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarTerritoryStructure::GetMetal ( )
{
	static UFunction* pFnGetMetal = NULL;

	if ( ! pFnGetMetal )
		pFnGetMetal = (UFunction*) UObject::GObjObjects()->Data[ 51638 ];

	ANowAtlasAvatarTerritoryStructure_execGetMetal_Parms GetMetal_Parms;

	pFnGetMetal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMetal, &GetMetal_Parms, NULL );

	pFnGetMetal->FunctionFlags |= 0x400;

	return GetMetal_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetStoneMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarTerritoryStructure::GetStoneMax ( )
{
	static UFunction* pFnGetStoneMax = NULL;

	if ( ! pFnGetStoneMax )
		pFnGetStoneMax = (UFunction*) UObject::GObjObjects()->Data[ 51636 ];

	ANowAtlasAvatarTerritoryStructure_execGetStoneMax_Parms GetStoneMax_Parms;

	pFnGetStoneMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStoneMax, &GetStoneMax_Parms, NULL );

	pFnGetStoneMax->FunctionFlags |= 0x400;

	return GetStoneMax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetStone
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarTerritoryStructure::GetStone ( )
{
	static UFunction* pFnGetStone = NULL;

	if ( ! pFnGetStone )
		pFnGetStone = (UFunction*) UObject::GObjObjects()->Data[ 51634 ];

	ANowAtlasAvatarTerritoryStructure_execGetStone_Parms GetStone_Parms;

	pFnGetStone->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStone, &GetStone_Parms, NULL );

	pFnGetStone->FunctionFlags |= 0x400;

	return GetStone_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetWoodMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarTerritoryStructure::GetWoodMax ( )
{
	static UFunction* pFnGetWoodMax = NULL;

	if ( ! pFnGetWoodMax )
		pFnGetWoodMax = (UFunction*) UObject::GObjObjects()->Data[ 51632 ];

	ANowAtlasAvatarTerritoryStructure_execGetWoodMax_Parms GetWoodMax_Parms;

	pFnGetWoodMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWoodMax, &GetWoodMax_Parms, NULL );

	pFnGetWoodMax->FunctionFlags |= 0x400;

	return GetWoodMax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetWood
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarTerritoryStructure::GetWood ( )
{
	static UFunction* pFnGetWood = NULL;

	if ( ! pFnGetWood )
		pFnGetWood = (UFunction*) UObject::GObjObjects()->Data[ 51630 ];

	ANowAtlasAvatarTerritoryStructure_execGetWood_Parms GetWood_Parms;

	pFnGetWood->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWood, &GetWood_Parms, NULL );

	pFnGetWood->FunctionFlags |= 0x400;

	return GetWood_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetHealthMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarTerritoryStructure::GetHealthMax ( )
{
	static UFunction* pFnGetHealthMax = NULL;

	if ( ! pFnGetHealthMax )
		pFnGetHealthMax = (UFunction*) UObject::GObjObjects()->Data[ 51628 ];

	ANowAtlasAvatarTerritoryStructure_execGetHealthMax_Parms GetHealthMax_Parms;

	pFnGetHealthMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealthMax, &GetHealthMax_Parms, NULL );

	pFnGetHealthMax->FunctionFlags |= 0x400;

	return GetHealthMax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryStructure.GetHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarTerritoryStructure::GetHealth ( )
{
	static UFunction* pFnGetHealth = NULL;

	if ( ! pFnGetHealth )
		pFnGetHealth = (UFunction*) UObject::GObjObjects()->Data[ 51626 ];

	ANowAtlasAvatarTerritoryStructure_execGetHealth_Parms GetHealth_Parms;

	pFnGetHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealth, &GetHealth_Parms, NULL );

	pFnGetHealth->FunctionFlags |= 0x400;

	return GetHealth_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTerritoryAlertTower.PlayAlertSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarTerritoryAlertTower::eventPlayAlertSound ( )
{
	static UFunction* pFnPlayAlertSound = NULL;

	if ( ! pFnPlayAlertSound )
		pFnPlayAlertSound = (UFunction*) UObject::GObjObjects()->Data[ 51721 ];

	ANowAtlasAvatarTerritoryAlertTower_eventPlayAlertSound_Parms PlayAlertSound_Parms;

	this->ProcessEvent ( pFnPlayAlertSound, &PlayAlertSound_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryAlertTower.SetNewState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iNewState                      ( CPF_Parm )

void ANowAtlasAvatarTerritoryAlertTower::SetNewState ( int iNewState )
{
	static UFunction* pFnSetNewState = NULL;

	if ( ! pFnSetNewState )
		pFnSetNewState = (UFunction*) UObject::GObjObjects()->Data[ 51719 ];

	ANowAtlasAvatarTerritoryAlertTower_execSetNewState_Parms SetNewState_Parms;
	SetNewState_Parms.iNewState = iNewState;

	pFnSetNewState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNewState, &SetNewState_Parms, NULL );

	pFnSetNewState->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarTerritoryRelic.Tick
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarTerritoryRelic::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 51746 ];

	ANowAtlasAvatarTerritoryRelic_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryRelic.PlaceRelic
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarTerritoryRelic::PlaceRelic ( )
{
	static UFunction* pFnPlaceRelic = NULL;

	if ( ! pFnPlaceRelic )
		pFnPlaceRelic = (UFunction*) UObject::GObjObjects()->Data[ 51744 ];

	ANowAtlasAvatarTerritoryRelic_execPlaceRelic_Parms PlaceRelic_Parms;

	this->ProcessEvent ( pFnPlaceRelic, &PlaceRelic_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryRelic.SetRelicState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iNewState                      ( CPF_Parm )

void ANowAtlasAvatarTerritoryRelic::eventSetRelicState ( int iNewState )
{
	static UFunction* pFnSetRelicState = NULL;

	if ( ! pFnSetRelicState )
		pFnSetRelicState = (UFunction*) UObject::GObjObjects()->Data[ 51742 ];

	ANowAtlasAvatarTerritoryRelic_eventSetRelicState_Parms SetRelicState_Parms;
	SetRelicState_Parms.iNewState = iNewState;

	this->ProcessEvent ( pFnSetRelicState, &SetRelicState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarTerritoryRelic.UseRelic
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// class APlayerController*       PC                             ( CPF_Parm )

void ANowAtlasAvatarTerritoryRelic::UseRelic ( struct FString sGuid, class APlayerController* PC )
{
	static UFunction* pFnUseRelic = NULL;

	if ( ! pFnUseRelic )
		pFnUseRelic = (UFunction*) UObject::GObjObjects()->Data[ 51739 ];

	ANowAtlasAvatarTerritoryRelic_execUseRelic_Parms UseRelic_Parms;
	memcpy ( &UseRelic_Parms.sGuid, &sGuid, 0xC );
	UseRelic_Parms.PC = PC;

	pFnUseRelic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseRelic, &UseRelic_Parms, NULL );

	pFnUseRelic->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarTerritoryRelic.SetNewState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iNewState                      ( CPF_Parm )

void ANowAtlasAvatarTerritoryRelic::SetNewState ( int iNewState )
{
	static UFunction* pFnSetNewState = NULL;

	if ( ! pFnSetNewState )
		pFnSetNewState = (UFunction*) UObject::GObjObjects()->Data[ 51737 ];

	ANowAtlasAvatarTerritoryRelic_execSetNewState_Parms SetNewState_Parms;
	SetNewState_Parms.iNewState = iNewState;

	pFnSetNewState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNewState, &SetNewState_Parms, NULL );

	pFnSetNewState->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarTerritoryWall.GetInteractionString
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarTerritoryWall::eventGetInteractionString ( )
{
	static UFunction* pFnGetInteractionString = NULL;

	if ( ! pFnGetInteractionString )
		pFnGetInteractionString = (UFunction*) UObject::GObjObjects()->Data[ 51755 ];

	ANowAtlasAvatarTerritoryWall_eventGetInteractionString_Parms GetInteractionString_Parms;

	this->ProcessEvent ( pFnGetInteractionString, &GetInteractionString_Parms, NULL );

	return GetInteractionString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarDebugBox.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarDebugBox::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50132 ];

	ANowAtlasAvatarDebugBox_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGameBoard.OpenUserInterface
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarGameBoard::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = (UFunction*) UObject::GObjObjects()->Data[ 50188 ];

	ANowAtlasAvatarGameBoard_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGameBoard.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarGameBoard::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50185 ];

	ANowAtlasAvatarGameBoard_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcStatic.OpenUserInterface
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarNpcStatic::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = (UFunction*) UObject::GObjObjects()->Data[ 50399 ];

	ANowAtlasAvatarNpcStatic_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpcStatic.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatarNpcStatic::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 50397 ];

	ANowAtlasAvatarNpcStatic_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarNpcStatic.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcStatic::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 50394 ];

	ANowAtlasAvatarNpcStatic_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcMailSend.OpenUserInterface
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarNpcMailSend::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = (UFunction*) UObject::GObjObjects()->Data[ 50408 ];

	ANowAtlasAvatarNpcMailSend_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpcMailSend.GetMailIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarNpcMailSend::GetMailIndex ( )
{
	static UFunction* pFnGetMailIndex = NULL;

	if ( ! pFnGetMailIndex )
		pFnGetMailIndex = (UFunction*) UObject::GObjObjects()->Data[ 50406 ];

	ANowAtlasAvatarNpcMailSend_execGetMailIndex_Parms GetMailIndex_Parms;

	pFnGetMailIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMailIndex, &GetMailIndex_Parms, NULL );

	pFnGetMailIndex->FunctionFlags |= 0x400;

	return GetMailIndex_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPhysicalSpawner.SetAliveState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bAlive                         ( CPF_Parm )

void ANowAtlasAvatarPhysicalSpawner::eventSetAliveState ( unsigned long bAlive )
{
	static UFunction* pFnSetAliveState = NULL;

	if ( ! pFnSetAliveState )
		pFnSetAliveState = (UFunction*) UObject::GObjObjects()->Data[ 50562 ];

	ANowAtlasAvatarPhysicalSpawner_eventSetAliveState_Parms SetAliveState_Parms;
	SetAliveState_Parms.bAlive = bAlive;

	this->ProcessEvent ( pFnSetAliveState, &SetAliveState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPhysicalSpawner.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatarPhysicalSpawner::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 50560 ];

	ANowAtlasAvatarPhysicalSpawner_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPickable.DoFindGoodSpot
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPickable::DoFindGoodSpot ( )
{
	static UFunction* pFnDoFindGoodSpot = NULL;

	if ( ! pFnDoFindGoodSpot )
		pFnDoFindGoodSpot = (UFunction*) UObject::GObjObjects()->Data[ 50574 ];

	ANowAtlasAvatarPickable_execDoFindGoodSpot_Parms DoFindGoodSpot_Parms;

	this->ProcessEvent ( pFnDoFindGoodSpot, &DoFindGoodSpot_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPickable.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPickable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50573 ];

	ANowAtlasAvatarPickable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPickable.Gather
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarPickable::Gather ( class APlayerController* PC )
{
	static UFunction* pFnGather = NULL;

	if ( ! pFnGather )
		pFnGather = (UFunction*) UObject::GObjObjects()->Data[ 50570 ];

	ANowAtlasAvatarPickable_execGather_Parms Gather_Parms;
	Gather_Parms.PC = PC;

	pFnGather->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGather, &Gather_Parms, NULL );

	pFnGather->FunctionFlags |= 0x400;

	return Gather_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPickableRelic.DoGatherEffects
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPickableRelic::eventDoGatherEffects ( )
{
	static UFunction* pFnDoGatherEffects = NULL;

	if ( ! pFnDoGatherEffects )
		pFnDoGatherEffects = (UFunction*) UObject::GObjObjects()->Data[ 50583 ];

	ANowAtlasAvatarPickableRelic_eventDoGatherEffects_Parms DoGatherEffects_Parms;

	this->ProcessEvent ( pFnDoGatherEffects, &DoGatherEffects_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPickableRelic.Gather
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarPickableRelic::Gather ( class APlayerController* PC )
{
	static UFunction* pFnGather = NULL;

	if ( ! pFnGather )
		pFnGather = (UFunction*) UObject::GObjObjects()->Data[ 50580 ];

	ANowAtlasAvatarPickableRelic_execGather_Parms Gather_Parms;
	Gather_Parms.PC = PC;

	pFnGather->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGather, &Gather_Parms, NULL );

	pFnGather->FunctionFlags |= 0x400;

	return Gather_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::eventSpawnCorpse ( float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = (UFunction*) UObject::GObjObjects()->Data[ 51461 ];

	ANowAtlasAvatarSiegeWeapon_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.TweenToPos
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 vNewPos                        ( CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::eventTweenToPos ( struct FVector vNewPos )
{
	static UFunction* pFnTweenToPos = NULL;

	if ( ! pFnTweenToPos )
		pFnTweenToPos = (UFunction*) UObject::GObjObjects()->Data[ 51456 ];

	ANowAtlasAvatarSiegeWeapon_eventTweenToPos_Parms TweenToPos_Parms;
	memcpy ( &TweenToPos_Parms.vNewPos, &vNewPos, 0xC );

	this->ProcessEvent ( pFnTweenToPos, &TweenToPos_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.TraceBoneHit
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeWeapon::eventTraceBoneHit ( )
{
	static UFunction* pFnTraceBoneHit = NULL;

	if ( ! pFnTraceBoneHit )
		pFnTraceBoneHit = (UFunction*) UObject::GObjObjects()->Data[ 51440 ];

	ANowAtlasAvatarSiegeWeapon_eventTraceBoneHit_Parms TraceBoneHit_Parms;

	this->ProcessEvent ( pFnTraceBoneHit, &TraceBoneHit_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.Fire
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLoc                         ( CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::eventFire ( struct FVector HitLoc )
{
	static UFunction* pFnFire = NULL;

	if ( ! pFnFire )
		pFnFire = (UFunction*) UObject::GObjObjects()->Data[ 51431 ];

	ANowAtlasAvatarSiegeWeapon_eventFire_Parms Fire_Parms;
	memcpy ( &Fire_Parms.HitLoc, &HitLoc, 0xC );

	this->ProcessEvent ( pFnFire, &Fire_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.FindClosestSocket
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLoc                         ( CPF_Parm )

int ANowAtlasAvatarSiegeWeapon::FindClosestSocket ( struct FVector HitLoc )
{
	static UFunction* pFnFindClosestSocket = NULL;

	if ( ! pFnFindClosestSocket )
		pFnFindClosestSocket = (UFunction*) UObject::GObjObjects()->Data[ 51425 ];

	ANowAtlasAvatarSiegeWeapon_execFindClosestSocket_Parms FindClosestSocket_Parms;
	memcpy ( &FindClosestSocket_Parms.HitLoc, &HitLoc, 0xC );

	this->ProcessEvent ( pFnFindClosestSocket, &FindClosestSocket_Parms, NULL );

	return FindClosestSocket_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.DoFireTrace
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarSiegeWeapon::DoFireTrace ( )
{
	static UFunction* pFnDoFireTrace = NULL;

	if ( ! pFnDoFireTrace )
		pFnDoFireTrace = (UFunction*) UObject::GObjObjects()->Data[ 51417 ];

	ANowAtlasAvatarSiegeWeapon_execDoFireTrace_Parms DoFireTrace_Parms;

	this->ProcessEvent ( pFnDoFireTrace, &DoFireTrace_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.FindAndSetSockets
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeWeapon::eventFindAndSetSockets ( )
{
	static UFunction* pFnFindAndSetSockets = NULL;

	if ( ! pFnFindAndSetSockets )
		pFnFindAndSetSockets = (UFunction*) UObject::GObjObjects()->Data[ 51405 ];

	ANowAtlasAvatarSiegeWeapon_eventFindAndSetSockets_Parms FindAndSetSockets_Parms;

	this->ProcessEvent ( pFnFindAndSetSockets, &FindAndSetSockets_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.SetNewState
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            NewState                       ( CPF_Parm )
// unsigned long                  IsInit                         ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::eventSetNewState ( int NewState, unsigned long IsInit )
{
	static UFunction* pFnSetNewState = NULL;

	if ( ! pFnSetNewState )
		pFnSetNewState = (UFunction*) UObject::GObjObjects()->Data[ 51400 ];

	ANowAtlasAvatarSiegeWeapon_eventSetNewState_Parms SetNewState_Parms;
	SetNewState_Parms.NewState = NewState;
	SetNewState_Parms.IsInit = IsInit;

	this->ProcessEvent ( pFnSetNewState, &SetNewState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.Tick
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::Tick ( float DT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 51392 ];

	ANowAtlasAvatarSiegeWeapon_execTick_Parms Tick_Parms;
	Tick_Parms.DT = DT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.RotateState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewRotState                    ( CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::eventRotateState ( int NewRotState )
{
	static UFunction* pFnRotateState = NULL;

	if ( ! pFnRotateState )
		pFnRotateState = (UFunction*) UObject::GObjObjects()->Data[ 51389 ];

	ANowAtlasAvatarSiegeWeapon_eventRotateState_Parms RotateState_Parms;
	RotateState_Parms.NewRotState = NewRotState;

	this->ProcessEvent ( pFnRotateState, &RotateState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.FixupLocation
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarSiegeWeapon::FixupLocation ( )
{
	static UFunction* pFnFixupLocation = NULL;

	if ( ! pFnFixupLocation )
		pFnFixupLocation = (UFunction*) UObject::GObjObjects()->Data[ 51377 ];

	ANowAtlasAvatarSiegeWeapon_execFixupLocation_Parms FixupLocation_Parms;

	this->ProcessEvent ( pFnFixupLocation, &FixupLocation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.GetSiegeMovePos
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowAtlasAvatarSiegeWeapon::GetSiegeMovePos ( )
{
	static UFunction* pFnGetSiegeMovePos = NULL;

	if ( ! pFnGetSiegeMovePos )
		pFnGetSiegeMovePos = (UFunction*) UObject::GObjObjects()->Data[ 51371 ];

	ANowAtlasAvatarSiegeWeapon_execGetSiegeMovePos_Parms GetSiegeMovePos_Parms;

	this->ProcessEvent ( pFnGetSiegeMovePos, &GetSiegeMovePos_Parms, NULL );

	return GetSiegeMovePos_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarSiegeWeapon::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51370 ];

	ANowAtlasAvatarSiegeWeapon_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.DoSiegeMove
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 vNewPos                        ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::DoSiegeMove ( struct FVector vNewPos, class APlayerController* PC )
{
	static UFunction* pFnDoSiegeMove = NULL;

	if ( ! pFnDoSiegeMove )
		pFnDoSiegeMove = (UFunction*) UObject::GObjObjects()->Data[ 51367 ];

	ANowAtlasAvatarSiegeWeapon_execDoSiegeMove_Parms DoSiegeMove_Parms;
	memcpy ( &DoSiegeMove_Parms.vNewPos, &vNewPos, 0xC );
	DoSiegeMove_Parms.PC = PC;

	pFnDoSiegeMove->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSiegeMove, &DoSiegeMove_Parms, NULL );

	pFnDoSiegeMove->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.DoFire
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 Hit                            ( CPF_Parm )
// float                          fLength                        ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::DoFire ( struct FVector Hit, float fLength, class APlayerController* PC )
{
	static UFunction* pFnDoFire = NULL;

	if ( ! pFnDoFire )
		pFnDoFire = (UFunction*) UObject::GObjObjects()->Data[ 51363 ];

	ANowAtlasAvatarSiegeWeapon_execDoFire_Parms DoFire_Parms;
	memcpy ( &DoFire_Parms.Hit, &Hit, 0xC );
	DoFire_Parms.fLength = fLength;
	DoFire_Parms.PC = PC;

	pFnDoFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoFire, &DoFire_Parms, NULL );

	pFnDoFire->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.GetState
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarSiegeWeapon::GetState ( )
{
	static UFunction* pFnGetState = NULL;

	if ( ! pFnGetState )
		pFnGetState = (UFunction*) UObject::GObjObjects()->Data[ 51362 ];

	ANowAtlasAvatarSiegeWeapon_execGetState_Parms GetState_Parms;

	pFnGetState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetState, &GetState_Parms, NULL );

	pFnGetState->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.Load
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::Load ( class APlayerController* PC )
{
	static UFunction* pFnLoad = NULL;

	if ( ! pFnLoad )
		pFnLoad = (UFunction*) UObject::GObjObjects()->Data[ 51360 ];

	ANowAtlasAvatarSiegeWeapon_execLoad_Parms Load_Parms;
	Load_Parms.PC = PC;

	pFnLoad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoad, &Load_Parms, NULL );

	pFnLoad->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.ChangeState
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            NewState                       ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::ChangeState ( int NewState, class APlayerController* PC )
{
	static UFunction* pFnChangeState = NULL;

	if ( ! pFnChangeState )
		pFnChangeState = (UFunction*) UObject::GObjObjects()->Data[ 51357 ];

	ANowAtlasAvatarSiegeWeapon_execChangeState_Parms ChangeState_Parms;
	ChangeState_Parms.NewState = NewState;
	ChangeState_Parms.PC = PC;

	pFnChangeState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeState, &ChangeState_Parms, NULL );

	pFnChangeState->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.TurnLeft
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::TurnLeft ( class APlayerController* PC )
{
	static UFunction* pFnTurnLeft = NULL;

	if ( ! pFnTurnLeft )
		pFnTurnLeft = (UFunction*) UObject::GObjObjects()->Data[ 51355 ];

	ANowAtlasAvatarSiegeWeapon_execTurnLeft_Parms TurnLeft_Parms;
	TurnLeft_Parms.PC = PC;

	pFnTurnLeft->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTurnLeft, &TurnLeft_Parms, NULL );

	pFnTurnLeft->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.TurnRight
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::TurnRight ( class APlayerController* PC )
{
	static UFunction* pFnTurnRight = NULL;

	if ( ! pFnTurnRight )
		pFnTurnRight = (UFunction*) UObject::GObjObjects()->Data[ 51353 ];

	ANowAtlasAvatarSiegeWeapon_execTurnRight_Parms TurnRight_Parms;
	TurnRight_Parms.PC = PC;

	pFnTurnRight->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTurnRight, &TurnRight_Parms, NULL );

	pFnTurnRight->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarSiegeWeapon::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 51350 ];

	ANowAtlasAvatarSiegeWeapon_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiegeBatteringRam.DoRamState
// [0x00020002] 
// Parameters infos:
// int                            iSide                          ( CPF_Parm )

void ANowAtlasAvatarSiegeBatteringRam::DoRamState ( int iSide )
{
	static UFunction* pFnDoRamState = NULL;

	if ( ! pFnDoRamState )
		pFnDoRamState = (UFunction*) UObject::GObjObjects()->Data[ 51521 ];

	ANowAtlasAvatarSiegeBatteringRam_execDoRamState_Parms DoRamState_Parms;
	DoRamState_Parms.iSide = iSide;

	this->ProcessEvent ( pFnDoRamState, &DoRamState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeBatteringRam.GetHitTargetHitLocation
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowAtlasAvatarSiegeBatteringRam::GetHitTargetHitLocation ( )
{
	static UFunction* pFnGetHitTargetHitLocation = NULL;

	if ( ! pFnGetHitTargetHitLocation )
		pFnGetHitTargetHitLocation = (UFunction*) UObject::GObjObjects()->Data[ 51512 ];

	ANowAtlasAvatarSiegeBatteringRam_execGetHitTargetHitLocation_Parms GetHitTargetHitLocation_Parms;

	this->ProcessEvent ( pFnGetHitTargetHitLocation, &GetHitTargetHitLocation_Parms, NULL );

	return GetHitTargetHitLocation_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiegeBatteringRam.GetHitTarget
// [0x00820002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ANowAtlasAvatarSiegeBatteringRam::GetHitTarget ( )
{
	static UFunction* pFnGetHitTarget = NULL;

	if ( ! pFnGetHitTarget )
		pFnGetHitTarget = (UFunction*) UObject::GObjObjects()->Data[ 51501 ];

	ANowAtlasAvatarSiegeBatteringRam_execGetHitTarget_Parms GetHitTarget_Parms;

	this->ProcessEvent ( pFnGetHitTarget, &GetHitTarget_Parms, NULL );

	return GetHitTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiegeBatteringRam.TraceBoneHit
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeBatteringRam::eventTraceBoneHit ( )
{
	static UFunction* pFnTraceBoneHit = NULL;

	if ( ! pFnTraceBoneHit )
		pFnTraceBoneHit = (UFunction*) UObject::GObjObjects()->Data[ 51485 ];

	ANowAtlasAvatarSiegeBatteringRam_eventTraceBoneHit_Parms TraceBoneHit_Parms;

	this->ProcessEvent ( pFnTraceBoneHit, &TraceBoneHit_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeBatteringRam.SetNewState
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// int                            NewState                       ( CPF_Parm )
// unsigned long                  IsInit                         ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeBatteringRam::eventSetNewState ( int NewState, unsigned long IsInit )
{
	static UFunction* pFnSetNewState = NULL;

	if ( ! pFnSetNewState )
		pFnSetNewState = (UFunction*) UObject::GObjObjects()->Data[ 51473 ];

	ANowAtlasAvatarSiegeBatteringRam_eventSetNewState_Parms SetNewState_Parms;
	SetNewState_Parms.NewState = NewState;
	SetNewState_Parms.IsInit = IsInit;

	this->ProcessEvent ( pFnSetNewState, &SetNewState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeBatteringRam.ChangeRamState
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            iSide                          ( CPF_Parm )
// struct FString                 AvatarID                       ( CPF_Parm | CPF_NeedCtorLink )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeBatteringRam::ChangeRamState ( int iSide, struct FString AvatarID, class APlayerController* PC )
{
	static UFunction* pFnChangeRamState = NULL;

	if ( ! pFnChangeRamState )
		pFnChangeRamState = (UFunction*) UObject::GObjObjects()->Data[ 51469 ];

	ANowAtlasAvatarSiegeBatteringRam_execChangeRamState_Parms ChangeRamState_Parms;
	ChangeRamState_Parms.iSide = iSide;
	memcpy ( &ChangeRamState_Parms.AvatarID, &AvatarID, 0xC );
	ChangeRamState_Parms.PC = PC;

	pFnChangeRamState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeRamState, &ChangeRamState_Parms, NULL );

	pFnChangeRamState->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeTrebuchet.Fire
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLoc                         ( CPF_Parm )

void ANowAtlasAvatarSiegeTrebuchet::eventFire ( struct FVector HitLoc )
{
	static UFunction* pFnFire = NULL;

	if ( ! pFnFire )
		pFnFire = (UFunction*) UObject::GObjObjects()->Data[ 51585 ];

	ANowAtlasAvatarSiegeTrebuchet_eventFire_Parms Fire_Parms;
	memcpy ( &Fire_Parms.HitLoc, &HitLoc, 0xC );

	this->ProcessEvent ( pFnFire, &Fire_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeTrebuchet.SetNewState
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            NewState                       ( CPF_Parm )
// unsigned long                  IsInit                         ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeTrebuchet::eventSetNewState ( int NewState, unsigned long IsInit )
{
	static UFunction* pFnSetNewState = NULL;

	if ( ! pFnSetNewState )
		pFnSetNewState = (UFunction*) UObject::GObjObjects()->Data[ 51582 ];

	ANowAtlasAvatarSiegeTrebuchet_eventSetNewState_Parms SetNewState_Parms;
	SetNewState_Parms.NewState = NewState;
	SetNewState_Parms.IsInit = IsInit;

	this->ProcessEvent ( pFnSetNewState, &SetNewState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeTrebuchet.FixupLocation
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarSiegeTrebuchet::FixupLocation ( )
{
	static UFunction* pFnFixupLocation = NULL;

	if ( ! pFnFixupLocation )
		pFnFixupLocation = (UFunction*) UObject::GObjObjects()->Data[ 51581 ];

	ANowAtlasAvatarSiegeTrebuchet_execFixupLocation_Parms FixupLocation_Parms;

	this->ProcessEvent ( pFnFixupLocation, &FixupLocation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeTrebuchet.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarSiegeTrebuchet::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51580 ];

	ANowAtlasAvatarSiegeTrebuchet_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowLootObject.SetLocalFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewFlag                        ( CPF_Parm )

void ANowLootObject::eventSetLocalFlag ( int NewFlag )
{
	static UFunction* pFnSetLocalFlag = NULL;

	if ( ! pFnSetLocalFlag )
		pFnSetLocalFlag = (UFunction*) UObject::GObjObjects()->Data[ 56637 ];

	ANowLootObject_eventSetLocalFlag_Parms SetLocalFlag_Parms;
	SetLocalFlag_Parms.NewFlag = NewFlag;

	this->ProcessEvent ( pFnSetLocalFlag, &SetLocalFlag_Parms, NULL );
};

// Function NowGame.NowLootObject.DoFindGoodSpot
// [0x00020002] 
// Parameters infos:

void ANowLootObject::DoFindGoodSpot ( )
{
	static UFunction* pFnDoFindGoodSpot = NULL;

	if ( ! pFnDoFindGoodSpot )
		pFnDoFindGoodSpot = (UFunction*) UObject::GObjObjects()->Data[ 56636 ];

	ANowLootObject_execDoFindGoodSpot_Parms DoFindGoodSpot_Parms;

	this->ProcessEvent ( pFnDoFindGoodSpot, &DoFindGoodSpot_Parms, NULL );
};

// Function NowGame.NowLootObject.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowLootObject::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56635 ];

	ANowLootObject_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowLootObject.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowLootObject::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 56633 ];

	ANowLootObject_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowLootObject.GetAndCreateBody
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void ANowLootObject::GetAndCreateBody ( unsigned long bReInit )
{
	static UFunction* pFnGetAndCreateBody = NULL;

	if ( ! pFnGetAndCreateBody )
		pFnGetAndCreateBody = (UFunction*) UObject::GObjObjects()->Data[ 56631 ];

	ANowLootObject_execGetAndCreateBody_Parms GetAndCreateBody_Parms;
	GetAndCreateBody_Parms.bReInit = bReInit;

	pFnGetAndCreateBody->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateBody, &GetAndCreateBody_Parms, NULL );

	pFnGetAndCreateBody->FunctionFlags |= 0x400;
};

// Function NowGame.NowLootObject.IsClientOwner
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowLootObject::IsClientOwner ( )
{
	static UFunction* pFnIsClientOwner = NULL;

	if ( ! pFnIsClientOwner )
		pFnIsClientOwner = (UFunction*) UObject::GObjObjects()->Data[ 56629 ];

	ANowLootObject_execIsClientOwner_Parms IsClientOwner_Parms;

	pFnIsClientOwner->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsClientOwner, &IsClientOwner_Parms, NULL );

	pFnIsClientOwner->FunctionFlags |= 0x400;

	return IsClientOwner_Parms.ReturnValue;
};

// Function NowGame.NowLootObject.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowLootObject::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 56626 ];

	ANowLootObject_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowLootObject.AtlasUnSelect
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowLootObject::AtlasUnSelect ( )
{
	static UFunction* pFnAtlasUnSelect = NULL;

	if ( ! pFnAtlasUnSelect )
		pFnAtlasUnSelect = (UFunction*) UObject::GObjObjects()->Data[ 56624 ];

	ANowLootObject_execAtlasUnSelect_Parms AtlasUnSelect_Parms;

	pFnAtlasUnSelect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUnSelect, &AtlasUnSelect_Parms, NULL );

	pFnAtlasUnSelect->FunctionFlags |= 0x400;

	return AtlasUnSelect_Parms.ReturnValue;
};

// Function NowGame.NowLootObject.AtlasSelect
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowLootObject::AtlasSelect ( )
{
	static UFunction* pFnAtlasSelect = NULL;

	if ( ! pFnAtlasSelect )
		pFnAtlasSelect = (UFunction*) UObject::GObjObjects()->Data[ 56622 ];

	ANowLootObject_execAtlasSelect_Parms AtlasSelect_Parms;

	pFnAtlasSelect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasSelect, &AtlasSelect_Parms, NULL );

	pFnAtlasSelect->FunctionFlags |= 0x400;

	return AtlasSelect_Parms.ReturnValue;
};

// Function NowGame.NowLootObject.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowLootObject::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = (UFunction*) UObject::GObjObjects()->Data[ 56620 ];

	ANowLootObject_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorEmitter.SpawnCorpse
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowStaticMeshActorEmitter::eventSpawnCorpse ( float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = (UFunction*) UObject::GObjObjects()->Data[ 59345 ];

	ANowStaticMeshActorEmitter_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorEmitter.CreateEmitter
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowStaticMeshActorEmitter::eventCreateEmitter ( )
{
	static UFunction* pFnCreateEmitter = NULL;

	if ( ! pFnCreateEmitter )
		pFnCreateEmitter = (UFunction*) UObject::GObjObjects()->Data[ 59344 ];

	ANowStaticMeshActorEmitter_eventCreateEmitter_Parms CreateEmitter_Parms;

	this->ProcessEvent ( pFnCreateEmitter, &CreateEmitter_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorEmitter.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowStaticMeshActorEmitter::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 59341 ];

	ANowStaticMeshActorEmitter_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorEmitter.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowStaticMeshActorEmitter::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 59339 ];

	ANowStaticMeshActorEmitter_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowStaticMeshActorEmitter.NowSetStaticMeshes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UStaticMesh*             A                              ( CPF_Parm )

void ANowStaticMeshActorEmitter::NowSetStaticMeshes ( class UStaticMesh* A )
{
	static UFunction* pFnNowSetStaticMeshes = NULL;

	if ( ! pFnNowSetStaticMeshes )
		pFnNowSetStaticMeshes = (UFunction*) UObject::GObjObjects()->Data[ 59337 ];

	ANowStaticMeshActorEmitter_execNowSetStaticMeshes_Parms NowSetStaticMeshes_Parms;
	NowSetStaticMeshes_Parms.A = A;

	pFnNowSetStaticMeshes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNowSetStaticMeshes, &NowSetStaticMeshes_Parms, NULL );

	pFnNowSetStaticMeshes->FunctionFlags |= 0x400;
};

// Function NowGame.NowStaticMeshActorEmitterCampfire.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowStaticMeshActorEmitterCampfire::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 59356 ];

	ANowStaticMeshActorEmitterCampfire_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.setMyPowner
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* pwnder                         ( CPF_Parm )

void ANowAtlasAvatarPlayerHouseCollisionDoor::setMyPowner ( class ANowAtlasAvatarPlayerHouse* pwnder )
{
	static UFunction* pFnsetMyPowner = NULL;

	if ( ! pFnsetMyPowner )
		pFnsetMyPowner = (UFunction*) UObject::GObjObjects()->Data[ 51095 ];

	ANowAtlasAvatarPlayerHouseCollisionDoor_execsetMyPowner_Parms setMyPowner_Parms;
	setMyPowner_Parms.pwnder = pwnder;

	this->ProcessEvent ( pFnsetMyPowner, &setMyPowner_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.UnTouch
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouseCollisionDoor::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 51093 ];

	ANowAtlasAvatarPlayerHouseCollisionDoor_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.enterHouse
// [0x00020000] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouseCollisionDoor::enterHouse ( )
{
	static UFunction* pFnenterHouse = NULL;

	if ( ! pFnenterHouse )
		pFnenterHouse = (UFunction*) UObject::GObjObjects()->Data[ 51092 ];

	ANowAtlasAvatarPlayerHouseCollisionDoor_execenterHouse_Parms enterHouse_Parms;

	this->ProcessEvent ( pFnenterHouse, &enterHouse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.enterVolume
// [0x00020000] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouseCollisionDoor::enterVolume ( class AActor* Other )
{
	static UFunction* pFnenterVolume = NULL;

	if ( ! pFnenterVolume )
		pFnenterVolume = (UFunction*) UObject::GObjObjects()->Data[ 51090 ];

	ANowAtlasAvatarPlayerHouseCollisionDoor_execenterVolume_Parms enterVolume_Parms;
	enterVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnenterVolume, &enterVolume_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.Touch
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowAtlasAvatarPlayerHouseCollisionDoor::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 51085 ];

	ANowAtlasAvatarPlayerHouseCollisionDoor_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.sendMessageToHouse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 messageTwo                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarPlayerHouseCollisionDoor::eventsendMessageToHouse ( struct FString Message, struct FString messageTwo )
{
	static UFunction* pFnsendMessageToHouse = NULL;

	if ( ! pFnsendMessageToHouse )
		pFnsendMessageToHouse = (UFunction*) UObject::GObjObjects()->Data[ 51079 ];

	ANowAtlasAvatarPlayerHouseCollisionDoor_eventsendMessageToHouse_Parms sendMessageToHouse_Parms;
	memcpy ( &sendMessageToHouse_Parms.Message, &Message, 0xC );
	memcpy ( &sendMessageToHouse_Parms.messageTwo, &messageTwo, 0xC );

	this->ProcessEvent ( pFnsendMessageToHouse, &sendMessageToHouse_Parms, NULL );

	return sendMessageToHouse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.isPlayerInHouse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Player                         ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouseCollisionDoor::isPlayerInHouse ( class AActor* Player )
{
	static UFunction* pFnisPlayerInHouse = NULL;

	if ( ! pFnisPlayerInHouse )
		pFnisPlayerInHouse = (UFunction*) UObject::GObjObjects()->Data[ 51054 ];

	ANowAtlasAvatarPlayerHouseCollisionDoor_execisPlayerInHouse_Parms isPlayerInHouse_Parms;
	isPlayerInHouse_Parms.Player = Player;

	this->ProcessEvent ( pFnisPlayerInHouse, &isPlayerInHouse_Parms, NULL );

	return isPlayerInHouse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.getClientActor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouseCollisionDoor::getClientActor ( )
{
	static UFunction* pFngetClientActor = NULL;

	if ( ! pFngetClientActor )
		pFngetClientActor = (UFunction*) UObject::GObjObjects()->Data[ 51077 ];

	ANowAtlasAvatarPlayerHouseCollisionDoor_execgetClientActor_Parms getClientActor_Parms;

	this->ProcessEvent ( pFngetClientActor, &getClientActor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.isHouseLocked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouseCollisionDoor::isHouseLocked ( )
{
	static UFunction* pFnisHouseLocked = NULL;

	if ( ! pFnisHouseLocked )
		pFnisHouseLocked = (UFunction*) UObject::GObjObjects()->Data[ 51075 ];

	ANowAtlasAvatarPlayerHouseCollisionDoor_execisHouseLocked_Parms isHouseLocked_Parms;

	pFnisHouseLocked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisHouseLocked, &isHouseLocked_Parms, NULL );

	pFnisHouseLocked->FunctionFlags |= 0x400;

	return isHouseLocked_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.isPlayerFriend
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Player                         ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouseCollisionDoor::isPlayerFriend ( class AActor* Player )
{
	static UFunction* pFnisPlayerFriend = NULL;

	if ( ! pFnisPlayerFriend )
		pFnisPlayerFriend = (UFunction*) UObject::GObjObjects()->Data[ 51072 ];

	ANowAtlasAvatarPlayerHouseCollisionDoor_execisPlayerFriend_Parms isPlayerFriend_Parms;
	isPlayerFriend_Parms.Player = Player;

	pFnisPlayerFriend->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisPlayerFriend, &isPlayerFriend_Parms, NULL );

	pFnisPlayerFriend->FunctionFlags |= 0x400;

	return isPlayerFriend_Parms.ReturnValue;
};

// Function NowGame.NowAvatarManager.MoveToGround
// [0x00820002] 
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )

void UNowAvatarManager::MoveToGround ( class AActor* A )
{
	static UFunction* pFnMoveToGround = NULL;

	if ( ! pFnMoveToGround )
		pFnMoveToGround = (UFunction*) UObject::GObjObjects()->Data[ 51803 ];

	UNowAvatarManager_execMoveToGround_Parms MoveToGround_Parms;
	MoveToGround_Parms.A = A;

	this->ProcessEvent ( pFnMoveToGround, &MoveToGround_Parms, NULL );
};

// Function NowGame.NowAvatarManager.SortDel
// [0x00920002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )
// class AActor*                  B                              ( CPF_Parm )

int UNowAvatarManager::SortDel ( class AActor* A, class AActor* B )
{
	static UFunction* pFnSortDel = NULL;

	if ( ! pFnSortDel )
		pFnSortDel = (UFunction*) UObject::GObjObjects()->Data[ 51778 ];

	UNowAvatarManager_execSortDel_Parms SortDel_Parms;
	SortDel_Parms.A = A;
	SortDel_Parms.B = B;

	this->ProcessEvent ( pFnSortDel, &SortDel_Parms, NULL );

	return SortDel_Parms.ReturnValue;
};

// Function NowGame.NowAvatarManager.TickDetail
// [0x00020000] 
// Parameters infos:

void UNowAvatarManager::TickDetail ( )
{
	static UFunction* pFnTickDetail = NULL;

	if ( ! pFnTickDetail )
		pFnTickDetail = (UFunction*) UObject::GObjObjects()->Data[ 51797 ];

	UNowAvatarManager_execTickDetail_Parms TickDetail_Parms;

	this->ProcessEvent ( pFnTickDetail, &TickDetail_Parms, NULL );
};

// Function NowGame.NowAvatarManager.OneSecTick
// [0x00020002] 
// Parameters infos:

void UNowAvatarManager::OneSecTick ( )
{
	static UFunction* pFnOneSecTick = NULL;

	if ( ! pFnOneSecTick )
		pFnOneSecTick = (UFunction*) UObject::GObjObjects()->Data[ 51796 ];

	UNowAvatarManager_execOneSecTick_Parms OneSecTick_Parms;

	this->ProcessEvent ( pFnOneSecTick, &OneSecTick_Parms, NULL );
};

// Function NowGame.NowAvatarManager.TickManager
// [0x00020002] 
// Parameters infos:

void UNowAvatarManager::TickManager ( )
{
	static UFunction* pFnTickManager = NULL;

	if ( ! pFnTickManager )
		pFnTickManager = (UFunction*) UObject::GObjObjects()->Data[ 51792 ];

	UNowAvatarManager_execTickManager_Parms TickManager_Parms;

	this->ProcessEvent ( pFnTickManager, &TickManager_Parms, NULL );
};

// Function NowGame.NowAvatarManager.AddToManager
// [0x00024002] 
// Parameters infos:
// class ANowAtlasAvatar*         NewActor                       ( CPF_Parm )
// unsigned long                  bForceGenerate                 ( CPF_OptionalParm | CPF_Parm )

void UNowAvatarManager::AddToManager ( class ANowAtlasAvatar* NewActor, unsigned long bForceGenerate )
{
	static UFunction* pFnAddToManager = NULL;

	if ( ! pFnAddToManager )
		pFnAddToManager = (UFunction*) UObject::GObjObjects()->Data[ 51789 ];

	UNowAvatarManager_execAddToManager_Parms AddToManager_Parms;
	AddToManager_Parms.NewActor = NewActor;
	AddToManager_Parms.bForceGenerate = bForceGenerate;

	this->ProcessEvent ( pFnAddToManager, &AddToManager_Parms, NULL );
};

// Function NowGame.NowAvatarManager.SetDetailLevel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewLevel                       ( CPF_Parm )

void UNowAvatarManager::eventSetDetailLevel ( int NewLevel )
{
	static UFunction* pFnSetDetailLevel = NULL;

	if ( ! pFnSetDetailLevel )
		pFnSetDetailLevel = (UFunction*) UObject::GObjObjects()->Data[ 51787 ];

	UNowAvatarManager_eventSetDetailLevel_Parms SetDetailLevel_Parms;
	SetDetailLevel_Parms.NewLevel = NewLevel;

	this->ProcessEvent ( pFnSetDetailLevel, &SetDetailLevel_Parms, NULL );
};

// Function NowGame.NowAvatarManager.UpdateDetailLevel
// [0x00020000] 
// Parameters infos:
// class ANowAtlasAvatar*         pActor                         ( CPF_Parm )
// int                            NewLevel                       ( CPF_Parm )

void UNowAvatarManager::UpdateDetailLevel ( class ANowAtlasAvatar* pActor, int NewLevel )
{
	static UFunction* pFnUpdateDetailLevel = NULL;

	if ( ! pFnUpdateDetailLevel )
		pFnUpdateDetailLevel = (UFunction*) UObject::GObjObjects()->Data[ 51784 ];

	UNowAvatarManager_execUpdateDetailLevel_Parms UpdateDetailLevel_Parms;
	UpdateDetailLevel_Parms.pActor = pActor;
	UpdateDetailLevel_Parms.NewLevel = NewLevel;

	this->ProcessEvent ( pFnUpdateDetailLevel, &UpdateDetailLevel_Parms, NULL );
};

// Function NowGame.NowAvatarManager.InitManager
// [0x00020002] 
// Parameters infos:

void UNowAvatarManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = (UFunction*) UObject::GObjObjects()->Data[ 51783 ];

	UNowAvatarManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.NowAvatarManager.GetIniInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowAvatarManager::GetIniInfo ( )
{
	static UFunction* pFnGetIniInfo = NULL;

	if ( ! pFnGetIniInfo )
		pFnGetIniInfo = (UFunction*) UObject::GObjObjects()->Data[ 51782 ];

	UNowAvatarManager_execGetIniInfo_Parms GetIniInfo_Parms;

	pFnGetIniInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIniInfo, &GetIniInfo_Parms, NULL );

	pFnGetIniInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowCameraActor.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void ANowCameraActor::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 51857 ];

	ANowCameraActor_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function NowGame.NowCameraActor.CalcZAdd
// [0x00820002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vNewPos                        ( CPF_Parm )

float ANowCameraActor::CalcZAdd ( struct FVector vNewPos )
{
	static UFunction* pFnCalcZAdd = NULL;

	if ( ! pFnCalcZAdd )
		pFnCalcZAdd = (UFunction*) UObject::GObjObjects()->Data[ 51847 ];

	ANowCameraActor_execCalcZAdd_Parms CalcZAdd_Parms;
	memcpy ( &CalcZAdd_Parms.vNewPos, &vNewPos, 0xC );

	this->ProcessEvent ( pFnCalcZAdd, &CalcZAdd_Parms, NULL );

	return CalcZAdd_Parms.ReturnValue;
};

// Function NowGame.NowCameraActor.Tick
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowCameraActor::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 51841 ];

	ANowCameraActor_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowCameraActor.CamZoom
// [0x00820002] 
// Parameters infos:
// float                          fCamZoom                       ( CPF_Parm )

void ANowCameraActor::CamZoom ( float fCamZoom )
{
	static UFunction* pFnCamZoom = NULL;

	if ( ! pFnCamZoom )
		pFnCamZoom = (UFunction*) UObject::GObjObjects()->Data[ 51838 ];

	ANowCameraActor_execCamZoom_Parms CamZoom_Parms;
	CamZoom_Parms.fCamZoom = fCamZoom;

	this->ProcessEvent ( pFnCamZoom, &CamZoom_Parms, NULL );
};

// Function NowGame.NowCameraActor.AnimateCamera
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowCameraNodes*         ToNode                         ( CPF_Parm )

void ANowCameraActor::eventAnimateCamera ( class ANowCameraNodes* ToNode )
{
	static UFunction* pFnAnimateCamera = NULL;

	if ( ! pFnAnimateCamera )
		pFnAnimateCamera = (UFunction*) UObject::GObjObjects()->Data[ 51833 ];

	ANowCameraActor_eventAnimateCamera_Parms AnimateCamera_Parms;
	AnimateCamera_Parms.ToNode = ToNode;

	this->ProcessEvent ( pFnAnimateCamera, &AnimateCamera_Parms, NULL );
};

// Function NowGame.NowCameraActor.MakeMeViewTarget
// [0x00020002] 
// Parameters infos:

void ANowCameraActor::MakeMeViewTarget ( )
{
	static UFunction* pFnMakeMeViewTarget = NULL;

	if ( ! pFnMakeMeViewTarget )
		pFnMakeMeViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 51832 ];

	ANowCameraActor_execMakeMeViewTarget_Parms MakeMeViewTarget_Parms;

	this->ProcessEvent ( pFnMakeMeViewTarget, &MakeMeViewTarget_Parms, NULL );
};

// Function NowGame.NowCameraActor.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowCameraActor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51831 ];

	ANowCameraActor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowCameraNodes.ShouldBeHiddenBySHOW_NavigationNodes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowCameraNodes::ShouldBeHiddenBySHOW_NavigationNodes ( )
{
	static UFunction* pFnShouldBeHiddenBySHOW_NavigationNodes = NULL;

	if ( ! pFnShouldBeHiddenBySHOW_NavigationNodes )
		pFnShouldBeHiddenBySHOW_NavigationNodes = (UFunction*) UObject::GObjObjects()->Data[ 51866 ];

	ANowCameraNodes_execShouldBeHiddenBySHOW_NavigationNodes_Parms ShouldBeHiddenBySHOW_NavigationNodes_Parms;

	pFnShouldBeHiddenBySHOW_NavigationNodes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldBeHiddenBySHOW_NavigationNodes, &ShouldBeHiddenBySHOW_NavigationNodes_Parms, NULL );

	pFnShouldBeHiddenBySHOW_NavigationNodes->FunctionFlags |= 0x400;

	return ShouldBeHiddenBySHOW_NavigationNodes_Parms.ReturnValue;
};

// Function NowGame.NowCrossNodeActor.Tick
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowCrossNodeActor::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 52553 ];

	ANowCrossNodeActor_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowCrossNodeActor.ReportToSubsystem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowCrossNodeActor::eventReportToSubsystem ( )
{
	static UFunction* pFnReportToSubsystem = NULL;

	if ( ! pFnReportToSubsystem )
		pFnReportToSubsystem = (UFunction*) UObject::GObjObjects()->Data[ 52552 ];

	ANowCrossNodeActor_eventReportToSubsystem_Parms ReportToSubsystem_Parms;

	this->ProcessEvent ( pFnReportToSubsystem, &ReportToSubsystem_Parms, NULL );
};

// Function NowGame.NowCrossNodeActor.SetActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bActive                        ( CPF_Parm )

void ANowCrossNodeActor::SetActive ( unsigned long bActive )
{
	static UFunction* pFnSetActive = NULL;

	if ( ! pFnSetActive )
		pFnSetActive = (UFunction*) UObject::GObjObjects()->Data[ 52550 ];

	ANowCrossNodeActor_execSetActive_Parms SetActive_Parms;
	SetActive_Parms.bActive = bActive;

	pFnSetActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActive, &SetActive_Parms, NULL );

	pFnSetActive->FunctionFlags |= 0x400;
};

// Function NowGame.NowCrossNodeActor.InitCrossNodeActor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sContentGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 vPos                           ( CPF_Parm )
// struct FVector                 vRot                           ( CPF_Parm )

void ANowCrossNodeActor::InitCrossNodeActor ( struct FString sContentGuid, struct FVector vPos, struct FVector vRot )
{
	static UFunction* pFnInitCrossNodeActor = NULL;

	if ( ! pFnInitCrossNodeActor )
		pFnInitCrossNodeActor = (UFunction*) UObject::GObjObjects()->Data[ 52546 ];

	ANowCrossNodeActor_execInitCrossNodeActor_Parms InitCrossNodeActor_Parms;
	memcpy ( &InitCrossNodeActor_Parms.sContentGuid, &sContentGuid, 0xC );
	memcpy ( &InitCrossNodeActor_Parms.vPos, &vPos, 0xC );
	memcpy ( &InitCrossNodeActor_Parms.vRot, &vRot, 0xC );

	pFnInitCrossNodeActor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitCrossNodeActor, &InitCrossNodeActor_Parms, NULL );

	pFnInitCrossNodeActor->FunctionFlags |= 0x400;
};

// Function NowGame.NowDirectionalSunLight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowDirectionalSunLight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 52577 ];

	ANowDirectionalSunLight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowDirectionalSunLight.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowDirectionalSunLight::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 52576 ];

	ANowDirectionalSunLight_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowDirectionalSunLight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowDirectionalSunLight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 52574 ];

	ANowDirectionalSunLight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowDirectionalSunLight.Degree
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DG                             ( CPF_Parm )

float ANowDirectionalSunLight::Degree ( float DG )
{
	static UFunction* pFnDegree = NULL;

	if ( ! pFnDegree )
		pFnDegree = (UFunction*) UObject::GObjObjects()->Data[ 52571 ];

	ANowDirectionalSunLight_execDegree_Parms Degree_Parms;
	Degree_Parms.DG = DG;

	this->ProcessEvent ( pFnDegree, &Degree_Parms, NULL );

	return Degree_Parms.ReturnValue;
};

// Function NowGame.NowDirectionalSunLight.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          PartOfDay                      ( CPF_Parm )
// float                          PartOfNyxMonth                 ( CPF_Parm )
// float                          PartOfYear                     ( CPF_Parm )
// float                          SunRiseAt                      ( CPF_Parm )

void ANowDirectionalSunLight::eventUpdate ( float PartOfDay, float PartOfNyxMonth, float PartOfYear, float SunRiseAt )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 52565 ];

	ANowDirectionalSunLight_eventUpdate_Parms Update_Parms;
	Update_Parms.PartOfDay = PartOfDay;
	Update_Parms.PartOfNyxMonth = PartOfNyxMonth;
	Update_Parms.PartOfYear = PartOfYear;
	Update_Parms.SunRiseAt = SunRiseAt;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function NowGame.NowEmitterDayNight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowEmitterDayNight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 52613 ];

	ANowEmitterDayNight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowEmitterDayNight.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowEmitterDayNight::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 52612 ];

	ANowEmitterDayNight_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowEmitterDayNight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowEmitterDayNight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 52610 ];

	ANowEmitterDayNight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowEmitterDayNight.TurnOnEmitter
// [0x00020002] 
// Parameters infos:

void ANowEmitterDayNight::TurnOnEmitter ( )
{
	static UFunction* pFnTurnOnEmitter = NULL;

	if ( ! pFnTurnOnEmitter )
		pFnTurnOnEmitter = (UFunction*) UObject::GObjObjects()->Data[ 52609 ];

	ANowEmitterDayNight_execTurnOnEmitter_Parms TurnOnEmitter_Parms;

	this->ProcessEvent ( pFnTurnOnEmitter, &TurnOnEmitter_Parms, NULL );
};

// Function NowGame.NowGFXHud.ItemAdded
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iContainer                     ( CPF_Parm )

void UNowGFXHud::eventItemAdded ( int iContainer )
{
	static UFunction* pFnItemAdded = NULL;

	if ( ! pFnItemAdded )
		pFnItemAdded = (UFunction*) UObject::GObjObjects()->Data[ 52706 ];

	UNowGFXHud_eventItemAdded_Parms ItemAdded_Parms;
	ItemAdded_Parms.iContainer = iContainer;

	this->ProcessEvent ( pFnItemAdded, &ItemAdded_Parms, NULL );
};

// Function NowGame.NowGFXHud.CloseStuff
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHud::CloseStuff ( )
{
	static UFunction* pFnCloseStuff = NULL;

	if ( ! pFnCloseStuff )
		pFnCloseStuff = (UFunction*) UObject::GObjObjects()->Data[ 52701 ];

	UNowGFXHud_execCloseStuff_Parms CloseStuff_Parms;

	this->ProcessEvent ( pFnCloseStuff, &CloseStuff_Parms, NULL );

	return CloseStuff_Parms.ReturnValue;
};

// Function NowGame.NowGFXHud.NumberPressed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iNr                            ( CPF_Parm )

bool UNowGFXHud::NumberPressed ( int iNr )
{
	static UFunction* pFnNumberPressed = NULL;

	if ( ! pFnNumberPressed )
		pFnNumberPressed = (UFunction*) UObject::GObjObjects()->Data[ 52695 ];

	UNowGFXHud_execNumberPressed_Parms NumberPressed_Parms;
	NumberPressed_Parms.iNr = iNr;

	this->ProcessEvent ( pFnNumberPressed, &NumberPressed_Parms, NULL );

	return NumberPressed_Parms.ReturnValue;
};

// Function NowGame.NowGFXHud.GFXHudTick
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowGFXHud::GFXHudTick ( class UCanvas* C )
{
	static UFunction* pFnGFXHudTick = NULL;

	if ( ! pFnGFXHudTick )
		pFnGFXHudTick = (UFunction*) UObject::GObjObjects()->Data[ 52693 ];

	UNowGFXHud_execGFXHudTick_Parms GFXHudTick_Parms;
	GFXHudTick_Parms.C = C;

	this->ProcessEvent ( pFnGFXHudTick, &GFXHudTick_Parms, NULL );
};

// Function NowGame.NowGFXHud.openGuildMenu
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UNowGFXHud::openGuildMenu ( )
{
	static UFunction* pFnopenGuildMenu = NULL;

	if ( ! pFnopenGuildMenu )
		pFnopenGuildMenu = (UFunction*) UObject::GObjObjects()->Data[ 52692 ];

	UNowGFXHud_execopenGuildMenu_Parms openGuildMenu_Parms;

	this->ProcessEvent ( pFnopenGuildMenu, &openGuildMenu_Parms, NULL );
};

// Function NowGame.NowGFXHud.openFriendList
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UNowGFXHud::openFriendList ( )
{
	static UFunction* pFnopenFriendList = NULL;

	if ( ! pFnopenFriendList )
		pFnopenFriendList = (UFunction*) UObject::GObjObjects()->Data[ 52691 ];

	UNowGFXHud_execopenFriendList_Parms openFriendList_Parms;

	this->ProcessEvent ( pFnopenFriendList, &openFriendList_Parms, NULL );
};

// Function NowGame.NowGFXHud.ToggleCompass
// [0x00020002] 
// Parameters infos:

void UNowGFXHud::ToggleCompass ( )
{
	static UFunction* pFnToggleCompass = NULL;

	if ( ! pFnToggleCompass )
		pFnToggleCompass = (UFunction*) UObject::GObjObjects()->Data[ 52690 ];

	UNowGFXHud_execToggleCompass_Parms ToggleCompass_Parms;

	this->ProcessEvent ( pFnToggleCompass, &ToggleCompass_Parms, NULL );
};

// Function NowGame.NowGFXHud.ToggleTutorials
// [0x00020002] 
// Parameters infos:

void UNowGFXHud::ToggleTutorials ( )
{
	static UFunction* pFnToggleTutorials = NULL;

	if ( ! pFnToggleTutorials )
		pFnToggleTutorials = (UFunction*) UObject::GObjObjects()->Data[ 52689 ];

	UNowGFXHud_execToggleTutorials_Parms ToggleTutorials_Parms;

	this->ProcessEvent ( pFnToggleTutorials, &ToggleTutorials_Parms, NULL );
};

// Function NowGame.NowGFXHud.Tick
// [0x00020002] 
// Parameters infos:

void UNowGFXHud::Tick ( )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 52685 ];

	UNowGFXHud_execTick_Parms Tick_Parms;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowGFXHud.ShowFlashMouse
// [0x00020002] 
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void UNowGFXHud::ShowFlashMouse ( unsigned long bShow )
{
	static UFunction* pFnShowFlashMouse = NULL;

	if ( ! pFnShowFlashMouse )
		pFnShowFlashMouse = (UFunction*) UObject::GObjObjects()->Data[ 52683 ];

	UNowGFXHud_execShowFlashMouse_Parms ShowFlashMouse_Parms;
	ShowFlashMouse_Parms.bShow = bShow;

	this->ProcessEvent ( pFnShowFlashMouse, &ShowFlashMouse_Parms, NULL );
};

// Function NowGame.NowGFXHud.SetAllScenesFocus
// [0x00020002] 
// Parameters infos:
// unsigned long                  NewFocus                       ( CPF_Parm )

void UNowGFXHud::SetAllScenesFocus ( unsigned long NewFocus )
{
	static UFunction* pFnSetAllScenesFocus = NULL;

	if ( ! pFnSetAllScenesFocus )
		pFnSetAllScenesFocus = (UFunction*) UObject::GObjObjects()->Data[ 52679 ];

	UNowGFXHud_execSetAllScenesFocus_Parms SetAllScenesFocus_Parms;
	SetAllScenesFocus_Parms.NewFocus = NewFocus;

	this->ProcessEvent ( pFnSetAllScenesFocus, &SetAllScenesFocus_Parms, NULL );
};

// Function NowGame.NowGFXHud.IsASceneOpen
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHud::IsASceneOpen ( )
{
	static UFunction* pFnIsASceneOpen = NULL;

	if ( ! pFnIsASceneOpen )
		pFnIsASceneOpen = (UFunction*) UObject::GObjObjects()->Data[ 52676 ];

	UNowGFXHud_execIsASceneOpen_Parms IsASceneOpen_Parms;

	this->ProcessEvent ( pFnIsASceneOpen, &IsASceneOpen_Parms, NULL );

	return IsASceneOpen_Parms.ReturnValue;
};

// Function NowGame.NowGFXHud.GFXClose
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            WhatIndex                      ( CPF_Parm )

void UNowGFXHud::eventGFXClose ( int WhatIndex )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = (UFunction*) UObject::GObjObjects()->Data[ 52674 ];

	UNowGFXHud_eventGFXClose_Parms GFXClose_Parms;
	GFXClose_Parms.WhatIndex = WhatIndex;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXHud.GFXOpen
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            WhatIndex                      ( CPF_Parm )
// int                            Param                          ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHud::eventGFXOpen ( int WhatIndex, int Param )
{
	static UFunction* pFnGFXOpen = NULL;

	if ( ! pFnGFXOpen )
		pFnGFXOpen = (UFunction*) UObject::GObjObjects()->Data[ 52662 ];

	UNowGFXHud_eventGFXOpen_Parms GFXOpen_Parms;
	GFXOpen_Parms.WhatIndex = WhatIndex;
	GFXOpen_Parms.Param = Param;

	this->ProcessEvent ( pFnGFXOpen, &GFXOpen_Parms, NULL );
};

// Function NowGame.NowGFXHud.setTrackedUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  WhatIndex                      ( CPF_Parm )

void UNowGFXHud::eventsetTrackedUI ( unsigned char WhatIndex )
{
	static UFunction* pFnsetTrackedUI = NULL;

	if ( ! pFnsetTrackedUI )
		pFnsetTrackedUI = (UFunction*) UObject::GObjObjects()->Data[ 52658 ];

	UNowGFXHud_eventsetTrackedUI_Parms setTrackedUI_Parms;
	setTrackedUI_Parms.WhatIndex = WhatIndex;

	this->ProcessEvent ( pFnsetTrackedUI, &setTrackedUI_Parms, NULL );
};

// Function NowGame.NowGFXHud.OpenGFXHudScene
// [0x00020002] 
// Parameters infos:

void UNowGFXHud::OpenGFXHudScene ( )
{
	static UFunction* pFnOpenGFXHudScene = NULL;

	if ( ! pFnOpenGFXHudScene )
		pFnOpenGFXHudScene = (UFunction*) UObject::GObjObjects()->Data[ 52656 ];

	UNowGFXHud_execOpenGFXHudScene_Parms OpenGFXHudScene_Parms;

	this->ProcessEvent ( pFnOpenGFXHudScene, &OpenGFXHudScene_Parms, NULL );
};

// Function NowGame.NowGFXHud.InitGFXScene
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )

void UNowGFXHud::InitGFXScene ( class APlayerController* Player )
{
	static UFunction* pFnInitGFXScene = NULL;

	if ( ! pFnInitGFXScene )
		pFnInitGFXScene = (UFunction*) UObject::GObjObjects()->Data[ 52651 ];

	UNowGFXHud_execInitGFXScene_Parms InitGFXScene_Parms;
	InitGFXScene_Parms.Player = Player;

	this->ProcessEvent ( pFnInitGFXScene, &InitGFXScene_Parms, NULL );
};

// Function NowGame.NowGFXHud.rightClickUse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            bag                            ( CPF_Parm )
// int                            Slot                           ( CPF_Parm )

bool UNowGFXHud::eventrightClickUse ( int bag, int Slot )
{
	static UFunction* pFnrightClickUse = NULL;

	if ( ! pFnrightClickUse )
		pFnrightClickUse = (UFunction*) UObject::GObjObjects()->Data[ 52642 ];

	UNowGFXHud_eventrightClickUse_Parms rightClickUse_Parms;
	rightClickUse_Parms.bag = bag;
	rightClickUse_Parms.Slot = Slot;

	this->ProcessEvent ( pFnrightClickUse, &rightClickUse_Parms, NULL );

	return rightClickUse_Parms.ReturnValue;
};

// Function NowGame.NowGFXScene.GetGlobalInfo
// [0x00020002] 
// Parameters infos:
// class UGlobalInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGlobalInfo* UNowGFXScene::GetGlobalInfo ( )
{
	static UFunction* pFnGetGlobalInfo = NULL;

	if ( ! pFnGetGlobalInfo )
		pFnGetGlobalInfo = (UFunction*) UObject::GObjObjects()->Data[ 52748 ];

	UNowGFXScene_execGetGlobalInfo_Parms GetGlobalInfo_Parms;

	this->ProcessEvent ( pFnGetGlobalInfo, &GetGlobalInfo_Parms, NULL );

	return GetGlobalInfo_Parms.ReturnValue;
};

// Function NowGame.NowGFXScene.tcpReceive
// [0x00020002] 
// Parameters infos:
// struct FString                 JsonData                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bStart                         ( CPF_Parm )
// unsigned long                  bEnd                           ( CPF_Parm )

void UNowGFXScene::tcpReceive ( struct FString JsonData, unsigned long bStart, unsigned long bEnd )
{
	static UFunction* pFntcpReceive = NULL;

	if ( ! pFntcpReceive )
		pFntcpReceive = (UFunction*) UObject::GObjObjects()->Data[ 52744 ];

	UNowGFXScene_exectcpReceive_Parms tcpReceive_Parms;
	memcpy ( &tcpReceive_Parms.JsonData, &JsonData, 0xC );
	tcpReceive_Parms.bStart = bStart;
	tcpReceive_Parms.bEnd = bEnd;

	this->ProcessEvent ( pFntcpReceive, &tcpReceive_Parms, NULL );
};

// Function NowGame.NowGFXScene.DoTpcReceive
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 JsonData                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bStart                         ( CPF_Parm )
// unsigned long                  bEnd                           ( CPF_Parm )

void UNowGFXScene::eventDoTpcReceive ( struct FString JsonData, unsigned long bStart, unsigned long bEnd )
{
	static UFunction* pFnDoTpcReceive = NULL;

	if ( ! pFnDoTpcReceive )
		pFnDoTpcReceive = (UFunction*) UObject::GObjObjects()->Data[ 52740 ];

	UNowGFXScene_eventDoTpcReceive_Parms DoTpcReceive_Parms;
	memcpy ( &DoTpcReceive_Parms.JsonData, &JsonData, 0xC );
	DoTpcReceive_Parms.bStart = bStart;
	DoTpcReceive_Parms.bEnd = bEnd;

	this->ProcessEvent ( pFnDoTpcReceive, &DoTpcReceive_Parms, NULL );
};

// Function NowGame.NowGFXScene.GetTcpLink
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowTCPLink*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowTCPLink* UNowGFXScene::eventGetTcpLink ( )
{
	static UFunction* pFnGetTcpLink = NULL;

	if ( ! pFnGetTcpLink )
		pFnGetTcpLink = (UFunction*) UObject::GObjObjects()->Data[ 50070 ];

	UNowGFXScene_eventGetTcpLink_Parms GetTcpLink_Parms;

	this->ProcessEvent ( pFnGetTcpLink, &GetTcpLink_Parms, NULL );

	return GetTcpLink_Parms.ReturnValue;
};

// Function NowGame.NowGFXScene.gfxTick
// [0x00020000] 
// Parameters infos:
// float                          dTime                          ( CPF_Parm )

void UNowGFXScene::gfxTick ( float dTime )
{
	static UFunction* pFngfxTick = NULL;

	if ( ! pFngfxTick )
		pFngfxTick = (UFunction*) UObject::GObjObjects()->Data[ 52735 ];

	UNowGFXScene_execgfxTick_Parms gfxTick_Parms;
	gfxTick_Parms.dTime = dTime;

	this->ProcessEvent ( pFngfxTick, &gfxTick_Parms, NULL );
};

// Function NowGame.NowGFXScene.MODebug
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXScene::MODebug ( struct FString msg )
{
	static UFunction* pFnMODebug = NULL;

	if ( ! pFnMODebug )
		pFnMODebug = (UFunction*) UObject::GObjObjects()->Data[ 52733 ];

	UNowGFXScene_execMODebug_Parms MODebug_Parms;
	memcpy ( &MODebug_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnMODebug, &MODebug_Parms, NULL );
};

// Function NowGame.NowGFXScene.rightClickUse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            bag                            ( CPF_Parm )
// int                            Slot                           ( CPF_Parm )

bool UNowGFXScene::eventrightClickUse ( int bag, int Slot )
{
	static UFunction* pFnrightClickUse = NULL;

	if ( ! pFnrightClickUse )
		pFnrightClickUse = (UFunction*) UObject::GObjObjects()->Data[ 52649 ];

	UNowGFXScene_eventrightClickUse_Parms rightClickUse_Parms;
	rightClickUse_Parms.bag = bag;
	rightClickUse_Parms.Slot = Slot;

	this->ProcessEvent ( pFnrightClickUse, &rightClickUse_Parms, NULL );

	return rightClickUse_Parms.ReturnValue;
};

// Function NowGame.NowGFXScene.EscapePressed
// [0x00020000] 
// Parameters infos:

void UNowGFXScene::EscapePressed ( )
{
	static UFunction* pFnEscapePressed = NULL;

	if ( ! pFnEscapePressed )
		pFnEscapePressed = (UFunction*) UObject::GObjObjects()->Data[ 52730 ];

	UNowGFXScene_execEscapePressed_Parms EscapePressed_Parms;

	this->ProcessEvent ( pFnEscapePressed, &EscapePressed_Parms, NULL );
};

// Function NowGame.NowGFXScene.NumberPressed
// [0x00020000] 
// Parameters infos:
// int                            iNr                            ( CPF_Parm )

void UNowGFXScene::NumberPressed ( int iNr )
{
	static UFunction* pFnNumberPressed = NULL;

	if ( ! pFnNumberPressed )
		pFnNumberPressed = (UFunction*) UObject::GObjObjects()->Data[ 52728 ];

	UNowGFXScene_execNumberPressed_Parms NumberPressed_Parms;
	NumberPressed_Parms.iNr = iNr;

	this->ProcessEvent ( pFnNumberPressed, &NumberPressed_Parms, NULL );
};

// Function NowGame.NowGFXScene.GFXClose
// [0x00020002] 
// Parameters infos:

void UNowGFXScene::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = (UFunction*) UObject::GObjObjects()->Data[ 52727 ];

	UNowGFXScene_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXScene.OnClose
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UNowGFXScene::eventOnClose ( )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = (UFunction*) UObject::GObjObjects()->Data[ 52726 ];

	UNowGFXScene_eventOnClose_Parms OnClose_Parms;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );
};

// Function NowGame.NowGFXScene.PlaySound
// [0x00020002] 
// Parameters infos:
// struct FString                 sSoundCue                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXScene::PlaySound ( struct FString sSoundCue )
{
	static UFunction* pFnPlaySound = NULL;

	if ( ! pFnPlaySound )
		pFnPlaySound = (UFunction*) UObject::GObjObjects()->Data[ 52723 ];

	UNowGFXScene_execPlaySound_Parms PlaySound_Parms;
	memcpy ( &PlaySound_Parms.sSoundCue, &sSoundCue, 0xC );

	this->ProcessEvent ( pFnPlaySound, &PlaySound_Parms, NULL );
};

// Function NowGame.NowGFXScene.InitGFXScene
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXScene::InitGFXScene ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInitGFXScene = NULL;

	if ( ! pFnInitGFXScene )
		pFnInitGFXScene = (UFunction*) UObject::GObjObjects()->Data[ 52720 ];

	UNowGFXScene_execInitGFXScene_Parms InitGFXScene_Parms;
	InitGFXScene_Parms.Player = Player;
	InitGFXScene_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInitGFXScene, &InitGFXScene_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getChatNumLines
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowGFXHudScene::getChatNumLines ( )
{
	static UFunction* pFngetChatNumLines = NULL;

	if ( ! pFngetChatNumLines )
		pFngetChatNumLines = (UFunction*) UObject::GObjObjects()->Data[ 56066 ];

	UNowGFXHudScene_execgetChatNumLines_Parms getChatNumLines_Parms;

	this->ProcessEvent ( pFngetChatNumLines, &getChatNumLines_Parms, NULL );

	return getChatNumLines_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.getChatLine
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iLine                          ( CPF_Parm )

struct FString UNowGFXHudScene::getChatLine ( int iLine )
{
	static UFunction* pFngetChatLine = NULL;

	if ( ! pFngetChatLine )
		pFngetChatLine = (UFunction*) UObject::GObjObjects()->Data[ 56063 ];

	UNowGFXHudScene_execgetChatLine_Parms getChatLine_Parms;
	getChatLine_Parms.iLine = iLine;

	this->ProcessEvent ( pFngetChatLine, &getChatLine_Parms, NULL );

	return getChatLine_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.allowWhisper
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sAvatarName                    ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::allowWhisper ( struct FString sAvatarName )
{
	static UFunction* pFnallowWhisper = NULL;

	if ( ! pFnallowWhisper )
		pFnallowWhisper = (UFunction*) UObject::GObjObjects()->Data[ 45832 ];

	UNowGFXHudScene_execallowWhisper_Parms allowWhisper_Parms;
	memcpy ( &allowWhisper_Parms.sAvatarName, &sAvatarName, 0xC );

	this->ProcessEvent ( pFnallowWhisper, &allowWhisper_Parms, NULL );

	return allowWhisper_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.showNotice
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventshowNotice ( struct FString sMessage )
{
	static UFunction* pFnshowNotice = NULL;

	if ( ! pFnshowNotice )
		pFnshowNotice = (UFunction*) UObject::GObjObjects()->Data[ 56060 ];

	UNowGFXHudScene_eventshowNotice_Parms showNotice_Parms;
	memcpy ( &showNotice_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnshowNotice, &showNotice_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showChatInput
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showChatInput ( )
{
	static UFunction* pFnshowChatInput = NULL;

	if ( ! pFnshowChatInput )
		pFnshowChatInput = (UFunction*) UObject::GObjObjects()->Data[ 56059 ];

	UNowGFXHudScene_execshowChatInput_Parms showChatInput_Parms;

	this->ProcessEvent ( pFnshowChatInput, &showChatInput_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetEnumFromName
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::GetEnumFromName ( struct FString sName )
{
	static UFunction* pFnGetEnumFromName = NULL;

	if ( ! pFnGetEnumFromName )
		pFnGetEnumFromName = (UFunction*) UObject::GObjObjects()->Data[ 56056 ];

	UNowGFXHudScene_execGetEnumFromName_Parms GetEnumFromName_Parms;
	memcpy ( &GetEnumFromName_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetEnumFromName, &GetEnumFromName_Parms, NULL );

	return GetEnumFromName_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.TcpSend
// [0x00020002] 
// Parameters infos:
// struct FString                 sScript                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bStart                         ( CPF_Parm )
// unsigned long                  bEnd                           ( CPF_Parm )

void UNowGFXHudScene::TcpSend ( struct FString sScript, struct FString sData, unsigned long bStart, unsigned long bEnd )
{
	static UFunction* pFnTcpSend = NULL;

	if ( ! pFnTcpSend )
		pFnTcpSend = (UFunction*) UObject::GObjObjects()->Data[ 56051 ];

	UNowGFXHudScene_execTcpSend_Parms TcpSend_Parms;
	memcpy ( &TcpSend_Parms.sScript, &sScript, 0xC );
	memcpy ( &TcpSend_Parms.sData, &sData, 0xC );
	TcpSend_Parms.bStart = bStart;
	TcpSend_Parms.bEnd = bEnd;

	this->ProcessEvent ( pFnTcpSend, &TcpSend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addChatMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Author                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            Channel                        ( CPF_Parm )

void UNowGFXHudScene::addChatMessage ( struct FString Message, struct FString Author, int Channel )
{
	static UFunction* pFnaddChatMessage = NULL;

	if ( ! pFnaddChatMessage )
		pFnaddChatMessage = (UFunction*) UObject::GObjObjects()->Data[ 56047 ];

	UNowGFXHudScene_execaddChatMessage_Parms addChatMessage_Parms;
	memcpy ( &addChatMessage_Parms.Message, &Message, 0xC );
	memcpy ( &addChatMessage_Parms.Author, &Author, 0xC );
	addChatMessage_Parms.Channel = Channel;

	this->ProcessEvent ( pFnaddChatMessage, &addChatMessage_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setChatInput
// [0x00020002] 
// Parameters infos:
// struct FString                 sInput                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setChatInput ( struct FString sInput )
{
	static UFunction* pFnsetChatInput = NULL;

	if ( ! pFnsetChatInput )
		pFnsetChatInput = (UFunction*) UObject::GObjObjects()->Data[ 56045 ];

	UNowGFXHudScene_execsetChatInput_Parms setChatInput_Parms;
	memcpy ( &setChatInput_Parms.sInput, &sInput, 0xC );

	this->ProcessEvent ( pFnsetChatInput, &setChatInput_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.tcpSaveConfigJson
// [0x00020002] 
// Parameters infos:
// struct FString                 JsonData                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::tcpSaveConfigJson ( struct FString JsonData )
{
	static UFunction* pFntcpSaveConfigJson = NULL;

	if ( ! pFntcpSaveConfigJson )
		pFntcpSaveConfigJson = (UFunction*) UObject::GObjObjects()->Data[ 56043 ];

	UNowGFXHudScene_exectcpSaveConfigJson_Parms tcpSaveConfigJson_Parms;
	memcpy ( &tcpSaveConfigJson_Parms.JsonData, &JsonData, 0xC );

	this->ProcessEvent ( pFntcpSaveConfigJson, &tcpSaveConfigJson_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.sendChatMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 sMsg                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::sendChatMessage ( struct FString sMsg )
{
	static UFunction* pFnsendChatMessage = NULL;

	if ( ! pFnsendChatMessage )
		pFnsendChatMessage = (UFunction*) UObject::GObjObjects()->Data[ 56041 ];

	UNowGFXHudScene_execsendChatMessage_Parms sendChatMessage_Parms;
	memcpy ( &sendChatMessage_Parms.sMsg, &sMsg, 0xC );

	this->ProcessEvent ( pFnsendChatMessage, &sendChatMessage_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetTcpLink
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowTCPLink*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowTCPLink* UNowGFXHudScene::eventGetTcpLink ( )
{
	static UFunction* pFnGetTcpLink = NULL;

	if ( ! pFnGetTcpLink )
		pFnGetTcpLink = (UFunction*) UObject::GObjObjects()->Data[ 50069 ];

	UNowGFXHudScene_eventGetTcpLink_Parms GetTcpLink_Parms;

	this->ProcessEvent ( pFnGetTcpLink, &GetTcpLink_Parms, NULL );

	return GetTcpLink_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitChat
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::InitChat ( )
{
	static UFunction* pFnInitChat = NULL;

	if ( ! pFnInitChat )
		pFnInitChat = (UFunction*) UObject::GObjObjects()->Data[ 56040 ];

	UNowGFXHudScene_execInitChat_Parms InitChat_Parms;

	this->ProcessEvent ( pFnInitChat, &InitChat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setAreaName
// [0x00020002] 
// Parameters infos:
// struct FString                 sAreaName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setAreaName ( struct FString sAreaName )
{
	static UFunction* pFnsetAreaName = NULL;

	if ( ! pFnsetAreaName )
		pFnsetAreaName = (UFunction*) UObject::GObjObjects()->Data[ 56038 ];

	UNowGFXHudScene_execsetAreaName_Parms setAreaName_Parms;
	memcpy ( &setAreaName_Parms.sAreaName, &sAreaName, 0xC );

	this->ProcessEvent ( pFnsetAreaName, &setAreaName_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCompassDirection
// [0x00020002] 
// Parameters infos:
// int                            degrees                        ( CPF_Parm )

void UNowGFXHudScene::setCompassDirection ( int degrees )
{
	static UFunction* pFnsetCompassDirection = NULL;

	if ( ! pFnsetCompassDirection )
		pFnsetCompassDirection = (UFunction*) UObject::GObjObjects()->Data[ 56036 ];

	UNowGFXHudScene_execsetCompassDirection_Parms setCompassDirection_Parms;
	setCompassDirection_Parms.degrees = degrees;

	this->ProcessEvent ( pFnsetCompassDirection, &setCompassDirection_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCompassPosition
// [0x00020002] 
// Parameters infos:
// struct FString                 Element                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )

void UNowGFXHudScene::setCompassPosition ( struct FString Element, int X, int Y )
{
	static UFunction* pFnsetCompassPosition = NULL;

	if ( ! pFnsetCompassPosition )
		pFnsetCompassPosition = (UFunction*) UObject::GObjObjects()->Data[ 56032 ];

	UNowGFXHudScene_execsetCompassPosition_Parms setCompassPosition_Parms;
	memcpy ( &setCompassPosition_Parms.Element, &Element, 0xC );
	setCompassPosition_Parms.X = X;
	setCompassPosition_Parms.Y = Y;

	this->ProcessEvent ( pFnsetCompassPosition, &setCompassPosition_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.loadCompassContent
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::loadCompassContent ( )
{
	static UFunction* pFnloadCompassContent = NULL;

	if ( ! pFnloadCompassContent )
		pFnloadCompassContent = (UFunction*) UObject::GObjObjects()->Data[ 56031 ];

	UNowGFXHudScene_execloadCompassContent_Parms loadCompassContent_Parms;

	this->ProcessEvent ( pFnloadCompassContent, &loadCompassContent_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ToggleCompass
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ToggleCompass ( )
{
	static UFunction* pFnToggleCompass = NULL;

	if ( ! pFnToggleCompass )
		pFnToggleCompass = (UFunction*) UObject::GObjObjects()->Data[ 56030 ];

	UNowGFXHudScene_execToggleCompass_Parms ToggleCompass_Parms;

	this->ProcessEvent ( pFnToggleCompass, &ToggleCompass_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateCompass
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::updateCompass ( )
{
	static UFunction* pFnupdateCompass = NULL;

	if ( ! pFnupdateCompass )
		pFnupdateCompass = (UFunction*) UObject::GObjObjects()->Data[ 56028 ];

	UNowGFXHudScene_execupdateCompass_Parms updateCompass_Parms;

	this->ProcessEvent ( pFnupdateCompass, &updateCompass_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.startUpdateCompass
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::startUpdateCompass ( )
{
	static UFunction* pFnstartUpdateCompass = NULL;

	if ( ! pFnstartUpdateCompass )
		pFnstartUpdateCompass = (UFunction*) UObject::GObjObjects()->Data[ 56027 ];

	UNowGFXHudScene_execstartUpdateCompass_Parms startUpdateCompass_Parms;

	this->ProcessEvent ( pFnstartUpdateCompass, &startUpdateCompass_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitCompass
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXHudScene::InitCompass ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInitCompass = NULL;

	if ( ! pFnInitCompass )
		pFnInitCompass = (UFunction*) UObject::GObjObjects()->Data[ 56024 ];

	UNowGFXHudScene_execInitCompass_Parms InitCompass_Parms;
	InitCompass_Parms.Player = Player;
	InitCompass_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInitCompass, &InitCompass_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setDirectionLabel
// [0x00020002] 
// Parameters infos:
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setDirectionLabel ( struct FString sLabel )
{
	static UFunction* pFnsetDirectionLabel = NULL;

	if ( ! pFnsetDirectionLabel )
		pFnsetDirectionLabel = (UFunction*) UObject::GObjObjects()->Data[ 56022 ];

	UNowGFXHudScene_execsetDirectionLabel_Parms setDirectionLabel_Parms;
	memcpy ( &setDirectionLabel_Parms.sLabel, &sLabel, 0xC );

	this->ProcessEvent ( pFnsetDirectionLabel, &setDirectionLabel_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setDirectionDegrees
// [0x00020002] 
// Parameters infos:
// int                            iDegrees                       ( CPF_Parm )

void UNowGFXHudScene::setDirectionDegrees ( int iDegrees )
{
	static UFunction* pFnsetDirectionDegrees = NULL;

	if ( ! pFnsetDirectionDegrees )
		pFnsetDirectionDegrees = (UFunction*) UObject::GObjObjects()->Data[ 56020 ];

	UNowGFXHudScene_execsetDirectionDegrees_Parms setDirectionDegrees_Parms;
	setDirectionDegrees_Parms.iDegrees = iDegrees;

	this->ProcessEvent ( pFnsetDirectionDegrees, &setDirectionDegrees_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleDirectionHelper
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXHudScene::toggleDirectionHelper ( unsigned long bVisible )
{
	static UFunction* pFntoggleDirectionHelper = NULL;

	if ( ! pFntoggleDirectionHelper )
		pFntoggleDirectionHelper = (UFunction*) UObject::GObjObjects()->Data[ 56018 ];

	UNowGFXHudScene_exectoggleDirectionHelper_Parms toggleDirectionHelper_Parms;
	toggleDirectionHelper_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFntoggleDirectionHelper, &toggleDirectionHelper_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleShift
// [0x00020002] 
// Parameters infos:
// unsigned long                  bShift                         ( CPF_Parm )

void UNowGFXHudScene::toggleShift ( unsigned long bShift )
{
	static UFunction* pFntoggleShift = NULL;

	if ( ! pFntoggleShift )
		pFntoggleShift = (UFunction*) UObject::GObjObjects()->Data[ 56016 ];

	UNowGFXHudScene_exectoggleShift_Parms toggleShift_Parms;
	toggleShift_Parms.bShift = bShift;

	this->ProcessEvent ( pFntoggleShift, &toggleShift_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeStatusSymbol
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeStatusSymbol ( struct FString Id )
{
	static UFunction* pFnremoveStatusSymbol = NULL;

	if ( ! pFnremoveStatusSymbol )
		pFnremoveStatusSymbol = (UFunction*) UObject::GObjObjects()->Data[ 56014 ];

	UNowGFXHudScene_execremoveStatusSymbol_Parms removeStatusSymbol_Parms;
	memcpy ( &removeStatusSymbol_Parms.Id, &Id, 0xC );

	this->ProcessEvent ( pFnremoveStatusSymbol, &removeStatusSymbol_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setStatusColor
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sColor                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setStatusColor ( struct FString Id, struct FString sColor )
{
	static UFunction* pFnsetStatusColor = NULL;

	if ( ! pFnsetStatusColor )
		pFnsetStatusColor = (UFunction*) UObject::GObjObjects()->Data[ 56011 ];

	UNowGFXHudScene_execsetStatusColor_Parms setStatusColor_Parms;
	memcpy ( &setStatusColor_Parms.Id, &Id, 0xC );
	memcpy ( &setStatusColor_Parms.sColor, &sColor, 0xC );

	this->ProcessEvent ( pFnsetStatusColor, &setStatusColor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addStatusSymbol
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Icon                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sColor                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addStatusSymbol ( struct FString Id, struct FString Icon, struct FString sColor )
{
	static UFunction* pFnaddStatusSymbol = NULL;

	if ( ! pFnaddStatusSymbol )
		pFnaddStatusSymbol = (UFunction*) UObject::GObjObjects()->Data[ 56007 ];

	UNowGFXHudScene_execaddStatusSymbol_Parms addStatusSymbol_Parms;
	memcpy ( &addStatusSymbol_Parms.Id, &Id, 0xC );
	memcpy ( &addStatusSymbol_Parms.Icon, &Icon, 0xC );
	memcpy ( &addStatusSymbol_Parms.sColor, &sColor, 0xC );

	this->ProcessEvent ( pFnaddStatusSymbol, &addStatusSymbol_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.inputBox
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sId                            ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRestricted                    ( CPF_Parm )

void UNowGFXHudScene::eventinputBox ( struct FString sId, struct FString sMessage, struct FString sTitle, unsigned long bRestricted )
{
	static UFunction* pFninputBox = NULL;

	if ( ! pFninputBox )
		pFninputBox = (UFunction*) UObject::GObjObjects()->Data[ 56002 ];

	UNowGFXHudScene_eventinputBox_Parms inputBox_Parms;
	memcpy ( &inputBox_Parms.sId, &sId, 0xC );
	memcpy ( &inputBox_Parms.sMessage, &sMessage, 0xC );
	memcpy ( &inputBox_Parms.sTitle, &sTitle, 0xC );
	inputBox_Parms.bRestricted = bRestricted;

	this->ProcessEvent ( pFninputBox, &inputBox_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.msgBox
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sId                            ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bResponse                      ( CPF_Parm )

void UNowGFXHudScene::eventmsgBox ( struct FString sId, struct FString sMessage, struct FString sTitle, unsigned long bResponse )
{
	static UFunction* pFnmsgBox = NULL;

	if ( ! pFnmsgBox )
		pFnmsgBox = (UFunction*) UObject::GObjObjects()->Data[ 55997 ];

	UNowGFXHudScene_eventmsgBox_Parms msgBox_Parms;
	memcpy ( &msgBox_Parms.sId, &sId, 0xC );
	memcpy ( &msgBox_Parms.sMessage, &sMessage, 0xC );
	memcpy ( &msgBox_Parms.sTitle, &sTitle, 0xC );
	msgBox_Parms.bResponse = bResponse;

	this->ProcessEvent ( pFnmsgBox, &msgBox_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.infoBox
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventinfoBox ( struct FString sMessage, struct FString sTitle )
{
	static UFunction* pFninfoBox = NULL;

	if ( ! pFninfoBox )
		pFninfoBox = (UFunction*) UObject::GObjObjects()->Data[ 55994 ];

	UNowGFXHudScene_eventinfoBox_Parms infoBox_Parms;
	memcpy ( &infoBox_Parms.sMessage, &sMessage, 0xC );
	memcpy ( &infoBox_Parms.sTitle, &sTitle, 0xC );

	this->ProcessEvent ( pFninfoBox, &infoBox_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCrosshair
// [0x00020002] 
// Parameters infos:
// struct FString                 IconName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ObjectName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 nameColor                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 useVerb                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bUsable                        ( CPF_Parm )

void UNowGFXHudScene::setCrosshair ( struct FString IconName, struct FString ObjectName, struct FString nameColor, struct FString useVerb, unsigned long bUsable )
{
	static UFunction* pFnsetCrosshair = NULL;

	if ( ! pFnsetCrosshair )
		pFnsetCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 55988 ];

	UNowGFXHudScene_execsetCrosshair_Parms setCrosshair_Parms;
	memcpy ( &setCrosshair_Parms.IconName, &IconName, 0xC );
	memcpy ( &setCrosshair_Parms.ObjectName, &ObjectName, 0xC );
	memcpy ( &setCrosshair_Parms.nameColor, &nameColor, 0xC );
	memcpy ( &setCrosshair_Parms.useVerb, &useVerb, 0xC );
	setCrosshair_Parms.bUsable = bUsable;

	this->ProcessEvent ( pFnsetCrosshair, &setCrosshair_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TriggerGuildVerify
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TriggerGuildVerify ( )
{
	static UFunction* pFnTriggerGuildVerify = NULL;

	if ( ! pFnTriggerGuildVerify )
		pFnTriggerGuildVerify = (UFunction*) UObject::GObjObjects()->Data[ 55987 ];

	UNowGFXHudScene_execTriggerGuildVerify_Parms TriggerGuildVerify_Parms;

	this->ProcessEvent ( pFnTriggerGuildVerify, &TriggerGuildVerify_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.inputBoxResponse
// [0x00020002] 
// Parameters infos:
// struct FString                 msgBoxId                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sResponse                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::inputBoxResponse ( struct FString msgBoxId, struct FString sResponse )
{
	static UFunction* pFninputBoxResponse = NULL;

	if ( ! pFninputBoxResponse )
		pFninputBoxResponse = (UFunction*) UObject::GObjObjects()->Data[ 55982 ];

	UNowGFXHudScene_execinputBoxResponse_Parms inputBoxResponse_Parms;
	memcpy ( &inputBoxResponse_Parms.msgBoxId, &msgBoxId, 0xC );
	memcpy ( &inputBoxResponse_Parms.sResponse, &sResponse, 0xC );

	this->ProcessEvent ( pFninputBoxResponse, &inputBoxResponse_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.msgBoxResponse
// [0x00020002] 
// Parameters infos:
// struct FString                 msgBoxId                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bResponse                      ( CPF_Parm )

void UNowGFXHudScene::msgBoxResponse ( struct FString msgBoxId, unsigned long bResponse )
{
	static UFunction* pFnmsgBoxResponse = NULL;

	if ( ! pFnmsgBoxResponse )
		pFnmsgBoxResponse = (UFunction*) UObject::GObjObjects()->Data[ 55974 ];

	UNowGFXHudScene_execmsgBoxResponse_Parms msgBoxResponse_Parms;
	memcpy ( &msgBoxResponse_Parms.msgBoxId, &msgBoxId, 0xC );
	msgBoxResponse_Parms.bResponse = bResponse;

	this->ProcessEvent ( pFnmsgBoxResponse, &msgBoxResponse_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetCrosshairTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  NewTarget                      ( CPF_Parm )

void UNowGFXHudScene::SetCrosshairTarget ( class AActor* NewTarget )
{
	static UFunction* pFnSetCrosshairTarget = NULL;

	if ( ! pFnSetCrosshairTarget )
		pFnSetCrosshairTarget = (UFunction*) UObject::GObjObjects()->Data[ 55960 ];

	UNowGFXHudScene_execSetCrosshairTarget_Parms SetCrosshairTarget_Parms;
	SetCrosshairTarget_Parms.NewTarget = NewTarget;

	this->ProcessEvent ( pFnSetCrosshairTarget, &SetCrosshairTarget_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ResetCrosshairTarget
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ResetCrosshairTarget ( )
{
	static UFunction* pFnResetCrosshairTarget = NULL;

	if ( ! pFnResetCrosshairTarget )
		pFnResetCrosshairTarget = (UFunction*) UObject::GObjObjects()->Data[ 55959 ];

	UNowGFXHudScene_execResetCrosshairTarget_Parms ResetCrosshairTarget_Parms;

	this->ProcessEvent ( pFnResetCrosshairTarget, &ResetCrosshairTarget_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.HideCrosshair
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::HideCrosshair ( )
{
	static UFunction* pFnHideCrosshair = NULL;

	if ( ! pFnHideCrosshair )
		pFnHideCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 55958 ];

	UNowGFXHudScene_execHideCrosshair_Parms HideCrosshair_Parms;

	this->ProcessEvent ( pFnHideCrosshair, &HideCrosshair_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetKeyboardInput
// [0x00020002] 
// Parameters infos:
// unsigned long                  bFlashNeedKeyInput             ( CPF_Parm )

void UNowGFXHudScene::GetKeyboardInput ( unsigned long bFlashNeedKeyInput )
{
	static UFunction* pFnGetKeyboardInput = NULL;

	if ( ! pFnGetKeyboardInput )
		pFnGetKeyboardInput = (UFunction*) UObject::GObjObjects()->Data[ 55956 ];

	UNowGFXHudScene_execGetKeyboardInput_Parms GetKeyboardInput_Parms;
	GetKeyboardInput_Parms.bFlashNeedKeyInput = bFlashNeedKeyInput;

	this->ProcessEvent ( pFnGetKeyboardInput, &GetKeyboardInput_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ToggleBlurPP
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void UNowGFXHudScene::ToggleBlurPP ( unsigned long bOn )
{
	static UFunction* pFnToggleBlurPP = NULL;

	if ( ! pFnToggleBlurPP )
		pFnToggleBlurPP = (UFunction*) UObject::GObjObjects()->Data[ 55954 ];

	UNowGFXHudScene_execToggleBlurPP_Parms ToggleBlurPP_Parms;
	ToggleBlurPP_Parms.bOn = bOn;

	this->ProcessEvent ( pFnToggleBlurPP, &ToggleBlurPP_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPetLoyalty
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            curLoyalty                     ( CPF_Parm )
// int                            maxLoyalty                     ( CPF_Parm )

void UNowGFXHudScene::setPetLoyalty ( struct FString petGUID, int curLoyalty, int maxLoyalty )
{
	static UFunction* pFnsetPetLoyalty = NULL;

	if ( ! pFnsetPetLoyalty )
		pFnsetPetLoyalty = (UFunction*) UObject::GObjObjects()->Data[ 55950 ];

	UNowGFXHudScene_execsetPetLoyalty_Parms setPetLoyalty_Parms;
	memcpy ( &setPetLoyalty_Parms.petGUID, &petGUID, 0xC );
	setPetLoyalty_Parms.curLoyalty = curLoyalty;
	setPetLoyalty_Parms.maxLoyalty = maxLoyalty;

	this->ProcessEvent ( pFnsetPetLoyalty, &setPetLoyalty_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPetName
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setPetName ( struct FString petGUID, struct FString DisplayName )
{
	static UFunction* pFnsetPetName = NULL;

	if ( ! pFnsetPetName )
		pFnsetPetName = (UFunction*) UObject::GObjObjects()->Data[ 55947 ];

	UNowGFXHudScene_execsetPetName_Parms setPetName_Parms;
	memcpy ( &setPetName_Parms.petGUID, &petGUID, 0xC );
	memcpy ( &setPetName_Parms.DisplayName, &DisplayName, 0xC );

	this->ProcessEvent ( pFnsetPetName, &setPetName_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showPetWindow
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            curLoyalty                     ( CPF_Parm )
// int                            maxLoyalty                     ( CPF_Parm )
// unsigned long                  bVisible                       ( CPF_Parm )
// unsigned long                  bHasBag                        ( CPF_Parm )

void UNowGFXHudScene::showPetWindow ( struct FString petGUID, struct FString DisplayName, int curLoyalty, int maxLoyalty, unsigned long bVisible, unsigned long bHasBag )
{
	static UFunction* pFnshowPetWindow = NULL;

	if ( ! pFnshowPetWindow )
		pFnshowPetWindow = (UFunction*) UObject::GObjObjects()->Data[ 55940 ];

	UNowGFXHudScene_execshowPetWindow_Parms showPetWindow_Parms;
	memcpy ( &showPetWindow_Parms.petGUID, &petGUID, 0xC );
	memcpy ( &showPetWindow_Parms.DisplayName, &DisplayName, 0xC );
	showPetWindow_Parms.curLoyalty = curLoyalty;
	showPetWindow_Parms.maxLoyalty = maxLoyalty;
	showPetWindow_Parms.bVisible = bVisible;
	showPetWindow_Parms.bHasBag = bHasBag;

	this->ProcessEvent ( pFnshowPetWindow, &showPetWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RequestedPetWindow
// [0x00020002] 
// Parameters infos:
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RequestedPetWindow ( struct FString sPetGuid )
{
	static UFunction* pFnRequestedPetWindow = NULL;

	if ( ! pFnRequestedPetWindow )
		pFnRequestedPetWindow = (UFunction*) UObject::GObjObjects()->Data[ 55936 ];

	UNowGFXHudScene_execRequestedPetWindow_Parms RequestedPetWindow_Parms;
	memcpy ( &RequestedPetWindow_Parms.sPetGuid, &sPetGuid, 0xC );

	this->ProcessEvent ( pFnRequestedPetWindow, &RequestedPetWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdatePets
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::UpdatePets ( )
{
	static UFunction* pFnUpdatePets = NULL;

	if ( ! pFnUpdatePets )
		pFnUpdatePets = (UFunction*) UObject::GObjObjects()->Data[ 55929 ];

	UNowGFXHudScene_execUpdatePets_Parms UpdatePets_Parms;

	this->ProcessEvent ( pFnUpdatePets, &UpdatePets_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPets
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::InitPets ( )
{
	static UFunction* pFnInitPets = NULL;

	if ( ! pFnInitPets )
		pFnInitPets = (UFunction*) UObject::GObjObjects()->Data[ 55928 ];

	UNowGFXHudScene_execInitPets_Parms InitPets_Parms;

	this->ProcessEvent ( pFnInitPets, &InitPets_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SkillLockStateChanged
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iLockState                     ( CPF_Parm )

void UNowGFXHudScene::SkillLockStateChanged ( struct FString sGuid, int iLockState )
{
	static UFunction* pFnSkillLockStateChanged = NULL;

	if ( ! pFnSkillLockStateChanged )
		pFnSkillLockStateChanged = (UFunction*) UObject::GObjObjects()->Data[ 55925 ];

	UNowGFXHudScene_execSkillLockStateChanged_Parms SkillLockStateChanged_Parms;
	memcpy ( &SkillLockStateChanged_Parms.sGuid, &sGuid, 0xC );
	SkillLockStateChanged_Parms.iLockState = iLockState;

	this->ProcessEvent ( pFnSkillLockStateChanged, &SkillLockStateChanged_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SkillDecreaseLevel
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SkillDecreaseLevel ( struct FString sGuid )
{
	static UFunction* pFnSkillDecreaseLevel = NULL;

	if ( ! pFnSkillDecreaseLevel )
		pFnSkillDecreaseLevel = (UFunction*) UObject::GObjObjects()->Data[ 55923 ];

	UNowGFXHudScene_execSkillDecreaseLevel_Parms SkillDecreaseLevel_Parms;
	memcpy ( &SkillDecreaseLevel_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnSkillDecreaseLevel, &SkillDecreaseLevel_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addSkillGroup
// [0x00020002] 
// Parameters infos:
// struct FString                 GroupName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addSkillGroup ( struct FString GroupName, struct FString sGuid )
{
	static UFunction* pFnaddSkillGroup = NULL;

	if ( ! pFnaddSkillGroup )
		pFnaddSkillGroup = (UFunction*) UObject::GObjObjects()->Data[ 55920 ];

	UNowGFXHudScene_execaddSkillGroup_Parms addSkillGroup_Parms;
	memcpy ( &addSkillGroup_Parms.GroupName, &GroupName, 0xC );
	memcpy ( &addSkillGroup_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnaddSkillGroup, &addSkillGroup_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showSkills
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXHudScene::showSkills ( unsigned long bVisible )
{
	static UFunction* pFnshowSkills = NULL;

	if ( ! pFnshowSkills )
		pFnshowSkills = (UFunction*) UObject::GObjObjects()->Data[ 55918 ];

	UNowGFXHudScene_execshowSkills_Parms showSkills_Parms;
	showSkills_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnshowSkills, &showSkills_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setskill
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventsetskill ( struct FString sGuid, struct FString sData )
{
	static UFunction* pFnsetskill = NULL;

	if ( ! pFnsetskill )
		pFnsetskill = (UFunction*) UObject::GObjObjects()->Data[ 55915 ];

	UNowGFXHudScene_eventsetskill_Parms setskill_Parms;
	memcpy ( &setskill_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &setskill_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnsetskill, &setskill_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ToggleSkillBook
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ToggleSkillBook ( )
{
	static UFunction* pFnToggleSkillBook = NULL;

	if ( ! pFnToggleSkillBook )
		pFnToggleSkillBook = (UFunction*) UObject::GObjObjects()->Data[ 55914 ];

	UNowGFXHudScene_execToggleSkillBook_Parms ToggleSkillBook_Parms;

	this->ProcessEvent ( pFnToggleSkillBook, &ToggleSkillBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendSkillsToFlash
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventSendSkillsToFlash ( )
{
	static UFunction* pFnSendSkillsToFlash = NULL;

	if ( ! pFnSendSkillsToFlash )
		pFnSendSkillsToFlash = (UFunction*) UObject::GObjObjects()->Data[ 55912 ];

	UNowGFXHudScene_eventSendSkillsToFlash_Parms SendSkillsToFlash_Parms;

	this->ProcessEvent ( pFnSendSkillsToFlash, &SendSkillsToFlash_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddSkillData
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sSkillGuid                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillData                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddSkillData ( struct FString sSkillGuid, struct FString sSkillData )
{
	static UFunction* pFnAddSkillData = NULL;

	if ( ! pFnAddSkillData )
		pFnAddSkillData = (UFunction*) UObject::GObjObjects()->Data[ 55908 ];

	UNowGFXHudScene_eventAddSkillData_Parms AddSkillData_Parms;
	memcpy ( &AddSkillData_Parms.sSkillGuid, &sSkillGuid, 0xC );
	memcpy ( &AddSkillData_Parms.sSkillData, &sSkillData, 0xC );

	this->ProcessEvent ( pFnAddSkillData, &AddSkillData_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendSkillGroupsToFlash
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SendSkillGroupsToFlash ( )
{
	static UFunction* pFnSendSkillGroupsToFlash = NULL;

	if ( ! pFnSendSkillGroupsToFlash )
		pFnSendSkillGroupsToFlash = (UFunction*) UObject::GObjObjects()->Data[ 55907 ];

	UNowGFXHudScene_execSendSkillGroupsToFlash_Parms SendSkillGroupsToFlash_Parms;

	this->ProcessEvent ( pFnSendSkillGroupsToFlash, &SendSkillGroupsToFlash_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitSkillBook
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitSkillBook ( )
{
	static UFunction* pFnInitSkillBook = NULL;

	if ( ! pFnInitSkillBook )
		pFnInitSkillBook = (UFunction*) UObject::GObjObjects()->Data[ 55906 ];

	UNowGFXHudScene_execInitSkillBook_Parms InitSkillBook_Parms;

	this->ProcessEvent ( pFnInitSkillBook, &InitSkillBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillMySkillData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillMySkillData ( )
{
	static UFunction* pFnFillMySkillData = NULL;

	if ( ! pFnFillMySkillData )
		pFnFillMySkillData = (UFunction*) UObject::GObjObjects()->Data[ 55905 ];

	UNowGFXHudScene_execFillMySkillData_Parms FillMySkillData_Parms;

	pFnFillMySkillData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillMySkillData, &FillMySkillData_Parms, NULL );

	pFnFillMySkillData->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.FillSkillData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillSkillData ( )
{
	static UFunction* pFnFillSkillData = NULL;

	if ( ! pFnFillSkillData )
		pFnFillSkillData = (UFunction*) UObject::GObjObjects()->Data[ 55904 ];

	UNowGFXHudScene_execFillSkillData_Parms FillSkillData_Parms;

	pFnFillSkillData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillSkillData, &FillSkillData_Parms, NULL );

	pFnFillSkillData->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.useActionBar
// [0x00020002] 
// Parameters infos:
// int                            barId                          ( CPF_Parm )
// int                            slotId                         ( CPF_Parm )

void UNowGFXHudScene::useActionBar ( int barId, int slotId )
{
	static UFunction* pFnuseActionBar = NULL;

	if ( ! pFnuseActionBar )
		pFnuseActionBar = (UFunction*) UObject::GObjObjects()->Data[ 55901 ];

	UNowGFXHudScene_execuseActionBar_Parms useActionBar_Parms;
	useActionBar_Parms.barId = barId;
	useActionBar_Parms.slotId = slotId;

	this->ProcessEvent ( pFnuseActionBar, &useActionBar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addHotbar
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// int                            numSlots                       ( CPF_Parm )

void UNowGFXHudScene::addHotbar ( int Id, int numSlots )
{
	static UFunction* pFnaddHotbar = NULL;

	if ( ! pFnaddHotbar )
		pFnaddHotbar = (UFunction*) UObject::GObjObjects()->Data[ 55898 ];

	UNowGFXHudScene_execaddHotbar_Parms addHotbar_Parms;
	addHotbar_Parms.Id = Id;
	addHotbar_Parms.numSlots = numSlots;

	this->ProcessEvent ( pFnaddHotbar, &addHotbar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitHotbar
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::InitHotbar ( )
{
	static UFunction* pFnInitHotbar = NULL;

	if ( ! pFnInitHotbar )
		pFnInitHotbar = (UFunction*) UObject::GObjObjects()->Data[ 55897 ];

	UNowGFXHudScene_execInitHotbar_Parms InitHotbar_Parms;

	this->ProcessEvent ( pFnInitHotbar, &InitHotbar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showMacros
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showMacros ( )
{
	static UFunction* pFnshowMacros = NULL;

	if ( ! pFnshowMacros )
		pFnshowMacros = (UFunction*) UObject::GObjObjects()->Data[ 55896 ];

	UNowGFXHudScene_execshowMacros_Parms showMacros_Parms;

	this->ProcessEvent ( pFnshowMacros, &showMacros_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitMacros
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::InitMacros ( )
{
	static UFunction* pFnInitMacros = NULL;

	if ( ! pFnInitMacros )
		pFnInitMacros = (UFunction*) UObject::GObjObjects()->Data[ 55895 ];

	UNowGFXHudScene_execInitMacros_Parms InitMacros_Parms;

	this->ProcessEvent ( pFnInitMacros, &InitMacros_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeSpellbook
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeSpellbook ( )
{
	static UFunction* pFncloseSpellbook = NULL;

	if ( ! pFncloseSpellbook )
		pFncloseSpellbook = (UFunction*) UObject::GObjObjects()->Data[ 55894 ];

	UNowGFXHudScene_execcloseSpellbook_Parms closeSpellbook_Parms;

	this->ProcessEvent ( pFncloseSpellbook, &closeSpellbook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showSpellbook
// [0x00020002] 
// Parameters infos:
// unsigned long                  bGreaterHealing                ( CPF_Parm )
// unsigned long                  bCorrupt                       ( CPF_Parm )
// unsigned long                  bThunderlash                   ( CPF_Parm )
// unsigned long                  bFulmination                   ( CPF_Parm )
// unsigned long                  bSpurt                         ( CPF_Parm )
// unsigned long                  bLesserHealing                 ( CPF_Parm )
// unsigned long                  bPurify                        ( CPF_Parm )
// unsigned long                  bFireball                      ( CPF_Parm )
// unsigned long                  bLightning                     ( CPF_Parm )
// unsigned long                  bMagicReflection               ( CPF_Parm )
// unsigned long                  bMindBlast                     ( CPF_Parm )
// unsigned long                  bFlameStrike                   ( CPF_Parm )
// unsigned long                  bEarthquake                    ( CPF_Parm )
// unsigned long                  bResurrect                     ( CPF_Parm )
// unsigned long                  bTranscendentalAwareness       ( CPF_Parm )

void UNowGFXHudScene::showSpellbook ( unsigned long bGreaterHealing, unsigned long bCorrupt, unsigned long bThunderlash, unsigned long bFulmination, unsigned long bSpurt, unsigned long bLesserHealing, unsigned long bPurify, unsigned long bFireball, unsigned long bLightning, unsigned long bMagicReflection, unsigned long bMindBlast, unsigned long bFlameStrike, unsigned long bEarthquake, unsigned long bResurrect, unsigned long bTranscendentalAwareness )
{
	static UFunction* pFnshowSpellbook = NULL;

	if ( ! pFnshowSpellbook )
		pFnshowSpellbook = (UFunction*) UObject::GObjObjects()->Data[ 55878 ];

	UNowGFXHudScene_execshowSpellbook_Parms showSpellbook_Parms;
	showSpellbook_Parms.bGreaterHealing = bGreaterHealing;
	showSpellbook_Parms.bCorrupt = bCorrupt;
	showSpellbook_Parms.bThunderlash = bThunderlash;
	showSpellbook_Parms.bFulmination = bFulmination;
	showSpellbook_Parms.bSpurt = bSpurt;
	showSpellbook_Parms.bLesserHealing = bLesserHealing;
	showSpellbook_Parms.bPurify = bPurify;
	showSpellbook_Parms.bFireball = bFireball;
	showSpellbook_Parms.bLightning = bLightning;
	showSpellbook_Parms.bMagicReflection = bMagicReflection;
	showSpellbook_Parms.bMindBlast = bMindBlast;
	showSpellbook_Parms.bFlameStrike = bFlameStrike;
	showSpellbook_Parms.bEarthquake = bEarthquake;
	showSpellbook_Parms.bResurrect = bResurrect;
	showSpellbook_Parms.bTranscendentalAwareness = bTranscendentalAwareness;

	this->ProcessEvent ( pFnshowSpellbook, &showSpellbook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DoShowSpellBook
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::DoShowSpellBook ( )
{
	static UFunction* pFnDoShowSpellBook = NULL;

	if ( ! pFnDoShowSpellBook )
		pFnDoShowSpellBook = (UFunction*) UObject::GObjObjects()->Data[ 55877 ];

	UNowGFXHudScene_execDoShowSpellBook_Parms DoShowSpellBook_Parms;

	this->ProcessEvent ( pFnDoShowSpellBook, &DoShowSpellBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitSpellBook
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::InitSpellBook ( )
{
	static UFunction* pFnInitSpellBook = NULL;

	if ( ! pFnInitSpellBook )
		pFnInitSpellBook = (UFunction*) UObject::GObjObjects()->Data[ 55876 ];

	UNowGFXHudScene_execInitSpellBook_Parms InitSpellBook_Parms;

	this->ProcessEvent ( pFnInitSpellBook, &InitSpellBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveAllBars
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::RemoveAllBars ( )
{
	static UFunction* pFnRemoveAllBars = NULL;

	if ( ! pFnRemoveAllBars )
		pFnRemoveAllBars = (UFunction*) UObject::GObjObjects()->Data[ 55875 ];

	UNowGFXHudScene_execRemoveAllBars_Parms RemoveAllBars_Parms;

	this->ProcessEvent ( pFnRemoveAllBars, &RemoveAllBars_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeModBar
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeModBar ( struct FString Id )
{
	static UFunction* pFnremoveModBar = NULL;

	if ( ! pFnremoveModBar )
		pFnremoveModBar = (UFunction*) UObject::GObjObjects()->Data[ 55873 ];

	UNowGFXHudScene_execremoveModBar_Parms removeModBar_Parms;
	memcpy ( &removeModBar_Parms.Id, &Id, 0xC );

	this->ProcessEvent ( pFnremoveModBar, &removeModBar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addModBar
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Icon                           ( CPF_Parm | CPF_NeedCtorLink )
// float                          etaSeconds                     ( CPF_Parm )
// struct FString                 cancelDesc                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bAutoRemove                    ( CPF_Parm )

void UNowGFXHudScene::addModBar ( struct FString Id, struct FString DisplayName, struct FString Description, struct FString Icon, float etaSeconds, struct FString cancelDesc, unsigned long bAutoRemove )
{
	static UFunction* pFnaddModBar = NULL;

	if ( ! pFnaddModBar )
		pFnaddModBar = (UFunction*) UObject::GObjObjects()->Data[ 55865 ];

	UNowGFXHudScene_execaddModBar_Parms addModBar_Parms;
	memcpy ( &addModBar_Parms.Id, &Id, 0xC );
	memcpy ( &addModBar_Parms.DisplayName, &DisplayName, 0xC );
	memcpy ( &addModBar_Parms.Description, &Description, 0xC );
	memcpy ( &addModBar_Parms.Icon, &Icon, 0xC );
	addModBar_Parms.etaSeconds = etaSeconds;
	memcpy ( &addModBar_Parms.cancelDesc, &cancelDesc, 0xC );
	addModBar_Parms.bAutoRemove = bAutoRemove;

	this->ProcessEvent ( pFnaddModBar, &addModBar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showSocial
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showSocial ( )
{
	static UFunction* pFnshowSocial = NULL;

	if ( ! pFnshowSocial )
		pFnshowSocial = (UFunction*) UObject::GObjObjects()->Data[ 55864 ];

	UNowGFXHudScene_execshowSocial_Parms showSocial_Parms;

	this->ProcessEvent ( pFnshowSocial, &showSocial_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetGuildMembersChanged
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventSetGuildMembersChanged ( )
{
	static UFunction* pFnSetGuildMembersChanged = NULL;

	if ( ! pFnSetGuildMembersChanged )
		pFnSetGuildMembersChanged = (UFunction*) UObject::GObjObjects()->Data[ 55863 ];

	UNowGFXHudScene_eventSetGuildMembersChanged_Parms SetGuildMembersChanged_Parms;

	this->ProcessEvent ( pFnSetGuildMembersChanged, &SetGuildMembersChanged_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeGuildMember
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Member                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventremoveGuildMember ( struct FString Member )
{
	static UFunction* pFnremoveGuildMember = NULL;

	if ( ! pFnremoveGuildMember )
		pFnremoveGuildMember = (UFunction*) UObject::GObjObjects()->Data[ 55861 ];

	UNowGFXHudScene_eventremoveGuildMember_Parms removeGuildMember_Parms;
	memcpy ( &removeGuildMember_Parms.Member, &Member, 0xC );

	this->ProcessEvent ( pFnremoveGuildMember, &removeGuildMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateGuildMember
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Member                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bOnline                        ( CPF_Parm )

void UNowGFXHudScene::eventupdateGuildMember ( struct FString Member, unsigned long bOnline )
{
	static UFunction* pFnupdateGuildMember = NULL;

	if ( ! pFnupdateGuildMember )
		pFnupdateGuildMember = (UFunction*) UObject::GObjObjects()->Data[ 55858 ];

	UNowGFXHudScene_eventupdateGuildMember_Parms updateGuildMember_Parms;
	memcpy ( &updateGuildMember_Parms.Member, &Member, 0xC );
	updateGuildMember_Parms.bOnline = bOnline;

	this->ProcessEvent ( pFnupdateGuildMember, &updateGuildMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestRemoveIgnore
// [0x00020002] 
// Parameters infos:
// struct FString                 req                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestRemoveIgnore ( struct FString req )
{
	static UFunction* pFnrequestRemoveIgnore = NULL;

	if ( ! pFnrequestRemoveIgnore )
		pFnrequestRemoveIgnore = (UFunction*) UObject::GObjObjects()->Data[ 55856 ];

	UNowGFXHudScene_execrequestRemoveIgnore_Parms requestRemoveIgnore_Parms;
	memcpy ( &requestRemoveIgnore_Parms.req, &req, 0xC );

	this->ProcessEvent ( pFnrequestRemoveIgnore, &requestRemoveIgnore_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestAddIgnore
// [0x00020002] 
// Parameters infos:
// struct FString                 req                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestAddIgnore ( struct FString req )
{
	static UFunction* pFnrequestAddIgnore = NULL;

	if ( ! pFnrequestAddIgnore )
		pFnrequestAddIgnore = (UFunction*) UObject::GObjObjects()->Data[ 55854 ];

	UNowGFXHudScene_execrequestAddIgnore_Parms requestAddIgnore_Parms;
	memcpy ( &requestAddIgnore_Parms.req, &req, 0xC );

	this->ProcessEvent ( pFnrequestAddIgnore, &requestAddIgnore_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestRemoveFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 req                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestRemoveFriend ( struct FString req )
{
	static UFunction* pFnrequestRemoveFriend = NULL;

	if ( ! pFnrequestRemoveFriend )
		pFnrequestRemoveFriend = (UFunction*) UObject::GObjObjects()->Data[ 55852 ];

	UNowGFXHudScene_execrequestRemoveFriend_Parms requestRemoveFriend_Parms;
	memcpy ( &requestRemoveFriend_Parms.req, &req, 0xC );

	this->ProcessEvent ( pFnrequestRemoveFriend, &requestRemoveFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestAddFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 req                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestAddFriend ( struct FString req )
{
	static UFunction* pFnrequestAddFriend = NULL;

	if ( ! pFnrequestAddFriend )
		pFnrequestAddFriend = (UFunction*) UObject::GObjObjects()->Data[ 55850 ];

	UNowGFXHudScene_execrequestAddFriend_Parms requestAddFriend_Parms;
	memcpy ( &requestAddFriend_Parms.req, &req, 0xC );

	this->ProcessEvent ( pFnrequestAddFriend, &requestAddFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateIgnore
// [0x00020002] 
// Parameters infos:
// struct FString                 ignore                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  Online                         ( CPF_Parm )

void UNowGFXHudScene::updateIgnore ( struct FString ignore, unsigned long Online )
{
	static UFunction* pFnupdateIgnore = NULL;

	if ( ! pFnupdateIgnore )
		pFnupdateIgnore = (UFunction*) UObject::GObjObjects()->Data[ 55847 ];

	UNowGFXHudScene_execupdateIgnore_Parms updateIgnore_Parms;
	memcpy ( &updateIgnore_Parms.ignore, &ignore, 0xC );
	updateIgnore_Parms.Online = Online;

	this->ProcessEvent ( pFnupdateIgnore, &updateIgnore_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 Friend                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  Online                         ( CPF_Parm )

void UNowGFXHudScene::updateFriend ( struct FString Friend, unsigned long Online )
{
	static UFunction* pFnupdateFriend = NULL;

	if ( ! pFnupdateFriend )
		pFnupdateFriend = (UFunction*) UObject::GObjObjects()->Data[ 55844 ];

	UNowGFXHudScene_execupdateFriend_Parms updateFriend_Parms;
	memcpy ( &updateFriend_Parms.Friend, &Friend, 0xC );
	updateFriend_Parms.Online = Online;

	this->ProcessEvent ( pFnupdateFriend, &updateFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeIgnore
// [0x00020002] 
// Parameters infos:
// struct FString                 ignore                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeIgnore ( struct FString ignore )
{
	static UFunction* pFnremoveIgnore = NULL;

	if ( ! pFnremoveIgnore )
		pFnremoveIgnore = (UFunction*) UObject::GObjObjects()->Data[ 55842 ];

	UNowGFXHudScene_execremoveIgnore_Parms removeIgnore_Parms;
	memcpy ( &removeIgnore_Parms.ignore, &ignore, 0xC );

	this->ProcessEvent ( pFnremoveIgnore, &removeIgnore_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 Friend                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveFriend ( struct FString Friend )
{
	static UFunction* pFnRemoveFriend = NULL;

	if ( ! pFnRemoveFriend )
		pFnRemoveFriend = (UFunction*) UObject::GObjObjects()->Data[ 55840 ];

	UNowGFXHudScene_execRemoveFriend_Parms RemoveFriend_Parms;
	memcpy ( &RemoveFriend_Parms.Friend, &Friend, 0xC );

	this->ProcessEvent ( pFnRemoveFriend, &RemoveFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addGuildMember
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  memberOnline                   ( CPF_Parm )

void UNowGFXHudScene::eventaddGuildMember ( struct FString memberName, unsigned long memberOnline )
{
	static UFunction* pFnaddGuildMember = NULL;

	if ( ! pFnaddGuildMember )
		pFnaddGuildMember = (UFunction*) UObject::GObjObjects()->Data[ 55837 ];

	UNowGFXHudScene_eventaddGuildMember_Parms addGuildMember_Parms;
	memcpy ( &addGuildMember_Parms.memberName, &memberName, 0xC );
	addGuildMember_Parms.memberOnline = memberOnline;

	this->ProcessEvent ( pFnaddGuildMember, &addGuildMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 Friend                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  Online                         ( CPF_Parm )

void UNowGFXHudScene::AddFriend ( struct FString Friend, unsigned long Online )
{
	static UFunction* pFnAddFriend = NULL;

	if ( ! pFnAddFriend )
		pFnAddFriend = (UFunction*) UObject::GObjObjects()->Data[ 55834 ];

	UNowGFXHudScene_execAddFriend_Parms AddFriend_Parms;
	memcpy ( &AddFriend_Parms.Friend, &Friend, 0xC );
	AddFriend_Parms.Online = Online;

	this->ProcessEvent ( pFnAddFriend, &AddFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addIgnore
// [0x00020002] 
// Parameters infos:
// struct FString                 ignore                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  Online                         ( CPF_Parm )

void UNowGFXHudScene::addIgnore ( struct FString ignore, unsigned long Online )
{
	static UFunction* pFnaddIgnore = NULL;

	if ( ! pFnaddIgnore )
		pFnaddIgnore = (UFunction*) UObject::GObjObjects()->Data[ 55831 ];

	UNowGFXHudScene_execaddIgnore_Parms addIgnore_Parms;
	memcpy ( &addIgnore_Parms.ignore, &ignore, 0xC );
	addIgnore_Parms.Online = Online;

	this->ProcessEvent ( pFnaddIgnore, &addIgnore_Parms, NULL );
};

// Function NowGame.NowGFXHudScene._updateFriend
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Friend                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  Online                         ( CPF_Parm )

void UNowGFXHudScene::event_updateFriend ( struct FString Friend, unsigned long Online )
{
	static UFunction* pFn_updateFriend = NULL;

	if ( ! pFn_updateFriend )
		pFn_updateFriend = (UFunction*) UObject::GObjObjects()->Data[ 55828 ];

	UNowGFXHudScene_event_updateFriend_Parms _updateFriend_Parms;
	memcpy ( &_updateFriend_Parms.Friend, &Friend, 0xC );
	_updateFriend_Parms.Online = Online;

	this->ProcessEvent ( pFn_updateFriend, &_updateFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestDeclineInvite
// [0x00020002] 
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestDeclineInvite ( struct FString FriendName )
{
	static UFunction* pFnrequestDeclineInvite = NULL;

	if ( ! pFnrequestDeclineInvite )
		pFnrequestDeclineInvite = (UFunction*) UObject::GObjObjects()->Data[ 55826 ];

	UNowGFXHudScene_execrequestDeclineInvite_Parms requestDeclineInvite_Parms;
	memcpy ( &requestDeclineInvite_Parms.FriendName, &FriendName, 0xC );

	this->ProcessEvent ( pFnrequestDeclineInvite, &requestDeclineInvite_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestDeclineFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestDeclineFriend ( struct FString FriendName )
{
	static UFunction* pFnrequestDeclineFriend = NULL;

	if ( ! pFnrequestDeclineFriend )
		pFnrequestDeclineFriend = (UFunction*) UObject::GObjObjects()->Data[ 55824 ];

	UNowGFXHudScene_execrequestDeclineFriend_Parms requestDeclineFriend_Parms;
	memcpy ( &requestDeclineFriend_Parms.FriendName, &FriendName, 0xC );

	this->ProcessEvent ( pFnrequestDeclineFriend, &requestDeclineFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestAcceptFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestAcceptFriend ( struct FString FriendName )
{
	static UFunction* pFnrequestAcceptFriend = NULL;

	if ( ! pFnrequestAcceptFriend )
		pFnrequestAcceptFriend = (UFunction*) UObject::GObjObjects()->Data[ 55822 ];

	UNowGFXHudScene_execrequestAcceptFriend_Parms requestAcceptFriend_Parms;
	memcpy ( &requestAcceptFriend_Parms.FriendName, &FriendName, 0xC );

	this->ProcessEvent ( pFnrequestAcceptFriend, &requestAcceptFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addPendingFriend
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddPendingFriend ( struct FString FriendName )
{
	static UFunction* pFnaddPendingFriend = NULL;

	if ( ! pFnaddPendingFriend )
		pFnaddPendingFriend = (UFunction*) UObject::GObjObjects()->Data[ 55820 ];

	UNowGFXHudScene_eventaddPendingFriend_Parms addPendingFriend_Parms;
	memcpy ( &addPendingFriend_Parms.FriendName, &FriendName, 0xC );

	this->ProcessEvent ( pFnaddPendingFriend, &addPendingFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateFriendList
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::updateFriendList ( )
{
	static UFunction* pFnupdateFriendList = NULL;

	if ( ! pFnupdateFriendList )
		pFnupdateFriendList = (UFunction*) UObject::GObjObjects()->Data[ 55816 ];

	UNowGFXHudScene_execupdateFriendList_Parms updateFriendList_Parms;

	this->ProcessEvent ( pFnupdateFriendList, &updateFriendList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getInitFriends
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::getInitFriends ( )
{
	static UFunction* pFngetInitFriends = NULL;

	if ( ! pFngetInitFriends )
		pFngetInitFriends = (UFunction*) UObject::GObjObjects()->Data[ 55814 ];

	UNowGFXHudScene_execgetInitFriends_Parms getInitFriends_Parms;

	this->ProcessEvent ( pFngetInitFriends, &getInitFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getPendingFriends
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::getPendingFriends ( )
{
	static UFunction* pFngetPendingFriends = NULL;

	if ( ! pFngetPendingFriends )
		pFngetPendingFriends = (UFunction*) UObject::GObjObjects()->Data[ 55811 ];

	UNowGFXHudScene_execgetPendingFriends_Parms getPendingFriends_Parms;

	this->ProcessEvent ( pFngetPendingFriends, &getPendingFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitDelegate ( )
{
	static UFunction* pFnInitDelegate = NULL;

	if ( ! pFnInitDelegate )
		pFnInitDelegate = (UFunction*) UObject::GObjObjects()->Data[ 55810 ];

	UNowGFXHudScene_eventInitDelegate_Parms InitDelegate_Parms;

	this->ProcessEvent ( pFnInitDelegate, &InitDelegate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGuildMembers
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::InitGuildMembers ( )
{
	static UFunction* pFnInitGuildMembers = NULL;

	if ( ! pFnInitGuildMembers )
		pFnInitGuildMembers = (UFunction*) UObject::GObjObjects()->Data[ 55809 ];

	UNowGFXHudScene_execInitGuildMembers_Parms InitGuildMembers_Parms;

	this->ProcessEvent ( pFnInitGuildMembers, &InitGuildMembers_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitSocial
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitSocial ( )
{
	static UFunction* pFnInitSocial = NULL;

	if ( ! pFnInitSocial )
		pFnInitSocial = (UFunction*) UObject::GObjObjects()->Data[ 55808 ];

	UNowGFXHudScene_execInitSocial_Parms InitSocial_Parms;

	this->ProcessEvent ( pFnInitSocial, &InitSocial_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CheckAddTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::eventCheckAddTimer ( )
{
	static UFunction* pFnCheckAddTimer = NULL;

	if ( ! pFnCheckAddTimer )
		pFnCheckAddTimer = (UFunction*) UObject::GObjObjects()->Data[ 55806 ];

	UNowGFXHudScene_eventCheckAddTimer_Parms CheckAddTimer_Parms;

	this->ProcessEvent ( pFnCheckAddTimer, &CheckAddTimer_Parms, NULL );

	return CheckAddTimer_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.isPlayerOnline
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UNowGFXHudScene::isPlayerOnline ( int Index )
{
	static UFunction* pFnisPlayerOnline = NULL;

	if ( ! pFnisPlayerOnline )
		pFnisPlayerOnline = (UFunction*) UObject::GObjObjects()->Data[ 55803 ];

	UNowGFXHudScene_execisPlayerOnline_Parms isPlayerOnline_Parms;
	isPlayerOnline_Parms.Index = Index;

	pFnisPlayerOnline->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisPlayerOnline, &isPlayerOnline_Parms, NULL );

	pFnisPlayerOnline->FunctionFlags |= 0x400;

	return isPlayerOnline_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.enumerateFriendNames
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       vFriendName                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UNowGFXHudScene::enumerateFriendNames ( TArray< struct FString >* vFriendName )
{
	static UFunction* pFnenumerateFriendNames = NULL;

	if ( ! pFnenumerateFriendNames )
		pFnenumerateFriendNames = (UFunction*) UObject::GObjObjects()->Data[ 55800 ];

	UNowGFXHudScene_execenumerateFriendNames_Parms enumerateFriendNames_Parms;

	pFnenumerateFriendNames->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnenumerateFriendNames, &enumerateFriendNames_Parms, NULL );

	pFnenumerateFriendNames->FunctionFlags |= 0x400;

	if ( vFriendName )
		memcpy ( vFriendName, &enumerateFriendNames_Parms.vFriendName, 0xC );
};

// Function NowGame.NowGFXHudScene.RefuseFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RefuseFriendNative ( struct FString FriendName )
{
	static UFunction* pFnRefuseFriendNative = NULL;

	if ( ! pFnRefuseFriendNative )
		pFnRefuseFriendNative = (UFunction*) UObject::GObjObjects()->Data[ 55798 ];

	UNowGFXHudScene_execRefuseFriendNative_Parms RefuseFriendNative_Parms;
	memcpy ( &RefuseFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnRefuseFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRefuseFriendNative, &RefuseFriendNative_Parms, NULL );

	pFnRefuseFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AcceptFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AcceptFriendNative ( struct FString FriendName )
{
	static UFunction* pFnAcceptFriendNative = NULL;

	if ( ! pFnAcceptFriendNative )
		pFnAcceptFriendNative = (UFunction*) UObject::GObjObjects()->Data[ 55796 ];

	UNowGFXHudScene_execAcceptFriendNative_Parms AcceptFriendNative_Parms;
	memcpy ( &AcceptFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnAcceptFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAcceptFriendNative, &AcceptFriendNative_Parms, NULL );

	pFnAcceptFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.RequestFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RequestFriendNative ( struct FString FriendName )
{
	static UFunction* pFnRequestFriendNative = NULL;

	if ( ! pFnRequestFriendNative )
		pFnRequestFriendNative = (UFunction*) UObject::GObjObjects()->Data[ 55794 ];

	UNowGFXHudScene_execRequestFriendNative_Parms RequestFriendNative_Parms;
	memcpy ( &RequestFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnRequestFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestFriendNative, &RequestFriendNative_Parms, NULL );

	pFnRequestFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.RemoveFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveFriendNative ( struct FString FriendName )
{
	static UFunction* pFnRemoveFriendNative = NULL;

	if ( ! pFnRemoveFriendNative )
		pFnRemoveFriendNative = (UFunction*) UObject::GObjObjects()->Data[ 55792 ];

	UNowGFXHudScene_execRemoveFriendNative_Parms RemoveFriendNative_Parms;
	memcpy ( &RemoveFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnRemoveFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFriendNative, &RemoveFriendNative_Parms, NULL );

	pFnRemoveFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddFriendNative ( struct FString FriendName )
{
	static UFunction* pFnAddFriendNative = NULL;

	if ( ! pFnAddFriendNative )
		pFnAddFriendNative = (UFunction*) UObject::GObjObjects()->Data[ 55790 ];

	UNowGFXHudScene_execAddFriendNative_Parms AddFriendNative_Parms;
	memcpy ( &AddFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnAddFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFriendNative, &AddFriendNative_Parms, NULL );

	pFnAddFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.removePet
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::removePet ( )
{
	static UFunction* pFnremovePet = NULL;

	if ( ! pFnremovePet )
		pFnremovePet = (UFunction*) UObject::GObjObjects()->Data[ 55789 ];

	UNowGFXHudScene_execremovePet_Parms removePet_Parms;

	this->ProcessEvent ( pFnremovePet, &removePet_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeAllPets
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::removeAllPets ( )
{
	static UFunction* pFnremoveAllPets = NULL;

	if ( ! pFnremoveAllPets )
		pFnremoveAllPets = (UFunction*) UObject::GObjObjects()->Data[ 55788 ];

	UNowGFXHudScene_execremoveAllPets_Parms removeAllPets_Parms;

	this->ProcessEvent ( pFnremoveAllPets, &removeAllPets_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPetInRange
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bInRange                       ( CPF_Parm )

void UNowGFXHudScene::setPetInRange ( struct FString petGUID, unsigned long bInRange )
{
	static UFunction* pFnsetPetInRange = NULL;

	if ( ! pFnsetPetInRange )
		pFnsetPetInRange = (UFunction*) UObject::GObjObjects()->Data[ 55785 ];

	UNowGFXHudScene_execsetPetInRange_Parms setPetInRange_Parms;
	memcpy ( &setPetInRange_Parms.petGUID, &petGUID, 0xC );
	setPetInRange_Parms.bInRange = bInRange;

	this->ProcessEvent ( pFnsetPetInRange, &setPetInRange_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showPetInformation
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showPetInformation ( struct FString petGUID )
{
	static UFunction* pFnshowPetInformation = NULL;

	if ( ! pFnshowPetInformation )
		pFnshowPetInformation = (UFunction*) UObject::GObjObjects()->Data[ 55783 ];

	UNowGFXHudScene_execshowPetInformation_Parms showPetInformation_Parms;
	memcpy ( &showPetInformation_Parms.petGUID, &petGUID, 0xC );

	this->ProcessEvent ( pFnshowPetInformation, &showPetInformation_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPetAttack
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            ATTACK                         ( CPF_Parm )
// unsigned long                  bEnabled                       ( CPF_Parm )

void UNowGFXHudScene::setPetAttack ( struct FString petGUID, struct FString Label, int ATTACK, unsigned long bEnabled )
{
	static UFunction* pFnsetPetAttack = NULL;

	if ( ! pFnsetPetAttack )
		pFnsetPetAttack = (UFunction*) UObject::GObjObjects()->Data[ 55778 ];

	UNowGFXHudScene_execsetPetAttack_Parms setPetAttack_Parms;
	memcpy ( &setPetAttack_Parms.petGUID, &petGUID, 0xC );
	memcpy ( &setPetAttack_Parms.Label, &Label, 0xC );
	setPetAttack_Parms.ATTACK = ATTACK;
	setPetAttack_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnsetPetAttack, &setPetAttack_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPetAttribute
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            lockState                      ( CPF_Parm )
// struct FString                 sToolTip                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setPetAttribute ( struct FString petGUID, struct FString Label, struct FString Value, int lockState, struct FString sToolTip )
{
	static UFunction* pFnsetPetAttribute = NULL;

	if ( ! pFnsetPetAttribute )
		pFnsetPetAttribute = (UFunction*) UObject::GObjObjects()->Data[ 55772 ];

	UNowGFXHudScene_execsetPetAttribute_Parms setPetAttribute_Parms;
	memcpy ( &setPetAttribute_Parms.petGUID, &petGUID, 0xC );
	memcpy ( &setPetAttribute_Parms.Label, &Label, 0xC );
	memcpy ( &setPetAttribute_Parms.Value, &Value, 0xC );
	setPetAttribute_Parms.lockState = lockState;
	memcpy ( &setPetAttribute_Parms.sToolTip, &sToolTip, 0xC );

	this->ProcessEvent ( pFnsetPetAttribute, &setPetAttribute_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPetStat
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Value                          ( CPF_Parm )
// struct FString                 sToolTip                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setPetStat ( struct FString petGUID, struct FString Label, int Value, struct FString sToolTip )
{
	static UFunction* pFnsetPetStat = NULL;

	if ( ! pFnsetPetStat )
		pFnsetPetStat = (UFunction*) UObject::GObjObjects()->Data[ 55767 ];

	UNowGFXHudScene_execsetPetStat_Parms setPetStat_Parms;
	memcpy ( &setPetStat_Parms.petGUID, &petGUID, 0xC );
	memcpy ( &setPetStat_Parms.Label, &Label, 0xC );
	setPetStat_Parms.Value = Value;
	memcpy ( &setPetStat_Parms.sToolTip, &sToolTip, 0xC );

	this->ProcessEvent ( pFnsetPetStat, &setPetStat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addPet
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 skillName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addPet ( struct FString petGUID, struct FString DisplayName, struct FString skillName )
{
	static UFunction* pFnaddPet = NULL;

	if ( ! pFnaddPet )
		pFnaddPet = (UFunction*) UObject::GObjObjects()->Data[ 55763 ];

	UNowGFXHudScene_execaddPet_Parms addPet_Parms;
	memcpy ( &addPet_Parms.petGUID, &petGUID, 0xC );
	memcpy ( &addPet_Parms.DisplayName, &DisplayName, 0xC );
	memcpy ( &addPet_Parms.skillName, &skillName, 0xC );

	this->ProcessEvent ( pFnaddPet, &addPet_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FeedPet
// [0x00020002] 
// Parameters infos:
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::FeedPet ( struct FString sPetGuid, struct FString sItemGuid )
{
	static UFunction* pFnFeedPet = NULL;

	if ( ! pFnFeedPet )
		pFnFeedPet = (UFunction*) UObject::GObjObjects()->Data[ 55760 ];

	UNowGFXHudScene_execFeedPet_Parms FeedPet_Parms;
	memcpy ( &FeedPet_Parms.sPetGuid, &sPetGuid, 0xC );
	memcpy ( &FeedPet_Parms.sItemGuid, &sItemGuid, 0xC );

	this->ProcessEvent ( pFnFeedPet, &FeedPet_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetPetLockState
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iLockState                     ( CPF_Parm )

void UNowGFXHudScene::SetPetLockState ( struct FString sGuid, struct FString sLabel, int iLockState )
{
	static UFunction* pFnSetPetLockState = NULL;

	if ( ! pFnSetPetLockState )
		pFnSetPetLockState = (UFunction*) UObject::GObjObjects()->Data[ 55756 ];

	UNowGFXHudScene_execSetPetLockState_Parms SetPetLockState_Parms;
	memcpy ( &SetPetLockState_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &SetPetLockState_Parms.sLabel, &sLabel, 0xC );
	SetPetLockState_Parms.iLockState = iLockState;

	this->ProcessEvent ( pFnSetPetLockState, &SetPetLockState_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddPetInfo
// [0x00020002] 
// Parameters infos:
// int                            iPetIndex                      ( CPF_Parm )

void UNowGFXHudScene::AddPetInfo ( int iPetIndex )
{
	static UFunction* pFnAddPetInfo = NULL;

	if ( ! pFnAddPetInfo )
		pFnAddPetInfo = (UFunction*) UObject::GObjObjects()->Data[ 55747 ];

	UNowGFXHudScene_execAddPetInfo_Parms AddPetInfo_Parms;
	AddPetInfo_Parms.iPetIndex = iPetIndex;

	this->ProcessEvent ( pFnAddPetInfo, &AddPetInfo_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearPets
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearPets ( )
{
	static UFunction* pFnclearPets = NULL;

	if ( ! pFnclearPets )
		pFnclearPets = (UFunction*) UObject::GObjObjects()->Data[ 55746 ];

	UNowGFXHudScene_execclearPets_Parms clearPets_Parms;

	this->ProcessEvent ( pFnclearPets, &clearPets_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updatePetInfo
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::updatePetInfo ( )
{
	static UFunction* pFnupdatePetInfo = NULL;

	if ( ! pFnupdatePetInfo )
		pFnupdatePetInfo = (UFunction*) UObject::GObjObjects()->Data[ 55743 ];

	UNowGFXHudScene_execupdatePetInfo_Parms updatePetInfo_Parms;

	this->ProcessEvent ( pFnupdatePetInfo, &updatePetInfo_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkTransferReceipts
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TalkTransferReceipts ( )
{
	static UFunction* pFnTalkTransferReceipts = NULL;

	if ( ! pFnTalkTransferReceipts )
		pFnTalkTransferReceipts = (UFunction*) UObject::GObjObjects()->Data[ 55742 ];

	UNowGFXHudScene_execTalkTransferReceipts_Parms TalkTransferReceipts_Parms;

	this->ProcessEvent ( pFnTalkTransferReceipts, &TalkTransferReceipts_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkCheckTraining
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkCheckTraining ( int iIndex )
{
	static UFunction* pFnTalkCheckTraining = NULL;

	if ( ! pFnTalkCheckTraining )
		pFnTalkCheckTraining = (UFunction*) UObject::GObjObjects()->Data[ 55740 ];

	UNowGFXHudScene_execTalkCheckTraining_Parms TalkCheckTraining_Parms;
	TalkCheckTraining_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkCheckTraining, &TalkCheckTraining_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkCheckBreeding
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkCheckBreeding ( int iIndex )
{
	static UFunction* pFnTalkCheckBreeding = NULL;

	if ( ! pFnTalkCheckBreeding )
		pFnTalkCheckBreeding = (UFunction*) UObject::GObjObjects()->Data[ 55738 ];

	UNowGFXHudScene_execTalkCheckBreeding_Parms TalkCheckBreeding_Parms;
	TalkCheckBreeding_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkCheckBreeding, &TalkCheckBreeding_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkBreedFemaleF
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkBreedFemaleF ( int iIndex )
{
	static UFunction* pFnTalkBreedFemaleF = NULL;

	if ( ! pFnTalkBreedFemaleF )
		pFnTalkBreedFemaleF = (UFunction*) UObject::GObjObjects()->Data[ 55736 ];

	UNowGFXHudScene_execTalkBreedFemaleF_Parms TalkBreedFemaleF_Parms;
	TalkBreedFemaleF_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkBreedFemaleF, &TalkBreedFemaleF_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkBreedFemaleE
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkBreedFemaleE ( int iIndex )
{
	static UFunction* pFnTalkBreedFemaleE = NULL;

	if ( ! pFnTalkBreedFemaleE )
		pFnTalkBreedFemaleE = (UFunction*) UObject::GObjObjects()->Data[ 55734 ];

	UNowGFXHudScene_execTalkBreedFemaleE_Parms TalkBreedFemaleE_Parms;
	TalkBreedFemaleE_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkBreedFemaleE, &TalkBreedFemaleE_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkBreedFemaleD
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkBreedFemaleD ( int iIndex )
{
	static UFunction* pFnTalkBreedFemaleD = NULL;

	if ( ! pFnTalkBreedFemaleD )
		pFnTalkBreedFemaleD = (UFunction*) UObject::GObjObjects()->Data[ 55732 ];

	UNowGFXHudScene_execTalkBreedFemaleD_Parms TalkBreedFemaleD_Parms;
	TalkBreedFemaleD_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkBreedFemaleD, &TalkBreedFemaleD_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkBreedFemaleC
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkBreedFemaleC ( int iIndex )
{
	static UFunction* pFnTalkBreedFemaleC = NULL;

	if ( ! pFnTalkBreedFemaleC )
		pFnTalkBreedFemaleC = (UFunction*) UObject::GObjObjects()->Data[ 55730 ];

	UNowGFXHudScene_execTalkBreedFemaleC_Parms TalkBreedFemaleC_Parms;
	TalkBreedFemaleC_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkBreedFemaleC, &TalkBreedFemaleC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkBreedFemaleB
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkBreedFemaleB ( int iIndex )
{
	static UFunction* pFnTalkBreedFemaleB = NULL;

	if ( ! pFnTalkBreedFemaleB )
		pFnTalkBreedFemaleB = (UFunction*) UObject::GObjObjects()->Data[ 55728 ];

	UNowGFXHudScene_execTalkBreedFemaleB_Parms TalkBreedFemaleB_Parms;
	TalkBreedFemaleB_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkBreedFemaleB, &TalkBreedFemaleB_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CheckBreedEquipment
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::CheckBreedEquipment ( )
{
	static UFunction* pFnCheckBreedEquipment = NULL;

	if ( ! pFnCheckBreedEquipment )
		pFnCheckBreedEquipment = (UFunction*) UObject::GObjObjects()->Data[ 55726 ];

	UNowGFXHudScene_execCheckBreedEquipment_Parms CheckBreedEquipment_Parms;

	this->ProcessEvent ( pFnCheckBreedEquipment, &CheckBreedEquipment_Parms, NULL );

	return CheckBreedEquipment_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.TalkBreedFemaleA
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkBreedFemaleA ( int iIndex )
{
	static UFunction* pFnTalkBreedFemaleA = NULL;

	if ( ! pFnTalkBreedFemaleA )
		pFnTalkBreedFemaleA = (UFunction*) UObject::GObjObjects()->Data[ 55724 ];

	UNowGFXHudScene_execTalkBreedFemaleA_Parms TalkBreedFemaleA_Parms;
	TalkBreedFemaleA_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkBreedFemaleA, &TalkBreedFemaleA_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkBreedMaleF
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkBreedMaleF ( int iIndex )
{
	static UFunction* pFnTalkBreedMaleF = NULL;

	if ( ! pFnTalkBreedMaleF )
		pFnTalkBreedMaleF = (UFunction*) UObject::GObjObjects()->Data[ 55722 ];

	UNowGFXHudScene_execTalkBreedMaleF_Parms TalkBreedMaleF_Parms;
	TalkBreedMaleF_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkBreedMaleF, &TalkBreedMaleF_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkBreedMaleE
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkBreedMaleE ( int iIndex )
{
	static UFunction* pFnTalkBreedMaleE = NULL;

	if ( ! pFnTalkBreedMaleE )
		pFnTalkBreedMaleE = (UFunction*) UObject::GObjObjects()->Data[ 55720 ];

	UNowGFXHudScene_execTalkBreedMaleE_Parms TalkBreedMaleE_Parms;
	TalkBreedMaleE_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkBreedMaleE, &TalkBreedMaleE_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkBreedMaleD
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkBreedMaleD ( int iIndex )
{
	static UFunction* pFnTalkBreedMaleD = NULL;

	if ( ! pFnTalkBreedMaleD )
		pFnTalkBreedMaleD = (UFunction*) UObject::GObjObjects()->Data[ 55718 ];

	UNowGFXHudScene_execTalkBreedMaleD_Parms TalkBreedMaleD_Parms;
	TalkBreedMaleD_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkBreedMaleD, &TalkBreedMaleD_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkBreedMaleC
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkBreedMaleC ( int iIndex )
{
	static UFunction* pFnTalkBreedMaleC = NULL;

	if ( ! pFnTalkBreedMaleC )
		pFnTalkBreedMaleC = (UFunction*) UObject::GObjObjects()->Data[ 55716 ];

	UNowGFXHudScene_execTalkBreedMaleC_Parms TalkBreedMaleC_Parms;
	TalkBreedMaleC_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkBreedMaleC, &TalkBreedMaleC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkBreedMaleB
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkBreedMaleB ( int iIndex )
{
	static UFunction* pFnTalkBreedMaleB = NULL;

	if ( ! pFnTalkBreedMaleB )
		pFnTalkBreedMaleB = (UFunction*) UObject::GObjObjects()->Data[ 55714 ];

	UNowGFXHudScene_execTalkBreedMaleB_Parms TalkBreedMaleB_Parms;
	TalkBreedMaleB_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkBreedMaleB, &TalkBreedMaleB_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkBreedMaleA
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkBreedMaleA ( int iIndex )
{
	static UFunction* pFnTalkBreedMaleA = NULL;

	if ( ! pFnTalkBreedMaleA )
		pFnTalkBreedMaleA = (UFunction*) UObject::GObjObjects()->Data[ 55712 ];

	UNowGFXHudScene_execTalkBreedMaleA_Parms TalkBreedMaleA_Parms;
	TalkBreedMaleA_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkBreedMaleA, &TalkBreedMaleA_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkUnReceipt
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkUnReceipt ( int iIndex )
{
	static UFunction* pFnTalkUnReceipt = NULL;

	if ( ! pFnTalkUnReceipt )
		pFnTalkUnReceipt = (UFunction*) UObject::GObjObjects()->Data[ 55710 ];

	UNowGFXHudScene_execTalkUnReceipt_Parms TalkUnReceipt_Parms;
	TalkUnReceipt_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkUnReceipt, &TalkUnReceipt_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkReceipt
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkReceipt ( int iIndex )
{
	static UFunction* pFnTalkReceipt = NULL;

	if ( ! pFnTalkReceipt )
		pFnTalkReceipt = (UFunction*) UObject::GObjObjects()->Data[ 55708 ];

	UNowGFXHudScene_execTalkReceipt_Parms TalkReceipt_Parms;
	TalkReceipt_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkReceipt, &TalkReceipt_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkUnstable
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkUnstable ( int iIndex )
{
	static UFunction* pFnTalkUnstable = NULL;

	if ( ! pFnTalkUnstable )
		pFnTalkUnstable = (UFunction*) UObject::GObjObjects()->Data[ 55706 ];

	UNowGFXHudScene_execTalkUnstable_Parms TalkUnstable_Parms;
	TalkUnstable_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkUnstable, &TalkUnstable_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkTrain
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkTrain ( int iIndex )
{
	static UFunction* pFnTalkTrain = NULL;

	if ( ! pFnTalkTrain )
		pFnTalkTrain = (UFunction*) UObject::GObjObjects()->Data[ 55704 ];

	UNowGFXHudScene_execTalkTrain_Parms TalkTrain_Parms;
	TalkTrain_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkTrain, &TalkTrain_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkStable
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkStable ( int iIndex )
{
	static UFunction* pFnTalkStable = NULL;

	if ( ! pFnTalkStable )
		pFnTalkStable = (UFunction*) UObject::GObjObjects()->Data[ 55702 ];

	UNowGFXHudScene_execTalkStable_Parms TalkStable_Parms;
	TalkStable_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkStable, &TalkStable_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TransferReceipts
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::TransferReceipts ( )
{
	static UFunction* pFnTransferReceipts = NULL;

	if ( ! pFnTransferReceipts )
		pFnTransferReceipts = (UFunction*) UObject::GObjObjects()->Data[ 55701 ];

	UNowGFXHudScene_execTransferReceipts_Parms TransferReceipts_Parms;

	pFnTransferReceipts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTransferReceipts, &TransferReceipts_Parms, NULL );

	pFnTransferReceipts->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetPetReceipts
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetPetReceipts ( )
{
	static UFunction* pFnGetPetReceipts = NULL;

	if ( ! pFnGetPetReceipts )
		pFnGetPetReceipts = (UFunction*) UObject::GObjObjects()->Data[ 55700 ];

	UNowGFXHudScene_execGetPetReceipts_Parms GetPetReceipts_Parms;

	pFnGetPetReceipts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetReceipts, &GetPetReceipts_Parms, NULL );

	pFnGetPetReceipts->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetStabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetStabled ( )
{
	static UFunction* pFnGetStabled = NULL;

	if ( ! pFnGetStabled )
		pFnGetStabled = (UFunction*) UObject::GObjObjects()->Data[ 55699 ];

	UNowGFXHudScene_execGetStabled_Parms GetStabled_Parms;

	pFnGetStabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStabled, &GetStabled_Parms, NULL );

	pFnGetStabled->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.CheckTrain
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::CheckTrain ( )
{
	static UFunction* pFnCheckTrain = NULL;

	if ( ! pFnCheckTrain )
		pFnCheckTrain = (UFunction*) UObject::GObjObjects()->Data[ 55698 ];

	UNowGFXHudScene_execCheckTrain_Parms CheckTrain_Parms;

	pFnCheckTrain->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckTrain, &CheckTrain_Parms, NULL );

	pFnCheckTrain->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.CheckBreed
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::CheckBreed ( )
{
	static UFunction* pFnCheckBreed = NULL;

	if ( ! pFnCheckBreed )
		pFnCheckBreed = (UFunction*) UObject::GObjObjects()->Data[ 55697 ];

	UNowGFXHudScene_execCheckBreed_Parms CheckBreed_Parms;

	pFnCheckBreed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckBreed, &CheckBreed_Parms, NULL );

	pFnCheckBreed->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.Breed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarAi*       pPetA                          ( CPF_Parm )
// class ANowAtlasAvatarAi*       pPetB                          ( CPF_Parm )

void UNowGFXHudScene::Breed ( class ANowAtlasAvatarAi* pPetA, class ANowAtlasAvatarAi* pPetB )
{
	static UFunction* pFnBreed = NULL;

	if ( ! pFnBreed )
		pFnBreed = (UFunction*) UObject::GObjObjects()->Data[ 55694 ];

	UNowGFXHudScene_execBreed_Parms Breed_Parms;
	Breed_Parms.pPetA = pPetA;
	Breed_Parms.pPetB = pPetB;

	pFnBreed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBreed, &Breed_Parms, NULL );

	pFnBreed->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.UnReceipt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::UnReceipt ( int iIndex )
{
	static UFunction* pFnUnReceipt = NULL;

	if ( ! pFnUnReceipt )
		pFnUnReceipt = (UFunction*) UObject::GObjObjects()->Data[ 55692 ];

	UNowGFXHudScene_execUnReceipt_Parms UnReceipt_Parms;
	UnReceipt_Parms.iIndex = iIndex;

	pFnUnReceipt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnReceipt, &UnReceipt_Parms, NULL );

	pFnUnReceipt->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.Receipt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::Receipt ( int iIndex )
{
	static UFunction* pFnReceipt = NULL;

	if ( ! pFnReceipt )
		pFnReceipt = (UFunction*) UObject::GObjObjects()->Data[ 55690 ];

	UNowGFXHudScene_execReceipt_Parms Receipt_Parms;
	Receipt_Parms.iIndex = iIndex;

	pFnReceipt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReceipt, &Receipt_Parms, NULL );

	pFnReceipt->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.UnStable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::UnStable ( int iIndex )
{
	static UFunction* pFnUnStable = NULL;

	if ( ! pFnUnStable )
		pFnUnStable = (UFunction*) UObject::GObjObjects()->Data[ 55688 ];

	UNowGFXHudScene_execUnStable_Parms UnStable_Parms;
	UnStable_Parms.iIndex = iIndex;

	pFnUnStable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnStable, &UnStable_Parms, NULL );

	pFnUnStable->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.Train
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarAi*       pPet                           ( CPF_Parm )

void UNowGFXHudScene::Train ( class ANowAtlasAvatarAi* pPet )
{
	static UFunction* pFnTrain = NULL;

	if ( ! pFnTrain )
		pFnTrain = (UFunction*) UObject::GObjObjects()->Data[ 55686 ];

	UNowGFXHudScene_execTrain_Parms Train_Parms;
	Train_Parms.pPet = pPet;

	pFnTrain->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTrain, &Train_Parms, NULL );

	pFnTrain->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.Stable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarAi*       pPet                           ( CPF_Parm )

void UNowGFXHudScene::Stable ( class ANowAtlasAvatarAi* pPet )
{
	static UFunction* pFnStable = NULL;

	if ( ! pFnStable )
		pFnStable = (UFunction*) UObject::GObjObjects()->Data[ 55684 ];

	UNowGFXHudScene_execStable_Parms Stable_Parms;
	Stable_Parms.pPet = pPet;

	pFnStable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStable, &Stable_Parms, NULL );

	pFnStable->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddTutorialPickables
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::AddTutorialPickables ( )
{
	static UFunction* pFnAddTutorialPickables = NULL;

	if ( ! pFnAddTutorialPickables )
		pFnAddTutorialPickables = (UFunction*) UObject::GObjObjects()->Data[ 55683 ];

	UNowGFXHudScene_execAddTutorialPickables_Parms AddTutorialPickables_Parms;

	this->ProcessEvent ( pFnAddTutorialPickables, &AddTutorialPickables_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeNpc
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventcloseNpc ( )
{
	static UFunction* pFncloseNpc = NULL;

	if ( ! pFncloseNpc )
		pFncloseNpc = (UFunction*) UObject::GObjObjects()->Data[ 55682 ];

	UNowGFXHudScene_eventcloseNpc_Parms closeNpc_Parms;

	this->ProcessEvent ( pFncloseNpc, &closeNpc_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearNpc
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearNpc ( )
{
	static UFunction* pFnclearNpc = NULL;

	if ( ! pFnclearNpc )
		pFnclearNpc = (UFunction*) UObject::GObjObjects()->Data[ 55681 ];

	UNowGFXHudScene_execclearNpc_Parms clearNpc_Parms;

	this->ProcessEvent ( pFnclearNpc, &clearNpc_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTalkerResponse
// [0x00020002] 
// Parameters infos:
// int                            ChatID                         ( CPF_Parm )
// int                            TargetID                       ( CPF_Parm )
// struct FString                 uscript                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addTalkerResponse ( int ChatID, int TargetID, struct FString uscript, struct FString msg )
{
	static UFunction* pFnaddTalkerResponse = NULL;

	if ( ! pFnaddTalkerResponse )
		pFnaddTalkerResponse = (UFunction*) UObject::GObjObjects()->Data[ 55676 ];

	UNowGFXHudScene_execaddTalkerResponse_Parms addTalkerResponse_Parms;
	addTalkerResponse_Parms.ChatID = ChatID;
	addTalkerResponse_Parms.TargetID = TargetID;
	memcpy ( &addTalkerResponse_Parms.uscript, &uscript, 0xC );
	memcpy ( &addTalkerResponse_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnaddTalkerResponse, &addTalkerResponse_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTalkerChat
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addTalkerChat ( int Id, struct FString msg )
{
	static UFunction* pFnaddTalkerChat = NULL;

	if ( ! pFnaddTalkerChat )
		pFnaddTalkerChat = (UFunction*) UObject::GObjObjects()->Data[ 55673 ];

	UNowGFXHudScene_execaddTalkerChat_Parms addTalkerChat_Parms;
	addTalkerChat_Parms.Id = Id;
	memcpy ( &addTalkerChat_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnaddTalkerChat, &addTalkerChat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showNpc
// [0x00020002] 
// Parameters infos:
// struct FString                 npcName                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 npcExit                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 npcBack                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showNpc ( struct FString npcName, struct FString npcExit, struct FString npcBack )
{
	static UFunction* pFnshowNpc = NULL;

	if ( ! pFnshowNpc )
		pFnshowNpc = (UFunction*) UObject::GObjObjects()->Data[ 55669 ];

	UNowGFXHudScene_execshowNpc_Parms showNpc_Parms;
	memcpy ( &showNpc_Parms.npcName, &npcName, 0xC );
	memcpy ( &showNpc_Parms.npcExit, &npcExit, 0xC );
	memcpy ( &showNpc_Parms.npcBack, &npcBack, 0xC );

	this->ProcessEvent ( pFnshowNpc, &showNpc_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.StartTalker
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::StartTalker ( )
{
	static UFunction* pFnStartTalker = NULL;

	if ( ! pFnStartTalker )
		pFnStartTalker = (UFunction*) UObject::GObjObjects()->Data[ 55665 ];

	UNowGFXHudScene_execStartTalker_Parms StartTalker_Parms;

	this->ProcessEvent ( pFnStartTalker, &StartTalker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TerritoryOwnerVendorBad
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuildName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventTerritoryOwnerVendorBad ( struct FString sGuildName )
{
	static UFunction* pFnTerritoryOwnerVendorBad = NULL;

	if ( ! pFnTerritoryOwnerVendorBad )
		pFnTerritoryOwnerVendorBad = (UFunction*) UObject::GObjObjects()->Data[ 55663 ];

	UNowGFXHudScene_eventTerritoryOwnerVendorBad_Parms TerritoryOwnerVendorBad_Parms;
	memcpy ( &TerritoryOwnerVendorBad_Parms.sGuildName, &sGuildName, 0xC );

	this->ProcessEvent ( pFnTerritoryOwnerVendorBad, &TerritoryOwnerVendorBad_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GuildOnlyVendorBad
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuildName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventGuildOnlyVendorBad ( struct FString sGuildName )
{
	static UFunction* pFnGuildOnlyVendorBad = NULL;

	if ( ! pFnGuildOnlyVendorBad )
		pFnGuildOnlyVendorBad = (UFunction*) UObject::GObjObjects()->Data[ 55661 ];

	UNowGFXHudScene_eventGuildOnlyVendorBad_Parms GuildOnlyVendorBad_Parms;
	memcpy ( &GuildOnlyVendorBad_Parms.sGuildName, &sGuildName, 0xC );

	this->ProcessEvent ( pFnGuildOnlyVendorBad, &GuildOnlyVendorBad_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.LoadNpcInfo
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::LoadNpcInfo ( )
{
	static UFunction* pFnLoadNpcInfo = NULL;

	if ( ! pFnLoadNpcInfo )
		pFnLoadNpcInfo = (UFunction*) UObject::GObjObjects()->Data[ 55649 ];

	UNowGFXHudScene_execLoadNpcInfo_Parms LoadNpcInfo_Parms;

	this->ProcessEvent ( pFnLoadNpcInfo, &LoadNpcInfo_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.LoadUiInfoTalker
// [0x00024002] 
// Parameters infos:
// class UUIInfoTalker*           pInfo                          ( CPF_Parm )
// class ANowAtlasAvatar*         pMyTalker                      ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::LoadUiInfoTalker ( class UUIInfoTalker* pInfo, class ANowAtlasAvatar* pMyTalker )
{
	static UFunction* pFnLoadUiInfoTalker = NULL;

	if ( ! pFnLoadUiInfoTalker )
		pFnLoadUiInfoTalker = (UFunction*) UObject::GObjObjects()->Data[ 55645 ];

	UNowGFXHudScene_execLoadUiInfoTalker_Parms LoadUiInfoTalker_Parms;
	LoadUiInfoTalker_Parms.pInfo = pInfo;
	LoadUiInfoTalker_Parms.pMyTalker = pMyTalker;

	this->ProcessEvent ( pFnLoadUiInfoTalker, &LoadUiInfoTalker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendTalkerRequest
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendTalkerRequest ( )
{
	static UFunction* pFnSendTalkerRequest = NULL;

	if ( ! pFnSendTalkerRequest )
		pFnSendTalkerRequest = (UFunction*) UObject::GObjObjects()->Data[ 55644 ];

	UNowGFXHudScene_execSendTalkerRequest_Parms SendTalkerRequest_Parms;

	pFnSendTalkerRequest->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendTalkerRequest, &SendTalkerRequest_Parms, NULL );

	pFnSendTalkerRequest->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GiveSkill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            I                              ( CPF_Parm )

void UNowGFXHudScene::GiveSkill ( int I )
{
	static UFunction* pFnGiveSkill = NULL;

	if ( ! pFnGiveSkill )
		pFnGiveSkill = (UFunction*) UObject::GObjObjects()->Data[ 55642 ];

	UNowGFXHudScene_execGiveSkill_Parms GiveSkill_Parms;
	GiveSkill_Parms.I = I;

	pFnGiveSkill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveSkill, &GiveSkill_Parms, NULL );

	pFnGiveSkill->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.toggleCommandMenu
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXHudScene::toggleCommandMenu ( unsigned long bVisible )
{
	static UFunction* pFntoggleCommandMenu = NULL;

	if ( ! pFntoggleCommandMenu )
		pFntoggleCommandMenu = (UFunction*) UObject::GObjObjects()->Data[ 55640 ];

	UNowGFXHudScene_exectoggleCommandMenu_Parms toggleCommandMenu_Parms;
	toggleCommandMenu_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFntoggleCommandMenu, &toggleCommandMenu_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearCommandOptions
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearCommandOptions ( )
{
	static UFunction* pFnclearCommandOptions = NULL;

	if ( ! pFnclearCommandOptions )
		pFnclearCommandOptions = (UFunction*) UObject::GObjObjects()->Data[ 55639 ];

	UNowGFXHudScene_execclearCommandOptions_Parms clearCommandOptions_Parms;

	this->ProcessEvent ( pFnclearCommandOptions, &clearCommandOptions_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addCommandOption
// [0x00020002] 
// Parameters infos:
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addCommandOption ( struct FString sString )
{
	static UFunction* pFnaddCommandOption = NULL;

	if ( ! pFnaddCommandOption )
		pFnaddCommandOption = (UFunction*) UObject::GObjObjects()->Data[ 55637 ];

	UNowGFXHudScene_execaddCommandOption_Parms addCommandOption_Parms;
	memcpy ( &addCommandOption_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnaddCommandOption, &addCommandOption_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCommandTitle
// [0x00020002] 
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setCommandTitle ( struct FString sTitle )
{
	static UFunction* pFnsetCommandTitle = NULL;

	if ( ! pFnsetCommandTitle )
		pFnsetCommandTitle = (UFunction*) UObject::GObjObjects()->Data[ 55635 ];

	UNowGFXHudScene_execsetCommandTitle_Parms setCommandTitle_Parms;
	memcpy ( &setCommandTitle_Parms.sTitle, &sTitle, 0xC );

	this->ProcessEvent ( pFnsetCommandTitle, &setCommandTitle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetOption
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::SetOption ( int iIndex )
{
	static UFunction* pFnSetOption = NULL;

	if ( ! pFnSetOption )
		pFnSetOption = (UFunction*) UObject::GObjObjects()->Data[ 55633 ];

	UNowGFXHudScene_execSetOption_Parms SetOption_Parms;
	SetOption_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnSetOption, &SetOption_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendCommand
// [0x00020002] 
// Parameters infos:
// int                            FinalCommand                   ( CPF_Parm )

void UNowGFXHudScene::SendCommand ( int FinalCommand )
{
	static UFunction* pFnSendCommand = NULL;

	if ( ! pFnSendCommand )
		pFnSendCommand = (UFunction*) UObject::GObjObjects()->Data[ 55629 ];

	UNowGFXHudScene_execSendCommand_Parms SendCommand_Parms;
	SendCommand_Parms.FinalCommand = FinalCommand;

	this->ProcessEvent ( pFnSendCommand, &SendCommand_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RedrawMenuOptions
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::RedrawMenuOptions ( )
{
	static UFunction* pFnRedrawMenuOptions = NULL;

	if ( ! pFnRedrawMenuOptions )
		pFnRedrawMenuOptions = (UFunction*) UObject::GObjObjects()->Data[ 55627 ];

	UNowGFXHudScene_execRedrawMenuOptions_Parms RedrawMenuOptions_Parms;

	this->ProcessEvent ( pFnRedrawMenuOptions, &RedrawMenuOptions_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.NumberPressed
// [0x00020002] 
// Parameters infos:
// int                            iNr                            ( CPF_Parm )

void UNowGFXHudScene::NumberPressed ( int iNr )
{
	static UFunction* pFnNumberPressed = NULL;

	if ( ! pFnNumberPressed )
		pFnNumberPressed = (UFunction*) UObject::GObjObjects()->Data[ 55624 ];

	UNowGFXHudScene_execNumberPressed_Parms NumberPressed_Parms;
	NumberPressed_Parms.iNr = iNr;

	this->ProcessEvent ( pFnNumberPressed, &NumberPressed_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ShowCommandMenu
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ShowCommandMenu ( )
{
	static UFunction* pFnShowCommandMenu = NULL;

	if ( ! pFnShowCommandMenu )
		pFnShowCommandMenu = (UFunction*) UObject::GObjObjects()->Data[ 55623 ];

	UNowGFXHudScene_execShowCommandMenu_Parms ShowCommandMenu_Parms;

	this->ProcessEvent ( pFnShowCommandMenu, &ShowCommandMenu_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setConfigVariable
// [0x00020002] 
// Parameters infos:
// struct FString                 sVariable                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setConfigVariable ( struct FString sVariable, struct FString sValue )
{
	static UFunction* pFnsetConfigVariable = NULL;

	if ( ! pFnsetConfigVariable )
		pFnsetConfigVariable = (UFunction*) UObject::GObjObjects()->Data[ 55620 ];

	UNowGFXHudScene_execsetConfigVariable_Parms setConfigVariable_Parms;
	memcpy ( &setConfigVariable_Parms.sVariable, &sVariable, 0xC );
	memcpy ( &setConfigVariable_Parms.sValue, &sValue, 0xC );

	this->ProcessEvent ( pFnsetConfigVariable, &setConfigVariable_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setConfigVariableLite
// [0x00020002] 
// Parameters infos:
// struct FString                 sVariable                      ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bValue                         ( CPF_Parm )

void UNowGFXHudScene::setConfigVariableLite ( struct FString sVariable, unsigned long bValue )
{
	static UFunction* pFnsetConfigVariableLite = NULL;

	if ( ! pFnsetConfigVariableLite )
		pFnsetConfigVariableLite = (UFunction*) UObject::GObjObjects()->Data[ 55617 ];

	UNowGFXHudScene_execsetConfigVariableLite_Parms setConfigVariableLite_Parms;
	memcpy ( &setConfigVariableLite_Parms.sVariable, &sVariable, 0xC );
	setConfigVariableLite_Parms.bValue = bValue;

	this->ProcessEvent ( pFnsetConfigVariableLite, &setConfigVariableLite_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setBinding
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bCtrl                          ( CPF_Parm )
// unsigned long                  bAlt                           ( CPF_Parm )
// unsigned long                  bShift                         ( CPF_Parm )

void UNowGFXHudScene::setBinding ( struct FString Id, struct FString Category, struct FString Label, struct FString Key, unsigned long bCtrl, unsigned long bAlt, unsigned long bShift )
{
	static UFunction* pFnsetBinding = NULL;

	if ( ! pFnsetBinding )
		pFnsetBinding = (UFunction*) UObject::GObjObjects()->Data[ 55609 ];

	UNowGFXHudScene_execsetBinding_Parms setBinding_Parms;
	memcpy ( &setBinding_Parms.Id, &Id, 0xC );
	memcpy ( &setBinding_Parms.Category, &Category, 0xC );
	memcpy ( &setBinding_Parms.Label, &Label, 0xC );
	memcpy ( &setBinding_Parms.Key, &Key, 0xC );
	setBinding_Parms.bCtrl = bCtrl;
	setBinding_Parms.bAlt = bAlt;
	setBinding_Parms.bShift = bShift;

	this->ProcessEvent ( pFnsetBinding, &setBinding_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showOptions
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showOptions ( )
{
	static UFunction* pFnshowOptions = NULL;

	if ( ! pFnshowOptions )
		pFnshowOptions = (UFunction*) UObject::GObjObjects()->Data[ 55608 ];

	UNowGFXHudScene_execshowOptions_Parms showOptions_Parms;

	this->ProcessEvent ( pFnshowOptions, &showOptions_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addResOption
// [0x00020002] 
// Parameters infos:
// int                            Width                          ( CPF_Parm )
// int                            Height                         ( CPF_Parm )

void UNowGFXHudScene::addResOption ( int Width, int Height )
{
	static UFunction* pFnaddResOption = NULL;

	if ( ! pFnaddResOption )
		pFnaddResOption = (UFunction*) UObject::GObjObjects()->Data[ 55605 ];

	UNowGFXHudScene_execaddResOption_Parms addResOption_Parms;
	addResOption_Parms.Width = Width;
	addResOption_Parms.Height = Height;

	this->ProcessEvent ( pFnaddResOption, &addResOption_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setActiveResOption
// [0x00020002] 
// Parameters infos:
// int                            Width                          ( CPF_Parm )
// int                            Height                         ( CPF_Parm )

void UNowGFXHudScene::setActiveResOption ( int Width, int Height )
{
	static UFunction* pFnsetActiveResOption = NULL;

	if ( ! pFnsetActiveResOption )
		pFnsetActiveResOption = (UFunction*) UObject::GObjObjects()->Data[ 55602 ];

	UNowGFXHudScene_execsetActiveResOption_Parms setActiveResOption_Parms;
	setActiveResOption_Parms.Width = Width;
	setActiveResOption_Parms.Height = Height;

	this->ProcessEvent ( pFnsetActiveResOption, &setActiveResOption_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ApplyKeyBinding
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bCtrl                          ( CPF_Parm )
// unsigned long                  bAlt                           ( CPF_Parm )
// unsigned long                  bShift                         ( CPF_Parm )

void UNowGFXHudScene::ApplyKeyBinding ( struct FString Id, struct FString Key, unsigned long bCtrl, unsigned long bAlt, unsigned long bShift )
{
	static UFunction* pFnApplyKeyBinding = NULL;

	if ( ! pFnApplyKeyBinding )
		pFnApplyKeyBinding = (UFunction*) UObject::GObjObjects()->Data[ 55596 ];

	UNowGFXHudScene_execApplyKeyBinding_Parms ApplyKeyBinding_Parms;
	memcpy ( &ApplyKeyBinding_Parms.Id, &Id, 0xC );
	memcpy ( &ApplyKeyBinding_Parms.Key, &Key, 0xC );
	ApplyKeyBinding_Parms.bCtrl = bCtrl;
	ApplyKeyBinding_Parms.bAlt = bAlt;
	ApplyKeyBinding_Parms.bShift = bShift;

	this->ProcessEvent ( pFnApplyKeyBinding, &ApplyKeyBinding_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetConfigVariableFloat
// [0x00020002] 
// Parameters infos:
// struct FString                 sVariable                      ( CPF_Parm | CPF_NeedCtorLink )
// float                          fValue                         ( CPF_Parm )

void UNowGFXHudScene::SetConfigVariableFloat ( struct FString sVariable, float fValue )
{
	static UFunction* pFnSetConfigVariableFloat = NULL;

	if ( ! pFnSetConfigVariableFloat )
		pFnSetConfigVariableFloat = (UFunction*) UObject::GObjObjects()->Data[ 55591 ];

	UNowGFXHudScene_execSetConfigVariableFloat_Parms SetConfigVariableFloat_Parms;
	memcpy ( &SetConfigVariableFloat_Parms.sVariable, &sVariable, 0xC );
	SetConfigVariableFloat_Parms.fValue = fValue;

	this->ProcessEvent ( pFnSetConfigVariableFloat, &SetConfigVariableFloat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetStringFromSetting
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  eValue                         ( CPF_Parm )

struct FString UNowGFXHudScene::GetStringFromSetting ( unsigned char eValue )
{
	static UFunction* pFnGetStringFromSetting = NULL;

	if ( ! pFnGetStringFromSetting )
		pFnGetStringFromSetting = (UFunction*) UObject::GObjObjects()->Data[ 55588 ];

	UNowGFXHudScene_execGetStringFromSetting_Parms GetStringFromSetting_Parms;
	GetStringFromSetting_Parms.eValue = eValue;

	this->ProcessEvent ( pFnGetStringFromSetting, &GetStringFromSetting_Parms, NULL );

	return GetStringFromSetting_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSettingFromString
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )

unsigned char UNowGFXHudScene::GetSettingFromString ( struct FString sValue )
{
	static UFunction* pFnGetSettingFromString = NULL;

	if ( ! pFnGetSettingFromString )
		pFnGetSettingFromString = (UFunction*) UObject::GObjObjects()->Data[ 55585 ];

	UNowGFXHudScene_execGetSettingFromString_Parms GetSettingFromString_Parms;
	memcpy ( &GetSettingFromString_Parms.sValue, &sValue, 0xC );

	this->ProcessEvent ( pFnGetSettingFromString, &GetSettingFromString_Parms, NULL );

	return GetSettingFromString_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetCurrentRes
// [0x00420002] 
// Parameters infos:
// int                            ResX                           ( CPF_Parm | CPF_OutParm )
// int                            ResY                           ( CPF_Parm | CPF_OutParm )

void UNowGFXHudScene::GetCurrentRes ( int* ResX, int* ResY )
{
	static UFunction* pFnGetCurrentRes = NULL;

	if ( ! pFnGetCurrentRes )
		pFnGetCurrentRes = (UFunction*) UObject::GObjObjects()->Data[ 55582 ];

	UNowGFXHudScene_execGetCurrentRes_Parms GetCurrentRes_Parms;

	this->ProcessEvent ( pFnGetCurrentRes, &GetCurrentRes_Parms, NULL );

	if ( ResX )
		*ResX = GetCurrentRes_Parms.ResX;

	if ( ResY )
		*ResY = GetCurrentRes_Parms.ResY;
};

// Function NowGame.NowGFXHudScene.GetCurrentResString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetCurrentResString ( )
{
	static UFunction* pFnGetCurrentResString = NULL;

	if ( ! pFnGetCurrentResString )
		pFnGetCurrentResString = (UFunction*) UObject::GObjObjects()->Data[ 55578 ];

	UNowGFXHudScene_execGetCurrentResString_Parms GetCurrentResString_Parms;

	this->ProcessEvent ( pFnGetCurrentResString, &GetCurrentResString_Parms, NULL );

	return GetCurrentResString_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SetConfigVariableString
// [0x00020002] 
// Parameters infos:
// struct FString                 sVariable                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SetConfigVariableString ( struct FString sVariable, struct FString sValue )
{
	static UFunction* pFnSetConfigVariableString = NULL;

	if ( ! pFnSetConfigVariableString )
		pFnSetConfigVariableString = (UFunction*) UObject::GObjObjects()->Data[ 55574 ];

	UNowGFXHudScene_execSetConfigVariableString_Parms SetConfigVariableString_Parms;
	memcpy ( &SetConfigVariableString_Parms.sVariable, &sVariable, 0xC );
	memcpy ( &SetConfigVariableString_Parms.sValue, &sValue, 0xC );

	this->ProcessEvent ( pFnSetConfigVariableString, &SetConfigVariableString_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RequestResOptions
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::RequestResOptions ( )
{
	static UFunction* pFnRequestResOptions = NULL;

	if ( ! pFnRequestResOptions )
		pFnRequestResOptions = (UFunction*) UObject::GObjObjects()->Data[ 55570 ];

	UNowGFXHudScene_execRequestResOptions_Parms RequestResOptions_Parms;

	this->ProcessEvent ( pFnRequestResOptions, &RequestResOptions_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetConfigVariableBool
// [0x00020002] 
// Parameters infos:
// struct FString                 sVariable                      ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bValue                         ( CPF_Parm )

void UNowGFXHudScene::SetConfigVariableBool ( struct FString sVariable, unsigned long bValue )
{
	static UFunction* pFnSetConfigVariableBool = NULL;

	if ( ! pFnSetConfigVariableBool )
		pFnSetConfigVariableBool = (UFunction*) UObject::GObjObjects()->Data[ 55566 ];

	UNowGFXHudScene_execSetConfigVariableBool_Parms SetConfigVariableBool_Parms;
	memcpy ( &SetConfigVariableBool_Parms.sVariable, &sVariable, 0xC );
	SetConfigVariableBool_Parms.bValue = bValue;

	this->ProcessEvent ( pFnSetConfigVariableBool, &SetConfigVariableBool_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitOptions
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitOptions ( )
{
	static UFunction* pFnInitOptions = NULL;

	if ( ! pFnInitOptions )
		pFnInitOptions = (UFunction*) UObject::GObjObjects()->Data[ 55562 ];

	UNowGFXHudScene_execInitOptions_Parms InitOptions_Parms;

	this->ProcessEvent ( pFnInitOptions, &InitOptions_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetFoliageCullDistanceScale
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fValue                         ( CPF_Parm )

void UNowGFXHudScene::SetFoliageCullDistanceScale ( float fValue )
{
	static UFunction* pFnSetFoliageCullDistanceScale = NULL;

	if ( ! pFnSetFoliageCullDistanceScale )
		pFnSetFoliageCullDistanceScale = (UFunction*) UObject::GObjObjects()->Data[ 55560 ];

	UNowGFXHudScene_execSetFoliageCullDistanceScale_Parms SetFoliageCullDistanceScale_Parms;
	SetFoliageCullDistanceScale_Parms.fValue = fValue;

	pFnSetFoliageCullDistanceScale->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFoliageCullDistanceScale, &SetFoliageCullDistanceScale_Parms, NULL );

	pFnSetFoliageCullDistanceScale->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SetPostProcessAAType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iValue                         ( CPF_Parm )

void UNowGFXHudScene::SetPostProcessAAType ( int iValue )
{
	static UFunction* pFnSetPostProcessAAType = NULL;

	if ( ! pFnSetPostProcessAAType )
		pFnSetPostProcessAAType = (UFunction*) UObject::GObjObjects()->Data[ 55558 ];

	UNowGFXHudScene_execSetPostProcessAAType_Parms SetPostProcessAAType_Parms;
	SetPostProcessAAType_Parms.iValue = iValue;

	pFnSetPostProcessAAType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPostProcessAAType, &SetPostProcessAAType_Parms, NULL );

	pFnSetPostProcessAAType->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SetMaxAnisotropy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iValue                         ( CPF_Parm )

void UNowGFXHudScene::SetMaxAnisotropy ( int iValue )
{
	static UFunction* pFnSetMaxAnisotropy = NULL;

	if ( ! pFnSetMaxAnisotropy )
		pFnSetMaxAnisotropy = (UFunction*) UObject::GObjObjects()->Data[ 55556 ];

	UNowGFXHudScene_execSetMaxAnisotropy_Parms SetMaxAnisotropy_Parms;
	SetMaxAnisotropy_Parms.iValue = iValue;

	pFnSetMaxAnisotropy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMaxAnisotropy, &SetMaxAnisotropy_Parms, NULL );

	pFnSetMaxAnisotropy->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SetAllowPostprocessMLAA
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void UNowGFXHudScene::SetAllowPostprocessMLAA ( unsigned long bValue )
{
	static UFunction* pFnSetAllowPostprocessMLAA = NULL;

	if ( ! pFnSetAllowPostprocessMLAA )
		pFnSetAllowPostprocessMLAA = (UFunction*) UObject::GObjObjects()->Data[ 55554 ];

	UNowGFXHudScene_execSetAllowPostprocessMLAA_Parms SetAllowPostprocessMLAA_Parms;
	SetAllowPostprocessMLAA_Parms.bValue = bValue;

	pFnSetAllowPostprocessMLAA->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAllowPostprocessMLAA, &SetAllowPostprocessMLAA_Parms, NULL );

	pFnSetAllowPostprocessMLAA->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SetDynamicShadows
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void UNowGFXHudScene::SetDynamicShadows ( unsigned long bValue )
{
	static UFunction* pFnSetDynamicShadows = NULL;

	if ( ! pFnSetDynamicShadows )
		pFnSetDynamicShadows = (UFunction*) UObject::GObjObjects()->Data[ 55552 ];

	UNowGFXHudScene_execSetDynamicShadows_Parms SetDynamicShadows_Parms;
	SetDynamicShadows_Parms.bValue = bValue;

	pFnSetDynamicShadows->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDynamicShadows, &SetDynamicShadows_Parms, NULL );

	pFnSetDynamicShadows->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SetAllowAmbientOcclusion
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void UNowGFXHudScene::SetAllowAmbientOcclusion ( unsigned long bValue )
{
	static UFunction* pFnSetAllowAmbientOcclusion = NULL;

	if ( ! pFnSetAllowAmbientOcclusion )
		pFnSetAllowAmbientOcclusion = (UFunction*) UObject::GObjObjects()->Data[ 55550 ];

	UNowGFXHudScene_execSetAllowAmbientOcclusion_Parms SetAllowAmbientOcclusion_Parms;
	SetAllowAmbientOcclusion_Parms.bValue = bValue;

	pFnSetAllowAmbientOcclusion->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAllowAmbientOcclusion, &SetAllowAmbientOcclusion_Parms, NULL );

	pFnSetAllowAmbientOcclusion->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SetBloom
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void UNowGFXHudScene::SetBloom ( unsigned long bValue )
{
	static UFunction* pFnSetBloom = NULL;

	if ( ! pFnSetBloom )
		pFnSetBloom = (UFunction*) UObject::GObjObjects()->Data[ 55548 ];

	UNowGFXHudScene_execSetBloom_Parms SetBloom_Parms;
	SetBloom_Parms.bValue = bValue;

	pFnSetBloom->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBloom, &SetBloom_Parms, NULL );

	pFnSetBloom->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SetAllowScreenDoorFade
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void UNowGFXHudScene::SetAllowScreenDoorFade ( unsigned long bValue )
{
	static UFunction* pFnSetAllowScreenDoorFade = NULL;

	if ( ! pFnSetAllowScreenDoorFade )
		pFnSetAllowScreenDoorFade = (UFunction*) UObject::GObjObjects()->Data[ 55546 ];

	UNowGFXHudScene_execSetAllowScreenDoorFade_Parms SetAllowScreenDoorFade_Parms;
	SetAllowScreenDoorFade_Parms.bValue = bValue;

	pFnSetAllowScreenDoorFade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAllowScreenDoorFade, &SetAllowScreenDoorFade_Parms, NULL );

	pFnSetAllowScreenDoorFade->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetAllowScreenDoorFade
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::GetAllowScreenDoorFade ( )
{
	static UFunction* pFnGetAllowScreenDoorFade = NULL;

	if ( ! pFnGetAllowScreenDoorFade )
		pFnGetAllowScreenDoorFade = (UFunction*) UObject::GObjObjects()->Data[ 55544 ];

	UNowGFXHudScene_execGetAllowScreenDoorFade_Parms GetAllowScreenDoorFade_Parms;

	pFnGetAllowScreenDoorFade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAllowScreenDoorFade, &GetAllowScreenDoorFade_Parms, NULL );

	pFnGetAllowScreenDoorFade->FunctionFlags |= 0x400;

	return GetAllowScreenDoorFade_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.clearBookList
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearBookList ( )
{
	static UFunction* pFnclearBookList = NULL;

	if ( ! pFnclearBookList )
		pFnclearBookList = (UFunction*) UObject::GObjObjects()->Data[ 55543 ];

	UNowGFXHudScene_execclearBookList_Parms clearBookList_Parms;

	this->ProcessEvent ( pFnclearBookList, &clearBookList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPlayerCurrency
// [0x00020002] 
// Parameters infos:
// int                            coins                          ( CPF_Parm )

void UNowGFXHudScene::setPlayerCurrency ( int coins )
{
	static UFunction* pFnsetPlayerCurrency = NULL;

	if ( ! pFnsetPlayerCurrency )
		pFnsetPlayerCurrency = (UFunction*) UObject::GObjObjects()->Data[ 55541 ];

	UNowGFXHudScene_execsetPlayerCurrency_Parms setPlayerCurrency_Parms;
	setPlayerCurrency_Parms.coins = coins;

	this->ProcessEvent ( pFnsetPlayerCurrency, &setPlayerCurrency_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.refreshBookList
// [0x00020002] 
// Parameters infos:
// unsigned long                  bFiltered                      ( CPF_Parm )

void UNowGFXHudScene::refreshBookList ( unsigned long bFiltered )
{
	static UFunction* pFnrefreshBookList = NULL;

	if ( ! pFnrefreshBookList )
		pFnrefreshBookList = (UFunction*) UObject::GObjObjects()->Data[ 55539 ];

	UNowGFXHudScene_execrefreshBookList_Parms refreshBookList_Parms;
	refreshBookList_Parms.bFiltered = bFiltered;

	this->ProcessEvent ( pFnrefreshBookList, &refreshBookList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addBook
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Author                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Skill                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            MinSkill                       ( CPF_Parm )
// int                            MaxSkill                       ( CPF_Parm )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            Cost                           ( CPF_Parm )
// int                            readable                       ( CPF_Parm )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addBook ( int Id, struct FString Title, struct FString Author, struct FString Skill, int MinSkill, int MaxSkill, struct FString Category, int Cost, int readable, struct FString Description )
{
	static UFunction* pFnaddBook = NULL;

	if ( ! pFnaddBook )
		pFnaddBook = (UFunction*) UObject::GObjObjects()->Data[ 55528 ];

	UNowGFXHudScene_execaddBook_Parms addBook_Parms;
	addBook_Parms.Id = Id;
	memcpy ( &addBook_Parms.Title, &Title, 0xC );
	memcpy ( &addBook_Parms.Author, &Author, 0xC );
	memcpy ( &addBook_Parms.Skill, &Skill, 0xC );
	addBook_Parms.MinSkill = MinSkill;
	addBook_Parms.MaxSkill = MaxSkill;
	memcpy ( &addBook_Parms.Category, &Category, 0xC );
	addBook_Parms.Cost = Cost;
	addBook_Parms.readable = readable;
	memcpy ( &addBook_Parms.Description, &Description, 0xC );

	this->ProcessEvent ( pFnaddBook, &addBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleLibrary
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )
// unsigned long                  bPublished                     ( CPF_Parm )

void UNowGFXHudScene::toggleLibrary ( unsigned long bVisible, unsigned long bPublished )
{
	static UFunction* pFntoggleLibrary = NULL;

	if ( ! pFntoggleLibrary )
		pFntoggleLibrary = (UFunction*) UObject::GObjObjects()->Data[ 55525 ];

	UNowGFXHudScene_exectoggleLibrary_Parms toggleLibrary_Parms;
	toggleLibrary_Parms.bVisible = bVisible;
	toggleLibrary_Parms.bPublished = bPublished;

	this->ProcessEvent ( pFntoggleLibrary, &toggleLibrary_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PurchasePublished
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// struct FString                 sAvatar                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PurchasePublished ( struct FString sGuid, struct FString sTitle, int iCost, struct FString sAvatar )
{
	static UFunction* pFnPurchasePublished = NULL;

	if ( ! pFnPurchasePublished )
		pFnPurchasePublished = (UFunction*) UObject::GObjObjects()->Data[ 55520 ];

	UNowGFXHudScene_execPurchasePublished_Parms PurchasePublished_Parms;
	memcpy ( &PurchasePublished_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &PurchasePublished_Parms.sTitle, &sTitle, 0xC );
	PurchasePublished_Parms.iCost = iCost;
	memcpy ( &PurchasePublished_Parms.sAvatar, &sAvatar, 0xC );

	this->ProcessEvent ( pFnPurchasePublished, &PurchasePublished_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BuySkillBook
// [0x00020002] 
// Parameters infos:
// int                            BookIndex                      ( CPF_Parm )

void UNowGFXHudScene::BuySkillBook ( int BookIndex )
{
	static UFunction* pFnBuySkillBook = NULL;

	if ( ! pFnBuySkillBook )
		pFnBuySkillBook = (UFunction*) UObject::GObjObjects()->Data[ 55517 ];

	UNowGFXHudScene_execBuySkillBook_Parms BuySkillBook_Parms;
	BuySkillBook_Parms.BookIndex = BookIndex;

	this->ProcessEvent ( pFnBuySkillBook, &BuySkillBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddBooksToFlash
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventAddBooksToFlash ( )
{
	static UFunction* pFnAddBooksToFlash = NULL;

	if ( ! pFnAddBooksToFlash )
		pFnAddBooksToFlash = (UFunction*) UObject::GObjObjects()->Data[ 55515 ];

	UNowGFXHudScene_eventAddBooksToFlash_Parms AddBooksToFlash_Parms;

	this->ProcessEvent ( pFnAddBooksToFlash, &AddBooksToFlash_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddBookToArray
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 inContentName                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 inDisplayName                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 inAuthor                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 inSkillName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            inMinSkill                     ( CPF_Parm )
// int                            inMaxSkill                     ( CPF_Parm )
// struct FString                 inBookGroup                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            inBookCost                     ( CPF_Parm )
// int                            inBookStatus                   ( CPF_Parm )
// struct FString                 inBookDesc                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddBookToArray ( struct FString inContentName, struct FString inDisplayName, struct FString inAuthor, struct FString inSkillName, int inMinSkill, int inMaxSkill, struct FString inBookGroup, int inBookCost, int inBookStatus, struct FString inBookDesc )
{
	static UFunction* pFnAddBookToArray = NULL;

	if ( ! pFnAddBookToArray )
		pFnAddBookToArray = (UFunction*) UObject::GObjObjects()->Data[ 55503 ];

	UNowGFXHudScene_eventAddBookToArray_Parms AddBookToArray_Parms;
	memcpy ( &AddBookToArray_Parms.inContentName, &inContentName, 0xC );
	memcpy ( &AddBookToArray_Parms.inDisplayName, &inDisplayName, 0xC );
	memcpy ( &AddBookToArray_Parms.inAuthor, &inAuthor, 0xC );
	memcpy ( &AddBookToArray_Parms.inSkillName, &inSkillName, 0xC );
	AddBookToArray_Parms.inMinSkill = inMinSkill;
	AddBookToArray_Parms.inMaxSkill = inMaxSkill;
	memcpy ( &AddBookToArray_Parms.inBookGroup, &inBookGroup, 0xC );
	AddBookToArray_Parms.inBookCost = inBookCost;
	AddBookToArray_Parms.inBookStatus = inBookStatus;
	memcpy ( &AddBookToArray_Parms.inBookDesc, &inBookDesc, 0xC );

	this->ProcessEvent ( pFnAddBookToArray, &AddBookToArray_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitLibraryNoCheck
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitLibraryNoCheck ( )
{
	static UFunction* pFnInitLibraryNoCheck = NULL;

	if ( ! pFnInitLibraryNoCheck )
		pFnInitLibraryNoCheck = (UFunction*) UObject::GObjObjects()->Data[ 55502 ];

	UNowGFXHudScene_execInitLibraryNoCheck_Parms InitLibraryNoCheck_Parms;

	this->ProcessEvent ( pFnInitLibraryNoCheck, &InitLibraryNoCheck_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitLibrary
// [0x00024002] 
// Parameters infos:
// unsigned long                  bNoOwnerCheck                  ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::InitLibrary ( unsigned long bNoOwnerCheck )
{
	static UFunction* pFnInitLibrary = NULL;

	if ( ! pFnInitLibrary )
		pFnInitLibrary = (UFunction*) UObject::GObjObjects()->Data[ 55500 ];

	UNowGFXHudScene_execInitLibrary_Parms InitLibrary_Parms;
	InitLibrary_Parms.bNoOwnerCheck = bNoOwnerCheck;

	this->ProcessEvent ( pFnInitLibrary, &InitLibrary_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetBooks
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetBooks ( )
{
	static UFunction* pFnGetBooks = NULL;

	if ( ! pFnGetBooks )
		pFnGetBooks = (UFunction*) UObject::GObjObjects()->Data[ 55499 ];

	UNowGFXHudScene_execGetBooks_Parms GetBooks_Parms;

	pFnGetBooks->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBooks, &GetBooks_Parms, NULL );

	pFnGetBooks->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.getGuildMembers
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       vMembers                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< int >                  vMemberRanks                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< int >                  vMemberOnline                  ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UNowGFXHudScene::getGuildMembers ( TArray< struct FString >* vMembers, TArray< int >* vMemberRanks, TArray< int >* vMemberOnline )
{
	static UFunction* pFngetGuildMembers = NULL;

	if ( ! pFngetGuildMembers )
		pFngetGuildMembers = (UFunction*) UObject::GObjObjects()->Data[ 55492 ];

	UNowGFXHudScene_execgetGuildMembers_Parms getGuildMembers_Parms;

	pFngetGuildMembers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetGuildMembers, &getGuildMembers_Parms, NULL );

	pFngetGuildMembers->FunctionFlags |= 0x400;

	if ( vMembers )
		memcpy ( vMembers, &getGuildMembers_Parms.vMembers, 0xC );

	if ( vMemberRanks )
		memcpy ( vMemberRanks, &getGuildMembers_Parms.vMemberRanks, 0xC );

	if ( vMemberOnline )
		memcpy ( vMemberOnline, &getGuildMembers_Parms.vMemberOnline, 0xC );
};

// Function NowGame.NowGFXHudScene.toggleHelp
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::toggleHelp ( )
{
	static UFunction* pFntoggleHelp = NULL;

	if ( ! pFntoggleHelp )
		pFntoggleHelp = (UFunction*) UObject::GObjObjects()->Data[ 55491 ];

	UNowGFXHudScene_exectoggleHelp_Parms toggleHelp_Parms;

	this->ProcessEvent ( pFntoggleHelp, &toggleHelp_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.tcpRequestHelp
// [0x00020002] 
// Parameters infos:
// struct FString                 sJsonObject                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::tcpRequestHelp ( struct FString sJsonObject )
{
	static UFunction* pFntcpRequestHelp = NULL;

	if ( ! pFntcpRequestHelp )
		pFntcpRequestHelp = (UFunction*) UObject::GObjObjects()->Data[ 55489 ];

	UNowGFXHudScene_exectcpRequestHelp_Parms tcpRequestHelp_Parms;
	memcpy ( &tcpRequestHelp_Parms.sJsonObject, &sJsonObject, 0xC );

	this->ProcessEvent ( pFntcpRequestHelp, &tcpRequestHelp_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addMurderer
// [0x00020002] 
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addMurderer ( struct FString PlayerName )
{
	static UFunction* pFnaddMurderer = NULL;

	if ( ! pFnaddMurderer )
		pFnaddMurderer = (UFunction*) UObject::GObjObjects()->Data[ 55487 ];

	UNowGFXHudScene_execaddMurderer_Parms addMurderer_Parms;
	memcpy ( &addMurderer_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnaddMurderer, &addMurderer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearMurderers
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventclearMurderers ( )
{
	static UFunction* pFnclearMurderers = NULL;

	if ( ! pFnclearMurderers )
		pFnclearMurderers = (UFunction*) UObject::GObjObjects()->Data[ 55486 ];

	UNowGFXHudScene_eventclearMurderers_Parms clearMurderers_Parms;

	this->ProcessEvent ( pFnclearMurderers, &clearMurderers_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showReportMurder
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showReportMurder ( )
{
	static UFunction* pFnshowReportMurder = NULL;

	if ( ! pFnshowReportMurder )
		pFnshowReportMurder = (UFunction*) UObject::GObjObjects()->Data[ 55485 ];

	UNowGFXHudScene_execshowReportMurder_Parms showReportMurder_Parms;

	this->ProcessEvent ( pFnshowReportMurder, &showReportMurder_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitReportMurder
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitReportMurder ( )
{
	static UFunction* pFnInitReportMurder = NULL;

	if ( ! pFnInitReportMurder )
		pFnInitReportMurder = (UFunction*) UObject::GObjObjects()->Data[ 55484 ];

	UNowGFXHudScene_eventInitReportMurder_Parms InitReportMurder_Parms;

	this->ProcessEvent ( pFnInitReportMurder, &InitReportMurder_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ClosedMurder
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventClosedMurder ( )
{
	static UFunction* pFnClosedMurder = NULL;

	if ( ! pFnClosedMurder )
		pFnClosedMurder = (UFunction*) UObject::GObjObjects()->Data[ 55482 ];

	UNowGFXHudScene_eventClosedMurder_Parms ClosedMurder_Parms;

	this->ProcessEvent ( pFnClosedMurder, &ClosedMurder_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReportMurderer
// [0x00820002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ReportMurderer ( struct FString sName )
{
	static UFunction* pFnReportMurderer = NULL;

	if ( ! pFnReportMurderer )
		pFnReportMurderer = (UFunction*) UObject::GObjObjects()->Data[ 55479 ];

	UNowGFXHudScene_execReportMurderer_Parms ReportMurderer_Parms;
	memcpy ( &ReportMurderer_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnReportMurderer, &ReportMurderer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendMurdererToFlash
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::eventSendMurdererToFlash ( struct FString sName, int iIndex )
{
	static UFunction* pFnSendMurdererToFlash = NULL;

	if ( ! pFnSendMurdererToFlash )
		pFnSendMurdererToFlash = (UFunction*) UObject::GObjObjects()->Data[ 55475 ];

	UNowGFXHudScene_eventSendMurdererToFlash_Parms SendMurdererToFlash_Parms;
	memcpy ( &SendMurdererToFlash_Parms.sName, &sName, 0xC );
	SendMurdererToFlash_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnSendMurdererToFlash, &SendMurdererToFlash_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendMurdersToServer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendMurdersToServer ( )
{
	static UFunction* pFnSendMurdersToServer = NULL;

	if ( ! pFnSendMurdersToServer )
		pFnSendMurdersToServer = (UFunction*) UObject::GObjObjects()->Data[ 55474 ];

	UNowGFXHudScene_execSendMurdersToServer_Parms SendMurdersToServer_Parms;

	pFnSendMurdersToServer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendMurdersToServer, &SendMurdersToServer_Parms, NULL );

	pFnSendMurdersToServer->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearTasks
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearTasks ( )
{
	static UFunction* pFnclearTasks = NULL;

	if ( ! pFnclearTasks )
		pFnclearTasks = (UFunction*) UObject::GObjObjects()->Data[ 55473 ];

	UNowGFXHudScene_execclearTasks_Parms clearTasks_Parms;

	this->ProcessEvent ( pFnclearTasks, &clearTasks_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showTasks
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showTasks ( )
{
	static UFunction* pFnshowTasks = NULL;

	if ( ! pFnshowTasks )
		pFnshowTasks = (UFunction*) UObject::GObjObjects()->Data[ 55472 ];

	UNowGFXHudScene_execshowTasks_Parms showTasks_Parms;

	this->ProcessEvent ( pFnshowTasks, &showTasks_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeItemOption
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ItemId                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventremoveItemOption ( struct FString ItemId )
{
	static UFunction* pFnremoveItemOption = NULL;

	if ( ! pFnremoveItemOption )
		pFnremoveItemOption = (UFunction*) UObject::GObjObjects()->Data[ 55470 ];

	UNowGFXHudScene_eventremoveItemOption_Parms removeItemOption_Parms;
	memcpy ( &removeItemOption_Parms.ItemId, &ItemId, 0xC );

	this->ProcessEvent ( pFnremoveItemOption, &removeItemOption_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.refreshTaskList
// [0x00020002] 
// Parameters infos:
// unsigned long                  bRefresh                       ( CPF_Parm )

void UNowGFXHudScene::refreshTaskList ( unsigned long bRefresh )
{
	static UFunction* pFnrefreshTaskList = NULL;

	if ( ! pFnrefreshTaskList )
		pFnrefreshTaskList = (UFunction*) UObject::GObjObjects()->Data[ 55468 ];

	UNowGFXHudScene_execrefreshTaskList_Parms refreshTaskList_Parms;
	refreshTaskList_Parms.bRefresh = bRefresh;

	this->ProcessEvent ( pFnrefreshTaskList, &refreshTaskList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeTask
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )

void UNowGFXHudScene::removeTask ( int Id )
{
	static UFunction* pFnremoveTask = NULL;

	if ( ! pFnremoveTask )
		pFnremoveTask = (UFunction*) UObject::GObjObjects()->Data[ 55466 ];

	UNowGFXHudScene_execremoveTask_Parms removeTask_Parms;
	removeTask_Parms.Id = Id;

	this->ProcessEvent ( pFnremoveTask, &removeTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTask
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 Item                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Recipient                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            reward                         ( CPF_Parm )
// int                            deposit                        ( CPF_Parm )

void UNowGFXHudScene::eventaddTask ( int Id, struct FString Item, int Quantity, struct FString Category, struct FString Recipient, struct FString Destination, int reward, int deposit )
{
	static UFunction* pFnaddTask = NULL;

	if ( ! pFnaddTask )
		pFnaddTask = (UFunction*) UObject::GObjObjects()->Data[ 55457 ];

	UNowGFXHudScene_eventaddTask_Parms addTask_Parms;
	addTask_Parms.Id = Id;
	memcpy ( &addTask_Parms.Item, &Item, 0xC );
	addTask_Parms.Quantity = Quantity;
	memcpy ( &addTask_Parms.Category, &Category, 0xC );
	memcpy ( &addTask_Parms.Recipient, &Recipient, 0xC );
	memcpy ( &addTask_Parms.Destination, &Destination, 0xC );
	addTask_Parms.reward = reward;
	addTask_Parms.deposit = deposit;

	this->ProcessEvent ( pFnaddTask, &addTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addDestination
// [0x00020002] 
// Parameters infos:
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addDestination ( struct FString Destination )
{
	static UFunction* pFnaddDestination = NULL;

	if ( ! pFnaddDestination )
		pFnaddDestination = (UFunction*) UObject::GObjObjects()->Data[ 55455 ];

	UNowGFXHudScene_execaddDestination_Parms addDestination_Parms;
	memcpy ( &addDestination_Parms.Destination, &Destination, 0xC );

	this->ProcessEvent ( pFnaddDestination, &addDestination_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CreateTask
// [0x00020002] 
// Parameters infos:
// struct FString                 ItemId                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            listingDays                    ( CPF_Parm )
// int                            coinReward                     ( CPF_Parm )
// int                            coinExpense                    ( CPF_Parm )
// int                            coinDeposit                    ( CPF_Parm )

void UNowGFXHudScene::CreateTask ( struct FString ItemId, struct FString Category, struct FString Destination, int listingDays, int coinReward, int coinExpense, int coinDeposit )
{
	static UFunction* pFnCreateTask = NULL;

	if ( ! pFnCreateTask )
		pFnCreateTask = (UFunction*) UObject::GObjObjects()->Data[ 55447 ];

	UNowGFXHudScene_execCreateTask_Parms CreateTask_Parms;
	memcpy ( &CreateTask_Parms.ItemId, &ItemId, 0xC );
	memcpy ( &CreateTask_Parms.Category, &Category, 0xC );
	memcpy ( &CreateTask_Parms.Destination, &Destination, 0xC );
	CreateTask_Parms.listingDays = listingDays;
	CreateTask_Parms.coinReward = coinReward;
	CreateTask_Parms.coinExpense = coinExpense;
	CreateTask_Parms.coinDeposit = coinDeposit;

	this->ProcessEvent ( pFnCreateTask, &CreateTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setDestionations
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::setDestionations ( )
{
	static UFunction* pFnsetDestionations = NULL;

	if ( ! pFnsetDestionations )
		pFnsetDestionations = (UFunction*) UObject::GObjObjects()->Data[ 55446 ];

	UNowGFXHudScene_execsetDestionations_Parms setDestionations_Parms;

	this->ProcessEvent ( pFnsetDestionations, &setDestionations_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setTradeItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::setTradeItems ( )
{
	static UFunction* pFnsetTradeItems = NULL;

	if ( ! pFnsetTradeItems )
		pFnsetTradeItems = (UFunction*) UObject::GObjObjects()->Data[ 55445 ];

	UNowGFXHudScene_execsetTradeItems_Parms setTradeItems_Parms;

	this->ProcessEvent ( pFnsetTradeItems, &setTradeItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getLocation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

struct FString UNowGFXHudScene::eventgetLocation ( int Index )
{
	static UFunction* pFngetLocation = NULL;

	if ( ! pFngetLocation )
		pFngetLocation = (UFunction*) UObject::GObjObjects()->Data[ 55442 ];

	UNowGFXHudScene_eventgetLocation_Parms getLocation_Parms;
	getLocation_Parms.Index = Index;

	this->ProcessEvent ( pFngetLocation, &getLocation_Parms, NULL );

	return getLocation_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.setLocations
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::setLocations ( )
{
	static UFunction* pFnsetLocations = NULL;

	if ( ! pFnsetLocations )
		pFnsetLocations = (UFunction*) UObject::GObjObjects()->Data[ 55440 ];

	UNowGFXHudScene_execsetLocations_Parms setLocations_Parms;

	this->ProcessEvent ( pFnsetLocations, &setLocations_Parms, NULL );
};

// Function NowGame.NowGFXHudScene._removeTask
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 _guid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::event_removeTask ( struct FString _guid )
{
	static UFunction* pFn_removeTask = NULL;

	if ( ! pFn_removeTask )
		pFn_removeTask = (UFunction*) UObject::GObjObjects()->Data[ 55437 ];

	UNowGFXHudScene_event_removeTask_Parms _removeTask_Parms;
	memcpy ( &_removeTask_Parms._guid, &_guid, 0xC );

	this->ProcessEvent ( pFn_removeTask, &_removeTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTaskIdentifer
// [0x00C20802] ( FUNC_Event )
// Parameters infos:
// struct FString                 _guid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm | CPF_OutParm )

void UNowGFXHudScene::eventaddTaskIdentifer ( struct FString _guid, int* Index )
{
	static UFunction* pFnaddTaskIdentifer = NULL;

	if ( ! pFnaddTaskIdentifer )
		pFnaddTaskIdentifer = (UFunction*) UObject::GObjObjects()->Data[ 55433 ];

	UNowGFXHudScene_eventaddTaskIdentifer_Parms addTaskIdentifer_Parms;
	memcpy ( &addTaskIdentifer_Parms._guid, &_guid, 0xC );

	this->ProcessEvent ( pFnaddTaskIdentifer, &addTaskIdentifer_Parms, NULL );

	if ( Index )
		*Index = addTaskIdentifer_Parms.Index;
};

// Function NowGame.NowGFXHudScene.AcceptTask
// [0x00020002] 
// Parameters infos:
// int                            TaskId                         ( CPF_Parm )

void UNowGFXHudScene::AcceptTask ( int TaskId )
{
	static UFunction* pFnAcceptTask = NULL;

	if ( ! pFnAcceptTask )
		pFnAcceptTask = (UFunction*) UObject::GObjObjects()->Data[ 55431 ];

	UNowGFXHudScene_execAcceptTask_Parms AcceptTask_Parms;
	AcceptTask_Parms.TaskId = TaskId;

	this->ProcessEvent ( pFnAcceptTask, &AcceptTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getTaskGuidFromIndex
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

struct FString UNowGFXHudScene::eventgetTaskGuidFromIndex ( int Index )
{
	static UFunction* pFngetTaskGuidFromIndex = NULL;

	if ( ! pFngetTaskGuidFromIndex )
		pFngetTaskGuidFromIndex = (UFunction*) UObject::GObjObjects()->Data[ 55427 ];

	UNowGFXHudScene_eventgetTaskGuidFromIndex_Parms getTaskGuidFromIndex_Parms;
	getTaskGuidFromIndex_Parms.Index = Index;

	this->ProcessEvent ( pFngetTaskGuidFromIndex, &getTaskGuidFromIndex_Parms, NULL );

	return getTaskGuidFromIndex_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.getTaskIndexFromGuid
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 _guid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventgetTaskIndexFromGuid ( struct FString _guid )
{
	static UFunction* pFngetTaskIndexFromGuid = NULL;

	if ( ! pFngetTaskIndexFromGuid )
		pFngetTaskIndexFromGuid = (UFunction*) UObject::GObjObjects()->Data[ 55423 ];

	UNowGFXHudScene_eventgetTaskIndexFromGuid_Parms getTaskIndexFromGuid_Parms;
	memcpy ( &getTaskIndexFromGuid_Parms._guid, &_guid, 0xC );

	this->ProcessEvent ( pFngetTaskIndexFromGuid, &getTaskIndexFromGuid_Parms, NULL );

	return getTaskIndexFromGuid_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitTasks
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitTasks ( )
{
	static UFunction* pFnInitTasks = NULL;

	if ( ! pFnInitTasks )
		pFnInitTasks = (UFunction*) UObject::GObjObjects()->Data[ 55422 ];

	UNowGFXHudScene_execInitTasks_Parms InitTasks_Parms;

	this->ProcessEvent ( pFnInitTasks, &InitTasks_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.isItemTradeType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::isItemTradeType ( struct FString ItemGuid )
{
	static UFunction* pFnisItemTradeType = NULL;

	if ( ! pFnisItemTradeType )
		pFnisItemTradeType = (UFunction*) UObject::GObjObjects()->Data[ 55419 ];

	UNowGFXHudScene_execisItemTradeType_Parms isItemTradeType_Parms;
	memcpy ( &isItemTradeType_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnisItemTradeType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisItemTradeType, &isItemTradeType_Parms, NULL );

	pFnisItemTradeType->FunctionFlags |= 0x400;

	return isItemTradeType_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.getTradeItems
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FItemOption >   vItems                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UNowGFXHudScene::getTradeItems ( TArray< struct FItemOption >* vItems )
{
	static UFunction* pFngetTradeItems = NULL;

	if ( ! pFngetTradeItems )
		pFngetTradeItems = (UFunction*) UObject::GObjObjects()->Data[ 55416 ];

	UNowGFXHudScene_execgetTradeItems_Parms getTradeItems_Parms;

	pFngetTradeItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetTradeItems, &getTradeItems_Parms, NULL );

	pFngetTradeItems->FunctionFlags |= 0x400;

	if ( vItems )
		memcpy ( vItems, &getTradeItems_Parms.vItems, 0xC );
};

// Function NowGame.NowGFXHudScene.nativeDeliverTasks
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::nativeDeliverTasks ( )
{
	static UFunction* pFnnativeDeliverTasks = NULL;

	if ( ! pFnnativeDeliverTasks )
		pFnnativeDeliverTasks = (UFunction*) UObject::GObjObjects()->Data[ 55415 ];

	UNowGFXHudScene_execnativeDeliverTasks_Parms nativeDeliverTasks_Parms;

	pFnnativeDeliverTasks->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnnativeDeliverTasks, &nativeDeliverTasks_Parms, NULL );

	pFnnativeDeliverTasks->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.nativeRequestTasks
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::nativeRequestTasks ( )
{
	static UFunction* pFnnativeRequestTasks = NULL;

	if ( ! pFnnativeRequestTasks )
		pFnnativeRequestTasks = (UFunction*) UObject::GObjObjects()->Data[ 55414 ];

	UNowGFXHudScene_execnativeRequestTasks_Parms nativeRequestTasks_Parms;

	pFnnativeRequestTasks->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnnativeRequestTasks, &nativeRequestTasks_Parms, NULL );

	pFnnativeRequestTasks->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.nativeClaimTask
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            _taskIndex                     ( CPF_Parm )

void UNowGFXHudScene::nativeClaimTask ( int _taskIndex )
{
	static UFunction* pFnnativeClaimTask = NULL;

	if ( ! pFnnativeClaimTask )
		pFnnativeClaimTask = (UFunction*) UObject::GObjObjects()->Data[ 55412 ];

	UNowGFXHudScene_execnativeClaimTask_Parms nativeClaimTask_Parms;
	nativeClaimTask_Parms._taskIndex = _taskIndex;

	pFnnativeClaimTask->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnnativeClaimTask, &nativeClaimTask_Parms, NULL );

	pFnnativeClaimTask->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.nativeAddTask
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemId                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Recipient                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            listingDays                    ( CPF_Parm )
// int                            coinReward                     ( CPF_Parm )
// int                            coinExpense                    ( CPF_Parm )
// int                            coinDeposit                    ( CPF_Parm )

void UNowGFXHudScene::nativeAddTask ( struct FString ItemId, struct FString Category, struct FString Destination, struct FString Recipient, int listingDays, int coinReward, int coinExpense, int coinDeposit )
{
	static UFunction* pFnnativeAddTask = NULL;

	if ( ! pFnnativeAddTask )
		pFnnativeAddTask = (UFunction*) UObject::GObjObjects()->Data[ 55403 ];

	UNowGFXHudScene_execnativeAddTask_Parms nativeAddTask_Parms;
	memcpy ( &nativeAddTask_Parms.ItemId, &ItemId, 0xC );
	memcpy ( &nativeAddTask_Parms.Category, &Category, 0xC );
	memcpy ( &nativeAddTask_Parms.Destination, &Destination, 0xC );
	memcpy ( &nativeAddTask_Parms.Recipient, &Recipient, 0xC );
	nativeAddTask_Parms.listingDays = listingDays;
	nativeAddTask_Parms.coinReward = coinReward;
	nativeAddTask_Parms.coinExpense = coinExpense;
	nativeAddTask_Parms.coinDeposit = coinDeposit;

	pFnnativeAddTask->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnnativeAddTask, &nativeAddTask_Parms, NULL );

	pFnnativeAddTask->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.setOverweight
// [0x00020002] 
// Parameters infos:
// int                            iPercent                       ( CPF_Parm )

void UNowGFXHudScene::setOverweight ( int iPercent )
{
	static UFunction* pFnsetOverweight = NULL;

	if ( ! pFnsetOverweight )
		pFnsetOverweight = (UFunction*) UObject::GObjObjects()->Data[ 55401 ];

	UNowGFXHudScene_execsetOverweight_Parms setOverweight_Parms;
	setOverweight_Parms.iPercent = iPercent;

	this->ProcessEvent ( pFnsetOverweight, &setOverweight_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTitle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddTitle ( int iID, struct FString sTitle )
{
	static UFunction* pFnaddTitle = NULL;

	if ( ! pFnaddTitle )
		pFnaddTitle = (UFunction*) UObject::GObjObjects()->Data[ 55398 ];

	UNowGFXHudScene_eventaddTitle_Parms addTitle_Parms;
	addTitle_Parms.iID = iID;
	memcpy ( &addTitle_Parms.sTitle, &sTitle, 0xC );

	this->ProcessEvent ( pFnaddTitle, &addTitle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setTitle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventsetTitle ( struct FString sTitle )
{
	static UFunction* pFnsetTitle = NULL;

	if ( ! pFnsetTitle )
		pFnsetTitle = (UFunction*) UObject::GObjObjects()->Data[ 55396 ];

	UNowGFXHudScene_eventsetTitle_Parms setTitle_Parms;
	memcpy ( &setTitle_Parms.sTitle, &sTitle, 0xC );

	this->ProcessEvent ( pFnsetTitle, &setTitle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearTitles
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventclearTitles ( )
{
	static UFunction* pFnclearTitles = NULL;

	if ( ! pFnclearTitles )
		pFnclearTitles = (UFunction*) UObject::GObjObjects()->Data[ 55395 ];

	UNowGFXHudScene_eventclearTitles_Parms clearTitles_Parms;

	this->ProcessEvent ( pFnclearTitles, &clearTitles_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setEquipped
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sSlotName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventsetEquipped ( struct FString sSlotName, struct FString sData )
{
	static UFunction* pFnsetEquipped = NULL;

	if ( ! pFnsetEquipped )
		pFnsetEquipped = (UFunction*) UObject::GObjObjects()->Data[ 55392 ];

	UNowGFXHudScene_eventsetEquipped_Parms setEquipped_Parms;
	memcpy ( &setEquipped_Parms.sSlotName, &sSlotName, 0xC );
	memcpy ( &setEquipped_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnsetEquipped, &setEquipped_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showPaperdoll
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXHudScene::showPaperdoll ( unsigned long bVisible )
{
	static UFunction* pFnshowPaperdoll = NULL;

	if ( ! pFnshowPaperdoll )
		pFnshowPaperdoll = (UFunction*) UObject::GObjObjects()->Data[ 55390 ];

	UNowGFXHudScene_execshowPaperdoll_Parms showPaperdoll_Parms;
	showPaperdoll_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnshowPaperdoll, &showPaperdoll_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPaperdollStat
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            lockState                      ( CPF_Parm )
// struct FString                 ToolTip                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setPaperdollStat ( struct FString Id, struct FString Category, struct FString Label, struct FString Value, int lockState, struct FString ToolTip )
{
	static UFunction* pFnsetPaperdollStat = NULL;

	if ( ! pFnsetPaperdollStat )
		pFnsetPaperdollStat = (UFunction*) UObject::GObjObjects()->Data[ 55383 ];

	UNowGFXHudScene_execsetPaperdollStat_Parms setPaperdollStat_Parms;
	memcpy ( &setPaperdollStat_Parms.Id, &Id, 0xC );
	memcpy ( &setPaperdollStat_Parms.Category, &Category, 0xC );
	memcpy ( &setPaperdollStat_Parms.Label, &Label, 0xC );
	memcpy ( &setPaperdollStat_Parms.Value, &Value, 0xC );
	setPaperdollStat_Parms.lockState = lockState;
	memcpy ( &setPaperdollStat_Parms.ToolTip, &ToolTip, 0xC );

	this->ProcessEvent ( pFnsetPaperdollStat, &setPaperdollStat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.startRenderToTextureDoll
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::startRenderToTextureDoll ( )
{
	static UFunction* pFnstartRenderToTextureDoll = NULL;

	if ( ! pFnstartRenderToTextureDoll )
		pFnstartRenderToTextureDoll = (UFunction*) UObject::GObjObjects()->Data[ 55382 ];

	UNowGFXHudScene_execstartRenderToTextureDoll_Parms startRenderToTextureDoll_Parms;

	this->ProcessEvent ( pFnstartRenderToTextureDoll, &startRenderToTextureDoll_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.stopRenderToTextureDoll
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::stopRenderToTextureDoll ( )
{
	static UFunction* pFnstopRenderToTextureDoll = NULL;

	if ( ! pFnstopRenderToTextureDoll )
		pFnstopRenderToTextureDoll = (UFunction*) UObject::GObjObjects()->Data[ 55380 ];

	UNowGFXHudScene_execstopRenderToTextureDoll_Parms stopRenderToTextureDoll_Parms;

	this->ProcessEvent ( pFnstopRenderToTextureDoll, &stopRenderToTextureDoll_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RequestdSuicide
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::RequestdSuicide ( )
{
	static UFunction* pFnRequestdSuicide = NULL;

	if ( ! pFnRequestdSuicide )
		pFnRequestdSuicide = (UFunction*) UObject::GObjObjects()->Data[ 55379 ];

	UNowGFXHudScene_execRequestdSuicide_Parms RequestdSuicide_Parms;

	this->ProcessEvent ( pFnRequestdSuicide, &RequestdSuicide_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetAttributeState
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SetAttributeState ( struct FString Id )
{
	static UFunction* pFnSetAttributeState = NULL;

	if ( ! pFnSetAttributeState )
		pFnSetAttributeState = (UFunction*) UObject::GObjObjects()->Data[ 55375 ];

	UNowGFXHudScene_execSetAttributeState_Parms SetAttributeState_Parms;
	memcpy ( &SetAttributeState_Parms.Id, &Id, 0xC );

	this->ProcessEvent ( pFnSetAttributeState, &SetAttributeState_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PaperdollRender
// [0x00020002] 
// Parameters infos:
// unsigned long                  bRender                        ( CPF_Parm )

void UNowGFXHudScene::PaperdollRender ( unsigned long bRender )
{
	static UFunction* pFnPaperdollRender = NULL;

	if ( ! pFnPaperdollRender )
		pFnPaperdollRender = (UFunction*) UObject::GObjObjects()->Data[ 55373 ];

	UNowGFXHudScene_execPaperdollRender_Parms PaperdollRender_Parms;
	PaperdollRender_Parms.bRender = bRender;

	this->ProcessEvent ( pFnPaperdollRender, &PaperdollRender_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TogglePaperdoll
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TogglePaperdoll ( )
{
	static UFunction* pFnTogglePaperdoll = NULL;

	if ( ! pFnTogglePaperdoll )
		pFnTogglePaperdoll = (UFunction*) UObject::GObjObjects()->Data[ 55372 ];

	UNowGFXHudScene_execTogglePaperdoll_Parms TogglePaperdoll_Parms;

	this->ProcessEvent ( pFnTogglePaperdoll, &TogglePaperdoll_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdatePaperDollMesh
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bPending                       ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::eventUpdatePaperDollMesh ( unsigned long bPending )
{
	static UFunction* pFnUpdatePaperDollMesh = NULL;

	if ( ! pFnUpdatePaperDollMesh )
		pFnUpdatePaperDollMesh = (UFunction*) UObject::GObjObjects()->Data[ 55370 ];

	UNowGFXHudScene_eventUpdatePaperDollMesh_Parms UpdatePaperDollMesh_Parms;
	UpdatePaperDollMesh_Parms.bPending = bPending;

	this->ProcessEvent ( pFnUpdatePaperDollMesh, &UpdatePaperDollMesh_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PaperdollZoom
// [0x00020002] 
// Parameters infos:
// unsigned long                  bZoom                          ( CPF_Parm )

void UNowGFXHudScene::PaperdollZoom ( unsigned long bZoom )
{
	static UFunction* pFnPaperdollZoom = NULL;

	if ( ! pFnPaperdollZoom )
		pFnPaperdollZoom = (UFunction*) UObject::GObjObjects()->Data[ 55368 ];

	UNowGFXHudScene_execPaperdollZoom_Parms PaperdollZoom_Parms;
	PaperdollZoom_Parms.bZoom = bZoom;

	this->ProcessEvent ( pFnPaperdollZoom, &PaperdollZoom_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PaperdollPan
// [0x00020002] 
// Parameters infos:
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )

void UNowGFXHudScene::PaperdollPan ( int X, int Y )
{
	static UFunction* pFnPaperdollPan = NULL;

	if ( ! pFnPaperdollPan )
		pFnPaperdollPan = (UFunction*) UObject::GObjObjects()->Data[ 55365 ];

	UNowGFXHudScene_execPaperdollPan_Parms PaperdollPan_Parms;
	PaperdollPan_Parms.X = X;
	PaperdollPan_Parms.Y = Y;

	this->ProcessEvent ( pFnPaperdollPan, &PaperdollPan_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RotatePaperdoll
// [0x00020002] 
// Parameters infos:
// unsigned long                  bLeft                          ( CPF_Parm )

void UNowGFXHudScene::RotatePaperdoll ( unsigned long bLeft )
{
	static UFunction* pFnRotatePaperdoll = NULL;

	if ( ! pFnRotatePaperdoll )
		pFnRotatePaperdoll = (UFunction*) UObject::GObjObjects()->Data[ 55363 ];

	UNowGFXHudScene_execRotatePaperdoll_Parms RotatePaperdoll_Parms;
	RotatePaperdoll_Parms.bLeft = bLeft;

	this->ProcessEvent ( pFnRotatePaperdoll, &RotatePaperdoll_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateStatus
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNrCur                         ( CPF_Parm )
// int                            iNrMax                         ( CPF_Parm )

void UNowGFXHudScene::eventUpdateStatus ( struct FString sName, int iNrCur, int iNrMax )
{
	static UFunction* pFnUpdateStatus = NULL;

	if ( ! pFnUpdateStatus )
		pFnUpdateStatus = (UFunction*) UObject::GObjObjects()->Data[ 55359 ];

	UNowGFXHudScene_eventUpdateStatus_Parms UpdateStatus_Parms;
	memcpy ( &UpdateStatus_Parms.sName, &sName, 0xC );
	UpdateStatus_Parms.iNrCur = iNrCur;
	UpdateStatus_Parms.iNrMax = iNrMax;

	this->ProcessEvent ( pFnUpdateStatus, &UpdateStatus_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateEquipment
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNrCur                         ( CPF_Parm )
// int                            iNrFree                        ( CPF_Parm )
// int                            iNrMax                         ( CPF_Parm )

void UNowGFXHudScene::eventUpdateEquipment ( struct FString sName, int iNrCur, int iNrFree, int iNrMax )
{
	static UFunction* pFnUpdateEquipment = NULL;

	if ( ! pFnUpdateEquipment )
		pFnUpdateEquipment = (UFunction*) UObject::GObjObjects()->Data[ 55354 ];

	UNowGFXHudScene_eventUpdateEquipment_Parms UpdateEquipment_Parms;
	memcpy ( &UpdateEquipment_Parms.sName, &sName, 0xC );
	UpdateEquipment_Parms.iNrCur = iNrCur;
	UpdateEquipment_Parms.iNrFree = iNrFree;
	UpdateEquipment_Parms.iNrMax = iNrMax;

	this->ProcessEvent ( pFnUpdateEquipment, &UpdateEquipment_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateReserve
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNr                            ( CPF_Parm )
// int                            iNrMax                         ( CPF_Parm )
// int                            iNrThr                         ( CPF_Parm )

void UNowGFXHudScene::eventUpdateReserve ( struct FString sName, int iNr, int iNrMax, int iNrThr )
{
	static UFunction* pFnUpdateReserve = NULL;

	if ( ! pFnUpdateReserve )
		pFnUpdateReserve = (UFunction*) UObject::GObjObjects()->Data[ 55349 ];

	UNowGFXHudScene_eventUpdateReserve_Parms UpdateReserve_Parms;
	memcpy ( &UpdateReserve_Parms.sName, &sName, 0xC );
	UpdateReserve_Parms.iNr = iNr;
	UpdateReserve_Parms.iNrMax = iNrMax;
	UpdateReserve_Parms.iNrThr = iNrThr;

	this->ProcessEvent ( pFnUpdateReserve, &UpdateReserve_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateMisc
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGroup                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventUpdateMisc ( struct FString sName, struct FString sGroup, struct FString sValue )
{
	static UFunction* pFnUpdateMisc = NULL;

	if ( ! pFnUpdateMisc )
		pFnUpdateMisc = (UFunction*) UObject::GObjObjects()->Data[ 55345 ];

	UNowGFXHudScene_eventUpdateMisc_Parms UpdateMisc_Parms;
	memcpy ( &UpdateMisc_Parms.sName, &sName, 0xC );
	memcpy ( &UpdateMisc_Parms.sGroup, &sGroup, 0xC );
	memcpy ( &UpdateMisc_Parms.sValue, &sValue, 0xC );

	this->ProcessEvent ( pFnUpdateMisc, &UpdateMisc_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateAttribute
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNr                            ( CPF_Parm )
// int                            iNrMod                         ( CPF_Parm )
// int                            iNrMax                         ( CPF_Parm )

void UNowGFXHudScene::eventUpdateAttribute ( struct FString sName, int iNr, int iNrMod, int iNrMax )
{
	static UFunction* pFnUpdateAttribute = NULL;

	if ( ! pFnUpdateAttribute )
		pFnUpdateAttribute = (UFunction*) UObject::GObjObjects()->Data[ 55339 ];

	UNowGFXHudScene_eventUpdateAttribute_Parms UpdateAttribute_Parms;
	memcpy ( &UpdateAttribute_Parms.sName, &sName, 0xC );
	UpdateAttribute_Parms.iNr = iNr;
	UpdateAttribute_Parms.iNrMod = iNrMod;
	UpdateAttribute_Parms.iNrMax = iNrMax;

	this->ProcessEvent ( pFnUpdateAttribute, &UpdateAttribute_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateBody
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sText                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventUpdateBody ( struct FString sName, struct FString sText )
{
	static UFunction* pFnUpdateBody = NULL;

	if ( ! pFnUpdateBody )
		pFnUpdateBody = (UFunction*) UObject::GObjObjects()->Data[ 55336 ];

	UNowGFXHudScene_eventUpdateBody_Parms UpdateBody_Parms;
	memcpy ( &UpdateBody_Parms.sName, &sName, 0xC );
	memcpy ( &UpdateBody_Parms.sText, &sText, 0xC );

	this->ProcessEvent ( pFnUpdateBody, &UpdateBody_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPaperdoll
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPaperdoll ( )
{
	static UFunction* pFnInitPaperdoll = NULL;

	if ( ! pFnInitPaperdoll )
		pFnInitPaperdoll = (UFunction*) UObject::GObjObjects()->Data[ 55330 ];

	UNowGFXHudScene_execInitPaperdoll_Parms InitPaperdoll_Parms;

	this->ProcessEvent ( pFnInitPaperdoll, &InitPaperdoll_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateDollTitles
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateDollTitles ( )
{
	static UFunction* pFnUpdateDollTitles = NULL;

	if ( ! pFnUpdateDollTitles )
		pFnUpdateDollTitles = (UFunction*) UObject::GObjObjects()->Data[ 55329 ];

	UNowGFXHudScene_execUpdateDollTitles_Parms UpdateDollTitles_Parms;

	pFnUpdateDollTitles->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateDollTitles, &UpdateDollTitles_Parms, NULL );

	pFnUpdateDollTitles->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.UpdateEquipped
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateEquipped ( )
{
	static UFunction* pFnUpdateEquipped = NULL;

	if ( ! pFnUpdateEquipped )
		pFnUpdateEquipped = (UFunction*) UObject::GObjObjects()->Data[ 55328 ];

	UNowGFXHudScene_execUpdateEquipped_Parms UpdateEquipped_Parms;

	pFnUpdateEquipped->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateEquipped, &UpdateEquipped_Parms, NULL );

	pFnUpdateEquipped->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearCurrentTasks
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventclearCurrentTasks ( )
{
	static UFunction* pFnclearCurrentTasks = NULL;

	if ( ! pFnclearCurrentTasks )
		pFnclearCurrentTasks = (UFunction*) UObject::GObjObjects()->Data[ 55327 ];

	UNowGFXHudScene_eventclearCurrentTasks_Parms clearCurrentTasks_Parms;

	this->ProcessEvent ( pFnclearCurrentTasks, &clearCurrentTasks_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.abandonTask
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            TaskId                         ( CPF_Parm )

void UNowGFXHudScene::eventabandonTask ( int TaskId )
{
	static UFunction* pFnabandonTask = NULL;

	if ( ! pFnabandonTask )
		pFnabandonTask = (UFunction*) UObject::GObjObjects()->Data[ 55325 ];

	UNowGFXHudScene_eventabandonTask_Parms abandonTask_Parms;
	abandonTask_Parms.TaskId = TaskId;

	this->ProcessEvent ( pFnabandonTask, &abandonTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showCurrentTasks
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showCurrentTasks ( )
{
	static UFunction* pFnshowCurrentTasks = NULL;

	if ( ! pFnshowCurrentTasks )
		pFnshowCurrentTasks = (UFunction*) UObject::GObjObjects()->Data[ 55324 ];

	UNowGFXHudScene_execshowCurrentTasks_Parms showCurrentTasks_Parms;

	this->ProcessEvent ( pFnshowCurrentTasks, &showCurrentTasks_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addCurrentTask
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 Item                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Recipient                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            reward                         ( CPF_Parm )
// int                            deposit                        ( CPF_Parm )
// int                            expires                        ( CPF_Parm )

void UNowGFXHudScene::eventaddCurrentTask ( int Id, struct FString Item, int Quantity, struct FString Category, struct FString Recipient, struct FString Destination, int reward, int deposit, int expires )
{
	static UFunction* pFnaddCurrentTask = NULL;

	if ( ! pFnaddCurrentTask )
		pFnaddCurrentTask = (UFunction*) UObject::GObjObjects()->Data[ 55314 ];

	UNowGFXHudScene_eventaddCurrentTask_Parms addCurrentTask_Parms;
	addCurrentTask_Parms.Id = Id;
	memcpy ( &addCurrentTask_Parms.Item, &Item, 0xC );
	addCurrentTask_Parms.Quantity = Quantity;
	memcpy ( &addCurrentTask_Parms.Category, &Category, 0xC );
	memcpy ( &addCurrentTask_Parms.Recipient, &Recipient, 0xC );
	memcpy ( &addCurrentTask_Parms.Destination, &Destination, 0xC );
	addCurrentTask_Parms.reward = reward;
	addCurrentTask_Parms.deposit = deposit;
	addCurrentTask_Parms.expires = expires;

	this->ProcessEvent ( pFnaddCurrentTask, &addCurrentTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitCurrentTasks
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitCurrentTasks ( )
{
	static UFunction* pFnInitCurrentTasks = NULL;

	if ( ! pFnInitCurrentTasks )
		pFnInitCurrentTasks = (UFunction*) UObject::GObjObjects()->Data[ 55313 ];

	UNowGFXHudScene_execInitCurrentTasks_Parms InitCurrentTasks_Parms;

	this->ProcessEvent ( pFnInitCurrentTasks, &InitCurrentTasks_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.nativePopulateTasks
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::nativePopulateTasks ( )
{
	static UFunction* pFnnativePopulateTasks = NULL;

	if ( ! pFnnativePopulateTasks )
		pFnnativePopulateTasks = (UFunction*) UObject::GObjObjects()->Data[ 55312 ];

	UNowGFXHudScene_execnativePopulateTasks_Parms nativePopulateTasks_Parms;

	pFnnativePopulateTasks->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnnativePopulateTasks, &nativePopulateTasks_Parms, NULL );

	pFnnativePopulateTasks->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.nativeAbondonTask
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            TaskId                         ( CPF_Parm )

void UNowGFXHudScene::nativeAbondonTask ( int TaskId )
{
	static UFunction* pFnnativeAbondonTask = NULL;

	if ( ! pFnnativeAbondonTask )
		pFnnativeAbondonTask = (UFunction*) UObject::GObjObjects()->Data[ 55310 ];

	UNowGFXHudScene_execnativeAbondonTask_Parms nativeAbondonTask_Parms;
	nativeAbondonTask_Parms.TaskId = TaskId;

	pFnnativeAbondonTask->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnnativeAbondonTask, &nativeAbondonTask_Parms, NULL );

	pFnnativeAbondonTask->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearEngineer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearEngineer ( )
{
	static UFunction* pFnclearEngineer = NULL;

	if ( ! pFnclearEngineer )
		pFnclearEngineer = (UFunction*) UObject::GObjObjects()->Data[ 55309 ];

	UNowGFXHudScene_execclearEngineer_Parms clearEngineer_Parms;

	this->ProcessEvent ( pFnclearEngineer, &clearEngineer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleEngineer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::toggleEngineer ( )
{
	static UFunction* pFntoggleEngineer = NULL;

	if ( ! pFntoggleEngineer )
		pFntoggleEngineer = (UFunction*) UObject::GObjObjects()->Data[ 55308 ];

	UNowGFXHudScene_exectoggleEngineer_Parms toggleEngineer_Parms;

	this->ProcessEvent ( pFntoggleEngineer, &toggleEngineer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeEngineer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeEngineer ( )
{
	static UFunction* pFncloseEngineer = NULL;

	if ( ! pFncloseEngineer )
		pFncloseEngineer = (UFunction*) UObject::GObjObjects()->Data[ 55307 ];

	UNowGFXHudScene_execcloseEngineer_Parms closeEngineer_Parms;

	this->ProcessEvent ( pFncloseEngineer, &closeEngineer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showEngineer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showEngineer ( )
{
	static UFunction* pFnshowEngineer = NULL;

	if ( ! pFnshowEngineer )
		pFnshowEngineer = (UFunction*) UObject::GObjObjects()->Data[ 55306 ];

	UNowGFXHudScene_execshowEngineer_Parms showEngineer_Parms;

	this->ProcessEvent ( pFnshowEngineer, &showEngineer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addEngineerItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Requirements                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )
// int                            costSilver                     ( CPF_Parm )
// int                            CostPP                         ( CPF_Parm )

void UNowGFXHudScene::addEngineerItem ( struct FString sGuid, struct FString Title, struct FString Description, struct FString Requirements, int Quantity, int costSilver, int CostPP )
{
	static UFunction* pFnaddEngineerItem = NULL;

	if ( ! pFnaddEngineerItem )
		pFnaddEngineerItem = (UFunction*) UObject::GObjObjects()->Data[ 55298 ];

	UNowGFXHudScene_execaddEngineerItem_Parms addEngineerItem_Parms;
	memcpy ( &addEngineerItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &addEngineerItem_Parms.Title, &Title, 0xC );
	memcpy ( &addEngineerItem_Parms.Description, &Description, 0xC );
	memcpy ( &addEngineerItem_Parms.Requirements, &Requirements, 0xC );
	addEngineerItem_Parms.Quantity = Quantity;
	addEngineerItem_Parms.costSilver = costSilver;
	addEngineerItem_Parms.CostPP = CostPP;

	this->ProcessEvent ( pFnaddEngineerItem, &addEngineerItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setBalances
// [0x00020002] 
// Parameters infos:
// int                            fundsCoin                      ( CPF_Parm )
// int                            fundsPP                        ( CPF_Parm )

void UNowGFXHudScene::setBalances ( int fundsCoin, int fundsPP )
{
	static UFunction* pFnsetBalances = NULL;

	if ( ! pFnsetBalances )
		pFnsetBalances = (UFunction*) UObject::GObjObjects()->Data[ 55295 ];

	UNowGFXHudScene_execsetBalances_Parms setBalances_Parms;
	setBalances_Parms.fundsCoin = fundsCoin;
	setBalances_Parms.fundsPP = fundsPP;

	this->ProcessEvent ( pFnsetBalances, &setBalances_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SortByBladeSkill
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftWeaponBlade      A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftWeaponBlade      B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByBladeSkill ( struct FsCraftWeaponBlade A, struct FsCraftWeaponBlade B )
{
	static UFunction* pFnSortByBladeSkill = NULL;

	if ( ! pFnSortByBladeSkill )
		pFnSortByBladeSkill = (UFunction*) UObject::GObjObjects()->Data[ 52920 ];

	UNowGFXHudScene_execSortByBladeSkill_Parms SortByBladeSkill_Parms;
	memcpy ( &SortByBladeSkill_Parms.A, &A, 0x28 );
	memcpy ( &SortByBladeSkill_Parms.B, &B, 0x28 );

	this->ProcessEvent ( pFnSortByBladeSkill, &SortByBladeSkill_Parms, NULL );

	return SortByBladeSkill_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SortByHandleSkill
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftWeaponHandle     A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftWeaponHandle     B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByHandleSkill ( struct FsCraftWeaponHandle A, struct FsCraftWeaponHandle B )
{
	static UFunction* pFnSortByHandleSkill = NULL;

	if ( ! pFnSortByHandleSkill )
		pFnSortByHandleSkill = (UFunction*) UObject::GObjObjects()->Data[ 52922 ];

	UNowGFXHudScene_execSortByHandleSkill_Parms SortByHandleSkill_Parms;
	memcpy ( &SortByHandleSkill_Parms.A, &A, 0x28 );
	memcpy ( &SortByHandleSkill_Parms.B, &B, 0x28 );

	this->ProcessEvent ( pFnSortByHandleSkill, &SortByHandleSkill_Parms, NULL );

	return SortByHandleSkill_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SortBuyItemByName
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FBuyItems               A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FBuyItems               B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortBuyItemByName ( struct FBuyItems A, struct FBuyItems B )
{
	static UFunction* pFnSortBuyItemByName = NULL;

	if ( ! pFnSortBuyItemByName )
		pFnSortBuyItemByName = (UFunction*) UObject::GObjObjects()->Data[ 52924 ];

	UNowGFXHudScene_execSortBuyItemByName_Parms SortBuyItemByName_Parms;
	memcpy ( &SortBuyItemByName_Parms.A, &A, 0x20 );
	memcpy ( &SortBuyItemByName_Parms.B, &B, 0x20 );

	this->ProcessEvent ( pFnSortBuyItemByName, &SortBuyItemByName_Parms, NULL );

	return SortBuyItemByName_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.BuyItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BuyItem ( struct FString sGuid )
{
	static UFunction* pFnBuyItem = NULL;

	if ( ! pFnBuyItem )
		pFnBuyItem = (UFunction*) UObject::GObjObjects()->Data[ 55283 ];

	UNowGFXHudScene_execBuyItem_Parms BuyItem_Parms;
	memcpy ( &BuyItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnBuyItem, &BuyItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddItemToUI
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            costSilver                     ( CPF_Parm )
// int                            CostPP                         ( CPF_Parm )

void UNowGFXHudScene::eventAddItemToUI ( struct FString sGuid, struct FString DisplayName, int costSilver, int CostPP )
{
	static UFunction* pFnAddItemToUI = NULL;

	if ( ! pFnAddItemToUI )
		pFnAddItemToUI = (UFunction*) UObject::GObjObjects()->Data[ 55277 ];

	UNowGFXHudScene_eventAddItemToUI_Parms AddItemToUI_Parms;
	memcpy ( &AddItemToUI_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &AddItemToUI_Parms.DisplayName, &DisplayName, 0xC );
	AddItemToUI_Parms.costSilver = costSilver;
	AddItemToUI_Parms.CostPP = CostPP;

	this->ProcessEvent ( pFnAddItemToUI, &AddItemToUI_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetAKeep
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarPlayerKeep* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerKeep* UNowGFXHudScene::eventGetAKeep ( )
{
	static UFunction* pFnGetAKeep = NULL;

	if ( ! pFnGetAKeep )
		pFnGetAKeep = (UFunction*) UObject::GObjObjects()->Data[ 55273 ];

	UNowGFXHudScene_eventGetAKeep_Parms GetAKeep_Parms;

	this->ProcessEvent ( pFnGetAKeep, &GetAKeep_Parms, NULL );

	return GetAKeep_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.FindItemIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::FindItemIndex ( struct FString sGuid )
{
	static UFunction* pFnFindItemIndex = NULL;

	if ( ! pFnFindItemIndex )
		pFnFindItemIndex = (UFunction*) UObject::GObjObjects()->Data[ 55269 ];

	UNowGFXHudScene_execFindItemIndex_Parms FindItemIndex_Parms;
	memcpy ( &FindItemIndex_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnFindItemIndex, &FindItemIndex_Parms, NULL );

	return FindItemIndex_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitEngineer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitEngineer ( )
{
	static UFunction* pFnInitEngineer = NULL;

	if ( ! pFnInitEngineer )
		pFnInitEngineer = (UFunction*) UObject::GObjObjects()->Data[ 55268 ];

	UNowGFXHudScene_execInitEngineer_Parms InitEngineer_Parms;

	this->ProcessEvent ( pFnInitEngineer, &InitEngineer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BuyEngineer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BuyEngineer ( struct FString sGuid )
{
	static UFunction* pFnBuyEngineer = NULL;

	if ( ! pFnBuyEngineer )
		pFnBuyEngineer = (UFunction*) UObject::GObjObjects()->Data[ 55266 ];

	UNowGFXHudScene_execBuyEngineer_Parms BuyEngineer_Parms;
	memcpy ( &BuyEngineer_Parms.sGuid, &sGuid, 0xC );

	pFnBuyEngineer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuyEngineer, &BuyEngineer_Parms, NULL );

	pFnBuyEngineer->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetVendorItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetVendorItems ( )
{
	static UFunction* pFnGetVendorItems = NULL;

	if ( ! pFnGetVendorItems )
		pFnGetVendorItems = (UFunction*) UObject::GObjObjects()->Data[ 55265 ];

	UNowGFXHudScene_execGetVendorItems_Parms GetVendorItems_Parms;

	pFnGetVendorItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVendorItems, &GetVendorItems_Parms, NULL );

	pFnGetVendorItems->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.requestRemoveHouseFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 req                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestRemoveHouseFriend ( struct FString req )
{
	static UFunction* pFnrequestRemoveHouseFriend = NULL;

	if ( ! pFnrequestRemoveHouseFriend )
		pFnrequestRemoveHouseFriend = (UFunction*) UObject::GObjObjects()->Data[ 55263 ];

	UNowGFXHudScene_execrequestRemoveHouseFriend_Parms requestRemoveHouseFriend_Parms;
	memcpy ( &requestRemoveHouseFriend_Parms.req, &req, 0xC );

	this->ProcessEvent ( pFnrequestRemoveHouseFriend, &requestRemoveHouseFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestAddHouseFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 req                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestAddHouseFriend ( struct FString req )
{
	static UFunction* pFnrequestAddHouseFriend = NULL;

	if ( ! pFnrequestAddHouseFriend )
		pFnrequestAddHouseFriend = (UFunction*) UObject::GObjObjects()->Data[ 55261 ];

	UNowGFXHudScene_execrequestAddHouseFriend_Parms requestAddHouseFriend_Parms;
	memcpy ( &requestAddHouseFriend_Parms.req, &req, 0xC );

	this->ProcessEvent ( pFnrequestAddHouseFriend, &requestAddHouseFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeHouseFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 Friend                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeHouseFriend ( struct FString Friend )
{
	static UFunction* pFnremoveHouseFriend = NULL;

	if ( ! pFnremoveHouseFriend )
		pFnremoveHouseFriend = (UFunction*) UObject::GObjObjects()->Data[ 55259 ];

	UNowGFXHudScene_execremoveHouseFriend_Parms removeHouseFriend_Parms;
	memcpy ( &removeHouseFriend_Parms.Friend, &Friend, 0xC );

	this->ProcessEvent ( pFnremoveHouseFriend, &removeHouseFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addHouseFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addHouseFriend ( struct FString FriendName )
{
	static UFunction* pFnaddHouseFriend = NULL;

	if ( ! pFnaddHouseFriend )
		pFnaddHouseFriend = (UFunction*) UObject::GObjObjects()->Data[ 55257 ];

	UNowGFXHudScene_execaddHouseFriend_Parms addHouseFriend_Parms;
	memcpy ( &addHouseFriend_Parms.FriendName, &FriendName, 0xC );

	this->ProcessEvent ( pFnaddHouseFriend, &addHouseFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearHouseFriends
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearHouseFriends ( )
{
	static UFunction* pFnclearHouseFriends = NULL;

	if ( ! pFnclearHouseFriends )
		pFnclearHouseFriends = (UFunction*) UObject::GObjObjects()->Data[ 55256 ];

	UNowGFXHudScene_execclearHouseFriends_Parms clearHouseFriends_Parms;

	this->ProcessEvent ( pFnclearHouseFriends, &clearHouseFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleHouseFriends
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::toggleHouseFriends ( )
{
	static UFunction* pFntoggleHouseFriends = NULL;

	if ( ! pFntoggleHouseFriends )
		pFntoggleHouseFriends = (UFunction*) UObject::GObjObjects()->Data[ 55255 ];

	UNowGFXHudScene_exectoggleHouseFriends_Parms toggleHouseFriends_Parms;

	this->ProcessEvent ( pFntoggleHouseFriends, &toggleHouseFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateHouseFriendList
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventupdateHouseFriendList ( )
{
	static UFunction* pFnupdateHouseFriendList = NULL;

	if ( ! pFnupdateHouseFriendList )
		pFnupdateHouseFriendList = (UFunction*) UObject::GObjObjects()->Data[ 55251 ];

	UNowGFXHudScene_eventupdateHouseFriendList_Parms updateHouseFriendList_Parms;

	this->ProcessEvent ( pFnupdateHouseFriendList, &updateHouseFriendList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getInitHouseFriends
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::getInitHouseFriends ( )
{
	static UFunction* pFngetInitHouseFriends = NULL;

	if ( ! pFngetInitHouseFriends )
		pFngetInitHouseFriends = (UFunction*) UObject::GObjObjects()->Data[ 55249 ];

	UNowGFXHudScene_execgetInitHouseFriends_Parms getInitHouseFriends_Parms;

	this->ProcessEvent ( pFngetInitHouseFriends, &getInitHouseFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitHouseFriends
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitHouseFriends ( )
{
	static UFunction* pFnInitHouseFriends = NULL;

	if ( ! pFnInitHouseFriends )
		pFnInitHouseFriends = (UFunction*) UObject::GObjObjects()->Data[ 55248 ];

	UNowGFXHudScene_eventInitHouseFriends_Parms InitHouseFriends_Parms;

	this->ProcessEvent ( pFnInitHouseFriends, &InitHouseFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.enumerateHouseFriendNames
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// TArray< struct FString >       vFriendName                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UNowGFXHudScene::enumerateHouseFriendNames ( TArray< struct FString >* vFriendName )
{
	static UFunction* pFnenumerateHouseFriendNames = NULL;

	if ( ! pFnenumerateHouseFriendNames )
		pFnenumerateHouseFriendNames = (UFunction*) UObject::GObjObjects()->Data[ 55244 ];

	UNowGFXHudScene_execenumerateHouseFriendNames_Parms enumerateHouseFriendNames_Parms;

	pFnenumerateHouseFriendNames->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnenumerateHouseFriendNames, &enumerateHouseFriendNames_Parms, NULL );

	pFnenumerateHouseFriendNames->FunctionFlags |= 0x400;

	if ( vFriendName )
		memcpy ( vFriendName, &enumerateHouseFriendNames_Parms.vFriendName, 0xC );

	return enumerateHouseFriendNames_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.RemoveHouseFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveHouseFriendNative ( struct FString FriendName )
{
	static UFunction* pFnRemoveHouseFriendNative = NULL;

	if ( ! pFnRemoveHouseFriendNative )
		pFnRemoveHouseFriendNative = (UFunction*) UObject::GObjObjects()->Data[ 55242 ];

	UNowGFXHudScene_execRemoveHouseFriendNative_Parms RemoveHouseFriendNative_Parms;
	memcpy ( &RemoveHouseFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnRemoveHouseFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveHouseFriendNative, &RemoveHouseFriendNative_Parms, NULL );

	pFnRemoveHouseFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddHouseFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddHouseFriendNative ( struct FString FriendName )
{
	static UFunction* pFnAddHouseFriendNative = NULL;

	if ( ! pFnAddHouseFriendNative )
		pFnAddHouseFriendNative = (UFunction*) UObject::GObjObjects()->Data[ 55240 ];

	UNowGFXHudScene_execAddHouseFriendNative_Parms AddHouseFriendNative_Parms;
	memcpy ( &AddHouseFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnAddHouseFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddHouseFriendNative, &AddHouseFriendNative_Parms, NULL );

	pFnAddHouseFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.TalkGuardResponse
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkGuardResponse ( int iIndex )
{
	static UFunction* pFnTalkGuardResponse = NULL;

	if ( ! pFnTalkGuardResponse )
		pFnTalkGuardResponse = (UFunction*) UObject::GObjObjects()->Data[ 55238 ];

	UNowGFXHudScene_execTalkGuardResponse_Parms TalkGuardResponse_Parms;
	TalkGuardResponse_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkGuardResponse, &TalkGuardResponse_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GuardResponse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iResponse                      ( CPF_Parm )

void UNowGFXHudScene::GuardResponse ( int iResponse )
{
	static UFunction* pFnGuardResponse = NULL;

	if ( ! pFnGuardResponse )
		pFnGuardResponse = (UFunction*) UObject::GObjObjects()->Data[ 55236 ];

	UNowGFXHudScene_execGuardResponse_Parms GuardResponse_Parms;
	GuardResponse_Parms.iResponse = iResponse;

	pFnGuardResponse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuardResponse, &GuardResponse_Parms, NULL );

	pFnGuardResponse->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearTreasurerItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearTreasurerItems ( )
{
	static UFunction* pFnclearTreasurerItems = NULL;

	if ( ! pFnclearTreasurerItems )
		pFnclearTreasurerItems = (UFunction*) UObject::GObjObjects()->Data[ 55235 ];

	UNowGFXHudScene_execclearTreasurerItems_Parms clearTreasurerItems_Parms;

	this->ProcessEvent ( pFnclearTreasurerItems, &clearTreasurerItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeTreasurer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeTreasurer ( )
{
	static UFunction* pFncloseTreasurer = NULL;

	if ( ! pFncloseTreasurer )
		pFncloseTreasurer = (UFunction*) UObject::GObjObjects()->Data[ 55234 ];

	UNowGFXHudScene_execcloseTreasurer_Parms closeTreasurer_Parms;

	this->ProcessEvent ( pFncloseTreasurer, &closeTreasurer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showTreasurer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showTreasurer ( )
{
	static UFunction* pFnshowTreasurer = NULL;

	if ( ! pFnshowTreasurer )
		pFnshowTreasurer = (UFunction*) UObject::GObjObjects()->Data[ 55233 ];

	UNowGFXHudScene_execshowTreasurer_Parms showTreasurer_Parms;

	this->ProcessEvent ( pFnshowTreasurer, &showTreasurer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleTreasurer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::toggleTreasurer ( )
{
	static UFunction* pFntoggleTreasurer = NULL;

	if ( ! pFntoggleTreasurer )
		pFntoggleTreasurer = (UFunction*) UObject::GObjObjects()->Data[ 55232 ];

	UNowGFXHudScene_exectoggleTreasurer_Parms toggleTreasurer_Parms;

	this->ProcessEvent ( pFntoggleTreasurer, &toggleTreasurer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setTreasurerQuantity
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )

void UNowGFXHudScene::setTreasurerQuantity ( struct FString sGuid, int Quantity )
{
	static UFunction* pFnsetTreasurerQuantity = NULL;

	if ( ! pFnsetTreasurerQuantity )
		pFnsetTreasurerQuantity = (UFunction*) UObject::GObjObjects()->Data[ 55229 ];

	UNowGFXHudScene_execsetTreasurerQuantity_Parms setTreasurerQuantity_Parms;
	memcpy ( &setTreasurerQuantity_Parms.sGuid, &sGuid, 0xC );
	setTreasurerQuantity_Parms.Quantity = Quantity;

	this->ProcessEvent ( pFnsetTreasurerQuantity, &setTreasurerQuantity_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeTreasurerItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeTreasurerItem ( struct FString sGuid )
{
	static UFunction* pFnremoveTreasurerItem = NULL;

	if ( ! pFnremoveTreasurerItem )
		pFnremoveTreasurerItem = (UFunction*) UObject::GObjObjects()->Data[ 55227 ];

	UNowGFXHudScene_execremoveTreasurerItem_Parms removeTreasurerItem_Parms;
	memcpy ( &removeTreasurerItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnremoveTreasurerItem, &removeTreasurerItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTreasurerItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            Status                         ( CPF_Parm )
// int                            Quantity                       ( CPF_Parm )
// int                            cp                             ( CPF_Parm )
// int                            PP                             ( CPF_Parm )
// int                            stackSize                      ( CPF_Parm )

void UNowGFXHudScene::addTreasurerItem ( struct FString sGuid, struct FString Title, struct FString Description, int Status, int Quantity, int cp, int PP, int stackSize )
{
	static UFunction* pFnaddTreasurerItem = NULL;

	if ( ! pFnaddTreasurerItem )
		pFnaddTreasurerItem = (UFunction*) UObject::GObjObjects()->Data[ 55218 ];

	UNowGFXHudScene_execaddTreasurerItem_Parms addTreasurerItem_Parms;
	memcpy ( &addTreasurerItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &addTreasurerItem_Parms.Title, &Title, 0xC );
	memcpy ( &addTreasurerItem_Parms.Description, &Description, 0xC );
	addTreasurerItem_Parms.Status = Status;
	addTreasurerItem_Parms.Quantity = Quantity;
	addTreasurerItem_Parms.cp = cp;
	addTreasurerItem_Parms.PP = PP;
	addTreasurerItem_Parms.stackSize = stackSize;

	this->ProcessEvent ( pFnaddTreasurerItem, &addTreasurerItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TradeTreasurerItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )

void UNowGFXHudScene::TradeTreasurerItem ( struct FString sGuid, int Quantity )
{
	static UFunction* pFnTradeTreasurerItem = NULL;

	if ( ! pFnTradeTreasurerItem )
		pFnTradeTreasurerItem = (UFunction*) UObject::GObjObjects()->Data[ 55215 ];

	UNowGFXHudScene_execTradeTreasurerItem_Parms TradeTreasurerItem_Parms;
	memcpy ( &TradeTreasurerItem_Parms.sGuid, &sGuid, 0xC );
	TradeTreasurerItem_Parms.Quantity = Quantity;

	this->ProcessEvent ( pFnTradeTreasurerItem, &TradeTreasurerItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            RemQuantity                    ( CPF_Parm )

void UNowGFXHudScene::UpdateItem ( struct FString sGuid, int RemQuantity )
{
	static UFunction* pFnUpdateItem = NULL;

	if ( ! pFnUpdateItem )
		pFnUpdateItem = (UFunction*) UObject::GObjObjects()->Data[ 55210 ];

	UNowGFXHudScene_execUpdateItem_Parms UpdateItem_Parms;
	memcpy ( &UpdateItem_Parms.sGuid, &sGuid, 0xC );
	UpdateItem_Parms.RemQuantity = RemQuantity;

	this->ProcessEvent ( pFnUpdateItem, &UpdateItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetMinQuantity
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::GetMinQuantity ( struct FString sGuid )
{
	static UFunction* pFnGetMinQuantity = NULL;

	if ( ! pFnGetMinQuantity )
		pFnGetMinQuantity = (UFunction*) UObject::GObjObjects()->Data[ 55206 ];

	UNowGFXHudScene_execGetMinQuantity_Parms GetMinQuantity_Parms;
	memcpy ( &GetMinQuantity_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGetMinQuantity, &GetMinQuantity_Parms, NULL );

	return GetMinQuantity_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.FinishAddingTreasurerItems
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinishAddingTreasurerItems ( )
{
	static UFunction* pFnFinishAddingTreasurerItems = NULL;

	if ( ! pFnFinishAddingTreasurerItems )
		pFnFinishAddingTreasurerItems = (UFunction*) UObject::GObjObjects()->Data[ 55203 ];

	UNowGFXHudScene_eventFinishAddingTreasurerItems_Parms FinishAddingTreasurerItems_Parms;

	this->ProcessEvent ( pFnFinishAddingTreasurerItems, &FinishAddingTreasurerItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DoAddTreasurerItem
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Desc                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            Status                         ( CPF_Parm )
// int                            Quantity                       ( CPF_Parm )
// int                            cp                             ( CPF_Parm )
// float                          PP                             ( CPF_Parm )
// int                            stackSize                      ( CPF_Parm )

void UNowGFXHudScene::eventDoAddTreasurerItem ( struct FString sGuid, struct FString Title, struct FString Desc, int Status, int Quantity, int cp, float PP, int stackSize )
{
	static UFunction* pFnDoAddTreasurerItem = NULL;

	if ( ! pFnDoAddTreasurerItem )
		pFnDoAddTreasurerItem = (UFunction*) UObject::GObjObjects()->Data[ 55193 ];

	UNowGFXHudScene_eventDoAddTreasurerItem_Parms DoAddTreasurerItem_Parms;
	memcpy ( &DoAddTreasurerItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &DoAddTreasurerItem_Parms.Title, &Title, 0xC );
	memcpy ( &DoAddTreasurerItem_Parms.Desc, &Desc, 0xC );
	DoAddTreasurerItem_Parms.Status = Status;
	DoAddTreasurerItem_Parms.Quantity = Quantity;
	DoAddTreasurerItem_Parms.cp = cp;
	DoAddTreasurerItem_Parms.PP = PP;
	DoAddTreasurerItem_Parms.stackSize = stackSize;

	this->ProcessEvent ( pFnDoAddTreasurerItem, &DoAddTreasurerItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitTreasurer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitTreasurer ( )
{
	static UFunction* pFnInitTreasurer = NULL;

	if ( ! pFnInitTreasurer )
		pFnInitTreasurer = (UFunction*) UObject::GObjObjects()->Data[ 55192 ];

	UNowGFXHudScene_execInitTreasurer_Parms InitTreasurer_Parms;

	this->ProcessEvent ( pFnInitTreasurer, &InitTreasurer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.sellTreasurerItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            Amount                         ( CPF_Parm )

void UNowGFXHudScene::sellTreasurerItem ( struct FString ItemGuid, int Amount )
{
	static UFunction* pFnsellTreasurerItem = NULL;

	if ( ! pFnsellTreasurerItem )
		pFnsellTreasurerItem = (UFunction*) UObject::GObjObjects()->Data[ 55189 ];

	UNowGFXHudScene_execsellTreasurerItem_Parms sellTreasurerItem_Parms;
	memcpy ( &sellTreasurerItem_Parms.ItemGuid, &ItemGuid, 0xC );
	sellTreasurerItem_Parms.Amount = Amount;

	pFnsellTreasurerItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnsellTreasurerItem, &sellTreasurerItem_Parms, NULL );

	pFnsellTreasurerItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.getTreasurerTradeItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::getTreasurerTradeItems ( )
{
	static UFunction* pFngetTreasurerTradeItems = NULL;

	if ( ! pFngetTreasurerTradeItems )
		pFngetTreasurerTradeItems = (UFunction*) UObject::GObjObjects()->Data[ 55188 ];

	UNowGFXHudScene_execgetTreasurerTradeItems_Parms getTreasurerTradeItems_Parms;

	pFngetTreasurerTradeItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetTreasurerTradeItems, &getTreasurerTradeItems_Parms, NULL );

	pFngetTreasurerTradeItems->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeGuildUI
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeGuildUI ( )
{
	static UFunction* pFncloseGuildUI = NULL;

	if ( ! pFncloseGuildUI )
		pFncloseGuildUI = (UFunction*) UObject::GObjObjects()->Data[ 55187 ];

	UNowGFXHudScene_execcloseGuildUI_Parms closeGuildUI_Parms;

	this->ProcessEvent ( pFncloseGuildUI, &closeGuildUI_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateMember
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            Rank                           ( CPF_Parm )

void UNowGFXHudScene::eventupdateMember ( struct FString memberName, int Rank )
{
	static UFunction* pFnupdateMember = NULL;

	if ( ! pFnupdateMember )
		pFnupdateMember = (UFunction*) UObject::GObjObjects()->Data[ 55184 ];

	UNowGFXHudScene_eventupdateMember_Parms updateMember_Parms;
	memcpy ( &updateMember_Parms.memberName, &memberName, 0xC );
	updateMember_Parms.Rank = Rank;

	this->ProcessEvent ( pFnupdateMember, &updateMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveMember
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventRemoveMember ( struct FString memberName )
{
	static UFunction* pFnRemoveMember = NULL;

	if ( ! pFnRemoveMember )
		pFnRemoveMember = (UFunction*) UObject::GObjObjects()->Data[ 55182 ];

	UNowGFXHudScene_eventRemoveMember_Parms RemoveMember_Parms;
	memcpy ( &RemoveMember_Parms.memberName, &memberName, 0xC );

	this->ProcessEvent ( pFnRemoveMember, &RemoveMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddMember
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            memberRank                     ( CPF_Parm )

void UNowGFXHudScene::eventAddMember ( struct FString memberName, int memberRank )
{
	static UFunction* pFnAddMember = NULL;

	if ( ! pFnAddMember )
		pFnAddMember = (UFunction*) UObject::GObjObjects()->Data[ 55179 ];

	UNowGFXHudScene_eventAddMember_Parms AddMember_Parms;
	memcpy ( &AddMember_Parms.memberName, &memberName, 0xC );
	AddMember_Parms.memberRank = memberRank;

	this->ProcessEvent ( pFnAddMember, &AddMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeWar
// [0x00020002] 
// Parameters infos:
// struct FString                 warName                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeWar ( struct FString warName )
{
	static UFunction* pFnremoveWar = NULL;

	if ( ! pFnremoveWar )
		pFnremoveWar = (UFunction*) UObject::GObjObjects()->Data[ 55177 ];

	UNowGFXHudScene_execremoveWar_Parms removeWar_Parms;
	memcpy ( &removeWar_Parms.warName, &warName, 0xC );

	this->ProcessEvent ( pFnremoveWar, &removeWar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addWar
// [0x00020002] 
// Parameters infos:
// struct FString                 warName                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  warActive                      ( CPF_Parm )
// unsigned long                  warChallenger                  ( CPF_Parm )

void UNowGFXHudScene::addWar ( struct FString warName, unsigned long warActive, unsigned long warChallenger )
{
	static UFunction* pFnaddWar = NULL;

	if ( ! pFnaddWar )
		pFnaddWar = (UFunction*) UObject::GObjObjects()->Data[ 55173 ];

	UNowGFXHudScene_execaddWar_Parms addWar_Parms;
	memcpy ( &addWar_Parms.warName, &warName, 0xC );
	addWar_Parms.warActive = warActive;
	addWar_Parms.warChallenger = warChallenger;

	this->ProcessEvent ( pFnaddWar, &addWar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.initGuildUI
// [0x00020002] 
// Parameters infos:
// struct FString                 guildAbbrev                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bMembers                       ( CPF_Parm )
// unsigned long                  bDiplomacy                     ( CPF_Parm )
// unsigned long                  bOptions                       ( CPF_Parm )
// unsigned long                  bCanInvite                     ( CPF_Parm )
// unsigned long                  bCanKick                       ( CPF_Parm )
// unsigned long                  bCanPromote                    ( CPF_Parm )
// unsigned long                  bCanDemote                     ( CPF_Parm )
// int                            maxRank                        ( CPF_Parm )
// unsigned long                  bManageWars                    ( CPF_Parm )
// unsigned long                  bCityName                      ( CPF_Parm )

void UNowGFXHudScene::initGuildUI ( struct FString guildAbbrev, unsigned long bMembers, unsigned long bDiplomacy, unsigned long bOptions, unsigned long bCanInvite, unsigned long bCanKick, unsigned long bCanPromote, unsigned long bCanDemote, int maxRank, unsigned long bManageWars, unsigned long bCityName )
{
	static UFunction* pFninitGuildUI = NULL;

	if ( ! pFninitGuildUI )
		pFninitGuildUI = (UFunction*) UObject::GObjObjects()->Data[ 55161 ];

	UNowGFXHudScene_execinitGuildUI_Parms initGuildUI_Parms;
	memcpy ( &initGuildUI_Parms.guildAbbrev, &guildAbbrev, 0xC );
	initGuildUI_Parms.bMembers = bMembers;
	initGuildUI_Parms.bDiplomacy = bDiplomacy;
	initGuildUI_Parms.bOptions = bOptions;
	initGuildUI_Parms.bCanInvite = bCanInvite;
	initGuildUI_Parms.bCanKick = bCanKick;
	initGuildUI_Parms.bCanPromote = bCanPromote;
	initGuildUI_Parms.bCanDemote = bCanDemote;
	initGuildUI_Parms.maxRank = maxRank;
	initGuildUI_Parms.bManageWars = bManageWars;
	initGuildUI_Parms.bCityName = bCityName;

	this->ProcessEvent ( pFninitGuildUI, &initGuildUI_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildSendChallenge
// [0x00020002] 
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::guildSendChallenge ( struct FString guildName )
{
	static UFunction* pFnguildSendChallenge = NULL;

	if ( ! pFnguildSendChallenge )
		pFnguildSendChallenge = (UFunction*) UObject::GObjObjects()->Data[ 55159 ];

	UNowGFXHudScene_execguildSendChallenge_Parms guildSendChallenge_Parms;
	memcpy ( &guildSendChallenge_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnguildSendChallenge, &guildSendChallenge_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildCancelWar
// [0x00020002] 
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::guildCancelWar ( struct FString guildName )
{
	static UFunction* pFnguildCancelWar = NULL;

	if ( ! pFnguildCancelWar )
		pFnguildCancelWar = (UFunction*) UObject::GObjObjects()->Data[ 55157 ];

	UNowGFXHudScene_execguildCancelWar_Parms guildCancelWar_Parms;
	memcpy ( &guildCancelWar_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnguildCancelWar, &guildCancelWar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildCancelChallenge
// [0x00020002] 
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::guildCancelChallenge ( struct FString guildName )
{
	static UFunction* pFnguildCancelChallenge = NULL;

	if ( ! pFnguildCancelChallenge )
		pFnguildCancelChallenge = (UFunction*) UObject::GObjObjects()->Data[ 55155 ];

	UNowGFXHudScene_execguildCancelChallenge_Parms guildCancelChallenge_Parms;
	memcpy ( &guildCancelChallenge_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnguildCancelChallenge, &guildCancelChallenge_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildAcceptedChallenge
// [0x00020002] 
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::guildAcceptedChallenge ( struct FString guildName )
{
	static UFunction* pFnguildAcceptedChallenge = NULL;

	if ( ! pFnguildAcceptedChallenge )
		pFnguildAcceptedChallenge = (UFunction*) UObject::GObjObjects()->Data[ 55153 ];

	UNowGFXHudScene_execguildAcceptedChallenge_Parms guildAcceptedChallenge_Parms;
	memcpy ( &guildAcceptedChallenge_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnguildAcceptedChallenge, &guildAcceptedChallenge_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildRankMember
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            memberRank                     ( CPF_Parm )

void UNowGFXHudScene::eventguildRankMember ( struct FString memberName, int memberRank )
{
	static UFunction* pFnguildRankMember = NULL;

	if ( ! pFnguildRankMember )
		pFnguildRankMember = (UFunction*) UObject::GObjObjects()->Data[ 55150 ];

	UNowGFXHudScene_eventguildRankMember_Parms guildRankMember_Parms;
	memcpy ( &guildRankMember_Parms.memberName, &memberName, 0xC );
	guildRankMember_Parms.memberRank = memberRank;

	this->ProcessEvent ( pFnguildRankMember, &guildRankMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildKickMember
// [0x00020002] 
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::guildKickMember ( struct FString memberName )
{
	static UFunction* pFnguildKickMember = NULL;

	if ( ! pFnguildKickMember )
		pFnguildKickMember = (UFunction*) UObject::GObjObjects()->Data[ 55148 ];

	UNowGFXHudScene_execguildKickMember_Parms guildKickMember_Parms;
	memcpy ( &guildKickMember_Parms.memberName, &memberName, 0xC );

	this->ProcessEvent ( pFnguildKickMember, &guildKickMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildSendInvite
// [0x00020002] 
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::guildSendInvite ( struct FString memberName )
{
	static UFunction* pFnguildSendInvite = NULL;

	if ( ! pFnguildSendInvite )
		pFnguildSendInvite = (UFunction*) UObject::GObjObjects()->Data[ 55146 ];

	UNowGFXHudScene_execguildSendInvite_Parms guildSendInvite_Parms;
	memcpy ( &guildSendInvite_Parms.memberName, &memberName, 0xC );

	this->ProcessEvent ( pFnguildSendInvite, &guildSendInvite_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setGuildMembers
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::setGuildMembers ( )
{
	static UFunction* pFnsetGuildMembers = NULL;

	if ( ! pFnsetGuildMembers )
		pFnsetGuildMembers = (UFunction*) UObject::GObjObjects()->Data[ 55145 ];

	UNowGFXHudScene_execsetGuildMembers_Parms setGuildMembers_Parms;

	this->ProcessEvent ( pFnsetGuildMembers, &setGuildMembers_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetInitData
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::SetInitData ( )
{
	static UFunction* pFnSetInitData = NULL;

	if ( ! pFnSetInitData )
		pFnSetInitData = (UFunction*) UObject::GObjObjects()->Data[ 55144 ];

	UNowGFXHudScene_execSetInitData_Parms SetInitData_Parms;

	this->ProcessEvent ( pFnSetInitData, &SetInitData_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildWarUpdated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventguildWarUpdated ( )
{
	static UFunction* pFnguildWarUpdated = NULL;

	if ( ! pFnguildWarUpdated )
		pFnguildWarUpdated = (UFunction*) UObject::GObjObjects()->Data[ 55142 ];

	UNowGFXHudScene_eventguildWarUpdated_Parms guildWarUpdated_Parms;

	this->ProcessEvent ( pFnguildWarUpdated, &guildWarUpdated_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddOutgoingGuildWar
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddOutgoingGuildWar ( struct FString guildName )
{
	static UFunction* pFnAddOutgoingGuildWar = NULL;

	if ( ! pFnAddOutgoingGuildWar )
		pFnAddOutgoingGuildWar = (UFunction*) UObject::GObjObjects()->Data[ 55140 ];

	UNowGFXHudScene_eventAddOutgoingGuildWar_Parms AddOutgoingGuildWar_Parms;
	memcpy ( &AddOutgoingGuildWar_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnAddOutgoingGuildWar, &AddOutgoingGuildWar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddInComingGuildWar
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddInComingGuildWar ( struct FString guildName )
{
	static UFunction* pFnAddInComingGuildWar = NULL;

	if ( ! pFnAddInComingGuildWar )
		pFnAddInComingGuildWar = (UFunction*) UObject::GObjObjects()->Data[ 55138 ];

	UNowGFXHudScene_eventAddInComingGuildWar_Parms AddInComingGuildWar_Parms;
	memcpy ( &AddInComingGuildWar_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnAddInComingGuildWar, &AddInComingGuildWar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddGuildWar
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddGuildWar ( struct FString guildName )
{
	static UFunction* pFnAddGuildWar = NULL;

	if ( ! pFnAddGuildWar )
		pFnAddGuildWar = (UFunction*) UObject::GObjObjects()->Data[ 55136 ];

	UNowGFXHudScene_eventAddGuildWar_Parms AddGuildWar_Parms;
	memcpy ( &AddGuildWar_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnAddGuildWar, &AddGuildWar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearWars
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventclearWars ( )
{
	static UFunction* pFnclearWars = NULL;

	if ( ! pFnclearWars )
		pFnclearWars = (UFunction*) UObject::GObjObjects()->Data[ 55134 ];

	UNowGFXHudScene_eventclearWars_Parms clearWars_Parms;

	this->ProcessEvent ( pFnclearWars, &clearWars_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildUpdated
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventguildUpdated ( )
{
	static UFunction* pFnguildUpdated = NULL;

	if ( ! pFnguildUpdated )
		pFnguildUpdated = (UFunction*) UObject::GObjObjects()->Data[ 55133 ];

	UNowGFXHudScene_eventguildUpdated_Parms guildUpdated_Parms;

	this->ProcessEvent ( pFnguildUpdated, &guildUpdated_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReinitGuildMembers
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventReinitGuildMembers ( )
{
	static UFunction* pFnReinitGuildMembers = NULL;

	if ( ! pFnReinitGuildMembers )
		pFnReinitGuildMembers = (UFunction*) UObject::GObjObjects()->Data[ 55132 ];

	UNowGFXHudScene_eventReinitGuildMembers_Parms ReinitGuildMembers_Parms;

	this->ProcessEvent ( pFnReinitGuildMembers, &ReinitGuildMembers_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGuildStone
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGuildStone ( )
{
	static UFunction* pFnInitGuildStone = NULL;

	if ( ! pFnInitGuildStone )
		pFnInitGuildStone = (UFunction*) UObject::GObjObjects()->Data[ 55130 ];

	UNowGFXHudScene_execInitGuildStone_Parms InitGuildStone_Parms;

	this->ProcessEvent ( pFnInitGuildStone, &InitGuildStone_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.IsGuildLeader
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::IsGuildLeader ( )
{
	static UFunction* pFnIsGuildLeader = NULL;

	if ( ! pFnIsGuildLeader )
		pFnIsGuildLeader = (UFunction*) UObject::GObjObjects()->Data[ 55128 ];

	UNowGFXHudScene_execIsGuildLeader_Parms IsGuildLeader_Parms;

	pFnIsGuildLeader->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsGuildLeader, &IsGuildLeader_Parms, NULL );

	pFnIsGuildLeader->FunctionFlags |= 0x400;

	return IsGuildLeader_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CanManageWars
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::CanManageWars ( )
{
	static UFunction* pFnCanManageWars = NULL;

	if ( ! pFnCanManageWars )
		pFnCanManageWars = (UFunction*) UObject::GObjObjects()->Data[ 55126 ];

	UNowGFXHudScene_execCanManageWars_Parms CanManageWars_Parms;

	pFnCanManageWars->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanManageWars, &CanManageWars_Parms, NULL );

	pFnCanManageWars->FunctionFlags |= 0x400;

	return CanManageWars_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CanSeeInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::CanSeeInfo ( )
{
	static UFunction* pFnCanSeeInfo = NULL;

	if ( ! pFnCanSeeInfo )
		pFnCanSeeInfo = (UFunction*) UObject::GObjObjects()->Data[ 55124 ];

	UNowGFXHudScene_execCanSeeInfo_Parms CanSeeInfo_Parms;

	pFnCanSeeInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanSeeInfo, &CanSeeInfo_Parms, NULL );

	pFnCanSeeInfo->FunctionFlags |= 0x400;

	return CanSeeInfo_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CanKick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::CanKick ( )
{
	static UFunction* pFnCanKick = NULL;

	if ( ! pFnCanKick )
		pFnCanKick = (UFunction*) UObject::GObjObjects()->Data[ 55122 ];

	UNowGFXHudScene_execCanKick_Parms CanKick_Parms;

	pFnCanKick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanKick, &CanKick_Parms, NULL );

	pFnCanKick->FunctionFlags |= 0x400;

	return CanKick_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CanPromoteDemote
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::CanPromoteDemote ( )
{
	static UFunction* pFnCanPromoteDemote = NULL;

	if ( ! pFnCanPromoteDemote )
		pFnCanPromoteDemote = (UFunction*) UObject::GObjObjects()->Data[ 55120 ];

	UNowGFXHudScene_execCanPromoteDemote_Parms CanPromoteDemote_Parms;

	pFnCanPromoteDemote->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanPromoteDemote, &CanPromoteDemote_Parms, NULL );

	pFnCanPromoteDemote->FunctionFlags |= 0x400;

	return CanPromoteDemote_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GuildSetCityName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sCityName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildSetCityName ( struct FString sCityName )
{
	static UFunction* pFnGuildSetCityName = NULL;

	if ( ! pFnGuildSetCityName )
		pFnGuildSetCityName = (UFunction*) UObject::GObjObjects()->Data[ 55118 ];

	UNowGFXHudScene_execGuildSetCityName_Parms GuildSetCityName_Parms;
	memcpy ( &GuildSetCityName_Parms.sCityName, &sCityName, 0xC );

	pFnGuildSetCityName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildSetCityName, &GuildSetCityName_Parms, NULL );

	pFnGuildSetCityName->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildSetAccronym
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 guildAccronym                  ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildSetAccronym ( struct FString guildAccronym )
{
	static UFunction* pFnGuildSetAccronym = NULL;

	if ( ! pFnGuildSetAccronym )
		pFnGuildSetAccronym = (UFunction*) UObject::GObjObjects()->Data[ 55116 ];

	UNowGFXHudScene_execGuildSetAccronym_Parms GuildSetAccronym_Parms;
	memcpy ( &GuildSetAccronym_Parms.guildAccronym, &guildAccronym, 0xC );

	pFnGuildSetAccronym->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildSetAccronym, &GuildSetAccronym_Parms, NULL );

	pFnGuildSetAccronym->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildAcceptChallenge
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuild                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildAcceptChallenge ( struct FString sGuild )
{
	static UFunction* pFnGuildAcceptChallenge = NULL;

	if ( ! pFnGuildAcceptChallenge )
		pFnGuildAcceptChallenge = (UFunction*) UObject::GObjObjects()->Data[ 55114 ];

	UNowGFXHudScene_execGuildAcceptChallenge_Parms GuildAcceptChallenge_Parms;
	memcpy ( &GuildAcceptChallenge_Parms.sGuild, &sGuild, 0xC );

	pFnGuildAcceptChallenge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildAcceptChallenge, &GuildAcceptChallenge_Parms, NULL );

	pFnGuildAcceptChallenge->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildGuildWarCancel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuild                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildGuildWarCancel ( struct FString sGuild )
{
	static UFunction* pFnGuildGuildWarCancel = NULL;

	if ( ! pFnGuildGuildWarCancel )
		pFnGuildGuildWarCancel = (UFunction*) UObject::GObjObjects()->Data[ 55112 ];

	UNowGFXHudScene_execGuildGuildWarCancel_Parms GuildGuildWarCancel_Parms;
	memcpy ( &GuildGuildWarCancel_Parms.sGuild, &sGuild, 0xC );

	pFnGuildGuildWarCancel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildGuildWarCancel, &GuildGuildWarCancel_Parms, NULL );

	pFnGuildGuildWarCancel->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildChallengeCancel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuild                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildChallengeCancel ( struct FString sGuild )
{
	static UFunction* pFnGuildChallengeCancel = NULL;

	if ( ! pFnGuildChallengeCancel )
		pFnGuildChallengeCancel = (UFunction*) UObject::GObjObjects()->Data[ 55110 ];

	UNowGFXHudScene_execGuildChallengeCancel_Parms GuildChallengeCancel_Parms;
	memcpy ( &GuildChallengeCancel_Parms.sGuild, &sGuild, 0xC );

	pFnGuildChallengeCancel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildChallengeCancel, &GuildChallengeCancel_Parms, NULL );

	pFnGuildChallengeCancel->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildChallengeGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuild                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildChallengeGuild ( struct FString sGuild )
{
	static UFunction* pFnGuildChallengeGuild = NULL;

	if ( ! pFnGuildChallengeGuild )
		pFnGuildChallengeGuild = (UFunction*) UObject::GObjObjects()->Data[ 55108 ];

	UNowGFXHudScene_execGuildChallengeGuild_Parms GuildChallengeGuild_Parms;
	memcpy ( &GuildChallengeGuild_Parms.sGuild, &sGuild, 0xC );

	pFnGuildChallengeGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildChallengeGuild, &GuildChallengeGuild_Parms, NULL );

	pFnGuildChallengeGuild->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildRequestGuildWars
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GuildRequestGuildWars ( )
{
	static UFunction* pFnGuildRequestGuildWars = NULL;

	if ( ! pFnGuildRequestGuildWars )
		pFnGuildRequestGuildWars = (UFunction*) UObject::GObjObjects()->Data[ 55107 ];

	UNowGFXHudScene_execGuildRequestGuildWars_Parms GuildRequestGuildWars_Parms;

	pFnGuildRequestGuildWars->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildRequestGuildWars, &GuildRequestGuildWars_Parms, NULL );

	pFnGuildRequestGuildWars->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildSetNewMemberRank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sMember                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            newRank                        ( CPF_Parm )

void UNowGFXHudScene::GuildSetNewMemberRank ( struct FString sMember, int newRank )
{
	static UFunction* pFnGuildSetNewMemberRank = NULL;

	if ( ! pFnGuildSetNewMemberRank )
		pFnGuildSetNewMemberRank = (UFunction*) UObject::GObjObjects()->Data[ 55104 ];

	UNowGFXHudScene_execGuildSetNewMemberRank_Parms GuildSetNewMemberRank_Parms;
	memcpy ( &GuildSetNewMemberRank_Parms.sMember, &sMember, 0xC );
	GuildSetNewMemberRank_Parms.newRank = newRank;

	pFnGuildSetNewMemberRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildSetNewMemberRank, &GuildSetNewMemberRank_Parms, NULL );

	pFnGuildSetNewMemberRank->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildDemote
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sMember                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildDemote ( struct FString sMember )
{
	static UFunction* pFnGuildDemote = NULL;

	if ( ! pFnGuildDemote )
		pFnGuildDemote = (UFunction*) UObject::GObjObjects()->Data[ 55102 ];

	UNowGFXHudScene_execGuildDemote_Parms GuildDemote_Parms;
	memcpy ( &GuildDemote_Parms.sMember, &sMember, 0xC );

	pFnGuildDemote->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildDemote, &GuildDemote_Parms, NULL );

	pFnGuildDemote->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildPromote
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sMember                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildPromote ( struct FString sMember )
{
	static UFunction* pFnGuildPromote = NULL;

	if ( ! pFnGuildPromote )
		pFnGuildPromote = (UFunction*) UObject::GObjObjects()->Data[ 55100 ];

	UNowGFXHudScene_execGuildPromote_Parms GuildPromote_Parms;
	memcpy ( &GuildPromote_Parms.sMember, &sMember, 0xC );

	pFnGuildPromote->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildPromote, &GuildPromote_Parms, NULL );

	pFnGuildPromote->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildKickMemberCommand
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sMember                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildKickMemberCommand ( struct FString sMember )
{
	static UFunction* pFnGuildKickMemberCommand = NULL;

	if ( ! pFnGuildKickMemberCommand )
		pFnGuildKickMemberCommand = (UFunction*) UObject::GObjObjects()->Data[ 55098 ];

	UNowGFXHudScene_execGuildKickMemberCommand_Parms GuildKickMemberCommand_Parms;
	memcpy ( &GuildKickMemberCommand_Parms.sMember, &sMember, 0xC );

	pFnGuildKickMemberCommand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildKickMemberCommand, &GuildKickMemberCommand_Parms, NULL );

	pFnGuildKickMemberCommand->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildInviteMember
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sMember                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildInviteMember ( struct FString sMember )
{
	static UFunction* pFnGuildInviteMember = NULL;

	if ( ! pFnGuildInviteMember )
		pFnGuildInviteMember = (UFunction*) UObject::GObjObjects()->Data[ 55096 ];

	UNowGFXHudScene_execGuildInviteMember_Parms GuildInviteMember_Parms;
	memcpy ( &GuildInviteMember_Parms.sMember, &sMember, 0xC );

	pFnGuildInviteMember->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildInviteMember, &GuildInviteMember_Parms, NULL );

	pFnGuildInviteMember->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.CheckForDead
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::CheckForDead ( )
{
	static UFunction* pFnCheckForDead = NULL;

	if ( ! pFnCheckForDead )
		pFnCheckForDead = (UFunction*) UObject::GObjObjects()->Data[ 55094 ];

	UNowGFXHudScene_execCheckForDead_Parms CheckForDead_Parms;

	this->ProcessEvent ( pFnCheckForDead, &CheckForDead_Parms, NULL );

	return CheckForDead_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.closeContainer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iDeposit                       ( CPF_Parm )

void UNowGFXHudScene::eventcloseContainer ( int iDeposit )
{
	static UFunction* pFncloseContainer = NULL;

	if ( ! pFncloseContainer )
		pFncloseContainer = (UFunction*) UObject::GObjObjects()->Data[ 55092 ];

	UNowGFXHudScene_eventcloseContainer_Parms closeContainer_Parms;
	closeContainer_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFncloseContainer, &closeContainer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setContainerLabel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iContainer                     ( CPF_Parm )
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventsetContainerLabel ( int iContainer, struct FString sLabel )
{
	static UFunction* pFnsetContainerLabel = NULL;

	if ( ! pFnsetContainerLabel )
		pFnsetContainerLabel = (UFunction*) UObject::GObjObjects()->Data[ 55089 ];

	UNowGFXHudScene_eventsetContainerLabel_Parms setContainerLabel_Parms;
	setContainerLabel_Parms.iContainer = iContainer;
	memcpy ( &setContainerLabel_Parms.sLabel, &sLabel, 0xC );

	this->ProcessEvent ( pFnsetContainerLabel, &setContainerLabel_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showContainer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iDeposit                       ( CPF_Parm )
// int                            iSlotCount                     ( CPF_Parm )
// int                            iSlots                         ( CPF_Parm )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bLocked                        ( CPF_Parm )
// struct FString                 sInvalidGuids                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTopLabel                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventshowContainer ( int iDeposit, int iSlotCount, int iSlots, struct FString sTitle, unsigned long bLocked, struct FString sInvalidGuids, struct FString sTopLabel )
{
	static UFunction* pFnshowContainer = NULL;

	if ( ! pFnshowContainer )
		pFnshowContainer = (UFunction*) UObject::GObjObjects()->Data[ 55081 ];

	UNowGFXHudScene_eventshowContainer_Parms showContainer_Parms;
	showContainer_Parms.iDeposit = iDeposit;
	showContainer_Parms.iSlotCount = iSlotCount;
	showContainer_Parms.iSlots = iSlots;
	memcpy ( &showContainer_Parms.sTitle, &sTitle, 0xC );
	showContainer_Parms.bLocked = bLocked;
	memcpy ( &showContainer_Parms.sInvalidGuids, &sInvalidGuids, 0xC );
	memcpy ( &showContainer_Parms.sTopLabel, &sTopLabel, 0xC );

	this->ProcessEvent ( pFnshowContainer, &showContainer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateItemSlot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iDeposit                       ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventupdateItemSlot ( int iDeposit, int iSlot, struct FString sData )
{
	static UFunction* pFnupdateItemSlot = NULL;

	if ( ! pFnupdateItemSlot )
		pFnupdateItemSlot = (UFunction*) UObject::GObjObjects()->Data[ 55077 ];

	UNowGFXHudScene_eventupdateItemSlot_Parms updateItemSlot_Parms;
	updateItemSlot_Parms.iDeposit = iDeposit;
	updateItemSlot_Parms.iSlot = iSlot;
	memcpy ( &updateItemSlot_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnupdateItemSlot, &updateItemSlot_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventRemoveItem ( struct FString sGuid )
{
	static UFunction* pFnRemoveItem = NULL;

	if ( ! pFnRemoveItem )
		pFnRemoveItem = (UFunction*) UObject::GObjObjects()->Data[ 55075 ];

	UNowGFXHudScene_eventRemoveItem_Parms RemoveItem_Parms;
	memcpy ( &RemoveItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnRemoveItem, &RemoveItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedSlotSplit
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSplit                         ( CPF_Parm )
// int                            iNewDeposit                    ( CPF_Parm )
// int                            iNewSlot                       ( CPF_Parm )

void UNowGFXHudScene::ChangedSlotSplit ( struct FString sGuid, int iSplit, int iNewDeposit, int iNewSlot )
{
	static UFunction* pFnChangedSlotSplit = NULL;

	if ( ! pFnChangedSlotSplit )
		pFnChangedSlotSplit = (UFunction*) UObject::GObjObjects()->Data[ 55065 ];

	UNowGFXHudScene_execChangedSlotSplit_Parms ChangedSlotSplit_Parms;
	memcpy ( &ChangedSlotSplit_Parms.sGuid, &sGuid, 0xC );
	ChangedSlotSplit_Parms.iSplit = iSplit;
	ChangedSlotSplit_Parms.iNewDeposit = iNewDeposit;
	ChangedSlotSplit_Parms.iNewSlot = iNewSlot;

	this->ProcessEvent ( pFnChangedSlotSplit, &ChangedSlotSplit_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetBagDepositFromGuid
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetBagDepositFromGuid ( struct FString sGuid )
{
	static UFunction* pFnGetBagDepositFromGuid = NULL;

	if ( ! pFnGetBagDepositFromGuid )
		pFnGetBagDepositFromGuid = (UFunction*) UObject::GObjObjects()->Data[ 55061 ];

	UNowGFXHudScene_eventGetBagDepositFromGuid_Parms GetBagDepositFromGuid_Parms;
	memcpy ( &GetBagDepositFromGuid_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGetBagDepositFromGuid, &GetBagDepositFromGuid_Parms, NULL );

	return GetBagDepositFromGuid_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetBagGuidFromDeposit
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iDeposit                       ( CPF_Parm )

struct FString UNowGFXHudScene::eventGetBagGuidFromDeposit ( int iDeposit )
{
	static UFunction* pFnGetBagGuidFromDeposit = NULL;

	if ( ! pFnGetBagGuidFromDeposit )
		pFnGetBagGuidFromDeposit = (UFunction*) UObject::GObjObjects()->Data[ 55057 ];

	UNowGFXHudScene_eventGetBagGuidFromDeposit_Parms GetBagGuidFromDeposit_Parms;
	GetBagGuidFromDeposit_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFnGetBagGuidFromDeposit, &GetBagGuidFromDeposit_Parms, NULL );

	return GetBagGuidFromDeposit_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.ChangedSlot
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNewDeposit                    ( CPF_Parm )
// int                            iNewSlot                       ( CPF_Parm )

void UNowGFXHudScene::ChangedSlot ( struct FString sGuid, int iNewDeposit, int iNewSlot )
{
	static UFunction* pFnChangedSlot = NULL;

	if ( ! pFnChangedSlot )
		pFnChangedSlot = (UFunction*) UObject::GObjObjects()->Data[ 55047 ];

	UNowGFXHudScene_execChangedSlot_Parms ChangedSlot_Parms;
	memcpy ( &ChangedSlot_Parms.sGuid, &sGuid, 0xC );
	ChangedSlot_Parms.iNewDeposit = iNewDeposit;
	ChangedSlot_Parms.iNewSlot = iNewSlot;

	this->ProcessEvent ( pFnChangedSlot, &ChangedSlot_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SwappedSlots
// [0x00020002] 
// Parameters infos:
// struct FString                 sTargetGuid                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPickedGuid                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SwappedSlots ( struct FString sTargetGuid, struct FString sPickedGuid )
{
	static UFunction* pFnSwappedSlots = NULL;

	if ( ! pFnSwappedSlots )
		pFnSwappedSlots = (UFunction*) UObject::GObjObjects()->Data[ 55044 ];

	UNowGFXHudScene_execSwappedSlots_Parms SwappedSlots_Parms;
	memcpy ( &SwappedSlots_Parms.sTargetGuid, &sTargetGuid, 0xC );
	memcpy ( &SwappedSlots_Parms.sPickedGuid, &sPickedGuid, 0xC );

	this->ProcessEvent ( pFnSwappedSlots, &SwappedSlots_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UseItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UseItem ( struct FString sGuid )
{
	static UFunction* pFnUseItem = NULL;

	if ( ! pFnUseItem )
		pFnUseItem = (UFunction*) UObject::GObjObjects()->Data[ 55040 ];

	UNowGFXHudScene_execUseItem_Parms UseItem_Parms;
	memcpy ( &UseItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnUseItem, &UseItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.EquippedItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sEquipSlot                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::EquippedItem ( struct FString sGuid, struct FString sEquipSlot )
{
	static UFunction* pFnEquippedItem = NULL;

	if ( ! pFnEquippedItem )
		pFnEquippedItem = (UFunction*) UObject::GObjObjects()->Data[ 55037 ];

	UNowGFXHudScene_execEquippedItem_Parms EquippedItem_Parms;
	memcpy ( &EquippedItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &EquippedItem_Parms.sEquipSlot, &sEquipSlot, 0xC );

	this->ProcessEvent ( pFnEquippedItem, &EquippedItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddPendingSlotUpdate
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// int                            iDeposit                       ( CPF_Parm )

void UNowGFXHudScene::eventAddPendingSlotUpdate ( int iSlot, int iDeposit )
{
	static UFunction* pFnAddPendingSlotUpdate = NULL;

	if ( ! pFnAddPendingSlotUpdate )
		pFnAddPendingSlotUpdate = (UFunction*) UObject::GObjObjects()->Data[ 55033 ];

	UNowGFXHudScene_eventAddPendingSlotUpdate_Parms AddPendingSlotUpdate_Parms;
	AddPendingSlotUpdate_Parms.iSlot = iSlot;
	AddPendingSlotUpdate_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFnAddPendingSlotUpdate, &AddPendingSlotUpdate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddPendingStaticTradUpdate
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            iSessionType                   ( CPF_Parm )

void UNowGFXHudScene::eventAddPendingStaticTradUpdate ( int iSessionType )
{
	static UFunction* pFnAddPendingStaticTradUpdate = NULL;

	if ( ! pFnAddPendingStaticTradUpdate )
		pFnAddPendingStaticTradUpdate = (UFunction*) UObject::GObjObjects()->Data[ 55030 ];

	UNowGFXHudScene_eventAddPendingStaticTradUpdate_Parms AddPendingStaticTradUpdate_Parms;
	AddPendingStaticTradUpdate_Parms.iSessionType = iSessionType;

	this->ProcessEvent ( pFnAddPendingStaticTradUpdate, &AddPendingStaticTradUpdate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TickSlotUpdate
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UNowGFXHudScene::TickSlotUpdate ( float fDeltaTime )
{
	static UFunction* pFnTickSlotUpdate = NULL;

	if ( ! pFnTickSlotUpdate )
		pFnTickSlotUpdate = (UFunction*) UObject::GObjObjects()->Data[ 55027 ];

	UNowGFXHudScene_execTickSlotUpdate_Parms TickSlotUpdate_Parms;
	TickSlotUpdate_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickSlotUpdate, &TickSlotUpdate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CanChangeSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::CanChangeSlot ( struct FString sGuid )
{
	static UFunction* pFnCanChangeSlot = NULL;

	if ( ! pFnCanChangeSlot )
		pFnCanChangeSlot = (UFunction*) UObject::GObjObjects()->Data[ 55024 ];

	UNowGFXHudScene_execCanChangeSlot_Parms CanChangeSlot_Parms;
	memcpy ( &CanChangeSlot_Parms.sGuid, &sGuid, 0xC );

	pFnCanChangeSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanChangeSlot, &CanChangeSlot_Parms, NULL );

	pFnCanChangeSlot->FunctionFlags |= 0x400;

	return CanChangeSlot_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.UpdateSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// int                            iDeposit                       ( CPF_Parm )

void UNowGFXHudScene::UpdateSlot ( int iSlot, int iDeposit )
{
	static UFunction* pFnUpdateSlot = NULL;

	if ( ! pFnUpdateSlot )
		pFnUpdateSlot = (UFunction*) UObject::GObjObjects()->Data[ 55021 ];

	UNowGFXHudScene_execUpdateSlot_Parms UpdateSlot_Parms;
	UpdateSlot_Parms.iSlot = iSlot;
	UpdateSlot_Parms.iDeposit = iDeposit;

	pFnUpdateSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSlot, &UpdateSlot_Parms, NULL );

	pFnUpdateSlot->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitInventoryItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitInventoryItems ( )
{
	static UFunction* pFnInitInventoryItems = NULL;

	if ( ! pFnInitInventoryItems )
		pFnInitInventoryItems = (UFunction*) UObject::GObjObjects()->Data[ 55020 ];

	UNowGFXHudScene_execInitInventoryItems_Parms InitInventoryItems_Parms;

	this->ProcessEvent ( pFnInitInventoryItems, &InitInventoryItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReInitInventory
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventReInitInventory ( )
{
	static UFunction* pFnReInitInventory = NULL;

	if ( ! pFnReInitInventory )
		pFnReInitInventory = (UFunction*) UObject::GObjObjects()->Data[ 55019 ];

	UNowGFXHudScene_eventReInitInventory_Parms ReInitInventory_Parms;

	this->ProcessEvent ( pFnReInitInventory, &ReInitInventory_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.OpenInventory
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::OpenInventory ( )
{
	static UFunction* pFnOpenInventory = NULL;

	if ( ! pFnOpenInventory )
		pFnOpenInventory = (UFunction*) UObject::GObjObjects()->Data[ 55018 ];

	UNowGFXHudScene_execOpenInventory_Parms OpenInventory_Parms;

	this->ProcessEvent ( pFnOpenInventory, &OpenInventory_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillInventory
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::FillInventory ( unsigned long bForce )
{
	static UFunction* pFnFillInventory = NULL;

	if ( ! pFnFillInventory )
		pFnFillInventory = (UFunction*) UObject::GObjObjects()->Data[ 55016 ];

	UNowGFXHudScene_execFillInventory_Parms FillInventory_Parms;
	FillInventory_Parms.bForce = bForce;

	pFnFillInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillInventory, &FillInventory_Parms, NULL );

	pFnFillInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitBanker
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitBanker ( )
{
	static UFunction* pFnInitBanker = NULL;

	if ( ! pFnInitBanker )
		pFnInitBanker = (UFunction*) UObject::GObjObjects()->Data[ 55015 ];

	UNowGFXHudScene_execInitBanker_Parms InitBanker_Parms;

	this->ProcessEvent ( pFnInitBanker, &InitBanker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReFillBankInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::ReFillBankInventory ( )
{
	static UFunction* pFnReFillBankInventory = NULL;

	if ( ! pFnReFillBankInventory )
		pFnReFillBankInventory = (UFunction*) UObject::GObjObjects()->Data[ 55014 ];

	UNowGFXHudScene_execReFillBankInventory_Parms ReFillBankInventory_Parms;

	pFnReFillBankInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReFillBankInventory, &ReFillBankInventory_Parms, NULL );

	pFnReFillBankInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.FillBankInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillBankInventory ( )
{
	static UFunction* pFnFillBankInventory = NULL;

	if ( ! pFnFillBankInventory )
		pFnFillBankInventory = (UFunction*) UObject::GObjObjects()->Data[ 55013 ];

	UNowGFXHudScene_execFillBankInventory_Parms FillBankInventory_Parms;

	pFnFillBankInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillBankInventory, &FillBankInventory_Parms, NULL );

	pFnFillBankInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitLoot
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitLoot ( )
{
	static UFunction* pFnInitLoot = NULL;

	if ( ! pFnInitLoot )
		pFnInitLoot = (UFunction*) UObject::GObjObjects()->Data[ 55011 ];

	UNowGFXHudScene_eventInitLoot_Parms InitLoot_Parms;

	this->ProcessEvent ( pFnInitLoot, &InitLoot_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TryParseTradeCommand
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sCmd                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

bool UNowGFXHudScene::TryParseTradeCommand ( struct FString sCmd, int iBag, int iSlot )
{
	static UFunction* pFnTryParseTradeCommand = NULL;

	if ( ! pFnTryParseTradeCommand )
		pFnTryParseTradeCommand = (UFunction*) UObject::GObjObjects()->Data[ 55006 ];

	UNowGFXHudScene_execTryParseTradeCommand_Parms TryParseTradeCommand_Parms;
	memcpy ( &TryParseTradeCommand_Parms.sCmd, &sCmd, 0xC );
	TryParseTradeCommand_Parms.iBag = iBag;
	TryParseTradeCommand_Parms.iSlot = iSlot;

	pFnTryParseTradeCommand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTryParseTradeCommand, &TryParseTradeCommand_Parms, NULL );

	pFnTryParseTradeCommand->FunctionFlags |= 0x400;

	return TryParseTradeCommand_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.StaticTradeFrom
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// int                            iToSlot                        ( CPF_Parm )

void UNowGFXHudScene::StaticTradeFrom ( int iBag, int iSlot, int iToSlot )
{
	static UFunction* pFnStaticTradeFrom = NULL;

	if ( ! pFnStaticTradeFrom )
		pFnStaticTradeFrom = (UFunction*) UObject::GObjObjects()->Data[ 55002 ];

	UNowGFXHudScene_execStaticTradeFrom_Parms StaticTradeFrom_Parms;
	StaticTradeFrom_Parms.iBag = iBag;
	StaticTradeFrom_Parms.iSlot = iSlot;
	StaticTradeFrom_Parms.iToSlot = iToSlot;

	pFnStaticTradeFrom->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStaticTradeFrom, &StaticTradeFrom_Parms, NULL );

	pFnStaticTradeFrom->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.StaticTradeChangeSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// int                            iToSlot                        ( CPF_Parm )

void UNowGFXHudScene::StaticTradeChangeSlot ( int iBag, int iSlot, int iToSlot )
{
	static UFunction* pFnStaticTradeChangeSlot = NULL;

	if ( ! pFnStaticTradeChangeSlot )
		pFnStaticTradeChangeSlot = (UFunction*) UObject::GObjObjects()->Data[ 54998 ];

	UNowGFXHudScene_execStaticTradeChangeSlot_Parms StaticTradeChangeSlot_Parms;
	StaticTradeChangeSlot_Parms.iBag = iBag;
	StaticTradeChangeSlot_Parms.iSlot = iSlot;
	StaticTradeChangeSlot_Parms.iToSlot = iToSlot;

	pFnStaticTradeChangeSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStaticTradeChangeSlot, &StaticTradeChangeSlot_Parms, NULL );

	pFnStaticTradeChangeSlot->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.StaticTradeTo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void UNowGFXHudScene::StaticTradeTo ( struct FString sItemGuid, int iBag, int iSlot )
{
	static UFunction* pFnStaticTradeTo = NULL;

	if ( ! pFnStaticTradeTo )
		pFnStaticTradeTo = (UFunction*) UObject::GObjObjects()->Data[ 54994 ];

	UNowGFXHudScene_execStaticTradeTo_Parms StaticTradeTo_Parms;
	memcpy ( &StaticTradeTo_Parms.sItemGuid, &sItemGuid, 0xC );
	StaticTradeTo_Parms.iBag = iBag;
	StaticTradeTo_Parms.iSlot = iSlot;

	pFnStaticTradeTo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStaticTradeTo, &StaticTradeTo_Parms, NULL );

	pFnStaticTradeTo->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.StaticTradeCancel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::StaticTradeCancel ( )
{
	static UFunction* pFnStaticTradeCancel = NULL;

	if ( ! pFnStaticTradeCancel )
		pFnStaticTradeCancel = (UFunction*) UObject::GObjObjects()->Data[ 54993 ];

	UNowGFXHudScene_execStaticTradeCancel_Parms StaticTradeCancel_Parms;

	pFnStaticTradeCancel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStaticTradeCancel, &StaticTradeCancel_Parms, NULL );

	pFnStaticTradeCancel->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.ClearLootInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::ClearLootInventory ( )
{
	static UFunction* pFnClearLootInventory = NULL;

	if ( ! pFnClearLootInventory )
		pFnClearLootInventory = (UFunction*) UObject::GObjObjects()->Data[ 54992 ];

	UNowGFXHudScene_execClearLootInventory_Parms ClearLootInventory_Parms;

	pFnClearLootInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearLootInventory, &ClearLootInventory_Parms, NULL );

	pFnClearLootInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitHouseTrade
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitHouseTrade ( )
{
	static UFunction* pFnInitHouseTrade = NULL;

	if ( ! pFnInitHouseTrade )
		pFnInitHouseTrade = (UFunction*) UObject::GObjObjects()->Data[ 54991 ];

	UNowGFXHudScene_eventInitHouseTrade_Parms InitHouseTrade_Parms;

	this->ProcessEvent ( pFnInitHouseTrade, &InitHouseTrade_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ClearHouseInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::ClearHouseInventory ( )
{
	static UFunction* pFnClearHouseInventory = NULL;

	if ( ! pFnClearHouseInventory )
		pFnClearHouseInventory = (UFunction*) UObject::GObjObjects()->Data[ 54990 ];

	UNowGFXHudScene_execClearHouseInventory_Parms ClearHouseInventory_Parms;

	pFnClearHouseInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearHouseInventory, &ClearHouseInventory_Parms, NULL );

	pFnClearHouseInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitGMSpawnNPC
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGMSpawnNPC ( )
{
	static UFunction* pFnInitGMSpawnNPC = NULL;

	if ( ! pFnInitGMSpawnNPC )
		pFnInitGMSpawnNPC = (UFunction*) UObject::GObjObjects()->Data[ 54988 ];

	UNowGFXHudScene_execInitGMSpawnNPC_Parms InitGMSpawnNPC_Parms;

	this->ProcessEvent ( pFnInitGMSpawnNPC, &InitGMSpawnNPC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillGMSpawnListNpc
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillGMSpawnListNpc ( )
{
	static UFunction* pFnFillGMSpawnListNpc = NULL;

	if ( ! pFnFillGMSpawnListNpc )
		pFnFillGMSpawnListNpc = (UFunction*) UObject::GObjObjects()->Data[ 54987 ];

	UNowGFXHudScene_execFillGMSpawnListNpc_Parms FillGMSpawnListNpc_Parms;

	pFnFillGMSpawnListNpc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillGMSpawnListNpc, &FillGMSpawnListNpc_Parms, NULL );

	pFnFillGMSpawnListNpc->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GMAddAttack
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GMAddAttack ( struct FString sGuid )
{
	static UFunction* pFnGMAddAttack = NULL;

	if ( ! pFnGMAddAttack )
		pFnGMAddAttack = (UFunction*) UObject::GObjObjects()->Data[ 54985 ];

	UNowGFXHudScene_execGMAddAttack_Parms GMAddAttack_Parms;
	memcpy ( &GMAddAttack_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGMAddAttack, &GMAddAttack_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGMSpawnAttack
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGMSpawnAttack ( )
{
	static UFunction* pFnInitGMSpawnAttack = NULL;

	if ( ! pFnInitGMSpawnAttack )
		pFnInitGMSpawnAttack = (UFunction*) UObject::GObjObjects()->Data[ 54983 ];

	UNowGFXHudScene_execInitGMSpawnAttack_Parms InitGMSpawnAttack_Parms;

	this->ProcessEvent ( pFnInitGMSpawnAttack, &InitGMSpawnAttack_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillGMSpawnListAttacks
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillGMSpawnListAttacks ( )
{
	static UFunction* pFnFillGMSpawnListAttacks = NULL;

	if ( ! pFnFillGMSpawnListAttacks )
		pFnFillGMSpawnListAttacks = (UFunction*) UObject::GObjObjects()->Data[ 54982 ];

	UNowGFXHudScene_execFillGMSpawnListAttacks_Parms FillGMSpawnListAttacks_Parms;

	pFnFillGMSpawnListAttacks->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillGMSpawnListAttacks, &FillGMSpawnListAttacks_Parms, NULL );

	pFnFillGMSpawnListAttacks->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddToGMSpawnList
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddToGMSpawnList ( struct FString sName, struct FString sGuid )
{
	static UFunction* pFnAddToGMSpawnList = NULL;

	if ( ! pFnAddToGMSpawnList )
		pFnAddToGMSpawnList = (UFunction*) UObject::GObjObjects()->Data[ 54978 ];

	UNowGFXHudScene_eventAddToGMSpawnList_Parms AddToGMSpawnList_Parms;
	memcpy ( &AddToGMSpawnList_Parms.sName, &sName, 0xC );
	memcpy ( &AddToGMSpawnList_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnAddToGMSpawnList, &AddToGMSpawnList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GMSpawnAi
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GMSpawnAi ( struct FString sGuid )
{
	static UFunction* pFnGMSpawnAi = NULL;

	if ( ! pFnGMSpawnAi )
		pFnGMSpawnAi = (UFunction*) UObject::GObjObjects()->Data[ 54976 ];

	UNowGFXHudScene_execGMSpawnAi_Parms GMSpawnAi_Parms;
	memcpy ( &GMSpawnAi_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGMSpawnAi, &GMSpawnAi_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGMSpawnAi
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGMSpawnAi ( )
{
	static UFunction* pFnInitGMSpawnAi = NULL;

	if ( ! pFnInitGMSpawnAi )
		pFnInitGMSpawnAi = (UFunction*) UObject::GObjObjects()->Data[ 54974 ];

	UNowGFXHudScene_execInitGMSpawnAi_Parms InitGMSpawnAi_Parms;

	this->ProcessEvent ( pFnInitGMSpawnAi, &InitGMSpawnAi_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillGMSpawnListAi
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillGMSpawnListAi ( )
{
	static UFunction* pFnFillGMSpawnListAi = NULL;

	if ( ! pFnFillGMSpawnListAi )
		pFnFillGMSpawnListAi = (UFunction*) UObject::GObjObjects()->Data[ 54973 ];

	UNowGFXHudScene_execFillGMSpawnListAi_Parms FillGMSpawnListAi_Parms;

	pFnFillGMSpawnListAi->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillGMSpawnListAi, &FillGMSpawnListAi_Parms, NULL );

	pFnFillGMSpawnListAi->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearList
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearList ( )
{
	static UFunction* pFnclearList = NULL;

	if ( ! pFnclearList )
		pFnclearList = (UFunction*) UObject::GObjObjects()->Data[ 54972 ];

	UNowGFXHudScene_execclearList_Parms clearList_Parms;

	this->ProcessEvent ( pFnclearList, &clearList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeListItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeListItem ( struct FString sGuid )
{
	static UFunction* pFnremoveListItem = NULL;

	if ( ! pFnremoveListItem )
		pFnremoveListItem = (UFunction*) UObject::GObjObjects()->Data[ 54970 ];

	UNowGFXHudScene_execremoveListItem_Parms removeListItem_Parms;
	memcpy ( &removeListItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnremoveListItem, &removeListItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addListItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddListItem ( struct FString sGuid, struct FString Title )
{
	static UFunction* pFnaddListItem = NULL;

	if ( ! pFnaddListItem )
		pFnaddListItem = (UFunction*) UObject::GObjObjects()->Data[ 54967 ];

	UNowGFXHudScene_eventaddListItem_Parms addListItem_Parms;
	memcpy ( &addListItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &addListItem_Parms.Title, &Title, 0xC );

	this->ProcessEvent ( pFnaddListItem, &addListItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleList
// [0x00020002] 
// Parameters infos:
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 buttonLabel                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 callbackFunction               ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXHudScene::toggleList ( struct FString DisplayName, struct FString buttonLabel, struct FString callbackFunction, unsigned long bVisible )
{
	static UFunction* pFntoggleList = NULL;

	if ( ! pFntoggleList )
		pFntoggleList = (UFunction*) UObject::GObjObjects()->Data[ 54962 ];

	UNowGFXHudScene_exectoggleList_Parms toggleList_Parms;
	memcpy ( &toggleList_Parms.DisplayName, &DisplayName, 0xC );
	memcpy ( &toggleList_Parms.buttonLabel, &buttonLabel, 0xC );
	memcpy ( &toggleList_Parms.callbackFunction, &callbackFunction, 0xC );
	toggleList_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFntoggleList, &toggleList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeSingleOpenUI
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeSingleOpenUI ( )
{
	static UFunction* pFncloseSingleOpenUI = NULL;

	if ( ! pFncloseSingleOpenUI )
		pFncloseSingleOpenUI = (UFunction*) UObject::GObjObjects()->Data[ 54961 ];

	UNowGFXHudScene_execcloseSingleOpenUI_Parms closeSingleOpenUI_Parms;

	this->ProcessEvent ( pFncloseSingleOpenUI, &closeSingleOpenUI_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ClosedContainer
// [0x00020002] 
// Parameters infos:
// int                            iDeposit                       ( CPF_Parm )

void UNowGFXHudScene::ClosedContainer ( int iDeposit )
{
	static UFunction* pFnClosedContainer = NULL;

	if ( ! pFnClosedContainer )
		pFnClosedContainer = (UFunction*) UObject::GObjObjects()->Data[ 54958 ];

	UNowGFXHudScene_execClosedContainer_Parms ClosedContainer_Parms;
	ClosedContainer_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFnClosedContainer, &ClosedContainer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ClosedWindow
// [0x00020002] 
// Parameters infos:
// struct FString                 sWindowID                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ClosedWindow ( struct FString sWindowID )
{
	static UFunction* pFnClosedWindow = NULL;

	if ( ! pFnClosedWindow )
		pFnClosedWindow = (UFunction*) UObject::GObjObjects()->Data[ 54955 ];

	UNowGFXHudScene_execClosedWindow_Parms ClosedWindow_Parms;
	memcpy ( &ClosedWindow_Parms.sWindowID, &sWindowID, 0xC );

	this->ProcessEvent ( pFnClosedWindow, &ClosedWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.OpenedWindow
// [0x00820002] 
// Parameters infos:
// struct FString                 sWindowID                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::OpenedWindow ( struct FString sWindowID )
{
	static UFunction* pFnOpenedWindow = NULL;

	if ( ! pFnOpenedWindow )
		pFnOpenedWindow = (UFunction*) UObject::GObjObjects()->Data[ 54952 ];

	UNowGFXHudScene_execOpenedWindow_Parms OpenedWindow_Parms;
	memcpy ( &OpenedWindow_Parms.sWindowID, &sWindowID, 0xC );

	this->ProcessEvent ( pFnOpenedWindow, &OpenedWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddWindowToTracker
// [0x00824002] 
// Parameters infos:
// struct FString                 sWindowID                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 vLoc                           ( CPF_OptionalParm | CPF_Parm )
// int                            iDeposit                       ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::AddWindowToTracker ( struct FString sWindowID, struct FVector vLoc, int iDeposit )
{
	static UFunction* pFnAddWindowToTracker = NULL;

	if ( ! pFnAddWindowToTracker )
		pFnAddWindowToTracker = (UFunction*) UObject::GObjObjects()->Data[ 54947 ];

	UNowGFXHudScene_execAddWindowToTracker_Parms AddWindowToTracker_Parms;
	memcpy ( &AddWindowToTracker_Parms.sWindowID, &sWindowID, 0xC );
	memcpy ( &AddWindowToTracker_Parms.vLoc, &vLoc, 0xC );
	AddWindowToTracker_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFnAddWindowToTracker, &AddWindowToTracker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TickOpenWindows
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UNowGFXHudScene::TickOpenWindows ( float fDeltaTime )
{
	static UFunction* pFnTickOpenWindows = NULL;

	if ( ! pFnTickOpenWindows )
		pFnTickOpenWindows = (UFunction*) UObject::GObjObjects()->Data[ 54944 ];

	UNowGFXHudScene_execTickOpenWindows_Parms TickOpenWindows_Parms;
	TickOpenWindows_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickOpenWindows, &TickOpenWindows_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.IsDepositOpen
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iDeposit                       ( CPF_Parm )

bool UNowGFXHudScene::eventIsDepositOpen ( int iDeposit )
{
	static UFunction* pFnIsDepositOpen = NULL;

	if ( ! pFnIsDepositOpen )
		pFnIsDepositOpen = (UFunction*) UObject::GObjObjects()->Data[ 54940 ];

	UNowGFXHudScene_eventIsDepositOpen_Parms IsDepositOpen_Parms;
	IsDepositOpen_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFnIsDepositOpen, &IsDepositOpen_Parms, NULL );

	return IsDepositOpen_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.IsWindowOpen
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sWindowID                      ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::IsWindowOpen ( struct FString sWindowID )
{
	static UFunction* pFnIsWindowOpen = NULL;

	if ( ! pFnIsWindowOpen )
		pFnIsWindowOpen = (UFunction*) UObject::GObjObjects()->Data[ 54936 ];

	UNowGFXHudScene_execIsWindowOpen_Parms IsWindowOpen_Parms;
	memcpy ( &IsWindowOpen_Parms.sWindowID, &sWindowID, 0xC );

	this->ProcessEvent ( pFnIsWindowOpen, &IsWindowOpen_Parms, NULL );

	return IsWindowOpen_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.TurnOffResCriminals
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TurnOffResCriminals ( )
{
	static UFunction* pFnTurnOffResCriminals = NULL;

	if ( ! pFnTurnOffResCriminals )
		pFnTurnOffResCriminals = (UFunction*) UObject::GObjObjects()->Data[ 54935 ];

	UNowGFXHudScene_execTurnOffResCriminals_Parms TurnOffResCriminals_Parms;

	this->ProcessEvent ( pFnTurnOffResCriminals, &TurnOffResCriminals_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TurnOnResCriminals
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TurnOnResCriminals ( )
{
	static UFunction* pFnTurnOnResCriminals = NULL;

	if ( ! pFnTurnOnResCriminals )
		pFnTurnOnResCriminals = (UFunction*) UObject::GObjObjects()->Data[ 54934 ];

	UNowGFXHudScene_execTurnOnResCriminals_Parms TurnOnResCriminals_Parms;

	this->ProcessEvent ( pFnTurnOnResCriminals, &TurnOnResCriminals_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TurnOnGuards
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TurnOnGuards ( )
{
	static UFunction* pFnTurnOnGuards = NULL;

	if ( ! pFnTurnOnGuards )
		pFnTurnOnGuards = (UFunction*) UObject::GObjObjects()->Data[ 54933 ];

	UNowGFXHudScene_execTurnOnGuards_Parms TurnOnGuards_Parms;

	this->ProcessEvent ( pFnTurnOnGuards, &TurnOnGuards_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TurnOffGuards
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TurnOffGuards ( )
{
	static UFunction* pFnTurnOffGuards = NULL;

	if ( ! pFnTurnOffGuards )
		pFnTurnOffGuards = (UFunction*) UObject::GObjObjects()->Data[ 54932 ];

	UNowGFXHudScene_execTurnOffGuards_Parms TurnOffGuards_Parms;

	this->ProcessEvent ( pFnTurnOffGuards, &TurnOffGuards_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            RuleIndex                      ( CPF_Parm )
// int                            NewValue                       ( CPF_Parm )

void UNowGFXHudScene::SendUpdate ( int RuleIndex, int NewValue )
{
	static UFunction* pFnSendUpdate = NULL;

	if ( ! pFnSendUpdate )
		pFnSendUpdate = (UFunction*) UObject::GObjObjects()->Data[ 54929 ];

	UNowGFXHudScene_execSendUpdate_Parms SendUpdate_Parms;
	SendUpdate_Parms.RuleIndex = RuleIndex;
	SendUpdate_Parms.NewValue = NewValue;

	pFnSendUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendUpdate, &SendUpdate_Parms, NULL );

	pFnSendUpdate->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearTrade
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventclearTrade ( )
{
	static UFunction* pFnclearTrade = NULL;

	if ( ! pFnclearTrade )
		pFnclearTrade = (UFunction*) UObject::GObjObjects()->Data[ 54928 ];

	UNowGFXHudScene_eventclearTrade_Parms clearTrade_Parms;

	this->ProcessEvent ( pFnclearTrade, &clearTrade_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeTradeWindow
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventcloseTradeWindow ( )
{
	static UFunction* pFncloseTradeWindow = NULL;

	if ( ! pFncloseTradeWindow )
		pFncloseTradeWindow = (UFunction*) UObject::GObjObjects()->Data[ 54927 ];

	UNowGFXHudScene_eventcloseTradeWindow_Parms closeTradeWindow_Parms;

	this->ProcessEvent ( pFncloseTradeWindow, &closeTradeWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setTradeAccepted
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bAccepted                      ( CPF_Parm )
// unsigned long                  bRemote                        ( CPF_Parm )

void UNowGFXHudScene::eventsetTradeAccepted ( unsigned long bAccepted, unsigned long bRemote )
{
	static UFunction* pFnsetTradeAccepted = NULL;

	if ( ! pFnsetTradeAccepted )
		pFnsetTradeAccepted = (UFunction*) UObject::GObjObjects()->Data[ 54924 ];

	UNowGFXHudScene_eventsetTradeAccepted_Parms setTradeAccepted_Parms;
	setTradeAccepted_Parms.bAccepted = bAccepted;
	setTradeAccepted_Parms.bRemote = bRemote;

	this->ProcessEvent ( pFnsetTradeAccepted, &setTradeAccepted_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeTradeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  isRemote                       ( CPF_Parm )

void UNowGFXHudScene::eventremoveTradeItem ( struct FString sGuid, unsigned long isRemote )
{
	static UFunction* pFnremoveTradeItem = NULL;

	if ( ! pFnremoveTradeItem )
		pFnremoveTradeItem = (UFunction*) UObject::GObjObjects()->Data[ 54921 ];

	UNowGFXHudScene_eventremoveTradeItem_Parms removeTradeItem_Parms;
	memcpy ( &removeTradeItem_Parms.sGuid, &sGuid, 0xC );
	removeTradeItem_Parms.isRemote = isRemote;

	this->ProcessEvent ( pFnremoveTradeItem, &removeTradeItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTradeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  isRemote                       ( CPF_Parm )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddTradeItem ( unsigned long isRemote, struct FString sData )
{
	static UFunction* pFnaddTradeItem = NULL;

	if ( ! pFnaddTradeItem )
		pFnaddTradeItem = (UFunction*) UObject::GObjObjects()->Data[ 54918 ];

	UNowGFXHudScene_eventaddTradeItem_Parms addTradeItem_Parms;
	addTradeItem_Parms.isRemote = isRemote;
	memcpy ( &addTradeItem_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnaddTradeItem, &addTradeItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showTradeWindow
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 traderName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventshowTradeWindow ( struct FString traderName, struct FString sData )
{
	static UFunction* pFnshowTradeWindow = NULL;

	if ( ! pFnshowTradeWindow )
		pFnshowTradeWindow = (UFunction*) UObject::GObjObjects()->Data[ 54915 ];

	UNowGFXHudScene_eventshowTradeWindow_Parms showTradeWindow_Parms;
	memcpy ( &showTradeWindow_Parms.traderName, &traderName, 0xC );
	memcpy ( &showTradeWindow_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnshowTradeWindow, &showTradeWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CancelTrade
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::CancelTrade ( )
{
	static UFunction* pFnCancelTrade = NULL;

	if ( ! pFnCancelTrade )
		pFnCancelTrade = (UFunction*) UObject::GObjObjects()->Data[ 54914 ];

	UNowGFXHudScene_execCancelTrade_Parms CancelTrade_Parms;

	this->ProcessEvent ( pFnCancelTrade, &CancelTrade_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TradeAccepted
// [0x00020002] 
// Parameters infos:
// unsigned long                  bAccepted                      ( CPF_Parm )

void UNowGFXHudScene::TradeAccepted ( unsigned long bAccepted )
{
	static UFunction* pFnTradeAccepted = NULL;

	if ( ! pFnTradeAccepted )
		pFnTradeAccepted = (UFunction*) UObject::GObjObjects()->Data[ 54912 ];

	UNowGFXHudScene_execTradeAccepted_Parms TradeAccepted_Parms;
	TradeAccepted_Parms.bAccepted = bAccepted;

	this->ProcessEvent ( pFnTradeAccepted, &TradeAccepted_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveFromTrade
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveFromTrade ( struct FString sGuid )
{
	static UFunction* pFnRemoveFromTrade = NULL;

	if ( ! pFnRemoveFromTrade )
		pFnRemoveFromTrade = (UFunction*) UObject::GObjObjects()->Data[ 54910 ];

	UNowGFXHudScene_execRemoveFromTrade_Parms RemoveFromTrade_Parms;
	memcpy ( &RemoveFromTrade_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnRemoveFromTrade, &RemoveFromTrade_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddToTrade
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddToTrade ( struct FString sGuid )
{
	static UFunction* pFnAddToTrade = NULL;

	if ( ! pFnAddToTrade )
		pFnAddToTrade = (UFunction*) UObject::GObjObjects()->Data[ 54908 ];

	UNowGFXHudScene_execAddToTrade_Parms AddToTrade_Parms;
	memcpy ( &AddToTrade_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnAddToTrade, &AddToTrade_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateTradeSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateTradeSession ( )
{
	static UFunction* pFnUpdateTradeSession = NULL;

	if ( ! pFnUpdateTradeSession )
		pFnUpdateTradeSession = (UFunction*) UObject::GObjObjects()->Data[ 54907 ];

	UNowGFXHudScene_execUpdateTradeSession_Parms UpdateTradeSession_Parms;

	pFnUpdateTradeSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateTradeSession, &UpdateTradeSession_Parms, NULL );

	pFnUpdateTradeSession->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.RemoveFromTradeSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveFromTradeSession ( struct FString sItemGuid )
{
	static UFunction* pFnRemoveFromTradeSession = NULL;

	if ( ! pFnRemoveFromTradeSession )
		pFnRemoveFromTradeSession = (UFunction*) UObject::GObjObjects()->Data[ 54905 ];

	UNowGFXHudScene_execRemoveFromTradeSession_Parms RemoveFromTradeSession_Parms;
	memcpy ( &RemoveFromTradeSession_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnRemoveFromTradeSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFromTradeSession, &RemoveFromTradeSession_Parms, NULL );

	pFnRemoveFromTradeSession->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddToTradeSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddToTradeSession ( struct FString sItemGuid )
{
	static UFunction* pFnAddToTradeSession = NULL;

	if ( ! pFnAddToTradeSession )
		pFnAddToTradeSession = (UFunction*) UObject::GObjObjects()->Data[ 54903 ];

	UNowGFXHudScene_execAddToTradeSession_Parms AddToTradeSession_Parms;
	memcpy ( &AddToTradeSession_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnAddToTradeSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddToTradeSession, &AddToTradeSession_Parms, NULL );

	pFnAddToTradeSession->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.DisApproveTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::DisApproveTrade ( )
{
	static UFunction* pFnDisApproveTrade = NULL;

	if ( ! pFnDisApproveTrade )
		pFnDisApproveTrade = (UFunction*) UObject::GObjObjects()->Data[ 54902 ];

	UNowGFXHudScene_execDisApproveTrade_Parms DisApproveTrade_Parms;

	pFnDisApproveTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisApproveTrade, &DisApproveTrade_Parms, NULL );

	pFnDisApproveTrade->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.ApproveTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::ApproveTrade ( )
{
	static UFunction* pFnApproveTrade = NULL;

	if ( ! pFnApproveTrade )
		pFnApproveTrade = (UFunction*) UObject::GObjObjects()->Data[ 54901 ];

	UNowGFXHudScene_execApproveTrade_Parms ApproveTrade_Parms;

	pFnApproveTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApproveTrade, &ApproveTrade_Parms, NULL );

	pFnApproveTrade->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearVendorSale
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearVendorSale ( )
{
	static UFunction* pFnclearVendorSale = NULL;

	if ( ! pFnclearVendorSale )
		pFnclearVendorSale = (UFunction*) UObject::GObjObjects()->Data[ 54900 ];

	UNowGFXHudScene_execclearVendorSale_Parms clearVendorSale_Parms;

	this->ProcessEvent ( pFnclearVendorSale, &clearVendorSale_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeVendorSale
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeVendorSale ( struct FString sGuid )
{
	static UFunction* pFnremoveVendorSale = NULL;

	if ( ! pFnremoveVendorSale )
		pFnremoveVendorSale = (UFunction*) UObject::GObjObjects()->Data[ 54898 ];

	UNowGFXHudScene_execremoveVendorSale_Parms removeVendorSale_Parms;
	memcpy ( &removeVendorSale_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnremoveVendorSale, &removeVendorSale_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeVendorPurchase
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeVendorPurchase ( struct FString sGuid )
{
	static UFunction* pFnremoveVendorPurchase = NULL;

	if ( ! pFnremoveVendorPurchase )
		pFnremoveVendorPurchase = (UFunction*) UObject::GObjObjects()->Data[ 54896 ];

	UNowGFXHudScene_execremoveVendorPurchase_Parms removeVendorPurchase_Parms;
	memcpy ( &removeVendorPurchase_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnremoveVendorPurchase, &removeVendorPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addVendorSale
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddVendorSale ( struct FString sData )
{
	static UFunction* pFnaddVendorSale = NULL;

	if ( ! pFnaddVendorSale )
		pFnaddVendorSale = (UFunction*) UObject::GObjObjects()->Data[ 54894 ];

	UNowGFXHudScene_eventaddVendorSale_Parms addVendorSale_Parms;
	memcpy ( &addVendorSale_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnaddVendorSale, &addVendorSale_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearVendorSellGuids
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearVendorSellGuids ( )
{
	static UFunction* pFnclearVendorSellGuids = NULL;

	if ( ! pFnclearVendorSellGuids )
		pFnclearVendorSellGuids = (UFunction*) UObject::GObjObjects()->Data[ 54893 ];

	UNowGFXHudScene_execclearVendorSellGuids_Parms clearVendorSellGuids_Parms;

	this->ProcessEvent ( pFnclearVendorSellGuids, &clearVendorSellGuids_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addVendorSellGuid
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addVendorSellGuid ( struct FString sGuid )
{
	static UFunction* pFnaddVendorSellGuid = NULL;

	if ( ! pFnaddVendorSellGuid )
		pFnaddVendorSellGuid = (UFunction*) UObject::GObjObjects()->Data[ 54891 ];

	UNowGFXHudScene_execaddVendorSellGuid_Parms addVendorSellGuid_Parms;
	memcpy ( &addVendorSellGuid_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnaddVendorSellGuid, &addVendorSellGuid_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearVendorPurchase
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearVendorPurchase ( )
{
	static UFunction* pFnclearVendorPurchase = NULL;

	if ( ! pFnclearVendorPurchase )
		pFnclearVendorPurchase = (UFunction*) UObject::GObjObjects()->Data[ 54890 ];

	UNowGFXHudScene_execclearVendorPurchase_Parms clearVendorPurchase_Parms;

	this->ProcessEvent ( pFnclearVendorPurchase, &clearVendorPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addVendorPurchase
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddVendorPurchase ( struct FString sData )
{
	static UFunction* pFnaddVendorPurchase = NULL;

	if ( ! pFnaddVendorPurchase )
		pFnaddVendorPurchase = (UFunction*) UObject::GObjObjects()->Data[ 54888 ];

	UNowGFXHudScene_eventaddVendorPurchase_Parms addVendorPurchase_Parms;
	memcpy ( &addVendorPurchase_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnaddVendorPurchase, &addVendorPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearVendorItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearVendorItems ( )
{
	static UFunction* pFnclearVendorItems = NULL;

	if ( ! pFnclearVendorItems )
		pFnclearVendorItems = (UFunction*) UObject::GObjObjects()->Data[ 54887 ];

	UNowGFXHudScene_execclearVendorItems_Parms clearVendorItems_Parms;

	this->ProcessEvent ( pFnclearVendorItems, &clearVendorItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeVendorItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeVendorItem ( struct FString sGuid )
{
	static UFunction* pFnremoveVendorItem = NULL;

	if ( ! pFnremoveVendorItem )
		pFnremoveVendorItem = (UFunction*) UObject::GObjObjects()->Data[ 54885 ];

	UNowGFXHudScene_execremoveVendorItem_Parms removeVendorItem_Parms;
	memcpy ( &removeVendorItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnremoveVendorItem, &removeVendorItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addVendorItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddVendorItem ( struct FString sData )
{
	static UFunction* pFnaddVendorItem = NULL;

	if ( ! pFnaddVendorItem )
		pFnaddVendorItem = (UFunction*) UObject::GObjObjects()->Data[ 54883 ];

	UNowGFXHudScene_eventaddVendorItem_Parms addVendorItem_Parms;
	memcpy ( &addVendorItem_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnaddVendorItem, &addVendorItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeVendorWindow
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventcloseVendorWindow ( )
{
	static UFunction* pFncloseVendorWindow = NULL;

	if ( ! pFncloseVendorWindow )
		pFncloseVendorWindow = (UFunction*) UObject::GObjObjects()->Data[ 54882 ];

	UNowGFXHudScene_eventcloseVendorWindow_Parms closeVendorWindow_Parms;

	this->ProcessEvent ( pFncloseVendorWindow, &closeVendorWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showVendorWindow
// [0x00020002] 
// Parameters infos:
// struct FString                 sVendorGuid                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sVendorName                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bBuyIllegal                    ( CPF_Parm )
// unsigned long                  bBuyStolen                     ( CPF_Parm )
// int                            iTaxes                         ( CPF_Parm )

void UNowGFXHudScene::showVendorWindow ( struct FString sVendorGuid, struct FString sVendorName, unsigned long bBuyIllegal, unsigned long bBuyStolen, int iTaxes )
{
	static UFunction* pFnshowVendorWindow = NULL;

	if ( ! pFnshowVendorWindow )
		pFnshowVendorWindow = (UFunction*) UObject::GObjObjects()->Data[ 54876 ];

	UNowGFXHudScene_execshowVendorWindow_Parms showVendorWindow_Parms;
	memcpy ( &showVendorWindow_Parms.sVendorGuid, &sVendorGuid, 0xC );
	memcpy ( &showVendorWindow_Parms.sVendorName, &sVendorName, 0xC );
	showVendorWindow_Parms.bBuyIllegal = bBuyIllegal;
	showVendorWindow_Parms.bBuyStolen = bBuyStolen;
	showVendorWindow_Parms.iTaxes = iTaxes;

	this->ProcessEvent ( pFnshowVendorWindow, &showVendorWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SortDelStringStringPair
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsStringStringPair      A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsStringStringPair      B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortDelStringStringPair ( struct FsStringStringPair A, struct FsStringStringPair B )
{
	static UFunction* pFnSortDelStringStringPair = NULL;

	if ( ! pFnSortDelStringStringPair )
		pFnSortDelStringStringPair = (UFunction*) UObject::GObjObjects()->Data[ 52926 ];

	UNowGFXHudScene_execSortDelStringStringPair_Parms SortDelStringStringPair_Parms;
	memcpy ( &SortDelStringStringPair_Parms.A, &A, 0x18 );
	memcpy ( &SortDelStringStringPair_Parms.B, &B, 0x18 );

	this->ProcessEvent ( pFnSortDelStringStringPair, &SortDelStringStringPair_Parms, NULL );

	return SortDelStringStringPair_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SortItemsVendorSells
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventSortItemsVendorSells ( )
{
	static UFunction* pFnSortItemsVendorSells = NULL;

	if ( ! pFnSortItemsVendorSells )
		pFnSortItemsVendorSells = (UFunction*) UObject::GObjObjects()->Data[ 54872 ];

	UNowGFXHudScene_eventSortItemsVendorSells_Parms SortItemsVendorSells_Parms;

	this->ProcessEvent ( pFnSortItemsVendorSells, &SortItemsVendorSells_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddToItemsVendorSells
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sJson                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddToItemsVendorSells ( struct FString sName, struct FString sJson )
{
	static UFunction* pFnAddToItemsVendorSells = NULL;

	if ( ! pFnAddToItemsVendorSells )
		pFnAddToItemsVendorSells = (UFunction*) UObject::GObjObjects()->Data[ 54868 ];

	UNowGFXHudScene_eventAddToItemsVendorSells_Parms AddToItemsVendorSells_Parms;
	memcpy ( &AddToItemsVendorSells_Parms.sName, &sName, 0xC );
	memcpy ( &AddToItemsVendorSells_Parms.sJson, &sJson, 0xC );

	this->ProcessEvent ( pFnAddToItemsVendorSells, &AddToItemsVendorSells_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeVendorPaymentArray
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeVendorPaymentArray ( )
{
	static UFunction* pFnFinalizeVendorPaymentArray = NULL;

	if ( ! pFnFinalizeVendorPaymentArray )
		pFnFinalizeVendorPaymentArray = (UFunction*) UObject::GObjObjects()->Data[ 54866 ];

	UNowGFXHudScene_eventFinalizeVendorPaymentArray_Parms FinalizeVendorPaymentArray_Parms;

	this->ProcessEvent ( pFnFinalizeVendorPaymentArray, &FinalizeVendorPaymentArray_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.HackClearPurchase
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::HackClearPurchase ( )
{
	static UFunction* pFnHackClearPurchase = NULL;

	if ( ! pFnHackClearPurchase )
		pFnHackClearPurchase = (UFunction*) UObject::GObjObjects()->Data[ 54864 ];

	UNowGFXHudScene_execHackClearPurchase_Parms HackClearPurchase_Parms;

	this->ProcessEvent ( pFnHackClearPurchase, &HackClearPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveFromPurchase
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveFromPurchase ( struct FString sGuid )
{
	static UFunction* pFnRemoveFromPurchase = NULL;

	if ( ! pFnRemoveFromPurchase )
		pFnRemoveFromPurchase = (UFunction*) UObject::GObjObjects()->Data[ 54861 ];

	UNowGFXHudScene_execRemoveFromPurchase_Parms RemoveFromPurchase_Parms;
	memcpy ( &RemoveFromPurchase_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnRemoveFromPurchase, &RemoveFromPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddToPurchase
// [0x00820002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iQuantity                      ( CPF_Parm )

void UNowGFXHudScene::AddToPurchase ( struct FString sGuid, int iQuantity )
{
	static UFunction* pFnAddToPurchase = NULL;

	if ( ! pFnAddToPurchase )
		pFnAddToPurchase = (UFunction*) UObject::GObjObjects()->Data[ 54857 ];

	UNowGFXHudScene_execAddToPurchase_Parms AddToPurchase_Parms;
	memcpy ( &AddToPurchase_Parms.sGuid, &sGuid, 0xC );
	AddToPurchase_Parms.iQuantity = iQuantity;

	this->ProcessEvent ( pFnAddToPurchase, &AddToPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveFromSale
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveFromSale ( struct FString sGuid )
{
	static UFunction* pFnRemoveFromSale = NULL;

	if ( ! pFnRemoveFromSale )
		pFnRemoveFromSale = (UFunction*) UObject::GObjObjects()->Data[ 54854 ];

	UNowGFXHudScene_execRemoveFromSale_Parms RemoveFromSale_Parms;
	memcpy ( &RemoveFromSale_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnRemoveFromSale, &RemoveFromSale_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetVendorSaleIndex
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetVendorSaleIndex ( struct FString sGuid )
{
	static UFunction* pFnGetVendorSaleIndex = NULL;

	if ( ! pFnGetVendorSaleIndex )
		pFnGetVendorSaleIndex = (UFunction*) UObject::GObjObjects()->Data[ 54850 ];

	UNowGFXHudScene_eventGetVendorSaleIndex_Parms GetVendorSaleIndex_Parms;
	memcpy ( &GetVendorSaleIndex_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGetVendorSaleIndex, &GetVendorSaleIndex_Parms, NULL );

	return GetVendorSaleIndex_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CanAddMoreItemsToVendor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::CanAddMoreItemsToVendor ( )
{
	static UFunction* pFnCanAddMoreItemsToVendor = NULL;

	if ( ! pFnCanAddMoreItemsToVendor )
		pFnCanAddMoreItemsToVendor = (UFunction*) UObject::GObjObjects()->Data[ 54848 ];

	UNowGFXHudScene_execCanAddMoreItemsToVendor_Parms CanAddMoreItemsToVendor_Parms;

	this->ProcessEvent ( pFnCanAddMoreItemsToVendor, &CanAddMoreItemsToVendor_Parms, NULL );

	return CanAddMoreItemsToVendor_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.AddToSale
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddToSale ( struct FString sGuid )
{
	static UFunction* pFnAddToSale = NULL;

	if ( ! pFnAddToSale )
		pFnAddToSale = (UFunction*) UObject::GObjObjects()->Data[ 54846 ];

	UNowGFXHudScene_execAddToSale_Parms AddToSale_Parms;
	memcpy ( &AddToSale_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnAddToSale, &AddToSale_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.VendorAccepted
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::VendorAccepted ( )
{
	static UFunction* pFnVendorAccepted = NULL;

	if ( ! pFnVendorAccepted )
		pFnVendorAccepted = (UFunction*) UObject::GObjObjects()->Data[ 54845 ];

	UNowGFXHudScene_execVendorAccepted_Parms VendorAccepted_Parms;

	this->ProcessEvent ( pFnVendorAccepted, &VendorAccepted_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetAiTaxes
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetAiTaxes ( )
{
	static UFunction* pFnSetAiTaxes = NULL;

	if ( ! pFnSetAiTaxes )
		pFnSetAiTaxes = (UFunction*) UObject::GObjObjects()->Data[ 54844 ];

	UNowGFXHudScene_execSetAiTaxes_Parms SetAiTaxes_Parms;

	this->ProcessEvent ( pFnSetAiTaxes, &SetAiTaxes_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitVendorNoCheck
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitVendorNoCheck ( )
{
	static UFunction* pFnInitVendorNoCheck = NULL;

	if ( ! pFnInitVendorNoCheck )
		pFnInitVendorNoCheck = (UFunction*) UObject::GObjObjects()->Data[ 54843 ];

	UNowGFXHudScene_execInitVendorNoCheck_Parms InitVendorNoCheck_Parms;

	this->ProcessEvent ( pFnInitVendorNoCheck, &InitVendorNoCheck_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitVendor
// [0x00024002] 
// Parameters infos:
// unsigned long                  bNoOwnerCheck                  ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::InitVendor ( unsigned long bNoOwnerCheck )
{
	static UFunction* pFnInitVendor = NULL;

	if ( ! pFnInitVendor )
		pFnInitVendor = (UFunction*) UObject::GObjObjects()->Data[ 54839 ];

	UNowGFXHudScene_execInitVendor_Parms InitVendor_Parms;
	InitVendor_Parms.bNoOwnerCheck = bNoOwnerCheck;

	this->ProcessEvent ( pFnInitVendor, &InitVendor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CanAddItemToVendor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::CanAddItemToVendor ( struct FString sItemGuid )
{
	static UFunction* pFnCanAddItemToVendor = NULL;

	if ( ! pFnCanAddItemToVendor )
		pFnCanAddItemToVendor = (UFunction*) UObject::GObjObjects()->Data[ 54836 ];

	UNowGFXHudScene_execCanAddItemToVendor_Parms CanAddItemToVendor_Parms;
	memcpy ( &CanAddItemToVendor_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnCanAddItemToVendor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanAddItemToVendor, &CanAddItemToVendor_Parms, NULL );

	pFnCanAddItemToVendor->FunctionFlags |= 0x400;

	return CanAddItemToVendor_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SendGetAiTaxesReport
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendGetAiTaxesReport ( )
{
	static UFunction* pFnSendGetAiTaxesReport = NULL;

	if ( ! pFnSendGetAiTaxesReport )
		pFnSendGetAiTaxesReport = (UFunction*) UObject::GObjObjects()->Data[ 54835 ];

	UNowGFXHudScene_execSendGetAiTaxesReport_Parms SendGetAiTaxesReport_Parms;

	pFnSendGetAiTaxesReport->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendGetAiTaxesReport, &SendGetAiTaxesReport_Parms, NULL );

	pFnSendGetAiTaxesReport->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendSetAiTaxes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sRespones                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendSetAiTaxes ( struct FString sRespones )
{
	static UFunction* pFnSendSetAiTaxes = NULL;

	if ( ! pFnSendSetAiTaxes )
		pFnSendSetAiTaxes = (UFunction*) UObject::GObjObjects()->Data[ 54833 ];

	UNowGFXHudScene_execSendSetAiTaxes_Parms SendSetAiTaxes_Parms;
	memcpy ( &SendSetAiTaxes_Parms.sRespones, &sRespones, 0xC );

	pFnSendSetAiTaxes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendSetAiTaxes, &SendSetAiTaxes_Parms, NULL );

	pFnSendSetAiTaxes->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.UpdateVendorPayment
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateVendorPayment ( )
{
	static UFunction* pFnUpdateVendorPayment = NULL;

	if ( ! pFnUpdateVendorPayment )
		pFnUpdateVendorPayment = (UFunction*) UObject::GObjObjects()->Data[ 54832 ];

	UNowGFXHudScene_execUpdateVendorPayment_Parms UpdateVendorPayment_Parms;

	pFnUpdateVendorPayment->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateVendorPayment, &UpdateVendorPayment_Parms, NULL );

	pFnUpdateVendorPayment->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.UpdateVendorPurchase
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateVendorPurchase ( )
{
	static UFunction* pFnUpdateVendorPurchase = NULL;

	if ( ! pFnUpdateVendorPurchase )
		pFnUpdateVendorPurchase = (UFunction*) UObject::GObjObjects()->Data[ 54831 ];

	UNowGFXHudScene_execUpdateVendorPurchase_Parms UpdateVendorPurchase_Parms;

	pFnUpdateVendorPurchase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateVendorPurchase, &UpdateVendorPurchase_Parms, NULL );

	pFnUpdateVendorPurchase->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.UpdateVendorSale
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateVendorSale ( )
{
	static UFunction* pFnUpdateVendorSale = NULL;

	if ( ! pFnUpdateVendorSale )
		pFnUpdateVendorSale = (UFunction*) UObject::GObjObjects()->Data[ 54830 ];

	UNowGFXHudScene_execUpdateVendorSale_Parms UpdateVendorSale_Parms;

	pFnUpdateVendorSale->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateVendorSale, &UpdateVendorSale_Parms, NULL );

	pFnUpdateVendorSale->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.UpdateVendorItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateVendorItems ( )
{
	static UFunction* pFnUpdateVendorItems = NULL;

	if ( ! pFnUpdateVendorItems )
		pFnUpdateVendorItems = (UFunction*) UObject::GObjObjects()->Data[ 54829 ];

	UNowGFXHudScene_execUpdateVendorItems_Parms UpdateVendorItems_Parms;

	pFnUpdateVendorItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateVendorItems, &UpdateVendorItems_Parms, NULL );

	pFnUpdateVendorItems->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.DoVendorAccepted
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::DoVendorAccepted ( )
{
	static UFunction* pFnDoVendorAccepted = NULL;

	if ( ! pFnDoVendorAccepted )
		pFnDoVendorAccepted = (UFunction*) UObject::GObjObjects()->Data[ 54828 ];

	UNowGFXHudScene_execDoVendorAccepted_Parms DoVendorAccepted_Parms;

	pFnDoVendorAccepted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoVendorAccepted, &DoVendorAccepted_Parms, NULL );

	pFnDoVendorAccepted->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.DoVendorBrowse
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::DoVendorBrowse ( )
{
	static UFunction* pFnDoVendorBrowse = NULL;

	if ( ! pFnDoVendorBrowse )
		pFnDoVendorBrowse = (UFunction*) UObject::GObjObjects()->Data[ 54827 ];

	UNowGFXHudScene_execDoVendorBrowse_Parms DoVendorBrowse_Parms;

	pFnDoVendorBrowse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoVendorBrowse, &DoVendorBrowse_Parms, NULL );

	pFnDoVendorBrowse->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearSlot
// [0x00020002] 
// Parameters infos:
// struct FString                 sWindow                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

void UNowGFXHudScene::clearSlot ( struct FString sWindow, int iSlot )
{
	static UFunction* pFnclearSlot = NULL;

	if ( ! pFnclearSlot )
		pFnclearSlot = (UFunction*) UObject::GObjObjects()->Data[ 54824 ];

	UNowGFXHudScene_execclearSlot_Parms clearSlot_Parms;
	memcpy ( &clearSlot_Parms.sWindow, &sWindow, 0xC );
	clearSlot_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnclearSlot, &clearSlot_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearCraftingSlotGuids
// [0x00020002] 
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UNowGFXHudScene::clearCraftingSlotGuids ( int iSlot )
{
	static UFunction* pFnclearCraftingSlotGuids = NULL;

	if ( ! pFnclearCraftingSlotGuids )
		pFnclearCraftingSlotGuids = (UFunction*) UObject::GObjObjects()->Data[ 54822 ];

	UNowGFXHudScene_execclearCraftingSlotGuids_Parms clearCraftingSlotGuids_Parms;
	clearCraftingSlotGuids_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnclearCraftingSlotGuids, &clearCraftingSlotGuids_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addCraftingSlotGuid
// [0x00020002] 
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addCraftingSlotGuid ( int iSlot, struct FString sGuid )
{
	static UFunction* pFnaddCraftingSlotGuid = NULL;

	if ( ! pFnaddCraftingSlotGuid )
		pFnaddCraftingSlotGuid = (UFunction*) UObject::GObjObjects()->Data[ 54819 ];

	UNowGFXHudScene_execaddCraftingSlotGuid_Parms addCraftingSlotGuid_Parms;
	addCraftingSlotGuid_Parms.iSlot = iSlot;
	memcpy ( &addCraftingSlotGuid_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnaddCraftingSlotGuid, &addCraftingSlotGuid_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearCraftingOptions
// [0x00020002] 
// Parameters infos:
// int                            iSection                       ( CPF_Parm )

void UNowGFXHudScene::clearCraftingOptions ( int iSection )
{
	static UFunction* pFnclearCraftingOptions = NULL;

	if ( ! pFnclearCraftingOptions )
		pFnclearCraftingOptions = (UFunction*) UObject::GObjObjects()->Data[ 54817 ];

	UNowGFXHudScene_execclearCraftingOptions_Parms clearCraftingOptions_Parms;
	clearCraftingOptions_Parms.iSection = iSection;

	this->ProcessEvent ( pFnclearCraftingOptions, &clearCraftingOptions_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addCraftingOption
// [0x00020002] 
// Parameters infos:
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            sSection                       ( CPF_Parm )

void UNowGFXHudScene::addCraftingOption ( struct FString sLabel, int sSection )
{
	static UFunction* pFnaddCraftingOption = NULL;

	if ( ! pFnaddCraftingOption )
		pFnaddCraftingOption = (UFunction*) UObject::GObjObjects()->Data[ 54814 ];

	UNowGFXHudScene_execaddCraftingOption_Parms addCraftingOption_Parms;
	memcpy ( &addCraftingOption_Parms.sLabel, &sLabel, 0xC );
	addCraftingOption_Parms.sSection = sSection;

	this->ProcessEvent ( pFnaddCraftingOption, &addCraftingOption_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeCraftingWindows
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeCraftingWindows ( )
{
	static UFunction* pFncloseCraftingWindows = NULL;

	if ( ! pFncloseCraftingWindows )
		pFncloseCraftingWindows = (UFunction*) UObject::GObjObjects()->Data[ 54813 ];

	UNowGFXHudScene_execcloseCraftingWindows_Parms closeCraftingWindows_Parms;

	this->ProcessEvent ( pFncloseCraftingWindows, &closeCraftingWindows_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CraftCompleteFX
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventCraftCompleteFX ( )
{
	static UFunction* pFnCraftCompleteFX = NULL;

	if ( ! pFnCraftCompleteFX )
		pFnCraftCompleteFX = (UFunction*) UObject::GObjObjects()->Data[ 54811 ];

	UNowGFXHudScene_eventCraftCompleteFX_Parms CraftCompleteFX_Parms;

	this->ProcessEvent ( pFnCraftCompleteFX, &CraftCompleteFX_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CanCraft
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::CanCraft ( )
{
	static UFunction* pFnCanCraft = NULL;

	if ( ! pFnCanCraft )
		pFnCanCraft = (UFunction*) UObject::GObjObjects()->Data[ 54809 ];

	UNowGFXHudScene_execCanCraft_Parms CanCraft_Parms;

	this->ProcessEvent ( pFnCanCraft, &CanCraft_Parms, NULL );

	return CanCraft_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.stopRenderToTextureCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::stopRenderToTextureCrafting ( )
{
	static UFunction* pFnstopRenderToTextureCrafting = NULL;

	if ( ! pFnstopRenderToTextureCrafting )
		pFnstopRenderToTextureCrafting = (UFunction*) UObject::GObjObjects()->Data[ 54808 ];

	UNowGFXHudScene_execstopRenderToTextureCrafting_Parms stopRenderToTextureCrafting_Parms;

	this->ProcessEvent ( pFnstopRenderToTextureCrafting, &stopRenderToTextureCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.startRenderToTextureCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::startRenderToTextureCrafting ( )
{
	static UFunction* pFnstartRenderToTextureCrafting = NULL;

	if ( ! pFnstartRenderToTextureCrafting )
		pFnstartRenderToTextureCrafting = (UFunction*) UObject::GObjObjects()->Data[ 54805 ];

	UNowGFXHudScene_execstartRenderToTextureCrafting_Parms startRenderToTextureCrafting_Parms;

	this->ProcessEvent ( pFnstartRenderToTextureCrafting, &startRenderToTextureCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ResetCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ResetCrafting ( )
{
	static UFunction* pFnResetCrafting = NULL;

	if ( ! pFnResetCrafting )
		pFnResetCrafting = (UFunction*) UObject::GObjObjects()->Data[ 54804 ];

	UNowGFXHudScene_execResetCrafting_Parms ResetCrafting_Parms;

	this->ProcessEvent ( pFnResetCrafting, &ResetCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetTargetStaticMeshAvatar
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarStM*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarStM* UNowGFXHudScene::GetTargetStaticMeshAvatar ( )
{
	static UFunction* pFnGetTargetStaticMeshAvatar = NULL;

	if ( ! pFnGetTargetStaticMeshAvatar )
		pFnGetTargetStaticMeshAvatar = (UFunction*) UObject::GObjObjects()->Data[ 54802 ];

	UNowGFXHudScene_execGetTargetStaticMeshAvatar_Parms GetTargetStaticMeshAvatar_Parms;

	this->ProcessEvent ( pFnGetTargetStaticMeshAvatar, &GetTargetStaticMeshAvatar_Parms, NULL );

	return GetTargetStaticMeshAvatar_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetTargetStaticMesh
// [0x00020002] 
// Parameters infos:
// class ANowStaticMeshActor*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowStaticMeshActor* UNowGFXHudScene::GetTargetStaticMesh ( )
{
	static UFunction* pFnGetTargetStaticMesh = NULL;

	if ( ! pFnGetTargetStaticMesh )
		pFnGetTargetStaticMesh = (UFunction*) UObject::GObjObjects()->Data[ 54798 ];

	UNowGFXHudScene_execGetTargetStaticMesh_Parms GetTargetStaticMesh_Parms;

	this->ProcessEvent ( pFnGetTargetStaticMesh, &GetTargetStaticMesh_Parms, NULL );

	return GetTargetStaticMesh_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.DoCraftingEquipment
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::DoCraftingEquipment ( )
{
	static UFunction* pFnDoCraftingEquipment = NULL;

	if ( ! pFnDoCraftingEquipment )
		pFnDoCraftingEquipment = (UFunction*) UObject::GObjObjects()->Data[ 54797 ];

	UNowGFXHudScene_execDoCraftingEquipment_Parms DoCraftingEquipment_Parms;

	pFnDoCraftingEquipment->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoCraftingEquipment, &DoCraftingEquipment_Parms, NULL );

	pFnDoCraftingEquipment->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.StartHouseCrafting
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::StartHouseCrafting ( )
{
	static UFunction* pFnStartHouseCrafting = NULL;

	if ( ! pFnStartHouseCrafting )
		pFnStartHouseCrafting = (UFunction*) UObject::GObjObjects()->Data[ 54796 ];

	UNowGFXHudScene_execStartHouseCrafting_Parms StartHouseCrafting_Parms;

	pFnStartHouseCrafting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartHouseCrafting, &StartHouseCrafting_Parms, NULL );

	pFnStartHouseCrafting->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showWeaponCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showWeaponCrafting ( )
{
	static UFunction* pFnshowWeaponCrafting = NULL;

	if ( ! pFnshowWeaponCrafting )
		pFnshowWeaponCrafting = (UFunction*) UObject::GObjObjects()->Data[ 54795 ];

	UNowGFXHudScene_execshowWeaponCrafting_Parms showWeaponCrafting_Parms;

	this->ProcessEvent ( pFnshowWeaponCrafting, &showWeaponCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetIndexFromHandle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetIndexFromHandle ( struct FString sName )
{
	static UFunction* pFnGetIndexFromHandle = NULL;

	if ( ! pFnGetIndexFromHandle )
		pFnGetIndexFromHandle = (UFunction*) UObject::GObjObjects()->Data[ 54791 ];

	UNowGFXHudScene_eventGetIndexFromHandle_Parms GetIndexFromHandle_Parms;
	memcpy ( &GetIndexFromHandle_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetIndexFromHandle, &GetIndexFromHandle_Parms, NULL );

	return GetIndexFromHandle_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetIndexFromBlade
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetIndexFromBlade ( struct FString sName )
{
	static UFunction* pFnGetIndexFromBlade = NULL;

	if ( ! pFnGetIndexFromBlade )
		pFnGetIndexFromBlade = (UFunction*) UObject::GObjObjects()->Data[ 54787 ];

	UNowGFXHudScene_eventGetIndexFromBlade_Parms GetIndexFromBlade_Parms;
	memcpy ( &GetIndexFromBlade_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetIndexFromBlade, &GetIndexFromBlade_Parms, NULL );

	return GetIndexFromBlade_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromBlade
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromBlade ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromBlade = NULL;

	if ( ! pFnGetSendNameFromBlade )
		pFnGetSendNameFromBlade = (UFunction*) UObject::GObjObjects()->Data[ 54783 ];

	UNowGFXHudScene_eventGetSendNameFromBlade_Parms GetSendNameFromBlade_Parms;
	memcpy ( &GetSendNameFromBlade_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromBlade, &GetSendNameFromBlade_Parms, NULL );

	return GetSendNameFromBlade_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromHandle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromHandle ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromHandle = NULL;

	if ( ! pFnGetSendNameFromHandle )
		pFnGetSendNameFromHandle = (UFunction*) UObject::GObjObjects()->Data[ 54779 ];

	UNowGFXHudScene_eventGetSendNameFromHandle_Parms GetSendNameFromHandle_Parms;
	memcpy ( &GetSendNameFromHandle_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromHandle, &GetSendNameFromHandle_Parms, NULL );

	return GetSendNameFromHandle_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CraftWeapon
// [0x00020002] 
// Parameters infos:
// struct FString                 sHandle                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHead                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCoreMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHandleMatGuid                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHeadMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCustomName                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRecipe                        ( CPF_Parm )

void UNowGFXHudScene::CraftWeapon ( struct FString sHandle, struct FString sHead, struct FString sCoreMatGuid, struct FString sHandleMatGuid, struct FString sHeadMatGuid, struct FString sCustomName, unsigned long bRecipe )
{
	static UFunction* pFnCraftWeapon = NULL;

	if ( ! pFnCraftWeapon )
		pFnCraftWeapon = (UFunction*) UObject::GObjObjects()->Data[ 54770 ];

	UNowGFXHudScene_execCraftWeapon_Parms CraftWeapon_Parms;
	memcpy ( &CraftWeapon_Parms.sHandle, &sHandle, 0xC );
	memcpy ( &CraftWeapon_Parms.sHead, &sHead, 0xC );
	memcpy ( &CraftWeapon_Parms.sCoreMatGuid, &sCoreMatGuid, 0xC );
	memcpy ( &CraftWeapon_Parms.sHandleMatGuid, &sHandleMatGuid, 0xC );
	memcpy ( &CraftWeapon_Parms.sHeadMatGuid, &sHeadMatGuid, 0xC );
	memcpy ( &CraftWeapon_Parms.sCustomName, &sCustomName, 0xC );
	CraftWeapon_Parms.bRecipe = bRecipe;

	this->ProcessEvent ( pFnCraftWeapon, &CraftWeapon_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedCraftWeapon
// [0x00020002] 
// Parameters infos:
// struct FString                 sHandle                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHead                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCoreMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHandleMatGuid                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHeadMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangedCraftWeapon ( struct FString sHandle, struct FString sHead, struct FString sCoreMatGuid, struct FString sHandleMatGuid, struct FString sHeadMatGuid )
{
	static UFunction* pFnChangedCraftWeapon = NULL;

	if ( ! pFnChangedCraftWeapon )
		pFnChangedCraftWeapon = (UFunction*) UObject::GObjObjects()->Data[ 54764 ];

	UNowGFXHudScene_execChangedCraftWeapon_Parms ChangedCraftWeapon_Parms;
	memcpy ( &ChangedCraftWeapon_Parms.sHandle, &sHandle, 0xC );
	memcpy ( &ChangedCraftWeapon_Parms.sHead, &sHead, 0xC );
	memcpy ( &ChangedCraftWeapon_Parms.sCoreMatGuid, &sCoreMatGuid, 0xC );
	memcpy ( &ChangedCraftWeapon_Parms.sHandleMatGuid, &sHandleMatGuid, 0xC );
	memcpy ( &ChangedCraftWeapon_Parms.sHeadMatGuid, &sHeadMatGuid, 0xC );

	this->ProcessEvent ( pFnChangedCraftWeapon, &ChangedCraftWeapon_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeWeaponArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeWeaponArrays ( )
{
	static UFunction* pFnFinalizeWeaponArrays = NULL;

	if ( ! pFnFinalizeWeaponArrays )
		pFnFinalizeWeaponArrays = (UFunction*) UObject::GObjObjects()->Data[ 54762 ];

	UNowGFXHudScene_eventFinalizeWeaponArrays_Parms FinalizeWeaponArrays_Parms;

	this->ProcessEvent ( pFnFinalizeWeaponArrays, &FinalizeWeaponArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddBlade
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillName                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bBlade                         ( CPF_Parm )

void UNowGFXHudScene::eventAddBlade ( struct FString sLabelName, struct FString sSendName, struct FString sSkillName, unsigned long bBlade )
{
	static UFunction* pFnAddBlade = NULL;

	if ( ! pFnAddBlade )
		pFnAddBlade = (UFunction*) UObject::GObjObjects()->Data[ 54756 ];

	UNowGFXHudScene_eventAddBlade_Parms AddBlade_Parms;
	memcpy ( &AddBlade_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddBlade_Parms.sSendName, &sSendName, 0xC );
	memcpy ( &AddBlade_Parms.sSkillName, &sSkillName, 0xC );
	AddBlade_Parms.bBlade = bBlade;

	this->ProcessEvent ( pFnAddBlade, &AddBlade_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddHandle
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillName                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bBladeOnly                     ( CPF_Parm )

void UNowGFXHudScene::eventAddHandle ( struct FString sLabelName, struct FString sSendName, struct FString sSkillName, unsigned long bBladeOnly )
{
	static UFunction* pFnAddHandle = NULL;

	if ( ! pFnAddHandle )
		pFnAddHandle = (UFunction*) UObject::GObjObjects()->Data[ 54750 ];

	UNowGFXHudScene_eventAddHandle_Parms AddHandle_Parms;
	memcpy ( &AddHandle_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddHandle_Parms.sSendName, &sSendName, 0xC );
	memcpy ( &AddHandle_Parms.sSkillName, &sSkillName, 0xC );
	AddHandle_Parms.bBladeOnly = bBladeOnly;

	this->ProcessEvent ( pFnAddHandle, &AddHandle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitWeaponCrafting
// [0x00024002] 
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::InitWeaponCrafting ( unsigned long bReInit )
{
	static UFunction* pFnInitWeaponCrafting = NULL;

	if ( ! pFnInitWeaponCrafting )
		pFnInitWeaponCrafting = (UFunction*) UObject::GObjObjects()->Data[ 54748 ];

	UNowGFXHudScene_execInitWeaponCrafting_Parms InitWeaponCrafting_Parms;
	InitWeaponCrafting_Parms.bReInit = bReInit;

	this->ProcessEvent ( pFnInitWeaponCrafting, &InitWeaponCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.IsValidWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sHandle                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHead                          ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::IsValidWeapon ( struct FString sHandle, struct FString sHead )
{
	static UFunction* pFnIsValidWeapon = NULL;

	if ( ! pFnIsValidWeapon )
		pFnIsValidWeapon = (UFunction*) UObject::GObjObjects()->Data[ 54744 ];

	UNowGFXHudScene_execIsValidWeapon_Parms IsValidWeapon_Parms;
	memcpy ( &IsValidWeapon_Parms.sHandle, &sHandle, 0xC );
	memcpy ( &IsValidWeapon_Parms.sHead, &sHead, 0xC );

	pFnIsValidWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidWeapon, &IsValidWeapon_Parms, NULL );

	pFnIsValidWeapon->FunctionFlags |= 0x400;

	return IsValidWeapon_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetPreviewStringWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sHandle                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHead                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCoreMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHandleMatGuid                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHeadMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetPreviewStringWeapon ( struct FString sHandle, struct FString sHead, struct FString sCoreMatGuid, struct FString sHandleMatGuid, struct FString sHeadMatGuid )
{
	static UFunction* pFnGetPreviewStringWeapon = NULL;

	if ( ! pFnGetPreviewStringWeapon )
		pFnGetPreviewStringWeapon = (UFunction*) UObject::GObjObjects()->Data[ 54737 ];

	UNowGFXHudScene_execGetPreviewStringWeapon_Parms GetPreviewStringWeapon_Parms;
	memcpy ( &GetPreviewStringWeapon_Parms.sHandle, &sHandle, 0xC );
	memcpy ( &GetPreviewStringWeapon_Parms.sHead, &sHead, 0xC );
	memcpy ( &GetPreviewStringWeapon_Parms.sCoreMatGuid, &sCoreMatGuid, 0xC );
	memcpy ( &GetPreviewStringWeapon_Parms.sHandleMatGuid, &sHandleMatGuid, 0xC );
	memcpy ( &GetPreviewStringWeapon_Parms.sHeadMatGuid, &sHeadMatGuid, 0xC );

	pFnGetPreviewStringWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreviewStringWeapon, &GetPreviewStringWeapon_Parms, NULL );

	pFnGetPreviewStringWeapon->FunctionFlags |= 0x400;

	return GetPreviewStringWeapon_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitWeaponArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitWeaponArrays ( )
{
	static UFunction* pFnInitWeaponArrays = NULL;

	if ( ! pFnInitWeaponArrays )
		pFnInitWeaponArrays = (UFunction*) UObject::GObjObjects()->Data[ 54736 ];

	UNowGFXHudScene_execInitWeaponArrays_Parms InitWeaponArrays_Parms;

	pFnInitWeaponArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitWeaponArrays, &InitWeaponArrays_Parms, NULL );

	pFnInitWeaponArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showBowCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showBowCrafting ( )
{
	static UFunction* pFnshowBowCrafting = NULL;

	if ( ! pFnshowBowCrafting )
		pFnshowBowCrafting = (UFunction*) UObject::GObjObjects()->Data[ 54733 ];

	UNowGFXHudScene_execshowBowCrafting_Parms showBowCrafting_Parms;

	this->ProcessEvent ( pFnshowBowCrafting, &showBowCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetSingleFromComp
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::eventGetSingleFromComp ( struct FString sName )
{
	static UFunction* pFnGetSingleFromComp = NULL;

	if ( ! pFnGetSingleFromComp )
		pFnGetSingleFromComp = (UFunction*) UObject::GObjObjects()->Data[ 54729 ];

	UNowGFXHudScene_eventGetSingleFromComp_Parms GetSingleFromComp_Parms;
	memcpy ( &GetSingleFromComp_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSingleFromComp, &GetSingleFromComp_Parms, NULL );

	return GetSingleFromComp_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromShape
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromShape ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromShape = NULL;

	if ( ! pFnGetSendNameFromShape )
		pFnGetSendNameFromShape = (UFunction*) UObject::GObjObjects()->Data[ 54725 ];

	UNowGFXHudScene_eventGetSendNameFromShape_Parms GetSendNameFromShape_Parms;
	memcpy ( &GetSendNameFromShape_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromShape, &GetSendNameFromShape_Parms, NULL );

	return GetSendNameFromShape_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromType
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromType ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromType = NULL;

	if ( ! pFnGetSendNameFromType )
		pFnGetSendNameFromType = (UFunction*) UObject::GObjObjects()->Data[ 54721 ];

	UNowGFXHudScene_eventGetSendNameFromType_Parms GetSendNameFromType_Parms;
	memcpy ( &GetSendNameFromType_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromType, &GetSendNameFromType_Parms, NULL );

	return GetSendNameFromType_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CraftBow
// [0x00020002] 
// Parameters infos:
// struct FString                 sConstruction                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFamily                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBellyMatGuid                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBackMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// float                          sBalance                       ( CPF_Parm )
// struct FString                 sCustomName                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRecipe                        ( CPF_Parm )

void UNowGFXHudScene::CraftBow ( struct FString sConstruction, struct FString sStyle, struct FString sFamily, struct FString sBellyMatGuid, struct FString sBackMatGuid, float sBalance, struct FString sCustomName, unsigned long bRecipe )
{
	static UFunction* pFnCraftBow = NULL;

	if ( ! pFnCraftBow )
		pFnCraftBow = (UFunction*) UObject::GObjObjects()->Data[ 54711 ];

	UNowGFXHudScene_execCraftBow_Parms CraftBow_Parms;
	memcpy ( &CraftBow_Parms.sConstruction, &sConstruction, 0xC );
	memcpy ( &CraftBow_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &CraftBow_Parms.sFamily, &sFamily, 0xC );
	memcpy ( &CraftBow_Parms.sBellyMatGuid, &sBellyMatGuid, 0xC );
	memcpy ( &CraftBow_Parms.sBackMatGuid, &sBackMatGuid, 0xC );
	CraftBow_Parms.sBalance = sBalance;
	memcpy ( &CraftBow_Parms.sCustomName, &sCustomName, 0xC );
	CraftBow_Parms.bRecipe = bRecipe;

	this->ProcessEvent ( pFnCraftBow, &CraftBow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedCraftBow
// [0x00020002] 
// Parameters infos:
// struct FString                 sConstruction                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFamily                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBellyMatGuid                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBackMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangedCraftBow ( struct FString sConstruction, struct FString sStyle, struct FString sFamily, struct FString sBellyMatGuid, struct FString sBackMatGuid )
{
	static UFunction* pFnChangedCraftBow = NULL;

	if ( ! pFnChangedCraftBow )
		pFnChangedCraftBow = (UFunction*) UObject::GObjObjects()->Data[ 54705 ];

	UNowGFXHudScene_execChangedCraftBow_Parms ChangedCraftBow_Parms;
	memcpy ( &ChangedCraftBow_Parms.sConstruction, &sConstruction, 0xC );
	memcpy ( &ChangedCraftBow_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &ChangedCraftBow_Parms.sFamily, &sFamily, 0xC );
	memcpy ( &ChangedCraftBow_Parms.sBellyMatGuid, &sBellyMatGuid, 0xC );
	memcpy ( &ChangedCraftBow_Parms.sBackMatGuid, &sBackMatGuid, 0xC );

	this->ProcessEvent ( pFnChangedCraftBow, &ChangedCraftBow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SortByTypeSkill
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftRangedType       A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftRangedType       B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByTypeSkill ( struct FsCraftRangedType A, struct FsCraftRangedType B )
{
	static UFunction* pFnSortByTypeSkill = NULL;

	if ( ! pFnSortByTypeSkill )
		pFnSortByTypeSkill = (UFunction*) UObject::GObjObjects()->Data[ 52928 ];

	UNowGFXHudScene_execSortByTypeSkill_Parms SortByTypeSkill_Parms;
	memcpy ( &SortByTypeSkill_Parms.A, &A, 0x24 );
	memcpy ( &SortByTypeSkill_Parms.B, &B, 0x24 );

	this->ProcessEvent ( pFnSortByTypeSkill, &SortByTypeSkill_Parms, NULL );

	return SortByTypeSkill_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SortByShapeSkill
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftRangedShape      A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftRangedShape      B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByShapeSkill ( struct FsCraftRangedShape A, struct FsCraftRangedShape B )
{
	static UFunction* pFnSortByShapeSkill = NULL;

	if ( ! pFnSortByShapeSkill )
		pFnSortByShapeSkill = (UFunction*) UObject::GObjObjects()->Data[ 52930 ];

	UNowGFXHudScene_execSortByShapeSkill_Parms SortByShapeSkill_Parms;
	memcpy ( &SortByShapeSkill_Parms.A, &A, 0x28 );
	memcpy ( &SortByShapeSkill_Parms.B, &B, 0x28 );

	this->ProcessEvent ( pFnSortByShapeSkill, &SortByShapeSkill_Parms, NULL );

	return SortByShapeSkill_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SortByCompSkill
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftRangedComp       A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftRangedComp       B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByCompSkill ( struct FsCraftRangedComp A, struct FsCraftRangedComp B )
{
	static UFunction* pFnSortByCompSkill = NULL;

	if ( ! pFnSortByCompSkill )
		pFnSortByCompSkill = (UFunction*) UObject::GObjObjects()->Data[ 52932 ];

	UNowGFXHudScene_execSortByCompSkill_Parms SortByCompSkill_Parms;
	memcpy ( &SortByCompSkill_Parms.A, &A, 0x1C );
	memcpy ( &SortByCompSkill_Parms.B, &B, 0x1C );

	this->ProcessEvent ( pFnSortByCompSkill, &SortByCompSkill_Parms, NULL );

	return SortByCompSkill_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.FinalizeRangedArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeRangedArrays ( )
{
	static UFunction* pFnFinalizeRangedArrays = NULL;

	if ( ! pFnFinalizeRangedArrays )
		pFnFinalizeRangedArrays = (UFunction*) UObject::GObjObjects()->Data[ 54694 ];

	UNowGFXHudScene_eventFinalizeRangedArrays_Parms FinalizeRangedArrays_Parms;

	this->ProcessEvent ( pFnFinalizeRangedArrays, &FinalizeRangedArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddComps
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillName                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bSingle                        ( CPF_Parm )

void UNowGFXHudScene::eventAddComps ( struct FString sLabelName, struct FString sSkillName, unsigned long bSingle )
{
	static UFunction* pFnAddComps = NULL;

	if ( ! pFnAddComps )
		pFnAddComps = (UFunction*) UObject::GObjObjects()->Data[ 54689 ];

	UNowGFXHudScene_eventAddComps_Parms AddComps_Parms;
	memcpy ( &AddComps_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddComps_Parms.sSkillName, &sSkillName, 0xC );
	AddComps_Parms.bSingle = bSingle;

	this->ProcessEvent ( pFnAddComps, &AddComps_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddType
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddType ( struct FString sLabelName, struct FString sSendName, struct FString sSkillName )
{
	static UFunction* pFnAddType = NULL;

	if ( ! pFnAddType )
		pFnAddType = (UFunction*) UObject::GObjObjects()->Data[ 54684 ];

	UNowGFXHudScene_eventAddType_Parms AddType_Parms;
	memcpy ( &AddType_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddType_Parms.sSendName, &sSendName, 0xC );
	memcpy ( &AddType_Parms.sSkillName, &sSkillName, 0xC );

	this->ProcessEvent ( pFnAddType, &AddType_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddShape
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillName                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bWorksSingle                   ( CPF_Parm )

void UNowGFXHudScene::eventAddShape ( struct FString sLabelName, struct FString sSendName, struct FString sSkillName, unsigned long bWorksSingle )
{
	static UFunction* pFnAddShape = NULL;

	if ( ! pFnAddShape )
		pFnAddShape = (UFunction*) UObject::GObjObjects()->Data[ 54678 ];

	UNowGFXHudScene_eventAddShape_Parms AddShape_Parms;
	memcpy ( &AddShape_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddShape_Parms.sSendName, &sSendName, 0xC );
	memcpy ( &AddShape_Parms.sSkillName, &sSkillName, 0xC );
	AddShape_Parms.bWorksSingle = bWorksSingle;

	this->ProcessEvent ( pFnAddShape, &AddShape_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitRangedCrafting
// [0x00024002] 
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::InitRangedCrafting ( unsigned long bReInit )
{
	static UFunction* pFnInitRangedCrafting = NULL;

	if ( ! pFnInitRangedCrafting )
		pFnInitRangedCrafting = (UFunction*) UObject::GObjObjects()->Data[ 54676 ];

	UNowGFXHudScene_execInitRangedCrafting_Parms InitRangedCrafting_Parms;
	InitRangedCrafting_Parms.bReInit = bReInit;

	this->ProcessEvent ( pFnInitRangedCrafting, &InitRangedCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetPreviewStringRanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sConstruction                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFamily                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBellyMatGuid                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBackMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetPreviewStringRanged ( struct FString sConstruction, struct FString sStyle, struct FString sFamily, struct FString sBellyMatGuid, struct FString sBackMatGuid )
{
	static UFunction* pFnGetPreviewStringRanged = NULL;

	if ( ! pFnGetPreviewStringRanged )
		pFnGetPreviewStringRanged = (UFunction*) UObject::GObjObjects()->Data[ 54669 ];

	UNowGFXHudScene_execGetPreviewStringRanged_Parms GetPreviewStringRanged_Parms;
	memcpy ( &GetPreviewStringRanged_Parms.sConstruction, &sConstruction, 0xC );
	memcpy ( &GetPreviewStringRanged_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &GetPreviewStringRanged_Parms.sFamily, &sFamily, 0xC );
	memcpy ( &GetPreviewStringRanged_Parms.sBellyMatGuid, &sBellyMatGuid, 0xC );
	memcpy ( &GetPreviewStringRanged_Parms.sBackMatGuid, &sBackMatGuid, 0xC );

	pFnGetPreviewStringRanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreviewStringRanged, &GetPreviewStringRanged_Parms, NULL );

	pFnGetPreviewStringRanged->FunctionFlags |= 0x400;

	return GetPreviewStringRanged_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitRangedArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitRangedArrays ( )
{
	static UFunction* pFnInitRangedArrays = NULL;

	if ( ! pFnInitRangedArrays )
		pFnInitRangedArrays = (UFunction*) UObject::GObjObjects()->Data[ 54668 ];

	UNowGFXHudScene_execInitRangedArrays_Parms InitRangedArrays_Parms;

	pFnInitRangedArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitRangedArrays, &InitRangedArrays_Parms, NULL );

	pFnInitRangedArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showArmorCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showArmorCrafting ( )
{
	static UFunction* pFnshowArmorCrafting = NULL;

	if ( ! pFnshowArmorCrafting )
		pFnshowArmorCrafting = (UFunction*) UObject::GObjObjects()->Data[ 54667 ];

	UNowGFXHudScene_execshowArmorCrafting_Parms showArmorCrafting_Parms;

	this->ProcessEvent ( pFnshowArmorCrafting, &showArmorCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetPreviewPartIDFromString
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetPreviewPartIDFromString ( struct FString sString )
{
	static UFunction* pFnGetPreviewPartIDFromString = NULL;

	if ( ! pFnGetPreviewPartIDFromString )
		pFnGetPreviewPartIDFromString = (UFunction*) UObject::GObjObjects()->Data[ 54664 ];

	UNowGFXHudScene_eventGetPreviewPartIDFromString_Parms GetPreviewPartIDFromString_Parms;
	memcpy ( &GetPreviewPartIDFromString_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnGetPreviewPartIDFromString, &GetPreviewPartIDFromString_Parms, NULL );

	return GetPreviewPartIDFromString_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetPartIDFromString
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetPartIDFromString ( struct FString sString )
{
	static UFunction* pFnGetPartIDFromString = NULL;

	if ( ! pFnGetPartIDFromString )
		pFnGetPartIDFromString = (UFunction*) UObject::GObjObjects()->Data[ 54661 ];

	UNowGFXHudScene_eventGetPartIDFromString_Parms GetPartIDFromString_Parms;
	memcpy ( &GetPartIDFromString_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnGetPartIDFromString, &GetPartIDFromString_Parms, NULL );

	return GetPartIDFromString_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetIndexFromArmorStyle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetIndexFromArmorStyle ( struct FString sName )
{
	static UFunction* pFnGetIndexFromArmorStyle = NULL;

	if ( ! pFnGetIndexFromArmorStyle )
		pFnGetIndexFromArmorStyle = (UFunction*) UObject::GObjObjects()->Data[ 54657 ];

	UNowGFXHudScene_eventGetIndexFromArmorStyle_Parms GetIndexFromArmorStyle_Parms;
	memcpy ( &GetIndexFromArmorStyle_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetIndexFromArmorStyle, &GetIndexFromArmorStyle_Parms, NULL );

	return GetIndexFromArmorStyle_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromArmorStyle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromArmorStyle ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromArmorStyle = NULL;

	if ( ! pFnGetSendNameFromArmorStyle )
		pFnGetSendNameFromArmorStyle = (UFunction*) UObject::GObjObjects()->Data[ 54653 ];

	UNowGFXHudScene_eventGetSendNameFromArmorStyle_Parms GetSendNameFromArmorStyle_Parms;
	memcpy ( &GetSendNameFromArmorStyle_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromArmorStyle, &GetSendNameFromArmorStyle_Parms, NULL );

	return GetSendNameFromArmorStyle_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CalculateSuppAmount
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// float                          fPct                           ( CPF_Parm )

float UNowGFXHudScene::eventCalculateSuppAmount ( struct FString sName, float fPct )
{
	static UFunction* pFnCalculateSuppAmount = NULL;

	if ( ! pFnCalculateSuppAmount )
		pFnCalculateSuppAmount = (UFunction*) UObject::GObjObjects()->Data[ 54648 ];

	UNowGFXHudScene_eventCalculateSuppAmount_Parms CalculateSuppAmount_Parms;
	memcpy ( &CalculateSuppAmount_Parms.sName, &sName, 0xC );
	CalculateSuppAmount_Parms.fPct = fPct;

	this->ProcessEvent ( pFnCalculateSuppAmount, &CalculateSuppAmount_Parms, NULL );

	return CalculateSuppAmount_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CalculatePrimAmount
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// float                          fPct                           ( CPF_Parm )

float UNowGFXHudScene::eventCalculatePrimAmount ( struct FString sName, float fPct )
{
	static UFunction* pFnCalculatePrimAmount = NULL;

	if ( ! pFnCalculatePrimAmount )
		pFnCalculatePrimAmount = (UFunction*) UObject::GObjObjects()->Data[ 54643 ];

	UNowGFXHudScene_eventCalculatePrimAmount_Parms CalculatePrimAmount_Parms;
	memcpy ( &CalculatePrimAmount_Parms.sName, &sName, 0xC );
	CalculatePrimAmount_Parms.fPct = fPct;

	this->ProcessEvent ( pFnCalculatePrimAmount, &CalculatePrimAmount_Parms, NULL );

	return CalculatePrimAmount_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CraftArmor
// [0x00020002] 
// Parameters infos:
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSlot                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSupportMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// float                          sPrimaryDensity                ( CPF_Parm )
// float                          sSupportDensity                ( CPF_Parm )
// struct FString                 sCustomName                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRecipe                        ( CPF_Parm )

void UNowGFXHudScene::CraftArmor ( struct FString sStyle, struct FString sSlot, struct FString sPrimaryMatGuid, struct FString sSupportMatGuid, float sPrimaryDensity, float sSupportDensity, struct FString sCustomName, unsigned long bRecipe )
{
	static UFunction* pFnCraftArmor = NULL;

	if ( ! pFnCraftArmor )
		pFnCraftArmor = (UFunction*) UObject::GObjObjects()->Data[ 54633 ];

	UNowGFXHudScene_execCraftArmor_Parms CraftArmor_Parms;
	memcpy ( &CraftArmor_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &CraftArmor_Parms.sSlot, &sSlot, 0xC );
	memcpy ( &CraftArmor_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &CraftArmor_Parms.sSupportMatGuid, &sSupportMatGuid, 0xC );
	CraftArmor_Parms.sPrimaryDensity = sPrimaryDensity;
	CraftArmor_Parms.sSupportDensity = sSupportDensity;
	memcpy ( &CraftArmor_Parms.sCustomName, &sCustomName, 0xC );
	CraftArmor_Parms.bRecipe = bRecipe;

	this->ProcessEvent ( pFnCraftArmor, &CraftArmor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateArmorCamera
// [0x00820002] 
// Parameters infos:
// struct FString                 sSlot                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UpdateArmorCamera ( struct FString sSlot )
{
	static UFunction* pFnUpdateArmorCamera = NULL;

	if ( ! pFnUpdateArmorCamera )
		pFnUpdateArmorCamera = (UFunction*) UObject::GObjObjects()->Data[ 54628 ];

	UNowGFXHudScene_execUpdateArmorCamera_Parms UpdateArmorCamera_Parms;
	memcpy ( &UpdateArmorCamera_Parms.sSlot, &sSlot, 0xC );

	this->ProcessEvent ( pFnUpdateArmorCamera, &UpdateArmorCamera_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.IsValidSlot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSlot                          ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::eventIsValidSlot ( struct FString sStyle, struct FString sSlot )
{
	static UFunction* pFnIsValidSlot = NULL;

	if ( ! pFnIsValidSlot )
		pFnIsValidSlot = (UFunction*) UObject::GObjObjects()->Data[ 54622 ];

	UNowGFXHudScene_eventIsValidSlot_Parms IsValidSlot_Parms;
	memcpy ( &IsValidSlot_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &IsValidSlot_Parms.sSlot, &sSlot, 0xC );

	this->ProcessEvent ( pFnIsValidSlot, &IsValidSlot_Parms, NULL );

	return IsValidSlot_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.UpdateArmorSlots
// [0x00020002] 
// Parameters infos:
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sLastStyle                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UpdateArmorSlots ( struct FString sStyle, struct FString sLastStyle )
{
	static UFunction* pFnUpdateArmorSlots = NULL;

	if ( ! pFnUpdateArmorSlots )
		pFnUpdateArmorSlots = (UFunction*) UObject::GObjObjects()->Data[ 54617 ];

	UNowGFXHudScene_execUpdateArmorSlots_Parms UpdateArmorSlots_Parms;
	memcpy ( &UpdateArmorSlots_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &UpdateArmorSlots_Parms.sLastStyle, &sLastStyle, 0xC );

	this->ProcessEvent ( pFnUpdateArmorSlots, &UpdateArmorSlots_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateMaterialSlots
// [0x00020002] 
// Parameters infos:
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sLastStyle                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UpdateMaterialSlots ( struct FString sStyle, struct FString sLastStyle )
{
	static UFunction* pFnUpdateMaterialSlots = NULL;

	if ( ! pFnUpdateMaterialSlots )
		pFnUpdateMaterialSlots = (UFunction*) UObject::GObjObjects()->Data[ 54612 ];

	UNowGFXHudScene_execUpdateMaterialSlots_Parms UpdateMaterialSlots_Parms;
	memcpy ( &UpdateMaterialSlots_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &UpdateMaterialSlots_Parms.sLastStyle, &sLastStyle, 0xC );

	this->ProcessEvent ( pFnUpdateMaterialSlots, &UpdateMaterialSlots_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedCraftArmor
// [0x00020002] 
// Parameters infos:
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSlot                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSupportMatGuid                ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangedCraftArmor ( struct FString sStyle, struct FString sSlot, struct FString sPrimaryMatGuid, struct FString sSupportMatGuid )
{
	static UFunction* pFnChangedCraftArmor = NULL;

	if ( ! pFnChangedCraftArmor )
		pFnChangedCraftArmor = (UFunction*) UObject::GObjObjects()->Data[ 54606 ];

	UNowGFXHudScene_execChangedCraftArmor_Parms ChangedCraftArmor_Parms;
	memcpy ( &ChangedCraftArmor_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &ChangedCraftArmor_Parms.sSlot, &sSlot, 0xC );
	memcpy ( &ChangedCraftArmor_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &ChangedCraftArmor_Parms.sSupportMatGuid, &sSupportMatGuid, 0xC );

	this->ProcessEvent ( pFnChangedCraftArmor, &ChangedCraftArmor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SortByArmorStyleLabel
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftArmorStyle       A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftArmorStyle       B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByArmorStyleLabel ( struct FsCraftArmorStyle A, struct FsCraftArmorStyle B )
{
	static UFunction* pFnSortByArmorStyleLabel = NULL;

	if ( ! pFnSortByArmorStyleLabel )
		pFnSortByArmorStyleLabel = (UFunction*) UObject::GObjObjects()->Data[ 52934 ];

	UNowGFXHudScene_execSortByArmorStyleLabel_Parms SortByArmorStyleLabel_Parms;
	memcpy ( &SortByArmorStyleLabel_Parms.A, &A, 0x3C );
	memcpy ( &SortByArmorStyleLabel_Parms.B, &B, 0x3C );

	this->ProcessEvent ( pFnSortByArmorStyleLabel, &SortByArmorStyleLabel_Parms, NULL );

	return SortByArmorStyleLabel_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.FinalizeArmorArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeArmorArrays ( )
{
	static UFunction* pFnFinalizeArmorArrays = NULL;

	if ( ! pFnFinalizeArmorArrays )
		pFnFinalizeArmorArrays = (UFunction*) UObject::GObjObjects()->Data[ 54601 ];

	UNowGFXHudScene_eventFinalizeArmorArrays_Parms FinalizeArmorArrays_Parms;

	this->ProcessEvent ( pFnFinalizeArmorArrays, &FinalizeArmorArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddStyle
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iMaterialFlag                  ( CPF_Parm )
// int                            iPieceFlags                    ( CPF_Parm )
// float                          fVisMinValue                   ( CPF_Parm )
// float                          fVisMaxValue                   ( CPF_Parm )
// float                          fnVisMinValue                  ( CPF_Parm )
// float                          fnVisMaxValue                  ( CPF_Parm )

void UNowGFXHudScene::eventAddStyle ( struct FString sLabelName, struct FString sSendName, struct FString sSkillName, int iMaterialFlag, int iPieceFlags, float fVisMinValue, float fVisMaxValue, float fnVisMinValue, float fnVisMaxValue )
{
	static UFunction* pFnAddStyle = NULL;

	if ( ! pFnAddStyle )
		pFnAddStyle = (UFunction*) UObject::GObjObjects()->Data[ 54590 ];

	UNowGFXHudScene_eventAddStyle_Parms AddStyle_Parms;
	memcpy ( &AddStyle_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddStyle_Parms.sSendName, &sSendName, 0xC );
	memcpy ( &AddStyle_Parms.sSkillName, &sSkillName, 0xC );
	AddStyle_Parms.iMaterialFlag = iMaterialFlag;
	AddStyle_Parms.iPieceFlags = iPieceFlags;
	AddStyle_Parms.fVisMinValue = fVisMinValue;
	AddStyle_Parms.fVisMaxValue = fVisMaxValue;
	AddStyle_Parms.fnVisMinValue = fnVisMinValue;
	AddStyle_Parms.fnVisMaxValue = fnVisMaxValue;

	this->ProcessEvent ( pFnAddStyle, &AddStyle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddPart
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iFlag                          ( CPF_Parm )

void UNowGFXHudScene::eventAddPart ( struct FString sLabelName, int iFlag )
{
	static UFunction* pFnAddPart = NULL;

	if ( ! pFnAddPart )
		pFnAddPart = (UFunction*) UObject::GObjObjects()->Data[ 54586 ];

	UNowGFXHudScene_eventAddPart_Parms AddPart_Parms;
	memcpy ( &AddPart_Parms.sLabelName, &sLabelName, 0xC );
	AddPart_Parms.iFlag = iFlag;

	this->ProcessEvent ( pFnAddPart, &AddPart_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddArmorMaterial
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iFlag                          ( CPF_Parm )

void UNowGFXHudScene::eventAddArmorMaterial ( struct FString sLabelName, int iFlag )
{
	static UFunction* pFnAddArmorMaterial = NULL;

	if ( ! pFnAddArmorMaterial )
		pFnAddArmorMaterial = (UFunction*) UObject::GObjObjects()->Data[ 54582 ];

	UNowGFXHudScene_eventAddArmorMaterial_Parms AddArmorMaterial_Parms;
	memcpy ( &AddArmorMaterial_Parms.sLabelName, &sLabelName, 0xC );
	AddArmorMaterial_Parms.iFlag = iFlag;

	this->ProcessEvent ( pFnAddArmorMaterial, &AddArmorMaterial_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitArmorCrafting
// [0x00024002] 
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::InitArmorCrafting ( unsigned long bReInit )
{
	static UFunction* pFnInitArmorCrafting = NULL;

	if ( ! pFnInitArmorCrafting )
		pFnInitArmorCrafting = (UFunction*) UObject::GObjObjects()->Data[ 54580 ];

	UNowGFXHudScene_execInitArmorCrafting_Parms InitArmorCrafting_Parms;
	InitArmorCrafting_Parms.bReInit = bReInit;

	this->ProcessEvent ( pFnInitArmorCrafting, &InitArmorCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.IsValidArmor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSlot                          ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::IsValidArmor ( struct FString sStyle, struct FString sSlot )
{
	static UFunction* pFnIsValidArmor = NULL;

	if ( ! pFnIsValidArmor )
		pFnIsValidArmor = (UFunction*) UObject::GObjObjects()->Data[ 54576 ];

	UNowGFXHudScene_execIsValidArmor_Parms IsValidArmor_Parms;
	memcpy ( &IsValidArmor_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &IsValidArmor_Parms.sSlot, &sSlot, 0xC );

	pFnIsValidArmor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidArmor, &IsValidArmor_Parms, NULL );

	pFnIsValidArmor->FunctionFlags |= 0x400;

	return IsValidArmor_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetPreviewStringArmor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSlot                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSupportMatGuid                ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetPreviewStringArmor ( struct FString sStyle, struct FString sSlot, struct FString sPrimaryMatGuid, struct FString sSupportMatGuid )
{
	static UFunction* pFnGetPreviewStringArmor = NULL;

	if ( ! pFnGetPreviewStringArmor )
		pFnGetPreviewStringArmor = (UFunction*) UObject::GObjObjects()->Data[ 54570 ];

	UNowGFXHudScene_execGetPreviewStringArmor_Parms GetPreviewStringArmor_Parms;
	memcpy ( &GetPreviewStringArmor_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &GetPreviewStringArmor_Parms.sSlot, &sSlot, 0xC );
	memcpy ( &GetPreviewStringArmor_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &GetPreviewStringArmor_Parms.sSupportMatGuid, &sSupportMatGuid, 0xC );

	pFnGetPreviewStringArmor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreviewStringArmor, &GetPreviewStringArmor_Parms, NULL );

	pFnGetPreviewStringArmor->FunctionFlags |= 0x400;

	return GetPreviewStringArmor_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.LogArmorArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::LogArmorArrays ( )
{
	static UFunction* pFnLogArmorArrays = NULL;

	if ( ! pFnLogArmorArrays )
		pFnLogArmorArrays = (UFunction*) UObject::GObjObjects()->Data[ 54569 ];

	UNowGFXHudScene_execLogArmorArrays_Parms LogArmorArrays_Parms;

	pFnLogArmorArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogArmorArrays, &LogArmorArrays_Parms, NULL );

	pFnLogArmorArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitArmorArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitArmorArrays ( )
{
	static UFunction* pFnInitArmorArrays = NULL;

	if ( ! pFnInitArmorArrays )
		pFnInitArmorArrays = (UFunction*) UObject::GObjObjects()->Data[ 54568 ];

	UNowGFXHudScene_execInitArmorArrays_Parms InitArmorArrays_Parms;

	pFnInitArmorArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitArmorArrays, &InitArmorArrays_Parms, NULL );

	pFnInitArmorArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showShieldCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showShieldCrafting ( )
{
	static UFunction* pFnshowShieldCrafting = NULL;

	if ( ! pFnshowShieldCrafting )
		pFnshowShieldCrafting = (UFunction*) UObject::GObjObjects()->Data[ 54567 ];

	UNowGFXHudScene_execshowShieldCrafting_Parms showShieldCrafting_Parms;

	this->ProcessEvent ( pFnshowShieldCrafting, &showShieldCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetIDFromShieldType
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetIDFromShieldType ( struct FString sName )
{
	static UFunction* pFnGetIDFromShieldType = NULL;

	if ( ! pFnGetIDFromShieldType )
		pFnGetIDFromShieldType = (UFunction*) UObject::GObjObjects()->Data[ 54563 ];

	UNowGFXHudScene_eventGetIDFromShieldType_Parms GetIDFromShieldType_Parms;
	memcpy ( &GetIDFromShieldType_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetIDFromShieldType, &GetIDFromShieldType_Parms, NULL );

	return GetIDFromShieldType_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetIDFromShieldFrame
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetIDFromShieldFrame ( struct FString sName )
{
	static UFunction* pFnGetIDFromShieldFrame = NULL;

	if ( ! pFnGetIDFromShieldFrame )
		pFnGetIDFromShieldFrame = (UFunction*) UObject::GObjObjects()->Data[ 54559 ];

	UNowGFXHudScene_eventGetIDFromShieldFrame_Parms GetIDFromShieldFrame_Parms;
	memcpy ( &GetIDFromShieldFrame_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetIDFromShieldFrame, &GetIDFromShieldFrame_Parms, NULL );

	return GetIDFromShieldFrame_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromShieldFrame
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromShieldFrame ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromShieldFrame = NULL;

	if ( ! pFnGetSendNameFromShieldFrame )
		pFnGetSendNameFromShieldFrame = (UFunction*) UObject::GObjObjects()->Data[ 54555 ];

	UNowGFXHudScene_eventGetSendNameFromShieldFrame_Parms GetSendNameFromShieldFrame_Parms;
	memcpy ( &GetSendNameFromShieldFrame_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromShieldFrame, &GetSendNameFromShieldFrame_Parms, NULL );

	return GetSendNameFromShieldFrame_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromShieldType
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromShieldType ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromShieldType = NULL;

	if ( ! pFnGetSendNameFromShieldType )
		pFnGetSendNameFromShieldType = (UFunction*) UObject::GObjObjects()->Data[ 54551 ];

	UNowGFXHudScene_eventGetSendNameFromShieldType_Parms GetSendNameFromShieldType_Parms;
	memcpy ( &GetSendNameFromShieldType_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromShieldType, &GetSendNameFromShieldType_Parms, NULL );

	return GetSendNameFromShieldType_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CraftShield
// [0x00020002] 
// Parameters infos:
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFrame                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCoatMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFrameMatGuid                  ( CPF_Parm | CPF_NeedCtorLink )
// float                          fPrimaryDensity                ( CPF_Parm )
// float                          fCoatDensity                   ( CPF_Parm )
// struct FString                 sCustomName                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRecipe                        ( CPF_Parm )

void UNowGFXHudScene::CraftShield ( struct FString sStyle, struct FString sFrame, struct FString sPrimaryMatGuid, struct FString sCoatMatGuid, struct FString sFrameMatGuid, float fPrimaryDensity, float fCoatDensity, struct FString sCustomName, unsigned long bRecipe )
{
	static UFunction* pFnCraftShield = NULL;

	if ( ! pFnCraftShield )
		pFnCraftShield = (UFunction*) UObject::GObjObjects()->Data[ 54537 ];

	UNowGFXHudScene_execCraftShield_Parms CraftShield_Parms;
	memcpy ( &CraftShield_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &CraftShield_Parms.sFrame, &sFrame, 0xC );
	memcpy ( &CraftShield_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &CraftShield_Parms.sCoatMatGuid, &sCoatMatGuid, 0xC );
	memcpy ( &CraftShield_Parms.sFrameMatGuid, &sFrameMatGuid, 0xC );
	CraftShield_Parms.fPrimaryDensity = fPrimaryDensity;
	CraftShield_Parms.fCoatDensity = fCoatDensity;
	memcpy ( &CraftShield_Parms.sCustomName, &sCustomName, 0xC );
	CraftShield_Parms.bRecipe = bRecipe;

	this->ProcessEvent ( pFnCraftShield, &CraftShield_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SortByShieldFrameID
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftShieldFrame      A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftShieldFrame      B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByShieldFrameID ( struct FsCraftShieldFrame A, struct FsCraftShieldFrame B )
{
	static UFunction* pFnSortByShieldFrameID = NULL;

	if ( ! pFnSortByShieldFrameID )
		pFnSortByShieldFrameID = (UFunction*) UObject::GObjObjects()->Data[ 52936 ];

	UNowGFXHudScene_execSortByShieldFrameID_Parms SortByShieldFrameID_Parms;
	memcpy ( &SortByShieldFrameID_Parms.A, &A, 0x1C );
	memcpy ( &SortByShieldFrameID_Parms.B, &B, 0x1C );

	this->ProcessEvent ( pFnSortByShieldFrameID, &SortByShieldFrameID_Parms, NULL );

	return SortByShieldFrameID_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SortByShieldTypeID
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftShieldType       A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftShieldType       B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByShieldTypeID ( struct FsCraftShieldType A, struct FsCraftShieldType B )
{
	static UFunction* pFnSortByShieldTypeID = NULL;

	if ( ! pFnSortByShieldTypeID )
		pFnSortByShieldTypeID = (UFunction*) UObject::GObjObjects()->Data[ 52938 ];

	UNowGFXHudScene_execSortByShieldTypeID_Parms SortByShieldTypeID_Parms;
	memcpy ( &SortByShieldTypeID_Parms.A, &A, 0x1C );
	memcpy ( &SortByShieldTypeID_Parms.B, &B, 0x1C );

	this->ProcessEvent ( pFnSortByShieldTypeID, &SortByShieldTypeID_Parms, NULL );

	return SortByShieldTypeID_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.ChangedCraftShield
// [0x00020002] 
// Parameters infos:
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFrame                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCoatMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFrameMatGuid                  ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangedCraftShield ( struct FString sStyle, struct FString sFrame, struct FString sPrimaryMatGuid, struct FString sCoatMatGuid, struct FString sFrameMatGuid )
{
	static UFunction* pFnChangedCraftShield = NULL;

	if ( ! pFnChangedCraftShield )
		pFnChangedCraftShield = (UFunction*) UObject::GObjObjects()->Data[ 54525 ];

	UNowGFXHudScene_execChangedCraftShield_Parms ChangedCraftShield_Parms;
	memcpy ( &ChangedCraftShield_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &ChangedCraftShield_Parms.sFrame, &sFrame, 0xC );
	memcpy ( &ChangedCraftShield_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &ChangedCraftShield_Parms.sCoatMatGuid, &sCoatMatGuid, 0xC );
	memcpy ( &ChangedCraftShield_Parms.sFrameMatGuid, &sFrameMatGuid, 0xC );

	this->ProcessEvent ( pFnChangedCraftShield, &ChangedCraftShield_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateShieldFrames
// [0x00020002] 
// Parameters infos:
// int                            iShieldType                    ( CPF_Parm )

void UNowGFXHudScene::UpdateShieldFrames ( int iShieldType )
{
	static UFunction* pFnUpdateShieldFrames = NULL;

	if ( ! pFnUpdateShieldFrames )
		pFnUpdateShieldFrames = (UFunction*) UObject::GObjObjects()->Data[ 54522 ];

	UNowGFXHudScene_execUpdateShieldFrames_Parms UpdateShieldFrames_Parms;
	UpdateShieldFrames_Parms.iShieldType = iShieldType;

	this->ProcessEvent ( pFnUpdateShieldFrames, &UpdateShieldFrames_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeShieldArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeShieldArrays ( )
{
	static UFunction* pFnFinalizeShieldArrays = NULL;

	if ( ! pFnFinalizeShieldArrays )
		pFnFinalizeShieldArrays = (UFunction*) UObject::GObjObjects()->Data[ 54520 ];

	UNowGFXHudScene_eventFinalizeShieldArrays_Parms FinalizeShieldArrays_Parms;

	this->ProcessEvent ( pFnFinalizeShieldArrays, &FinalizeShieldArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddShieldFrame
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iShieldType                    ( CPF_Parm )

void UNowGFXHudScene::eventAddShieldFrame ( struct FString sLabelName, struct FString sSendName, int iShieldType )
{
	static UFunction* pFnAddShieldFrame = NULL;

	if ( ! pFnAddShieldFrame )
		pFnAddShieldFrame = (UFunction*) UObject::GObjObjects()->Data[ 54515 ];

	UNowGFXHudScene_eventAddShieldFrame_Parms AddShieldFrame_Parms;
	memcpy ( &AddShieldFrame_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddShieldFrame_Parms.sSendName, &sSendName, 0xC );
	AddShieldFrame_Parms.iShieldType = iShieldType;

	this->ProcessEvent ( pFnAddShieldFrame, &AddShieldFrame_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddShieldStyle
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iShieldType                    ( CPF_Parm )

void UNowGFXHudScene::eventAddShieldStyle ( struct FString sLabelName, struct FString sSendName, int iShieldType )
{
	static UFunction* pFnAddShieldStyle = NULL;

	if ( ! pFnAddShieldStyle )
		pFnAddShieldStyle = (UFunction*) UObject::GObjObjects()->Data[ 54510 ];

	UNowGFXHudScene_eventAddShieldStyle_Parms AddShieldStyle_Parms;
	memcpy ( &AddShieldStyle_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddShieldStyle_Parms.sSendName, &sSendName, 0xC );
	AddShieldStyle_Parms.iShieldType = iShieldType;

	this->ProcessEvent ( pFnAddShieldStyle, &AddShieldStyle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitShieldCrafting
// [0x00024002] 
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::InitShieldCrafting ( unsigned long bReInit )
{
	static UFunction* pFnInitShieldCrafting = NULL;

	if ( ! pFnInitShieldCrafting )
		pFnInitShieldCrafting = (UFunction*) UObject::GObjObjects()->Data[ 54508 ];

	UNowGFXHudScene_execInitShieldCrafting_Parms InitShieldCrafting_Parms;
	InitShieldCrafting_Parms.bReInit = bReInit;

	this->ProcessEvent ( pFnInitShieldCrafting, &InitShieldCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetPreviewStringShield
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFrame                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCoatMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFrameMatGuid                  ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetPreviewStringShield ( struct FString sStyle, struct FString sFrame, struct FString sPrimaryMatGuid, struct FString sCoatMatGuid, struct FString sFrameMatGuid )
{
	static UFunction* pFnGetPreviewStringShield = NULL;

	if ( ! pFnGetPreviewStringShield )
		pFnGetPreviewStringShield = (UFunction*) UObject::GObjObjects()->Data[ 54501 ];

	UNowGFXHudScene_execGetPreviewStringShield_Parms GetPreviewStringShield_Parms;
	memcpy ( &GetPreviewStringShield_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &GetPreviewStringShield_Parms.sFrame, &sFrame, 0xC );
	memcpy ( &GetPreviewStringShield_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &GetPreviewStringShield_Parms.sCoatMatGuid, &sCoatMatGuid, 0xC );
	memcpy ( &GetPreviewStringShield_Parms.sFrameMatGuid, &sFrameMatGuid, 0xC );

	pFnGetPreviewStringShield->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreviewStringShield, &GetPreviewStringShield_Parms, NULL );

	pFnGetPreviewStringShield->FunctionFlags |= 0x400;

	return GetPreviewStringShield_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitShieldArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitShieldArrays ( )
{
	static UFunction* pFnInitShieldArrays = NULL;

	if ( ! pFnInitShieldArrays )
		pFnInitShieldArrays = (UFunction*) UObject::GObjObjects()->Data[ 54500 ];

	UNowGFXHudScene_execInitShieldArrays_Parms InitShieldArrays_Parms;

	pFnInitShieldArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitShieldArrays, &InitShieldArrays_Parms, NULL );

	pFnInitShieldArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeExtraction
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeExtraction ( )
{
	static UFunction* pFncloseExtraction = NULL;

	if ( ! pFncloseExtraction )
		pFncloseExtraction = (UFunction*) UObject::GObjObjects()->Data[ 54499 ];

	UNowGFXHudScene_execcloseExtraction_Parms closeExtraction_Parms;

	this->ProcessEvent ( pFncloseExtraction, &closeExtraction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showExtraction
// [0x00020002] 
// Parameters infos:
// struct FString                 sWorkbench                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bAllowCatalyst                 ( CPF_Parm )

void UNowGFXHudScene::showExtraction ( struct FString sWorkbench, unsigned long bAllowCatalyst )
{
	static UFunction* pFnshowExtraction = NULL;

	if ( ! pFnshowExtraction )
		pFnshowExtraction = (UFunction*) UObject::GObjObjects()->Data[ 54496 ];

	UNowGFXHudScene_execshowExtraction_Parms showExtraction_Parms;
	memcpy ( &showExtraction_Parms.sWorkbench, &sWorkbench, 0xC );
	showExtraction_Parms.bAllowCatalyst = bAllowCatalyst;

	this->ProcessEvent ( pFnshowExtraction, &showExtraction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ExtractItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCatalystMatGuid               ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ExtractItem ( struct FString sPrimaryMatGuid, struct FString sCatalystMatGuid )
{
	static UFunction* pFnExtractItem = NULL;

	if ( ! pFnExtractItem )
		pFnExtractItem = (UFunction*) UObject::GObjObjects()->Data[ 54492 ];

	UNowGFXHudScene_execExtractItem_Parms ExtractItem_Parms;
	memcpy ( &ExtractItem_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &ExtractItem_Parms.sCatalystMatGuid, &sCatalystMatGuid, 0xC );

	this->ProcessEvent ( pFnExtractItem, &ExtractItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeExtractionArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeExtractionArrays ( )
{
	static UFunction* pFnFinalizeExtractionArrays = NULL;

	if ( ! pFnFinalizeExtractionArrays )
		pFnFinalizeExtractionArrays = (UFunction*) UObject::GObjObjects()->Data[ 54490 ];

	UNowGFXHudScene_eventFinalizeExtractionArrays_Parms FinalizeExtractionArrays_Parms;

	this->ProcessEvent ( pFnFinalizeExtractionArrays, &FinalizeExtractionArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitExtraction
// [0x00024002] 
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::InitExtraction ( unsigned long bReInit )
{
	static UFunction* pFnInitExtraction = NULL;

	if ( ! pFnInitExtraction )
		pFnInitExtraction = (UFunction*) UObject::GObjObjects()->Data[ 54488 ];

	UNowGFXHudScene_execInitExtraction_Parms InitExtraction_Parms;
	InitExtraction_Parms.bReInit = bReInit;

	this->ProcessEvent ( pFnInitExtraction, &InitExtraction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitExtractionArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitExtractionArrays ( )
{
	static UFunction* pFnInitExtractionArrays = NULL;

	if ( ! pFnInitExtractionArrays )
		pFnInitExtractionArrays = (UFunction*) UObject::GObjObjects()->Data[ 54487 ];

	UNowGFXHudScene_execInitExtractionArrays_Parms InitExtractionArrays_Parms;

	pFnInitExtractionArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitExtractionArrays, &InitExtractionArrays_Parms, NULL );

	pFnInitExtractionArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeRefining
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeRefining ( )
{
	static UFunction* pFncloseRefining = NULL;

	if ( ! pFncloseRefining )
		pFncloseRefining = (UFunction*) UObject::GObjObjects()->Data[ 54486 ];

	UNowGFXHudScene_execcloseRefining_Parms closeRefining_Parms;

	this->ProcessEvent ( pFncloseRefining, &closeRefining_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showRefining
// [0x00020002] 
// Parameters infos:
// struct FString                 sWorkbench                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bAllowCatalyst                 ( CPF_Parm )

void UNowGFXHudScene::showRefining ( struct FString sWorkbench, unsigned long bAllowCatalyst )
{
	static UFunction* pFnshowRefining = NULL;

	if ( ! pFnshowRefining )
		pFnshowRefining = (UFunction*) UObject::GObjObjects()->Data[ 54483 ];

	UNowGFXHudScene_execshowRefining_Parms showRefining_Parms;
	memcpy ( &showRefining_Parms.sWorkbench, &sWorkbench, 0xC );
	showRefining_Parms.bAllowCatalyst = bAllowCatalyst;

	this->ProcessEvent ( pFnshowRefining, &showRefining_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RefineItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCatalystMatGuidA              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCatalystMatGuidB              ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RefineItem ( struct FString sPrimaryMatGuid, struct FString sCatalystMatGuidA, struct FString sCatalystMatGuidB )
{
	static UFunction* pFnRefineItem = NULL;

	if ( ! pFnRefineItem )
		pFnRefineItem = (UFunction*) UObject::GObjObjects()->Data[ 54475 ];

	UNowGFXHudScene_execRefineItem_Parms RefineItem_Parms;
	memcpy ( &RefineItem_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &RefineItem_Parms.sCatalystMatGuidA, &sCatalystMatGuidA, 0xC );
	memcpy ( &RefineItem_Parms.sCatalystMatGuidB, &sCatalystMatGuidB, 0xC );

	this->ProcessEvent ( pFnRefineItem, &RefineItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeRefiningArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeRefiningArrays ( )
{
	static UFunction* pFnFinalizeRefiningArrays = NULL;

	if ( ! pFnFinalizeRefiningArrays )
		pFnFinalizeRefiningArrays = (UFunction*) UObject::GObjObjects()->Data[ 54473 ];

	UNowGFXHudScene_eventFinalizeRefiningArrays_Parms FinalizeRefiningArrays_Parms;

	this->ProcessEvent ( pFnFinalizeRefiningArrays, &FinalizeRefiningArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitRefining
// [0x00024002] 
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::InitRefining ( unsigned long bReInit )
{
	static UFunction* pFnInitRefining = NULL;

	if ( ! pFnInitRefining )
		pFnInitRefining = (UFunction*) UObject::GObjObjects()->Data[ 54471 ];

	UNowGFXHudScene_execInitRefining_Parms InitRefining_Parms;
	InitRefining_Parms.bReInit = bReInit;

	this->ProcessEvent ( pFnInitRefining, &InitRefining_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitRefiningArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitRefiningArrays ( )
{
	static UFunction* pFnInitRefiningArrays = NULL;

	if ( ! pFnInitRefiningArrays )
		pFnInitRefiningArrays = (UFunction*) UObject::GObjObjects()->Data[ 54470 ];

	UNowGFXHudScene_execInitRefiningArrays_Parms InitRefiningArrays_Parms;

	pFnInitRefiningArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitRefiningArrays, &InitRefiningArrays_Parms, NULL );

	pFnInitRefiningArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitSkinning
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitSkinning ( )
{
	static UFunction* pFnInitSkinning = NULL;

	if ( ! pFnInitSkinning )
		pFnInitSkinning = (UFunction*) UObject::GObjObjects()->Data[ 54469 ];

	UNowGFXHudScene_execInitSkinning_Parms InitSkinning_Parms;

	this->ProcessEvent ( pFnInitSkinning, &InitSkinning_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closePotionMaking
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closePotionMaking ( )
{
	static UFunction* pFnclosePotionMaking = NULL;

	if ( ! pFnclosePotionMaking )
		pFnclosePotionMaking = (UFunction*) UObject::GObjObjects()->Data[ 54468 ];

	UNowGFXHudScene_execclosePotionMaking_Parms closePotionMaking_Parms;

	this->ProcessEvent ( pFnclosePotionMaking, &closePotionMaking_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showPotionMaking
// [0x00020002] 
// Parameters infos:
// struct FString                 sWorkbench                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNumSlots                      ( CPF_Parm )

void UNowGFXHudScene::showPotionMaking ( struct FString sWorkbench, int iNumSlots )
{
	static UFunction* pFnshowPotionMaking = NULL;

	if ( ! pFnshowPotionMaking )
		pFnshowPotionMaking = (UFunction*) UObject::GObjObjects()->Data[ 54465 ];

	UNowGFXHudScene_execshowPotionMaking_Parms showPotionMaking_Parms;
	memcpy ( &showPotionMaking_Parms.sWorkbench, &sWorkbench, 0xC );
	showPotionMaking_Parms.iNumSlots = iNumSlots;

	this->ProcessEvent ( pFnshowPotionMaking, &showPotionMaking_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CraftPotion
// [0x00020002] 
// Parameters infos:
// struct FString                 sToolGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid1               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid2               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid3               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid4               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid5               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid6               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid7               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid8               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid9               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid10              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid11              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid12              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid13              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid14              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::CraftPotion ( struct FString sToolGuid, struct FString sIngredientGuid1, struct FString sIngredientGuid2, struct FString sIngredientGuid3, struct FString sIngredientGuid4, struct FString sIngredientGuid5, struct FString sIngredientGuid6, struct FString sIngredientGuid7, struct FString sIngredientGuid8, struct FString sIngredientGuid9, struct FString sIngredientGuid10, struct FString sIngredientGuid11, struct FString sIngredientGuid12, struct FString sIngredientGuid13, struct FString sIngredientGuid14, struct FString sName )
{
	static UFunction* pFnCraftPotion = NULL;

	if ( ! pFnCraftPotion )
		pFnCraftPotion = (UFunction*) UObject::GObjObjects()->Data[ 54448 ];

	UNowGFXHudScene_execCraftPotion_Parms CraftPotion_Parms;
	memcpy ( &CraftPotion_Parms.sToolGuid, &sToolGuid, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid1, &sIngredientGuid1, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid2, &sIngredientGuid2, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid3, &sIngredientGuid3, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid4, &sIngredientGuid4, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid5, &sIngredientGuid5, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid6, &sIngredientGuid6, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid7, &sIngredientGuid7, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid8, &sIngredientGuid8, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid9, &sIngredientGuid9, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid10, &sIngredientGuid10, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid11, &sIngredientGuid11, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid12, &sIngredientGuid12, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid13, &sIngredientGuid13, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid14, &sIngredientGuid14, 0xC );
	memcpy ( &CraftPotion_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnCraftPotion, &CraftPotion_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizePotionMakingArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizePotionMakingArrays ( )
{
	static UFunction* pFnFinalizePotionMakingArrays = NULL;

	if ( ! pFnFinalizePotionMakingArrays )
		pFnFinalizePotionMakingArrays = (UFunction*) UObject::GObjObjects()->Data[ 54446 ];

	UNowGFXHudScene_eventFinalizePotionMakingArrays_Parms FinalizePotionMakingArrays_Parms;

	this->ProcessEvent ( pFnFinalizePotionMakingArrays, &FinalizePotionMakingArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPotionMaking
// [0x00024002] 
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::InitPotionMaking ( unsigned long bReInit )
{
	static UFunction* pFnInitPotionMaking = NULL;

	if ( ! pFnInitPotionMaking )
		pFnInitPotionMaking = (UFunction*) UObject::GObjObjects()->Data[ 54444 ];

	UNowGFXHudScene_execInitPotionMaking_Parms InitPotionMaking_Parms;
	InitPotionMaking_Parms.bReInit = bReInit;

	this->ProcessEvent ( pFnInitPotionMaking, &InitPotionMaking_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetSlotNumbersPotionMaking
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowGFXHudScene::GetSlotNumbersPotionMaking ( )
{
	static UFunction* pFnGetSlotNumbersPotionMaking = NULL;

	if ( ! pFnGetSlotNumbersPotionMaking )
		pFnGetSlotNumbersPotionMaking = (UFunction*) UObject::GObjObjects()->Data[ 54442 ];

	UNowGFXHudScene_execGetSlotNumbersPotionMaking_Parms GetSlotNumbersPotionMaking_Parms;

	pFnGetSlotNumbersPotionMaking->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotNumbersPotionMaking, &GetSlotNumbersPotionMaking_Parms, NULL );

	pFnGetSlotNumbersPotionMaking->FunctionFlags |= 0x400;

	return GetSlotNumbersPotionMaking_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SendCraftPotion
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sToolGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid1               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid2               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid3               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid4               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid5               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid6               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid7               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid8               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid9               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid10              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid11              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid12              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid13              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid14              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRecipe                        ( CPF_Parm )

void UNowGFXHudScene::SendCraftPotion ( struct FString sToolGuid, struct FString sIngredientGuid1, struct FString sIngredientGuid2, struct FString sIngredientGuid3, struct FString sIngredientGuid4, struct FString sIngredientGuid5, struct FString sIngredientGuid6, struct FString sIngredientGuid7, struct FString sIngredientGuid8, struct FString sIngredientGuid9, struct FString sIngredientGuid10, struct FString sIngredientGuid11, struct FString sIngredientGuid12, struct FString sIngredientGuid13, struct FString sIngredientGuid14, struct FString sName, unsigned long bRecipe )
{
	static UFunction* pFnSendCraftPotion = NULL;

	if ( ! pFnSendCraftPotion )
		pFnSendCraftPotion = (UFunction*) UObject::GObjObjects()->Data[ 54424 ];

	UNowGFXHudScene_execSendCraftPotion_Parms SendCraftPotion_Parms;
	memcpy ( &SendCraftPotion_Parms.sToolGuid, &sToolGuid, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid1, &sIngredientGuid1, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid2, &sIngredientGuid2, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid3, &sIngredientGuid3, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid4, &sIngredientGuid4, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid5, &sIngredientGuid5, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid6, &sIngredientGuid6, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid7, &sIngredientGuid7, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid8, &sIngredientGuid8, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid9, &sIngredientGuid9, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid10, &sIngredientGuid10, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid11, &sIngredientGuid11, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid12, &sIngredientGuid12, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid13, &sIngredientGuid13, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid14, &sIngredientGuid14, 0xC );
	memcpy ( &SendCraftPotion_Parms.sName, &sName, 0xC );
	SendCraftPotion_Parms.bRecipe = bRecipe;

	pFnSendCraftPotion->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendCraftPotion, &SendCraftPotion_Parms, NULL );

	pFnSendCraftPotion->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitPotionMakingArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitPotionMakingArrays ( )
{
	static UFunction* pFnInitPotionMakingArrays = NULL;

	if ( ! pFnInitPotionMakingArrays )
		pFnInitPotionMakingArrays = (UFunction*) UObject::GObjObjects()->Data[ 54423 ];

	UNowGFXHudScene_execInitPotionMakingArrays_Parms InitPotionMakingArrays_Parms;

	pFnInitPotionMakingArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitPotionMakingArrays, &InitPotionMakingArrays_Parms, NULL );

	pFnInitPotionMakingArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeCooking
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeCooking ( )
{
	static UFunction* pFncloseCooking = NULL;

	if ( ! pFncloseCooking )
		pFncloseCooking = (UFunction*) UObject::GObjObjects()->Data[ 54422 ];

	UNowGFXHudScene_execcloseCooking_Parms closeCooking_Parms;

	this->ProcessEvent ( pFncloseCooking, &closeCooking_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showCooking
// [0x00020002] 
// Parameters infos:
// struct FString                 sWorkbench                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSlots                         ( CPF_Parm )

void UNowGFXHudScene::showCooking ( struct FString sWorkbench, int iSlots )
{
	static UFunction* pFnshowCooking = NULL;

	if ( ! pFnshowCooking )
		pFnshowCooking = (UFunction*) UObject::GObjObjects()->Data[ 54419 ];

	UNowGFXHudScene_execshowCooking_Parms showCooking_Parms;
	memcpy ( &showCooking_Parms.sWorkbench, &sWorkbench, 0xC );
	showCooking_Parms.iSlots = iSlots;

	this->ProcessEvent ( pFnshowCooking, &showCooking_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CookItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sToolGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid1               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid2               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid3               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid4               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid5               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid6               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid7               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid8               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid9               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid10              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid11              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid12              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid13              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid14              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::CookItem ( struct FString sToolGuid, struct FString sIngredientGuid1, struct FString sIngredientGuid2, struct FString sIngredientGuid3, struct FString sIngredientGuid4, struct FString sIngredientGuid5, struct FString sIngredientGuid6, struct FString sIngredientGuid7, struct FString sIngredientGuid8, struct FString sIngredientGuid9, struct FString sIngredientGuid10, struct FString sIngredientGuid11, struct FString sIngredientGuid12, struct FString sIngredientGuid13, struct FString sIngredientGuid14, struct FString sName )
{
	static UFunction* pFnCookItem = NULL;

	if ( ! pFnCookItem )
		pFnCookItem = (UFunction*) UObject::GObjObjects()->Data[ 54402 ];

	UNowGFXHudScene_execCookItem_Parms CookItem_Parms;
	memcpy ( &CookItem_Parms.sToolGuid, &sToolGuid, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid1, &sIngredientGuid1, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid2, &sIngredientGuid2, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid3, &sIngredientGuid3, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid4, &sIngredientGuid4, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid5, &sIngredientGuid5, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid6, &sIngredientGuid6, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid7, &sIngredientGuid7, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid8, &sIngredientGuid8, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid9, &sIngredientGuid9, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid10, &sIngredientGuid10, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid11, &sIngredientGuid11, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid12, &sIngredientGuid12, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid13, &sIngredientGuid13, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid14, &sIngredientGuid14, 0xC );
	memcpy ( &CookItem_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnCookItem, &CookItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeCookingArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeCookingArrays ( )
{
	static UFunction* pFnFinalizeCookingArrays = NULL;

	if ( ! pFnFinalizeCookingArrays )
		pFnFinalizeCookingArrays = (UFunction*) UObject::GObjObjects()->Data[ 54400 ];

	UNowGFXHudScene_eventFinalizeCookingArrays_Parms FinalizeCookingArrays_Parms;

	this->ProcessEvent ( pFnFinalizeCookingArrays, &FinalizeCookingArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitCooking
// [0x00024002] 
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::InitCooking ( unsigned long bReInit )
{
	static UFunction* pFnInitCooking = NULL;

	if ( ! pFnInitCooking )
		pFnInitCooking = (UFunction*) UObject::GObjObjects()->Data[ 54398 ];

	UNowGFXHudScene_execInitCooking_Parms InitCooking_Parms;
	InitCooking_Parms.bReInit = bReInit;

	this->ProcessEvent ( pFnInitCooking, &InitCooking_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetSlotNumbersCooking
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowGFXHudScene::GetSlotNumbersCooking ( )
{
	static UFunction* pFnGetSlotNumbersCooking = NULL;

	if ( ! pFnGetSlotNumbersCooking )
		pFnGetSlotNumbersCooking = (UFunction*) UObject::GObjObjects()->Data[ 54396 ];

	UNowGFXHudScene_execGetSlotNumbersCooking_Parms GetSlotNumbersCooking_Parms;

	pFnGetSlotNumbersCooking->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotNumbersCooking, &GetSlotNumbersCooking_Parms, NULL );

	pFnGetSlotNumbersCooking->FunctionFlags |= 0x400;

	return GetSlotNumbersCooking_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SendCookItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sToolGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid1               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid2               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid3               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid4               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid5               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid6               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid7               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid8               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid9               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid10              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid11              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid12              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid13              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid14              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRecipe                        ( CPF_Parm )

void UNowGFXHudScene::SendCookItem ( struct FString sToolGuid, struct FString sIngredientGuid1, struct FString sIngredientGuid2, struct FString sIngredientGuid3, struct FString sIngredientGuid4, struct FString sIngredientGuid5, struct FString sIngredientGuid6, struct FString sIngredientGuid7, struct FString sIngredientGuid8, struct FString sIngredientGuid9, struct FString sIngredientGuid10, struct FString sIngredientGuid11, struct FString sIngredientGuid12, struct FString sIngredientGuid13, struct FString sIngredientGuid14, struct FString sName, unsigned long bRecipe )
{
	static UFunction* pFnSendCookItem = NULL;

	if ( ! pFnSendCookItem )
		pFnSendCookItem = (UFunction*) UObject::GObjObjects()->Data[ 54378 ];

	UNowGFXHudScene_execSendCookItem_Parms SendCookItem_Parms;
	memcpy ( &SendCookItem_Parms.sToolGuid, &sToolGuid, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid1, &sIngredientGuid1, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid2, &sIngredientGuid2, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid3, &sIngredientGuid3, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid4, &sIngredientGuid4, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid5, &sIngredientGuid5, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid6, &sIngredientGuid6, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid7, &sIngredientGuid7, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid8, &sIngredientGuid8, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid9, &sIngredientGuid9, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid10, &sIngredientGuid10, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid11, &sIngredientGuid11, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid12, &sIngredientGuid12, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid13, &sIngredientGuid13, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid14, &sIngredientGuid14, 0xC );
	memcpy ( &SendCookItem_Parms.sName, &sName, 0xC );
	SendCookItem_Parms.bRecipe = bRecipe;

	pFnSendCookItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendCookItem, &SendCookItem_Parms, NULL );

	pFnSendCookItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitCookingArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitCookingArrays ( )
{
	static UFunction* pFnInitCookingArrays = NULL;

	if ( ! pFnInitCookingArrays )
		pFnInitCookingArrays = (UFunction*) UObject::GObjObjects()->Data[ 54377 ];

	UNowGFXHudScene_execInitCookingArrays_Parms InitCookingArrays_Parms;

	pFnInitCookingArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitCookingArrays, &InitCookingArrays_Parms, NULL );

	pFnInitCookingArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeDyeTub
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeDyeTub ( )
{
	static UFunction* pFncloseDyeTub = NULL;

	if ( ! pFncloseDyeTub )
		pFncloseDyeTub = (UFunction*) UObject::GObjObjects()->Data[ 54376 ];

	UNowGFXHudScene_execcloseDyeTub_Parms closeDyeTub_Parms;

	this->ProcessEvent ( pFncloseDyeTub, &closeDyeTub_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addDye
// [0x00020002] 
// Parameters infos:
// int                            iColorRed                      ( CPF_Parm )
// int                            iColorGreen                    ( CPF_Parm )
// int                            iColorBlue                     ( CPF_Parm )
// int                            iColorAlpha                    ( CPF_Parm )

void UNowGFXHudScene::addDye ( int iColorRed, int iColorGreen, int iColorBlue, int iColorAlpha )
{
	static UFunction* pFnaddDye = NULL;

	if ( ! pFnaddDye )
		pFnaddDye = (UFunction*) UObject::GObjObjects()->Data[ 54371 ];

	UNowGFXHudScene_execaddDye_Parms addDye_Parms;
	addDye_Parms.iColorRed = iColorRed;
	addDye_Parms.iColorGreen = iColorGreen;
	addDye_Parms.iColorBlue = iColorBlue;
	addDye_Parms.iColorAlpha = iColorAlpha;

	this->ProcessEvent ( pFnaddDye, &addDye_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showDyeTub
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iColorRed                      ( CPF_Parm )
// int                            iColorGreen                    ( CPF_Parm )
// int                            iColorBlue                     ( CPF_Parm )
// int                            iColorAlpha                    ( CPF_Parm )
// int                            iDyeCount                      ( CPF_Parm )
// struct FString                 sDyeableSlots                  ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showDyeTub ( struct FString sGuid, int iColorRed, int iColorGreen, int iColorBlue, int iColorAlpha, int iDyeCount, struct FString sDyeableSlots )
{
	static UFunction* pFnshowDyeTub = NULL;

	if ( ! pFnshowDyeTub )
		pFnshowDyeTub = (UFunction*) UObject::GObjObjects()->Data[ 54363 ];

	UNowGFXHudScene_execshowDyeTub_Parms showDyeTub_Parms;
	memcpy ( &showDyeTub_Parms.sGuid, &sGuid, 0xC );
	showDyeTub_Parms.iColorRed = iColorRed;
	showDyeTub_Parms.iColorGreen = iColorGreen;
	showDyeTub_Parms.iColorBlue = iColorBlue;
	showDyeTub_Parms.iColorAlpha = iColorAlpha;
	showDyeTub_Parms.iDyeCount = iDyeCount;
	memcpy ( &showDyeTub_Parms.sDyeableSlots, &sDyeableSlots, 0xC );

	this->ProcessEvent ( pFnshowDyeTub, &showDyeTub_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeDyeArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeDyeArrays ( )
{
	static UFunction* pFnFinalizeDyeArrays = NULL;

	if ( ! pFnFinalizeDyeArrays )
		pFnFinalizeDyeArrays = (UFunction*) UObject::GObjObjects()->Data[ 54361 ];

	UNowGFXHudScene_eventFinalizeDyeArrays_Parms FinalizeDyeArrays_Parms;

	this->ProcessEvent ( pFnFinalizeDyeArrays, &FinalizeDyeArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DyeItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iColorRed                      ( CPF_Parm )
// int                            iColorGreen                    ( CPF_Parm )
// int                            iColorBlue                     ( CPF_Parm )
// int                            iColorAlpha                    ( CPF_Parm )

void UNowGFXHudScene::DyeItem ( struct FString sItemGuid, int iColorRed, int iColorGreen, int iColorBlue, int iColorAlpha )
{
	static UFunction* pFnDyeItem = NULL;

	if ( ! pFnDyeItem )
		pFnDyeItem = (UFunction*) UObject::GObjObjects()->Data[ 54355 ];

	UNowGFXHudScene_execDyeItem_Parms DyeItem_Parms;
	memcpy ( &DyeItem_Parms.sItemGuid, &sItemGuid, 0xC );
	DyeItem_Parms.iColorRed = iColorRed;
	DyeItem_Parms.iColorGreen = iColorGreen;
	DyeItem_Parms.iColorBlue = iColorBlue;
	DyeItem_Parms.iColorAlpha = iColorAlpha;

	this->ProcessEvent ( pFnDyeItem, &DyeItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddDyeToTub
// [0x00020002] 
// Parameters infos:
// struct FString                 sTubGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sDyeGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddDyeToTub ( struct FString sTubGuid, struct FString sDyeGuid )
{
	static UFunction* pFnAddDyeToTub = NULL;

	if ( ! pFnAddDyeToTub )
		pFnAddDyeToTub = (UFunction*) UObject::GObjObjects()->Data[ 54348 ];

	UNowGFXHudScene_execAddDyeToTub_Parms AddDyeToTub_Parms;
	memcpy ( &AddDyeToTub_Parms.sTubGuid, &sTubGuid, 0xC );
	memcpy ( &AddDyeToTub_Parms.sDyeGuid, &sDyeGuid, 0xC );

	this->ProcessEvent ( pFnAddDyeToTub, &AddDyeToTub_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitDyeTub
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitDyeTub ( )
{
	static UFunction* pFnInitDyeTub = NULL;

	if ( ! pFnInitDyeTub )
		pFnInitDyeTub = (UFunction*) UObject::GObjObjects()->Data[ 54347 ];

	UNowGFXHudScene_execInitDyeTub_Parms InitDyeTub_Parms;

	this->ProcessEvent ( pFnInitDyeTub, &InitDyeTub_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ClosedDyeTub
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::ClosedDyeTub ( )
{
	static UFunction* pFnClosedDyeTub = NULL;

	if ( ! pFnClosedDyeTub )
		pFnClosedDyeTub = (UFunction*) UObject::GObjObjects()->Data[ 54346 ];

	UNowGFXHudScene_execClosedDyeTub_Parms ClosedDyeTub_Parms;

	pFnClosedDyeTub->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClosedDyeTub, &ClosedDyeTub_Parms, NULL );

	pFnClosedDyeTub->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendDyeItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iColorRed                      ( CPF_Parm )
// int                            iColorGreen                    ( CPF_Parm )
// int                            iColorBlue                     ( CPF_Parm )
// int                            iColorAlpha                    ( CPF_Parm )

void UNowGFXHudScene::SendDyeItem ( struct FString sItemGuid, int iColorRed, int iColorGreen, int iColorBlue, int iColorAlpha )
{
	static UFunction* pFnSendDyeItem = NULL;

	if ( ! pFnSendDyeItem )
		pFnSendDyeItem = (UFunction*) UObject::GObjObjects()->Data[ 54340 ];

	UNowGFXHudScene_execSendDyeItem_Parms SendDyeItem_Parms;
	memcpy ( &SendDyeItem_Parms.sItemGuid, &sItemGuid, 0xC );
	SendDyeItem_Parms.iColorRed = iColorRed;
	SendDyeItem_Parms.iColorGreen = iColorGreen;
	SendDyeItem_Parms.iColorBlue = iColorBlue;
	SendDyeItem_Parms.iColorAlpha = iColorAlpha;

	pFnSendDyeItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendDyeItem, &SendDyeItem_Parms, NULL );

	pFnSendDyeItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendUseDye
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sDyeGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendUseDye ( struct FString sDyeGuid )
{
	static UFunction* pFnSendUseDye = NULL;

	if ( ! pFnSendUseDye )
		pFnSendUseDye = (UFunction*) UObject::GObjObjects()->Data[ 54338 ];

	UNowGFXHudScene_execSendUseDye_Parms SendUseDye_Parms;
	memcpy ( &SendUseDye_Parms.sDyeGuid, &sDyeGuid, 0xC );

	pFnSendUseDye->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendUseDye, &SendUseDye_Parms, NULL );

	pFnSendUseDye->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetColorFromItem
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            R                              ( CPF_Parm | CPF_OutParm )
// int                            G                              ( CPF_Parm | CPF_OutParm )
// int                            B                              ( CPF_Parm | CPF_OutParm )
// int                            A                              ( CPF_Parm | CPF_OutParm )

void UNowGFXHudScene::GetColorFromItem ( struct FString sGuid, int* R, int* G, int* B, int* A )
{
	static UFunction* pFnGetColorFromItem = NULL;

	if ( ! pFnGetColorFromItem )
		pFnGetColorFromItem = (UFunction*) UObject::GObjObjects()->Data[ 54332 ];

	UNowGFXHudScene_execGetColorFromItem_Parms GetColorFromItem_Parms;
	memcpy ( &GetColorFromItem_Parms.sGuid, &sGuid, 0xC );

	pFnGetColorFromItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetColorFromItem, &GetColorFromItem_Parms, NULL );

	pFnGetColorFromItem->FunctionFlags |= 0x400;

	if ( R )
		*R = GetColorFromItem_Parms.R;

	if ( G )
		*G = GetColorFromItem_Parms.G;

	if ( B )
		*B = GetColorFromItem_Parms.B;

	if ( A )
		*A = GetColorFromItem_Parms.A;
};

// Function NowGame.NowGFXHudScene.InitDyeArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitDyeArrays ( )
{
	static UFunction* pFnInitDyeArrays = NULL;

	if ( ! pFnInitDyeArrays )
		pFnInitDyeArrays = (UFunction*) UObject::GObjObjects()->Data[ 54331 ];

	UNowGFXHudScene_execInitDyeArrays_Parms InitDyeArrays_Parms;

	pFnInitDyeArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitDyeArrays, &InitDyeArrays_Parms, NULL );

	pFnInitDyeArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AssignBagID
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sBagGuid                       ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventAssignBagID ( struct FString sBagGuid )
{
	static UFunction* pFnAssignBagID = NULL;

	if ( ! pFnAssignBagID )
		pFnAssignBagID = (UFunction*) UObject::GObjObjects()->Data[ 54324 ];

	UNowGFXHudScene_eventAssignBagID_Parms AssignBagID_Parms;
	memcpy ( &AssignBagID_Parms.sBagGuid, &sBagGuid, 0xC );

	this->ProcessEvent ( pFnAssignBagID, &AssignBagID_Parms, NULL );

	return AssignBagID_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CloseBag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventCloseBag ( struct FString sGuid )
{
	static UFunction* pFnCloseBag = NULL;

	if ( ! pFnCloseBag )
		pFnCloseBag = (UFunction*) UObject::GObjObjects()->Data[ 54321 ];

	UNowGFXHudScene_eventCloseBag_Parms CloseBag_Parms;
	memcpy ( &CloseBag_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnCloseBag, &CloseBag_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveOpenBagByIndex
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::eventRemoveOpenBagByIndex ( int iIndex )
{
	static UFunction* pFnRemoveOpenBagByIndex = NULL;

	if ( ! pFnRemoveOpenBagByIndex )
		pFnRemoveOpenBagByIndex = (UFunction*) UObject::GObjObjects()->Data[ 54318 ];

	UNowGFXHudScene_eventRemoveOpenBagByIndex_Parms RemoveOpenBagByIndex_Parms;
	RemoveOpenBagByIndex_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnRemoveOpenBagByIndex, &RemoveOpenBagByIndex_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.IsBagOpen
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventIsBagOpen ( struct FString sGuid )
{
	static UFunction* pFnIsBagOpen = NULL;

	if ( ! pFnIsBagOpen )
		pFnIsBagOpen = (UFunction*) UObject::GObjObjects()->Data[ 54314 ];

	UNowGFXHudScene_eventIsBagOpen_Parms IsBagOpen_Parms;
	memcpy ( &IsBagOpen_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnIsBagOpen, &IsBagOpen_Parms, NULL );

	return IsBagOpen_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitBag
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sBagGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBagName                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            iBagSize                       ( CPF_Parm )
// unsigned long                  bTrack                         ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::eventInitBag ( struct FString sBagGuid, struct FString sBagName, int iBagSize, unsigned long bTrack )
{
	static UFunction* pFnInitBag = NULL;

	if ( ! pFnInitBag )
		pFnInitBag = (UFunction*) UObject::GObjObjects()->Data[ 54306 ];

	UNowGFXHudScene_eventInitBag_Parms InitBag_Parms;
	memcpy ( &InitBag_Parms.sBagGuid, &sBagGuid, 0xC );
	memcpy ( &InitBag_Parms.sBagName, &sBagName, 0xC );
	InitBag_Parms.iBagSize = iBagSize;
	InitBag_Parms.bTrack = bTrack;

	this->ProcessEvent ( pFnInitBag, &InitBag_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillBag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sBagGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            iDepositID                     ( CPF_Parm )
// int                            iBagSize                       ( CPF_Parm )

void UNowGFXHudScene::FillBag ( struct FString sBagGuid, int iDepositID, int iBagSize )
{
	static UFunction* pFnFillBag = NULL;

	if ( ! pFnFillBag )
		pFnFillBag = (UFunction*) UObject::GObjObjects()->Data[ 54302 ];

	UNowGFXHudScene_execFillBag_Parms FillBag_Parms;
	memcpy ( &FillBag_Parms.sBagGuid, &sBagGuid, 0xC );
	FillBag_Parms.iDepositID = iDepositID;
	FillBag_Parms.iBagSize = iBagSize;

	pFnFillBag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillBag, &FillBag_Parms, NULL );

	pFnFillBag->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.ClosePilfering
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventClosePilfering ( )
{
	static UFunction* pFnClosePilfering = NULL;

	if ( ! pFnClosePilfering )
		pFnClosePilfering = (UFunction*) UObject::GObjObjects()->Data[ 54301 ];

	UNowGFXHudScene_eventClosePilfering_Parms ClosePilfering_Parms;

	this->ProcessEvent ( pFnClosePilfering, &ClosePilfering_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPilfering
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitPilfering ( )
{
	static UFunction* pFnInitPilfering = NULL;

	if ( ! pFnInitPilfering )
		pFnInitPilfering = (UFunction*) UObject::GObjObjects()->Data[ 54300 ];

	UNowGFXHudScene_eventInitPilfering_Parms InitPilfering_Parms;

	this->ProcessEvent ( pFnInitPilfering, &InitPilfering_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ClearPilferingInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::ClearPilferingInventory ( )
{
	static UFunction* pFnClearPilferingInventory = NULL;

	if ( ! pFnClearPilferingInventory )
		pFnClearPilferingInventory = (UFunction*) UObject::GObjObjects()->Data[ 54299 ];

	UNowGFXHudScene_execClearPilferingInventory_Parms ClearPilferingInventory_Parms;

	pFnClearPilferingInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearPilferingInventory, &ClearPilferingInventory_Parms, NULL );

	pFnClearPilferingInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeCombine
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeCombine ( )
{
	static UFunction* pFncloseCombine = NULL;

	if ( ! pFncloseCombine )
		pFncloseCombine = (UFunction*) UObject::GObjObjects()->Data[ 54298 ];

	UNowGFXHudScene_execcloseCombine_Parms closeCombine_Parms;

	this->ProcessEvent ( pFncloseCombine, &closeCombine_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showCombine
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showCombine ( )
{
	static UFunction* pFnshowCombine = NULL;

	if ( ! pFnshowCombine )
		pFnshowCombine = (UFunction*) UObject::GObjObjects()->Data[ 54297 ];

	UNowGFXHudScene_execshowCombine_Parms showCombine_Parms;

	this->ProcessEvent ( pFnshowCombine, &showCombine_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeCombineItemsArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeCombineItemsArrays ( )
{
	static UFunction* pFnFinalizeCombineItemsArrays = NULL;

	if ( ! pFnFinalizeCombineItemsArrays )
		pFnFinalizeCombineItemsArrays = (UFunction*) UObject::GObjObjects()->Data[ 54295 ];

	UNowGFXHudScene_eventFinalizeCombineItemsArrays_Parms FinalizeCombineItemsArrays_Parms;

	this->ProcessEvent ( pFnFinalizeCombineItemsArrays, &FinalizeCombineItemsArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CombineItems
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemGuid1                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sItemGuid2                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::CombineItems ( struct FString sItemGuid1, struct FString sItemGuid2 )
{
	static UFunction* pFnCombineItems = NULL;

	if ( ! pFnCombineItems )
		pFnCombineItems = (UFunction*) UObject::GObjObjects()->Data[ 54292 ];

	UNowGFXHudScene_execCombineItems_Parms CombineItems_Parms;
	memcpy ( &CombineItems_Parms.sItemGuid1, &sItemGuid1, 0xC );
	memcpy ( &CombineItems_Parms.sItemGuid2, &sItemGuid2, 0xC );

	this->ProcessEvent ( pFnCombineItems, &CombineItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitCombineItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitCombineItems ( )
{
	static UFunction* pFnInitCombineItems = NULL;

	if ( ! pFnInitCombineItems )
		pFnInitCombineItems = (UFunction*) UObject::GObjObjects()->Data[ 54291 ];

	UNowGFXHudScene_execInitCombineItems_Parms InitCombineItems_Parms;

	this->ProcessEvent ( pFnInitCombineItems, &InitCombineItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitCombineItemsArray
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitCombineItemsArray ( )
{
	static UFunction* pFnInitCombineItemsArray = NULL;

	if ( ! pFnInitCombineItemsArray )
		pFnInitCombineItemsArray = (UFunction*) UObject::GObjObjects()->Data[ 54290 ];

	UNowGFXHudScene_execInitCombineItemsArray_Parms InitCombineItemsArray_Parms;

	pFnInitCombineItemsArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitCombineItemsArray, &InitCombineItemsArray_Parms, NULL );

	pFnInitCombineItemsArray->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendCombineItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemA                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sItemB                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendCombineItems ( struct FString sItemA, struct FString sItemB )
{
	static UFunction* pFnSendCombineItems = NULL;

	if ( ! pFnSendCombineItems )
		pFnSendCombineItems = (UFunction*) UObject::GObjObjects()->Data[ 54287 ];

	UNowGFXHudScene_execSendCombineItems_Parms SendCombineItems_Parms;
	memcpy ( &SendCombineItems_Parms.sItemA, &sItemA, 0xC );
	memcpy ( &SendCombineItems_Parms.sItemB, &sItemB, 0xC );

	pFnSendCombineItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendCombineItems, &SendCombineItems_Parms, NULL );

	pFnSendCombineItems->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.renderBrokerTree
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::renderBrokerTree ( )
{
	static UFunction* pFnrenderBrokerTree = NULL;

	if ( ! pFnrenderBrokerTree )
		pFnrenderBrokerTree = (UFunction*) UObject::GObjObjects()->Data[ 54286 ];

	UNowGFXHudScene_execrenderBrokerTree_Parms renderBrokerTree_Parms;

	this->ProcessEvent ( pFnrenderBrokerTree, &renderBrokerTree_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addBrokerLocation
// [0x00020002] 
// Parameters infos:
// struct FString                 sLocation                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            locX                           ( CPF_Parm )
// int                            locY                           ( CPF_Parm )

void UNowGFXHudScene::addBrokerLocation ( struct FString sLocation, int locX, int locY )
{
	static UFunction* pFnaddBrokerLocation = NULL;

	if ( ! pFnaddBrokerLocation )
		pFnaddBrokerLocation = (UFunction*) UObject::GObjObjects()->Data[ 54282 ];

	UNowGFXHudScene_execaddBrokerLocation_Parms addBrokerLocation_Parms;
	memcpy ( &addBrokerLocation_Parms.sLocation, &sLocation, 0xC );
	addBrokerLocation_Parms.locX = locX;
	addBrokerLocation_Parms.locY = locY;

	this->ProcessEvent ( pFnaddBrokerLocation, &addBrokerLocation_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showMap
// [0x00020000] 
// Parameters infos:
// int                            locX                           ( CPF_Parm )
// int                            locY                           ( CPF_Parm )
// int                            destX                          ( CPF_Parm )
// int                            destY                          ( CPF_Parm )

void UNowGFXHudScene::showMap ( int locX, int locY, int destX, int destY )
{
	static UFunction* pFnshowMap = NULL;

	if ( ! pFnshowMap )
		pFnshowMap = (UFunction*) UObject::GObjObjects()->Data[ 54277 ];

	UNowGFXHudScene_execshowMap_Parms showMap_Parms;
	showMap_Parms.locX = locX;
	showMap_Parms.locY = locY;
	showMap_Parms.destX = destX;
	showMap_Parms.destY = destY;

	this->ProcessEvent ( pFnshowMap, &showMap_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearBrokerLocations
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearBrokerLocations ( )
{
	static UFunction* pFnclearBrokerLocations = NULL;

	if ( ! pFnclearBrokerLocations )
		pFnclearBrokerLocations = (UFunction*) UObject::GObjObjects()->Data[ 54276 ];

	UNowGFXHudScene_execclearBrokerLocations_Parms clearBrokerLocations_Parms;

	this->ProcessEvent ( pFnclearBrokerLocations, &clearBrokerLocations_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeBroker
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeBroker ( )
{
	static UFunction* pFncloseBroker = NULL;

	if ( ! pFncloseBroker )
		pFncloseBroker = (UFunction*) UObject::GObjObjects()->Data[ 54275 ];

	UNowGFXHudScene_execcloseBroker_Parms closeBroker_Parms;

	this->ProcessEvent ( pFncloseBroker, &closeBroker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.refreshBrokerSelling
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::refreshBrokerSelling ( )
{
	static UFunction* pFnrefreshBrokerSelling = NULL;

	if ( ! pFnrefreshBrokerSelling )
		pFnrefreshBrokerSelling = (UFunction*) UObject::GObjObjects()->Data[ 54274 ];

	UNowGFXHudScene_execrefreshBrokerSelling_Parms refreshBrokerSelling_Parms;

	this->ProcessEvent ( pFnrefreshBrokerSelling, &refreshBrokerSelling_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.refreshBrokerItems
// [0x00020002] 
// Parameters infos:
// int                            iCurrentPage                   ( CPF_Parm )
// unsigned long                  bNextPage                      ( CPF_Parm )

void UNowGFXHudScene::refreshBrokerItems ( int iCurrentPage, unsigned long bNextPage )
{
	static UFunction* pFnrefreshBrokerItems = NULL;

	if ( ! pFnrefreshBrokerItems )
		pFnrefreshBrokerItems = (UFunction*) UObject::GObjObjects()->Data[ 54271 ];

	UNowGFXHudScene_execrefreshBrokerItems_Parms refreshBrokerItems_Parms;
	refreshBrokerItems_Parms.iCurrentPage = iCurrentPage;
	refreshBrokerItems_Parms.bNextPage = bNextPage;

	this->ProcessEvent ( pFnrefreshBrokerItems, &refreshBrokerItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearBrokerSelling
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearBrokerSelling ( )
{
	static UFunction* pFnclearBrokerSelling = NULL;

	if ( ! pFnclearBrokerSelling )
		pFnclearBrokerSelling = (UFunction*) UObject::GObjObjects()->Data[ 54270 ];

	UNowGFXHudScene_execclearBrokerSelling_Parms clearBrokerSelling_Parms;

	this->ProcessEvent ( pFnclearBrokerSelling, &clearBrokerSelling_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearBrokerItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearBrokerItems ( )
{
	static UFunction* pFnclearBrokerItems = NULL;

	if ( ! pFnclearBrokerItems )
		pFnclearBrokerItems = (UFunction*) UObject::GObjObjects()->Data[ 54269 ];

	UNowGFXHudScene_execclearBrokerItems_Parms clearBrokerItems_Parms;

	this->ProcessEvent ( pFnclearBrokerItems, &clearBrokerItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addBrokerSetItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSetGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddBrokerSetItem ( struct FString sGuid, struct FString sData, struct FString sSetGuid )
{
	static UFunction* pFnaddBrokerSetItem = NULL;

	if ( ! pFnaddBrokerSetItem )
		pFnaddBrokerSetItem = (UFunction*) UObject::GObjObjects()->Data[ 54265 ];

	UNowGFXHudScene_eventaddBrokerSetItem_Parms addBrokerSetItem_Parms;
	memcpy ( &addBrokerSetItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &addBrokerSetItem_Parms.sData, &sData, 0xC );
	memcpy ( &addBrokerSetItem_Parms.sSetGuid, &sSetGuid, 0xC );

	this->ProcessEvent ( pFnaddBrokerSetItem, &addBrokerSetItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addBrokerOrder
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddBrokerOrder ( struct FString sGuid, struct FString sData )
{
	static UFunction* pFnaddBrokerOrder = NULL;

	if ( ! pFnaddBrokerOrder )
		pFnaddBrokerOrder = (UFunction*) UObject::GObjObjects()->Data[ 54262 ];

	UNowGFXHudScene_eventaddBrokerOrder_Parms addBrokerOrder_Parms;
	memcpy ( &addBrokerOrder_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &addBrokerOrder_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnaddBrokerOrder, &addBrokerOrder_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addBrokerSelling
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddBrokerSelling ( struct FString sGuid, struct FString sData )
{
	static UFunction* pFnaddBrokerSelling = NULL;

	if ( ! pFnaddBrokerSelling )
		pFnaddBrokerSelling = (UFunction*) UObject::GObjObjects()->Data[ 54259 ];

	UNowGFXHudScene_eventaddBrokerSelling_Parms addBrokerSelling_Parms;
	memcpy ( &addBrokerSelling_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &addBrokerSelling_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnaddBrokerSelling, &addBrokerSelling_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addBrokerItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddBrokerItem ( struct FString sGuid, struct FString sData )
{
	static UFunction* pFnaddBrokerItem = NULL;

	if ( ! pFnaddBrokerItem )
		pFnaddBrokerItem = (UFunction*) UObject::GObjObjects()->Data[ 54256 ];

	UNowGFXHudScene_eventaddBrokerItem_Parms addBrokerItem_Parms;
	memcpy ( &addBrokerItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &addBrokerItem_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnaddBrokerItem, &addBrokerItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearBrokerCategories
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearBrokerCategories ( )
{
	static UFunction* pFnclearBrokerCategories = NULL;

	if ( ! pFnclearBrokerCategories )
		pFnclearBrokerCategories = (UFunction*) UObject::GObjObjects()->Data[ 54255 ];

	UNowGFXHudScene_execclearBrokerCategories_Parms clearBrokerCategories_Parms;

	this->ProcessEvent ( pFnclearBrokerCategories, &clearBrokerCategories_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addBrokerCategory
// [0x00020002] 
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FString                 sDisplayName                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            iParent                        ( CPF_Parm )

void UNowGFXHudScene::addBrokerCategory ( int iID, struct FString sDisplayName, int iParent )
{
	static UFunction* pFnaddBrokerCategory = NULL;

	if ( ! pFnaddBrokerCategory )
		pFnaddBrokerCategory = (UFunction*) UObject::GObjObjects()->Data[ 54251 ];

	UNowGFXHudScene_execaddBrokerCategory_Parms addBrokerCategory_Parms;
	addBrokerCategory_Parms.iID = iID;
	memcpy ( &addBrokerCategory_Parms.sDisplayName, &sDisplayName, 0xC );
	addBrokerCategory_Parms.iParent = iParent;

	this->ProcessEvent ( pFnaddBrokerCategory, &addBrokerCategory_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showBroker
// [0x00020002] 
// Parameters infos:
// struct FString                 sCityName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSellFeePercent                ( CPF_Parm )
// unsigned long                  bVendorMode                    ( CPF_Parm )
// unsigned long                  bVendorOwner                   ( CPF_Parm )
// int                            iForcedCategory                ( CPF_Parm )
// struct FString                 sBrokerLink                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showBroker ( struct FString sCityName, int iSellFeePercent, unsigned long bVendorMode, unsigned long bVendorOwner, int iForcedCategory, struct FString sBrokerLink )
{
	static UFunction* pFnshowBroker = NULL;

	if ( ! pFnshowBroker )
		pFnshowBroker = (UFunction*) UObject::GObjObjects()->Data[ 54244 ];

	UNowGFXHudScene_execshowBroker_Parms showBroker_Parms;
	memcpy ( &showBroker_Parms.sCityName, &sCityName, 0xC );
	showBroker_Parms.iSellFeePercent = iSellFeePercent;
	showBroker_Parms.bVendorMode = bVendorMode;
	showBroker_Parms.bVendorOwner = bVendorOwner;
	showBroker_Parms.iForcedCategory = iForcedCategory;
	memcpy ( &showBroker_Parms.sBrokerLink, &sBrokerLink, 0xC );

	this->ProcessEvent ( pFnshowBroker, &showBroker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetBrokerSetItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sContentGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBagGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GetBrokerSetItem ( struct FString sGuid, struct FString sContentGuid, struct FString sData, struct FString sBagGuid )
{
	static UFunction* pFnGetBrokerSetItem = NULL;

	if ( ! pFnGetBrokerSetItem )
		pFnGetBrokerSetItem = (UFunction*) UObject::GObjObjects()->Data[ 54239 ];

	UNowGFXHudScene_execGetBrokerSetItem_Parms GetBrokerSetItem_Parms;
	memcpy ( &GetBrokerSetItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &GetBrokerSetItem_Parms.sContentGuid, &sContentGuid, 0xC );
	memcpy ( &GetBrokerSetItem_Parms.sData, &sData, 0xC );
	memcpy ( &GetBrokerSetItem_Parms.sBagGuid, &sBagGuid, 0xC );

	this->ProcessEvent ( pFnGetBrokerSetItem, &GetBrokerSetItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetBrokerItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sContentGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iType                          ( CPF_Parm )

void UNowGFXHudScene::GetBrokerItem ( struct FString sGuid, struct FString sContentGuid, struct FString sData, int iType )
{
	static UFunction* pFnGetBrokerItem = NULL;

	if ( ! pFnGetBrokerItem )
		pFnGetBrokerItem = (UFunction*) UObject::GObjObjects()->Data[ 54234 ];

	UNowGFXHudScene_execGetBrokerItem_Parms GetBrokerItem_Parms;
	memcpy ( &GetBrokerItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &GetBrokerItem_Parms.sContentGuid, &sContentGuid, 0xC );
	memcpy ( &GetBrokerItem_Parms.sData, &sData, 0xC );
	GetBrokerItem_Parms.iType = iType;

	this->ProcessEvent ( pFnGetBrokerItem, &GetBrokerItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillBuyOrder
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::FillBuyOrder ( struct FString sGuid )
{
	static UFunction* pFnFillBuyOrder = NULL;

	if ( ! pFnFillBuyOrder )
		pFnFillBuyOrder = (UFunction*) UObject::GObjObjects()->Data[ 54232 ];

	UNowGFXHudScene_execFillBuyOrder_Parms FillBuyOrder_Parms;
	memcpy ( &FillBuyOrder_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnFillBuyOrder, &FillBuyOrder_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillOrderNewWindow
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::FillOrderNewWindow ( struct FString sGuid )
{
	static UFunction* pFnFillOrderNewWindow = NULL;

	if ( ! pFnFillOrderNewWindow )
		pFnFillOrderNewWindow = (UFunction*) UObject::GObjObjects()->Data[ 54230 ];

	UNowGFXHudScene_execFillOrderNewWindow_Parms FillOrderNewWindow_Parms;
	memcpy ( &FillOrderNewWindow_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnFillOrderNewWindow, &FillOrderNewWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.NewBuyOrder
// [0x00020002] 
// Parameters infos:
// int                            iType                          ( CPF_Parm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iQuantity                      ( CPF_Parm )
// int                            iCost                          ( CPF_Parm )
// struct FString                 sAvatar                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sDescription                   ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::NewBuyOrder ( int iType, struct FString sGuid, int iQuantity, int iCost, struct FString sAvatar, struct FString sDescription )
{
	static UFunction* pFnNewBuyOrder = NULL;

	if ( ! pFnNewBuyOrder )
		pFnNewBuyOrder = (UFunction*) UObject::GObjObjects()->Data[ 54223 ];

	UNowGFXHudScene_execNewBuyOrder_Parms NewBuyOrder_Parms;
	NewBuyOrder_Parms.iType = iType;
	memcpy ( &NewBuyOrder_Parms.sGuid, &sGuid, 0xC );
	NewBuyOrder_Parms.iQuantity = iQuantity;
	NewBuyOrder_Parms.iCost = iCost;
	memcpy ( &NewBuyOrder_Parms.sAvatar, &sAvatar, 0xC );
	memcpy ( &NewBuyOrder_Parms.sDescription, &sDescription, 0xC );

	this->ProcessEvent ( pFnNewBuyOrder, &NewBuyOrder_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BrokerSellItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// int                            iDuration                      ( CPF_Parm )
// struct FString                 sDesc                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSetName                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BrokerSellItem ( struct FString sItemGuid, int iCost, int iDuration, struct FString sDesc, struct FString sSetName )
{
	static UFunction* pFnBrokerSellItem = NULL;

	if ( ! pFnBrokerSellItem )
		pFnBrokerSellItem = (UFunction*) UObject::GObjObjects()->Data[ 54217 ];

	UNowGFXHudScene_execBrokerSellItem_Parms BrokerSellItem_Parms;
	memcpy ( &BrokerSellItem_Parms.sItemGuid, &sItemGuid, 0xC );
	BrokerSellItem_Parms.iCost = iCost;
	BrokerSellItem_Parms.iDuration = iDuration;
	memcpy ( &BrokerSellItem_Parms.sDesc, &sDesc, 0xC );
	memcpy ( &BrokerSellItem_Parms.sSetName, &sSetName, 0xC );

	this->ProcessEvent ( pFnBrokerSellItem, &BrokerSellItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BrokerCancelOrder
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BrokerCancelOrder ( struct FString sItemGuid )
{
	static UFunction* pFnBrokerCancelOrder = NULL;

	if ( ! pFnBrokerCancelOrder )
		pFnBrokerCancelOrder = (UFunction*) UObject::GObjObjects()->Data[ 54215 ];

	UNowGFXHudScene_execBrokerCancelOrder_Parms BrokerCancelOrder_Parms;
	memcpy ( &BrokerCancelOrder_Parms.sItemGuid, &sItemGuid, 0xC );

	this->ProcessEvent ( pFnBrokerCancelOrder, &BrokerCancelOrder_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BrokerCancelItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BrokerCancelItem ( struct FString sItemGuid )
{
	static UFunction* pFnBrokerCancelItem = NULL;

	if ( ! pFnBrokerCancelItem )
		pFnBrokerCancelItem = (UFunction*) UObject::GObjObjects()->Data[ 54213 ];

	UNowGFXHudScene_execBrokerCancelItem_Parms BrokerCancelItem_Parms;
	memcpy ( &BrokerCancelItem_Parms.sItemGuid, &sItemGuid, 0xC );

	this->ProcessEvent ( pFnBrokerCancelItem, &BrokerCancelItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BrokerBuyItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BrokerBuyItem ( struct FString sItemGuid )
{
	static UFunction* pFnBrokerBuyItem = NULL;

	if ( ! pFnBrokerBuyItem )
		pFnBrokerBuyItem = (UFunction*) UObject::GObjObjects()->Data[ 54211 ];

	UNowGFXHudScene_execBrokerBuyItem_Parms BrokerBuyItem_Parms;
	memcpy ( &BrokerBuyItem_Parms.sItemGuid, &sItemGuid, 0xC );

	this->ProcessEvent ( pFnBrokerBuyItem, &BrokerBuyItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RefreshBrokerSell
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::RefreshBrokerSell ( )
{
	static UFunction* pFnRefreshBrokerSell = NULL;

	if ( ! pFnRefreshBrokerSell )
		pFnRefreshBrokerSell = (UFunction*) UObject::GObjObjects()->Data[ 54210 ];

	UNowGFXHudScene_execRefreshBrokerSell_Parms RefreshBrokerSell_Parms;

	this->ProcessEvent ( pFnRefreshBrokerSell, &RefreshBrokerSell_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetPendingRefreshBrokerSell
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventSetPendingRefreshBrokerSell ( )
{
	static UFunction* pFnSetPendingRefreshBrokerSell = NULL;

	if ( ! pFnSetPendingRefreshBrokerSell )
		pFnSetPendingRefreshBrokerSell = (UFunction*) UObject::GObjObjects()->Data[ 54209 ];

	UNowGFXHudScene_eventSetPendingRefreshBrokerSell_Parms SetPendingRefreshBrokerSell_Parms;

	this->ProcessEvent ( pFnSetPendingRefreshBrokerSell, &SetPendingRefreshBrokerSell_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RefreshBrokerBuy
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::RefreshBrokerBuy ( )
{
	static UFunction* pFnRefreshBrokerBuy = NULL;

	if ( ! pFnRefreshBrokerBuy )
		pFnRefreshBrokerBuy = (UFunction*) UObject::GObjObjects()->Data[ 54208 ];

	UNowGFXHudScene_execRefreshBrokerBuy_Parms RefreshBrokerBuy_Parms;

	this->ProcessEvent ( pFnRefreshBrokerBuy, &RefreshBrokerBuy_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetPendingRefreshBrokerBuy
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventSetPendingRefreshBrokerBuy ( )
{
	static UFunction* pFnSetPendingRefreshBrokerBuy = NULL;

	if ( ! pFnSetPendingRefreshBrokerBuy )
		pFnSetPendingRefreshBrokerBuy = (UFunction*) UObject::GObjObjects()->Data[ 54207 ];

	UNowGFXHudScene_eventSetPendingRefreshBrokerBuy_Parms SetPendingRefreshBrokerBuy_Parms;

	this->ProcessEvent ( pFnSetPendingRefreshBrokerBuy, &SetPendingRefreshBrokerBuy_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetLocationFromID
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iID                            ( CPF_Parm )

struct FString UNowGFXHudScene::eventGetLocationFromID ( int iID )
{
	static UFunction* pFnGetLocationFromID = NULL;

	if ( ! pFnGetLocationFromID )
		pFnGetLocationFromID = (UFunction*) UObject::GObjObjects()->Data[ 54203 ];

	UNowGFXHudScene_eventGetLocationFromID_Parms GetLocationFromID_Parms;
	GetLocationFromID_Parms.iID = iID;

	this->ProcessEvent ( pFnGetLocationFromID, &GetLocationFromID_Parms, NULL );

	return GetLocationFromID_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetIDFromLocation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sLocation                      ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetIDFromLocation ( struct FString sLocation )
{
	static UFunction* pFnGetIDFromLocation = NULL;

	if ( ! pFnGetIDFromLocation )
		pFnGetIDFromLocation = (UFunction*) UObject::GObjObjects()->Data[ 54198 ];

	UNowGFXHudScene_eventGetIDFromLocation_Parms GetIDFromLocation_Parms;
	memcpy ( &GetIDFromLocation_Parms.sLocation, &sLocation, 0xC );

	this->ProcessEvent ( pFnGetIDFromLocation, &GetIDFromLocation_Parms, NULL );

	return GetIDFromLocation_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitBrokerArrays
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitBrokerArrays ( )
{
	static UFunction* pFnInitBrokerArrays = NULL;

	if ( ! pFnInitBrokerArrays )
		pFnInitBrokerArrays = (UFunction*) UObject::GObjObjects()->Data[ 54192 ];

	UNowGFXHudScene_execInitBrokerArrays_Parms InitBrokerArrays_Parms;

	this->ProcessEvent ( pFnInitBrokerArrays, &InitBrokerArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitBrokerItemArrays
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitBrokerItemArrays ( )
{
	static UFunction* pFnInitBrokerItemArrays = NULL;

	if ( ! pFnInitBrokerItemArrays )
		pFnInitBrokerItemArrays = (UFunction*) UObject::GObjObjects()->Data[ 54190 ];

	UNowGFXHudScene_execInitBrokerItemArrays_Parms InitBrokerItemArrays_Parms;

	this->ProcessEvent ( pFnInitBrokerItemArrays, &InitBrokerItemArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddCategory
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iID                            ( CPF_Parm )
// int                            iParent                        ( CPF_Parm )

void UNowGFXHudScene::eventAddCategory ( struct FString sName, int iID, int iParent )
{
	static UFunction* pFnAddCategory = NULL;

	if ( ! pFnAddCategory )
		pFnAddCategory = (UFunction*) UObject::GObjObjects()->Data[ 54185 ];

	UNowGFXHudScene_eventAddCategory_Parms AddCategory_Parms;
	memcpy ( &AddCategory_Parms.sName, &sName, 0xC );
	AddCategory_Parms.iID = iID;
	AddCategory_Parms.iParent = iParent;

	this->ProcessEvent ( pFnAddCategory, &AddCategory_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddLocation
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddLocation ( int iID, struct FString sName )
{
	static UFunction* pFnAddLocation = NULL;

	if ( ! pFnAddLocation )
		pFnAddLocation = (UFunction*) UObject::GObjObjects()->Data[ 54181 ];

	UNowGFXHudScene_eventAddLocation_Parms AddLocation_Parms;
	AddLocation_Parms.iID = iID;
	memcpy ( &AddLocation_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnAddLocation, &AddLocation_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BrokerCollectIncome
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::BrokerCollectIncome ( )
{
	static UFunction* pFnBrokerCollectIncome = NULL;

	if ( ! pFnBrokerCollectIncome )
		pFnBrokerCollectIncome = (UFunction*) UObject::GObjObjects()->Data[ 54180 ];

	UNowGFXHudScene_execBrokerCollectIncome_Parms BrokerCollectIncome_Parms;

	this->ProcessEvent ( pFnBrokerCollectIncome, &BrokerCollectIncome_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitHouseTradeBroker
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitHouseTradeBroker ( )
{
	static UFunction* pFnInitHouseTradeBroker = NULL;

	if ( ! pFnInitHouseTradeBroker )
		pFnInitHouseTradeBroker = (UFunction*) UObject::GObjObjects()->Data[ 54179 ];

	UNowGFXHudScene_execInitHouseTradeBroker_Parms InitHouseTradeBroker_Parms;

	this->ProcessEvent ( pFnInitHouseTradeBroker, &InitHouseTradeBroker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitCategoryBroker
// [0x00020002] 
// Parameters infos:
// int                            iCategory                      ( CPF_Parm )

void UNowGFXHudScene::InitCategoryBroker ( int iCategory )
{
	static UFunction* pFnInitCategoryBroker = NULL;

	if ( ! pFnInitCategoryBroker )
		pFnInitCategoryBroker = (UFunction*) UObject::GObjObjects()->Data[ 54177 ];

	UNowGFXHudScene_execInitCategoryBroker_Parms InitCategoryBroker_Parms;
	InitCategoryBroker_Parms.iCategory = iCategory;

	this->ProcessEvent ( pFnInitCategoryBroker, &InitCategoryBroker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitBroker
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitBroker ( )
{
	static UFunction* pFnInitBroker = NULL;

	if ( ! pFnInitBroker )
		pFnInitBroker = (UFunction*) UObject::GObjObjects()->Data[ 54176 ];

	UNowGFXHudScene_execInitBroker_Parms InitBroker_Parms;

	this->ProcessEvent ( pFnInitBroker, &InitBroker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitBuyOrderItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitBuyOrderItems ( )
{
	static UFunction* pFnInitBuyOrderItems = NULL;

	if ( ! pFnInitBuyOrderItems )
		pFnInitBuyOrderItems = (UFunction*) UObject::GObjObjects()->Data[ 54175 ];

	UNowGFXHudScene_execInitBuyOrderItems_Parms InitBuyOrderItems_Parms;

	pFnInitBuyOrderItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitBuyOrderItems, &InitBuyOrderItems_Parms, NULL );

	pFnInitBuyOrderItems->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitCategoriesArray
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitCategoriesArray ( )
{
	static UFunction* pFnInitCategoriesArray = NULL;

	if ( ! pFnInitCategoriesArray )
		pFnInitCategoriesArray = (UFunction*) UObject::GObjObjects()->Data[ 54174 ];

	UNowGFXHudScene_execInitCategoriesArray_Parms InitCategoriesArray_Parms;

	pFnInitCategoriesArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitCategoriesArray, &InitCategoriesArray_Parms, NULL );

	pFnInitCategoriesArray->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitLocationArray
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitLocationArray ( )
{
	static UFunction* pFnInitLocationArray = NULL;

	if ( ! pFnInitLocationArray )
		pFnInitLocationArray = (UFunction*) UObject::GObjObjects()->Data[ 54173 ];

	UNowGFXHudScene_execInitLocationArray_Parms InitLocationArray_Parms;

	pFnInitLocationArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitLocationArray, &InitLocationArray_Parms, NULL );

	pFnInitLocationArray->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.ModifyTaxesBroker
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iTaxes                         ( CPF_Parm )

int UNowGFXHudScene::ModifyTaxesBroker ( int iTaxes )
{
	static UFunction* pFnModifyTaxesBroker = NULL;

	if ( ! pFnModifyTaxesBroker )
		pFnModifyTaxesBroker = (UFunction*) UObject::GObjObjects()->Data[ 54170 ];

	UNowGFXHudScene_execModifyTaxesBroker_Parms ModifyTaxesBroker_Parms;
	ModifyTaxesBroker_Parms.iTaxes = iTaxes;

	pFnModifyTaxesBroker->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnModifyTaxesBroker, &ModifyTaxesBroker_Parms, NULL );

	pFnModifyTaxesBroker->FunctionFlags |= 0x400;

	return ModifyTaxesBroker_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CanSellToBroker
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::CanSellToBroker ( )
{
	static UFunction* pFnCanSellToBroker = NULL;

	if ( ! pFnCanSellToBroker )
		pFnCanSellToBroker = (UFunction*) UObject::GObjObjects()->Data[ 54168 ];

	UNowGFXHudScene_execCanSellToBroker_Parms CanSellToBroker_Parms;

	pFnCanSellToBroker->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanSellToBroker, &CanSellToBroker_Parms, NULL );

	pFnCanSellToBroker->FunctionFlags |= 0x400;

	return CanSellToBroker_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GenerateAndAddBrokerItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sContentGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iType                          ( CPF_Parm )

void UNowGFXHudScene::GenerateAndAddBrokerItem ( struct FString sGuid, struct FString sContentGuid, struct FString sData, int iType )
{
	static UFunction* pFnGenerateAndAddBrokerItem = NULL;

	if ( ! pFnGenerateAndAddBrokerItem )
		pFnGenerateAndAddBrokerItem = (UFunction*) UObject::GObjObjects()->Data[ 54163 ];

	UNowGFXHudScene_execGenerateAndAddBrokerItem_Parms GenerateAndAddBrokerItem_Parms;
	memcpy ( &GenerateAndAddBrokerItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &GenerateAndAddBrokerItem_Parms.sContentGuid, &sContentGuid, 0xC );
	memcpy ( &GenerateAndAddBrokerItem_Parms.sData, &sData, 0xC );
	GenerateAndAddBrokerItem_Parms.iType = iType;

	pFnGenerateAndAddBrokerItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateAndAddBrokerItem, &GenerateAndAddBrokerItem_Parms, NULL );

	pFnGenerateAndAddBrokerItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendFillBuyOrder
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sOrderGuid                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendFillBuyOrder ( struct FString sOrderGuid, struct FString sItemGuid )
{
	static UFunction* pFnSendFillBuyOrder = NULL;

	if ( ! pFnSendFillBuyOrder )
		pFnSendFillBuyOrder = (UFunction*) UObject::GObjObjects()->Data[ 54160 ];

	UNowGFXHudScene_execSendFillBuyOrder_Parms SendFillBuyOrder_Parms;
	memcpy ( &SendFillBuyOrder_Parms.sOrderGuid, &sOrderGuid, 0xC );
	memcpy ( &SendFillBuyOrder_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnSendFillBuyOrder->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendFillBuyOrder, &SendFillBuyOrder_Parms, NULL );

	pFnSendFillBuyOrder->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendBuyOrder
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iType                          ( CPF_Parm )
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iQuantity                      ( CPF_Parm )
// int                            iCost                          ( CPF_Parm )
// struct FString                 sAvatar                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sDescription                   ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendBuyOrder ( int iType, struct FString sItemGuid, int iQuantity, int iCost, struct FString sAvatar, struct FString sDescription )
{
	static UFunction* pFnSendBuyOrder = NULL;

	if ( ! pFnSendBuyOrder )
		pFnSendBuyOrder = (UFunction*) UObject::GObjObjects()->Data[ 54153 ];

	UNowGFXHudScene_execSendBuyOrder_Parms SendBuyOrder_Parms;
	SendBuyOrder_Parms.iType = iType;
	memcpy ( &SendBuyOrder_Parms.sItemGuid, &sItemGuid, 0xC );
	SendBuyOrder_Parms.iQuantity = iQuantity;
	SendBuyOrder_Parms.iCost = iCost;
	memcpy ( &SendBuyOrder_Parms.sAvatar, &sAvatar, 0xC );
	memcpy ( &SendBuyOrder_Parms.sDescription, &sDescription, 0xC );

	pFnSendBuyOrder->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendBuyOrder, &SendBuyOrder_Parms, NULL );

	pFnSendBuyOrder->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendGetBuyItemInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendGetBuyItemInfo ( struct FString sItemGuid )
{
	static UFunction* pFnSendGetBuyItemInfo = NULL;

	if ( ! pFnSendGetBuyItemInfo )
		pFnSendGetBuyItemInfo = (UFunction*) UObject::GObjObjects()->Data[ 54151 ];

	UNowGFXHudScene_execSendGetBuyItemInfo_Parms SendGetBuyItemInfo_Parms;
	memcpy ( &SendGetBuyItemInfo_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnSendGetBuyItemInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendGetBuyItemInfo, &SendGetBuyItemInfo_Parms, NULL );

	pFnSendGetBuyItemInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendCancelItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendCancelItem ( struct FString sItemGuid )
{
	static UFunction* pFnSendCancelItem = NULL;

	if ( ! pFnSendCancelItem )
		pFnSendCancelItem = (UFunction*) UObject::GObjObjects()->Data[ 54149 ];

	UNowGFXHudScene_execSendCancelItem_Parms SendCancelItem_Parms;
	memcpy ( &SendCancelItem_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnSendCancelItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendCancelItem, &SendCancelItem_Parms, NULL );

	pFnSendCancelItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendBuyItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendBuyItem ( struct FString sItemGuid )
{
	static UFunction* pFnSendBuyItem = NULL;

	if ( ! pFnSendBuyItem )
		pFnSendBuyItem = (UFunction*) UObject::GObjObjects()->Data[ 54147 ];

	UNowGFXHudScene_execSendBuyItem_Parms SendBuyItem_Parms;
	memcpy ( &SendBuyItem_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnSendBuyItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendBuyItem, &SendBuyItem_Parms, NULL );

	pFnSendBuyItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendSellItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// int                            iDuration                      ( CPF_Parm )
// struct FString                 sDesc                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSetName                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendSellItem ( struct FString sItemGuid, int iCost, int iDuration, struct FString sDesc, struct FString sSetName )
{
	static UFunction* pFnSendSellItem = NULL;

	if ( ! pFnSendSellItem )
		pFnSendSellItem = (UFunction*) UObject::GObjObjects()->Data[ 54141 ];

	UNowGFXHudScene_execSendSellItem_Parms SendSellItem_Parms;
	memcpy ( &SendSellItem_Parms.sItemGuid, &sItemGuid, 0xC );
	SendSellItem_Parms.iCost = iCost;
	SendSellItem_Parms.iDuration = iDuration;
	memcpy ( &SendSellItem_Parms.sDesc, &sDesc, 0xC );
	memcpy ( &SendSellItem_Parms.sSetName, &sSetName, 0xC );

	pFnSendSellItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendSellItem, &SendSellItem_Parms, NULL );

	pFnSendSellItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendGetSell
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendGetSell ( )
{
	static UFunction* pFnSendGetSell = NULL;

	if ( ! pFnSendGetSell )
		pFnSendGetSell = (UFunction*) UObject::GObjObjects()->Data[ 54140 ];

	UNowGFXHudScene_execSendGetSell_Parms SendGetSell_Parms;

	pFnSendGetSell->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendGetSell, &SendGetSell_Parms, NULL );

	pFnSendGetSell->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendGetItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iCategory                      ( CPF_Parm )
// int                            iPage                          ( CPF_Parm )
// struct FString                 sSortField                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bSortAscending                 ( CPF_Parm )

void UNowGFXHudScene::SendGetItems ( int iCategory, int iPage, struct FString sSortField, unsigned long bSortAscending )
{
	static UFunction* pFnSendGetItems = NULL;

	if ( ! pFnSendGetItems )
		pFnSendGetItems = (UFunction*) UObject::GObjObjects()->Data[ 54135 ];

	UNowGFXHudScene_execSendGetItems_Parms SendGetItems_Parms;
	SendGetItems_Parms.iCategory = iCategory;
	SendGetItems_Parms.iPage = iPage;
	memcpy ( &SendGetItems_Parms.sSortField, &sSortField, 0xC );
	SendGetItems_Parms.bSortAscending = bSortAscending;

	pFnSendGetItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendGetItems, &SendGetItems_Parms, NULL );

	pFnSendGetItems->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showReceiveMail
// [0x00020002] 
// Parameters infos:
// int                            iMaxInbox                      ( CPF_Parm )
// int                            iMaxOutgoing                   ( CPF_Parm )

void UNowGFXHudScene::showReceiveMail ( int iMaxInbox, int iMaxOutgoing )
{
	static UFunction* pFnshowReceiveMail = NULL;

	if ( ! pFnshowReceiveMail )
		pFnshowReceiveMail = (UFunction*) UObject::GObjObjects()->Data[ 54132 ];

	UNowGFXHudScene_execshowReceiveMail_Parms showReceiveMail_Parms;
	showReceiveMail_Parms.iMaxInbox = iMaxInbox;
	showReceiveMail_Parms.iMaxOutgoing = iMaxOutgoing;

	this->ProcessEvent ( pFnshowReceiveMail, &showReceiveMail_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeMailWindow
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeMailWindow ( )
{
	static UFunction* pFncloseMailWindow = NULL;

	if ( ! pFncloseMailWindow )
		pFncloseMailWindow = (UFunction*) UObject::GObjObjects()->Data[ 54131 ];

	UNowGFXHudScene_execcloseMailWindow_Parms closeMailWindow_Parms;

	this->ProcessEvent ( pFncloseMailWindow, &closeMailWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.receiveMailRemoveItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventreceiveMailRemoveItem ( struct FString sGuid )
{
	static UFunction* pFnreceiveMailRemoveItem = NULL;

	if ( ! pFnreceiveMailRemoveItem )
		pFnreceiveMailRemoveItem = (UFunction*) UObject::GObjObjects()->Data[ 54129 ];

	UNowGFXHudScene_eventreceiveMailRemoveItem_Parms receiveMailRemoveItem_Parms;
	memcpy ( &receiveMailRemoveItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnreceiveMailRemoveItem, &receiveMailRemoveItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.outgoingMailRemoveItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventoutgoingMailRemoveItem ( struct FString sGuid )
{
	static UFunction* pFnoutgoingMailRemoveItem = NULL;

	if ( ! pFnoutgoingMailRemoveItem )
		pFnoutgoingMailRemoveItem = (UFunction*) UObject::GObjObjects()->Data[ 54127 ];

	UNowGFXHudScene_eventoutgoingMailRemoveItem_Parms outgoingMailRemoveItem_Parms;
	memcpy ( &outgoingMailRemoveItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnoutgoingMailRemoveItem, &outgoingMailRemoveItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearOutgoingMailItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearOutgoingMailItems ( )
{
	static UFunction* pFnclearOutgoingMailItems = NULL;

	if ( ! pFnclearOutgoingMailItems )
		pFnclearOutgoingMailItems = (UFunction*) UObject::GObjObjects()->Data[ 54126 ];

	UNowGFXHudScene_execclearOutgoingMailItems_Parms clearOutgoingMailItems_Parms;

	this->ProcessEvent ( pFnclearOutgoingMailItems, &clearOutgoingMailItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearMailItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearMailItems ( )
{
	static UFunction* pFnclearMailItems = NULL;

	if ( ! pFnclearMailItems )
		pFnclearMailItems = (UFunction*) UObject::GObjObjects()->Data[ 54125 ];

	UNowGFXHudScene_execclearMailItems_Parms clearMailItems_Parms;

	this->ProcessEvent ( pFnclearMailItems, &clearMailItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.outgoingMailAddItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSender                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCoD                           ( CPF_Parm )

void UNowGFXHudScene::eventoutgoingMailAddItem ( struct FString sData, struct FString sSender, int iCoD )
{
	static UFunction* pFnoutgoingMailAddItem = NULL;

	if ( ! pFnoutgoingMailAddItem )
		pFnoutgoingMailAddItem = (UFunction*) UObject::GObjObjects()->Data[ 54121 ];

	UNowGFXHudScene_eventoutgoingMailAddItem_Parms outgoingMailAddItem_Parms;
	memcpy ( &outgoingMailAddItem_Parms.sData, &sData, 0xC );
	memcpy ( &outgoingMailAddItem_Parms.sSender, &sSender, 0xC );
	outgoingMailAddItem_Parms.iCoD = iCoD;

	this->ProcessEvent ( pFnoutgoingMailAddItem, &outgoingMailAddItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.receiveMailAddItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSender                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCoD                           ( CPF_Parm )

void UNowGFXHudScene::eventreceiveMailAddItem ( struct FString sData, struct FString sSender, int iCoD )
{
	static UFunction* pFnreceiveMailAddItem = NULL;

	if ( ! pFnreceiveMailAddItem )
		pFnreceiveMailAddItem = (UFunction*) UObject::GObjObjects()->Data[ 54117 ];

	UNowGFXHudScene_eventreceiveMailAddItem_Parms receiveMailAddItem_Parms;
	memcpy ( &receiveMailAddItem_Parms.sData, &sData, 0xC );
	memcpy ( &receiveMailAddItem_Parms.sSender, &sSender, 0xC );
	receiveMailAddItem_Parms.iCoD = iCoD;

	this->ProcessEvent ( pFnreceiveMailAddItem, &receiveMailAddItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.MailSelectedTab
// [0x00020002] 
// Parameters infos:
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::MailSelectedTab ( struct FString sLabel )
{
	static UFunction* pFnMailSelectedTab = NULL;

	if ( ! pFnMailSelectedTab )
		pFnMailSelectedTab = (UFunction*) UObject::GObjObjects()->Data[ 54115 ];

	UNowGFXHudScene_execMailSelectedTab_Parms MailSelectedTab_Parms;
	memcpy ( &MailSelectedTab_Parms.sLabel, &sLabel, 0xC );

	this->ProcessEvent ( pFnMailSelectedTab, &MailSelectedTab_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TakeAllMailItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TakeAllMailItems ( )
{
	static UFunction* pFnTakeAllMailItems = NULL;

	if ( ! pFnTakeAllMailItems )
		pFnTakeAllMailItems = (UFunction*) UObject::GObjObjects()->Data[ 54114 ];

	UNowGFXHudScene_execTakeAllMailItems_Parms TakeAllMailItems_Parms;

	this->ProcessEvent ( pFnTakeAllMailItems, &TakeAllMailItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CancelMailItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::CancelMailItem ( struct FString sGuid )
{
	static UFunction* pFnCancelMailItem = NULL;

	if ( ! pFnCancelMailItem )
		pFnCancelMailItem = (UFunction*) UObject::GObjObjects()->Data[ 54112 ];

	UNowGFXHudScene_execCancelMailItem_Parms CancelMailItem_Parms;
	memcpy ( &CancelMailItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnCancelMailItem, &CancelMailItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReturnMailItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ReturnMailItem ( struct FString sGuid )
{
	static UFunction* pFnReturnMailItem = NULL;

	if ( ! pFnReturnMailItem )
		pFnReturnMailItem = (UFunction*) UObject::GObjObjects()->Data[ 54110 ];

	UNowGFXHudScene_execReturnMailItem_Parms ReturnMailItem_Parms;
	memcpy ( &ReturnMailItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnReturnMailItem, &ReturnMailItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SubmitSendMail
// [0x00020002] 
// Parameters infos:
// struct FString                 sRecipient                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCoD                           ( CPF_Parm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SubmitSendMail ( struct FString sRecipient, int iCoD, struct FString sGuid )
{
	static UFunction* pFnSubmitSendMail = NULL;

	if ( ! pFnSubmitSendMail )
		pFnSubmitSendMail = (UFunction*) UObject::GObjObjects()->Data[ 54106 ];

	UNowGFXHudScene_execSubmitSendMail_Parms SubmitSendMail_Parms;
	memcpy ( &SubmitSendMail_Parms.sRecipient, &sRecipient, 0xC );
	SubmitSendMail_Parms.iCoD = iCoD;
	memcpy ( &SubmitSendMail_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnSubmitSendMail, &SubmitSendMail_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReceiveMailItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )

void UNowGFXHudScene::ReceiveMailItem ( struct FString sGuid, int iCost )
{
	static UFunction* pFnReceiveMailItem = NULL;

	if ( ! pFnReceiveMailItem )
		pFnReceiveMailItem = (UFunction*) UObject::GObjObjects()->Data[ 54103 ];

	UNowGFXHudScene_execReceiveMailItem_Parms ReceiveMailItem_Parms;
	memcpy ( &ReceiveMailItem_Parms.sGuid, &sGuid, 0xC );
	ReceiveMailItem_Parms.iCost = iCost;

	this->ProcessEvent ( pFnReceiveMailItem, &ReceiveMailItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateMail
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::UpdateMail ( )
{
	static UFunction* pFnUpdateMail = NULL;

	if ( ! pFnUpdateMail )
		pFnUpdateMail = (UFunction*) UObject::GObjObjects()->Data[ 54102 ];

	UNowGFXHudScene_execUpdateMail_Parms UpdateMail_Parms;

	this->ProcessEvent ( pFnUpdateMail, &UpdateMail_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitMail
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitMail ( )
{
	static UFunction* pFnInitMail = NULL;

	if ( ! pFnInitMail )
		pFnInitMail = (UFunction*) UObject::GObjObjects()->Data[ 54101 ];

	UNowGFXHudScene_execInitMail_Parms InitMail_Parms;

	this->ProcessEvent ( pFnInitMail, &InitMail_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendRequestOutgoingMail
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendRequestOutgoingMail ( )
{
	static UFunction* pFnSendRequestOutgoingMail = NULL;

	if ( ! pFnSendRequestOutgoingMail )
		pFnSendRequestOutgoingMail = (UFunction*) UObject::GObjObjects()->Data[ 54100 ];

	UNowGFXHudScene_execSendRequestOutgoingMail_Parms SendRequestOutgoingMail_Parms;

	pFnSendRequestOutgoingMail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendRequestOutgoingMail, &SendRequestOutgoingMail_Parms, NULL );

	pFnSendRequestOutgoingMail->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendRequestMail
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendRequestMail ( )
{
	static UFunction* pFnSendRequestMail = NULL;

	if ( ! pFnSendRequestMail )
		pFnSendRequestMail = (UFunction*) UObject::GObjObjects()->Data[ 54099 ];

	UNowGFXHudScene_execSendRequestMail_Parms SendRequestMail_Parms;

	pFnSendRequestMail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendRequestMail, &SendRequestMail_Parms, NULL );

	pFnSendRequestMail->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.CancelMail
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::CancelMail ( struct FString sGuid )
{
	static UFunction* pFnCancelMail = NULL;

	if ( ! pFnCancelMail )
		pFnCancelMail = (UFunction*) UObject::GObjObjects()->Data[ 54097 ];

	UNowGFXHudScene_execCancelMail_Parms CancelMail_Parms;
	memcpy ( &CancelMail_Parms.sGuid, &sGuid, 0xC );

	pFnCancelMail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelMail, &CancelMail_Parms, NULL );

	pFnCancelMail->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.ReturnMail
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ReturnMail ( struct FString sGuid )
{
	static UFunction* pFnReturnMail = NULL;

	if ( ! pFnReturnMail )
		pFnReturnMail = (UFunction*) UObject::GObjObjects()->Data[ 54095 ];

	UNowGFXHudScene_execReturnMail_Parms ReturnMail_Parms;
	memcpy ( &ReturnMail_Parms.sGuid, &sGuid, 0xC );

	pFnReturnMail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReturnMail, &ReturnMail_Parms, NULL );

	pFnReturnMail->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.CollectAllMail
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::CollectAllMail ( )
{
	static UFunction* pFnCollectAllMail = NULL;

	if ( ! pFnCollectAllMail )
		pFnCollectAllMail = (UFunction*) UObject::GObjObjects()->Data[ 54094 ];

	UNowGFXHudScene_execCollectAllMail_Parms CollectAllMail_Parms;

	pFnCollectAllMail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCollectAllMail, &CollectAllMail_Parms, NULL );

	pFnCollectAllMail->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.CollectMail
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::CollectMail ( struct FString sGuid )
{
	static UFunction* pFnCollectMail = NULL;

	if ( ! pFnCollectMail )
		pFnCollectMail = (UFunction*) UObject::GObjObjects()->Data[ 54092 ];

	UNowGFXHudScene_execCollectMail_Parms CollectMail_Parms;
	memcpy ( &CollectMail_Parms.sGuid, &sGuid, 0xC );

	pFnCollectMail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCollectMail, &CollectMail_Parms, NULL );

	pFnCollectMail->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.RequestMail
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FReciveMail >   Items                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UNowGFXHudScene::RequestMail ( TArray< struct FReciveMail >* Items )
{
	static UFunction* pFnRequestMail = NULL;

	if ( ! pFnRequestMail )
		pFnRequestMail = (UFunction*) UObject::GObjObjects()->Data[ 54089 ];

	UNowGFXHudScene_execRequestMail_Parms RequestMail_Parms;

	pFnRequestMail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestMail, &RequestMail_Parms, NULL );

	pFnRequestMail->FunctionFlags |= 0x400;

	if ( Items )
		memcpy ( Items, &RequestMail_Parms.Items, 0xC );
};

// Function NowGame.NowGFXHudScene.SendMail
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sTargetName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCashOnDelivery                ( CPF_Parm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendMail ( struct FString sTargetName, int iCashOnDelivery, struct FString sGuid )
{
	static UFunction* pFnSendMail = NULL;

	if ( ! pFnSendMail )
		pFnSendMail = (UFunction*) UObject::GObjObjects()->Data[ 54085 ];

	UNowGFXHudScene_execSendMail_Parms SendMail_Parms;
	memcpy ( &SendMail_Parms.sTargetName, &sTargetName, 0xC );
	SendMail_Parms.iCashOnDelivery = iCashOnDelivery;
	memcpy ( &SendMail_Parms.sGuid, &sGuid, 0xC );

	pFnSendMail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendMail, &SendMail_Parms, NULL );

	pFnSendMail->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeNote
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::closeNote ( struct FString sGuid )
{
	static UFunction* pFncloseNote = NULL;

	if ( ! pFncloseNote )
		pFncloseNote = (UFunction*) UObject::GObjObjects()->Data[ 54083 ];

	UNowGFXHudScene_execcloseNote_Parms closeNote_Parms;
	memcpy ( &closeNote_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFncloseNote, &closeNote_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getNote
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bEditable                      ( CPF_Parm )

void UNowGFXHudScene::getNote ( struct FString sGuid, unsigned long bEditable )
{
	static UFunction* pFngetNote = NULL;

	if ( ! pFngetNote )
		pFngetNote = (UFunction*) UObject::GObjObjects()->Data[ 54080 ];

	UNowGFXHudScene_execgetNote_Parms getNote_Parms;
	memcpy ( &getNote_Parms.sGuid, &sGuid, 0xC );
	getNote_Parms.bEditable = bEditable;

	this->ProcessEvent ( pFngetNote, &getNote_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeDrawing
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::closeDrawing ( struct FString sGuid )
{
	static UFunction* pFncloseDrawing = NULL;

	if ( ! pFncloseDrawing )
		pFncloseDrawing = (UFunction*) UObject::GObjObjects()->Data[ 54078 ];

	UNowGFXHudScene_execcloseDrawing_Parms closeDrawing_Parms;
	memcpy ( &closeDrawing_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFncloseDrawing, &closeDrawing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getDrawing
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bEditable                      ( CPF_Parm )

void UNowGFXHudScene::getDrawing ( struct FString sGuid, unsigned long bEditable )
{
	static UFunction* pFngetDrawing = NULL;

	if ( ! pFngetDrawing )
		pFngetDrawing = (UFunction*) UObject::GObjObjects()->Data[ 54075 ];

	UNowGFXHudScene_execgetDrawing_Parms getDrawing_Parms;
	memcpy ( &getDrawing_Parms.sGuid, &sGuid, 0xC );
	getDrawing_Parms.bEditable = bEditable;

	this->ProcessEvent ( pFngetDrawing, &getDrawing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getBook
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bEditable                      ( CPF_Parm )
// int                            iMaxPages                      ( CPF_Parm )

void UNowGFXHudScene::getBook ( struct FString sGuid, unsigned long bEditable, int iMaxPages )
{
	static UFunction* pFngetBook = NULL;

	if ( ! pFngetBook )
		pFngetBook = (UFunction*) UObject::GObjObjects()->Data[ 54071 ];

	UNowGFXHudScene_execgetBook_Parms getBook_Parms;
	memcpy ( &getBook_Parms.sGuid, &sGuid, 0xC );
	getBook_Parms.bEditable = bEditable;
	getBook_Parms.iMaxPages = iMaxPages;

	this->ProcessEvent ( pFngetBook, &getBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetBookTitle
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SetBookTitle ( struct FString sGuid, struct FString sTitle )
{
	static UFunction* pFnSetBookTitle = NULL;

	if ( ! pFnSetBookTitle )
		pFnSetBookTitle = (UFunction*) UObject::GObjObjects()->Data[ 54068 ];

	UNowGFXHudScene_execSetBookTitle_Parms SetBookTitle_Parms;
	memcpy ( &SetBookTitle_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &SetBookTitle_Parms.sTitle, &sTitle, 0xC );

	this->ProcessEvent ( pFnSetBookTitle, &SetBookTitle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CreateNote
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::CreateNote ( struct FString sGuid )
{
	static UFunction* pFnCreateNote = NULL;

	if ( ! pFnCreateNote )
		pFnCreateNote = (UFunction*) UObject::GObjObjects()->Data[ 54066 ];

	UNowGFXHudScene_execCreateNote_Parms CreateNote_Parms;
	memcpy ( &CreateNote_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnCreateNote, &CreateNote_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateNote
// [0x00020000] 
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UpdateNote ( struct FString sData )
{
	static UFunction* pFnUpdateNote = NULL;

	if ( ! pFnUpdateNote )
		pFnUpdateNote = (UFunction*) UObject::GObjObjects()->Data[ 54064 ];

	UNowGFXHudScene_execUpdateNote_Parms UpdateNote_Parms;
	memcpy ( &UpdateNote_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnUpdateNote, &UpdateNote_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateDrawing
// [0x00020000] 
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UpdateDrawing ( struct FString sData )
{
	static UFunction* pFnUpdateDrawing = NULL;

	if ( ! pFnUpdateDrawing )
		pFnUpdateDrawing = (UFunction*) UObject::GObjObjects()->Data[ 54062 ];

	UNowGFXHudScene_execUpdateDrawing_Parms UpdateDrawing_Parms;
	memcpy ( &UpdateDrawing_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnUpdateDrawing, &UpdateDrawing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateBook
// [0x00020000] 
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UpdateBook ( struct FString sData )
{
	static UFunction* pFnUpdateBook = NULL;

	if ( ! pFnUpdateBook )
		pFnUpdateBook = (UFunction*) UObject::GObjObjects()->Data[ 54060 ];

	UNowGFXHudScene_execUpdateBook_Parms UpdateBook_Parms;
	memcpy ( &UpdateBook_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnUpdateBook, &UpdateBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlayerBookTest
// [0x00020002] 
// Parameters infos:
// struct FString                 sTestString                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::InitPlayerBookTest ( struct FString sTestString )
{
	static UFunction* pFnInitPlayerBookTest = NULL;

	if ( ! pFnInitPlayerBookTest )
		pFnInitPlayerBookTest = (UFunction*) UObject::GObjObjects()->Data[ 54058 ];

	UNowGFXHudScene_execInitPlayerBookTest_Parms InitPlayerBookTest_Parms;
	memcpy ( &InitPlayerBookTest_Parms.sTestString, &sTestString, 0xC );

	this->ProcessEvent ( pFnInitPlayerBookTest, &InitPlayerBookTest_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlayerNote
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPlayerNote ( )
{
	static UFunction* pFnInitPlayerNote = NULL;

	if ( ! pFnInitPlayerNote )
		pFnInitPlayerNote = (UFunction*) UObject::GObjObjects()->Data[ 54056 ];

	UNowGFXHudScene_execInitPlayerNote_Parms InitPlayerNote_Parms;

	this->ProcessEvent ( pFnInitPlayerNote, &InitPlayerNote_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlayerDrawing
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPlayerDrawing ( )
{
	static UFunction* pFnInitPlayerDrawing = NULL;

	if ( ! pFnInitPlayerDrawing )
		pFnInitPlayerDrawing = (UFunction*) UObject::GObjObjects()->Data[ 54054 ];

	UNowGFXHudScene_execInitPlayerDrawing_Parms InitPlayerDrawing_Parms;

	this->ProcessEvent ( pFnInitPlayerDrawing, &InitPlayerDrawing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlayerBook
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPlayerBook ( )
{
	static UFunction* pFnInitPlayerBook = NULL;

	if ( ! pFnInitPlayerBook )
		pFnInitPlayerBook = (UFunction*) UObject::GObjObjects()->Data[ 54050 ];

	UNowGFXHudScene_execInitPlayerBook_Parms InitPlayerBook_Parms;

	this->ProcessEvent ( pFnInitPlayerBook, &InitPlayerBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddNewNote
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddNewNote ( struct FString sGuid )
{
	static UFunction* pFnAddNewNote = NULL;

	if ( ! pFnAddNewNote )
		pFnAddNewNote = (UFunction*) UObject::GObjObjects()->Data[ 54048 ];

	UNowGFXHudScene_execAddNewNote_Parms AddNewNote_Parms;
	memcpy ( &AddNewNote_Parms.sGuid, &sGuid, 0xC );

	pFnAddNewNote->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddNewNote, &AddNewNote_Parms, NULL );

	pFnAddNewNote->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetPlayerNoteInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UNowGFXHudScene::GetPlayerNoteInfo ( struct FString* sGuid )
{
	static UFunction* pFnGetPlayerNoteInfo = NULL;

	if ( ! pFnGetPlayerNoteInfo )
		pFnGetPlayerNoteInfo = (UFunction*) UObject::GObjObjects()->Data[ 54046 ];

	UNowGFXHudScene_execGetPlayerNoteInfo_Parms GetPlayerNoteInfo_Parms;

	pFnGetPlayerNoteInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerNoteInfo, &GetPlayerNoteInfo_Parms, NULL );

	pFnGetPlayerNoteInfo->FunctionFlags |= 0x400;

	if ( sGuid )
		memcpy ( sGuid, &GetPlayerNoteInfo_Parms.sGuid, 0xC );
};

// Function NowGame.NowGFXHudScene.GetPlayerDrawingInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UNowGFXHudScene::GetPlayerDrawingInfo ( struct FString* sGuid )
{
	static UFunction* pFnGetPlayerDrawingInfo = NULL;

	if ( ! pFnGetPlayerDrawingInfo )
		pFnGetPlayerDrawingInfo = (UFunction*) UObject::GObjObjects()->Data[ 54044 ];

	UNowGFXHudScene_execGetPlayerDrawingInfo_Parms GetPlayerDrawingInfo_Parms;

	pFnGetPlayerDrawingInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerDrawingInfo, &GetPlayerDrawingInfo_Parms, NULL );

	pFnGetPlayerDrawingInfo->FunctionFlags |= 0x400;

	if ( sGuid )
		memcpy ( sGuid, &GetPlayerDrawingInfo_Parms.sGuid, 0xC );
};

// Function NowGame.NowGFXHudScene.GetPlayerBookInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sBookGuid                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            iMaxPages                      ( CPF_Parm | CPF_OutParm )
// int                            iCanEdit                       ( CPF_Parm | CPF_OutParm )

void UNowGFXHudScene::GetPlayerBookInfo ( struct FString* sBookGuid, int* iMaxPages, int* iCanEdit )
{
	static UFunction* pFnGetPlayerBookInfo = NULL;

	if ( ! pFnGetPlayerBookInfo )
		pFnGetPlayerBookInfo = (UFunction*) UObject::GObjObjects()->Data[ 54040 ];

	UNowGFXHudScene_execGetPlayerBookInfo_Parms GetPlayerBookInfo_Parms;

	pFnGetPlayerBookInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerBookInfo, &GetPlayerBookInfo_Parms, NULL );

	pFnGetPlayerBookInfo->FunctionFlags |= 0x400;

	if ( sBookGuid )
		memcpy ( sBookGuid, &GetPlayerBookInfo_Parms.sBookGuid, 0xC );

	if ( iMaxPages )
		*iMaxPages = GetPlayerBookInfo_Parms.iMaxPages;

	if ( iCanEdit )
		*iCanEdit = GetPlayerBookInfo_Parms.iCanEdit;
};

// Function NowGame.NowGFXHudScene.GetLastItemUsedGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetLastItemUsedGuid ( )
{
	static UFunction* pFnGetLastItemUsedGuid = NULL;

	if ( ! pFnGetLastItemUsedGuid )
		pFnGetLastItemUsedGuid = (UFunction*) UObject::GObjObjects()->Data[ 54038 ];

	UNowGFXHudScene_execGetLastItemUsedGuid_Parms GetLastItemUsedGuid_Parms;

	pFnGetLastItemUsedGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLastItemUsedGuid, &GetLastItemUsedGuid_Parms, NULL );

	pFnGetLastItemUsedGuid->FunctionFlags |= 0x400;

	return GetLastItemUsedGuid_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitChest
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitChest ( )
{
	static UFunction* pFnInitChest = NULL;

	if ( ! pFnInitChest )
		pFnInitChest = (UFunction*) UObject::GObjObjects()->Data[ 54037 ];

	UNowGFXHudScene_eventInitChest_Parms InitChest_Parms;

	this->ProcessEvent ( pFnInitChest, &InitChest_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ClearChestInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::ClearChestInventory ( )
{
	static UFunction* pFnClearChestInventory = NULL;

	if ( ! pFnClearChestInventory )
		pFnClearChestInventory = (UFunction*) UObject::GObjObjects()->Data[ 54036 ];

	UNowGFXHudScene_execClearChestInventory_Parms ClearChestInventory_Parms;

	pFnClearChestInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearChestInventory, &ClearChestInventory_Parms, NULL );

	pFnClearChestInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeHouseWindow
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeHouseWindow ( )
{
	static UFunction* pFncloseHouseWindow = NULL;

	if ( ! pFncloseHouseWindow )
		pFncloseHouseWindow = (UFunction*) UObject::GObjObjects()->Data[ 54035 ];

	UNowGFXHudScene_execcloseHouseWindow_Parms closeHouseWindow_Parms;

	this->ProcessEvent ( pFncloseHouseWindow, &closeHouseWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateHouseExpiration
// [0x00020002] 
// Parameters infos:
// int                            iExpires                       ( CPF_Parm )

void UNowGFXHudScene::updateHouseExpiration ( int iExpires )
{
	static UFunction* pFnupdateHouseExpiration = NULL;

	if ( ! pFnupdateHouseExpiration )
		pFnupdateHouseExpiration = (UFunction*) UObject::GObjObjects()->Data[ 54033 ];

	UNowGFXHudScene_execupdateHouseExpiration_Parms updateHouseExpiration_Parms;
	updateHouseExpiration_Parms.iExpires = iExpires;

	this->ProcessEvent ( pFnupdateHouseExpiration, &updateHouseExpiration_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateHouseHitpoints
// [0x00020002] 
// Parameters infos:
// int                            iHitpoints                     ( CPF_Parm )
// int                            iHitpointMax                   ( CPF_Parm )

void UNowGFXHudScene::updateHouseHitpoints ( int iHitpoints, int iHitpointMax )
{
	static UFunction* pFnupdateHouseHitpoints = NULL;

	if ( ! pFnupdateHouseHitpoints )
		pFnupdateHouseHitpoints = (UFunction*) UObject::GObjObjects()->Data[ 54030 ];

	UNowGFXHudScene_execupdateHouseHitpoints_Parms updateHouseHitpoints_Parms;
	updateHouseHitpoints_Parms.iHitpoints = iHitpoints;
	updateHouseHitpoints_Parms.iHitpointMax = iHitpointMax;

	this->ProcessEvent ( pFnupdateHouseHitpoints, &updateHouseHitpoints_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showHouseWindow
// [0x00020002] 
// Parameters infos:
// int                            iHouseId                       ( CPF_Parm )
// struct FString                 sOwner                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuild                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iHitpoints                     ( CPF_Parm )
// int                            iHitpointMax                   ( CPF_Parm )
// int                            iCoinPerDay                    ( CPF_Parm )
// int                            iExpires                       ( CPF_Parm )
// unsigned long                  bChangeLock                    ( CPF_Parm )
// unsigned long                  bNewKey                        ( CPF_Parm )
// unsigned long                  bManageFriends                 ( CPF_Parm )
// unsigned long                  bPayTax                        ( CPF_Parm )
// int                            iMaxPayment                    ( CPF_Parm )
// int                            iTaxPercent                    ( CPF_Parm )
// struct FString                 sLordGuild                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showHouseWindow ( int iHouseId, struct FString sOwner, struct FString sGuild, int iHitpoints, int iHitpointMax, int iCoinPerDay, int iExpires, unsigned long bChangeLock, unsigned long bNewKey, unsigned long bManageFriends, unsigned long bPayTax, int iMaxPayment, int iTaxPercent, struct FString sLordGuild )
{
	static UFunction* pFnshowHouseWindow = NULL;

	if ( ! pFnshowHouseWindow )
		pFnshowHouseWindow = (UFunction*) UObject::GObjObjects()->Data[ 54015 ];

	UNowGFXHudScene_execshowHouseWindow_Parms showHouseWindow_Parms;
	showHouseWindow_Parms.iHouseId = iHouseId;
	memcpy ( &showHouseWindow_Parms.sOwner, &sOwner, 0xC );
	memcpy ( &showHouseWindow_Parms.sGuild, &sGuild, 0xC );
	showHouseWindow_Parms.iHitpoints = iHitpoints;
	showHouseWindow_Parms.iHitpointMax = iHitpointMax;
	showHouseWindow_Parms.iCoinPerDay = iCoinPerDay;
	showHouseWindow_Parms.iExpires = iExpires;
	showHouseWindow_Parms.bChangeLock = bChangeLock;
	showHouseWindow_Parms.bNewKey = bNewKey;
	showHouseWindow_Parms.bManageFriends = bManageFriends;
	showHouseWindow_Parms.bPayTax = bPayTax;
	showHouseWindow_Parms.iMaxPayment = iMaxPayment;
	showHouseWindow_Parms.iTaxPercent = iTaxPercent;
	memcpy ( &showHouseWindow_Parms.sLordGuild, &sLordGuild, 0xC );

	this->ProcessEvent ( pFnshowHouseWindow, &showHouseWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.HousePayment
// [0x00020002] 
// Parameters infos:
// int                            iHouseId                       ( CPF_Parm )
// int                            iPayment                       ( CPF_Parm )

void UNowGFXHudScene::HousePayment ( int iHouseId, int iPayment )
{
	static UFunction* pFnHousePayment = NULL;

	if ( ! pFnHousePayment )
		pFnHousePayment = (UFunction*) UObject::GObjObjects()->Data[ 54012 ];

	UNowGFXHudScene_execHousePayment_Parms HousePayment_Parms;
	HousePayment_Parms.iHouseId = iHouseId;
	HousePayment_Parms.iPayment = iPayment;

	this->ProcessEvent ( pFnHousePayment, &HousePayment_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangeHouseLock
// [0x00020002] 
// Parameters infos:
// int                            iHouseId                       ( CPF_Parm )

void UNowGFXHudScene::ChangeHouseLock ( int iHouseId )
{
	static UFunction* pFnChangeHouseLock = NULL;

	if ( ! pFnChangeHouseLock )
		pFnChangeHouseLock = (UFunction*) UObject::GObjObjects()->Data[ 54010 ];

	UNowGFXHudScene_execChangeHouseLock_Parms ChangeHouseLock_Parms;
	ChangeHouseLock_Parms.iHouseId = iHouseId;

	this->ProcessEvent ( pFnChangeHouseLock, &ChangeHouseLock_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CreateHouseKey
// [0x00020002] 
// Parameters infos:
// int                            iHouseId                       ( CPF_Parm )

void UNowGFXHudScene::CreateHouseKey ( int iHouseId )
{
	static UFunction* pFnCreateHouseKey = NULL;

	if ( ! pFnCreateHouseKey )
		pFnCreateHouseKey = (UFunction*) UObject::GObjObjects()->Data[ 54008 ];

	UNowGFXHudScene_execCreateHouseKey_Parms CreateHouseKey_Parms;
	CreateHouseKey_Parms.iHouseId = iHouseId;

	this->ProcessEvent ( pFnCreateHouseKey, &CreateHouseKey_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ShowHouseFriends
// [0x00020002] 
// Parameters infos:
// int                            iHouseId                       ( CPF_Parm )

void UNowGFXHudScene::ShowHouseFriends ( int iHouseId )
{
	static UFunction* pFnShowHouseFriends = NULL;

	if ( ! pFnShowHouseFriends )
		pFnShowHouseFriends = (UFunction*) UObject::GObjObjects()->Data[ 54006 ];

	UNowGFXHudScene_execShowHouseFriends_Parms ShowHouseFriends_Parms;
	ShowHouseFriends_Parms.iHouseId = iHouseId;

	this->ProcessEvent ( pFnShowHouseFriends, &ShowHouseFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangeHouseOwner
// [0x00020002] 
// Parameters infos:
// struct FString                 sNewOwner                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangeHouseOwner ( struct FString sNewOwner )
{
	static UFunction* pFnChangeHouseOwner = NULL;

	if ( ! pFnChangeHouseOwner )
		pFnChangeHouseOwner = (UFunction*) UObject::GObjObjects()->Data[ 54001 ];

	UNowGFXHudScene_execChangeHouseOwner_Parms ChangeHouseOwner_Parms;
	memcpy ( &ChangeHouseOwner_Parms.sNewOwner, &sNewOwner, 0xC );

	this->ProcessEvent ( pFnChangeHouseOwner, &ChangeHouseOwner_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitHouseInfo
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitHouseInfo ( )
{
	static UFunction* pFnInitHouseInfo = NULL;

	if ( ! pFnInitHouseInfo )
		pFnInitHouseInfo = (UFunction*) UObject::GObjObjects()->Data[ 54000 ];

	UNowGFXHudScene_execInitHouseInfo_Parms InitHouseInfo_Parms;

	this->ProcessEvent ( pFnInitHouseInfo, &InitHouseInfo_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendHousePayment
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iPayment                       ( CPF_Parm )

void UNowGFXHudScene::SendHousePayment ( int iPayment )
{
	static UFunction* pFnSendHousePayment = NULL;

	if ( ! pFnSendHousePayment )
		pFnSendHousePayment = (UFunction*) UObject::GObjObjects()->Data[ 53998 ];

	UNowGFXHudScene_execSendHousePayment_Parms SendHousePayment_Parms;
	SendHousePayment_Parms.iPayment = iPayment;

	pFnSendHousePayment->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendHousePayment, &SendHousePayment_Parms, NULL );

	pFnSendHousePayment->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendChangeHouseLock
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendChangeHouseLock ( )
{
	static UFunction* pFnSendChangeHouseLock = NULL;

	if ( ! pFnSendChangeHouseLock )
		pFnSendChangeHouseLock = (UFunction*) UObject::GObjObjects()->Data[ 53997 ];

	UNowGFXHudScene_execSendChangeHouseLock_Parms SendChangeHouseLock_Parms;

	pFnSendChangeHouseLock->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendChangeHouseLock, &SendChangeHouseLock_Parms, NULL );

	pFnSendChangeHouseLock->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendCreateHouseKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendCreateHouseKey ( )
{
	static UFunction* pFnSendCreateHouseKey = NULL;

	if ( ! pFnSendCreateHouseKey )
		pFnSendCreateHouseKey = (UFunction*) UObject::GObjObjects()->Data[ 53996 ];

	UNowGFXHudScene_execSendCreateHouseKey_Parms SendCreateHouseKey_Parms;

	pFnSendCreateHouseKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendCreateHouseKey, &SendCreateHouseKey_Parms, NULL );

	pFnSendCreateHouseKey->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.toggleFishingEnabled
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void UNowGFXHudScene::toggleFishingEnabled ( unsigned long bEnabled )
{
	static UFunction* pFntoggleFishingEnabled = NULL;

	if ( ! pFntoggleFishingEnabled )
		pFntoggleFishingEnabled = (UFunction*) UObject::GObjObjects()->Data[ 53994 ];

	UNowGFXHudScene_exectoggleFishingEnabled_Parms toggleFishingEnabled_Parms;
	toggleFishingEnabled_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFntoggleFishingEnabled, &toggleFishingEnabled_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeFishing
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeFishing ( )
{
	static UFunction* pFncloseFishing = NULL;

	if ( ! pFncloseFishing )
		pFncloseFishing = (UFunction*) UObject::GObjObjects()->Data[ 53993 ];

	UNowGFXHudScene_execcloseFishing_Parms closeFishing_Parms;

	this->ProcessEvent ( pFncloseFishing, &closeFishing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showFishing
// [0x00020002] 
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showFishing ( struct FString sData )
{
	static UFunction* pFnshowFishing = NULL;

	if ( ! pFnshowFishing )
		pFnshowFishing = (UFunction*) UObject::GObjObjects()->Data[ 53991 ];

	UNowGFXHudScene_execshowFishing_Parms showFishing_Parms;
	memcpy ( &showFishing_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnshowFishing, &showFishing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedFishingDepth
// [0x00020002] 
// Parameters infos:
// int                            iDepth                         ( CPF_Parm )

void UNowGFXHudScene::ChangedFishingDepth ( int iDepth )
{
	static UFunction* pFnChangedFishingDepth = NULL;

	if ( ! pFnChangedFishingDepth )
		pFnChangedFishingDepth = (UFunction*) UObject::GObjObjects()->Data[ 53989 ];

	UNowGFXHudScene_execChangedFishingDepth_Parms ChangedFishingDepth_Parms;
	ChangedFishingDepth_Parms.iDepth = iDepth;

	this->ProcessEvent ( pFnChangedFishingDepth, &ChangedFishingDepth_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedFishingSlots
// [0x00020002] 
// Parameters infos:
// struct FString                 sLineGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHookGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBaitGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangedFishingSlots ( struct FString sLineGuid, struct FString sHookGuid, struct FString sBaitGuid )
{
	static UFunction* pFnChangedFishingSlots = NULL;

	if ( ! pFnChangedFishingSlots )
		pFnChangedFishingSlots = (UFunction*) UObject::GObjObjects()->Data[ 53985 ];

	UNowGFXHudScene_execChangedFishingSlots_Parms ChangedFishingSlots_Parms;
	memcpy ( &ChangedFishingSlots_Parms.sLineGuid, &sLineGuid, 0xC );
	memcpy ( &ChangedFishingSlots_Parms.sHookGuid, &sHookGuid, 0xC );
	memcpy ( &ChangedFishingSlots_Parms.sBaitGuid, &sBaitGuid, 0xC );

	this->ProcessEvent ( pFnChangedFishingSlots, &ChangedFishingSlots_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeFishingArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeFishingArrays ( )
{
	static UFunction* pFnFinalizeFishingArrays = NULL;

	if ( ! pFnFinalizeFishingArrays )
		pFnFinalizeFishingArrays = (UFunction*) UObject::GObjObjects()->Data[ 53983 ];

	UNowGFXHudScene_eventFinalizeFishingArrays_Parms FinalizeFishingArrays_Parms;

	this->ProcessEvent ( pFnFinalizeFishingArrays, &FinalizeFishingArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitFishing
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitFishing ( )
{
	static UFunction* pFnInitFishing = NULL;

	if ( ! pFnInitFishing )
		pFnInitFishing = (UFunction*) UObject::GObjObjects()->Data[ 53982 ];

	UNowGFXHudScene_execInitFishing_Parms InitFishing_Parms;

	this->ProcessEvent ( pFnInitFishing, &InitFishing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetRodData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetRodData ( )
{
	static UFunction* pFnGetRodData = NULL;

	if ( ! pFnGetRodData )
		pFnGetRodData = (UFunction*) UObject::GObjObjects()->Data[ 53980 ];

	UNowGFXHudScene_execGetRodData_Parms GetRodData_Parms;

	pFnGetRodData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRodData, &GetRodData_Parms, NULL );

	pFnGetRodData->FunctionFlags |= 0x400;

	return GetRodData_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitFishingArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitFishingArrays ( )
{
	static UFunction* pFnInitFishingArrays = NULL;

	if ( ! pFnInitFishingArrays )
		pFnInitFishingArrays = (UFunction*) UObject::GObjObjects()->Data[ 53979 ];

	UNowGFXHudScene_execInitFishingArrays_Parms InitFishingArrays_Parms;

	pFnInitFishingArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitFishingArrays, &InitFishingArrays_Parms, NULL );

	pFnInitFishingArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.PlaceVendor
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PlaceVendor ( struct FString sGuid )
{
	static UFunction* pFnPlaceVendor = NULL;

	if ( ! pFnPlaceVendor )
		pFnPlaceVendor = (UFunction*) UObject::GObjObjects()->Data[ 53977 ];

	UNowGFXHudScene_execPlaceVendor_Parms PlaceVendor_Parms;
	memcpy ( &PlaceVendor_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnPlaceVendor, &PlaceVendor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlaceHouseTradeBroker
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPlaceHouseTradeBroker ( )
{
	static UFunction* pFnInitPlaceHouseTradeBroker = NULL;

	if ( ! pFnInitPlaceHouseTradeBroker )
		pFnInitPlaceHouseTradeBroker = (UFunction*) UObject::GObjObjects()->Data[ 53976 ];

	UNowGFXHudScene_execInitPlaceHouseTradeBroker_Parms InitPlaceHouseTradeBroker_Parms;

	this->ProcessEvent ( pFnInitPlaceHouseTradeBroker, &InitPlaceHouseTradeBroker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendPlaceVendor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendPlaceVendor ( struct FString sGuid )
{
	static UFunction* pFnSendPlaceVendor = NULL;

	if ( ! pFnSendPlaceVendor )
		pFnSendPlaceVendor = (UFunction*) UObject::GObjObjects()->Data[ 53974 ];

	UNowGFXHudScene_execSendPlaceVendor_Parms SendPlaceVendor_Parms;
	memcpy ( &SendPlaceVendor_Parms.sGuid, &sGuid, 0xC );

	pFnSendPlaceVendor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendPlaceVendor, &SendPlaceVendor_Parms, NULL );

	pFnSendPlaceVendor->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.FillContractList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillContractList ( )
{
	static UFunction* pFnFillContractList = NULL;

	if ( ! pFnFillContractList )
		pFnFillContractList = (UFunction*) UObject::GObjObjects()->Data[ 53973 ];

	UNowGFXHudScene_execFillContractList_Parms FillContractList_Parms;

	pFnFillContractList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillContractList, &FillContractList_Parms, NULL );

	pFnFillContractList->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showPlayerVendorWindow
// [0x00020002] 
// Parameters infos:
// struct FString                 sVendorGuid                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sOwner                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bCanModify                     ( CPF_Parm )

void UNowGFXHudScene::showPlayerVendorWindow ( struct FString sVendorGuid, struct FString sOwner, unsigned long bCanModify )
{
	static UFunction* pFnshowPlayerVendorWindow = NULL;

	if ( ! pFnshowPlayerVendorWindow )
		pFnshowPlayerVendorWindow = (UFunction*) UObject::GObjObjects()->Data[ 53969 ];

	UNowGFXHudScene_execshowPlayerVendorWindow_Parms showPlayerVendorWindow_Parms;
	memcpy ( &showPlayerVendorWindow_Parms.sVendorGuid, &sVendorGuid, 0xC );
	memcpy ( &showPlayerVendorWindow_Parms.sOwner, &sOwner, 0xC );
	showPlayerVendorWindow_Parms.bCanModify = bCanModify;

	this->ProcessEvent ( pFnshowPlayerVendorWindow, &showPlayerVendorWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PlayerVendorAdd
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// struct FString                 sDesc                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSetName                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PlayerVendorAdd ( struct FString sGuid, int iCost, struct FString sDesc, struct FString sSetName )
{
	static UFunction* pFnPlayerVendorAdd = NULL;

	if ( ! pFnPlayerVendorAdd )
		pFnPlayerVendorAdd = (UFunction*) UObject::GObjObjects()->Data[ 53964 ];

	UNowGFXHudScene_execPlayerVendorAdd_Parms PlayerVendorAdd_Parms;
	memcpy ( &PlayerVendorAdd_Parms.sGuid, &sGuid, 0xC );
	PlayerVendorAdd_Parms.iCost = iCost;
	memcpy ( &PlayerVendorAdd_Parms.sDesc, &sDesc, 0xC );
	memcpy ( &PlayerVendorAdd_Parms.sSetName, &sSetName, 0xC );

	this->ProcessEvent ( pFnPlayerVendorAdd, &PlayerVendorAdd_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PlayerVendorCancel
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PlayerVendorCancel ( struct FString sGuid )
{
	static UFunction* pFnPlayerVendorCancel = NULL;

	if ( ! pFnPlayerVendorCancel )
		pFnPlayerVendorCancel = (UFunction*) UObject::GObjObjects()->Data[ 53962 ];

	UNowGFXHudScene_execPlayerVendorCancel_Parms PlayerVendorCancel_Parms;
	memcpy ( &PlayerVendorCancel_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnPlayerVendorCancel, &PlayerVendorCancel_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PlayerVendorPurchase
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PlayerVendorPurchase ( struct FString sGuid )
{
	static UFunction* pFnPlayerVendorPurchase = NULL;

	if ( ! pFnPlayerVendorPurchase )
		pFnPlayerVendorPurchase = (UFunction*) UObject::GObjObjects()->Data[ 53960 ];

	UNowGFXHudScene_execPlayerVendorPurchase_Parms PlayerVendorPurchase_Parms;
	memcpy ( &PlayerVendorPurchase_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnPlayerVendorPurchase, &PlayerVendorPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReInitPlayerVendor
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ReInitPlayerVendor ( )
{
	static UFunction* pFnReInitPlayerVendor = NULL;

	if ( ! pFnReInitPlayerVendor )
		pFnReInitPlayerVendor = (UFunction*) UObject::GObjObjects()->Data[ 53959 ];

	UNowGFXHudScene_execReInitPlayerVendor_Parms ReInitPlayerVendor_Parms;

	this->ProcessEvent ( pFnReInitPlayerVendor, &ReInitPlayerVendor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PlayerVendorCollect
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::PlayerVendorCollect ( )
{
	static UFunction* pFnPlayerVendorCollect = NULL;

	if ( ! pFnPlayerVendorCollect )
		pFnPlayerVendorCollect = (UFunction*) UObject::GObjObjects()->Data[ 53958 ];

	UNowGFXHudScene_execPlayerVendorCollect_Parms PlayerVendorCollect_Parms;

	this->ProcessEvent ( pFnPlayerVendorCollect, &PlayerVendorCollect_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlayerVendor
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPlayerVendor ( )
{
	static UFunction* pFnInitPlayerVendor = NULL;

	if ( ! pFnInitPlayerVendor )
		pFnInitPlayerVendor = (UFunction*) UObject::GObjObjects()->Data[ 53955 ];

	UNowGFXHudScene_execInitPlayerVendor_Parms InitPlayerVendor_Parms;

	this->ProcessEvent ( pFnInitPlayerVendor, &InitPlayerVendor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddPlayerVendorItemSellInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sContentGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )
// struct FString                 sItemInfo                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddPlayerVendorItemSellInfo ( struct FString sGuid, struct FString sContentGuid, int iCost, int iQuantity, struct FString sItemInfo )
{
	static UFunction* pFnAddPlayerVendorItemSellInfo = NULL;

	if ( ! pFnAddPlayerVendorItemSellInfo )
		pFnAddPlayerVendorItemSellInfo = (UFunction*) UObject::GObjObjects()->Data[ 53949 ];

	UNowGFXHudScene_execAddPlayerVendorItemSellInfo_Parms AddPlayerVendorItemSellInfo_Parms;
	memcpy ( &AddPlayerVendorItemSellInfo_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &AddPlayerVendorItemSellInfo_Parms.sContentGuid, &sContentGuid, 0xC );
	AddPlayerVendorItemSellInfo_Parms.iCost = iCost;
	AddPlayerVendorItemSellInfo_Parms.iQuantity = iQuantity;
	memcpy ( &AddPlayerVendorItemSellInfo_Parms.sItemInfo, &sItemInfo, 0xC );

	pFnAddPlayerVendorItemSellInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPlayerVendorItemSellInfo, &AddPlayerVendorItemSellInfo_Parms, NULL );

	pFnAddPlayerVendorItemSellInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddPlayerVendorItemSell
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sContentGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )

void UNowGFXHudScene::AddPlayerVendorItemSell ( struct FString sGuid, struct FString sContentGuid, int iCost, int iQuantity )
{
	static UFunction* pFnAddPlayerVendorItemSell = NULL;

	if ( ! pFnAddPlayerVendorItemSell )
		pFnAddPlayerVendorItemSell = (UFunction*) UObject::GObjObjects()->Data[ 53944 ];

	UNowGFXHudScene_execAddPlayerVendorItemSell_Parms AddPlayerVendorItemSell_Parms;
	memcpy ( &AddPlayerVendorItemSell_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &AddPlayerVendorItemSell_Parms.sContentGuid, &sContentGuid, 0xC );
	AddPlayerVendorItemSell_Parms.iCost = iCost;
	AddPlayerVendorItemSell_Parms.iQuantity = iQuantity;

	pFnAddPlayerVendorItemSell->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPlayerVendorItemSell, &AddPlayerVendorItemSell_Parms, NULL );

	pFnAddPlayerVendorItemSell->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddPlayerVendorItemBuy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sContentGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )
// struct FString                 sItemName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddPlayerVendorItemBuy ( struct FString sGuid, struct FString sContentGuid, int iCost, int iQuantity, struct FString sItemName )
{
	static UFunction* pFnAddPlayerVendorItemBuy = NULL;

	if ( ! pFnAddPlayerVendorItemBuy )
		pFnAddPlayerVendorItemBuy = (UFunction*) UObject::GObjObjects()->Data[ 53938 ];

	UNowGFXHudScene_execAddPlayerVendorItemBuy_Parms AddPlayerVendorItemBuy_Parms;
	memcpy ( &AddPlayerVendorItemBuy_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &AddPlayerVendorItemBuy_Parms.sContentGuid, &sContentGuid, 0xC );
	AddPlayerVendorItemBuy_Parms.iCost = iCost;
	AddPlayerVendorItemBuy_Parms.iQuantity = iQuantity;
	memcpy ( &AddPlayerVendorItemBuy_Parms.sItemName, &sItemName, 0xC );

	pFnAddPlayerVendorItemBuy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPlayerVendorItemBuy, &AddPlayerVendorItemBuy_Parms, NULL );

	pFnAddPlayerVendorItemBuy->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.RequestPlayerVendorBuy
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::RequestPlayerVendorBuy ( )
{
	static UFunction* pFnRequestPlayerVendorBuy = NULL;

	if ( ! pFnRequestPlayerVendorBuy )
		pFnRequestPlayerVendorBuy = (UFunction*) UObject::GObjObjects()->Data[ 53937 ];

	UNowGFXHudScene_execRequestPlayerVendorBuy_Parms RequestPlayerVendorBuy_Parms;

	pFnRequestPlayerVendorBuy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPlayerVendorBuy, &RequestPlayerVendorBuy_Parms, NULL );

	pFnRequestPlayerVendorBuy->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.RequestPlayerVendorSell
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::RequestPlayerVendorSell ( )
{
	static UFunction* pFnRequestPlayerVendorSell = NULL;

	if ( ! pFnRequestPlayerVendorSell )
		pFnRequestPlayerVendorSell = (UFunction*) UObject::GObjObjects()->Data[ 53936 ];

	UNowGFXHudScene_execRequestPlayerVendorSell_Parms RequestPlayerVendorSell_Parms;

	pFnRequestPlayerVendorSell->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPlayerVendorSell, &RequestPlayerVendorSell_Parms, NULL );

	pFnRequestPlayerVendorSell->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showPetPaperdoll
// [0x00020002] 
// Parameters infos:
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPetName                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            iMountType                     ( CPF_Parm )

void UNowGFXHudScene::showPetPaperdoll ( struct FString sPetGuid, struct FString sPetName, int iMountType )
{
	static UFunction* pFnshowPetPaperdoll = NULL;

	if ( ! pFnshowPetPaperdoll )
		pFnshowPetPaperdoll = (UFunction*) UObject::GObjObjects()->Data[ 53932 ];

	UNowGFXHudScene_execshowPetPaperdoll_Parms showPetPaperdoll_Parms;
	memcpy ( &showPetPaperdoll_Parms.sPetGuid, &sPetGuid, 0xC );
	memcpy ( &showPetPaperdoll_Parms.sPetName, &sPetName, 0xC );
	showPetPaperdoll_Parms.iMountType = iMountType;

	this->ProcessEvent ( pFnshowPetPaperdoll, &showPetPaperdoll_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PetEquippedItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSlotName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PetEquippedItem ( struct FString sGuid, struct FString sSlotName )
{
	static UFunction* pFnPetEquippedItem = NULL;

	if ( ! pFnPetEquippedItem )
		pFnPetEquippedItem = (UFunction*) UObject::GObjObjects()->Data[ 53929 ];

	UNowGFXHudScene_execPetEquippedItem_Parms PetEquippedItem_Parms;
	memcpy ( &PetEquippedItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &PetEquippedItem_Parms.sSlotName, &sSlotName, 0xC );

	this->ProcessEvent ( pFnPetEquippedItem, &PetEquippedItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdatePetEquipped
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdatePetEquipped ( )
{
	static UFunction* pFnUpdatePetEquipped = NULL;

	if ( ! pFnUpdatePetEquipped )
		pFnUpdatePetEquipped = (UFunction*) UObject::GObjObjects()->Data[ 53928 ];

	UNowGFXHudScene_execUpdatePetEquipped_Parms UpdatePetEquipped_Parms;

	pFnUpdatePetEquipped->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePetEquipped, &UpdatePetEquipped_Parms, NULL );

	pFnUpdatePetEquipped->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeConstruction
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeConstruction ( )
{
	static UFunction* pFncloseConstruction = NULL;

	if ( ! pFncloseConstruction )
		pFncloseConstruction = (UFunction*) UObject::GObjObjects()->Data[ 53927 ];

	UNowGFXHudScene_execcloseConstruction_Parms closeConstruction_Parms;

	this->ProcessEvent ( pFncloseConstruction, &closeConstruction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearConstructionNPCs
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearConstructionNPCs ( )
{
	static UFunction* pFnclearConstructionNPCs = NULL;

	if ( ! pFnclearConstructionNPCs )
		pFnclearConstructionNPCs = (UFunction*) UObject::GObjObjects()->Data[ 53926 ];

	UNowGFXHudScene_execclearConstructionNPCs_Parms clearConstructionNPCs_Parms;

	this->ProcessEvent ( pFnclearConstructionNPCs, &clearConstructionNPCs_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addConstructionNPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddConstructionNPC ( int iID, struct FString sName )
{
	static UFunction* pFnaddConstructionNPC = NULL;

	if ( ! pFnaddConstructionNPC )
		pFnaddConstructionNPC = (UFunction*) UObject::GObjObjects()->Data[ 53923 ];

	UNowGFXHudScene_eventaddConstructionNPC_Parms addConstructionNPC_Parms;
	addConstructionNPC_Parms.iID = iID;
	memcpy ( &addConstructionNPC_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnaddConstructionNPC, &addConstructionNPC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setConstruction
// [0x00020002] 
// Parameters infos:
// int                            iWoodCur                       ( CPF_Parm )
// int                            iWoodMax                       ( CPF_Parm )
// int                            iStoneCur                      ( CPF_Parm )
// int                            iStoneMax                      ( CPF_Parm )
// int                            iMetalCur                      ( CPF_Parm )
// int                            iMetalMax                      ( CPF_Parm )
// int                            iHitpoints                     ( CPF_Parm )
// int                            iHitpointsMax                  ( CPF_Parm )

void UNowGFXHudScene::setConstruction ( int iWoodCur, int iWoodMax, int iStoneCur, int iStoneMax, int iMetalCur, int iMetalMax, int iHitpoints, int iHitpointsMax )
{
	static UFunction* pFnsetConstruction = NULL;

	if ( ! pFnsetConstruction )
		pFnsetConstruction = (UFunction*) UObject::GObjObjects()->Data[ 53914 ];

	UNowGFXHudScene_execsetConstruction_Parms setConstruction_Parms;
	setConstruction_Parms.iWoodCur = iWoodCur;
	setConstruction_Parms.iWoodMax = iWoodMax;
	setConstruction_Parms.iStoneCur = iStoneCur;
	setConstruction_Parms.iStoneMax = iStoneMax;
	setConstruction_Parms.iMetalCur = iMetalCur;
	setConstruction_Parms.iMetalMax = iMetalMax;
	setConstruction_Parms.iHitpoints = iHitpoints;
	setConstruction_Parms.iHitpointsMax = iHitpointsMax;

	this->ProcessEvent ( pFnsetConstruction, &setConstruction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showConstruction
// [0x00020002] 
// Parameters infos:
// int                            iHouseId                       ( CPF_Parm )
// unsigned long                  bChangeLock                    ( CPF_Parm )
// unsigned long                  bNewKey                        ( CPF_Parm )
// unsigned long                  bDropTarget                    ( CPF_Parm )

void UNowGFXHudScene::showConstruction ( int iHouseId, unsigned long bChangeLock, unsigned long bNewKey, unsigned long bDropTarget )
{
	static UFunction* pFnshowConstruction = NULL;

	if ( ! pFnshowConstruction )
		pFnshowConstruction = (UFunction*) UObject::GObjObjects()->Data[ 53909 ];

	UNowGFXHudScene_execshowConstruction_Parms showConstruction_Parms;
	showConstruction_Parms.iHouseId = iHouseId;
	showConstruction_Parms.bChangeLock = bChangeLock;
	showConstruction_Parms.bNewKey = bNewKey;
	showConstruction_Parms.bDropTarget = bDropTarget;

	this->ProcessEvent ( pFnshowConstruction, &showConstruction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DismissHouseNPC
// [0x00020002] 
// Parameters infos:
// int                            iID                            ( CPF_Parm )

void UNowGFXHudScene::DismissHouseNPC ( int iID )
{
	static UFunction* pFnDismissHouseNPC = NULL;

	if ( ! pFnDismissHouseNPC )
		pFnDismissHouseNPC = (UFunction*) UObject::GObjObjects()->Data[ 53907 ];

	UNowGFXHudScene_execDismissHouseNPC_Parms DismissHouseNPC_Parms;
	DismissHouseNPC_Parms.iID = iID;

	this->ProcessEvent ( pFnDismissHouseNPC, &DismissHouseNPC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddConstructionMaterial
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddConstructionMaterial ( int iIndex, struct FString sGuid )
{
	static UFunction* pFnAddConstructionMaterial = NULL;

	if ( ! pFnAddConstructionMaterial )
		pFnAddConstructionMaterial = (UFunction*) UObject::GObjObjects()->Data[ 53902 ];

	UNowGFXHudScene_execAddConstructionMaterial_Parms AddConstructionMaterial_Parms;
	AddConstructionMaterial_Parms.iIndex = iIndex;
	memcpy ( &AddConstructionMaterial_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnAddConstructionMaterial, &AddConstructionMaterial_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitTerritoryStructure
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitTerritoryStructure ( )
{
	static UFunction* pFnInitTerritoryStructure = NULL;

	if ( ! pFnInitTerritoryStructure )
		pFnInitTerritoryStructure = (UFunction*) UObject::GObjObjects()->Data[ 53900 ];

	UNowGFXHudScene_execInitTerritoryStructure_Parms InitTerritoryStructure_Parms;

	this->ProcessEvent ( pFnInitTerritoryStructure, &InitTerritoryStructure_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitHouseConstruction
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitHouseConstruction ( )
{
	static UFunction* pFnInitHouseConstruction = NULL;

	if ( ! pFnInitHouseConstruction )
		pFnInitHouseConstruction = (UFunction*) UObject::GObjObjects()->Data[ 53893 ];

	UNowGFXHudScene_eventInitHouseConstruction_Parms InitHouseConstruction_Parms;

	this->ProcessEvent ( pFnInitHouseConstruction, &InitHouseConstruction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddTerritoryNpcs
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::AddTerritoryNpcs ( )
{
	static UFunction* pFnAddTerritoryNpcs = NULL;

	if ( ! pFnAddTerritoryNpcs )
		pFnAddTerritoryNpcs = (UFunction*) UObject::GObjObjects()->Data[ 53892 ];

	UNowGFXHudScene_execAddTerritoryNpcs_Parms AddTerritoryNpcs_Parms;

	pFnAddTerritoryNpcs->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddTerritoryNpcs, &AddTerritoryNpcs_Parms, NULL );

	pFnAddTerritoryNpcs->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.DismissTerritoryStructureNPC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iID                            ( CPF_Parm )

void UNowGFXHudScene::DismissTerritoryStructureNPC ( int iID )
{
	static UFunction* pFnDismissTerritoryStructureNPC = NULL;

	if ( ! pFnDismissTerritoryStructureNPC )
		pFnDismissTerritoryStructureNPC = (UFunction*) UObject::GObjObjects()->Data[ 53890 ];

	UNowGFXHudScene_execDismissTerritoryStructureNPC_Parms DismissTerritoryStructureNPC_Parms;
	DismissTerritoryStructureNPC_Parms.iID = iID;

	pFnDismissTerritoryStructureNPC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDismissTerritoryStructureNPC, &DismissTerritoryStructureNPC_Parms, NULL );

	pFnDismissTerritoryStructureNPC->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddTerritoryStructureMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddTerritoryStructureMaterial ( struct FString sGuid )
{
	static UFunction* pFnAddTerritoryStructureMaterial = NULL;

	if ( ! pFnAddTerritoryStructureMaterial )
		pFnAddTerritoryStructureMaterial = (UFunction*) UObject::GObjObjects()->Data[ 53888 ];

	UNowGFXHudScene_execAddTerritoryStructureMaterial_Parms AddTerritoryStructureMaterial_Parms;
	memcpy ( &AddTerritoryStructureMaterial_Parms.sGuid, &sGuid, 0xC );

	pFnAddTerritoryStructureMaterial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddTerritoryStructureMaterial, &AddTerritoryStructureMaterial_Parms, NULL );

	pFnAddTerritoryStructureMaterial->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitPetBag
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAi*       pPet                           ( CPF_Parm )

void UNowGFXHudScene::InitPetBag ( class ANowAtlasAvatarAi* pPet )
{
	static UFunction* pFnInitPetBag = NULL;

	if ( ! pFnInitPetBag )
		pFnInitPetBag = (UFunction*) UObject::GObjObjects()->Data[ 53881 ];

	UNowGFXHudScene_execInitPetBag_Parms InitPetBag_Parms;
	InitPetBag_Parms.pPet = pPet;

	this->ProcessEvent ( pFnInitPetBag, &InitPetBag_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReInitPetBags
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::ReInitPetBags ( )
{
	static UFunction* pFnReInitPetBags = NULL;

	if ( ! pFnReInitPetBags )
		pFnReInitPetBags = (UFunction*) UObject::GObjObjects()->Data[ 53880 ];

	UNowGFXHudScene_execReInitPetBags_Parms ReInitPetBags_Parms;

	pFnReInitPetBags->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReInitPetBags, &ReInitPetBags_Parms, NULL );

	pFnReInitPetBags->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetPetBagSize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowAtlasAvatarAi*       pPet                           ( CPF_Parm )

int UNowGFXHudScene::GetPetBagSize ( class ANowAtlasAvatarAi* pPet )
{
	static UFunction* pFnGetPetBagSize = NULL;

	if ( ! pFnGetPetBagSize )
		pFnGetPetBagSize = (UFunction*) UObject::GObjObjects()->Data[ 53877 ];

	UNowGFXHudScene_execGetPetBagSize_Parms GetPetBagSize_Parms;
	GetPetBagSize_Parms.pPet = pPet;

	pFnGetPetBagSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetBagSize, &GetPetBagSize_Parms, NULL );

	pFnGetPetBagSize->FunctionFlags |= 0x400;

	return GetPetBagSize_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.PetUnEquipAll
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PetUnEquipAll ( struct FString sPetGuid )
{
	static UFunction* pFnPetUnEquipAll = NULL;

	if ( ! pFnPetUnEquipAll )
		pFnPetUnEquipAll = (UFunction*) UObject::GObjObjects()->Data[ 53875 ];

	UNowGFXHudScene_execPetUnEquipAll_Parms PetUnEquipAll_Parms;
	memcpy ( &PetUnEquipAll_Parms.sPetGuid, &sPetGuid, 0xC );

	pFnPetUnEquipAll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPetUnEquipAll, &PetUnEquipAll_Parms, NULL );

	pFnPetUnEquipAll->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.setAdvancedStats
// [0x00020002] 
// Parameters infos:
// int                            iStructures                    ( CPF_Parm )
// int                            iArea                          ( CPF_Parm )
// int                            iOverlap                       ( CPF_Parm )
// int                            iTotal                         ( CPF_Parm )
// unsigned long                  bLinked                        ( CPF_Parm )
// int                            iNPCCost                       ( CPF_Parm )
// int                            iTotalCPCost                   ( CPF_Parm )
// int                            iCPIncome                      ( CPF_Parm )
// int                            iCPCost                        ( CPF_Parm )
// int                            iTotalCP                       ( CPF_Parm )
// int                            iRadiusTgt                     ( CPF_Parm )
// int                            iOffTgt                        ( CPF_Parm )
// int                            iDefTgt                        ( CPF_Parm )
// int                            iTierRadiusMax                 ( CPF_Parm )
// int                            iTierOffMax                    ( CPF_Parm )
// int                            iTierDefMax                    ( CPF_Parm )

void UNowGFXHudScene::setAdvancedStats ( int iStructures, int iArea, int iOverlap, int iTotal, unsigned long bLinked, int iNPCCost, int iTotalCPCost, int iCPIncome, int iCPCost, int iTotalCP, int iRadiusTgt, int iOffTgt, int iDefTgt, int iTierRadiusMax, int iTierOffMax, int iTierDefMax )
{
	static UFunction* pFnsetAdvancedStats = NULL;

	if ( ! pFnsetAdvancedStats )
		pFnsetAdvancedStats = (UFunction*) UObject::GObjObjects()->Data[ 53858 ];

	UNowGFXHudScene_execsetAdvancedStats_Parms setAdvancedStats_Parms;
	setAdvancedStats_Parms.iStructures = iStructures;
	setAdvancedStats_Parms.iArea = iArea;
	setAdvancedStats_Parms.iOverlap = iOverlap;
	setAdvancedStats_Parms.iTotal = iTotal;
	setAdvancedStats_Parms.bLinked = bLinked;
	setAdvancedStats_Parms.iNPCCost = iNPCCost;
	setAdvancedStats_Parms.iTotalCPCost = iTotalCPCost;
	setAdvancedStats_Parms.iCPIncome = iCPIncome;
	setAdvancedStats_Parms.iCPCost = iCPCost;
	setAdvancedStats_Parms.iTotalCP = iTotalCP;
	setAdvancedStats_Parms.iRadiusTgt = iRadiusTgt;
	setAdvancedStats_Parms.iOffTgt = iOffTgt;
	setAdvancedStats_Parms.iDefTgt = iDefTgt;
	setAdvancedStats_Parms.iTierRadiusMax = iTierRadiusMax;
	setAdvancedStats_Parms.iTierOffMax = iTierOffMax;
	setAdvancedStats_Parms.iTierDefMax = iTierDefMax;

	this->ProcessEvent ( pFnsetAdvancedStats, &setAdvancedStats_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPylonStats
// [0x00020002] 
// Parameters infos:
// int                            iHpCur                         ( CPF_Parm )
// int                            iHpMax                         ( CPF_Parm )
// int                            iAoe                           ( CPF_Parm )
// int                            iDef                           ( CPF_Parm )
// int                            iOff                           ( CPF_Parm )

void UNowGFXHudScene::setPylonStats ( int iHpCur, int iHpMax, int iAoe, int iDef, int iOff )
{
	static UFunction* pFnsetPylonStats = NULL;

	if ( ! pFnsetPylonStats )
		pFnsetPylonStats = (UFunction*) UObject::GObjObjects()->Data[ 53852 ];

	UNowGFXHudScene_execsetPylonStats_Parms setPylonStats_Parms;
	setPylonStats_Parms.iHpCur = iHpCur;
	setPylonStats_Parms.iHpMax = iHpMax;
	setPylonStats_Parms.iAoe = iAoe;
	setPylonStats_Parms.iDef = iDef;
	setPylonStats_Parms.iOff = iOff;

	this->ProcessEvent ( pFnsetPylonStats, &setPylonStats_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddBlackList
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sPlayerName                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddBlackList ( struct FString sPlayerName )
{
	static UFunction* pFnAddBlackList = NULL;

	if ( ! pFnAddBlackList )
		pFnAddBlackList = (UFunction*) UObject::GObjObjects()->Data[ 53850 ];

	UNowGFXHudScene_eventAddBlackList_Parms AddBlackList_Parms;
	memcpy ( &AddBlackList_Parms.sPlayerName, &sPlayerName, 0xC );

	this->ProcessEvent ( pFnAddBlackList, &AddBlackList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showBlacklist
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showBlacklist ( )
{
	static UFunction* pFnshowBlacklist = NULL;

	if ( ! pFnshowBlacklist )
		pFnshowBlacklist = (UFunction*) UObject::GObjObjects()->Data[ 53849 ];

	UNowGFXHudScene_execshowBlacklist_Parms showBlacklist_Parms;

	this->ProcessEvent ( pFnshowBlacklist, &showBlacklist_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closePylon
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closePylon ( )
{
	static UFunction* pFnclosePylon = NULL;

	if ( ! pFnclosePylon )
		pFnclosePylon = (UFunction*) UObject::GObjObjects()->Data[ 53848 ];

	UNowGFXHudScene_execclosePylon_Parms closePylon_Parms;

	this->ProcessEvent ( pFnclosePylon, &closePylon_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showPylon
// [0x00020002] 
// Parameters infos:
// struct FString                 sPylonName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuildName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sLastRound                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bEditable                      ( CPF_Parm )
// unsigned long                  bRename                        ( CPF_Parm )

void UNowGFXHudScene::showPylon ( struct FString sPylonName, struct FString sGuildName, struct FString sLastRound, unsigned long bEditable, unsigned long bRename )
{
	static UFunction* pFnshowPylon = NULL;

	if ( ! pFnshowPylon )
		pFnshowPylon = (UFunction*) UObject::GObjObjects()->Data[ 53842 ];

	UNowGFXHudScene_execshowPylon_Parms showPylon_Parms;
	memcpy ( &showPylon_Parms.sPylonName, &sPylonName, 0xC );
	memcpy ( &showPylon_Parms.sGuildName, &sGuildName, 0xC );
	memcpy ( &showPylon_Parms.sLastRound, &sLastRound, 0xC );
	showPylon_Parms.bEditable = bEditable;
	showPylon_Parms.bRename = bRename;

	this->ProcessEvent ( pFnshowPylon, &showPylon_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CheckValidName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 NewName                        ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::CheckValidName ( struct FString NewName )
{
	static UFunction* pFnCheckValidName = NULL;

	if ( ! pFnCheckValidName )
		pFnCheckValidName = (UFunction*) UObject::GObjObjects()->Data[ 53836 ];

	UNowGFXHudScene_execCheckValidName_Parms CheckValidName_Parms;
	memcpy ( &CheckValidName_Parms.NewName, &NewName, 0xC );

	this->ProcessEvent ( pFnCheckValidName, &CheckValidName_Parms, NULL );

	return CheckValidName_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.PylonSetName
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PylonSetName ( struct FString sName )
{
	static UFunction* pFnPylonSetName = NULL;

	if ( ! pFnPylonSetName )
		pFnPylonSetName = (UFunction*) UObject::GObjObjects()->Data[ 53834 ];

	UNowGFXHudScene_execPylonSetName_Parms PylonSetName_Parms;
	memcpy ( &PylonSetName_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnPylonSetName, &PylonSetName_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PylonSetDefense
// [0x00020002] 
// Parameters infos:
// int                            iDefense                       ( CPF_Parm )

void UNowGFXHudScene::PylonSetDefense ( int iDefense )
{
	static UFunction* pFnPylonSetDefense = NULL;

	if ( ! pFnPylonSetDefense )
		pFnPylonSetDefense = (UFunction*) UObject::GObjObjects()->Data[ 53832 ];

	UNowGFXHudScene_execPylonSetDefense_Parms PylonSetDefense_Parms;
	PylonSetDefense_Parms.iDefense = iDefense;

	this->ProcessEvent ( pFnPylonSetDefense, &PylonSetDefense_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PylonSetOffense
// [0x00020002] 
// Parameters infos:
// int                            iOffense                       ( CPF_Parm )

void UNowGFXHudScene::PylonSetOffense ( int iOffense )
{
	static UFunction* pFnPylonSetOffense = NULL;

	if ( ! pFnPylonSetOffense )
		pFnPylonSetOffense = (UFunction*) UObject::GObjObjects()->Data[ 53830 ];

	UNowGFXHudScene_execPylonSetOffense_Parms PylonSetOffense_Parms;
	PylonSetOffense_Parms.iOffense = iOffense;

	this->ProcessEvent ( pFnPylonSetOffense, &PylonSetOffense_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PylonSetRadius
// [0x00020002] 
// Parameters infos:
// int                            iRadius                        ( CPF_Parm )

void UNowGFXHudScene::PylonSetRadius ( int iRadius )
{
	static UFunction* pFnPylonSetRadius = NULL;

	if ( ! pFnPylonSetRadius )
		pFnPylonSetRadius = (UFunction*) UObject::GObjObjects()->Data[ 53828 ];

	UNowGFXHudScene_execPylonSetRadius_Parms PylonSetRadius_Parms;
	PylonSetRadius_Parms.iRadius = iRadius;

	this->ProcessEvent ( pFnPylonSetRadius, &PylonSetRadius_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FindTowerID
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::FindTowerID ( struct FString sGuid )
{
	static UFunction* pFnFindTowerID = NULL;

	if ( ! pFnFindTowerID )
		pFnFindTowerID = (UFunction*) UObject::GObjObjects()->Data[ 53824 ];

	UNowGFXHudScene_execFindTowerID_Parms FindTowerID_Parms;
	memcpy ( &FindTowerID_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnFindTowerID, &FindTowerID_Parms, NULL );

	return FindTowerID_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.PylonBlacklist
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::PylonBlacklist ( )
{
	static UFunction* pFnPylonBlacklist = NULL;

	if ( ! pFnPylonBlacklist )
		pFnPylonBlacklist = (UFunction*) UObject::GObjObjects()->Data[ 53823 ];

	UNowGFXHudScene_execPylonBlacklist_Parms PylonBlacklist_Parms;

	this->ProcessEvent ( pFnPylonBlacklist, &PylonBlacklist_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PylonBlacklistRemove
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PylonBlacklistRemove ( struct FString sName )
{
	static UFunction* pFnPylonBlacklistRemove = NULL;

	if ( ! pFnPylonBlacklistRemove )
		pFnPylonBlacklistRemove = (UFunction*) UObject::GObjObjects()->Data[ 53821 ];

	UNowGFXHudScene_execPylonBlacklistRemove_Parms PylonBlacklistRemove_Parms;
	memcpy ( &PylonBlacklistRemove_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnPylonBlacklistRemove, &PylonBlacklistRemove_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PylonBlacklistAdd
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PylonBlacklistAdd ( struct FString sName )
{
	static UFunction* pFnPylonBlacklistAdd = NULL;

	if ( ! pFnPylonBlacklistAdd )
		pFnPylonBlacklistAdd = (UFunction*) UObject::GObjObjects()->Data[ 53819 ];

	UNowGFXHudScene_execPylonBlacklistAdd_Parms PylonBlacklistAdd_Parms;
	memcpy ( &PylonBlacklistAdd_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnPylonBlacklistAdd, &PylonBlacklistAdd_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPylonInfo
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPylonInfo ( )
{
	static UFunction* pFnInitPylonInfo = NULL;

	if ( ! pFnInitPylonInfo )
		pFnInitPylonInfo = (UFunction*) UObject::GObjObjects()->Data[ 53790 ];

	UNowGFXHudScene_execInitPylonInfo_Parms InitPylonInfo_Parms;

	this->ProcessEvent ( pFnInitPylonInfo, &InitPylonInfo_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPylon
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPylon ( )
{
	static UFunction* pFnInitPylon = NULL;

	if ( ! pFnInitPylon )
		pFnInitPylon = (UFunction*) UObject::GObjObjects()->Data[ 53789 ];

	UNowGFXHudScene_execInitPylon_Parms InitPylon_Parms;

	this->ProcessEvent ( pFnInitPylon, &InitPylon_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendGetAllBlacklists
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendGetAllBlacklists ( )
{
	static UFunction* pFnSendGetAllBlacklists = NULL;

	if ( ! pFnSendGetAllBlacklists )
		pFnSendGetAllBlacklists = (UFunction*) UObject::GObjObjects()->Data[ 53788 ];

	UNowGFXHudScene_execSendGetAllBlacklists_Parms SendGetAllBlacklists_Parms;

	pFnSendGetAllBlacklists->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendGetAllBlacklists, &SendGetAllBlacklists_Parms, NULL );

	pFnSendGetAllBlacklists->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendPylonBlacklistRemove
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendPylonBlacklistRemove ( struct FString sName )
{
	static UFunction* pFnSendPylonBlacklistRemove = NULL;

	if ( ! pFnSendPylonBlacklistRemove )
		pFnSendPylonBlacklistRemove = (UFunction*) UObject::GObjObjects()->Data[ 53786 ];

	UNowGFXHudScene_execSendPylonBlacklistRemove_Parms SendPylonBlacklistRemove_Parms;
	memcpy ( &SendPylonBlacklistRemove_Parms.sName, &sName, 0xC );

	pFnSendPylonBlacklistRemove->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendPylonBlacklistRemove, &SendPylonBlacklistRemove_Parms, NULL );

	pFnSendPylonBlacklistRemove->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendPylonBlacklistAdd
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::SendPylonBlacklistAdd ( struct FString sName )
{
	static UFunction* pFnSendPylonBlacklistAdd = NULL;

	if ( ! pFnSendPylonBlacklistAdd )
		pFnSendPylonBlacklistAdd = (UFunction*) UObject::GObjObjects()->Data[ 53783 ];

	UNowGFXHudScene_execSendPylonBlacklistAdd_Parms SendPylonBlacklistAdd_Parms;
	memcpy ( &SendPylonBlacklistAdd_Parms.sName, &sName, 0xC );

	pFnSendPylonBlacklistAdd->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendPylonBlacklistAdd, &SendPylonBlacklistAdd_Parms, NULL );

	pFnSendPylonBlacklistAdd->FunctionFlags |= 0x400;

	return SendPylonBlacklistAdd_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.addNPC
// [0x00020002] 
// Parameters infos:
// struct FString                 sDisplayName                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sDescription                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sRequirements                  ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCostCoin                      ( CPF_Parm )
// int                            iCostPP                        ( CPF_Parm )
// int                            iUpkeepCoin                    ( CPF_Parm )
// int                            iUpkeepCP                      ( CPF_Parm )

void UNowGFXHudScene::addNPC ( struct FString sDisplayName, struct FString sDescription, struct FString sRequirements, int iCostCoin, int iCostPP, int iUpkeepCoin, int iUpkeepCP )
{
	static UFunction* pFnaddNPC = NULL;

	if ( ! pFnaddNPC )
		pFnaddNPC = (UFunction*) UObject::GObjObjects()->Data[ 53775 ];

	UNowGFXHudScene_execaddNPC_Parms addNPC_Parms;
	memcpy ( &addNPC_Parms.sDisplayName, &sDisplayName, 0xC );
	memcpy ( &addNPC_Parms.sDescription, &sDescription, 0xC );
	memcpy ( &addNPC_Parms.sRequirements, &sRequirements, 0xC );
	addNPC_Parms.iCostCoin = iCostCoin;
	addNPC_Parms.iCostPP = iCostPP;
	addNPC_Parms.iUpkeepCoin = iUpkeepCoin;
	addNPC_Parms.iUpkeepCP = iUpkeepCP;

	this->ProcessEvent ( pFnaddNPC, &addNPC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearOverseerSlots
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearOverseerSlots ( )
{
	static UFunction* pFnclearOverseerSlots = NULL;

	if ( ! pFnclearOverseerSlots )
		pFnclearOverseerSlots = (UFunction*) UObject::GObjObjects()->Data[ 53774 ];

	UNowGFXHudScene_execclearOverseerSlots_Parms clearOverseerSlots_Parms;

	this->ProcessEvent ( pFnclearOverseerSlots, &clearOverseerSlots_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateSlots
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::updateSlots ( )
{
	static UFunction* pFnupdateSlots = NULL;

	if ( ! pFnupdateSlots )
		pFnupdateSlots = (UFunction*) UObject::GObjObjects()->Data[ 53773 ];

	UNowGFXHudScene_execupdateSlots_Parms updateSlots_Parms;

	this->ProcessEvent ( pFnupdateSlots, &updateSlots_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.currentNPC
// [0x00020002] 
// Parameters infos:
// struct FString                 sDisplayName                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

void UNowGFXHudScene::currentNPC ( struct FString sDisplayName, int iSlot )
{
	static UFunction* pFncurrentNPC = NULL;

	if ( ! pFncurrentNPC )
		pFncurrentNPC = (UFunction*) UObject::GObjObjects()->Data[ 53770 ];

	UNowGFXHudScene_execcurrentNPC_Parms currentNPC_Parms;
	memcpy ( &currentNPC_Parms.sDisplayName, &sDisplayName, 0xC );
	currentNPC_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFncurrentNPC, &currentNPC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addOverseerSlot
// [0x00020002] 
// Parameters infos:
// int                            iSlotId                        ( CPF_Parm )
// int                            iPercentX                      ( CPF_Parm )
// int                            iPercentY                      ( CPF_Parm )
// struct FString                 sDescription                   ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addOverseerSlot ( int iSlotId, int iPercentX, int iPercentY, struct FString sDescription )
{
	static UFunction* pFnaddOverseerSlot = NULL;

	if ( ! pFnaddOverseerSlot )
		pFnaddOverseerSlot = (UFunction*) UObject::GObjObjects()->Data[ 53765 ];

	UNowGFXHudScene_execaddOverseerSlot_Parms addOverseerSlot_Parms;
	addOverseerSlot_Parms.iSlotId = iSlotId;
	addOverseerSlot_Parms.iPercentX = iPercentX;
	addOverseerSlot_Parms.iPercentY = iPercentY;
	memcpy ( &addOverseerSlot_Parms.sDescription, &sDescription, 0xC );

	this->ProcessEvent ( pFnaddOverseerSlot, &addOverseerSlot_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setOverseerBalances
// [0x00020002] 
// Parameters infos:
// int                            iFundsCoin                     ( CPF_Parm )
// int                            iFundsPP                       ( CPF_Parm )
// int                            iTotalUpkeepCoin               ( CPF_Parm )
// int                            iTotalUpkeepCP                 ( CPF_Parm )

void UNowGFXHudScene::setOverseerBalances ( int iFundsCoin, int iFundsPP, int iTotalUpkeepCoin, int iTotalUpkeepCP )
{
	static UFunction* pFnsetOverseerBalances = NULL;

	if ( ! pFnsetOverseerBalances )
		pFnsetOverseerBalances = (UFunction*) UObject::GObjObjects()->Data[ 53760 ];

	UNowGFXHudScene_execsetOverseerBalances_Parms setOverseerBalances_Parms;
	setOverseerBalances_Parms.iFundsCoin = iFundsCoin;
	setOverseerBalances_Parms.iFundsPP = iFundsPP;
	setOverseerBalances_Parms.iTotalUpkeepCoin = iTotalUpkeepCoin;
	setOverseerBalances_Parms.iTotalUpkeepCP = iTotalUpkeepCP;

	this->ProcessEvent ( pFnsetOverseerBalances, &setOverseerBalances_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showOverseer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showOverseer ( )
{
	static UFunction* pFnshowOverseer = NULL;

	if ( ! pFnshowOverseer )
		pFnshowOverseer = (UFunction*) UObject::GObjObjects()->Data[ 53759 ];

	UNowGFXHudScene_execshowOverseer_Parms showOverseer_Parms;

	this->ProcessEvent ( pFnshowOverseer, &showOverseer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeOverseer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeOverseer ( )
{
	static UFunction* pFncloseOverseer = NULL;

	if ( ! pFncloseOverseer )
		pFncloseOverseer = (UFunction*) UObject::GObjObjects()->Data[ 53758 ];

	UNowGFXHudScene_execcloseOverseer_Parms closeOverseer_Parms;

	this->ProcessEvent ( pFncloseOverseer, &closeOverseer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.npcDismissed
// [0x00020002] 
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::npcDismissed ( struct FString sTitle )
{
	static UFunction* pFnnpcDismissed = NULL;

	if ( ! pFnnpcDismissed )
		pFnnpcDismissed = (UFunction*) UObject::GObjObjects()->Data[ 53756 ];

	UNowGFXHudScene_execnpcDismissed_Parms npcDismissed_Parms;
	memcpy ( &npcDismissed_Parms.sTitle, &sTitle, 0xC );

	this->ProcessEvent ( pFnnpcDismissed, &npcDismissed_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddNPCToArray
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Requirements                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            CostCoin                       ( CPF_Parm )
// int                            CostPP                         ( CPF_Parm )
// int                            UpkeepCoin                     ( CPF_Parm )
// int                            UpkeepCP                       ( CPF_Parm )

void UNowGFXHudScene::eventAddNPCToArray ( struct FString DisplayName, struct FString Description, struct FString Requirements, int CostCoin, int CostPP, int UpkeepCoin, int UpkeepCP )
{
	static UFunction* pFnAddNPCToArray = NULL;

	if ( ! pFnAddNPCToArray )
		pFnAddNPCToArray = (UFunction*) UObject::GObjObjects()->Data[ 53747 ];

	UNowGFXHudScene_eventAddNPCToArray_Parms AddNPCToArray_Parms;
	memcpy ( &AddNPCToArray_Parms.DisplayName, &DisplayName, 0xC );
	memcpy ( &AddNPCToArray_Parms.Description, &Description, 0xC );
	memcpy ( &AddNPCToArray_Parms.Requirements, &Requirements, 0xC );
	AddNPCToArray_Parms.CostCoin = CostCoin;
	AddNPCToArray_Parms.CostPP = CostPP;
	AddNPCToArray_Parms.UpkeepCoin = UpkeepCoin;
	AddNPCToArray_Parms.UpkeepCP = UpkeepCP;

	this->ProcessEvent ( pFnAddNPCToArray, &AddNPCToArray_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DismissNPC
// [0x00020002] 
// Parameters infos:
// int                            newSlot                        ( CPF_Parm )

void UNowGFXHudScene::DismissNPC ( int newSlot )
{
	static UFunction* pFnDismissNPC = NULL;

	if ( ! pFnDismissNPC )
		pFnDismissNPC = (UFunction*) UObject::GObjObjects()->Data[ 53745 ];

	UNowGFXHudScene_execDismissNPC_Parms DismissNPC_Parms;
	DismissNPC_Parms.newSlot = newSlot;

	this->ProcessEvent ( pFnDismissNPC, &DismissNPC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetSlot
// [0x00020002] 
// Parameters infos:
// int                            newSlot                        ( CPF_Parm )
// int                            oldSlot                        ( CPF_Parm )

void UNowGFXHudScene::SetSlot ( int newSlot, int oldSlot )
{
	static UFunction* pFnSetSlot = NULL;

	if ( ! pFnSetSlot )
		pFnSetSlot = (UFunction*) UObject::GObjObjects()->Data[ 53742 ];

	UNowGFXHudScene_execSetSlot_Parms SetSlot_Parms;
	SetSlot_Parms.newSlot = newSlot;
	SetSlot_Parms.oldSlot = oldSlot;

	this->ProcessEvent ( pFnSetSlot, &SetSlot_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FindNpcIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sDisplayName                   ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::FindNpcIndex ( struct FString sDisplayName )
{
	static UFunction* pFnFindNpcIndex = NULL;

	if ( ! pFnFindNpcIndex )
		pFnFindNpcIndex = (UFunction*) UObject::GObjObjects()->Data[ 53738 ];

	UNowGFXHudScene_execFindNpcIndex_Parms FindNpcIndex_Parms;
	memcpy ( &FindNpcIndex_Parms.sDisplayName, &sDisplayName, 0xC );

	this->ProcessEvent ( pFnFindNpcIndex, &FindNpcIndex_Parms, NULL );

	return FindNpcIndex_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetCurrentNpcs
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::GetCurrentNpcs ( )
{
	static UFunction* pFnGetCurrentNpcs = NULL;

	if ( ! pFnGetCurrentNpcs )
		pFnGetCurrentNpcs = (UFunction*) UObject::GObjObjects()->Data[ 53734 ];

	UNowGFXHudScene_execGetCurrentNpcs_Parms GetCurrentNpcs_Parms;

	this->ProcessEvent ( pFnGetCurrentNpcs, &GetCurrentNpcs_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.HireNPC
// [0x00020002] 
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

void UNowGFXHudScene::HireNPC ( struct FString sTitle, int iSlot )
{
	static UFunction* pFnHireNPC = NULL;

	if ( ! pFnHireNPC )
		pFnHireNPC = (UFunction*) UObject::GObjObjects()->Data[ 53730 ];

	UNowGFXHudScene_execHireNPC_Parms HireNPC_Parms;
	memcpy ( &HireNPC_Parms.sTitle, &sTitle, 0xC );
	HireNPC_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnHireNPC, &HireNPC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitOverseerSlots
// [0x00820002] 
// Parameters infos:

void UNowGFXHudScene::InitOverseerSlots ( )
{
	static UFunction* pFnInitOverseerSlots = NULL;

	if ( ! pFnInitOverseerSlots )
		pFnInitOverseerSlots = (UFunction*) UObject::GObjObjects()->Data[ 53726 ];

	UNowGFXHudScene_execInitOverseerSlots_Parms InitOverseerSlots_Parms;

	this->ProcessEvent ( pFnInitOverseerSlots, &InitOverseerSlots_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitOverseerBalance
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitOverseerBalance ( )
{
	static UFunction* pFnInitOverseerBalance = NULL;

	if ( ! pFnInitOverseerBalance )
		pFnInitOverseerBalance = (UFunction*) UObject::GObjObjects()->Data[ 53721 ];

	UNowGFXHudScene_execInitOverseerBalance_Parms InitOverseerBalance_Parms;

	this->ProcessEvent ( pFnInitOverseerBalance, &InitOverseerBalance_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RequestOverseer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::RequestOverseer ( )
{
	static UFunction* pFnRequestOverseer = NULL;

	if ( ! pFnRequestOverseer )
		pFnRequestOverseer = (UFunction*) UObject::GObjObjects()->Data[ 53720 ];

	UNowGFXHudScene_execRequestOverseer_Parms RequestOverseer_Parms;

	this->ProcessEvent ( pFnRequestOverseer, &RequestOverseer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitOverseer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitOverseer ( )
{
	static UFunction* pFnInitOverseer = NULL;

	if ( ! pFnInitOverseer )
		pFnInitOverseer = (UFunction*) UObject::GObjObjects()->Data[ 53719 ];

	UNowGFXHudScene_execInitOverseer_Parms InitOverseer_Parms;

	this->ProcessEvent ( pFnInitOverseer, &InitOverseer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendSwapNPC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            IndexFrom                      ( CPF_Parm )
// int                            indexToo                       ( CPF_Parm )

void UNowGFXHudScene::SendSwapNPC ( int IndexFrom, int indexToo )
{
	static UFunction* pFnSendSwapNPC = NULL;

	if ( ! pFnSendSwapNPC )
		pFnSendSwapNPC = (UFunction*) UObject::GObjObjects()->Data[ 53716 ];

	UNowGFXHudScene_execSendSwapNPC_Parms SendSwapNPC_Parms;
	SendSwapNPC_Parms.IndexFrom = IndexFrom;
	SendSwapNPC_Parms.indexToo = indexToo;

	pFnSendSwapNPC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendSwapNPC, &SendSwapNPC_Parms, NULL );

	pFnSendSwapNPC->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendDismissNPC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowGFXHudScene::SendDismissNPC ( int Index )
{
	static UFunction* pFnSendDismissNPC = NULL;

	if ( ! pFnSendDismissNPC )
		pFnSendDismissNPC = (UFunction*) UObject::GObjObjects()->Data[ 53714 ];

	UNowGFXHudScene_execSendDismissNPC_Parms SendDismissNPC_Parms;
	SendDismissNPC_Parms.Index = Index;

	pFnSendDismissNPC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendDismissNPC, &SendDismissNPC_Parms, NULL );

	pFnSendDismissNPC->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendBuyNPC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowGFXHudScene::SendBuyNPC ( int Index )
{
	static UFunction* pFnSendBuyNPC = NULL;

	if ( ! pFnSendBuyNPC )
		pFnSendBuyNPC = (UFunction*) UObject::GObjObjects()->Data[ 53712 ];

	UNowGFXHudScene_execSendBuyNPC_Parms SendBuyNPC_Parms;
	SendBuyNPC_Parms.Index = Index;

	pFnSendBuyNPC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendBuyNPC, &SendBuyNPC_Parms, NULL );

	pFnSendBuyNPC->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetNPCArray
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetNPCArray ( )
{
	static UFunction* pFnGetNPCArray = NULL;

	if ( ! pFnGetNPCArray )
		pFnGetNPCArray = (UFunction*) UObject::GObjObjects()->Data[ 53711 ];

	UNowGFXHudScene_execGetNPCArray_Parms GetNPCArray_Parms;

	pFnGetNPCArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNPCArray, &GetNPCArray_Parms, NULL );

	pFnGetNPCArray->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeGlassBlowing
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeGlassBlowing ( )
{
	static UFunction* pFncloseGlassBlowing = NULL;

	if ( ! pFncloseGlassBlowing )
		pFncloseGlassBlowing = (UFunction*) UObject::GObjObjects()->Data[ 53710 ];

	UNowGFXHudScene_execcloseGlassBlowing_Parms closeGlassBlowing_Parms;

	this->ProcessEvent ( pFncloseGlassBlowing, &closeGlassBlowing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showGlassBlowing
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showGlassBlowing ( )
{
	static UFunction* pFnshowGlassBlowing = NULL;

	if ( ! pFnshowGlassBlowing )
		pFnshowGlassBlowing = (UFunction*) UObject::GObjObjects()->Data[ 53709 ];

	UNowGFXHudScene_execshowGlassBlowing_Parms showGlassBlowing_Parms;

	this->ProcessEvent ( pFnshowGlassBlowing, &showGlassBlowing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SortByGlassLabel
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftGlassInfo        A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftGlassInfo        B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByGlassLabel ( struct FsCraftGlassInfo A, struct FsCraftGlassInfo B )
{
	static UFunction* pFnSortByGlassLabel = NULL;

	if ( ! pFnSortByGlassLabel )
		pFnSortByGlassLabel = (UFunction*) UObject::GObjObjects()->Data[ 52940 ];

	UNowGFXHudScene_execSortByGlassLabel_Parms SortByGlassLabel_Parms;
	memcpy ( &SortByGlassLabel_Parms.A, &A, 0x3C );
	memcpy ( &SortByGlassLabel_Parms.B, &B, 0x3C );

	this->ProcessEvent ( pFnSortByGlassLabel, &SortByGlassLabel_Parms, NULL );

	return SortByGlassLabel_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromGlass
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromGlass ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromGlass = NULL;

	if ( ! pFnGetSendNameFromGlass )
		pFnGetSendNameFromGlass = (UFunction*) UObject::GObjObjects()->Data[ 53702 ];

	UNowGFXHudScene_eventGetSendNameFromGlass_Parms GetSendNameFromGlass_Parms;
	memcpy ( &GetSendNameFromGlass_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromGlass, &GetSendNameFromGlass_Parms, NULL );

	return GetSendNameFromGlass_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CraftGlass
// [0x00020002] 
// Parameters infos:
// struct FString                 sItem                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuidA                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuidB                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuidC                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::CraftGlass ( struct FString sItem, struct FString sGuidA, struct FString sGuidB, struct FString sGuidC )
{
	static UFunction* pFnCraftGlass = NULL;

	if ( ! pFnCraftGlass )
		pFnCraftGlass = (UFunction*) UObject::GObjObjects()->Data[ 53697 ];

	UNowGFXHudScene_execCraftGlass_Parms CraftGlass_Parms;
	memcpy ( &CraftGlass_Parms.sItem, &sItem, 0xC );
	memcpy ( &CraftGlass_Parms.sGuidA, &sGuidA, 0xC );
	memcpy ( &CraftGlass_Parms.sGuidB, &sGuidB, 0xC );
	memcpy ( &CraftGlass_Parms.sGuidC, &sGuidC, 0xC );

	this->ProcessEvent ( pFnCraftGlass, &CraftGlass_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.WorkBenchIsHot
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::WorkBenchIsHot ( )
{
	static UFunction* pFnWorkBenchIsHot = NULL;

	if ( ! pFnWorkBenchIsHot )
		pFnWorkBenchIsHot = (UFunction*) UObject::GObjObjects()->Data[ 53695 ];

	UNowGFXHudScene_execWorkBenchIsHot_Parms WorkBenchIsHot_Parms;

	this->ProcessEvent ( pFnWorkBenchIsHot, &WorkBenchIsHot_Parms, NULL );

	return WorkBenchIsHot_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetGlassIndexByName
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::GetGlassIndexByName ( struct FString sString )
{
	static UFunction* pFnGetGlassIndexByName = NULL;

	if ( ! pFnGetGlassIndexByName )
		pFnGetGlassIndexByName = (UFunction*) UObject::GObjObjects()->Data[ 53691 ];

	UNowGFXHudScene_execGetGlassIndexByName_Parms GetGlassIndexByName_Parms;
	memcpy ( &GetGlassIndexByName_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnGetGlassIndexByName, &GetGlassIndexByName_Parms, NULL );

	return GetGlassIndexByName_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.UpdateGlassMaterials
// [0x00020002] 
// Parameters infos:
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UpdateGlassMaterials ( struct FString sString )
{
	static UFunction* pFnUpdateGlassMaterials = NULL;

	if ( ! pFnUpdateGlassMaterials )
		pFnUpdateGlassMaterials = (UFunction*) UObject::GObjObjects()->Data[ 53681 ];

	UNowGFXHudScene_execUpdateGlassMaterials_Parms UpdateGlassMaterials_Parms;
	memcpy ( &UpdateGlassMaterials_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnUpdateGlassMaterials, &UpdateGlassMaterials_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeGlassArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeGlassArrays ( )
{
	static UFunction* pFnFinalizeGlassArrays = NULL;

	if ( ! pFnFinalizeGlassArrays )
		pFnFinalizeGlassArrays = (UFunction*) UObject::GObjObjects()->Data[ 53679 ];

	UNowGFXHudScene_eventFinalizeGlassArrays_Parms FinalizeGlassArrays_Parms;

	this->ProcessEvent ( pFnFinalizeGlassArrays, &FinalizeGlassArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddGlassInfo
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// TArray< struct FString >       matA                           ( CPF_Parm | CPF_NeedCtorLink )
// TArray< struct FString >       matB                           ( CPF_Parm | CPF_NeedCtorLink )
// TArray< struct FString >       matC                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddGlassInfo ( struct FString sLabelName, struct FString sSendName, TArray< struct FString > matA, TArray< struct FString > matB, TArray< struct FString > matC )
{
	static UFunction* pFnAddGlassInfo = NULL;

	if ( ! pFnAddGlassInfo )
		pFnAddGlassInfo = (UFunction*) UObject::GObjObjects()->Data[ 53669 ];

	UNowGFXHudScene_eventAddGlassInfo_Parms AddGlassInfo_Parms;
	memcpy ( &AddGlassInfo_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddGlassInfo_Parms.sSendName, &sSendName, 0xC );
	memcpy ( &AddGlassInfo_Parms.matA, &matA, 0xC );
	memcpy ( &AddGlassInfo_Parms.matB, &matB, 0xC );
	memcpy ( &AddGlassInfo_Parms.matC, &matC, 0xC );

	this->ProcessEvent ( pFnAddGlassInfo, &AddGlassInfo_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGlassblowing
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGlassblowing ( )
{
	static UFunction* pFnInitGlassblowing = NULL;

	if ( ! pFnInitGlassblowing )
		pFnInitGlassblowing = (UFunction*) UObject::GObjObjects()->Data[ 53668 ];

	UNowGFXHudScene_execInitGlassblowing_Parms InitGlassblowing_Parms;

	this->ProcessEvent ( pFnInitGlassblowing, &InitGlassblowing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DoGlassBlowing
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGlassInfo                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMatA                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMatB                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMatC                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::DoGlassBlowing ( struct FString sGlassInfo, struct FString sMatA, struct FString sMatB, struct FString sMatC )
{
	static UFunction* pFnDoGlassBlowing = NULL;

	if ( ! pFnDoGlassBlowing )
		pFnDoGlassBlowing = (UFunction*) UObject::GObjObjects()->Data[ 53663 ];

	UNowGFXHudScene_execDoGlassBlowing_Parms DoGlassBlowing_Parms;
	memcpy ( &DoGlassBlowing_Parms.sGlassInfo, &sGlassInfo, 0xC );
	memcpy ( &DoGlassBlowing_Parms.sMatA, &sMatA, 0xC );
	memcpy ( &DoGlassBlowing_Parms.sMatB, &sMatB, 0xC );
	memcpy ( &DoGlassBlowing_Parms.sMatC, &sMatC, 0xC );

	pFnDoGlassBlowing->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoGlassBlowing, &DoGlassBlowing_Parms, NULL );

	pFnDoGlassBlowing->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetMatCItemGuids
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iIndex                         ( CPF_Parm )

TArray< struct FString > UNowGFXHudScene::GetMatCItemGuids ( int iIndex )
{
	static UFunction* pFnGetMatCItemGuids = NULL;

	if ( ! pFnGetMatCItemGuids )
		pFnGetMatCItemGuids = (UFunction*) UObject::GObjObjects()->Data[ 53659 ];

	UNowGFXHudScene_execGetMatCItemGuids_Parms GetMatCItemGuids_Parms;
	GetMatCItemGuids_Parms.iIndex = iIndex;

	pFnGetMatCItemGuids->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMatCItemGuids, &GetMatCItemGuids_Parms, NULL );

	pFnGetMatCItemGuids->FunctionFlags |= 0x400;

	return GetMatCItemGuids_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetMatBItemGuids
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iIndex                         ( CPF_Parm )

TArray< struct FString > UNowGFXHudScene::GetMatBItemGuids ( int iIndex )
{
	static UFunction* pFnGetMatBItemGuids = NULL;

	if ( ! pFnGetMatBItemGuids )
		pFnGetMatBItemGuids = (UFunction*) UObject::GObjObjects()->Data[ 53655 ];

	UNowGFXHudScene_execGetMatBItemGuids_Parms GetMatBItemGuids_Parms;
	GetMatBItemGuids_Parms.iIndex = iIndex;

	pFnGetMatBItemGuids->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMatBItemGuids, &GetMatBItemGuids_Parms, NULL );

	pFnGetMatBItemGuids->FunctionFlags |= 0x400;

	return GetMatBItemGuids_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetMatAItemGuids
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iIndex                         ( CPF_Parm )

TArray< struct FString > UNowGFXHudScene::GetMatAItemGuids ( int iIndex )
{
	static UFunction* pFnGetMatAItemGuids = NULL;

	if ( ! pFnGetMatAItemGuids )
		pFnGetMatAItemGuids = (UFunction*) UObject::GObjObjects()->Data[ 53651 ];

	UNowGFXHudScene_execGetMatAItemGuids_Parms GetMatAItemGuids_Parms;
	GetMatAItemGuids_Parms.iIndex = iIndex;

	pFnGetMatAItemGuids->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMatAItemGuids, &GetMatAItemGuids_Parms, NULL );

	pFnGetMatAItemGuids->FunctionFlags |= 0x400;

	return GetMatAItemGuids_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitGlassArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitGlassArrays ( )
{
	static UFunction* pFnInitGlassArrays = NULL;

	if ( ! pFnInitGlassArrays )
		pFnInitGlassArrays = (UFunction*) UObject::GObjObjects()->Data[ 53650 ];

	UNowGFXHudScene_execInitGlassArrays_Parms InitGlassArrays_Parms;

	pFnInitGlassArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitGlassArrays, &InitGlassArrays_Parms, NULL );

	pFnInitGlassArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeOptionBar
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeOptionBar ( )
{
	static UFunction* pFncloseOptionBar = NULL;

	if ( ! pFncloseOptionBar )
		pFncloseOptionBar = (UFunction*) UObject::GObjObjects()->Data[ 53649 ];

	UNowGFXHudScene_execcloseOptionBar_Parms closeOptionBar_Parms;

	this->ProcessEvent ( pFncloseOptionBar, &closeOptionBar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showOptionBar
// [0x00020002] 
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showOptionBar ( struct FString sTitle, struct FString sData )
{
	static UFunction* pFnshowOptionBar = NULL;

	if ( ! pFnshowOptionBar )
		pFnshowOptionBar = (UFunction*) UObject::GObjObjects()->Data[ 53646 ];

	UNowGFXHudScene_execshowOptionBar_Parms showOptionBar_Parms;
	memcpy ( &showOptionBar_Parms.sTitle, &sTitle, 0xC );
	memcpy ( &showOptionBar_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnshowOptionBar, &showOptionBar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeOptionBar
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventFinalizeOptionBar ( struct FString sTitle, struct FString sData )
{
	static UFunction* pFnFinalizeOptionBar = NULL;

	if ( ! pFnFinalizeOptionBar )
		pFnFinalizeOptionBar = (UFunction*) UObject::GObjObjects()->Data[ 53643 ];

	UNowGFXHudScene_eventFinalizeOptionBar_Parms FinalizeOptionBar_Parms;
	memcpy ( &FinalizeOptionBar_Parms.sTitle, &sTitle, 0xC );
	memcpy ( &FinalizeOptionBar_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnFinalizeOptionBar, &FinalizeOptionBar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitOptionBar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       vUseSkillName                  ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::InitOptionBar ( TArray< struct FString > vUseSkillName )
{
	static UFunction* pFnInitOptionBar = NULL;

	if ( ! pFnInitOptionBar )
		pFnInitOptionBar = (UFunction*) UObject::GObjObjects()->Data[ 53640 ];

	UNowGFXHudScene_execInitOptionBar_Parms InitOptionBar_Parms;
	memcpy ( &InitOptionBar_Parms.vUseSkillName, &vUseSkillName, 0xC );

	pFnInitOptionBar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitOptionBar, &InitOptionBar_Parms, NULL );

	pFnInitOptionBar->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showGamemaster
// [0x00020002] 
// Parameters infos:
// int                            iRank                          ( CPF_Parm )
// struct FString                 sRank                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showGamemaster ( int iRank, struct FString sRank )
{
	static UFunction* pFnshowGamemaster = NULL;

	if ( ! pFnshowGamemaster )
		pFnshowGamemaster = (UFunction*) UObject::GObjObjects()->Data[ 53637 ];

	UNowGFXHudScene_execshowGamemaster_Parms showGamemaster_Parms;
	showGamemaster_Parms.iRank = iRank;
	memcpy ( &showGamemaster_Parms.sRank, &sRank, 0xC );

	this->ProcessEvent ( pFnshowGamemaster, &showGamemaster_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TcpSendGM
// [0x00020000] 
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::TcpSendGM ( struct FString sData )
{
	static UFunction* pFnTcpSendGM = NULL;

	if ( ! pFnTcpSendGM )
		pFnTcpSendGM = (UFunction*) UObject::GObjObjects()->Data[ 53635 ];

	UNowGFXHudScene_execTcpSendGM_Parms TcpSendGM_Parms;
	memcpy ( &TcpSendGM_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnTcpSendGM, &TcpSendGM_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGameMasterMain
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitGameMasterMain ( )
{
	static UFunction* pFnInitGameMasterMain = NULL;

	if ( ! pFnInitGameMasterMain )
		pFnInitGameMasterMain = (UFunction*) UObject::GObjObjects()->Data[ 53633 ];

	UNowGFXHudScene_eventInitGameMasterMain_Parms InitGameMasterMain_Parms;

	this->ProcessEvent ( pFnInitGameMasterMain, &InitGameMasterMain_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetGMRank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowGFXHudScene::GetGMRank ( )
{
	static UFunction* pFnGetGMRank = NULL;

	if ( ! pFnGetGMRank )
		pFnGetGMRank = (UFunction*) UObject::GObjObjects()->Data[ 53631 ];

	UNowGFXHudScene_execGetGMRank_Parms GetGMRank_Parms;

	pFnGetGMRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGMRank, &GetGMRank_Parms, NULL );

	pFnGetGMRank->FunctionFlags |= 0x400;

	return GetGMRank_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GoToPet
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GoToPet ( struct FString sGuid )
{
	static UFunction* pFnGoToPet = NULL;

	if ( ! pFnGoToPet )
		pFnGoToPet = (UFunction*) UObject::GObjObjects()->Data[ 53629 ];

	UNowGFXHudScene_execGoToPet_Parms GoToPet_Parms;
	memcpy ( &GoToPet_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGoToPet, &GoToPet_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGMGotoPet
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGMGotoPet ( )
{
	static UFunction* pFnInitGMGotoPet = NULL;

	if ( ! pFnInitGMGotoPet )
		pFnInitGMGotoPet = (UFunction*) UObject::GObjObjects()->Data[ 53627 ];

	UNowGFXHudScene_execInitGMGotoPet_Parms InitGMGotoPet_Parms;

	this->ProcessEvent ( pFnInitGMGotoPet, &InitGMGotoPet_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GMResetAi
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GMResetAi ( struct FString sGuid )
{
	static UFunction* pFnGMResetAi = NULL;

	if ( ! pFnGMResetAi )
		pFnGMResetAi = (UFunction*) UObject::GObjObjects()->Data[ 53625 ];

	UNowGFXHudScene_execGMResetAi_Parms GMResetAi_Parms;
	memcpy ( &GMResetAi_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGMResetAi, &GMResetAi_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGMGetPets
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGMGetPets ( )
{
	static UFunction* pFnInitGMGetPets = NULL;

	if ( ! pFnInitGMGetPets )
		pFnInitGMGetPets = (UFunction*) UObject::GObjObjects()->Data[ 53623 ];

	UNowGFXHudScene_execInitGMGetPets_Parms InitGMGetPets_Parms;

	this->ProcessEvent ( pFnInitGMGetPets, &InitGMGetPets_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGMBag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bPawnTarget                    ( CPF_Parm )

void UNowGFXHudScene::eventInitGMBag ( unsigned long bPawnTarget )
{
	static UFunction* pFnInitGMBag = NULL;

	if ( ! pFnInitGMBag )
		pFnInitGMBag = (UFunction*) UObject::GObjObjects()->Data[ 53620 ];

	UNowGFXHudScene_eventInitGMBag_Parms InitGMBag_Parms;
	InitGMBag_Parms.bPawnTarget = bPawnTarget;

	this->ProcessEvent ( pFnInitGMBag, &InitGMBag_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddGMBagItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddGMBagItem ( struct FString sItemGuid, struct FString sData )
{
	static UFunction* pFnAddGMBagItem = NULL;

	if ( ! pFnAddGMBagItem )
		pFnAddGMBagItem = (UFunction*) UObject::GObjObjects()->Data[ 53617 ];

	UNowGFXHudScene_execAddGMBagItem_Parms AddGMBagItem_Parms;
	memcpy ( &AddGMBagItem_Parms.sItemGuid, &sItemGuid, 0xC );
	memcpy ( &AddGMBagItem_Parms.sData, &sData, 0xC );

	pFnAddGMBagItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddGMBagItem, &AddGMBagItem_Parms, NULL );

	pFnAddGMBagItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GMSpawnItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GMSpawnItem ( struct FString sGuid )
{
	static UFunction* pFnGMSpawnItem = NULL;

	if ( ! pFnGMSpawnItem )
		pFnGMSpawnItem = (UFunction*) UObject::GObjObjects()->Data[ 53615 ];

	UNowGFXHudScene_execGMSpawnItem_Parms GMSpawnItem_Parms;
	memcpy ( &GMSpawnItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGMSpawnItem, &GMSpawnItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGMSpawnItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemBase                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::InitGMSpawnItem ( struct FString sItemBase )
{
	static UFunction* pFnInitGMSpawnItem = NULL;

	if ( ! pFnInitGMSpawnItem )
		pFnInitGMSpawnItem = (UFunction*) UObject::GObjObjects()->Data[ 53612 ];

	UNowGFXHudScene_execInitGMSpawnItem_Parms InitGMSpawnItem_Parms;
	memcpy ( &InitGMSpawnItem_Parms.sItemBase, &sItemBase, 0xC );

	this->ProcessEvent ( pFnInitGMSpawnItem, &InitGMSpawnItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillGMSpawnItemList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemBase                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::FillGMSpawnItemList ( struct FString sItemBase )
{
	static UFunction* pFnFillGMSpawnItemList = NULL;

	if ( ! pFnFillGMSpawnItemList )
		pFnFillGMSpawnItemList = (UFunction*) UObject::GObjObjects()->Data[ 53610 ];

	UNowGFXHudScene_execFillGMSpawnItemList_Parms FillGMSpawnItemList_Parms;
	memcpy ( &FillGMSpawnItemList_Parms.sItemBase, &sItemBase, 0xC );

	pFnFillGMSpawnItemList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillGMSpawnItemList, &FillGMSpawnItemList_Parms, NULL );

	pFnFillGMSpawnItemList->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.PlaceWorkbench
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PlaceWorkbench ( struct FString sGuid )
{
	static UFunction* pFnPlaceWorkbench = NULL;

	if ( ! pFnPlaceWorkbench )
		pFnPlaceWorkbench = (UFunction*) UObject::GObjObjects()->Data[ 53608 ];

	UNowGFXHudScene_execPlaceWorkbench_Parms PlaceWorkbench_Parms;
	memcpy ( &PlaceWorkbench_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnPlaceWorkbench, &PlaceWorkbench_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlaceWorkbench
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPlaceWorkbench ( )
{
	static UFunction* pFnInitPlaceWorkbench = NULL;

	if ( ! pFnInitPlaceWorkbench )
		pFnInitPlaceWorkbench = (UFunction*) UObject::GObjObjects()->Data[ 53607 ];

	UNowGFXHudScene_execInitPlaceWorkbench_Parms InitPlaceWorkbench_Parms;

	this->ProcessEvent ( pFnInitPlaceWorkbench, &InitPlaceWorkbench_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendPlaceWorkbench
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendPlaceWorkbench ( struct FString sGuid )
{
	static UFunction* pFnSendPlaceWorkbench = NULL;

	if ( ! pFnSendPlaceWorkbench )
		pFnSendPlaceWorkbench = (UFunction*) UObject::GObjObjects()->Data[ 53605 ];

	UNowGFXHudScene_execSendPlaceWorkbench_Parms SendPlaceWorkbench_Parms;
	memcpy ( &SendPlaceWorkbench_Parms.sGuid, &sGuid, 0xC );

	pFnSendPlaceWorkbench->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendPlaceWorkbench, &SendPlaceWorkbench_Parms, NULL );

	pFnSendPlaceWorkbench->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.FillWorkbenchList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillWorkbenchList ( )
{
	static UFunction* pFnFillWorkbenchList = NULL;

	if ( ! pFnFillWorkbenchList )
		pFnFillWorkbenchList = (UFunction*) UObject::GObjObjects()->Data[ 53604 ];

	UNowGFXHudScene_execFillWorkbenchList_Parms FillWorkbenchList_Parms;

	pFnFillWorkbenchList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillWorkbenchList, &FillWorkbenchList_Parms, NULL );

	pFnFillWorkbenchList->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showClassSelection
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventshowClassSelection ( )
{
	static UFunction* pFnshowClassSelection = NULL;

	if ( ! pFnshowClassSelection )
		pFnshowClassSelection = (UFunction*) UObject::GObjObjects()->Data[ 53603 ];

	UNowGFXHudScene_eventshowClassSelection_Parms showClassSelection_Parms;

	this->ProcessEvent ( pFnshowClassSelection, &showClassSelection_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.hideVoiceTutorialButton
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::hideVoiceTutorialButton ( )
{
	static UFunction* pFnhideVoiceTutorialButton = NULL;

	if ( ! pFnhideVoiceTutorialButton )
		pFnhideVoiceTutorialButton = (UFunction*) UObject::GObjObjects()->Data[ 53602 ];

	UNowGFXHudScene_exechideVoiceTutorialButton_Parms hideVoiceTutorialButton_Parms;

	this->ProcessEvent ( pFnhideVoiceTutorialButton, &hideVoiceTutorialButton_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showVoiceTutorialButton
// [0x00020002] 
// Parameters infos:
// struct FString                 sId                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showVoiceTutorialButton ( struct FString sId )
{
	static UFunction* pFnshowVoiceTutorialButton = NULL;

	if ( ! pFnshowVoiceTutorialButton )
		pFnshowVoiceTutorialButton = (UFunction*) UObject::GObjObjects()->Data[ 53600 ];

	UNowGFXHudScene_execshowVoiceTutorialButton_Parms showVoiceTutorialButton_Parms;
	memcpy ( &showVoiceTutorialButton_Parms.sId, &sId, 0xC );

	this->ProcessEvent ( pFnshowVoiceTutorialButton, &showVoiceTutorialButton_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SelectedClass
// [0x00020002] 
// Parameters infos:
// struct FString                 sClass                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SelectedClass ( struct FString sClass )
{
	static UFunction* pFnSelectedClass = NULL;

	if ( ! pFnSelectedClass )
		pFnSelectedClass = (UFunction*) UObject::GObjObjects()->Data[ 53598 ];

	UNowGFXHudScene_execSelectedClass_Parms SelectedClass_Parms;
	memcpy ( &SelectedClass_Parms.sClass, &sClass, 0xC );

	this->ProcessEvent ( pFnSelectedClass, &SelectedClass_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.OpenNoobGate
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::OpenNoobGate ( )
{
	static UFunction* pFnOpenNoobGate = NULL;

	if ( ! pFnOpenNoobGate )
		pFnOpenNoobGate = (UFunction*) UObject::GObjObjects()->Data[ 53596 ];

	UNowGFXHudScene_execOpenNoobGate_Parms OpenNoobGate_Parms;

	this->ProcessEvent ( pFnOpenNoobGate, &OpenNoobGate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarD1
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarD1 ( )
{
	static UFunction* pFnSetVarD1 = NULL;

	if ( ! pFnSetVarD1 )
		pFnSetVarD1 = (UFunction*) UObject::GObjObjects()->Data[ 53594 ];

	UNowGFXHudScene_execSetVarD1_Parms SetVarD1_Parms;

	this->ProcessEvent ( pFnSetVarD1, &SetVarD1_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarC2
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarC2 ( )
{
	static UFunction* pFnSetVarC2 = NULL;

	if ( ! pFnSetVarC2 )
		pFnSetVarC2 = (UFunction*) UObject::GObjObjects()->Data[ 53593 ];

	UNowGFXHudScene_execSetVarC2_Parms SetVarC2_Parms;

	this->ProcessEvent ( pFnSetVarC2, &SetVarC2_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarC1
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarC1 ( )
{
	static UFunction* pFnSetVarC1 = NULL;

	if ( ! pFnSetVarC1 )
		pFnSetVarC1 = (UFunction*) UObject::GObjObjects()->Data[ 53592 ];

	UNowGFXHudScene_execSetVarC1_Parms SetVarC1_Parms;

	this->ProcessEvent ( pFnSetVarC1, &SetVarC1_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarB4
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventSetVarB4 ( )
{
	static UFunction* pFnSetVarB4 = NULL;

	if ( ! pFnSetVarB4 )
		pFnSetVarB4 = (UFunction*) UObject::GObjObjects()->Data[ 53591 ];

	UNowGFXHudScene_eventSetVarB4_Parms SetVarB4_Parms;

	this->ProcessEvent ( pFnSetVarB4, &SetVarB4_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarB3
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarB3 ( )
{
	static UFunction* pFnSetVarB3 = NULL;

	if ( ! pFnSetVarB3 )
		pFnSetVarB3 = (UFunction*) UObject::GObjObjects()->Data[ 53590 ];

	UNowGFXHudScene_execSetVarB3_Parms SetVarB3_Parms;

	this->ProcessEvent ( pFnSetVarB3, &SetVarB3_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarB2
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarB2 ( )
{
	static UFunction* pFnSetVarB2 = NULL;

	if ( ! pFnSetVarB2 )
		pFnSetVarB2 = (UFunction*) UObject::GObjObjects()->Data[ 53589 ];

	UNowGFXHudScene_execSetVarB2_Parms SetVarB2_Parms;

	this->ProcessEvent ( pFnSetVarB2, &SetVarB2_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarB1
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarB1 ( )
{
	static UFunction* pFnSetVarB1 = NULL;

	if ( ! pFnSetVarB1 )
		pFnSetVarB1 = (UFunction*) UObject::GObjObjects()->Data[ 53588 ];

	UNowGFXHudScene_execSetVarB1_Parms SetVarB1_Parms;

	this->ProcessEvent ( pFnSetVarB1, &SetVarB1_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarA1
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarA1 ( )
{
	static UFunction* pFnSetVarA1 = NULL;

	if ( ! pFnSetVarA1 )
		pFnSetVarA1 = (UFunction*) UObject::GObjObjects()->Data[ 53587 ];

	UNowGFXHudScene_execSetVarA1_Parms SetVarA1_Parms;

	this->ProcessEvent ( pFnSetVarA1, &SetVarA1_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetClassSelect
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iVar                           ( CPF_Parm )

void UNowGFXHudScene::SetClassSelect ( int iVar )
{
	static UFunction* pFnSetClassSelect = NULL;

	if ( ! pFnSetClassSelect )
		pFnSetClassSelect = (UFunction*) UObject::GObjObjects()->Data[ 53585 ];

	UNowGFXHudScene_execSetClassSelect_Parms SetClassSelect_Parms;
	SetClassSelect_Parms.iVar = iVar;

	pFnSetClassSelect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetClassSelect, &SetClassSelect_Parms, NULL );

	pFnSetClassSelect->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SetNoobHelp
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            InPC                           ( CPF_Parm )
// int                            iVar                           ( CPF_Parm )

void UNowGFXHudScene::SetNoobHelp ( int InPC, int iVar )
{
	static UFunction* pFnSetNoobHelp = NULL;

	if ( ! pFnSetNoobHelp )
		pFnSetNoobHelp = (UFunction*) UObject::GObjObjects()->Data[ 53582 ];

	UNowGFXHudScene_execSetNoobHelp_Parms SetNoobHelp_Parms;
	SetNoobHelp_Parms.InPC = InPC;
	SetNoobHelp_Parms.iVar = iVar;

	pFnSetNoobHelp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNoobHelp, &SetNoobHelp_Parms, NULL );

	pFnSetNoobHelp->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetAHouse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerHouse* UNowGFXHudScene::eventGetAHouse ( )
{
	static UFunction* pFnGetAHouse = NULL;

	if ( ! pFnGetAHouse )
		pFnGetAHouse = (UFunction*) UObject::GObjObjects()->Data[ 53578 ];

	UNowGFXHudScene_eventGetAHouse_Parms GetAHouse_Parms;

	this->ProcessEvent ( pFnGetAHouse, &GetAHouse_Parms, NULL );

	return GetAHouse_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SetTax
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetTax ( )
{
	static UFunction* pFnSetTax = NULL;

	if ( ! pFnSetTax )
		pFnSetTax = (UFunction*) UObject::GObjObjects()->Data[ 53577 ];

	UNowGFXHudScene_execSetTax_Parms SetTax_Parms;

	this->ProcessEvent ( pFnSetTax, &SetTax_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CollectTax
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::CollectTax ( )
{
	static UFunction* pFnCollectTax = NULL;

	if ( ! pFnCollectTax )
		pFnCollectTax = (UFunction*) UObject::GObjObjects()->Data[ 53576 ];

	UNowGFXHudScene_execCollectTax_Parms CollectTax_Parms;

	this->ProcessEvent ( pFnCollectTax, &CollectTax_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DonateTax
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::DonateTax ( )
{
	static UFunction* pFnDonateTax = NULL;

	if ( ! pFnDonateTax )
		pFnDonateTax = (UFunction*) UObject::GObjObjects()->Data[ 53575 ];

	UNowGFXHudScene_execDonateTax_Parms DonateTax_Parms;

	this->ProcessEvent ( pFnDonateTax, &DonateTax_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendDonateTaxes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sRespones                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendDonateTaxes ( struct FString sRespones )
{
	static UFunction* pFnSendDonateTaxes = NULL;

	if ( ! pFnSendDonateTaxes )
		pFnSendDonateTaxes = (UFunction*) UObject::GObjObjects()->Data[ 53573 ];

	UNowGFXHudScene_execSendDonateTaxes_Parms SendDonateTaxes_Parms;
	memcpy ( &SendDonateTaxes_Parms.sRespones, &sRespones, 0xC );

	pFnSendDonateTaxes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendDonateTaxes, &SendDonateTaxes_Parms, NULL );

	pFnSendDonateTaxes->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendCollectTaxes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sRespones                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendCollectTaxes ( struct FString sRespones )
{
	static UFunction* pFnSendCollectTaxes = NULL;

	if ( ! pFnSendCollectTaxes )
		pFnSendCollectTaxes = (UFunction*) UObject::GObjObjects()->Data[ 53571 ];

	UNowGFXHudScene_execSendCollectTaxes_Parms SendCollectTaxes_Parms;
	memcpy ( &SendCollectTaxes_Parms.sRespones, &sRespones, 0xC );

	pFnSendCollectTaxes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendCollectTaxes, &SendCollectTaxes_Parms, NULL );

	pFnSendCollectTaxes->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendSetTaxes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sRespones                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendSetTaxes ( struct FString sRespones )
{
	static UFunction* pFnSendSetTaxes = NULL;

	if ( ! pFnSendSetTaxes )
		pFnSendSetTaxes = (UFunction*) UObject::GObjObjects()->Data[ 53569 ];

	UNowGFXHudScene_execSendSetTaxes_Parms SendSetTaxes_Parms;
	memcpy ( &SendSetTaxes_Parms.sRespones, &sRespones, 0xC );

	pFnSendSetTaxes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendSetTaxes, &SendSetTaxes_Parms, NULL );

	pFnSendSetTaxes->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.renderShopList
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::renderShopList ( )
{
	static UFunction* pFnrenderShopList = NULL;

	if ( ! pFnrenderShopList )
		pFnrenderShopList = (UFunction*) UObject::GObjObjects()->Data[ 53568 ];

	UNowGFXHudScene_execrenderShopList_Parms renderShopList_Parms;

	this->ProcessEvent ( pFnrenderShopList, &renderShopList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addShopItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FString                 sCategory                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// struct FString                 sDescription                   ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddShopItem ( int iID, struct FString sCategory, struct FString sLabel, int iCost, struct FString sDescription )
{
	static UFunction* pFnaddShopItem = NULL;

	if ( ! pFnaddShopItem )
		pFnaddShopItem = (UFunction*) UObject::GObjObjects()->Data[ 53562 ];

	UNowGFXHudScene_eventaddShopItem_Parms addShopItem_Parms;
	addShopItem_Parms.iID = iID;
	memcpy ( &addShopItem_Parms.sCategory, &sCategory, 0xC );
	memcpy ( &addShopItem_Parms.sLabel, &sLabel, 0xC );
	addShopItem_Parms.iCost = iCost;
	memcpy ( &addShopItem_Parms.sDescription, &sDescription, 0xC );

	this->ProcessEvent ( pFnaddShopItem, &addShopItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setShopCurrency
// [0x00020002] 
// Parameters infos:
// int                            iCurrency                      ( CPF_Parm )

void UNowGFXHudScene::setShopCurrency ( int iCurrency )
{
	static UFunction* pFnsetShopCurrency = NULL;

	if ( ! pFnsetShopCurrency )
		pFnsetShopCurrency = (UFunction*) UObject::GObjObjects()->Data[ 53560 ];

	UNowGFXHudScene_execsetShopCurrency_Parms setShopCurrency_Parms;
	setShopCurrency_Parms.iCurrency = iCurrency;

	this->ProcessEvent ( pFnsetShopCurrency, &setShopCurrency_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showShop
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showShop ( )
{
	static UFunction* pFnshowShop = NULL;

	if ( ! pFnshowShop )
		pFnshowShop = (UFunction*) UObject::GObjObjects()->Data[ 53559 ];

	UNowGFXHudScene_execshowShop_Parms showShop_Parms;

	this->ProcessEvent ( pFnshowShop, &showShop_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ShopClaimItem
// [0x00020002] 
// Parameters infos:
// int                            iID                            ( CPF_Parm )

void UNowGFXHudScene::ShopClaimItem ( int iID )
{
	static UFunction* pFnShopClaimItem = NULL;

	if ( ! pFnShopClaimItem )
		pFnShopClaimItem = (UFunction*) UObject::GObjObjects()->Data[ 53557 ];

	UNowGFXHudScene_execShopClaimItem_Parms ShopClaimItem_Parms;
	ShopClaimItem_Parms.iID = iID;

	this->ProcessEvent ( pFnShopClaimItem, &ShopClaimItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateCurrency
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::UpdateCurrency ( )
{
	static UFunction* pFnUpdateCurrency = NULL;

	if ( ! pFnUpdateCurrency )
		pFnUpdateCurrency = (UFunction*) UObject::GObjObjects()->Data[ 53556 ];

	UNowGFXHudScene_execUpdateCurrency_Parms UpdateCurrency_Parms;

	this->ProcessEvent ( pFnUpdateCurrency, &UpdateCurrency_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PendingUpdateCurrency
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventPendingUpdateCurrency ( )
{
	static UFunction* pFnPendingUpdateCurrency = NULL;

	if ( ! pFnPendingUpdateCurrency )
		pFnPendingUpdateCurrency = (UFunction*) UObject::GObjObjects()->Data[ 53555 ];

	UNowGFXHudScene_eventPendingUpdateCurrency_Parms PendingUpdateCurrency_Parms;

	this->ProcessEvent ( pFnPendingUpdateCurrency, &PendingUpdateCurrency_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ShopRequestItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ShopRequestItems ( )
{
	static UFunction* pFnShopRequestItems = NULL;

	if ( ! pFnShopRequestItems )
		pFnShopRequestItems = (UFunction*) UObject::GObjObjects()->Data[ 53554 ];

	UNowGFXHudScene_execShopRequestItems_Parms ShopRequestItems_Parms;

	this->ProcessEvent ( pFnShopRequestItems, &ShopRequestItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitShop
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitShop ( )
{
	static UFunction* pFnInitShop = NULL;

	if ( ! pFnInitShop )
		pFnInitShop = (UFunction*) UObject::GObjObjects()->Data[ 53553 ];

	UNowGFXHudScene_execInitShop_Parms InitShop_Parms;

	this->ProcessEvent ( pFnInitShop, &InitShop_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ClaimItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iID                            ( CPF_Parm )

void UNowGFXHudScene::ClaimItem ( int iID )
{
	static UFunction* pFnClaimItem = NULL;

	if ( ! pFnClaimItem )
		pFnClaimItem = (UFunction*) UObject::GObjObjects()->Data[ 53551 ];

	UNowGFXHudScene_execClaimItem_Parms ClaimItem_Parms;
	ClaimItem_Parms.iID = iID;

	pFnClaimItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClaimItem, &ClaimItem_Parms, NULL );

	pFnClaimItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetShopCurrency
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowGFXHudScene::GetShopCurrency ( )
{
	static UFunction* pFnGetShopCurrency = NULL;

	if ( ! pFnGetShopCurrency )
		pFnGetShopCurrency = (UFunction*) UObject::GObjObjects()->Data[ 53549 ];

	UNowGFXHudScene_execGetShopCurrency_Parms GetShopCurrency_Parms;

	pFnGetShopCurrency->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetShopCurrency, &GetShopCurrency_Parms, NULL );

	pFnGetShopCurrency->FunctionFlags |= 0x400;

	return GetShopCurrency_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetShopItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetShopItems ( )
{
	static UFunction* pFnGetShopItems = NULL;

	if ( ! pFnGetShopItems )
		pFnGetShopItems = (UFunction*) UObject::GObjObjects()->Data[ 53548 ];

	UNowGFXHudScene_execGetShopItems_Parms GetShopItems_Parms;

	pFnGetShopItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetShopItems, &GetShopItems_Parms, NULL );

	pFnGetShopItems->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.addTaxRow
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iProm                          ( CPF_Parm )
// int                            iIncome                        ( CPF_Parm )
// int                            iUpkeep                        ( CPF_Parm )
// int                            iPromUpkeep                    ( CPF_Parm )

void UNowGFXHudScene::eventaddTaxRow ( struct FString sName, int iProm, int iIncome, int iUpkeep, int iPromUpkeep )
{
	static UFunction* pFnaddTaxRow = NULL;

	if ( ! pFnaddTaxRow )
		pFnaddTaxRow = (UFunction*) UObject::GObjObjects()->Data[ 53542 ];

	UNowGFXHudScene_eventaddTaxRow_Parms addTaxRow_Parms;
	memcpy ( &addTaxRow_Parms.sName, &sName, 0xC );
	addTaxRow_Parms.iProm = iProm;
	addTaxRow_Parms.iIncome = iIncome;
	addTaxRow_Parms.iUpkeep = iUpkeep;
	addTaxRow_Parms.iPromUpkeep = iPromUpkeep;

	this->ProcessEvent ( pFnaddTaxRow, &addTaxRow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearTaxRows
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearTaxRows ( )
{
	static UFunction* pFnclearTaxRows = NULL;

	if ( ! pFnclearTaxRows )
		pFnclearTaxRows = (UFunction*) UObject::GObjObjects()->Data[ 53541 ];

	UNowGFXHudScene_execclearTaxRows_Parms clearTaxRows_Parms;

	this->ProcessEvent ( pFnclearTaxRows, &clearTaxRows_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showTaxManager
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showTaxManager ( )
{
	static UFunction* pFnshowTaxManager = NULL;

	if ( ! pFnshowTaxManager )
		pFnshowTaxManager = (UFunction*) UObject::GObjObjects()->Data[ 53540 ];

	UNowGFXHudScene_execshowTaxManager_Parms showTaxManager_Parms;

	this->ProcessEvent ( pFnshowTaxManager, &showTaxManager_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitEconomist
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitEconomist ( )
{
	static UFunction* pFnInitEconomist = NULL;

	if ( ! pFnInitEconomist )
		pFnInitEconomist = (UFunction*) UObject::GObjObjects()->Data[ 53539 ];

	UNowGFXHudScene_execInitEconomist_Parms InitEconomist_Parms;

	this->ProcessEvent ( pFnInitEconomist, &InitEconomist_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetUpkeepLogs
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetUpkeepLogs ( )
{
	static UFunction* pFnGetUpkeepLogs = NULL;

	if ( ! pFnGetUpkeepLogs )
		pFnGetUpkeepLogs = (UFunction*) UObject::GObjObjects()->Data[ 53538 ];

	UNowGFXHudScene_execGetUpkeepLogs_Parms GetUpkeepLogs_Parms;

	pFnGetUpkeepLogs->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUpkeepLogs, &GetUpkeepLogs_Parms, NULL );

	pFnGetUpkeepLogs->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddToTitleList
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::eventAddToTitleList ( struct FString sTitle, int iIndex )
{
	static UFunction* pFnAddToTitleList = NULL;

	if ( ! pFnAddToTitleList )
		pFnAddToTitleList = (UFunction*) UObject::GObjObjects()->Data[ 53534 ];

	UNowGFXHudScene_eventAddToTitleList_Parms AddToTitleList_Parms;
	memcpy ( &AddToTitleList_Parms.sTitle, &sTitle, 0xC );
	AddToTitleList_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnAddToTitleList, &AddToTitleList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedTitle
// [0x00020002] 
// Parameters infos:
// int                            iID                            ( CPF_Parm )

void UNowGFXHudScene::ChangedTitle ( int iID )
{
	static UFunction* pFnChangedTitle = NULL;

	if ( ! pFnChangedTitle )
		pFnChangedTitle = (UFunction*) UObject::GObjObjects()->Data[ 53532 ];

	UNowGFXHudScene_execChangedTitle_Parms ChangedTitle_Parms;
	ChangedTitle_Parms.iID = iID;

	this->ProcessEvent ( pFnChangedTitle, &ChangedTitle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedTitleString
// [0x00020002] 
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangedTitleString ( struct FString sTitle )
{
	static UFunction* pFnChangedTitleString = NULL;

	if ( ! pFnChangedTitleString )
		pFnChangedTitleString = (UFunction*) UObject::GObjObjects()->Data[ 53530 ];

	UNowGFXHudScene_execChangedTitleString_Parms ChangedTitleString_Parms;
	memcpy ( &ChangedTitleString_Parms.sTitle, &sTitle, 0xC );

	this->ProcessEvent ( pFnChangedTitleString, &ChangedTitleString_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitTitles
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitTitles ( )
{
	static UFunction* pFnInitTitles = NULL;

	if ( ! pFnInitTitles )
		pFnInitTitles = (UFunction*) UObject::GObjObjects()->Data[ 53528 ];

	UNowGFXHudScene_execInitTitles_Parms InitTitles_Parms;

	this->ProcessEvent ( pFnInitTitles, &InitTitles_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DoSetTitle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iID                            ( CPF_Parm )

void UNowGFXHudScene::DoSetTitle ( int iID )
{
	static UFunction* pFnDoSetTitle = NULL;

	if ( ! pFnDoSetTitle )
		pFnDoSetTitle = (UFunction*) UObject::GObjObjects()->Data[ 53526 ];

	UNowGFXHudScene_execDoSetTitle_Parms DoSetTitle_Parms;
	DoSetTitle_Parms.iID = iID;

	pFnDoSetTitle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSetTitle, &DoSetTitle_Parms, NULL );

	pFnDoSetTitle->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.FillTitleList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillTitleList ( )
{
	static UFunction* pFnFillTitleList = NULL;

	if ( ! pFnFillTitleList )
		pFnFillTitleList = (UFunction*) UObject::GObjObjects()->Data[ 53525 ];

	UNowGFXHudScene_execFillTitleList_Parms FillTitleList_Parms;

	pFnFillTitleList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillTitleList, &FillTitleList_Parms, NULL );

	pFnFillTitleList->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeNoticeboard
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeNoticeboard ( )
{
	static UFunction* pFncloseNoticeboard = NULL;

	if ( ! pFncloseNoticeboard )
		pFncloseNoticeboard = (UFunction*) UObject::GObjObjects()->Data[ 53524 ];

	UNowGFXHudScene_execcloseNoticeboard_Parms closeNoticeboard_Parms;

	this->ProcessEvent ( pFncloseNoticeboard, &closeNoticeboard_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showNoticeboard
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sController                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bModerate                      ( CPF_Parm )

void UNowGFXHudScene::showNoticeboard ( struct FString sGuid, struct FString sName, struct FString sController, unsigned long bModerate )
{
	static UFunction* pFnshowNoticeboard = NULL;

	if ( ! pFnshowNoticeboard )
		pFnshowNoticeboard = (UFunction*) UObject::GObjObjects()->Data[ 53519 ];

	UNowGFXHudScene_execshowNoticeboard_Parms showNoticeboard_Parms;
	memcpy ( &showNoticeboard_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &showNoticeboard_Parms.sName, &sName, 0xC );
	memcpy ( &showNoticeboard_Parms.sController, &sController, 0xC );
	showNoticeboard_Parms.bModerate = bModerate;

	this->ProcessEvent ( pFnshowNoticeboard, &showNoticeboard_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DestroyBook
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::DestroyBook ( struct FString sGuid )
{
	static UFunction* pFnDestroyBook = NULL;

	if ( ! pFnDestroyBook )
		pFnDestroyBook = (UFunction*) UObject::GObjObjects()->Data[ 53515 ];

	UNowGFXHudScene_execDestroyBook_Parms DestroyBook_Parms;
	memcpy ( &DestroyBook_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnDestroyBook, &DestroyBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitNoteboard
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitNoteboard ( )
{
	static UFunction* pFnInitNoteboard = NULL;

	if ( ! pFnInitNoteboard )
		pFnInitNoteboard = (UFunction*) UObject::GObjObjects()->Data[ 53512 ];

	UNowGFXHudScene_execInitNoteboard_Parms InitNoteboard_Parms;

	this->ProcessEvent ( pFnInitNoteboard, &InitNoteboard_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetAndSetTalkerGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetAndSetTalkerGuid ( )
{
	static UFunction* pFnGetAndSetTalkerGuid = NULL;

	if ( ! pFnGetAndSetTalkerGuid )
		pFnGetAndSetTalkerGuid = (UFunction*) UObject::GObjObjects()->Data[ 53511 ];

	UNowGFXHudScene_execGetAndSetTalkerGuid_Parms GetAndSetTalkerGuid_Parms;

	pFnGetAndSetTalkerGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetTalkerGuid, &GetAndSetTalkerGuid_Parms, NULL );

	pFnGetAndSetTalkerGuid->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.TalkStoneCutter
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkStoneCutter ( int iIndex )
{
	static UFunction* pFnTalkStoneCutter = NULL;

	if ( ! pFnTalkStoneCutter )
		pFnTalkStoneCutter = (UFunction*) UObject::GObjObjects()->Data[ 53509 ];

	UNowGFXHudScene_execTalkStoneCutter_Parms TalkStoneCutter_Parms;
	TalkStoneCutter_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkStoneCutter, &TalkStoneCutter_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TakeStone
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iAmount                        ( CPF_Parm )

void UNowGFXHudScene::TakeStone ( int iAmount )
{
	static UFunction* pFnTakeStone = NULL;

	if ( ! pFnTakeStone )
		pFnTakeStone = (UFunction*) UObject::GObjObjects()->Data[ 53507 ];

	UNowGFXHudScene_execTakeStone_Parms TakeStone_Parms;
	TakeStone_Parms.iAmount = iAmount;

	pFnTakeStone->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTakeStone, &TakeStone_Parms, NULL );

	pFnTakeStone->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.TalkMiner
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkMiner ( int iIndex )
{
	static UFunction* pFnTalkMiner = NULL;

	if ( ! pFnTalkMiner )
		pFnTalkMiner = (UFunction*) UObject::GObjObjects()->Data[ 53505 ];

	UNowGFXHudScene_execTalkMiner_Parms TalkMiner_Parms;
	TalkMiner_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkMiner, &TalkMiner_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TakeOre
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iAmount                        ( CPF_Parm )

void UNowGFXHudScene::TakeOre ( int iAmount )
{
	static UFunction* pFnTakeOre = NULL;

	if ( ! pFnTakeOre )
		pFnTakeOre = (UFunction*) UObject::GObjObjects()->Data[ 53503 ];

	UNowGFXHudScene_execTakeOre_Parms TakeOre_Parms;
	TakeOre_Parms.iAmount = iAmount;

	pFnTakeOre->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTakeOre, &TakeOre_Parms, NULL );

	pFnTakeOre->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddSeed
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

void UNowGFXHudScene::eventAddSeed ( struct FString sName, int iSlot )
{
	static UFunction* pFnAddSeed = NULL;

	if ( ! pFnAddSeed )
		pFnAddSeed = (UFunction*) UObject::GObjObjects()->Data[ 53499 ];

	UNowGFXHudScene_eventAddSeed_Parms AddSeed_Parms;
	memcpy ( &AddSeed_Parms.sName, &sName, 0xC );
	AddSeed_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnAddSeed, &AddSeed_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ResetSeedList
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventResetSeedList ( )
{
	static UFunction* pFnResetSeedList = NULL;

	if ( ! pFnResetSeedList )
		pFnResetSeedList = (UFunction*) UObject::GObjObjects()->Data[ 53498 ];

	UNowGFXHudScene_eventResetSeedList_Parms ResetSeedList_Parms;

	this->ProcessEvent ( pFnResetSeedList, &ResetSeedList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GiveSeed
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::GiveSeed ( int iIndex )
{
	static UFunction* pFnGiveSeed = NULL;

	if ( ! pFnGiveSeed )
		pFnGiveSeed = (UFunction*) UObject::GObjObjects()->Data[ 53496 ];

	UNowGFXHudScene_execGiveSeed_Parms GiveSeed_Parms;
	GiveSeed_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnGiveSeed, &GiveSeed_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetInfo
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::GetInfo ( int iIndex )
{
	static UFunction* pFnGetInfo = NULL;

	if ( ! pFnGetInfo )
		pFnGetInfo = (UFunction*) UObject::GObjObjects()->Data[ 53494 ];

	UNowGFXHudScene_execGetInfo_Parms GetInfo_Parms;
	GetInfo_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnGetInfo, &GetInfo_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FindCropsFarmerSeeds
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FindCropsFarmerSeeds ( )
{
	static UFunction* pFnFindCropsFarmerSeeds = NULL;

	if ( ! pFnFindCropsFarmerSeeds )
		pFnFindCropsFarmerSeeds = (UFunction*) UObject::GObjObjects()->Data[ 53493 ];

	UNowGFXHudScene_execFindCropsFarmerSeeds_Parms FindCropsFarmerSeeds_Parms;

	pFnFindCropsFarmerSeeds->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindCropsFarmerSeeds, &FindCropsFarmerSeeds_Parms, NULL );

	pFnFindCropsFarmerSeeds->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.DoGetInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::DoGetInfo ( )
{
	static UFunction* pFnDoGetInfo = NULL;

	if ( ! pFnDoGetInfo )
		pFnDoGetInfo = (UFunction*) UObject::GObjObjects()->Data[ 53492 ];

	UNowGFXHudScene_execDoGetInfo_Parms DoGetInfo_Parms;

	pFnDoGetInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoGetInfo, &DoGetInfo_Parms, NULL );

	pFnDoGetInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.ChangeCrops
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UNowGFXHudScene::ChangeCrops ( int iSlot )
{
	static UFunction* pFnChangeCrops = NULL;

	if ( ! pFnChangeCrops )
		pFnChangeCrops = (UFunction*) UObject::GObjObjects()->Data[ 53490 ];

	UNowGFXHudScene_execChangeCrops_Parms ChangeCrops_Parms;
	ChangeCrops_Parms.iSlot = iSlot;

	pFnChangeCrops->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeCrops, &ChangeCrops_Parms, NULL );

	pFnChangeCrops->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.TalkAnimalBreeder
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkAnimalBreeder ( int iIndex )
{
	static UFunction* pFnTalkAnimalBreeder = NULL;

	if ( ! pFnTalkAnimalBreeder )
		pFnTalkAnimalBreeder = (UFunction*) UObject::GObjObjects()->Data[ 53488 ];

	UNowGFXHudScene_execTalkAnimalBreeder_Parms TalkAnimalBreeder_Parms;
	TalkAnimalBreeder_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkAnimalBreeder, &TalkAnimalBreeder_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangeBreed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarAi*       pPetA                          ( CPF_Parm )

void UNowGFXHudScene::ChangeBreed ( class ANowAtlasAvatarAi* pPetA )
{
	static UFunction* pFnChangeBreed = NULL;

	if ( ! pFnChangeBreed )
		pFnChangeBreed = (UFunction*) UObject::GObjObjects()->Data[ 53486 ];

	UNowGFXHudScene_execChangeBreed_Parms ChangeBreed_Parms;
	ChangeBreed_Parms.pPetA = pPetA;

	pFnChangeBreed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeBreed, &ChangeBreed_Parms, NULL );

	pFnChangeBreed->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.TalkGateKeeper
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkGateKeeper ( int iIndex )
{
	static UFunction* pFnTalkGateKeeper = NULL;

	if ( ! pFnTalkGateKeeper )
		pFnTalkGateKeeper = (UFunction*) UObject::GObjObjects()->Data[ 53484 ];

	UNowGFXHudScene_execTalkGateKeeper_Parms TalkGateKeeper_Parms;
	TalkGateKeeper_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkGateKeeper, &TalkGateKeeper_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GatePayFee
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GatePayFee ( )
{
	static UFunction* pFnGatePayFee = NULL;

	if ( ! pFnGatePayFee )
		pFnGatePayFee = (UFunction*) UObject::GObjObjects()->Data[ 53483 ];

	UNowGFXHudScene_execGatePayFee_Parms GatePayFee_Parms;

	pFnGatePayFee->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGatePayFee, &GatePayFee_Parms, NULL );

	pFnGatePayFee->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GatePassword
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sPassword                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GatePassword ( struct FString sPassword )
{
	static UFunction* pFnGatePassword = NULL;

	if ( ! pFnGatePassword )
		pFnGatePassword = (UFunction*) UObject::GObjObjects()->Data[ 53481 ];

	UNowGFXHudScene_execGatePassword_Parms GatePassword_Parms;
	memcpy ( &GatePassword_Parms.sPassword, &sPassword, 0xC );

	pFnGatePassword->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGatePassword, &GatePassword_Parms, NULL );

	pFnGatePassword->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.ChangeGateRules
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iNewRule                       ( CPF_Parm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangeGateRules ( int iNewRule, struct FString sString )
{
	static UFunction* pFnChangeGateRules = NULL;

	if ( ! pFnChangeGateRules )
		pFnChangeGateRules = (UFunction*) UObject::GObjObjects()->Data[ 53478 ];

	UNowGFXHudScene_execChangeGateRules_Parms ChangeGateRules_Parms;
	ChangeGateRules_Parms.iNewRule = iNewRule;
	memcpy ( &ChangeGateRules_Parms.sString, &sString, 0xC );

	pFnChangeGateRules->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeGateRules, &ChangeGateRules_Parms, NULL );

	pFnChangeGateRules->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showGMHouseWindow
// [0x00020002] 
// Parameters infos:
// int                            iHouseId                       ( CPF_Parm )
// struct FString                 sOwner                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuild                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iHitpoints                     ( CPF_Parm )
// int                            iTierr                         ( CPF_Parm )
// struct FString                 sModules                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showGMHouseWindow ( int iHouseId, struct FString sOwner, struct FString sGuild, int iHitpoints, int iTierr, struct FString sModules )
{
	static UFunction* pFnshowGMHouseWindow = NULL;

	if ( ! pFnshowGMHouseWindow )
		pFnshowGMHouseWindow = (UFunction*) UObject::GObjObjects()->Data[ 53471 ];

	UNowGFXHudScene_execshowGMHouseWindow_Parms showGMHouseWindow_Parms;
	showGMHouseWindow_Parms.iHouseId = iHouseId;
	memcpy ( &showGMHouseWindow_Parms.sOwner, &sOwner, 0xC );
	memcpy ( &showGMHouseWindow_Parms.sGuild, &sGuild, 0xC );
	showGMHouseWindow_Parms.iHitpoints = iHitpoints;
	showGMHouseWindow_Parms.iTierr = iTierr;
	memcpy ( &showGMHouseWindow_Parms.sModules, &sModules, 0xC );

	this->ProcessEvent ( pFnshowGMHouseWindow, &showGMHouseWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GMHouseAction
// [0x00020002] 
// Parameters infos:
// struct FString                 sAction                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GMHouseAction ( struct FString sAction )
{
	static UFunction* pFnGMHouseAction = NULL;

	if ( ! pFnGMHouseAction )
		pFnGMHouseAction = (UFunction*) UObject::GObjObjects()->Data[ 53469 ];

	UNowGFXHudScene_execGMHouseAction_Parms GMHouseAction_Parms;
	memcpy ( &GMHouseAction_Parms.sAction, &sAction, 0xC );

	this->ProcessEvent ( pFnGMHouseAction, &GMHouseAction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GMHouseInputBoxResponse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 msgBoxId                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sResponse                      ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::GMHouseInputBoxResponse ( struct FString msgBoxId, struct FString sResponse )
{
	static UFunction* pFnGMHouseInputBoxResponse = NULL;

	if ( ! pFnGMHouseInputBoxResponse )
		pFnGMHouseInputBoxResponse = (UFunction*) UObject::GObjObjects()->Data[ 53465 ];

	UNowGFXHudScene_execGMHouseInputBoxResponse_Parms GMHouseInputBoxResponse_Parms;
	memcpy ( &GMHouseInputBoxResponse_Parms.msgBoxId, &msgBoxId, 0xC );
	memcpy ( &GMHouseInputBoxResponse_Parms.sResponse, &sResponse, 0xC );

	this->ProcessEvent ( pFnGMHouseInputBoxResponse, &GMHouseInputBoxResponse_Parms, NULL );

	return GMHouseInputBoxResponse_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetModulesString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetModulesString ( )
{
	static UFunction* pFnGetModulesString = NULL;

	if ( ! pFnGetModulesString )
		pFnGetModulesString = (UFunction*) UObject::GObjObjects()->Data[ 53459 ];

	UNowGFXHudScene_execGetModulesString_Parms GetModulesString_Parms;

	this->ProcessEvent ( pFnGetModulesString, &GetModulesString_Parms, NULL );

	return GetModulesString_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitGMHouse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::eventInitGMHouse ( unsigned long bReInit )
{
	static UFunction* pFnInitGMHouse = NULL;

	if ( ! pFnInitGMHouse )
		pFnInitGMHouse = (UFunction*) UObject::GObjObjects()->Data[ 53457 ];

	UNowGFXHudScene_eventInitGMHouse_Parms InitGMHouse_Parms;
	InitGMHouse_Parms.bReInit = bReInit;

	this->ProcessEvent ( pFnInitGMHouse, &InitGMHouse_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkGuildSentinel
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkGuildSentinel ( int iIndex )
{
	static UFunction* pFnTalkGuildSentinel = NULL;

	if ( ! pFnTalkGuildSentinel )
		pFnTalkGuildSentinel = (UFunction*) UObject::GObjObjects()->Data[ 53455 ];

	UNowGFXHudScene_execTalkGuildSentinel_Parms TalkGuildSentinel_Parms;
	TalkGuildSentinel_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkGuildSentinel, &TalkGuildSentinel_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetTSStructureName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sNewName                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SetTSStructureName ( struct FString sNewName )
{
	static UFunction* pFnSetTSStructureName = NULL;

	if ( ! pFnSetTSStructureName )
		pFnSetTSStructureName = (UFunction*) UObject::GObjObjects()->Data[ 53453 ];

	UNowGFXHudScene_execSetTSStructureName_Parms SetTSStructureName_Parms;
	memcpy ( &SetTSStructureName_Parms.sNewName, &sNewName, 0xC );

	pFnSetTSStructureName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTSStructureName, &SetTSStructureName_Parms, NULL );

	pFnSetTSStructureName->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.setHelmetLayer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLayer                         ( CPF_Parm | CPF_NeedCtorLink )
// float                          fOpacity                       ( CPF_Parm )

void UNowGFXHudScene::eventsetHelmetLayer ( struct FString sLayer, float fOpacity )
{
	static UFunction* pFnsetHelmetLayer = NULL;

	if ( ! pFnsetHelmetLayer )
		pFnsetHelmetLayer = (UFunction*) UObject::GObjObjects()->Data[ 53450 ];

	UNowGFXHudScene_eventsetHelmetLayer_Parms setHelmetLayer_Parms;
	memcpy ( &setHelmetLayer_Parms.sLayer, &sLayer, 0xC );
	setHelmetLayer_Parms.fOpacity = fOpacity;

	this->ProcessEvent ( pFnsetHelmetLayer, &setHelmetLayer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetSubSystem
// [0x00020002] 
// Parameters infos:
// class UOnlineSubsystemNowGame* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UOnlineSubsystemNowGame* UNowGFXHudScene::GetSubSystem ( )
{
	static UFunction* pFnGetSubSystem = NULL;

	if ( ! pFnGetSubSystem )
		pFnGetSubSystem = (UFunction*) UObject::GObjObjects()->Data[ 53448 ];

	UNowGFXHudScene_execGetSubSystem_Parms GetSubSystem_Parms;

	this->ProcessEvent ( pFnGetSubSystem, &GetSubSystem_Parms, NULL );

	return GetSubSystem_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.isStaticBag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iDeposit                       ( CPF_Parm )

bool UNowGFXHudScene::eventisStaticBag ( int iDeposit )
{
	static UFunction* pFnisStaticBag = NULL;

	if ( ! pFnisStaticBag )
		pFnisStaticBag = (UFunction*) UObject::GObjObjects()->Data[ 53445 ];

	UNowGFXHudScene_eventisStaticBag_Parms isStaticBag_Parms;
	isStaticBag_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFnisStaticBag, &isStaticBag_Parms, NULL );

	return isStaticBag_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.toggleMouseMode
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXHudScene::toggleMouseMode ( unsigned long bVisible )
{
	static UFunction* pFntoggleMouseMode = NULL;

	if ( ! pFntoggleMouseMode )
		pFntoggleMouseMode = (UFunction*) UObject::GObjObjects()->Data[ 53443 ];

	UNowGFXHudScene_exectoggleMouseMode_Parms toggleMouseMode_Parms;
	toggleMouseMode_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFntoggleMouseMode, &toggleMouseMode_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ConsoleCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 sCmd                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ConsoleCommand ( struct FString sCmd )
{
	static UFunction* pFnConsoleCommand = NULL;

	if ( ! pFnConsoleCommand )
		pFnConsoleCommand = (UFunction*) UObject::GObjObjects()->Data[ 53441 ];

	UNowGFXHudScene_execConsoleCommand_Parms ConsoleCommand_Parms;
	memcpy ( &ConsoleCommand_Parms.sCmd, &sCmd, 0xC );

	this->ProcessEvent ( pFnConsoleCommand, &ConsoleCommand_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReloadUI
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::ReloadUI ( )
{
	static UFunction* pFnReloadUI = NULL;

	if ( ! pFnReloadUI )
		pFnReloadUI = (UFunction*) UObject::GObjObjects()->Data[ 53440 ];

	UNowGFXHudScene_execReloadUI_Parms ReloadUI_Parms;

	this->ProcessEvent ( pFnReloadUI, &ReloadUI_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.resetConfig
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::resetConfig ( )
{
	static UFunction* pFnresetConfig = NULL;

	if ( ! pFnresetConfig )
		pFnresetConfig = (UFunction*) UObject::GObjObjects()->Data[ 53439 ];

	UNowGFXHudScene_execresetConfig_Parms resetConfig_Parms;

	this->ProcessEvent ( pFnresetConfig, &resetConfig_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setAvatar
// [0x00020002] 
// Parameters infos:
// struct FString                 sAvatarId                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setAvatar ( struct FString sAvatarId, struct FString sData )
{
	static UFunction* pFnsetAvatar = NULL;

	if ( ! pFnsetAvatar )
		pFnsetAvatar = (UFunction*) UObject::GObjObjects()->Data[ 53436 ];

	UNowGFXHudScene_execsetAvatar_Parms setAvatar_Parms;
	memcpy ( &setAvatar_Parms.sAvatarId, &sAvatarId, 0xC );
	memcpy ( &setAvatar_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnsetAvatar, &setAvatar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeAllTutorials
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::removeAllTutorials ( )
{
	static UFunction* pFnremoveAllTutorials = NULL;

	if ( ! pFnremoveAllTutorials )
		pFnremoveAllTutorials = (UFunction*) UObject::GObjObjects()->Data[ 53435 ];

	UNowGFXHudScene_execremoveAllTutorials_Parms removeAllTutorials_Parms;

	this->ProcessEvent ( pFnremoveAllTutorials, &removeAllTutorials_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearMenuOptions
// [0x00020002] 
// Parameters infos:
// struct FString                 framename                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::clearMenuOptions ( struct FString framename )
{
	static UFunction* pFnclearMenuOptions = NULL;

	if ( ! pFnclearMenuOptions )
		pFnclearMenuOptions = (UFunction*) UObject::GObjObjects()->Data[ 53433 ];

	UNowGFXHudScene_execclearMenuOptions_Parms clearMenuOptions_Parms;
	memcpy ( &clearMenuOptions_Parms.framename, &framename, 0xC );

	this->ProcessEvent ( pFnclearMenuOptions, &clearMenuOptions_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.set3DRotation
// [0x00020002] 
// Parameters infos:
// struct FString                 Element                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            numberX                        ( CPF_Parm )
// int                            numberY                        ( CPF_Parm )

void UNowGFXHudScene::set3DRotation ( struct FString Element, int numberX, int numberY )
{
	static UFunction* pFnset3DRotation = NULL;

	if ( ! pFnset3DRotation )
		pFnset3DRotation = (UFunction*) UObject::GObjObjects()->Data[ 53429 ];

	UNowGFXHudScene_execset3DRotation_Parms set3DRotation_Parms;
	memcpy ( &set3DRotation_Parms.Element, &Element, 0xC );
	set3DRotation_Parms.numberX = numberX;
	set3DRotation_Parms.numberY = numberY;

	this->ProcessEvent ( pFnset3DRotation, &set3DRotation_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetPosition
// [0x00020002] 
// Parameters infos:
// struct FString                 Element                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            numberX                        ( CPF_Parm )
// int                            numberY                        ( CPF_Parm )

void UNowGFXHudScene::SetPosition ( struct FString Element, int numberX, int numberY )
{
	static UFunction* pFnSetPosition = NULL;

	if ( ! pFnSetPosition )
		pFnSetPosition = (UFunction*) UObject::GObjObjects()->Data[ 53425 ];

	UNowGFXHudScene_execSetPosition_Parms SetPosition_Parms;
	memcpy ( &SetPosition_Parms.Element, &Element, 0xC );
	SetPosition_Parms.numberX = numberX;
	SetPosition_Parms.numberY = numberY;

	this->ProcessEvent ( pFnSetPosition, &SetPosition_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setAlpha
// [0x00020002] 
// Parameters infos:
// struct FString                 Element                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            Percent                        ( CPF_Parm )

void UNowGFXHudScene::setAlpha ( struct FString Element, int Percent )
{
	static UFunction* pFnsetAlpha = NULL;

	if ( ! pFnsetAlpha )
		pFnsetAlpha = (UFunction*) UObject::GObjObjects()->Data[ 53422 ];

	UNowGFXHudScene_execsetAlpha_Parms setAlpha_Parms;
	memcpy ( &setAlpha_Parms.Element, &Element, 0xC );
	setAlpha_Parms.Percent = Percent;

	this->ProcessEvent ( pFnsetAlpha, &setAlpha_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetScale
// [0x00020002] 
// Parameters infos:
// struct FString                 Element                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            Percent                        ( CPF_Parm )

void UNowGFXHudScene::SetScale ( struct FString Element, int Percent )
{
	static UFunction* pFnSetScale = NULL;

	if ( ! pFnSetScale )
		pFnSetScale = (UFunction*) UObject::GObjObjects()->Data[ 53419 ];

	UNowGFXHudScene_execSetScale_Parms SetScale_Parms;
	memcpy ( &SetScale_Parms.Element, &Element, 0xC );
	SetScale_Parms.Percent = Percent;

	this->ProcessEvent ( pFnSetScale, &SetScale_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleElement
// [0x00024002] 
// Parameters infos:
// struct FString                 Element                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  forced                         ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::toggleElement ( struct FString Element, unsigned long forced )
{
	static UFunction* pFntoggleElement = NULL;

	if ( ! pFntoggleElement )
		pFntoggleElement = (UFunction*) UObject::GObjObjects()->Data[ 53416 ];

	UNowGFXHudScene_exectoggleElement_Parms toggleElement_Parms;
	memcpy ( &toggleElement_Parms.Element, &Element, 0xC );
	toggleElement_Parms.forced = forced;

	this->ProcessEvent ( pFntoggleElement, &toggleElement_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setMousePosition
// [0x00020002] 
// Parameters infos:
// int                            xmouse                         ( CPF_Parm )
// int                            ymouse                         ( CPF_Parm )

void UNowGFXHudScene::setMousePosition ( int xmouse, int ymouse )
{
	static UFunction* pFnsetMousePosition = NULL;

	if ( ! pFnsetMousePosition )
		pFnsetMousePosition = (UFunction*) UObject::GObjObjects()->Data[ 53413 ];

	UNowGFXHudScene_execsetMousePosition_Parms setMousePosition_Parms;
	setMousePosition_Parms.xmouse = xmouse;
	setMousePosition_Parms.ymouse = ymouse;

	this->ProcessEvent ( pFnsetMousePosition, &setMousePosition_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChatMessage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sChan                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMsg                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventChatMessage ( struct FString sChan, struct FString sMsg )
{
	static UFunction* pFnChatMessage = NULL;

	if ( ! pFnChatMessage )
		pFnChatMessage = (UFunction*) UObject::GObjObjects()->Data[ 53410 ];

	UNowGFXHudScene_eventChatMessage_Parms ChatMessage_Parms;
	memcpy ( &ChatMessage_Parms.sChan, &sChan, 0xC );
	memcpy ( &ChatMessage_Parms.sMsg, &sMsg, 0xC );

	this->ProcessEvent ( pFnChatMessage, &ChatMessage_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendClientChatmessage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sChan                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMsg                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventSendClientChatmessage ( struct FString sChan, struct FString sMsg )
{
	static UFunction* pFnSendClientChatmessage = NULL;

	if ( ! pFnSendClientChatmessage )
		pFnSendClientChatmessage = (UFunction*) UObject::GObjObjects()->Data[ 53407 ];

	UNowGFXHudScene_eventSendClientChatmessage_Parms SendClientChatmessage_Parms;
	memcpy ( &SendClientChatmessage_Parms.sChan, &sChan, 0xC );
	memcpy ( &SendClientChatmessage_Parms.sMsg, &sMsg, 0xC );

	this->ProcessEvent ( pFnSendClientChatmessage, &SendClientChatmessage_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.MouseModeChanged
// [0x00020002] 
// Parameters infos:
// unsigned long                  bMode                          ( CPF_Parm )

void UNowGFXHudScene::MouseModeChanged ( unsigned long bMode )
{
	static UFunction* pFnMouseModeChanged = NULL;

	if ( ! pFnMouseModeChanged )
		pFnMouseModeChanged = (UFunction*) UObject::GObjObjects()->Data[ 53405 ];

	UNowGFXHudScene_execMouseModeChanged_Parms MouseModeChanged_Parms;
	MouseModeChanged_Parms.bMode = bMode;

	this->ProcessEvent ( pFnMouseModeChanged, &MouseModeChanged_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CloseStuff
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::CloseStuff ( )
{
	static UFunction* pFnCloseStuff = NULL;

	if ( ! pFnCloseStuff )
		pFnCloseStuff = (UFunction*) UObject::GObjObjects()->Data[ 52704 ];

	UNowGFXHudScene_execCloseStuff_Parms CloseStuff_Parms;

	this->ProcessEvent ( pFnCloseStuff, &CloseStuff_Parms, NULL );

	return CloseStuff_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.RemoveTimer
// [0x00020002] 
// Parameters infos:
// struct FString                 timerLabel                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveTimer ( struct FString timerLabel )
{
	static UFunction* pFnRemoveTimer = NULL;

	if ( ! pFnRemoveTimer )
		pFnRemoveTimer = (UFunction*) UObject::GObjObjects()->Data[ 53403 ];

	UNowGFXHudScene_execRemoveTimer_Parms RemoveTimer_Parms;
	memcpy ( &RemoveTimer_Parms.timerLabel, &timerLabel, 0xC );

	this->ProcessEvent ( pFnRemoveTimer, &RemoveTimer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddTimer
// [0x00020002] 
// Parameters infos:
// struct FString                 timerLabel                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            timerSeconds                   ( CPF_Parm )

void UNowGFXHudScene::AddTimer ( struct FString timerLabel, int timerSeconds )
{
	static UFunction* pFnAddTimer = NULL;

	if ( ! pFnAddTimer )
		pFnAddTimer = (UFunction*) UObject::GObjObjects()->Data[ 53400 ];

	UNowGFXHudScene_execAddTimer_Parms AddTimer_Parms;
	memcpy ( &AddTimer_Parms.timerLabel, &timerLabel, 0xC );
	AddTimer_Parms.timerSeconds = timerSeconds;

	this->ProcessEvent ( pFnAddTimer, &AddTimer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showAlert
// [0x00020002] 
// Parameters infos:
// struct FString                 alertMessage                   ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showAlert ( struct FString alertMessage )
{
	static UFunction* pFnshowAlert = NULL;

	if ( ! pFnshowAlert )
		pFnshowAlert = (UFunction*) UObject::GObjObjects()->Data[ 53398 ];

	UNowGFXHudScene_execshowAlert_Parms showAlert_Parms;
	memcpy ( &showAlert_Parms.alertMessage, &alertMessage, 0xC );

	this->ProcessEvent ( pFnshowAlert, &showAlert_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateMountFrame
// [0x00020002] 
// Parameters infos:
// int                            hpCur                          ( CPF_Parm )
// int                            hpMax                          ( CPF_Parm )
// int                            spCur                          ( CPF_Parm )

void UNowGFXHudScene::updateMountFrame ( int hpCur, int hpMax, int spCur )
{
	static UFunction* pFnupdateMountFrame = NULL;

	if ( ! pFnupdateMountFrame )
		pFnupdateMountFrame = (UFunction*) UObject::GObjObjects()->Data[ 53394 ];

	UNowGFXHudScene_execupdateMountFrame_Parms updateMountFrame_Parms;
	updateMountFrame_Parms.hpCur = hpCur;
	updateMountFrame_Parms.hpMax = hpMax;
	updateMountFrame_Parms.spCur = spCur;

	this->ProcessEvent ( pFnupdateMountFrame, &updateMountFrame_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ShowMountPanel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void UNowGFXHudScene::eventShowMountPanel ( unsigned long bShow )
{
	static UFunction* pFnShowMountPanel = NULL;

	if ( ! pFnShowMountPanel )
		pFnShowMountPanel = (UFunction*) UObject::GObjObjects()->Data[ 53389 ];

	UNowGFXHudScene_eventShowMountPanel_Parms ShowMountPanel_Parms;
	ShowMountPanel_Parms.bShow = bShow;

	this->ProcessEvent ( pFnShowMountPanel, &ShowMountPanel_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateTargetFrame
// [0x00024002] 
// Parameters infos:
// int                            hpCur                          ( CPF_Parm )
// int                            hpMax                          ( CPF_Parm )
// unsigned long                  inCombat                       ( CPF_Parm )
// int                            Flag                           ( CPF_Parm )
// struct FString                 tgtName                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bInit                          ( CPF_OptionalParm | CPF_Parm )
// struct FString                 relation                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::updateTargetFrame ( int hpCur, int hpMax, unsigned long inCombat, int Flag, struct FString tgtName, unsigned long bInit, struct FString relation )
{
	static UFunction* pFnupdateTargetFrame = NULL;

	if ( ! pFnupdateTargetFrame )
		pFnupdateTargetFrame = (UFunction*) UObject::GObjObjects()->Data[ 53381 ];

	UNowGFXHudScene_execupdateTargetFrame_Parms updateTargetFrame_Parms;
	updateTargetFrame_Parms.hpCur = hpCur;
	updateTargetFrame_Parms.hpMax = hpMax;
	updateTargetFrame_Parms.inCombat = inCombat;
	updateTargetFrame_Parms.Flag = Flag;
	memcpy ( &updateTargetFrame_Parms.tgtName, &tgtName, 0xC );
	updateTargetFrame_Parms.bInit = bInit;
	memcpy ( &updateTargetFrame_Parms.relation, &relation, 0xC );

	this->ProcessEvent ( pFnupdateTargetFrame, &updateTargetFrame_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeTarget
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::removeTarget ( )
{
	static UFunction* pFnremoveTarget = NULL;

	if ( ! pFnremoveTarget )
		pFnremoveTarget = (UFunction*) UObject::GObjObjects()->Data[ 53380 ];

	UNowGFXHudScene_execremoveTarget_Parms removeTarget_Parms;

	this->ProcessEvent ( pFnremoveTarget, &removeTarget_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddTarget
// [0x00024002] 
// Parameters infos:
// struct FString                 tgtName                        ( CPF_Parm | CPF_NeedCtorLink )
// float                          hpCur                          ( CPF_Parm )
// float                          hpMax                          ( CPF_Parm )
// unsigned long                  inCombat                       ( CPF_Parm )
// int                            Flag                           ( CPF_Parm )
// unsigned long                  bClient                        ( CPF_Parm )
// struct FString                 relation                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddTarget ( struct FString tgtName, float hpCur, float hpMax, unsigned long inCombat, int Flag, unsigned long bClient, struct FString relation )
{
	static UFunction* pFnAddTarget = NULL;

	if ( ! pFnAddTarget )
		pFnAddTarget = (UFunction*) UObject::GObjObjects()->Data[ 53372 ];

	UNowGFXHudScene_execAddTarget_Parms AddTarget_Parms;
	memcpy ( &AddTarget_Parms.tgtName, &tgtName, 0xC );
	AddTarget_Parms.hpCur = hpCur;
	AddTarget_Parms.hpMax = hpMax;
	AddTarget_Parms.inCombat = inCombat;
	AddTarget_Parms.Flag = Flag;
	AddTarget_Parms.bClient = bClient;
	memcpy ( &AddTarget_Parms.relation, &relation, 0xC );

	this->ProcessEvent ( pFnAddTarget, &AddTarget_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetPlayerName
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SetPlayerName ( struct FString Id, struct FString PlayerName )
{
	static UFunction* pFnSetPlayerName = NULL;

	if ( ! pFnSetPlayerName )
		pFnSetPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 53369 ];

	UNowGFXHudScene_execSetPlayerName_Parms SetPlayerName_Parms;
	memcpy ( &SetPlayerName_Parms.Id, &Id, 0xC );
	memcpy ( &SetPlayerName_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnSetPlayerName, &SetPlayerName_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleCombat
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  combat                         ( CPF_Parm )

void UNowGFXHudScene::toggleCombat ( struct FString Id, unsigned long combat )
{
	static UFunction* pFntoggleCombat = NULL;

	if ( ! pFntoggleCombat )
		pFntoggleCombat = (UFunction*) UObject::GObjObjects()->Data[ 53366 ];

	UNowGFXHudScene_exectoggleCombat_Parms toggleCombat_Parms;
	memcpy ( &toggleCombat_Parms.Id, &Id, 0xC );
	toggleCombat_Parms.combat = combat;

	this->ProcessEvent ( pFntoggleCombat, &toggleCombat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setShield
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 WhatColor                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 relation                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bTween                         ( CPF_Parm )

void UNowGFXHudScene::setShield ( struct FString Id, struct FString WhatColor, struct FString relation, unsigned long bTween )
{
	static UFunction* pFnsetShield = NULL;

	if ( ! pFnsetShield )
		pFnsetShield = (UFunction*) UObject::GObjObjects()->Data[ 53361 ];

	UNowGFXHudScene_execsetShield_Parms setShield_Parms;
	memcpy ( &setShield_Parms.Id, &Id, 0xC );
	memcpy ( &setShield_Parms.WhatColor, &WhatColor, 0xC );
	memcpy ( &setShield_Parms.relation, &relation, 0xC );
	setShield_Parms.bTween = bTween;

	this->ProcessEvent ( pFnsetShield, &setShield_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addMenuOption
// [0x00024002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 optionLabel                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 optionAction                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 optionParam                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addMenuOption ( struct FString Id, struct FString optionLabel, struct FString optionAction, struct FString optionParam )
{
	static UFunction* pFnaddMenuOption = NULL;

	if ( ! pFnaddMenuOption )
		pFnaddMenuOption = (UFunction*) UObject::GObjObjects()->Data[ 53356 ];

	UNowGFXHudScene_execaddMenuOption_Parms addMenuOption_Parms;
	memcpy ( &addMenuOption_Parms.Id, &Id, 0xC );
	memcpy ( &addMenuOption_Parms.optionLabel, &optionLabel, 0xC );
	memcpy ( &addMenuOption_Parms.optionAction, &optionAction, 0xC );
	memcpy ( &addMenuOption_Parms.optionParam, &optionParam, 0xC );

	this->ProcessEvent ( pFnaddMenuOption, &addMenuOption_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPotion
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UNowGFXHudScene::setPotion ( struct FString Id, int val )
{
	static UFunction* pFnsetPotion = NULL;

	if ( ! pFnsetPotion )
		pFnsetPotion = (UFunction*) UObject::GObjObjects()->Data[ 53353 ];

	UNowGFXHudScene_execsetPotion_Parms setPotion_Parms;
	memcpy ( &setPotion_Parms.Id, &Id, 0xC );
	setPotion_Parms.val = val;

	this->ProcessEvent ( pFnsetPotion, &setPotion_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setHunger
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UNowGFXHudScene::setHunger ( struct FString Id, int val )
{
	static UFunction* pFnsetHunger = NULL;

	if ( ! pFnsetHunger )
		pFnsetHunger = (UFunction*) UObject::GObjObjects()->Data[ 53350 ];

	UNowGFXHudScene_execsetHunger_Parms setHunger_Parms;
	memcpy ( &setHunger_Parms.Id, &Id, 0xC );
	setHunger_Parms.val = val;

	this->ProcessEvent ( pFnsetHunger, &setHunger_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPotionMax
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UNowGFXHudScene::setPotionMax ( struct FString Id, int val )
{
	static UFunction* pFnsetPotionMax = NULL;

	if ( ! pFnsetPotionMax )
		pFnsetPotionMax = (UFunction*) UObject::GObjObjects()->Data[ 53347 ];

	UNowGFXHudScene_execsetPotionMax_Parms setPotionMax_Parms;
	memcpy ( &setPotionMax_Parms.Id, &Id, 0xC );
	setPotionMax_Parms.val = val;

	this->ProcessEvent ( pFnsetPotionMax, &setPotionMax_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setLowHunger
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UNowGFXHudScene::setLowHunger ( struct FString Id, int val )
{
	static UFunction* pFnsetLowHunger = NULL;

	if ( ! pFnsetLowHunger )
		pFnsetLowHunger = (UFunction*) UObject::GObjObjects()->Data[ 53344 ];

	UNowGFXHudScene_execsetLowHunger_Parms setLowHunger_Parms;
	memcpy ( &setLowHunger_Parms.Id, &Id, 0xC );
	setLowHunger_Parms.val = val;

	this->ProcessEvent ( pFnsetLowHunger, &setLowHunger_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setMidHunger
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UNowGFXHudScene::setMidHunger ( struct FString Id, int val )
{
	static UFunction* pFnsetMidHunger = NULL;

	if ( ! pFnsetMidHunger )
		pFnsetMidHunger = (UFunction*) UObject::GObjObjects()->Data[ 53341 ];

	UNowGFXHudScene_execsetMidHunger_Parms setMidHunger_Parms;
	memcpy ( &setMidHunger_Parms.Id, &Id, 0xC );
	setMidHunger_Parms.val = val;

	this->ProcessEvent ( pFnsetMidHunger, &setMidHunger_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setMaxHunger
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UNowGFXHudScene::setMaxHunger ( struct FString Id, int val )
{
	static UFunction* pFnsetMaxHunger = NULL;

	if ( ! pFnsetMaxHunger )
		pFnsetMaxHunger = (UFunction*) UObject::GObjObjects()->Data[ 53338 ];

	UNowGFXHudScene_execsetMaxHunger_Parms setMaxHunger_Parms;
	memcpy ( &setMaxHunger_Parms.Id, &Id, 0xC );
	setMaxHunger_Parms.val = val;

	this->ProcessEvent ( pFnsetMaxHunger, &setMaxHunger_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setFatigueSP
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// float                          fatiguePercent                 ( CPF_Parm )

void UNowGFXHudScene::setFatigueSP ( struct FString Id, float fatiguePercent )
{
	static UFunction* pFnsetFatigueSP = NULL;

	if ( ! pFnsetFatigueSP )
		pFnsetFatigueSP = (UFunction*) UObject::GObjObjects()->Data[ 53335 ];

	UNowGFXHudScene_execsetFatigueSP_Parms setFatigueSP_Parms;
	memcpy ( &setFatigueSP_Parms.Id, &Id, 0xC );
	setFatigueSP_Parms.fatiguePercent = fatiguePercent;

	this->ProcessEvent ( pFnsetFatigueSP, &setFatigueSP_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setFatigueMP
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// float                          fatiguePercent                 ( CPF_Parm )

void UNowGFXHudScene::setFatigueMP ( struct FString Id, float fatiguePercent )
{
	static UFunction* pFnsetFatigueMP = NULL;

	if ( ! pFnsetFatigueMP )
		pFnsetFatigueMP = (UFunction*) UObject::GObjObjects()->Data[ 53332 ];

	UNowGFXHudScene_execsetFatigueMP_Parms setFatigueMP_Parms;
	memcpy ( &setFatigueMP_Parms.Id, &Id, 0xC );
	setFatigueMP_Parms.fatiguePercent = fatiguePercent;

	this->ProcessEvent ( pFnsetFatigueMP, &setFatigueMP_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setFatigueHP
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// float                          fatiguePercent                 ( CPF_Parm )

void UNowGFXHudScene::setFatigueHP ( struct FString Id, float fatiguePercent )
{
	static UFunction* pFnsetFatigueHP = NULL;

	if ( ! pFnsetFatigueHP )
		pFnsetFatigueHP = (UFunction*) UObject::GObjObjects()->Data[ 53329 ];

	UNowGFXHudScene_execsetFatigueHP_Parms setFatigueHP_Parms;
	memcpy ( &setFatigueHP_Parms.Id, &Id, 0xC );
	setFatigueHP_Parms.fatiguePercent = fatiguePercent;

	this->ProcessEvent ( pFnsetFatigueHP, &setFatigueHP_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setFatigueMax
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// float                          hp                             ( CPF_Parm )
// float                          sp                             ( CPF_Parm )
// float                          mp                             ( CPF_Parm )

void UNowGFXHudScene::setFatigueMax ( struct FString Id, float hp, float sp, float mp )
{
	static UFunction* pFnsetFatigueMax = NULL;

	if ( ! pFnsetFatigueMax )
		pFnsetFatigueMax = (UFunction*) UObject::GObjObjects()->Data[ 53324 ];

	UNowGFXHudScene_execsetFatigueMax_Parms setFatigueMax_Parms;
	memcpy ( &setFatigueMax_Parms.Id, &Id, 0xC );
	setFatigueMax_Parms.hp = hp;
	setFatigueMax_Parms.sp = sp;
	setFatigueMax_Parms.mp = mp;

	this->ProcessEvent ( pFnsetFatigueMax, &setFatigueMax_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCurrentMana
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            manaNew                        ( CPF_Parm )
// unsigned long                  initBar                        ( CPF_Parm )

void UNowGFXHudScene::setCurrentMana ( struct FString Id, int manaNew, unsigned long initBar )
{
	static UFunction* pFnsetCurrentMana = NULL;

	if ( ! pFnsetCurrentMana )
		pFnsetCurrentMana = (UFunction*) UObject::GObjObjects()->Data[ 53320 ];

	UNowGFXHudScene_execsetCurrentMana_Parms setCurrentMana_Parms;
	memcpy ( &setCurrentMana_Parms.Id, &Id, 0xC );
	setCurrentMana_Parms.manaNew = manaNew;
	setCurrentMana_Parms.initBar = initBar;

	this->ProcessEvent ( pFnsetCurrentMana, &setCurrentMana_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCurrentStamina
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            staminaNew                     ( CPF_Parm )
// unsigned long                  initBar                        ( CPF_Parm )

void UNowGFXHudScene::setCurrentStamina ( struct FString Id, int staminaNew, unsigned long initBar )
{
	static UFunction* pFnsetCurrentStamina = NULL;

	if ( ! pFnsetCurrentStamina )
		pFnsetCurrentStamina = (UFunction*) UObject::GObjObjects()->Data[ 53316 ];

	UNowGFXHudScene_execsetCurrentStamina_Parms setCurrentStamina_Parms;
	memcpy ( &setCurrentStamina_Parms.Id, &Id, 0xC );
	setCurrentStamina_Parms.staminaNew = staminaNew;
	setCurrentStamina_Parms.initBar = initBar;

	this->ProcessEvent ( pFnsetCurrentStamina, &setCurrentStamina_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setUnitMax
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            Health                         ( CPF_Parm )
// int                            stamina                        ( CPF_Parm )
// int                            mana                           ( CPF_Parm )
// int                            kau                            ( CPF_Parm )

void UNowGFXHudScene::setUnitMax ( struct FString Id, int Health, int stamina, int mana, int kau )
{
	static UFunction* pFnsetUnitMax = NULL;

	if ( ! pFnsetUnitMax )
		pFnsetUnitMax = (UFunction*) UObject::GObjObjects()->Data[ 53310 ];

	UNowGFXHudScene_execsetUnitMax_Parms setUnitMax_Parms;
	memcpy ( &setUnitMax_Parms.Id, &Id, 0xC );
	setUnitMax_Parms.Health = Health;
	setUnitMax_Parms.stamina = stamina;
	setUnitMax_Parms.mana = mana;
	setUnitMax_Parms.kau = kau;

	this->ProcessEvent ( pFnsetUnitMax, &setUnitMax_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCurrentHealth
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            healthNew                      ( CPF_Parm )
// unsigned long                  initBar                        ( CPF_Parm )

void UNowGFXHudScene::setCurrentHealth ( struct FString Id, int healthNew, unsigned long initBar )
{
	static UFunction* pFnsetCurrentHealth = NULL;

	if ( ! pFnsetCurrentHealth )
		pFnsetCurrentHealth = (UFunction*) UObject::GObjObjects()->Data[ 53306 ];

	UNowGFXHudScene_execsetCurrentHealth_Parms setCurrentHealth_Parms;
	memcpy ( &setCurrentHealth_Parms.Id, &Id, 0xC );
	setCurrentHealth_Parms.healthNew = healthNew;
	setCurrentHealth_Parms.initBar = initBar;

	this->ProcessEvent ( pFnsetCurrentHealth, &setCurrentHealth_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCurrentKau
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            kauNew                         ( CPF_Parm )
// unsigned long                  initBar                        ( CPF_Parm )

void UNowGFXHudScene::setCurrentKau ( struct FString Id, int kauNew, unsigned long initBar )
{
	static UFunction* pFnsetCurrentKau = NULL;

	if ( ! pFnsetCurrentKau )
		pFnsetCurrentKau = (UFunction*) UObject::GObjObjects()->Data[ 53302 ];

	UNowGFXHudScene_execsetCurrentKau_Parms setCurrentKau_Parms;
	memcpy ( &setCurrentKau_Parms.Id, &Id, 0xC );
	setCurrentKau_Parms.kauNew = kauNew;
	setCurrentKau_Parms.initBar = initBar;

	this->ProcessEvent ( pFnsetCurrentKau, &setCurrentKau_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPlayerDead
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDead                          ( CPF_Parm )

void UNowGFXHudScene::setPlayerDead ( unsigned long bDead )
{
	static UFunction* pFnsetPlayerDead = NULL;

	if ( ! pFnsetPlayerDead )
		pFnsetPlayerDead = (UFunction*) UObject::GObjObjects()->Data[ 53300 ];

	UNowGFXHudScene_execsetPlayerDead_Parms setPlayerDead_Parms;
	setPlayerDead_Parms.bDead = bDead;

	this->ProcessEvent ( pFnsetPlayerDead, &setPlayerDead_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleCorrupt
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            barId                          ( CPF_Parm )
// unsigned long                  corrupted                      ( CPF_Parm )

void UNowGFXHudScene::eventtoggleCorrupt ( struct FString Id, int barId, unsigned long corrupted )
{
	static UFunction* pFntoggleCorrupt = NULL;

	if ( ! pFntoggleCorrupt )
		pFntoggleCorrupt = (UFunction*) UObject::GObjObjects()->Data[ 53296 ];

	UNowGFXHudScene_eventtoggleCorrupt_Parms toggleCorrupt_Parms;
	memcpy ( &toggleCorrupt_Parms.Id, &Id, 0xC );
	toggleCorrupt_Parms.barId = barId;
	toggleCorrupt_Parms.corrupted = corrupted;

	this->ProcessEvent ( pFntoggleCorrupt, &toggleCorrupt_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.togglePoison
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            barId                          ( CPF_Parm )
// unsigned long                  poisoned                       ( CPF_Parm )

void UNowGFXHudScene::eventtogglePoison ( struct FString Id, int barId, unsigned long poisoned )
{
	static UFunction* pFntogglePoison = NULL;

	if ( ! pFntogglePoison )
		pFntogglePoison = (UFunction*) UObject::GObjObjects()->Data[ 53292 ];

	UNowGFXHudScene_eventtogglePoison_Parms togglePoison_Parms;
	memcpy ( &togglePoison_Parms.Id, &Id, 0xC );
	togglePoison_Parms.barId = barId;
	togglePoison_Parms.poisoned = poisoned;

	this->ProcessEvent ( pFntogglePoison, &togglePoison_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeUnitFrame
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeUnitFrame ( struct FString Id )
{
	static UFunction* pFnremoveUnitFrame = NULL;

	if ( ! pFnremoveUnitFrame )
		pFnremoveUnitFrame = (UFunction*) UObject::GObjObjects()->Data[ 53290 ];

	UNowGFXHudScene_execremoveUnitFrame_Parms removeUnitFrame_Parms;
	memcpy ( &removeUnitFrame_Parms.Id, &Id, 0xC );

	this->ProcessEvent ( pFnremoveUnitFrame, &removeUnitFrame_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addUnitFrame
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            initHealthCurrent              ( CPF_Parm )
// int                            initHealthMaximum              ( CPF_Parm )
// int                            initStaminaCurrent             ( CPF_Parm )
// int                            initStaminaMaximum             ( CPF_Parm )
// int                            initManaCurrent                ( CPF_Parm )
// int                            initManaMaximum                ( CPF_Parm )
// int                            initKauCurrent                 ( CPF_Parm )
// int                            initKauMax                     ( CPF_Parm )
// unsigned long                  initCombat                     ( CPF_Parm )
// int                            showLabelsState                ( CPF_Parm )
// struct FString                 shieldPosition                 ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addUnitFrame ( struct FString Id, struct FString PlayerName, int initHealthCurrent, int initHealthMaximum, int initStaminaCurrent, int initStaminaMaximum, int initManaCurrent, int initManaMaximum, int initKauCurrent, int initKauMax, unsigned long initCombat, int showLabelsState, struct FString shieldPosition )
{
	static UFunction* pFnaddUnitFrame = NULL;

	if ( ! pFnaddUnitFrame )
		pFnaddUnitFrame = (UFunction*) UObject::GObjObjects()->Data[ 53276 ];

	UNowGFXHudScene_execaddUnitFrame_Parms addUnitFrame_Parms;
	memcpy ( &addUnitFrame_Parms.Id, &Id, 0xC );
	memcpy ( &addUnitFrame_Parms.PlayerName, &PlayerName, 0xC );
	addUnitFrame_Parms.initHealthCurrent = initHealthCurrent;
	addUnitFrame_Parms.initHealthMaximum = initHealthMaximum;
	addUnitFrame_Parms.initStaminaCurrent = initStaminaCurrent;
	addUnitFrame_Parms.initStaminaMaximum = initStaminaMaximum;
	addUnitFrame_Parms.initManaCurrent = initManaCurrent;
	addUnitFrame_Parms.initManaMaximum = initManaMaximum;
	addUnitFrame_Parms.initKauCurrent = initKauCurrent;
	addUnitFrame_Parms.initKauMax = initKauMax;
	addUnitFrame_Parms.initCombat = initCombat;
	addUnitFrame_Parms.showLabelsState = showLabelsState;
	memcpy ( &addUnitFrame_Parms.shieldPosition, &shieldPosition, 0xC );

	this->ProcessEvent ( pFnaddUnitFrame, &addUnitFrame_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showUnitFrameDetails
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            showState                      ( CPF_Parm )

void UNowGFXHudScene::showUnitFrameDetails ( struct FString Id, int showState )
{
	static UFunction* pFnshowUnitFrameDetails = NULL;

	if ( ! pFnshowUnitFrameDetails )
		pFnshowUnitFrameDetails = (UFunction*) UObject::GObjObjects()->Data[ 53273 ];

	UNowGFXHudScene_execshowUnitFrameDetails_Parms showUnitFrameDetails_Parms;
	memcpy ( &showUnitFrameDetails_Parms.Id, &Id, 0xC );
	showUnitFrameDetails_Parms.showState = showState;

	this->ProcessEvent ( pFnshowUnitFrameDetails, &showUnitFrameDetails_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleExtra
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::toggleExtra ( )
{
	static UFunction* pFntoggleExtra = NULL;

	if ( ! pFntoggleExtra )
		pFntoggleExtra = (UFunction*) UObject::GObjObjects()->Data[ 53272 ];

	UNowGFXHudScene_exectoggleExtra_Parms toggleExtra_Parms;

	this->ProcessEvent ( pFntoggleExtra, &toggleExtra_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleReserves
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::toggleReserves ( )
{
	static UFunction* pFntoggleReserves = NULL;

	if ( ! pFntoggleReserves )
		pFntoggleReserves = (UFunction*) UObject::GObjObjects()->Data[ 53271 ];

	UNowGFXHudScene_exectoggleReserves_Parms toggleReserves_Parms;

	this->ProcessEvent ( pFntoggleReserves, &toggleReserves_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlayerBars
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPlayerBars ( )
{
	static UFunction* pFnInitPlayerBars = NULL;

	if ( ! pFnInitPlayerBars )
		pFnInitPlayerBars = (UFunction*) UObject::GObjObjects()->Data[ 53253 ];

	UNowGFXHudScene_execInitPlayerBars_Parms InitPlayerBars_Parms;

	this->ProcessEvent ( pFnInitPlayerBars, &InitPlayerBars_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitTargetBars
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitTargetBars ( )
{
	static UFunction* pFnInitTargetBars = NULL;

	if ( ! pFnInitTargetBars )
		pFnInitTargetBars = (UFunction*) UObject::GObjObjects()->Data[ 53252 ];

	UNowGFXHudScene_execInitTargetBars_Parms InitTargetBars_Parms;

	this->ProcessEvent ( pFnInitTargetBars, &InitTargetBars_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ToggleTutorials
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ToggleTutorials ( )
{
	static UFunction* pFnToggleTutorials = NULL;

	if ( ! pFnToggleTutorials )
		pFnToggleTutorials = (UFunction*) UObject::GObjObjects()->Data[ 53251 ];

	UNowGFXHudScene_execToggleTutorials_Parms ToggleTutorials_Parms;

	this->ProcessEvent ( pFnToggleTutorials, &ToggleTutorials_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTutorial
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 tutorialLabel                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 tutorialContent                ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addTutorial ( int Id, struct FString tutorialLabel, struct FString tutorialContent )
{
	static UFunction* pFnaddTutorial = NULL;

	if ( ! pFnaddTutorial )
		pFnaddTutorial = (UFunction*) UObject::GObjObjects()->Data[ 53247 ];

	UNowGFXHudScene_execaddTutorial_Parms addTutorial_Parms;
	addTutorial_Parms.Id = Id;
	memcpy ( &addTutorial_Parms.tutorialLabel, &tutorialLabel, 0xC );
	memcpy ( &addTutorial_Parms.tutorialContent, &tutorialContent, 0xC );

	this->ProcessEvent ( pFnaddTutorial, &addTutorial_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.disableTutorial
// [0x00020002] 
// Parameters infos:
// int                            tutorialId                     ( CPF_Parm )

void UNowGFXHudScene::disableTutorial ( int tutorialId )
{
	static UFunction* pFndisableTutorial = NULL;

	if ( ! pFndisableTutorial )
		pFndisableTutorial = (UFunction*) UObject::GObjObjects()->Data[ 53245 ];

	UNowGFXHudScene_execdisableTutorial_Parms disableTutorial_Parms;
	disableTutorial_Parms.tutorialId = tutorialId;

	this->ProcessEvent ( pFndisableTutorial, &disableTutorial_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetRotActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* UNowGFXHudScene::GetRotActor ( )
{
	static UFunction* pFnGetRotActor = NULL;

	if ( ! pFnGetRotActor )
		pFnGetRotActor = (UFunction*) UObject::GObjObjects()->Data[ 53243 ];

	UNowGFXHudScene_execGetRotActor_Parms GetRotActor_Parms;

	this->ProcessEvent ( pFnGetRotActor, &GetRotActor_Parms, NULL );

	return GetRotActor_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.FindInChatArray
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  TestActor                      ( CPF_Parm )

int UNowGFXHudScene::FindInChatArray ( class AActor* TestActor )
{
	static UFunction* pFnFindInChatArray = NULL;

	if ( ! pFnFindInChatArray )
		pFnFindInChatArray = (UFunction*) UObject::GObjObjects()->Data[ 53239 ];

	UNowGFXHudScene_execFindInChatArray_Parms FindInChatArray_Parms;
	FindInChatArray_Parms.TestActor = TestActor;

	this->ProcessEvent ( pFnFindInChatArray, &FindInChatArray_Parms, NULL );

	return FindInChatArray_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.removedChatBubble
// [0x00020002] 
// Parameters infos:
// struct FString                 chatAvatar                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removedChatBubble ( struct FString chatAvatar )
{
	static UFunction* pFnremovedChatBubble = NULL;

	if ( ! pFnremovedChatBubble )
		pFnremovedChatBubble = (UFunction*) UObject::GObjObjects()->Data[ 53236 ];

	UNowGFXHudScene_execremovedChatBubble_Parms removedChatBubble_Parms;
	memcpy ( &removedChatBubble_Parms.chatAvatar, &chatAvatar, 0xC );

	this->ProcessEvent ( pFnremovedChatBubble, &removedChatBubble_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.chatBubblePosition
// [0x00020002] 
// Parameters infos:
// struct FString                 chatAvatar                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            chatX                          ( CPF_Parm )
// int                            chatY                          ( CPF_Parm )
// int                            chatDistance                   ( CPF_Parm )

void UNowGFXHudScene::chatBubblePosition ( struct FString chatAvatar, int chatX, int chatY, int chatDistance )
{
	static UFunction* pFnchatBubblePosition = NULL;

	if ( ! pFnchatBubblePosition )
		pFnchatBubblePosition = (UFunction*) UObject::GObjObjects()->Data[ 53231 ];

	UNowGFXHudScene_execchatBubblePosition_Parms chatBubblePosition_Parms;
	memcpy ( &chatBubblePosition_Parms.chatAvatar, &chatAvatar, 0xC );
	chatBubblePosition_Parms.chatX = chatX;
	chatBubblePosition_Parms.chatY = chatY;
	chatBubblePosition_Parms.chatDistance = chatDistance;

	this->ProcessEvent ( pFnchatBubblePosition, &chatBubblePosition_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addChatBubble
// [0x00020002] 
// Parameters infos:
// struct FString                 avatarName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 chatText                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            chatX                          ( CPF_Parm )
// int                            chatY                          ( CPF_Parm )
// int                            chatDistance                   ( CPF_Parm )
// int                            chatChannel                    ( CPF_Parm )

void UNowGFXHudScene::addChatBubble ( struct FString avatarName, struct FString chatText, int chatX, int chatY, int chatDistance, int chatChannel )
{
	static UFunction* pFnaddChatBubble = NULL;

	if ( ! pFnaddChatBubble )
		pFnaddChatBubble = (UFunction*) UObject::GObjObjects()->Data[ 53224 ];

	UNowGFXHudScene_execaddChatBubble_Parms addChatBubble_Parms;
	memcpy ( &addChatBubble_Parms.avatarName, &avatarName, 0xC );
	memcpy ( &addChatBubble_Parms.chatText, &chatText, 0xC );
	addChatBubble_Parms.chatX = chatX;
	addChatBubble_Parms.chatY = chatY;
	addChatBubble_Parms.chatDistance = chatDistance;
	addChatBubble_Parms.chatChannel = chatChannel;

	this->ProcessEvent ( pFnaddChatBubble, &addChatBubble_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addChat
// [0x00820002] 
// Parameters infos:
// class AActor*                  ChatOwner                      ( CPF_Parm )
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            Channel                        ( CPF_Parm )

void UNowGFXHudScene::addChat ( class AActor* ChatOwner, struct FString Text, int Channel )
{
	static UFunction* pFnaddChat = NULL;

	if ( ! pFnaddChat )
		pFnaddChat = (UFunction*) UObject::GObjObjects()->Data[ 53219 ];

	UNowGFXHudScene_execaddChat_Parms addChat_Parms;
	addChat_Parms.ChatOwner = ChatOwner;
	memcpy ( &addChat_Parms.Text, &Text, 0xC );
	addChat_Parms.Channel = Channel;

	this->ProcessEvent ( pFnaddChat, &addChat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateChatBubbles
// [0x00820002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )

void UNowGFXHudScene::updateChatBubbles ( int Index, class UCanvas* Canvas )
{
	static UFunction* pFnupdateChatBubbles = NULL;

	if ( ! pFnupdateChatBubbles )
		pFnupdateChatBubbles = (UFunction*) UObject::GObjObjects()->Data[ 53210 ];

	UNowGFXHudScene_execupdateChatBubbles_Parms updateChatBubbles_Parms;
	updateChatBubbles_Parms.Index = Index;
	updateChatBubbles_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnupdateChatBubbles, &updateChatBubbles_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GFXHudTick
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowGFXHudScene::GFXHudTick ( class UCanvas* C )
{
	static UFunction* pFnGFXHudTick = NULL;

	if ( ! pFnGFXHudTick )
		pFnGFXHudTick = (UFunction*) UObject::GObjObjects()->Data[ 53207 ];

	UNowGFXHudScene_execGFXHudTick_Parms GFXHudTick_Parms;
	GFXHudTick_Parms.C = C;

	this->ProcessEvent ( pFnGFXHudTick, &GFXHudTick_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.resetUI
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::resetUI ( )
{
	static UFunction* pFnresetUI = NULL;

	if ( ! pFnresetUI )
		pFnresetUI = (UFunction*) UObject::GObjObjects()->Data[ 53206 ];

	UNowGFXHudScene_execresetUI_Parms resetUI_Parms;

	this->ProcessEvent ( pFnresetUI, &resetUI_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TickPendingDepositUpdate
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UNowGFXHudScene::TickPendingDepositUpdate ( float fDeltaTime )
{
	static UFunction* pFnTickPendingDepositUpdate = NULL;

	if ( ! pFnTickPendingDepositUpdate )
		pFnTickPendingDepositUpdate = (UFunction*) UObject::GObjObjects()->Data[ 53204 ];

	UNowGFXHudScene_execTickPendingDepositUpdate_Parms TickPendingDepositUpdate_Parms;
	TickPendingDepositUpdate_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickPendingDepositUpdate, &TickPendingDepositUpdate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.gfxTick
// [0x00020002] 
// Parameters infos:
// float                          dTime                          ( CPF_Parm )

void UNowGFXHudScene::gfxTick ( float dTime )
{
	static UFunction* pFngfxTick = NULL;

	if ( ! pFngfxTick )
		pFngfxTick = (UFunction*) UObject::GObjObjects()->Data[ 53202 ];

	UNowGFXHudScene_execgfxTick_Parms gfxTick_Parms;
	gfxTick_Parms.dTime = dTime;

	this->ProcessEvent ( pFngfxTick, &gfxTick_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveMailDelegate
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::RemoveMailDelegate ( )
{
	static UFunction* pFnRemoveMailDelegate = NULL;

	if ( ! pFnRemoveMailDelegate )
		pFnRemoveMailDelegate = (UFunction*) UObject::GObjObjects()->Data[ 53201 ];

	UNowGFXHudScene_execRemoveMailDelegate_Parms RemoveMailDelegate_Parms;

	this->ProcessEvent ( pFnRemoveMailDelegate, &RemoveMailDelegate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitMailDelegate
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitMailDelegate ( )
{
	static UFunction* pFnInitMailDelegate = NULL;

	if ( ! pFnInitMailDelegate )
		pFnInitMailDelegate = (UFunction*) UObject::GObjObjects()->Data[ 53200 ];

	UNowGFXHudScene_execInitMailDelegate_Parms InitMailDelegate_Parms;

	this->ProcessEvent ( pFnInitMailDelegate, &InitMailDelegate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.LoggedOut
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventLoggedOut ( )
{
	static UFunction* pFnLoggedOut = NULL;

	if ( ! pFnLoggedOut )
		pFnLoggedOut = (UFunction*) UObject::GObjObjects()->Data[ 53199 ];

	UNowGFXHudScene_eventLoggedOut_Parms LoggedOut_Parms;

	this->ProcessEvent ( pFnLoggedOut, &LoggedOut_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGFXScene
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXHudScene::InitGFXScene ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInitGFXScene = NULL;

	if ( ! pFnInitGFXScene )
		pFnInitGFXScene = (UFunction*) UObject::GObjObjects()->Data[ 53191 ];

	UNowGFXHudScene_execInitGFXScene_Parms InitGFXScene_Parms;
	InitGFXScene_Parms.Player = Player;
	InitGFXScene_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInitGFXScene, &InitGFXScene_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TakeMouseFocus
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void UNowGFXHudScene::TakeMouseFocus ( unsigned long bOn )
{
	static UFunction* pFnTakeMouseFocus = NULL;

	if ( ! pFnTakeMouseFocus )
		pFnTakeMouseFocus = (UFunction*) UObject::GObjObjects()->Data[ 53189 ];

	UNowGFXHudScene_execTakeMouseFocus_Parms TakeMouseFocus_Parms;
	TakeMouseFocus_Parms.bOn = bOn;

	this->ProcessEvent ( pFnTakeMouseFocus, &TakeMouseFocus_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.OnClose
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventOnClose ( )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = (UFunction*) UObject::GObjObjects()->Data[ 53188 ];

	UNowGFXHudScene_eventOnClose_Parms OnClose_Parms;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UNowGFXHudScene::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 53183 ];

	UNowGFXHudScene_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CheckAndSetCoolDown
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fTimePassed                    ( CPF_Parm )

bool UNowGFXHudScene::eventCheckAndSetCoolDown ( float fTimePassed )
{
	static UFunction* pFnCheckAndSetCoolDown = NULL;

	if ( ! pFnCheckAndSetCoolDown )
		pFnCheckAndSetCoolDown = (UFunction*) UObject::GObjObjects()->Data[ 53180 ];

	UNowGFXHudScene_eventCheckAndSetCoolDown_Parms CheckAndSetCoolDown_Parms;
	CheckAndSetCoolDown_Parms.fTimePassed = fTimePassed;

	this->ProcessEvent ( pFnCheckAndSetCoolDown, &CheckAndSetCoolDown_Parms, NULL );

	return CheckAndSetCoolDown_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SetPendingDepositUpdate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iDeposit                       ( CPF_Parm )

void UNowGFXHudScene::eventSetPendingDepositUpdate ( int iDeposit )
{
	static UFunction* pFnSetPendingDepositUpdate = NULL;

	if ( ! pFnSetPendingDepositUpdate )
		pFnSetPendingDepositUpdate = (UFunction*) UObject::GObjObjects()->Data[ 53174 ];

	UNowGFXHudScene_eventSetPendingDepositUpdate_Parms SetPendingDepositUpdate_Parms;
	SetPendingDepositUpdate_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFnSetPendingDepositUpdate, &SetPendingDepositUpdate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DoConsoleCommand
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sCmd                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::DoConsoleCommand ( struct FString sCmd )
{
	static UFunction* pFnDoConsoleCommand = NULL;

	if ( ! pFnDoConsoleCommand )
		pFnDoConsoleCommand = (UFunction*) UObject::GObjObjects()->Data[ 53172 ];

	UNowGFXHudScene_execDoConsoleCommand_Parms DoConsoleCommand_Parms;
	memcpy ( &DoConsoleCommand_Parms.sCmd, &sCmd, 0xC );

	pFnDoConsoleCommand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoConsoleCommand, &DoConsoleCommand_Parms, NULL );

	pFnDoConsoleCommand->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneLockpicking.initLockpicking
// [0x00020002] 
// Parameters infos:
// int                            iNumPins                       ( CPF_Parm )
// int                            iDifficulty                    ( CPF_Parm )
// int                            iSkillLevel                    ( CPF_Parm )
// int                            iNumPicks                      ( CPF_Parm )

void UNowGFXSceneLockpicking::initLockpicking ( int iNumPins, int iDifficulty, int iSkillLevel, int iNumPicks )
{
	static UFunction* pFninitLockpicking = NULL;

	if ( ! pFninitLockpicking )
		pFninitLockpicking = (UFunction*) UObject::GObjObjects()->Data[ 56108 ];

	UNowGFXSceneLockpicking_execinitLockpicking_Parms initLockpicking_Parms;
	initLockpicking_Parms.iNumPins = iNumPins;
	initLockpicking_Parms.iDifficulty = iDifficulty;
	initLockpicking_Parms.iSkillLevel = iSkillLevel;
	initLockpicking_Parms.iNumPicks = iNumPicks;

	this->ProcessEvent ( pFninitLockpicking, &initLockpicking_Parms, NULL );
};

// Function NowGame.NowGFXSceneLockpicking.GFXClose
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneLockpicking::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = (UFunction*) UObject::GObjObjects()->Data[ 56107 ];

	UNowGFXSceneLockpicking_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXSceneLockpicking.LockOpened
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneLockpicking::LockOpened ( )
{
	static UFunction* pFnLockOpened = NULL;

	if ( ! pFnLockOpened )
		pFnLockOpened = (UFunction*) UObject::GObjObjects()->Data[ 56106 ];

	UNowGFXSceneLockpicking_execLockOpened_Parms LockOpened_Parms;

	this->ProcessEvent ( pFnLockOpened, &LockOpened_Parms, NULL );
};

// Function NowGame.NowGFXSceneLockpicking.PickBroken
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneLockpicking::PickBroken ( )
{
	static UFunction* pFnPickBroken = NULL;

	if ( ! pFnPickBroken )
		pFnPickBroken = (UFunction*) UObject::GObjObjects()->Data[ 56105 ];

	UNowGFXSceneLockpicking_execPickBroken_Parms PickBroken_Parms;

	this->ProcessEvent ( pFnPickBroken, &PickBroken_Parms, NULL );
};

// Function NowGame.NowGFXSceneLockpicking.InitGFXScene
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneLockpicking::InitGFXScene ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInitGFXScene = NULL;

	if ( ! pFnInitGFXScene )
		pFnInitGFXScene = (UFunction*) UObject::GObjObjects()->Data[ 56100 ];

	UNowGFXSceneLockpicking_execInitGFXScene_Parms InitGFXScene_Parms;
	InitGFXScene_Parms.Player = Player;
	InitGFXScene_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInitGFXScene, &InitGFXScene_Parms, NULL );
};

// Function NowGame.NowGFXSceneLockpicking.GetChestStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXSceneLockpicking::GetChestStats ( )
{
	static UFunction* pFnGetChestStats = NULL;

	if ( ! pFnGetChestStats )
		pFnGetChestStats = (UFunction*) UObject::GObjObjects()->Data[ 56099 ];

	UNowGFXSceneLockpicking_execGetChestStats_Parms GetChestStats_Parms;

	pFnGetChestStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetChestStats, &GetChestStats_Parms, NULL );

	pFnGetChestStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneLockpicking.SendOpenLock
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXSceneLockpicking::SendOpenLock ( )
{
	static UFunction* pFnSendOpenLock = NULL;

	if ( ! pFnSendOpenLock )
		pFnSendOpenLock = (UFunction*) UObject::GObjObjects()->Data[ 56098 ];

	UNowGFXSceneLockpicking_execSendOpenLock_Parms SendOpenLock_Parms;

	pFnSendOpenLock->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendOpenLock, &SendOpenLock_Parms, NULL );

	pFnSendOpenLock->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneLockpicking.SendPickBroken
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXSceneLockpicking::SendPickBroken ( )
{
	static UFunction* pFnSendPickBroken = NULL;

	if ( ! pFnSendPickBroken )
		pFnSendPickBroken = (UFunction*) UObject::GObjObjects()->Data[ 56097 ];

	UNowGFXSceneLockpicking_execSendPickBroken_Parms SendPickBroken_Parms;

	pFnSendPickBroken->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendPickBroken, &SendPickBroken_Parms, NULL );

	pFnSendPickBroken->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneMainMenu.hideModal
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::hideModal ( )
{
	static UFunction* pFnhideModal = NULL;

	if ( ! pFnhideModal )
		pFnhideModal = (UFunction*) UObject::GObjObjects()->Data[ 56343 ];

	UNowGFXSceneMainMenu_exechideModal_Parms hideModal_Parms;

	this->ProcessEvent ( pFnhideModal, &hideModal_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.clearCladeBoxes
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::clearCladeBoxes ( )
{
	static UFunction* pFnclearCladeBoxes = NULL;

	if ( ! pFnclearCladeBoxes )
		pFnclearCladeBoxes = (UFunction*) UObject::GObjObjects()->Data[ 56342 ];

	UNowGFXSceneMainMenu_execclearCladeBoxes_Parms clearCladeBoxes_Parms;

	this->ProcessEvent ( pFnclearCladeBoxes, &clearCladeBoxes_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.addSelectBoxClade
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iTop                           ( CPF_Parm )
// int                            iLeft                          ( CPF_Parm )
// int                            iWidth                         ( CPF_Parm )
// int                            iHeight                        ( CPF_Parm )

void UNowGFXSceneMainMenu::addSelectBoxClade ( struct FString sName, int iTop, int iLeft, int iWidth, int iHeight )
{
	static UFunction* pFnaddSelectBoxClade = NULL;

	if ( ! pFnaddSelectBoxClade )
		pFnaddSelectBoxClade = (UFunction*) UObject::GObjObjects()->Data[ 56336 ];

	UNowGFXSceneMainMenu_execaddSelectBoxClade_Parms addSelectBoxClade_Parms;
	memcpy ( &addSelectBoxClade_Parms.sName, &sName, 0xC );
	addSelectBoxClade_Parms.iTop = iTop;
	addSelectBoxClade_Parms.iLeft = iLeft;
	addSelectBoxClade_Parms.iWidth = iWidth;
	addSelectBoxClade_Parms.iHeight = iHeight;

	this->ProcessEvent ( pFnaddSelectBoxClade, &addSelectBoxClade_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.clearSelectBoxes
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::clearSelectBoxes ( )
{
	static UFunction* pFnclearSelectBoxes = NULL;

	if ( ! pFnclearSelectBoxes )
		pFnclearSelectBoxes = (UFunction*) UObject::GObjObjects()->Data[ 56335 ];

	UNowGFXSceneMainMenu_execclearSelectBoxes_Parms clearSelectBoxes_Parms;

	this->ProcessEvent ( pFnclearSelectBoxes, &clearSelectBoxes_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.addSelectBox
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iTop                           ( CPF_Parm )
// int                            iLeft                          ( CPF_Parm )
// int                            iWidth                         ( CPF_Parm )
// int                            iHeight                        ( CPF_Parm )
// unsigned long                  bCustom                        ( CPF_Parm )

void UNowGFXSceneMainMenu::addSelectBox ( struct FString sName, int iTop, int iLeft, int iWidth, int iHeight, unsigned long bCustom )
{
	static UFunction* pFnaddSelectBox = NULL;

	if ( ! pFnaddSelectBox )
		pFnaddSelectBox = (UFunction*) UObject::GObjObjects()->Data[ 56328 ];

	UNowGFXSceneMainMenu_execaddSelectBox_Parms addSelectBox_Parms;
	memcpy ( &addSelectBox_Parms.sName, &sName, 0xC );
	addSelectBox_Parms.iTop = iTop;
	addSelectBox_Parms.iLeft = iLeft;
	addSelectBox_Parms.iWidth = iWidth;
	addSelectBox_Parms.iHeight = iHeight;
	addSelectBox_Parms.bCustom = bCustom;

	this->ProcessEvent ( pFnaddSelectBox, &addSelectBox_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.showModal
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bAllowCancel                   ( CPF_Parm )
// unsigned long                  bAllowResponse                 ( CPF_Parm )
// struct FString                 yesCallback                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::eventshowModal ( struct FString Message, struct FString sTitle, unsigned long bAllowCancel, unsigned long bAllowResponse, struct FString yesCallback )
{
	static UFunction* pFnshowModal = NULL;

	if ( ! pFnshowModal )
		pFnshowModal = (UFunction*) UObject::GObjObjects()->Data[ 56322 ];

	UNowGFXSceneMainMenu_eventshowModal_Parms showModal_Parms;
	memcpy ( &showModal_Parms.Message, &Message, 0xC );
	memcpy ( &showModal_Parms.sTitle, &sTitle, 0xC );
	showModal_Parms.bAllowCancel = bAllowCancel;
	showModal_Parms.bAllowResponse = bAllowResponse;
	memcpy ( &showModal_Parms.yesCallback, &yesCallback, 0xC );

	this->ProcessEvent ( pFnshowModal, &showModal_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.showCharacterSelect
// [0x00020002] 
// Parameters infos:
// int                            iMaxSlots                      ( CPF_Parm )

void UNowGFXSceneMainMenu::showCharacterSelect ( int iMaxSlots )
{
	static UFunction* pFnshowCharacterSelect = NULL;

	if ( ! pFnshowCharacterSelect )
		pFnshowCharacterSelect = (UFunction*) UObject::GObjObjects()->Data[ 56320 ];

	UNowGFXSceneMainMenu_execshowCharacterSelect_Parms showCharacterSelect_Parms;
	showCharacterSelect_Parms.iMaxSlots = iMaxSlots;

	this->ProcessEvent ( pFnshowCharacterSelect, &showCharacterSelect_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.showLoginScreen
// [0x00020002] 
// Parameters infos:
// struct FString                 sUsername                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::showLoginScreen ( struct FString sUsername )
{
	static UFunction* pFnshowLoginScreen = NULL;

	if ( ! pFnshowLoginScreen )
		pFnshowLoginScreen = (UFunction*) UObject::GObjObjects()->Data[ 56318 ];

	UNowGFXSceneMainMenu_execshowLoginScreen_Parms showLoginScreen_Parms;
	memcpy ( &showLoginScreen_Parms.sUsername, &sUsername, 0xC );

	this->ProcessEvent ( pFnshowLoginScreen, &showLoginScreen_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.showIntroScreen
// [0x00020002] 
// Parameters infos:
// struct FString                 sUsername                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::showIntroScreen ( struct FString sUsername )
{
	static UFunction* pFnshowIntroScreen = NULL;

	if ( ! pFnshowIntroScreen )
		pFnshowIntroScreen = (UFunction*) UObject::GObjObjects()->Data[ 56316 ];

	UNowGFXSceneMainMenu_execshowIntroScreen_Parms showIntroScreen_Parms;
	memcpy ( &showIntroScreen_Parms.sUsername, &sUsername, 0xC );

	this->ProcessEvent ( pFnshowIntroScreen, &showIntroScreen_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.setConfiguration
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDebug                         ( CPF_Parm )
// struct FString                 sVersion                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::setConfiguration ( unsigned long bDebug, struct FString sVersion )
{
	static UFunction* pFnsetConfiguration = NULL;

	if ( ! pFnsetConfiguration )
		pFnsetConfiguration = (UFunction*) UObject::GObjObjects()->Data[ 56313 ];

	UNowGFXSceneMainMenu_execsetConfiguration_Parms setConfiguration_Parms;
	setConfiguration_Parms.bDebug = bDebug;
	memcpy ( &setConfiguration_Parms.sVersion, &sVersion, 0xC );

	this->ProcessEvent ( pFnsetConfiguration, &setConfiguration_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.closePanel
// [0x00020002] 
// Parameters infos:
// int                            iID                            ( CPF_Parm )

void UNowGFXSceneMainMenu::closePanel ( int iID )
{
	static UFunction* pFnclosePanel = NULL;

	if ( ! pFnclosePanel )
		pFnclosePanel = (UFunction*) UObject::GObjObjects()->Data[ 56311 ];

	UNowGFXSceneMainMenu_execclosePanel_Parms closePanel_Parms;
	closePanel_Parms.iID = iID;

	this->ProcessEvent ( pFnclosePanel, &closePanel_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.showPanel
// [0x00020002] 
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sDescription                   ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bAlignRight                    ( CPF_Parm )

void UNowGFXSceneMainMenu::showPanel ( int iID, struct FString sTitle, struct FString sDescription, unsigned long bAlignRight )
{
	static UFunction* pFnshowPanel = NULL;

	if ( ! pFnshowPanel )
		pFnshowPanel = (UFunction*) UObject::GObjObjects()->Data[ 56306 ];

	UNowGFXSceneMainMenu_execshowPanel_Parms showPanel_Parms;
	showPanel_Parms.iID = iID;
	memcpy ( &showPanel_Parms.sTitle, &sTitle, 0xC );
	memcpy ( &showPanel_Parms.sDescription, &sDescription, 0xC );
	showPanel_Parms.bAlignRight = bAlignRight;

	this->ProcessEvent ( pFnshowPanel, &showPanel_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.setFeatureCatEnabled
// [0x00020002] 
// Parameters infos:
// struct FString                 sCategory                      ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bEnabled                       ( CPF_Parm )

void UNowGFXSceneMainMenu::setFeatureCatEnabled ( struct FString sCategory, unsigned long bEnabled )
{
	static UFunction* pFnsetFeatureCatEnabled = NULL;

	if ( ! pFnsetFeatureCatEnabled )
		pFnsetFeatureCatEnabled = (UFunction*) UObject::GObjObjects()->Data[ 56303 ];

	UNowGFXSceneMainMenu_execsetFeatureCatEnabled_Parms setFeatureCatEnabled_Parms;
	memcpy ( &setFeatureCatEnabled_Parms.sCategory, &sCategory, 0xC );
	setFeatureCatEnabled_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnsetFeatureCatEnabled, &setFeatureCatEnabled_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.allowRotation
// [0x00020002] 
// Parameters infos:
// unsigned long                  bAllow                         ( CPF_Parm )

void UNowGFXSceneMainMenu::allowRotation ( unsigned long bAllow )
{
	static UFunction* pFnallowRotation = NULL;

	if ( ! pFnallowRotation )
		pFnallowRotation = (UFunction*) UObject::GObjObjects()->Data[ 56301 ];

	UNowGFXSceneMainMenu_execallowRotation_Parms allowRotation_Parms;
	allowRotation_Parms.bAllow = bAllow;

	this->ProcessEvent ( pFnallowRotation, &allowRotation_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.showCreationFinal
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::showCreationFinal ( )
{
	static UFunction* pFnshowCreationFinal = NULL;

	if ( ! pFnshowCreationFinal )
		pFnshowCreationFinal = (UFunction*) UObject::GObjObjects()->Data[ 56300 ];

	UNowGFXSceneMainMenu_execshowCreationFinal_Parms showCreationFinal_Parms;

	this->ProcessEvent ( pFnshowCreationFinal, &showCreationFinal_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.showCreationFeatures
// [0x00020002] 
// Parameters infos:
// unsigned long                  bSkipToEnd                     ( CPF_Parm )

void UNowGFXSceneMainMenu::showCreationFeatures ( unsigned long bSkipToEnd )
{
	static UFunction* pFnshowCreationFeatures = NULL;

	if ( ! pFnshowCreationFeatures )
		pFnshowCreationFeatures = (UFunction*) UObject::GObjObjects()->Data[ 56298 ];

	UNowGFXSceneMainMenu_execshowCreationFeatures_Parms showCreationFeatures_Parms;
	showCreationFeatures_Parms.bSkipToEnd = bSkipToEnd;

	this->ProcessEvent ( pFnshowCreationFeatures, &showCreationFeatures_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.showCreationAttributes
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::showCreationAttributes ( )
{
	static UFunction* pFnshowCreationAttributes = NULL;

	if ( ! pFnshowCreationAttributes )
		pFnshowCreationAttributes = (UFunction*) UObject::GObjObjects()->Data[ 56297 ];

	UNowGFXSceneMainMenu_execshowCreationAttributes_Parms showCreationAttributes_Parms;

	this->ProcessEvent ( pFnshowCreationAttributes, &showCreationAttributes_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.showCreationRace
// [0x00020002] 
// Parameters infos:
// struct FString                 sClade                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::showCreationRace ( struct FString sClade )
{
	static UFunction* pFnshowCreationRace = NULL;

	if ( ! pFnshowCreationRace )
		pFnshowCreationRace = (UFunction*) UObject::GObjObjects()->Data[ 56295 ];

	UNowGFXSceneMainMenu_execshowCreationRace_Parms showCreationRace_Parms;
	memcpy ( &showCreationRace_Parms.sClade, &sClade, 0xC );

	this->ProcessEvent ( pFnshowCreationRace, &showCreationRace_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.showCreationClade
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::showCreationClade ( )
{
	static UFunction* pFnshowCreationClade = NULL;

	if ( ! pFnshowCreationClade )
		pFnshowCreationClade = (UFunction*) UObject::GObjObjects()->Data[ 56294 ];

	UNowGFXSceneMainMenu_execshowCreationClade_Parms showCreationClade_Parms;

	this->ProcessEvent ( pFnshowCreationClade, &showCreationClade_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.setMaxStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iNewStr                        ( CPF_Parm )
// int                            iNewDex                        ( CPF_Parm )
// int                            iNewCon                        ( CPF_Parm )
// int                            iNewPsy                        ( CPF_Parm )
// int                            iNewInt                        ( CPF_Parm )
// int                            iNewSize                       ( CPF_Parm )
// int                            iMinSize                       ( CPF_Parm )
// int                            iHp                            ( CPF_Parm )
// int                            iMp                            ( CPF_Parm )
// int                            iSp                            ( CPF_Parm )
// int                            iSpeed                         ( CPF_Parm )
// int                            iPoints                        ( CPF_Parm )
// int                            iBonus                         ( CPF_Parm )

void UNowGFXSceneMainMenu::eventsetMaxStats ( int iNewStr, int iNewDex, int iNewCon, int iNewPsy, int iNewInt, int iNewSize, int iMinSize, int iHp, int iMp, int iSp, int iSpeed, int iPoints, int iBonus )
{
	static UFunction* pFnsetMaxStats = NULL;

	if ( ! pFnsetMaxStats )
		pFnsetMaxStats = (UFunction*) UObject::GObjObjects()->Data[ 56280 ];

	UNowGFXSceneMainMenu_eventsetMaxStats_Parms setMaxStats_Parms;
	setMaxStats_Parms.iNewStr = iNewStr;
	setMaxStats_Parms.iNewDex = iNewDex;
	setMaxStats_Parms.iNewCon = iNewCon;
	setMaxStats_Parms.iNewPsy = iNewPsy;
	setMaxStats_Parms.iNewInt = iNewInt;
	setMaxStats_Parms.iNewSize = iNewSize;
	setMaxStats_Parms.iMinSize = iMinSize;
	setMaxStats_Parms.iHp = iHp;
	setMaxStats_Parms.iMp = iMp;
	setMaxStats_Parms.iSp = iSp;
	setMaxStats_Parms.iSpeed = iSpeed;
	setMaxStats_Parms.iPoints = iPoints;
	setMaxStats_Parms.iBonus = iBonus;

	this->ProcessEvent ( pFnsetMaxStats, &setMaxStats_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.setAttributePoints
// [0x00020002] 
// Parameters infos:
// int                            iPoints                        ( CPF_Parm )
// int                            iBase                          ( CPF_Parm )

void UNowGFXSceneMainMenu::setAttributePoints ( int iPoints, int iBase )
{
	static UFunction* pFnsetAttributePoints = NULL;

	if ( ! pFnsetAttributePoints )
		pFnsetAttributePoints = (UFunction*) UObject::GObjObjects()->Data[ 56277 ];

	UNowGFXSceneMainMenu_execsetAttributePoints_Parms setAttributePoints_Parms;
	setAttributePoints_Parms.iPoints = iPoints;
	setAttributePoints_Parms.iBase = iBase;

	this->ProcessEvent ( pFnsetAttributePoints, &setAttributePoints_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.addFeature
// [0x00020002] 
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FString                 sCategory                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIcon                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sColor                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::addFeature ( int iID, struct FString sCategory, struct FString sName, struct FString sIcon, struct FString sColor )
{
	static UFunction* pFnaddFeature = NULL;

	if ( ! pFnaddFeature )
		pFnaddFeature = (UFunction*) UObject::GObjObjects()->Data[ 56271 ];

	UNowGFXSceneMainMenu_execaddFeature_Parms addFeature_Parms;
	addFeature_Parms.iID = iID;
	memcpy ( &addFeature_Parms.sCategory, &sCategory, 0xC );
	memcpy ( &addFeature_Parms.sName, &sName, 0xC );
	memcpy ( &addFeature_Parms.sIcon, &sIcon, 0xC );
	memcpy ( &addFeature_Parms.sColor, &sColor, 0xC );

	this->ProcessEvent ( pFnaddFeature, &addFeature_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.clearFeatures
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::clearFeatures ( )
{
	static UFunction* pFnclearFeatures = NULL;

	if ( ! pFnclearFeatures )
		pFnclearFeatures = (UFunction*) UObject::GObjObjects()->Data[ 56270 ];

	UNowGFXSceneMainMenu_execclearFeatures_Parms clearFeatures_Parms;

	this->ProcessEvent ( pFnclearFeatures, &clearFeatures_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.AddLocation
// [0x00020002] 
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sDescription                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sOwner                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iPosX                          ( CPF_Parm )
// int                            iPosY                          ( CPF_Parm )
// unsigned long                  bGuild                         ( CPF_Parm )

void UNowGFXSceneMainMenu::AddLocation ( int iID, struct FString sName, struct FString sDescription, struct FString sOwner, int iPosX, int iPosY, unsigned long bGuild )
{
	static UFunction* pFnAddLocation = NULL;

	if ( ! pFnAddLocation )
		pFnAddLocation = (UFunction*) UObject::GObjObjects()->Data[ 56262 ];

	UNowGFXSceneMainMenu_execAddLocation_Parms AddLocation_Parms;
	AddLocation_Parms.iID = iID;
	memcpy ( &AddLocation_Parms.sName, &sName, 0xC );
	memcpy ( &AddLocation_Parms.sDescription, &sDescription, 0xC );
	memcpy ( &AddLocation_Parms.sOwner, &sOwner, 0xC );
	AddLocation_Parms.iPosX = iPosX;
	AddLocation_Parms.iPosY = iPosY;
	AddLocation_Parms.bGuild = bGuild;

	this->ProcessEvent ( pFnAddLocation, &AddLocation_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.clearLocations
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::clearLocations ( )
{
	static UFunction* pFnclearLocations = NULL;

	if ( ! pFnclearLocations )
		pFnclearLocations = (UFunction*) UObject::GObjObjects()->Data[ 56261 ];

	UNowGFXSceneMainMenu_execclearLocations_Parms clearLocations_Parms;

	this->ProcessEvent ( pFnclearLocations, &clearLocations_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.CustomizationComplete
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::CustomizationComplete ( )
{
	static UFunction* pFnCustomizationComplete = NULL;

	if ( ! pFnCustomizationComplete )
		pFnCustomizationComplete = (UFunction*) UObject::GObjObjects()->Data[ 56260 ];

	UNowGFXSceneMainMenu_execCustomizationComplete_Parms CustomizationComplete_Parms;

	this->ProcessEvent ( pFnCustomizationComplete, &CustomizationComplete_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.ShowLore
// [0x00020002] 
// Parameters infos:
// struct FString                 sRace                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::ShowLore ( struct FString sRace )
{
	static UFunction* pFnShowLore = NULL;

	if ( ! pFnShowLore )
		pFnShowLore = (UFunction*) UObject::GObjObjects()->Data[ 56257 ];

	UNowGFXSceneMainMenu_execShowLore_Parms ShowLore_Parms;
	memcpy ( &ShowLore_Parms.sRace, &sRace, 0xC );

	this->ProcessEvent ( pFnShowLore, &ShowLore_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.Customization
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::Customization ( struct FString sName )
{
	static UFunction* pFnCustomization = NULL;

	if ( ! pFnCustomization )
		pFnCustomization = (UFunction*) UObject::GObjObjects()->Data[ 56254 ];

	UNowGFXSceneMainMenu_execCustomization_Parms Customization_Parms;
	memcpy ( &Customization_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnCustomization, &Customization_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.CreationComplete
// [0x00020002] 
// Parameters infos:
// struct FString                 sNewName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sNewSurName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNewStartingPoint              ( CPF_Parm )

void UNowGFXSceneMainMenu::CreationComplete ( struct FString sNewName, struct FString sNewSurName, int iNewStartingPoint )
{
	static UFunction* pFnCreationComplete = NULL;

	if ( ! pFnCreationComplete )
		pFnCreationComplete = (UFunction*) UObject::GObjObjects()->Data[ 56250 ];

	UNowGFXSceneMainMenu_execCreationComplete_Parms CreationComplete_Parms;
	memcpy ( &CreationComplete_Parms.sNewName, &sNewName, 0xC );
	memcpy ( &CreationComplete_Parms.sNewSurName, &sNewSurName, 0xC );
	CreationComplete_Parms.iNewStartingPoint = iNewStartingPoint;

	this->ProcessEvent ( pFnCreationComplete, &CreationComplete_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.IsGuildCity
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iCityID                        ( CPF_Parm )

bool UNowGFXSceneMainMenu::IsGuildCity ( int iCityID )
{
	static UFunction* pFnIsGuildCity = NULL;

	if ( ! pFnIsGuildCity )
		pFnIsGuildCity = (UFunction*) UObject::GObjObjects()->Data[ 56247 ];

	UNowGFXSceneMainMenu_execIsGuildCity_Parms IsGuildCity_Parms;
	IsGuildCity_Parms.iCityID = iCityID;

	this->ProcessEvent ( pFnIsGuildCity, &IsGuildCity_Parms, NULL );

	return IsGuildCity_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneMainMenu.CreatingCharacterFinal
// [0x00820002] 
// Parameters infos:

void UNowGFXSceneMainMenu::CreatingCharacterFinal ( )
{
	static UFunction* pFnCreatingCharacterFinal = NULL;

	if ( ! pFnCreatingCharacterFinal )
		pFnCreatingCharacterFinal = (UFunction*) UObject::GObjObjects()->Data[ 56241 ];

	UNowGFXSceneMainMenu_execCreatingCharacterFinal_Parms CreatingCharacterFinal_Parms;

	this->ProcessEvent ( pFnCreatingCharacterFinal, &CreatingCharacterFinal_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.GoBack
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::GoBack ( )
{
	static UFunction* pFnGoBack = NULL;

	if ( ! pFnGoBack )
		pFnGoBack = (UFunction*) UObject::GObjObjects()->Data[ 56240 ];

	UNowGFXSceneMainMenu_execGoBack_Parms GoBack_Parms;

	this->ProcessEvent ( pFnGoBack, &GoBack_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.SetFeature
// [0x00020002] 
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FString                 sCategory                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::SetFeature ( int iID, struct FString sCategory )
{
	static UFunction* pFnSetFeature = NULL;

	if ( ! pFnSetFeature )
		pFnSetFeature = (UFunction*) UObject::GObjObjects()->Data[ 56237 ];

	UNowGFXSceneMainMenu_execSetFeature_Parms SetFeature_Parms;
	SetFeature_Parms.iID = iID;
	memcpy ( &SetFeature_Parms.sCategory, &sCategory, 0xC );

	this->ProcessEvent ( pFnSetFeature, &SetFeature_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.SetAttribute
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iValue                         ( CPF_Parm )

void UNowGFXSceneMainMenu::eventSetAttribute ( struct FString sLabel, int iValue )
{
	static UFunction* pFnSetAttribute = NULL;

	if ( ! pFnSetAttribute )
		pFnSetAttribute = (UFunction*) UObject::GObjObjects()->Data[ 56234 ];

	UNowGFXSceneMainMenu_eventSetAttribute_Parms SetAttribute_Parms;
	memcpy ( &SetAttribute_Parms.sLabel, &sLabel, 0xC );
	SetAttribute_Parms.iValue = iValue;

	this->ProcessEvent ( pFnSetAttribute, &SetAttribute_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.CreatingCharacterFeatures
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::CreatingCharacterFeatures ( )
{
	static UFunction* pFnCreatingCharacterFeatures = NULL;

	if ( ! pFnCreatingCharacterFeatures )
		pFnCreatingCharacterFeatures = (UFunction*) UObject::GObjObjects()->Data[ 56232 ];

	UNowGFXSceneMainMenu_execCreatingCharacterFeatures_Parms CreatingCharacterFeatures_Parms;

	this->ProcessEvent ( pFnCreatingCharacterFeatures, &CreatingCharacterFeatures_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.CreatingCharacterAttributes
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::CreatingCharacterAttributes ( )
{
	static UFunction* pFnCreatingCharacterAttributes = NULL;

	if ( ! pFnCreatingCharacterAttributes )
		pFnCreatingCharacterAttributes = (UFunction*) UObject::GObjObjects()->Data[ 56231 ];

	UNowGFXSceneMainMenu_execCreatingCharacterAttributes_Parms CreatingCharacterAttributes_Parms;

	this->ProcessEvent ( pFnCreatingCharacterAttributes, &CreatingCharacterAttributes_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.SetRotation
// [0x00020002] 
// Parameters infos:
// int                            iDelta                         ( CPF_Parm )

void UNowGFXSceneMainMenu::SetRotation ( int iDelta )
{
	static UFunction* pFnSetRotation = NULL;

	if ( ! pFnSetRotation )
		pFnSetRotation = (UFunction*) UObject::GObjObjects()->Data[ 56229 ];

	UNowGFXSceneMainMenu_execSetRotation_Parms SetRotation_Parms;
	SetRotation_Parms.iDelta = iDelta;

	this->ProcessEvent ( pFnSetRotation, &SetRotation_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.ScrollDelta
// [0x00020002] 
// Parameters infos:
// int                            iDelta                         ( CPF_Parm )

void UNowGFXSceneMainMenu::ScrollDelta ( int iDelta )
{
	static UFunction* pFnScrollDelta = NULL;

	if ( ! pFnScrollDelta )
		pFnScrollDelta = (UFunction*) UObject::GObjObjects()->Data[ 56227 ];

	UNowGFXSceneMainMenu_execScrollDelta_Parms ScrollDelta_Parms;
	ScrollDelta_Parms.iDelta = iDelta;

	this->ProcessEvent ( pFnScrollDelta, &ScrollDelta_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.StopRotation
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::StopRotation ( )
{
	static UFunction* pFnStopRotation = NULL;

	if ( ! pFnStopRotation )
		pFnStopRotation = (UFunction*) UObject::GObjObjects()->Data[ 56226 ];

	UNowGFXSceneMainMenu_execStopRotation_Parms StopRotation_Parms;

	this->ProcessEvent ( pFnStopRotation, &StopRotation_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.StartRotation
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::StartRotation ( )
{
	static UFunction* pFnStartRotation = NULL;

	if ( ! pFnStartRotation )
		pFnStartRotation = (UFunction*) UObject::GObjObjects()->Data[ 56225 ];

	UNowGFXSceneMainMenu_execStartRotation_Parms StartRotation_Parms;

	this->ProcessEvent ( pFnStartRotation, &StartRotation_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.PanelIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Panel                          ( CPF_Parm )

int UNowGFXSceneMainMenu::PanelIndex ( unsigned char Panel )
{
	static UFunction* pFnPanelIndex = NULL;

	if ( ! pFnPanelIndex )
		pFnPanelIndex = (UFunction*) UObject::GObjObjects()->Data[ 56222 ];

	UNowGFXSceneMainMenu_execPanelIndex_Parms PanelIndex_Parms;
	PanelIndex_Parms.Panel = Panel;

	this->ProcessEvent ( pFnPanelIndex, &PanelIndex_Parms, NULL );

	return PanelIndex_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneMainMenu.CreatingCharacter
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::CreatingCharacter ( )
{
	static UFunction* pFnCreatingCharacter = NULL;

	if ( ! pFnCreatingCharacter )
		pFnCreatingCharacter = (UFunction*) UObject::GObjObjects()->Data[ 56220 ];

	UNowGFXSceneMainMenu_execCreatingCharacter_Parms CreatingCharacter_Parms;

	this->ProcessEvent ( pFnCreatingCharacter, &CreatingCharacter_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.EndGame
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::EndGame ( )
{
	static UFunction* pFnEndGame = NULL;

	if ( ! pFnEndGame )
		pFnEndGame = (UFunction*) UObject::GObjObjects()->Data[ 56219 ];

	UNowGFXSceneMainMenu_execEndGame_Parms EndGame_Parms;

	this->ProcessEvent ( pFnEndGame, &EndGame_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.DeleteCharacter
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::DeleteCharacter ( struct FString sName )
{
	static UFunction* pFnDeleteCharacter = NULL;

	if ( ! pFnDeleteCharacter )
		pFnDeleteCharacter = (UFunction*) UObject::GObjObjects()->Data[ 56216 ];

	UNowGFXSceneMainMenu_execDeleteCharacter_Parms DeleteCharacter_Parms;
	memcpy ( &DeleteCharacter_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnDeleteCharacter, &DeleteCharacter_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.LoginCharacter
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::LoginCharacter ( struct FString sName )
{
	static UFunction* pFnLoginCharacter = NULL;

	if ( ! pFnLoginCharacter )
		pFnLoginCharacter = (UFunction*) UObject::GObjObjects()->Data[ 56212 ];

	UNowGFXSceneMainMenu_execLoginCharacter_Parms LoginCharacter_Parms;
	memcpy ( &LoginCharacter_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnLoginCharacter, &LoginCharacter_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.SelectedCharacter
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::SelectedCharacter ( struct FString sName )
{
	static UFunction* pFnSelectedCharacter = NULL;

	if ( ! pFnSelectedCharacter )
		pFnSelectedCharacter = (UFunction*) UObject::GObjObjects()->Data[ 56210 ];

	UNowGFXSceneMainMenu_execSelectedCharacter_Parms SelectedCharacter_Parms;
	memcpy ( &SelectedCharacter_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnSelectedCharacter, &SelectedCharacter_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.LoginFail
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sReason                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::eventLoginFail ( struct FString sReason )
{
	static UFunction* pFnLoginFail = NULL;

	if ( ! pFnLoginFail )
		pFnLoginFail = (UFunction*) UObject::GObjObjects()->Data[ 56208 ];

	UNowGFXSceneMainMenu_eventLoginFail_Parms LoginFail_Parms;
	memcpy ( &LoginFail_Parms.sReason, &sReason, 0xC );

	this->ProcessEvent ( pFnLoginFail, &LoginFail_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.GotCharacterData
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXSceneMainMenu::eventGotCharacterData ( )
{
	static UFunction* pFnGotCharacterData = NULL;

	if ( ! pFnGotCharacterData )
		pFnGotCharacterData = (UFunction*) UObject::GObjObjects()->Data[ 56206 ];

	UNowGFXSceneMainMenu_eventGotCharacterData_Parms GotCharacterData_Parms;

	this->ProcessEvent ( pFnGotCharacterData, &GotCharacterData_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.SelectedRaces
// [0x00020002] 
// Parameters infos:
// struct FString                 sRace1                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sRace2                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sRace3                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sRace4                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::SelectedRaces ( struct FString sRace1, struct FString sRace2, struct FString sRace3, struct FString sRace4 )
{
	static UFunction* pFnSelectedRaces = NULL;

	if ( ! pFnSelectedRaces )
		pFnSelectedRaces = (UFunction*) UObject::GObjObjects()->Data[ 56201 ];

	UNowGFXSceneMainMenu_execSelectedRaces_Parms SelectedRaces_Parms;
	memcpy ( &SelectedRaces_Parms.sRace1, &sRace1, 0xC );
	memcpy ( &SelectedRaces_Parms.sRace2, &sRace2, 0xC );
	memcpy ( &SelectedRaces_Parms.sRace3, &sRace3, 0xC );
	memcpy ( &SelectedRaces_Parms.sRace4, &sRace4, 0xC );

	this->ProcessEvent ( pFnSelectedRaces, &SelectedRaces_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.CreatingCharacterRace
// [0x00020002] 
// Parameters infos:
// struct FString                 sClade                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::CreatingCharacterRace ( struct FString sClade )
{
	static UFunction* pFnCreatingCharacterRace = NULL;

	if ( ! pFnCreatingCharacterRace )
		pFnCreatingCharacterRace = (UFunction*) UObject::GObjObjects()->Data[ 56198 ];

	UNowGFXSceneMainMenu_execCreatingCharacterRace_Parms CreatingCharacterRace_Parms;
	memcpy ( &CreatingCharacterRace_Parms.sClade, &sClade, 0xC );

	this->ProcessEvent ( pFnCreatingCharacterRace, &CreatingCharacterRace_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.SelectedClade
// [0x00020002] 
// Parameters infos:
// struct FString                 sClade                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::SelectedClade ( struct FString sClade )
{
	static UFunction* pFnSelectedClade = NULL;

	if ( ! pFnSelectedClade )
		pFnSelectedClade = (UFunction*) UObject::GObjObjects()->Data[ 56195 ];

	UNowGFXSceneMainMenu_execSelectedClade_Parms SelectedClade_Parms;
	memcpy ( &SelectedClade_Parms.sClade, &sClade, 0xC );

	this->ProcessEvent ( pFnSelectedClade, &SelectedClade_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.UpdateCreateState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  NewStep                        ( CPF_Parm )

void UNowGFXSceneMainMenu::eventUpdateCreateState ( unsigned char NewStep )
{
	static UFunction* pFnUpdateCreateState = NULL;

	if ( ! pFnUpdateCreateState )
		pFnUpdateCreateState = (UFunction*) UObject::GObjObjects()->Data[ 56193 ];

	UNowGFXSceneMainMenu_eventUpdateCreateState_Parms UpdateCreateState_Parms;
	UpdateCreateState_Parms.NewStep = NewStep;

	this->ProcessEvent ( pFnUpdateCreateState, &UpdateCreateState_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.GoToCamNode
// [0x00020002] 
// Parameters infos:
// struct FString                 sNodeName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::GoToCamNode ( struct FString sNodeName )
{
	static UFunction* pFnGoToCamNode = NULL;

	if ( ! pFnGoToCamNode )
		pFnGoToCamNode = (UFunction*) UObject::GObjObjects()->Data[ 56190 ];

	UNowGFXSceneMainMenu_execGoToCamNode_Parms GoToCamNode_Parms;
	memcpy ( &GoToCamNode_Parms.sNodeName, &sNodeName, 0xC );

	this->ProcessEvent ( pFnGoToCamNode, &GoToCamNode_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.SetToCamNode
// [0x00020002] 
// Parameters infos:
// struct FString                 sNodeName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::SetToCamNode ( struct FString sNodeName )
{
	static UFunction* pFnSetToCamNode = NULL;

	if ( ! pFnSetToCamNode )
		pFnSetToCamNode = (UFunction*) UObject::GObjObjects()->Data[ 56187 ];

	UNowGFXSceneMainMenu_execSetToCamNode_Parms SetToCamNode_Parms;
	memcpy ( &SetToCamNode_Parms.sNodeName, &sNodeName, 0xC );

	this->ProcessEvent ( pFnSetToCamNode, &SetToCamNode_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.LoginComplete
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXSceneMainMenu::eventLoginComplete ( )
{
	static UFunction* pFnLoginComplete = NULL;

	if ( ! pFnLoginComplete )
		pFnLoginComplete = (UFunction*) UObject::GObjObjects()->Data[ 56186 ];

	UNowGFXSceneMainMenu_eventLoginComplete_Parms LoginComplete_Parms;

	this->ProcessEvent ( pFnLoginComplete, &LoginComplete_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.ConnectSuccess
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXSceneMainMenu::eventConnectSuccess ( )
{
	static UFunction* pFnConnectSuccess = NULL;

	if ( ! pFnConnectSuccess )
		pFnConnectSuccess = (UFunction*) UObject::GObjObjects()->Data[ 56185 ];

	UNowGFXSceneMainMenu_eventConnectSuccess_Parms ConnectSuccess_Parms;

	this->ProcessEvent ( pFnConnectSuccess, &ConnectSuccess_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.TimeOut
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::TimeOut ( )
{
	static UFunction* pFnTimeOut = NULL;

	if ( ! pFnTimeOut )
		pFnTimeOut = (UFunction*) UObject::GObjObjects()->Data[ 56184 ];

	UNowGFXSceneMainMenu_execTimeOut_Parms TimeOut_Parms;

	this->ProcessEvent ( pFnTimeOut, &TimeOut_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.SubmitLogin
// [0x00024002] 
// Parameters infos:
// struct FString                 sUsername                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPassword                      ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRemember                      ( CPF_Parm )
// unsigned long                  bNoSound                       ( CPF_OptionalParm | CPF_Parm )

void UNowGFXSceneMainMenu::SubmitLogin ( struct FString sUsername, struct FString sPassword, unsigned long bRemember, unsigned long bNoSound )
{
	static UFunction* pFnSubmitLogin = NULL;

	if ( ! pFnSubmitLogin )
		pFnSubmitLogin = (UFunction*) UObject::GObjObjects()->Data[ 56177 ];

	UNowGFXSceneMainMenu_execSubmitLogin_Parms SubmitLogin_Parms;
	memcpy ( &SubmitLogin_Parms.sUsername, &sUsername, 0xC );
	memcpy ( &SubmitLogin_Parms.sPassword, &sPassword, 0xC );
	SubmitLogin_Parms.bRemember = bRemember;
	SubmitLogin_Parms.bNoSound = bNoSound;

	this->ProcessEvent ( pFnSubmitLogin, &SubmitLogin_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.DoPendingLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXSceneMainMenu::eventDoPendingLogin ( )
{
	static UFunction* pFnDoPendingLogin = NULL;

	if ( ! pFnDoPendingLogin )
		pFnDoPendingLogin = (UFunction*) UObject::GObjObjects()->Data[ 56176 ];

	UNowGFXSceneMainMenu_eventDoPendingLogin_Parms DoPendingLogin_Parms;

	this->ProcessEvent ( pFnDoPendingLogin, &DoPendingLogin_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.SetPendingLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iMinutes                       ( CPF_Parm )

void UNowGFXSceneMainMenu::eventSetPendingLogin ( int iMinutes )
{
	static UFunction* pFnSetPendingLogin = NULL;

	if ( ! pFnSetPendingLogin )
		pFnSetPendingLogin = (UFunction*) UObject::GObjObjects()->Data[ 56174 ];

	UNowGFXSceneMainMenu_eventSetPendingLogin_Parms SetPendingLogin_Parms;
	SetPendingLogin_Parms.iMinutes = iMinutes;

	this->ProcessEvent ( pFnSetPendingLogin, &SetPendingLogin_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.DoTpcReceive
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 JsonData                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bStart                         ( CPF_Parm )
// unsigned long                  bEnd                           ( CPF_Parm )

void UNowGFXSceneMainMenu::eventDoTpcReceive ( struct FString JsonData, unsigned long bStart, unsigned long bEnd )
{
	static UFunction* pFnDoTpcReceive = NULL;

	if ( ! pFnDoTpcReceive )
		pFnDoTpcReceive = (UFunction*) UObject::GObjObjects()->Data[ 56170 ];

	UNowGFXSceneMainMenu_eventDoTpcReceive_Parms DoTpcReceive_Parms;
	memcpy ( &DoTpcReceive_Parms.JsonData, &JsonData, 0xC );
	DoTpcReceive_Parms.bStart = bStart;
	DoTpcReceive_Parms.bEnd = bEnd;

	this->ProcessEvent ( pFnDoTpcReceive, &DoTpcReceive_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.RequestNews
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::RequestNews ( )
{
	static UFunction* pFnRequestNews = NULL;

	if ( ! pFnRequestNews )
		pFnRequestNews = (UFunction*) UObject::GObjObjects()->Data[ 56169 ];

	UNowGFXSceneMainMenu_execRequestNews_Parms RequestNews_Parms;

	this->ProcessEvent ( pFnRequestNews, &RequestNews_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.ShowWebsite
// [0x00020002] 
// Parameters infos:
// struct FString                 sUrl                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::ShowWebsite ( struct FString sUrl )
{
	static UFunction* pFnShowWebsite = NULL;

	if ( ! pFnShowWebsite )
		pFnShowWebsite = (UFunction*) UObject::GObjObjects()->Data[ 56167 ];

	UNowGFXSceneMainMenu_execShowWebsite_Parms ShowWebsite_Parms;
	memcpy ( &ShowWebsite_Parms.sUrl, &sUrl, 0xC );

	this->ProcessEvent ( pFnShowWebsite, &ShowWebsite_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.ConnectionLost
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXSceneMainMenu::eventConnectionLost ( )
{
	static UFunction* pFnConnectionLost = NULL;

	if ( ! pFnConnectionLost )
		pFnConnectionLost = (UFunction*) UObject::GObjObjects()->Data[ 56166 ];

	UNowGFXSceneMainMenu_eventConnectionLost_Parms ConnectionLost_Parms;

	this->ProcessEvent ( pFnConnectionLost, &ConnectionLost_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.LoggedOut
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::LoggedOut ( )
{
	static UFunction* pFnLoggedOut = NULL;

	if ( ! pFnLoggedOut )
		pFnLoggedOut = (UFunction*) UObject::GObjObjects()->Data[ 56165 ];

	UNowGFXSceneMainMenu_execLoggedOut_Parms LoggedOut_Parms;

	this->ProcessEvent ( pFnLoggedOut, &LoggedOut_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.CanceledModal
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::CanceledModal ( struct FString sName )
{
	static UFunction* pFnCanceledModal = NULL;

	if ( ! pFnCanceledModal )
		pFnCanceledModal = (UFunction*) UObject::GObjObjects()->Data[ 56161 ];

	UNowGFXSceneMainMenu_execCanceledModal_Parms CanceledModal_Parms;
	memcpy ( &CanceledModal_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnCanceledModal, &CanceledModal_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.InitCam
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneMainMenu::InitCam ( )
{
	static UFunction* pFnInitCam = NULL;

	if ( ! pFnInitCam )
		pFnInitCam = (UFunction*) UObject::GObjObjects()->Data[ 56159 ];

	UNowGFXSceneMainMenu_execInitCam_Parms InitCam_Parms;

	this->ProcessEvent ( pFnInitCam, &InitCam_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.InitGFXScene
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneMainMenu::InitGFXScene ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInitGFXScene = NULL;

	if ( ! pFnInitGFXScene )
		pFnInitGFXScene = (UFunction*) UObject::GObjObjects()->Data[ 56150 ];

	UNowGFXSceneMainMenu_execInitGFXScene_Parms InitGFXScene_Parms;
	InitGFXScene_Parms.Player = Player;
	InitGFXScene_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInitGFXScene, &InitGFXScene_Parms, NULL );
};

// Function NowGame.NowGFXSceneMainMenu.CalcMaxStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXSceneMainMenu::CalcMaxStats ( )
{
	static UFunction* pFnCalcMaxStats = NULL;

	if ( ! pFnCalcMaxStats )
		pFnCalcMaxStats = (UFunction*) UObject::GObjObjects()->Data[ 56149 ];

	UNowGFXSceneMainMenu_execCalcMaxStats_Parms CalcMaxStats_Parms;

	pFnCalcMaxStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcMaxStats, &CalcMaxStats_Parms, NULL );

	pFnCalcMaxStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneMainMenu.EnterGameCustom
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sCharacter                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCustomInfo                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::EnterGameCustom ( struct FString sCharacter, struct FString sCustomInfo )
{
	static UFunction* pFnEnterGameCustom = NULL;

	if ( ! pFnEnterGameCustom )
		pFnEnterGameCustom = (UFunction*) UObject::GObjObjects()->Data[ 56146 ];

	UNowGFXSceneMainMenu_execEnterGameCustom_Parms EnterGameCustom_Parms;
	memcpy ( &EnterGameCustom_Parms.sCharacter, &sCharacter, 0xC );
	memcpy ( &EnterGameCustom_Parms.sCustomInfo, &sCustomInfo, 0xC );

	pFnEnterGameCustom->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnterGameCustom, &EnterGameCustom_Parms, NULL );

	pFnEnterGameCustom->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneMainMenu.EnterGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sCharacter                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::EnterGame ( struct FString sCharacter )
{
	static UFunction* pFnEnterGame = NULL;

	if ( ! pFnEnterGame )
		pFnEnterGame = (UFunction*) UObject::GObjObjects()->Data[ 56144 ];

	UNowGFXSceneMainMenu_execEnterGame_Parms EnterGame_Parms;
	memcpy ( &EnterGame_Parms.sCharacter, &sCharacter, 0xC );

	pFnEnterGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnterGame, &EnterGame_Parms, NULL );

	pFnEnterGame->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneMainMenu.OpenWebpage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sUrl                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMainMenu::OpenWebpage ( struct FString sUrl )
{
	static UFunction* pFnOpenWebpage = NULL;

	if ( ! pFnOpenWebpage )
		pFnOpenWebpage = (UFunction*) UObject::GObjObjects()->Data[ 56142 ];

	UNowGFXSceneMainMenu_execOpenWebpage_Parms OpenWebpage_Parms;
	memcpy ( &OpenWebpage_Parms.sUrl, &sUrl, 0xC );

	pFnOpenWebpage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenWebpage, &OpenWebpage_Parms, NULL );

	pFnOpenWebpage->FunctionFlags |= 0x400;
};

// Function NowGame.NowHUD.IsNumber
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Number                         ( CPF_Parm | CPF_NeedCtorLink )

bool ANowHUD::IsNumber ( struct FString Number )
{
	static UFunction* pFnIsNumber = NULL;

	if ( ! pFnIsNumber )
		pFnIsNumber = (UFunction*) UObject::GObjObjects()->Data[ 56599 ];

	ANowHUD_execIsNumber_Parms IsNumber_Parms;
	memcpy ( &IsNumber_Parms.Number, &Number, 0xC );

	this->ProcessEvent ( pFnIsNumber, &IsNumber_Parms, NULL );

	return IsNumber_Parms.ReturnValue;
};

// Function NowGame.NowHUD.SetShowScores
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )

void ANowHUD::SetShowScores ( unsigned long bNewValue )
{
	static UFunction* pFnSetShowScores = NULL;

	if ( ! pFnSetShowScores )
		pFnSetShowScores = (UFunction*) UObject::GObjObjects()->Data[ 56597 ];

	ANowHUD_execSetShowScores_Parms SetShowScores_Parms;
	SetShowScores_Parms.bNewValue = bNewValue;

	this->ProcessEvent ( pFnSetShowScores, &SetShowScores_Parms, NULL );
};

// Function NowGame.NowHUD.ShowScores
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ShowScores ( )
{
	static UFunction* pFnShowScores = NULL;

	if ( ! pFnShowScores )
		pFnShowScores = (UFunction*) UObject::GObjObjects()->Data[ 56596 ];

	ANowHUD_execShowScores_Parms ShowScores_Parms;

	this->ProcessEvent ( pFnShowScores, &ShowScores_Parms, NULL );
};

// Function NowGame.NowHUD.ShowHUD
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ShowHUD ( )
{
	static UFunction* pFnShowHUD = NULL;

	if ( ! pFnShowHUD )
		pFnShowHUD = (UFunction*) UObject::GObjObjects()->Data[ 56595 ];

	ANowHUD_execShowHUD_Parms ShowHUD_Parms;

	this->ProcessEvent ( pFnShowHUD, &ShowHUD_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleHUD
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleHUD ( )
{
	static UFunction* pFnToggleHUD = NULL;

	if ( ! pFnToggleHUD )
		pFnToggleHUD = (UFunction*) UObject::GObjObjects()->Data[ 56594 ];

	ANowHUD_execToggleHUD_Parms ToggleHUD_Parms;

	this->ProcessEvent ( pFnToggleHUD, &ToggleHUD_Parms, NULL );
};

// Function NowGame.NowHUD.PostPos
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 inVec                          ( CPF_Parm )

void ANowHUD::PostPos ( struct FVector inVec )
{
	static UFunction* pFnPostPos = NULL;

	if ( ! pFnPostPos )
		pFnPostPos = (UFunction*) UObject::GObjObjects()->Data[ 56592 ];

	ANowHUD_execPostPos_Parms PostPos_Parms;
	memcpy ( &PostPos_Parms.inVec, &inVec, 0xC );

	pFnPostPos->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostPos, &PostPos_Parms, NULL );

	pFnPostPos->FunctionFlags |= 0x400;
};

// Function NowGame.NowHUD.CloseUI
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class UAtlasAvatarComponent*   InNpcComp                      ( CPF_Parm | CPF_EditInline )
// struct FString                 InKey                          ( CPF_Parm | CPF_NeedCtorLink )

void ANowHUD::eventCloseUI ( class UAtlasAvatarComponent* InNpcComp, struct FString InKey )
{
	static UFunction* pFnCloseUI = NULL;

	if ( ! pFnCloseUI )
		pFnCloseUI = (UFunction*) UObject::GObjObjects()->Data[ 56589 ];

	ANowHUD_eventCloseUI_Parms CloseUI_Parms;
	CloseUI_Parms.InNpcComp = InNpcComp;
	memcpy ( &CloseUI_Parms.InKey, &InKey, 0xC );

	this->ProcessEvent ( pFnCloseUI, &CloseUI_Parms, NULL );
};

// Function NowGame.NowHUD.SetupHitIndicationFX
// [0x00020002] 
// Parameters infos:
// struct FRotator                Direction                      ( CPF_Parm )

void ANowHUD::SetupHitIndicationFX ( struct FRotator Direction )
{
	static UFunction* pFnSetupHitIndicationFX = NULL;

	if ( ! pFnSetupHitIndicationFX )
		pFnSetupHitIndicationFX = (UFunction*) UObject::GObjObjects()->Data[ 56587 ];

	ANowHUD_execSetupHitIndicationFX_Parms SetupHitIndicationFX_Parms;
	memcpy ( &SetupHitIndicationFX_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnSetupHitIndicationFX, &SetupHitIndicationFX_Parms, NULL );
};

// Function NowGame.NowHUD.DrawHitIndicationFX
// [0x00020002] 
// Parameters infos:

void ANowHUD::DrawHitIndicationFX ( )
{
	static UFunction* pFnDrawHitIndicationFX = NULL;

	if ( ! pFnDrawHitIndicationFX )
		pFnDrawHitIndicationFX = (UFunction*) UObject::GObjObjects()->Data[ 56585 ];

	ANowHUD_execDrawHitIndicationFX_Parms DrawHitIndicationFX_Parms;

	this->ProcessEvent ( pFnDrawHitIndicationFX, &DrawHitIndicationFX_Parms, NULL );
};

// Function NowGame.NowHUD.DrawHelmetOcclusion
// [0x00020000] 
// Parameters infos:
// class ANowPawn*                PlayerPawn                     ( CPF_Parm )

void ANowHUD::DrawHelmetOcclusion ( class ANowPawn* PlayerPawn )
{
	static UFunction* pFnDrawHelmetOcclusion = NULL;

	if ( ! pFnDrawHelmetOcclusion )
		pFnDrawHelmetOcclusion = (UFunction*) UObject::GObjObjects()->Data[ 56583 ];

	ANowHUD_execDrawHelmetOcclusion_Parms DrawHelmetOcclusion_Parms;
	DrawHelmetOcclusion_Parms.PlayerPawn = PlayerPawn;

	this->ProcessEvent ( pFnDrawHelmetOcclusion, &DrawHelmetOcclusion_Parms, NULL );
};

// Function NowGame.NowHUD.CloseGuildMenu
// [0x00020000] 
// Parameters infos:

void ANowHUD::CloseGuildMenu ( )
{
	static UFunction* pFnCloseGuildMenu = NULL;

	if ( ! pFnCloseGuildMenu )
		pFnCloseGuildMenu = (UFunction*) UObject::GObjObjects()->Data[ 56582 ];

	ANowHUD_execCloseGuildMenu_Parms CloseGuildMenu_Parms;

	this->ProcessEvent ( pFnCloseGuildMenu, &CloseGuildMenu_Parms, NULL );
};

// Function NowGame.NowHUD.CloseLoadingScreen
// [0x00020000] 
// Parameters infos:

void ANowHUD::CloseLoadingScreen ( )
{
	static UFunction* pFnCloseLoadingScreen = NULL;

	if ( ! pFnCloseLoadingScreen )
		pFnCloseLoadingScreen = (UFunction*) UObject::GObjObjects()->Data[ 56581 ];

	ANowHUD_execCloseLoadingScreen_Parms CloseLoadingScreen_Parms;

	this->ProcessEvent ( pFnCloseLoadingScreen, &CloseLoadingScreen_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleUserGuide
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleUserGuide ( )
{
	static UFunction* pFnToggleUserGuide = NULL;

	if ( ! pFnToggleUserGuide )
		pFnToggleUserGuide = (UFunction*) UObject::GObjObjects()->Data[ 56580 ];

	ANowHUD_execToggleUserGuide_Parms ToggleUserGuide_Parms;

	this->ProcessEvent ( pFnToggleUserGuide, &ToggleUserGuide_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleCharacterSheet
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ANowHUD::ToggleCharacterSheet ( unsigned long bForce )
{
	static UFunction* pFnToggleCharacterSheet = NULL;

	if ( ! pFnToggleCharacterSheet )
		pFnToggleCharacterSheet = (UFunction*) UObject::GObjObjects()->Data[ 56578 ];

	ANowHUD_execToggleCharacterSheet_Parms ToggleCharacterSheet_Parms;
	ToggleCharacterSheet_Parms.bForce = bForce;

	this->ProcessEvent ( pFnToggleCharacterSheet, &ToggleCharacterSheet_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleInventory
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleInventory ( )
{
	static UFunction* pFnToggleInventory = NULL;

	if ( ! pFnToggleInventory )
		pFnToggleInventory = (UFunction*) UObject::GObjObjects()->Data[ 56577 ];

	ANowHUD_execToggleInventory_Parms ToggleInventory_Parms;

	this->ProcessEvent ( pFnToggleInventory, &ToggleInventory_Parms, NULL );
};

// Function NowGame.NowHUD.OpenGuildInviteDialogue
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 SourceAvatarName               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowHUD::eventOpenGuildInviteDialogue ( struct FString SourceAvatarName, struct FString guildName )
{
	static UFunction* pFnOpenGuildInviteDialogue = NULL;

	if ( ! pFnOpenGuildInviteDialogue )
		pFnOpenGuildInviteDialogue = (UFunction*) UObject::GObjObjects()->Data[ 56574 ];

	ANowHUD_eventOpenGuildInviteDialogue_Parms OpenGuildInviteDialogue_Parms;
	memcpy ( &OpenGuildInviteDialogue_Parms.SourceAvatarName, &SourceAvatarName, 0xC );
	memcpy ( &OpenGuildInviteDialogue_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnOpenGuildInviteDialogue, &OpenGuildInviteDialogue_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleGuildCode
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleGuildCode ( )
{
	static UFunction* pFnToggleGuildCode = NULL;

	if ( ! pFnToggleGuildCode )
		pFnToggleGuildCode = (UFunction*) UObject::GObjObjects()->Data[ 56573 ];

	ANowHUD_eventToggleGuildCode_Parms ToggleGuildCode_Parms;

	this->ProcessEvent ( pFnToggleGuildCode, &ToggleGuildCode_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleGuildMenu
// [0x00020002] 
// Parameters infos:

void ANowHUD::ToggleGuildMenu ( )
{
	static UFunction* pFnToggleGuildMenu = NULL;

	if ( ! pFnToggleGuildMenu )
		pFnToggleGuildMenu = (UFunction*) UObject::GObjObjects()->Data[ 56572 ];

	ANowHUD_execToggleGuildMenu_Parms ToggleGuildMenu_Parms;

	this->ProcessEvent ( pFnToggleGuildMenu, &ToggleGuildMenu_Parms, NULL );
};

// Function NowGame.NowHUD.StartChatCommand
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::StartChatCommand ( )
{
	static UFunction* pFnStartChatCommand = NULL;

	if ( ! pFnStartChatCommand )
		pFnStartChatCommand = (UFunction*) UObject::GObjObjects()->Data[ 56571 ];

	ANowHUD_execStartChatCommand_Parms StartChatCommand_Parms;

	this->ProcessEvent ( pFnStartChatCommand, &StartChatCommand_Parms, NULL );
};

// Function NowGame.NowHUD.StartChat
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::StartChat ( )
{
	static UFunction* pFnStartChat = NULL;

	if ( ! pFnStartChat )
		pFnStartChat = (UFunction*) UObject::GObjObjects()->Data[ 56570 ];

	ANowHUD_execStartChat_Parms StartChat_Parms;

	this->ProcessEvent ( pFnStartChat, &StartChat_Parms, NULL );
};

// Function NowGame.NowHUD.CloseStuff
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowHUD::eventCloseStuff ( )
{
	static UFunction* pFnCloseStuff = NULL;

	if ( ! pFnCloseStuff )
		pFnCloseStuff = (UFunction*) UObject::GObjObjects()->Data[ 56568 ];

	ANowHUD_eventCloseStuff_Parms CloseStuff_Parms;

	this->ProcessEvent ( pFnCloseStuff, &CloseStuff_Parms, NULL );

	return CloseStuff_Parms.ReturnValue;
};

// Function NowGame.NowHUD.ToggleMainMenu
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleMainMenu ( )
{
	static UFunction* pFnToggleMainMenu = NULL;

	if ( ! pFnToggleMainMenu )
		pFnToggleMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 56565 ];

	ANowHUD_execToggleMainMenu_Parms ToggleMainMenu_Parms;

	this->ProcessEvent ( pFnToggleMainMenu, &ToggleMainMenu_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleSpells
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleSpells ( )
{
	static UFunction* pFnToggleSpells = NULL;

	if ( ! pFnToggleSpells )
		pFnToggleSpells = (UFunction*) UObject::GObjObjects()->Data[ 56564 ];

	ANowHUD_execToggleSpells_Parms ToggleSpells_Parms;

	this->ProcessEvent ( pFnToggleSpells, &ToggleSpells_Parms, NULL );
};

// Function NowGame.NowHUD.TogglePetInfo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::TogglePetInfo ( )
{
	static UFunction* pFnTogglePetInfo = NULL;

	if ( ! pFnTogglePetInfo )
		pFnTogglePetInfo = (UFunction*) UObject::GObjObjects()->Data[ 56563 ];

	ANowHUD_execTogglePetInfo_Parms TogglePetInfo_Parms;

	this->ProcessEvent ( pFnTogglePetInfo, &TogglePetInfo_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleSkills
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleSkills ( )
{
	static UFunction* pFnToggleSkills = NULL;

	if ( ! pFnToggleSkills )
		pFnToggleSkills = (UFunction*) UObject::GObjObjects()->Data[ 56562 ];

	ANowHUD_execToggleSkills_Parms ToggleSkills_Parms;

	this->ProcessEvent ( pFnToggleSkills, &ToggleSkills_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleHouseWorkbench
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 workBenchInfo                  ( CPF_Parm | CPF_NeedCtorLink )
// class ANowAtlasAvatarPlayerHouse* myHouse                        ( CPF_Parm )

void ANowHUD::eventToggleHouseWorkbench ( struct FString workBenchInfo, class ANowAtlasAvatarPlayerHouse* myHouse )
{
	static UFunction* pFnToggleHouseWorkbench = NULL;

	if ( ! pFnToggleHouseWorkbench )
		pFnToggleHouseWorkbench = (UFunction*) UObject::GObjObjects()->Data[ 56559 ];

	ANowHUD_eventToggleHouseWorkbench_Parms ToggleHouseWorkbench_Parms;
	memcpy ( &ToggleHouseWorkbench_Parms.workBenchInfo, &workBenchInfo, 0xC );
	ToggleHouseWorkbench_Parms.myHouse = myHouse;

	this->ProcessEvent ( pFnToggleHouseWorkbench, &ToggleHouseWorkbench_Parms, NULL );
};

// Function NowGame.NowHUD.DrawGMCrosshair
// [0x00020002] 
// Parameters infos:

void ANowHUD::DrawGMCrosshair ( )
{
	static UFunction* pFnDrawGMCrosshair = NULL;

	if ( ! pFnDrawGMCrosshair )
		pFnDrawGMCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 56558 ];

	ANowHUD_execDrawGMCrosshair_Parms DrawGMCrosshair_Parms;

	this->ProcessEvent ( pFnDrawGMCrosshair, &DrawGMCrosshair_Parms, NULL );
};

// Function NowGame.NowHUD.DrawHUD
// [0x00020002] 
// Parameters infos:

void ANowHUD::DrawHUD ( )
{
	static UFunction* pFnDrawHUD = NULL;

	if ( ! pFnDrawHUD )
		pFnDrawHUD = (UFunction*) UObject::GObjObjects()->Data[ 56557 ];

	ANowHUD_execDrawHUD_Parms DrawHUD_Parms;

	this->ProcessEvent ( pFnDrawHUD, &DrawHUD_Parms, NULL );
};

// Function NowGame.NowHUD.GetGFXHud
// [0x00020002] 
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* ANowHUD::GetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = (UFunction*) UObject::GObjObjects()->Data[ 56555 ];

	ANowHUD_execGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.NowHUD.ResetQuickTarget
// [0x00020002] 
// Parameters infos:

void ANowHUD::ResetQuickTarget ( )
{
	static UFunction* pFnResetQuickTarget = NULL;

	if ( ! pFnResetQuickTarget )
		pFnResetQuickTarget = (UFunction*) UObject::GObjObjects()->Data[ 56554 ];

	ANowHUD_execResetQuickTarget_Parms ResetQuickTarget_Parms;

	this->ProcessEvent ( pFnResetQuickTarget, &ResetQuickTarget_Parms, NULL );
};

// Function NowGame.NowHUD.SetQuickTarget
// [0x00024002] 
// Parameters infos:
// class AActor*                  NewTarget                      ( CPF_OptionalParm | CPF_Parm )

void ANowHUD::SetQuickTarget ( class AActor* NewTarget )
{
	static UFunction* pFnSetQuickTarget = NULL;

	if ( ! pFnSetQuickTarget )
		pFnSetQuickTarget = (UFunction*) UObject::GObjObjects()->Data[ 56552 ];

	ANowHUD_execSetQuickTarget_Parms SetQuickTarget_Parms;
	SetQuickTarget_Parms.NewTarget = NewTarget;

	this->ProcessEvent ( pFnSetQuickTarget, &SetQuickTarget_Parms, NULL );
};

// Function NowGame.NowHUD.DrawTargetCrosshair
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void ANowHUD::DrawTargetCrosshair ( class UCanvas* C )
{
	static UFunction* pFnDrawTargetCrosshair = NULL;

	if ( ! pFnDrawTargetCrosshair )
		pFnDrawTargetCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 56550 ];

	ANowHUD_execDrawTargetCrosshair_Parms DrawTargetCrosshair_Parms;
	DrawTargetCrosshair_Parms.C = C;

	this->ProcessEvent ( pFnDrawTargetCrosshair, &DrawTargetCrosshair_Parms, NULL );
};

// Function NowGame.NowHUD.ShowTargetCrosshair
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void ANowHUD::ShowTargetCrosshair ( unsigned long bOn )
{
	static UFunction* pFnShowTargetCrosshair = NULL;

	if ( ! pFnShowTargetCrosshair )
		pFnShowTargetCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 56548 ];

	ANowHUD_execShowTargetCrosshair_Parms ShowTargetCrosshair_Parms;
	ShowTargetCrosshair_Parms.bOn = bOn;

	this->ProcessEvent ( pFnShowTargetCrosshair, &ShowTargetCrosshair_Parms, NULL );
};

// Function NowGame.NowHUD.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventPostRender ( )
{
	static UFunction* pFnPostRender = NULL;

	if ( ! pFnPostRender )
		pFnPostRender = (UFunction*) UObject::GObjObjects()->Data[ 56544 ];

	ANowHUD_eventPostRender_Parms PostRender_Parms;

	this->ProcessEvent ( pFnPostRender, &PostRender_Parms, NULL );
};

// Function NowGame.NowHUD.DrawOnScreenMaterialFX
// [0x00020002] 
// Parameters infos:

void ANowHUD::DrawOnScreenMaterialFX ( )
{
	static UFunction* pFnDrawOnScreenMaterialFX = NULL;

	if ( ! pFnDrawOnScreenMaterialFX )
		pFnDrawOnScreenMaterialFX = (UFunction*) UObject::GObjObjects()->Data[ 56542 ];

	ANowHUD_execDrawOnScreenMaterialFX_Parms DrawOnScreenMaterialFX_Parms;

	this->ProcessEvent ( pFnDrawOnScreenMaterialFX, &DrawOnScreenMaterialFX_Parms, NULL );
};

// Function NowGame.NowHUD.PlayOnScreenMaterialFX
// [0x00024002] 
// Parameters infos:
// class UMaterialInstance*       WhatFX                         ( CPF_Parm )
// float                          Timer                          ( CPF_Parm )
// float                          BlendOutTime                   ( CPF_Parm )
// unsigned long                  bIsDominantMatFX               ( CPF_OptionalParm | CPF_Parm )

void ANowHUD::PlayOnScreenMaterialFX ( class UMaterialInstance* WhatFX, float Timer, float BlendOutTime, unsigned long bIsDominantMatFX )
{
	static UFunction* pFnPlayOnScreenMaterialFX = NULL;

	if ( ! pFnPlayOnScreenMaterialFX )
		pFnPlayOnScreenMaterialFX = (UFunction*) UObject::GObjObjects()->Data[ 56537 ];

	ANowHUD_execPlayOnScreenMaterialFX_Parms PlayOnScreenMaterialFX_Parms;
	PlayOnScreenMaterialFX_Parms.WhatFX = WhatFX;
	PlayOnScreenMaterialFX_Parms.Timer = Timer;
	PlayOnScreenMaterialFX_Parms.BlendOutTime = BlendOutTime;
	PlayOnScreenMaterialFX_Parms.bIsDominantMatFX = bIsDominantMatFX;

	this->ProcessEvent ( pFnPlayOnScreenMaterialFX, &PlayOnScreenMaterialFX_Parms, NULL );
};

// Function NowGame.NowHUD.StopOnScreenMaterialFX
// [0x00020002] 
// Parameters infos:

void ANowHUD::StopOnScreenMaterialFX ( )
{
	static UFunction* pFnStopOnScreenMaterialFX = NULL;

	if ( ! pFnStopOnScreenMaterialFX )
		pFnStopOnScreenMaterialFX = (UFunction*) UObject::GObjObjects()->Data[ 56536 ];

	ANowHUD_execStopOnScreenMaterialFX_Parms StopOnScreenMaterialFX_Parms;

	this->ProcessEvent ( pFnStopOnScreenMaterialFX, &StopOnScreenMaterialFX_Parms, NULL );
};

// Function NowGame.NowHUD.WasHitOff
// [0x00020002] 
// Parameters infos:

void ANowHUD::WasHitOff ( )
{
	static UFunction* pFnWasHitOff = NULL;

	if ( ! pFnWasHitOff )
		pFnWasHitOff = (UFunction*) UObject::GObjObjects()->Data[ 56535 ];

	ANowHUD_execWasHitOff_Parms WasHitOff_Parms;

	this->ProcessEvent ( pFnWasHitOff, &WasHitOff_Parms, NULL );
};

// Function NowGame.NowHUD.WasHit
// [0x00820002] 
// Parameters infos:
// struct FVector                 FromDir                        ( CPF_Parm )

void ANowHUD::WasHit ( struct FVector FromDir )
{
	static UFunction* pFnWasHit = NULL;

	if ( ! pFnWasHit )
		pFnWasHit = (UFunction*) UObject::GObjObjects()->Data[ 56524 ];

	ANowHUD_execWasHit_Parms WasHit_Parms;
	memcpy ( &WasHit_Parms.FromDir, &FromDir, 0xC );

	this->ProcessEvent ( pFnWasHit, &WasHit_Parms, NULL );
};

// Function NowGame.NowHUD.StartDelayTimer
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  Start                          ( CPF_Parm )
// struct FString                 Why                            ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// float                          Time                           ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bStun                          ( CPF_OptionalParm | CPF_Parm )

void ANowHUD::eventStartDelayTimer ( unsigned long Start, struct FString Why, float Time, unsigned long bStun )
{
	static UFunction* pFnStartDelayTimer = NULL;

	if ( ! pFnStartDelayTimer )
		pFnStartDelayTimer = (UFunction*) UObject::GObjObjects()->Data[ 56519 ];

	ANowHUD_eventStartDelayTimer_Parms StartDelayTimer_Parms;
	StartDelayTimer_Parms.Start = Start;
	memcpy ( &StartDelayTimer_Parms.Why, &Why, 0xC );
	StartDelayTimer_Parms.Time = Time;
	StartDelayTimer_Parms.bStun = bStun;

	this->ProcessEvent ( pFnStartDelayTimer, &StartDelayTimer_Parms, NULL );
};

// Function NowGame.NowHUD.RecieveGameEvent
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            eEvent                         ( CPF_Parm )
// int                            pieceType                      ( CPF_Parm )
// int                            pieceID                        ( CPF_Parm )
// int                            XPos                           ( CPF_Parm )
// int                            YPos                           ( CPF_Parm )
// struct FString                 avatarName                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowHUD::eventRecieveGameEvent ( int eEvent, int pieceType, int pieceID, int XPos, int YPos, struct FString avatarName )
{
	static UFunction* pFnRecieveGameEvent = NULL;

	if ( ! pFnRecieveGameEvent )
		pFnRecieveGameEvent = (UFunction*) UObject::GObjObjects()->Data[ 56512 ];

	ANowHUD_eventRecieveGameEvent_Parms RecieveGameEvent_Parms;
	RecieveGameEvent_Parms.eEvent = eEvent;
	RecieveGameEvent_Parms.pieceType = pieceType;
	RecieveGameEvent_Parms.pieceID = pieceID;
	RecieveGameEvent_Parms.XPos = XPos;
	RecieveGameEvent_Parms.YPos = YPos;
	memcpy ( &RecieveGameEvent_Parms.avatarName, &avatarName, 0xC );

	this->ProcessEvent ( pFnRecieveGameEvent, &RecieveGameEvent_Parms, NULL );
};

// Function NowGame.NowHUD.rightClickUse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            bag                            ( CPF_Parm )
// int                            Slot                           ( CPF_Parm )

bool ANowHUD::eventrightClickUse ( int bag, int Slot )
{
	static UFunction* pFnrightClickUse = NULL;

	if ( ! pFnrightClickUse )
		pFnrightClickUse = (UFunction*) UObject::GObjObjects()->Data[ 56508 ];

	ANowHUD_eventrightClickUse_Parms rightClickUse_Parms;
	rightClickUse_Parms.bag = bag;
	rightClickUse_Parms.Slot = Slot;

	this->ProcessEvent ( pFnrightClickUse, &rightClickUse_Parms, NULL );

	return rightClickUse_Parms.ReturnValue;
};

// Function NowGame.NowHUD.InitGFXScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            WhatScene                      ( CPF_Parm )

void ANowHUD::eventInitGFXScene ( int WhatScene )
{
	static UFunction* pFnInitGFXScene = NULL;

	if ( ! pFnInitGFXScene )
		pFnInitGFXScene = (UFunction*) UObject::GObjObjects()->Data[ 56506 ];

	ANowHUD_eventInitGFXScene_Parms InitGFXScene_Parms;
	InitGFXScene_Parms.WhatScene = WhatScene;

	this->ProcessEvent ( pFnInitGFXScene, &InitGFXScene_Parms, NULL );
};

// Function NowGame.NowHUD.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56505 ];

	ANowHUD_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowHUD.NoHud
// [0x00020002] 
// Parameters infos:

void ANowHUD::NoHud ( )
{
	static UFunction* pFnNoHud = NULL;

	if ( ! pFnNoHud )
		pFnNoHud = (UFunction*) UObject::GObjObjects()->Data[ 56504 ];

	ANowHUD_execNoHud_Parms NoHud_Parms;

	this->ProcessEvent ( pFnNoHud, &NoHud_Parms, NULL );
};

// Function NowGame.NowHUD.DeleteErrorMessage
// [0x00020002] 
// Parameters infos:

void ANowHUD::DeleteErrorMessage ( )
{
	static UFunction* pFnDeleteErrorMessage = NULL;

	if ( ! pFnDeleteErrorMessage )
		pFnDeleteErrorMessage = (UFunction*) UObject::GObjObjects()->Data[ 56503 ];

	ANowHUD_execDeleteErrorMessage_Parms DeleteErrorMessage_Parms;

	this->ProcessEvent ( pFnDeleteErrorMessage, &DeleteErrorMessage_Parms, NULL );
};

// Function NowGame.NowHUD.SetErrorMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 newMessage                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowHUD::SetErrorMessage ( struct FString newMessage )
{
	static UFunction* pFnSetErrorMessage = NULL;

	if ( ! pFnSetErrorMessage )
		pFnSetErrorMessage = (UFunction*) UObject::GObjObjects()->Data[ 56501 ];

	ANowHUD_execSetErrorMessage_Parms SetErrorMessage_Parms;
	memcpy ( &SetErrorMessage_Parms.newMessage, &newMessage, 0xC );

	this->ProcessEvent ( pFnSetErrorMessage, &SetErrorMessage_Parms, NULL );
};

// Function NowGame.NowHUD.UpdateGuildDiplomacyGui
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventUpdateGuildDiplomacyGui ( )
{
	static UFunction* pFnUpdateGuildDiplomacyGui = NULL;

	if ( ! pFnUpdateGuildDiplomacyGui )
		pFnUpdateGuildDiplomacyGui = (UFunction*) UObject::GObjObjects()->Data[ 56500 ];

	ANowHUD_eventUpdateGuildDiplomacyGui_Parms UpdateGuildDiplomacyGui_Parms;

	this->ProcessEvent ( pFnUpdateGuildDiplomacyGui, &UpdateGuildDiplomacyGui_Parms, NULL );
};

// Function NowGame.NowHUD.CloseResurrectionScene
// [0x00020000] 
// Parameters infos:

void ANowHUD::CloseResurrectionScene ( )
{
	static UFunction* pFnCloseResurrectionScene = NULL;

	if ( ! pFnCloseResurrectionScene )
		pFnCloseResurrectionScene = (UFunction*) UObject::GObjObjects()->Data[ 56499 ];

	ANowHUD_execCloseResurrectionScene_Parms CloseResurrectionScene_Parms;

	this->ProcessEvent ( pFnCloseResurrectionScene, &CloseResurrectionScene_Parms, NULL );
};

// Function NowGame.NowHUD.UpdateWeatherAwarenessSceneData
// [0x00020000] 
// Parameters infos:
// int                            windDir                        ( CPF_Parm )
// float                          windMagnitude                  ( CPF_Parm )
// int                            rainMagnitude                  ( CPF_Parm )
// struct FRotator                windRotation                   ( CPF_Parm )

void ANowHUD::UpdateWeatherAwarenessSceneData ( int windDir, float windMagnitude, int rainMagnitude, struct FRotator windRotation )
{
	static UFunction* pFnUpdateWeatherAwarenessSceneData = NULL;

	if ( ! pFnUpdateWeatherAwarenessSceneData )
		pFnUpdateWeatherAwarenessSceneData = (UFunction*) UObject::GObjObjects()->Data[ 56494 ];

	ANowHUD_execUpdateWeatherAwarenessSceneData_Parms UpdateWeatherAwarenessSceneData_Parms;
	UpdateWeatherAwarenessSceneData_Parms.windDir = windDir;
	UpdateWeatherAwarenessSceneData_Parms.windMagnitude = windMagnitude;
	UpdateWeatherAwarenessSceneData_Parms.rainMagnitude = rainMagnitude;
	memcpy ( &UpdateWeatherAwarenessSceneData_Parms.windRotation, &windRotation, 0xC );

	this->ProcessEvent ( pFnUpdateWeatherAwarenessSceneData, &UpdateWeatherAwarenessSceneData_Parms, NULL );
};

// Function NowGame.NowHUD.PlayerTurnedNotification
// [0x00020000] 
// Parameters infos:
// struct FRotator                ViewRotation                   ( CPF_Parm )

void ANowHUD::PlayerTurnedNotification ( struct FRotator ViewRotation )
{
	static UFunction* pFnPlayerTurnedNotification = NULL;

	if ( ! pFnPlayerTurnedNotification )
		pFnPlayerTurnedNotification = (UFunction*) UObject::GObjObjects()->Data[ 56492 ];

	ANowHUD_execPlayerTurnedNotification_Parms PlayerTurnedNotification_Parms;
	memcpy ( &PlayerTurnedNotification_Parms.ViewRotation, &ViewRotation, 0xC );

	this->ProcessEvent ( pFnPlayerTurnedNotification, &PlayerTurnedNotification_Parms, NULL );
};

// Function NowGame.NowHUD.openCurrentTasks
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::openCurrentTasks ( )
{
	static UFunction* pFnopenCurrentTasks = NULL;

	if ( ! pFnopenCurrentTasks )
		pFnopenCurrentTasks = (UFunction*) UObject::GObjObjects()->Data[ 56491 ];

	ANowHUD_execopenCurrentTasks_Parms openCurrentTasks_Parms;

	this->ProcessEvent ( pFnopenCurrentTasks, &openCurrentTasks_Parms, NULL );
};

// Function NowGame.NowHUD.openFriendList
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::openFriendList ( )
{
	static UFunction* pFnopenFriendList = NULL;

	if ( ! pFnopenFriendList )
		pFnopenFriendList = (UFunction*) UObject::GObjObjects()->Data[ 56490 ];

	ANowHUD_execopenFriendList_Parms openFriendList_Parms;

	this->ProcessEvent ( pFnopenFriendList, &openFriendList_Parms, NULL );
};

// Function NowGame.NowHUD.DoHideVoiceTutorialButton
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::DoHideVoiceTutorialButton ( )
{
	static UFunction* pFnDoHideVoiceTutorialButton = NULL;

	if ( ! pFnDoHideVoiceTutorialButton )
		pFnDoHideVoiceTutorialButton = (UFunction*) UObject::GObjObjects()->Data[ 56489 ];

	ANowHUD_execDoHideVoiceTutorialButton_Parms DoHideVoiceTutorialButton_Parms;

	this->ProcessEvent ( pFnDoHideVoiceTutorialButton, &DoHideVoiceTutorialButton_Parms, NULL );
};

// Function NowGame.NowHUD.DoShowVoiceTutorialButton
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 sId                            ( CPF_Parm | CPF_NeedCtorLink )

void ANowHUD::DoShowVoiceTutorialButton ( struct FString sId )
{
	static UFunction* pFnDoShowVoiceTutorialButton = NULL;

	if ( ! pFnDoShowVoiceTutorialButton )
		pFnDoShowVoiceTutorialButton = (UFunction*) UObject::GObjObjects()->Data[ 56487 ];

	ANowHUD_execDoShowVoiceTutorialButton_Parms DoShowVoiceTutorialButton_Parms;
	memcpy ( &DoShowVoiceTutorialButton_Parms.sId, &sId, 0xC );

	this->ProcessEvent ( pFnDoShowVoiceTutorialButton, &DoShowVoiceTutorialButton_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleCompass
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleCompass ( )
{
	static UFunction* pFnToggleCompass = NULL;

	if ( ! pFnToggleCompass )
		pFnToggleCompass = (UFunction*) UObject::GObjObjects()->Data[ 56486 ];

	ANowHUD_execToggleCompass_Parms ToggleCompass_Parms;

	this->ProcessEvent ( pFnToggleCompass, &ToggleCompass_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleTutorials
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleTutorials ( )
{
	static UFunction* pFnToggleTutorials = NULL;

	if ( ! pFnToggleTutorials )
		pFnToggleTutorials = (UFunction*) UObject::GObjObjects()->Data[ 56485 ];

	ANowHUD_execToggleTutorials_Parms ToggleTutorials_Parms;

	this->ProcessEvent ( pFnToggleTutorials, &ToggleTutorials_Parms, NULL );
};

// Function NowGame.NowHUD.SetFullScreenColor
// [0x00020002] 
// Parameters infos:
// struct FColor                  NewColor                       ( CPF_Parm )

void ANowHUD::SetFullScreenColor ( struct FColor NewColor )
{
	static UFunction* pFnSetFullScreenColor = NULL;

	if ( ! pFnSetFullScreenColor )
		pFnSetFullScreenColor = (UFunction*) UObject::GObjObjects()->Data[ 56483 ];

	ANowHUD_execSetFullScreenColor_Parms SetFullScreenColor_Parms;
	memcpy ( &SetFullScreenColor_Parms.NewColor, &NewColor, 0x4 );

	this->ProcessEvent ( pFnSetFullScreenColor, &SetFullScreenColor_Parms, NULL );
};

// Function NowGame.NowHUD.DrawDebugCanvas
// [0x00020000] 
// Parameters infos:

void ANowHUD::DrawDebugCanvas ( )
{
	static UFunction* pFnDrawDebugCanvas = NULL;

	if ( ! pFnDrawDebugCanvas )
		pFnDrawDebugCanvas = (UFunction*) UObject::GObjObjects()->Data[ 56482 ];

	ANowHUD_execDrawDebugCanvas_Parms DrawDebugCanvas_Parms;

	this->ProcessEvent ( pFnDrawDebugCanvas, &DrawDebugCanvas_Parms, NULL );
};

// Function NowGame.NowHUD.ClearChains
// [0x00020002] 
// Parameters infos:

void ANowHUD::ClearChains ( )
{
	static UFunction* pFnClearChains = NULL;

	if ( ! pFnClearChains )
		pFnClearChains = (UFunction*) UObject::GObjObjects()->Data[ 56481 ];

	ANowHUD_execClearChains_Parms ClearChains_Parms;

	this->ProcessEvent ( pFnClearChains, &ClearChains_Parms, NULL );
};

// Function NowGame.NowHUD.AddChain
// [0x00820002] 
// Parameters infos:

void ANowHUD::AddChain ( )
{
	static UFunction* pFnAddChain = NULL;

	if ( ! pFnAddChain )
		pFnAddChain = (UFunction*) UObject::GObjObjects()->Data[ 56477 ];

	ANowHUD_execAddChain_Parms AddChain_Parms;

	this->ProcessEvent ( pFnAddChain, &AddChain_Parms, NULL );
};

// Function NowGame.NowHUD.GetSpeedFromInt
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSpeed                         ( CPF_Parm )

int ANowHUD::GetSpeedFromInt ( int iSpeed )
{
	static UFunction* pFnGetSpeedFromInt = NULL;

	if ( ! pFnGetSpeedFromInt )
		pFnGetSpeedFromInt = (UFunction*) UObject::GObjObjects()->Data[ 56471 ];

	ANowHUD_execGetSpeedFromInt_Parms GetSpeedFromInt_Parms;
	GetSpeedFromInt_Parms.iSpeed = iSpeed;

	this->ProcessEvent ( pFnGetSpeedFromInt, &GetSpeedFromInt_Parms, NULL );

	return GetSpeedFromInt_Parms.ReturnValue;
};

// Function NowGame.NowHUD.AiChainIntersects
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// TArray< struct FVector2D >     vPos                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector2D               vStar                          ( CPF_Parm )
// struct FVector2D               vEnd                           ( CPF_Parm )
// struct FVector2D               vHit                           ( CPF_Parm | CPF_OutParm )
// int                            iHit                           ( CPF_Parm | CPF_OutParm )
// int                            iClosestEnd                    ( CPF_Parm | CPF_OutParm )
// TArray< struct FVector2D >     vPath                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool ANowHUD::AiChainIntersects ( TArray< struct FVector2D > vPos, struct FVector2D vStar, struct FVector2D vEnd, struct FVector2D* vHit, int* iHit, int* iClosestEnd, TArray< struct FVector2D >* vPath )
{
	static UFunction* pFnAiChainIntersects = NULL;

	if ( ! pFnAiChainIntersects )
		pFnAiChainIntersects = (UFunction*) UObject::GObjObjects()->Data[ 56460 ];

	ANowHUD_execAiChainIntersects_Parms AiChainIntersects_Parms;
	memcpy ( &AiChainIntersects_Parms.vPos, &vPos, 0xC );
	memcpy ( &AiChainIntersects_Parms.vStar, &vStar, 0x8 );
	memcpy ( &AiChainIntersects_Parms.vEnd, &vEnd, 0x8 );

	pFnAiChainIntersects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiChainIntersects, &AiChainIntersects_Parms, NULL );

	pFnAiChainIntersects->FunctionFlags |= 0x400;

	if ( vHit )
		memcpy ( vHit, &AiChainIntersects_Parms.vHit, 0x8 );

	if ( iHit )
		*iHit = AiChainIntersects_Parms.iHit;

	if ( iClosestEnd )
		*iClosestEnd = AiChainIntersects_Parms.iClosestEnd;

	if ( vPath )
		memcpy ( vPath, &AiChainIntersects_Parms.vPath, 0xC );

	return AiChainIntersects_Parms.ReturnValue;
};

// Function NowGame.NowHUD.GetChainBoundBox
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FVector2D >     vPos                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector2D               vMin                           ( CPF_Parm | CPF_OutParm )
// struct FVector2D               vMax                           ( CPF_Parm | CPF_OutParm )

void ANowHUD::GetChainBoundBox ( TArray< struct FVector2D > vPos, struct FVector2D* vMin, struct FVector2D* vMax )
{
	static UFunction* pFnGetChainBoundBox = NULL;

	if ( ! pFnGetChainBoundBox )
		pFnGetChainBoundBox = (UFunction*) UObject::GObjObjects()->Data[ 56455 ];

	ANowHUD_execGetChainBoundBox_Parms GetChainBoundBox_Parms;
	memcpy ( &GetChainBoundBox_Parms.vPos, &vPos, 0xC );

	pFnGetChainBoundBox->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetChainBoundBox, &GetChainBoundBox_Parms, NULL );

	pFnGetChainBoundBox->FunctionFlags |= 0x400;

	if ( vMin )
		memcpy ( vMin, &GetChainBoundBox_Parms.vMin, 0x8 );

	if ( vMax )
		memcpy ( vMax, &GetChainBoundBox_Parms.vMax, 0x8 );
};

// Function NowGame.NowHUD.GetChainAsLines
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FVector2D >     vPos                           ( CPF_Parm | CPF_NeedCtorLink )
// TArray< struct FVector2D >     vStart                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< struct FVector2D >     vEnd                           ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< struct FVector2D >     vRotStart                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< struct FVector2D >     vRotEnd                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< struct FVector2D >     vDoorStart                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< struct FVector2D >     vDoorEnd                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ANowHUD::GetChainAsLines ( TArray< struct FVector2D > vPos, TArray< struct FVector2D >* vStart, TArray< struct FVector2D >* vEnd, TArray< struct FVector2D >* vRotStart, TArray< struct FVector2D >* vRotEnd, TArray< struct FVector2D >* vDoorStart, TArray< struct FVector2D >* vDoorEnd )
{
	static UFunction* pFnGetChainAsLines = NULL;

	if ( ! pFnGetChainAsLines )
		pFnGetChainAsLines = (UFunction*) UObject::GObjObjects()->Data[ 56440 ];

	ANowHUD_execGetChainAsLines_Parms GetChainAsLines_Parms;
	memcpy ( &GetChainAsLines_Parms.vPos, &vPos, 0xC );

	pFnGetChainAsLines->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetChainAsLines, &GetChainAsLines_Parms, NULL );

	pFnGetChainAsLines->FunctionFlags |= 0x400;

	if ( vStart )
		memcpy ( vStart, &GetChainAsLines_Parms.vStart, 0xC );

	if ( vEnd )
		memcpy ( vEnd, &GetChainAsLines_Parms.vEnd, 0xC );

	if ( vRotStart )
		memcpy ( vRotStart, &GetChainAsLines_Parms.vRotStart, 0xC );

	if ( vRotEnd )
		memcpy ( vRotEnd, &GetChainAsLines_Parms.vRotEnd, 0xC );

	if ( vDoorStart )
		memcpy ( vDoorStart, &GetChainAsLines_Parms.vDoorStart, 0xC );

	if ( vDoorEnd )
		memcpy ( vDoorEnd, &GetChainAsLines_Parms.vDoorEnd, 0xC );
};

// Function NowGame.NowHUD.GetBoundBox
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FVector2D               vBoxPos                        ( CPF_Parm )
// struct FVector2D               vBoxSize                       ( CPF_Parm )
// struct FVector2D               vMin                           ( CPF_Parm | CPF_OutParm )
// struct FVector2D               vMax                           ( CPF_Parm | CPF_OutParm )

void ANowHUD::GetBoundBox ( struct FVector2D vBoxPos, struct FVector2D vBoxSize, struct FVector2D* vMin, struct FVector2D* vMax )
{
	static UFunction* pFnGetBoundBox = NULL;

	if ( ! pFnGetBoundBox )
		pFnGetBoundBox = (UFunction*) UObject::GObjObjects()->Data[ 56435 ];

	ANowHUD_execGetBoundBox_Parms GetBoundBox_Parms;
	memcpy ( &GetBoundBox_Parms.vBoxPos, &vBoxPos, 0x8 );
	memcpy ( &GetBoundBox_Parms.vBoxSize, &vBoxSize, 0x8 );

	pFnGetBoundBox->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBoundBox, &GetBoundBox_Parms, NULL );

	pFnGetBoundBox->FunctionFlags |= 0x400;

	if ( vMin )
		memcpy ( vMin, &GetBoundBox_Parms.vMin, 0x8 );

	if ( vMax )
		memcpy ( vMax, &GetBoundBox_Parms.vMax, 0x8 );
};

// Function NowGame.NowHUD.GetDoorPositions
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FVector2D               vBoxPos                        ( CPF_Parm )
// struct FVector2D               vBoxSize                       ( CPF_Parm )
// struct FVector2D               vDoorPos                       ( CPF_Parm )
// struct FVector2D               vInside                        ( CPF_Parm | CPF_OutParm )
// struct FVector2D               vOutside                       ( CPF_Parm | CPF_OutParm )

void ANowHUD::GetDoorPositions ( struct FVector2D vBoxPos, struct FVector2D vBoxSize, struct FVector2D vDoorPos, struct FVector2D* vInside, struct FVector2D* vOutside )
{
	static UFunction* pFnGetDoorPositions = NULL;

	if ( ! pFnGetDoorPositions )
		pFnGetDoorPositions = (UFunction*) UObject::GObjObjects()->Data[ 56429 ];

	ANowHUD_execGetDoorPositions_Parms GetDoorPositions_Parms;
	memcpy ( &GetDoorPositions_Parms.vBoxPos, &vBoxPos, 0x8 );
	memcpy ( &GetDoorPositions_Parms.vBoxSize, &vBoxSize, 0x8 );
	memcpy ( &GetDoorPositions_Parms.vDoorPos, &vDoorPos, 0x8 );

	pFnGetDoorPositions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDoorPositions, &GetDoorPositions_Parms, NULL );

	pFnGetDoorPositions->FunctionFlags |= 0x400;

	if ( vInside )
		memcpy ( vInside, &GetDoorPositions_Parms.vInside, 0x8 );

	if ( vOutside )
		memcpy ( vOutside, &GetDoorPositions_Parms.vOutside, 0x8 );
};

// Function NowGame.NowHUD.GetBoxSide
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FVector2D               vBoxPos                        ( CPF_Parm )
// struct FVector2D               vBoxSize                       ( CPF_Parm )
// struct FVector2D               vDoor                          ( CPF_Parm )
// int                            iIndex                         ( CPF_Parm )
// float                          fPush                          ( CPF_Parm )
// struct FVector2D               vStart                         ( CPF_Parm | CPF_OutParm )
// struct FVector2D               vEnd                           ( CPF_Parm | CPF_OutParm )

void ANowHUD::GetBoxSide ( struct FVector2D vBoxPos, struct FVector2D vBoxSize, struct FVector2D vDoor, int iIndex, float fPush, struct FVector2D* vStart, struct FVector2D* vEnd )
{
	static UFunction* pFnGetBoxSide = NULL;

	if ( ! pFnGetBoxSide )
		pFnGetBoxSide = (UFunction*) UObject::GObjObjects()->Data[ 56421 ];

	ANowHUD_execGetBoxSide_Parms GetBoxSide_Parms;
	memcpy ( &GetBoxSide_Parms.vBoxPos, &vBoxPos, 0x8 );
	memcpy ( &GetBoxSide_Parms.vBoxSize, &vBoxSize, 0x8 );
	memcpy ( &GetBoxSide_Parms.vDoor, &vDoor, 0x8 );
	GetBoxSide_Parms.iIndex = iIndex;
	GetBoxSide_Parms.fPush = fPush;

	pFnGetBoxSide->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBoxSide, &GetBoxSide_Parms, NULL );

	pFnGetBoxSide->FunctionFlags |= 0x400;

	if ( vStart )
		memcpy ( vStart, &GetBoxSide_Parms.vStart, 0x8 );

	if ( vEnd )
		memcpy ( vEnd, &GetBoxSide_Parms.vEnd, 0x8 );
};

// Function NowGame.NowHUD.AiIntersects
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector2D               vBoxPos                        ( CPF_Parm )
// struct FVector2D               vBoxSize                       ( CPF_Parm )
// struct FVector2D               vDoor                          ( CPF_Parm )
// struct FVector2D               vStar                          ( CPF_Parm )
// struct FVector2D               vEnd                           ( CPF_Parm )
// struct FVector2D               vHit                           ( CPF_Parm | CPF_OutParm )
// int                            iHit                           ( CPF_Parm | CPF_OutParm )
// int                            iClosestEnd                    ( CPF_Parm | CPF_OutParm )
// TArray< struct FVector2D >     vPath                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool ANowHUD::AiIntersects ( struct FVector2D vBoxPos, struct FVector2D vBoxSize, struct FVector2D vDoor, struct FVector2D vStar, struct FVector2D vEnd, struct FVector2D* vHit, int* iHit, int* iClosestEnd, TArray< struct FVector2D >* vPath )
{
	static UFunction* pFnAiIntersects = NULL;

	if ( ! pFnAiIntersects )
		pFnAiIntersects = (UFunction*) UObject::GObjObjects()->Data[ 56409 ];

	ANowHUD_execAiIntersects_Parms AiIntersects_Parms;
	memcpy ( &AiIntersects_Parms.vBoxPos, &vBoxPos, 0x8 );
	memcpy ( &AiIntersects_Parms.vBoxSize, &vBoxSize, 0x8 );
	memcpy ( &AiIntersects_Parms.vDoor, &vDoor, 0x8 );
	memcpy ( &AiIntersects_Parms.vStar, &vStar, 0x8 );
	memcpy ( &AiIntersects_Parms.vEnd, &vEnd, 0x8 );

	pFnAiIntersects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiIntersects, &AiIntersects_Parms, NULL );

	pFnAiIntersects->FunctionFlags |= 0x400;

	if ( vHit )
		memcpy ( vHit, &AiIntersects_Parms.vHit, 0x8 );

	if ( iHit )
		*iHit = AiIntersects_Parms.iHit;

	if ( iClosestEnd )
		*iClosestEnd = AiIntersects_Parms.iClosestEnd;

	if ( vPath )
		memcpy ( vPath, &AiIntersects_Parms.vPath, 0xC );

	return AiIntersects_Parms.ReturnValue;
};

// Function NowGame.NowMountManager.SortDel
// [0x00920002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )
// class AActor*                  B                              ( CPF_Parm )

int UNowMountManager::SortDel ( class AActor* A, class AActor* B )
{
	static UFunction* pFnSortDel = NULL;

	if ( ! pFnSortDel )
		pFnSortDel = (UFunction*) UObject::GObjObjects()->Data[ 56646 ];

	UNowMountManager_execSortDel_Parms SortDel_Parms;
	SortDel_Parms.A = A;
	SortDel_Parms.B = B;

	this->ProcessEvent ( pFnSortDel, &SortDel_Parms, NULL );

	return SortDel_Parms.ReturnValue;
};

// Function NowGame.NowMountManager.TickDetail
// [0x00020002] 
// Parameters infos:

void UNowMountManager::TickDetail ( )
{
	static UFunction* pFnTickDetail = NULL;

	if ( ! pFnTickDetail )
		pFnTickDetail = (UFunction*) UObject::GObjObjects()->Data[ 56668 ];

	UNowMountManager_execTickDetail_Parms TickDetail_Parms;

	this->ProcessEvent ( pFnTickDetail, &TickDetail_Parms, NULL );
};

// Function NowGame.NowMountManager.OneSecTick
// [0x00020002] 
// Parameters infos:

void UNowMountManager::OneSecTick ( )
{
	static UFunction* pFnOneSecTick = NULL;

	if ( ! pFnOneSecTick )
		pFnOneSecTick = (UFunction*) UObject::GObjObjects()->Data[ 56667 ];

	UNowMountManager_execOneSecTick_Parms OneSecTick_Parms;

	this->ProcessEvent ( pFnOneSecTick, &OneSecTick_Parms, NULL );
};

// Function NowGame.NowMountManager.TickManager
// [0x00020002] 
// Parameters infos:

void UNowMountManager::TickManager ( )
{
	static UFunction* pFnTickManager = NULL;

	if ( ! pFnTickManager )
		pFnTickManager = (UFunction*) UObject::GObjObjects()->Data[ 56665 ];

	UNowMountManager_execTickManager_Parms TickManager_Parms;

	this->ProcessEvent ( pFnTickManager, &TickManager_Parms, NULL );
};

// Function NowGame.NowMountManager.AddToManager
// [0x00024002] 
// Parameters infos:
// class ANowAtlasAvatarAiMountDynamic* NewMount                       ( CPF_Parm )
// unsigned long                  bForceGenerate                 ( CPF_OptionalParm | CPF_Parm )

void UNowMountManager::AddToManager ( class ANowAtlasAvatarAiMountDynamic* NewMount, unsigned long bForceGenerate )
{
	static UFunction* pFnAddToManager = NULL;

	if ( ! pFnAddToManager )
		pFnAddToManager = (UFunction*) UObject::GObjObjects()->Data[ 56662 ];

	UNowMountManager_execAddToManager_Parms AddToManager_Parms;
	AddToManager_Parms.NewMount = NewMount;
	AddToManager_Parms.bForceGenerate = bForceGenerate;

	this->ProcessEvent ( pFnAddToManager, &AddToManager_Parms, NULL );
};

// Function NowGame.NowMountManager.SetDetailLevel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewLevel                       ( CPF_Parm )

void UNowMountManager::eventSetDetailLevel ( int NewLevel )
{
	static UFunction* pFnSetDetailLevel = NULL;

	if ( ! pFnSetDetailLevel )
		pFnSetDetailLevel = (UFunction*) UObject::GObjObjects()->Data[ 56660 ];

	UNowMountManager_eventSetDetailLevel_Parms SetDetailLevel_Parms;
	SetDetailLevel_Parms.NewLevel = NewLevel;

	this->ProcessEvent ( pFnSetDetailLevel, &SetDetailLevel_Parms, NULL );
};

// Function NowGame.NowMountManager.UpdateDetailLevel
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAiMountDynamic* Mount                          ( CPF_Parm )
// int                            NewLevel                       ( CPF_Parm )

void UNowMountManager::UpdateDetailLevel ( class ANowAtlasAvatarAiMountDynamic* Mount, int NewLevel )
{
	static UFunction* pFnUpdateDetailLevel = NULL;

	if ( ! pFnUpdateDetailLevel )
		pFnUpdateDetailLevel = (UFunction*) UObject::GObjObjects()->Data[ 56657 ];

	UNowMountManager_execUpdateDetailLevel_Parms UpdateDetailLevel_Parms;
	UpdateDetailLevel_Parms.Mount = Mount;
	UpdateDetailLevel_Parms.NewLevel = NewLevel;

	this->ProcessEvent ( pFnUpdateDetailLevel, &UpdateDetailLevel_Parms, NULL );
};

// Function NowGame.NowMountManager.InitManager
// [0x00020002] 
// Parameters infos:

void UNowMountManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = (UFunction*) UObject::GObjObjects()->Data[ 56656 ];

	UNowMountManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.NowMountManager.GetIniInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowMountManager::GetIniInfo ( )
{
	static UFunction* pFnGetIniInfo = NULL;

	if ( ! pFnGetIniInfo )
		pFnGetIniInfo = (UFunction*) UObject::GObjObjects()->Data[ 56655 ];

	UNowMountManager_execGetIniInfo_Parms GetIniInfo_Parms;

	pFnGetIniInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIniInfo, &GetIniInfo_Parms, NULL );

	pFnGetIniInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowMusicManager.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UNowMusicManager::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 56710 ];

	UNowMusicManager_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowMusicManager.PlayNextTrack
// [0x00020002] 
// Parameters infos:

void UNowMusicManager::PlayNextTrack ( )
{
	static UFunction* pFnPlayNextTrack = NULL;

	if ( ! pFnPlayNextTrack )
		pFnPlayNextTrack = (UFunction*) UObject::GObjObjects()->Data[ 56709 ];

	UNowMusicManager_execPlayNextTrack_Parms PlayNextTrack_Parms;

	this->ProcessEvent ( pFnPlayNextTrack, &PlayNextTrack_Parms, NULL );
};

// Function NowGame.NowMusicManager.StopTrack
// [0x00020002] 
// Parameters infos:

void UNowMusicManager::StopTrack ( )
{
	static UFunction* pFnStopTrack = NULL;

	if ( ! pFnStopTrack )
		pFnStopTrack = (UFunction*) UObject::GObjObjects()->Data[ 56708 ];

	UNowMusicManager_execStopTrack_Parms StopTrack_Parms;

	this->ProcessEvent ( pFnStopTrack, &StopTrack_Parms, NULL );
};

// Function NowGame.NowMusicManager.PlayTrack
// [0x00020002] 
// Parameters infos:
// int                            WhatTrack                      ( CPF_Parm )

void UNowMusicManager::PlayTrack ( int WhatTrack )
{
	static UFunction* pFnPlayTrack = NULL;

	if ( ! pFnPlayTrack )
		pFnPlayTrack = (UFunction*) UObject::GObjObjects()->Data[ 56706 ];

	UNowMusicManager_execPlayTrack_Parms PlayTrack_Parms;
	PlayTrack_Parms.WhatTrack = WhatTrack;

	this->ProcessEvent ( pFnPlayTrack, &PlayTrack_Parms, NULL );
};

// Function NowGame.NowMusicManager.UpdateVolume
// [0x00020002] 
// Parameters infos:

void UNowMusicManager::UpdateVolume ( )
{
	static UFunction* pFnUpdateVolume = NULL;

	if ( ! pFnUpdateVolume )
		pFnUpdateVolume = (UFunction*) UObject::GObjObjects()->Data[ 56705 ];

	UNowMusicManager_execUpdateVolume_Parms UpdateVolume_Parms;

	this->ProcessEvent ( pFnUpdateVolume, &UpdateVolume_Parms, NULL );
};

// Function NowGame.NowMusicManager.InitManager
// [0x00020002] 
// Parameters infos:

void UNowMusicManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = (UFunction*) UObject::GObjObjects()->Data[ 56702 ];

	UNowMusicManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.NowMusicManager.SetSoundCueB
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USoundCue*               New                            ( CPF_Parm )

void UNowMusicManager::SetSoundCueB ( class USoundCue* New )
{
	static UFunction* pFnSetSoundCueB = NULL;

	if ( ! pFnSetSoundCueB )
		pFnSetSoundCueB = (UFunction*) UObject::GObjObjects()->Data[ 56700 ];

	UNowMusicManager_execSetSoundCueB_Parms SetSoundCueB_Parms;
	SetSoundCueB_Parms.New = New;

	pFnSetSoundCueB->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSoundCueB, &SetSoundCueB_Parms, NULL );

	pFnSetSoundCueB->FunctionFlags |= 0x400;
};

// Function NowGame.NowMusicManager.SetSoundCueA
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USoundCue*               New                            ( CPF_Parm )

void UNowMusicManager::SetSoundCueA ( class USoundCue* New )
{
	static UFunction* pFnSetSoundCueA = NULL;

	if ( ! pFnSetSoundCueA )
		pFnSetSoundCueA = (UFunction*) UObject::GObjObjects()->Data[ 56698 ];

	UNowMusicManager_execSetSoundCueA_Parms SetSoundCueA_Parms;
	SetSoundCueA_Parms.New = New;

	pFnSetSoundCueA->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSoundCueA, &SetSoundCueA_Parms, NULL );

	pFnSetSoundCueA->FunctionFlags |= 0x400;
};

// Function NowGame.NowPathNodes.CalcArrowScale
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowPathNodes::eventCalcArrowScale ( )
{
	static UFunction* pFnCalcArrowScale = NULL;

	if ( ! pFnCalcArrowScale )
		pFnCalcArrowScale = (UFunction*) UObject::GObjObjects()->Data[ 56724 ];

	ANowPathNodes_eventCalcArrowScale_Parms CalcArrowScale_Parms;

	this->ProcessEvent ( pFnCalcArrowScale, &CalcArrowScale_Parms, NULL );

	return CalcArrowScale_Parms.ReturnValue;
};

// Function NowGame.NowPathNodes.CalcRot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator ANowPathNodes::eventCalcRot ( )
{
	static UFunction* pFnCalcRot = NULL;

	if ( ! pFnCalcRot )
		pFnCalcRot = (UFunction*) UObject::GObjObjects()->Data[ 56722 ];

	ANowPathNodes_eventCalcRot_Parms CalcRot_Parms;

	this->ProcessEvent ( pFnCalcRot, &CalcRot_Parms, NULL );

	return CalcRot_Parms.ReturnValue;
};

// Function NowGame.NowPathNodes.UpdateHelpers
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPathNodes::UpdateHelpers ( )
{
	static UFunction* pFnUpdateHelpers = NULL;

	if ( ! pFnUpdateHelpers )
		pFnUpdateHelpers = (UFunction*) UObject::GObjObjects()->Data[ 56721 ];

	ANowPathNodes_execUpdateHelpers_Parms UpdateHelpers_Parms;

	pFnUpdateHelpers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateHelpers, &UpdateHelpers_Parms, NULL );

	pFnUpdateHelpers->FunctionFlags |= 0x400;
};

// Function NowGame.NowPathNodes.ShouldBeHiddenBySHOW_NavigationNodes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPathNodes::ShouldBeHiddenBySHOW_NavigationNodes ( )
{
	static UFunction* pFnShouldBeHiddenBySHOW_NavigationNodes = NULL;

	if ( ! pFnShouldBeHiddenBySHOW_NavigationNodes )
		pFnShouldBeHiddenBySHOW_NavigationNodes = (UFunction*) UObject::GObjObjects()->Data[ 56719 ];

	ANowPathNodes_execShouldBeHiddenBySHOW_NavigationNodes_Parms ShouldBeHiddenBySHOW_NavigationNodes_Parms;

	pFnShouldBeHiddenBySHOW_NavigationNodes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldBeHiddenBySHOW_NavigationNodes, &ShouldBeHiddenBySHOW_NavigationNodes_Parms, NULL );

	pFnShouldBeHiddenBySHOW_NavigationNodes->FunctionFlags |= 0x400;

	return ShouldBeHiddenBySHOW_NavigationNodes_Parms.ReturnValue;
};

// Function NowGame.NowPawn.PanicMoveToGround
// [0x00820002] 
// Parameters infos:

void ANowPawn::PanicMoveToGround ( )
{
	static UFunction* pFnPanicMoveToGround = NULL;

	if ( ! pFnPanicMoveToGround )
		pFnPanicMoveToGround = (UFunction*) UObject::GObjObjects()->Data[ 57401 ];

	ANowPawn_execPanicMoveToGround_Parms PanicMoveToGround_Parms;

	this->ProcessEvent ( pFnPanicMoveToGround, &PanicMoveToGround_Parms, NULL );
};

// Function NowGame.NowPawn.OutsideWorldBounds
// [0x00020922] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventOutsideWorldBounds ( )
{
	static UFunction* pFnOutsideWorldBounds = NULL;

	if ( ! pFnOutsideWorldBounds )
		pFnOutsideWorldBounds = (UFunction*) UObject::GObjObjects()->Data[ 57400 ];

	ANowPawn_eventOutsideWorldBounds_Parms OutsideWorldBounds_Parms;

	this->ProcessEvent ( pFnOutsideWorldBounds, &OutsideWorldBounds_Parms, NULL );
};

// Function NowGame.NowPawn.FellOutOfWorld
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UClass*                  dmgType                        ( CPF_Parm )

void ANowPawn::eventFellOutOfWorld ( class UClass* dmgType )
{
	static UFunction* pFnFellOutOfWorld = NULL;

	if ( ! pFnFellOutOfWorld )
		pFnFellOutOfWorld = (UFunction*) UObject::GObjObjects()->Data[ 57398 ];

	ANowPawn_eventFellOutOfWorld_Parms FellOutOfWorld_Parms;
	FellOutOfWorld_Parms.dmgType = dmgType;

	this->ProcessEvent ( pFnFellOutOfWorld, &FellOutOfWorld_Parms, NULL );
};

// Function NowGame.NowPawn.FindGoodSpot
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 StartLoc                       ( CPF_Parm )
// int                            iter                           ( CPF_Parm )

void ANowPawn::eventFindGoodSpot ( struct FVector StartLoc, int iter )
{
	static UFunction* pFnFindGoodSpot = NULL;

	if ( ! pFnFindGoodSpot )
		pFnFindGoodSpot = (UFunction*) UObject::GObjObjects()->Data[ 57388 ];

	ANowPawn_eventFindGoodSpot_Parms FindGoodSpot_Parms;
	memcpy ( &FindGoodSpot_Parms.StartLoc, &StartLoc, 0xC );
	FindGoodSpot_Parms.iter = iter;

	this->ProcessEvent ( pFnFindGoodSpot, &FindGoodSpot_Parms, NULL );
};

// Function NowGame.NowPawn.HideMeshes
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bHide                          ( CPF_Parm )

void ANowPawn::eventHideMeshes ( unsigned long bHide )
{
	static UFunction* pFnHideMeshes = NULL;

	if ( ! pFnHideMeshes )
		pFnHideMeshes = (UFunction*) UObject::GObjObjects()->Data[ 57386 ];

	ANowPawn_eventHideMeshes_Parms HideMeshes_Parms;
	HideMeshes_Parms.bHide = bHide;

	this->ProcessEvent ( pFnHideMeshes, &HideMeshes_Parms, NULL );
};

// Function NowGame.NowPawn.GetHeight
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPawn::GetHeight ( )
{
	static UFunction* pFnGetHeight = NULL;

	if ( ! pFnGetHeight )
		pFnGetHeight = (UFunction*) UObject::GObjObjects()->Data[ 57384 ];

	ANowPawn_execGetHeight_Parms GetHeight_Parms;

	this->ProcessEvent ( pFnGetHeight, &GetHeight_Parms, NULL );

	return GetHeight_Parms.ReturnValue;
};

// Function NowGame.NowPawn.ClientEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  pSourceActor                   ( CPF_Parm )
// int                            eType                          ( CPF_Parm )
// float                          fForce                         ( CPF_Parm )

void ANowPawn::eventClientEffect ( class AActor* pSourceActor, int eType, float fForce )
{
	static UFunction* pFnClientEffect = NULL;

	if ( ! pFnClientEffect )
		pFnClientEffect = (UFunction*) UObject::GObjObjects()->Data[ 57379 ];

	ANowPawn_eventClientEffect_Parms ClientEffect_Parms;
	ClientEffect_Parms.pSourceActor = pSourceActor;
	ClientEffect_Parms.eType = eType;
	ClientEffect_Parms.fForce = fForce;

	this->ProcessEvent ( pFnClientEffect, &ClientEffect_Parms, NULL );
};

// Function NowGame.NowPawn.AnimEffectTarget
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void ANowPawn::eventAnimEffectTarget ( class AActor* Target )
{
	static UFunction* pFnAnimEffectTarget = NULL;

	if ( ! pFnAnimEffectTarget )
		pFnAnimEffectTarget = (UFunction*) UObject::GObjObjects()->Data[ 57377 ];

	ANowPawn_eventAnimEffectTarget_Parms AnimEffectTarget_Parms;
	AnimEffectTarget_Parms.Target = Target;

	this->ProcessEvent ( pFnAnimEffectTarget, &AnimEffectTarget_Parms, NULL );
};

// Function NowGame.NowPawn.AnimEffectVector
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FVector                 Loc                            ( CPF_Parm )

void ANowPawn::eventAnimEffectVector ( struct FVector Loc )
{
	static UFunction* pFnAnimEffectVector = NULL;

	if ( ! pFnAnimEffectVector )
		pFnAnimEffectVector = (UFunction*) UObject::GObjObjects()->Data[ 57375 ];

	ANowPawn_eventAnimEffectVector_Parms AnimEffectVector_Parms;
	memcpy ( &AnimEffectVector_Parms.Loc, &Loc, 0xC );

	this->ProcessEvent ( pFnAnimEffectVector, &AnimEffectVector_Parms, NULL );
};

// Function NowGame.NowPawn.RemoveAllCharEffects
// [0x00020002] 
// Parameters infos:

void ANowPawn::RemoveAllCharEffects ( )
{
	static UFunction* pFnRemoveAllCharEffects = NULL;

	if ( ! pFnRemoveAllCharEffects )
		pFnRemoveAllCharEffects = (UFunction*) UObject::GObjObjects()->Data[ 57373 ];

	ANowPawn_execRemoveAllCharEffects_Parms RemoveAllCharEffects_Parms;

	this->ProcessEvent ( pFnRemoveAllCharEffects, &RemoveAllCharEffects_Parms, NULL );
};

// Function NowGame.NowPawn.InitHero
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            iHeroType                      ( CPF_Parm )

void ANowPawn::eventInitHero ( int iHeroType )
{
	static UFunction* pFnInitHero = NULL;

	if ( ! pFnInitHero )
		pFnInitHero = (UFunction*) UObject::GObjObjects()->Data[ 57367 ];

	ANowPawn_eventInitHero_Parms InitHero_Parms;
	InitHero_Parms.iHeroType = iHeroType;

	this->ProcessEvent ( pFnInitHero, &InitHero_Parms, NULL );
};

// Function NowGame.NowPawn.HeroOverrideMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iHeroType                      ( CPF_Parm )

bool ANowPawn::eventHeroOverrideMesh ( int iHeroType )
{
	static UFunction* pFnHeroOverrideMesh = NULL;

	if ( ! pFnHeroOverrideMesh )
		pFnHeroOverrideMesh = (UFunction*) UObject::GObjObjects()->Data[ 57364 ];

	ANowPawn_eventHeroOverrideMesh_Parms HeroOverrideMesh_Parms;
	HeroOverrideMesh_Parms.iHeroType = iHeroType;

	this->ProcessEvent ( pFnHeroOverrideMesh, &HeroOverrideMesh_Parms, NULL );

	return HeroOverrideMesh_Parms.ReturnValue;
};

// Function NowGame.NowPawn.SendNPCInterest
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          Range                          ( CPF_Parm )

void ANowPawn::eventSendNPCInterest ( float Range )
{
	static UFunction* pFnSendNPCInterest = NULL;

	if ( ! pFnSendNPCInterest )
		pFnSendNPCInterest = (UFunction*) UObject::GObjObjects()->Data[ 57361 ];

	ANowPawn_eventSendNPCInterest_Parms SendNPCInterest_Parms;
	SendNPCInterest_Parms.Range = Range;

	this->ProcessEvent ( pFnSendNPCInterest, &SendNPCInterest_Parms, NULL );
};

// Function NowGame.NowPawn.EquipmentMount1
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventEquipmentMount1 ( )
{
	static UFunction* pFnEquipmentMount1 = NULL;

	if ( ! pFnEquipmentMount1 )
		pFnEquipmentMount1 = (UFunction*) UObject::GObjObjects()->Data[ 57360 ];

	ANowPawn_eventEquipmentMount1_Parms EquipmentMount1_Parms;

	this->ProcessEvent ( pFnEquipmentMount1, &EquipmentMount1_Parms, NULL );
};

// Function NowGame.NowPawn.EquipmentMount2
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventEquipmentMount2 ( )
{
	static UFunction* pFnEquipmentMount2 = NULL;

	if ( ! pFnEquipmentMount2 )
		pFnEquipmentMount2 = (UFunction*) UObject::GObjObjects()->Data[ 57359 ];

	ANowPawn_eventEquipmentMount2_Parms EquipmentMount2_Parms;

	this->ProcessEvent ( pFnEquipmentMount2, &EquipmentMount2_Parms, NULL );
};

// Function NowGame.NowPawn.EquipmentSaddle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventEquipmentSaddle ( )
{
	static UFunction* pFnEquipmentSaddle = NULL;

	if ( ! pFnEquipmentSaddle )
		pFnEquipmentSaddle = (UFunction*) UObject::GObjObjects()->Data[ 57358 ];

	ANowPawn_eventEquipmentSaddle_Parms EquipmentSaddle_Parms;

	this->ProcessEvent ( pFnEquipmentSaddle, &EquipmentSaddle_Parms, NULL );
};

// Function NowGame.NowPawn.EquipmentIdle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventEquipmentIdle ( )
{
	static UFunction* pFnEquipmentIdle = NULL;

	if ( ! pFnEquipmentIdle )
		pFnEquipmentIdle = (UFunction*) UObject::GObjObjects()->Data[ 57357 ];

	ANowPawn_eventEquipmentIdle_Parms EquipmentIdle_Parms;

	this->ProcessEvent ( pFnEquipmentIdle, &EquipmentIdle_Parms, NULL );
};

// Function NowGame.NowPawn.EquipmentMove
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventEquipmentMove ( )
{
	static UFunction* pFnEquipmentMove = NULL;

	if ( ! pFnEquipmentMove )
		pFnEquipmentMove = (UFunction*) UObject::GObjObjects()->Data[ 57356 ];

	ANowPawn_eventEquipmentMove_Parms EquipmentMove_Parms;

	this->ProcessEvent ( pFnEquipmentMove, &EquipmentMove_Parms, NULL );
};

// Function NowGame.NowPawn.TestPos
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 ExitPos                        ( CPF_Parm )
// class ANowAtlasAvatarSkM*      Other                          ( CPF_Parm )

bool ANowPawn::TestPos ( struct FVector ExitPos, class ANowAtlasAvatarSkM* Other )
{
	static UFunction* pFnTestPos = NULL;

	if ( ! pFnTestPos )
		pFnTestPos = (UFunction*) UObject::GObjObjects()->Data[ 57345 ];

	ANowPawn_execTestPos_Parms TestPos_Parms;
	memcpy ( &TestPos_Parms.ExitPos, &ExitPos, 0xC );
	TestPos_Parms.Other = Other;

	this->ProcessEvent ( pFnTestPos, &TestPos_Parms, NULL );

	return TestPos_Parms.ReturnValue;
};

// Function NowGame.NowPawn.Bump
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowPawn::eventBump ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitNormal )
{
	static UFunction* pFnBump = NULL;

	if ( ! pFnBump )
		pFnBump = (UFunction*) UObject::GObjObjects()->Data[ 57341 ];

	ANowPawn_eventBump_Parms Bump_Parms;
	Bump_Parms.Other = Other;
	Bump_Parms.OtherComp = OtherComp;
	memcpy ( &Bump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnBump, &Bump_Parms, NULL );
};

// Function NowGame.NowPawn.FindStuckSpot
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bLonger                        ( CPF_Parm )

struct FVector ANowPawn::FindStuckSpot ( unsigned long bLonger )
{
	static UFunction* pFnFindStuckSpot = NULL;

	if ( ! pFnFindStuckSpot )
		pFnFindStuckSpot = (UFunction*) UObject::GObjObjects()->Data[ 57328 ];

	ANowPawn_execFindStuckSpot_Parms FindStuckSpot_Parms;
	FindStuckSpot_Parms.bLonger = bLonger;

	this->ProcessEvent ( pFnFindStuckSpot, &FindStuckSpot_Parms, NULL );

	return FindStuckSpot_Parms.ReturnValue;
};

// Function NowGame.NowPawn.UnStuckMe
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventUnStuckMe ( )
{
	static UFunction* pFnUnStuckMe = NULL;

	if ( ! pFnUnStuckMe )
		pFnUnStuckMe = (UFunction*) UObject::GObjObjects()->Data[ 57326 ];

	ANowPawn_eventUnStuckMe_Parms UnStuckMe_Parms;

	this->ProcessEvent ( pFnUnStuckMe, &UnStuckMe_Parms, NULL );
};

// Function NowGame.NowPawn.testForHouses
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 newLocaltion                   ( CPF_Parm | CPF_OutParm )

bool ANowPawn::testForHouses ( struct FVector* newLocaltion )
{
	static UFunction* pFntestForHouses = NULL;

	if ( ! pFntestForHouses )
		pFntestForHouses = (UFunction*) UObject::GObjObjects()->Data[ 57319 ];

	ANowPawn_exectestForHouses_Parms testForHouses_Parms;

	this->ProcessEvent ( pFntestForHouses, &testForHouses_Parms, NULL );

	if ( newLocaltion )
		memcpy ( newLocaltion, &testForHouses_Parms.newLocaltion, 0xC );

	return testForHouses_Parms.ReturnValue;
};

// Function NowGame.NowPawn.DoJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bUpdating                      ( CPF_Parm )

bool ANowPawn::DoJump ( unsigned long bUpdating )
{
	static UFunction* pFnDoJump = NULL;

	if ( ! pFnDoJump )
		pFnDoJump = (UFunction*) UObject::GObjObjects()->Data[ 57314 ];

	ANowPawn_execDoJump_Parms DoJump_Parms;
	DoJump_Parms.bUpdating = bUpdating;

	this->ProcessEvent ( pFnDoJump, &DoJump_Parms, NULL );

	return DoJump_Parms.ReturnValue;
};

// Function NowGame.NowPawn.BaseChange
// [0x00020822] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventBaseChange ( )
{
	static UFunction* pFnBaseChange = NULL;

	if ( ! pFnBaseChange )
		pFnBaseChange = (UFunction*) UObject::GObjObjects()->Data[ 57311 ];

	ANowPawn_eventBaseChange_Parms BaseChange_Parms;

	this->ProcessEvent ( pFnBaseChange, &BaseChange_Parms, NULL );
};

// Function NowGame.NowPawn.WalkOff
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPawn::WalkOff ( )
{
	static UFunction* pFnWalkOff = NULL;

	if ( ! pFnWalkOff )
		pFnWalkOff = (UFunction*) UObject::GObjObjects()->Data[ 57310 ];

	ANowPawn_execWalkOff_Parms WalkOff_Parms;

	this->ProcessEvent ( pFnWalkOff, &WalkOff_Parms, NULL );
};

// Function NowGame.NowPawn.WalkOn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPawn::WalkOn ( )
{
	static UFunction* pFnWalkOn = NULL;

	if ( ! pFnWalkOn )
		pFnWalkOn = (UFunction*) UObject::GObjObjects()->Data[ 57309 ];

	ANowPawn_execWalkOn_Parms WalkOn_Parms;

	this->ProcessEvent ( pFnWalkOn, &WalkOn_Parms, NULL );
};

// Function NowGame.NowPawn.SendFallingDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInWater                       ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSendFallingDamage ( unsigned long bInWater )
{
	static UFunction* pFnSendFallingDamage = NULL;

	if ( ! pFnSendFallingDamage )
		pFnSendFallingDamage = (UFunction*) UObject::GObjObjects()->Data[ 57305 ];

	ANowPawn_eventSendFallingDamage_Parms SendFallingDamage_Parms;
	SendFallingDamage_Parms.bInWater = bInWater;

	this->ProcessEvent ( pFnSendFallingDamage, &SendFallingDamage_Parms, NULL );
};

// Function NowGame.NowPawn.ResetIgnoreFallDamage
// [0x00020002] 
// Parameters infos:

void ANowPawn::ResetIgnoreFallDamage ( )
{
	static UFunction* pFnResetIgnoreFallDamage = NULL;

	if ( ! pFnResetIgnoreFallDamage )
		pFnResetIgnoreFallDamage = (UFunction*) UObject::GObjObjects()->Data[ 57304 ];

	ANowPawn_execResetIgnoreFallDamage_Parms ResetIgnoreFallDamage_Parms;

	this->ProcessEvent ( pFnResetIgnoreFallDamage, &ResetIgnoreFallDamage_Parms, NULL );
};

// Function NowGame.NowPawn.TempIgnoreFallDamage
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventTempIgnoreFallDamage ( )
{
	static UFunction* pFnTempIgnoreFallDamage = NULL;

	if ( ! pFnTempIgnoreFallDamage )
		pFnTempIgnoreFallDamage = (UFunction*) UObject::GObjObjects()->Data[ 57303 ];

	ANowPawn_eventTempIgnoreFallDamage_Parms TempIgnoreFallDamage_Parms;

	this->ProcessEvent ( pFnTempIgnoreFallDamage, &TempIgnoreFallDamage_Parms, NULL );
};

// Function NowGame.NowPawn.GetGFXHud
// [0x00020002] 
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* ANowPawn::GetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = (UFunction*) UObject::GObjObjects()->Data[ 57301 ];

	ANowPawn_execGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetANowPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowPawn::eventGetANowPC ( )
{
	static UFunction* pFnGetANowPC = NULL;

	if ( ! pFnGetANowPC )
		pFnGetANowPC = (UFunction*) UObject::GObjObjects()->Data[ 57299 ];

	ANowPawn_eventGetANowPC_Parms GetANowPC_Parms;

	this->ProcessEvent ( pFnGetANowPC, &GetANowPC_Parms, NULL );

	return GetANowPC_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetNowPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowPawn::eventGetNowPC ( )
{
	static UFunction* pFnGetNowPC = NULL;

	if ( ! pFnGetNowPC )
		pFnGetNowPC = (UFunction*) UObject::GObjObjects()->Data[ 48336 ];

	ANowPawn_eventGetNowPC_Parms GetNowPC_Parms;

	this->ProcessEvent ( pFnGetNowPC, &GetNowPC_Parms, NULL );

	return GetNowPC_Parms.ReturnValue;
};

// Function NowGame.NowPawn.CheckForDecalSpawn
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DmgTaken                       ( CPF_Parm )

void ANowPawn::eventCheckForDecalSpawn ( float DmgTaken )
{
	static UFunction* pFnCheckForDecalSpawn = NULL;

	if ( ! pFnCheckForDecalSpawn )
		pFnCheckForDecalSpawn = (UFunction*) UObject::GObjObjects()->Data[ 57290 ];

	ANowPawn_eventCheckForDecalSpawn_Parms CheckForDecalSpawn_Parms;
	CheckForDecalSpawn_Parms.DmgTaken = DmgTaken;

	this->ProcessEvent ( pFnCheckForDecalSpawn, &CheckForDecalSpawn_Parms, NULL );
};

// Function NowGame.NowPawn.RemoveBloodDecals
// [0x00020002] 
// Parameters infos:

void ANowPawn::RemoveBloodDecals ( )
{
	static UFunction* pFnRemoveBloodDecals = NULL;

	if ( ! pFnRemoveBloodDecals )
		pFnRemoveBloodDecals = (UFunction*) UObject::GObjObjects()->Data[ 57288 ];

	ANowPawn_execRemoveBloodDecals_Parms RemoveBloodDecals_Parms;

	this->ProcessEvent ( pFnRemoveBloodDecals, &RemoveBloodDecals_Parms, NULL );
};

// Function NowGame.NowPawn.AddBloodDecals
// [0x00024002] 
// Parameters infos:
// float                          AddValue                       ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::AddBloodDecals ( float AddValue )
{
	static UFunction* pFnAddBloodDecals = NULL;

	if ( ! pFnAddBloodDecals )
		pFnAddBloodDecals = (UFunction*) UObject::GObjObjects()->Data[ 57284 ];

	ANowPawn_execAddBloodDecals_Parms AddBloodDecals_Parms;
	AddBloodDecals_Parms.AddValue = AddValue;

	this->ProcessEvent ( pFnAddBloodDecals, &AddBloodDecals_Parms, NULL );
};

// Function NowGame.NowPawn.AreaBloodDecals
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventAreaBloodDecals ( )
{
	static UFunction* pFnAreaBloodDecals = NULL;

	if ( ! pFnAreaBloodDecals )
		pFnAreaBloodDecals = (UFunction*) UObject::GObjObjects()->Data[ 57282 ];

	ANowPawn_eventAreaBloodDecals_Parms AreaBloodDecals_Parms;

	this->ProcessEvent ( pFnAreaBloodDecals, &AreaBloodDecals_Parms, NULL );
};

// Function NowGame.NowPawn.SetMercyPosition
// [0x00820002] 
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )

void ANowPawn::SetMercyPosition ( class AActor* WhatActor )
{
	static UFunction* pFnSetMercyPosition = NULL;

	if ( ! pFnSetMercyPosition )
		pFnSetMercyPosition = (UFunction*) UObject::GObjObjects()->Data[ 57274 ];

	ANowPawn_execSetMercyPosition_Parms SetMercyPosition_Parms;
	SetMercyPosition_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnSetMercyPosition, &SetMercyPosition_Parms, NULL );
};

// Function NowGame.NowPawn.GetCurrentMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )

class USkeletalMeshComponent* ANowPawn::eventGetCurrentMesh ( )
{
	static UFunction* pFnGetCurrentMesh = NULL;

	if ( ! pFnGetCurrentMesh )
		pFnGetCurrentMesh = (UFunction*) UObject::GObjObjects()->Data[ 47245 ];

	ANowPawn_eventGetCurrentMesh_Parms GetCurrentMesh_Parms;

	this->ProcessEvent ( pFnGetCurrentMesh, &GetCurrentMesh_Parms, NULL );

	return GetCurrentMesh_Parms.ReturnValue;
};

// Function NowGame.NowPawn.TriggerSocketChange
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventTriggerSocketChange ( )
{
	static UFunction* pFnTriggerSocketChange = NULL;

	if ( ! pFnTriggerSocketChange )
		pFnTriggerSocketChange = (UFunction*) UObject::GObjObjects()->Data[ 57273 ];

	ANowPawn_eventTriggerSocketChange_Parms TriggerSocketChange_Parms;

	this->ProcessEvent ( pFnTriggerSocketChange, &TriggerSocketChange_Parms, NULL );
};

// Function NowGame.NowPawn.TriggerMountSocketChange
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventTriggerMountSocketChange ( )
{
	static UFunction* pFnTriggerMountSocketChange = NULL;

	if ( ! pFnTriggerMountSocketChange )
		pFnTriggerMountSocketChange = (UFunction*) UObject::GObjObjects()->Data[ 57272 ];

	ANowPawn_eventTriggerMountSocketChange_Parms TriggerMountSocketChange_Parms;

	this->ProcessEvent ( pFnTriggerMountSocketChange, &TriggerMountSocketChange_Parms, NULL );
};

// Function NowGame.NowPawn.AnimEnterMode
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  Enter                          ( CPF_Parm )
// unsigned long                  bIgnoreAnims                   ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventAnimEnterMode ( unsigned long Enter, unsigned long bIgnoreAnims )
{
	static UFunction* pFnAnimEnterMode = NULL;

	if ( ! pFnAnimEnterMode )
		pFnAnimEnterMode = (UFunction*) UObject::GObjObjects()->Data[ 57268 ];

	ANowPawn_eventAnimEnterMode_Parms AnimEnterMode_Parms;
	AnimEnterMode_Parms.Enter = Enter;
	AnimEnterMode_Parms.bIgnoreAnims = bIgnoreAnims;

	this->ProcessEvent ( pFnAnimEnterMode, &AnimEnterMode_Parms, NULL );
};

// Function NowGame.NowPawn.AnimEnterBlockingMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  Enter                          ( CPF_Parm )

void ANowPawn::eventAnimEnterBlockingMode ( unsigned long Enter )
{
	static UFunction* pFnAnimEnterBlockingMode = NULL;

	if ( ! pFnAnimEnterBlockingMode )
		pFnAnimEnterBlockingMode = (UFunction*) UObject::GObjObjects()->Data[ 57265 ];

	ANowPawn_eventAnimEnterBlockingMode_Parms AnimEnterBlockingMode_Parms;
	AnimEnterBlockingMode_Parms.Enter = Enter;

	this->ProcessEvent ( pFnAnimEnterBlockingMode, &AnimEnterBlockingMode_Parms, NULL );
};

// Function NowGame.NowPawn.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 57264 ];

	ANowPawn_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowPawn.GetStatManager
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UStatManager*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UStatManager* ANowPawn::eventGetStatManager ( )
{
	static UFunction* pFnGetStatManager = NULL;

	if ( ! pFnGetStatManager )
		pFnGetStatManager = (UFunction*) UObject::GObjObjects()->Data[ 46064 ];

	ANowPawn_eventGetStatManager_Parms GetStatManager_Parms;

	this->ProcessEvent ( pFnGetStatManager, &GetStatManager_Parms, NULL );

	return GetStatManager_Parms.ReturnValue;
};

// Function NowGame.NowPawn.SetSprint
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDoSprint                      ( CPF_Parm )

void ANowPawn::SetSprint ( unsigned long bDoSprint )
{
	static UFunction* pFnSetSprint = NULL;

	if ( ! pFnSetSprint )
		pFnSetSprint = (UFunction*) UObject::GObjObjects()->Data[ 57260 ];

	ANowPawn_execSetSprint_Parms SetSprint_Parms;
	SetSprint_Parms.bDoSprint = bDoSprint;

	this->ProcessEvent ( pFnSetSprint, &SetSprint_Parms, NULL );
};

// Function NowGame.NowPawn.RemoveSpellEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventRemoveSpellEffect ( )
{
	static UFunction* pFnRemoveSpellEffect = NULL;

	if ( ! pFnRemoveSpellEffect )
		pFnRemoveSpellEffect = (UFunction*) UObject::GObjObjects()->Data[ 57258 ];

	ANowPawn_eventRemoveSpellEffect_Parms RemoveSpellEffect_Parms;

	this->ProcessEvent ( pFnRemoveSpellEffect, &RemoveSpellEffect_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnReleaseSpellEffect
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  selfTarget                     ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSpawnReleaseSpellEffect ( unsigned long selfTarget )
{
	static UFunction* pFnSpawnReleaseSpellEffect = NULL;

	if ( ! pFnSpawnReleaseSpellEffect )
		pFnSpawnReleaseSpellEffect = (UFunction*) UObject::GObjObjects()->Data[ 57256 ];

	ANowPawn_eventSpawnReleaseSpellEffect_Parms SpawnReleaseSpellEffect_Parms;
	SpawnReleaseSpellEffect_Parms.selfTarget = selfTarget;

	this->ProcessEvent ( pFnSpawnReleaseSpellEffect, &SpawnReleaseSpellEffect_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnChargeSpellEffect
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventSpawnChargeSpellEffect ( )
{
	static UFunction* pFnSpawnChargeSpellEffect = NULL;

	if ( ! pFnSpawnChargeSpellEffect )
		pFnSpawnChargeSpellEffect = (UFunction*) UObject::GObjObjects()->Data[ 57255 ];

	ANowPawn_eventSpawnChargeSpellEffect_Parms SpawnChargeSpellEffect_Parms;

	this->ProcessEvent ( pFnSpawnChargeSpellEffect, &SpawnChargeSpellEffect_Parms, NULL );
};

// Function NowGame.NowPawn.CancelSpells
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventCancelSpells ( )
{
	static UFunction* pFnCancelSpells = NULL;

	if ( ! pFnCancelSpells )
		pFnCancelSpells = (UFunction*) UObject::GObjObjects()->Data[ 57254 ];

	ANowPawn_eventCancelSpells_Parms CancelSpells_Parms;

	this->ProcessEvent ( pFnCancelSpells, &CancelSpells_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnCombatSystems
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSpawnCombatSystems ( unsigned long bForce )
{
	static UFunction* pFnSpawnCombatSystems = NULL;

	if ( ! pFnSpawnCombatSystems )
		pFnSpawnCombatSystems = (UFunction*) UObject::GObjObjects()->Data[ 57252 ];

	ANowPawn_eventSpawnCombatSystems_Parms SpawnCombatSystems_Parms;
	SpawnCombatSystems_Parms.bForce = bForce;

	this->ProcessEvent ( pFnSpawnCombatSystems, &SpawnCombatSystems_Parms, NULL );
};

// Function NowGame.NowPawn.SetRemoteSize
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fSize                          ( CPF_Parm )

void ANowPawn::eventSetRemoteSize ( float fSize )
{
	static UFunction* pFnSetRemoteSize = NULL;

	if ( ! pFnSetRemoteSize )
		pFnSetRemoteSize = (UFunction*) UObject::GObjObjects()->Data[ 57250 ];

	ANowPawn_eventSetRemoteSize_Parms SetRemoteSize_Parms;
	SetRemoteSize_Parms.fSize = fSize;

	this->ProcessEvent ( pFnSetRemoteSize, &SetRemoteSize_Parms, NULL );
};

// Function NowGame.NowPawn.CheckSize
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventCheckSize ( )
{
	static UFunction* pFnCheckSize = NULL;

	if ( ! pFnCheckSize )
		pFnCheckSize = (UFunction*) UObject::GObjObjects()->Data[ 57245 ];

	ANowPawn_eventCheckSize_Parms CheckSize_Parms;

	this->ProcessEvent ( pFnCheckSize, &CheckSize_Parms, NULL );
};

// Function NowGame.NowPawn.ReGainTimer
// [0x00020002] 
// Parameters infos:

void ANowPawn::ReGainTimer ( )
{
	static UFunction* pFnReGainTimer = NULL;

	if ( ! pFnReGainTimer )
		pFnReGainTimer = (UFunction*) UObject::GObjObjects()->Data[ 57234 ];

	ANowPawn_execReGainTimer_Parms ReGainTimer_Parms;

	this->ProcessEvent ( pFnReGainTimer, &ReGainTimer_Parms, NULL );
};

// Function NowGame.NowPawn.MountReGainTimer
// [0x00020002] 
// Parameters infos:

void ANowPawn::MountReGainTimer ( )
{
	static UFunction* pFnMountReGainTimer = NULL;

	if ( ! pFnMountReGainTimer )
		pFnMountReGainTimer = (UFunction*) UObject::GObjObjects()->Data[ 57233 ];

	ANowPawn_execMountReGainTimer_Parms MountReGainTimer_Parms;

	this->ProcessEvent ( pFnMountReGainTimer, &MountReGainTimer_Parms, NULL );
};

// Function NowGame.NowPawn.CannotJumpNow
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::CannotJumpNow ( )
{
	static UFunction* pFnCannotJumpNow = NULL;

	if ( ! pFnCannotJumpNow )
		pFnCannotJumpNow = (UFunction*) UObject::GObjObjects()->Data[ 57230 ];

	ANowPawn_execCannotJumpNow_Parms CannotJumpNow_Parms;

	this->ProcessEvent ( pFnCannotJumpNow, &CannotJumpNow_Parms, NULL );

	return CannotJumpNow_Parms.ReturnValue;
};

// Function NowGame.NowPawn.ModifyStaminaRegWithArmorWeight
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPawn::ModifyStaminaRegWithArmorWeight ( )
{
	static UFunction* pFnModifyStaminaRegWithArmorWeight = NULL;

	if ( ! pFnModifyStaminaRegWithArmorWeight )
		pFnModifyStaminaRegWithArmorWeight = (UFunction*) UObject::GObjObjects()->Data[ 57228 ];

	ANowPawn_execModifyStaminaRegWithArmorWeight_Parms ModifyStaminaRegWithArmorWeight_Parms;

	pFnModifyStaminaRegWithArmorWeight->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnModifyStaminaRegWithArmorWeight, &ModifyStaminaRegWithArmorWeight_Parms, NULL );

	pFnModifyStaminaRegWithArmorWeight->FunctionFlags |= 0x400;

	return ModifyStaminaRegWithArmorWeight_Parms.ReturnValue;
};

// Function NowGame.NowPawn.SetStamina
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          S                              ( CPF_Parm )

void ANowPawn::eventSetStamina ( float S )
{
	static UFunction* pFnSetStamina = NULL;

	if ( ! pFnSetStamina )
		pFnSetStamina = (UFunction*) UObject::GObjObjects()->Data[ 57217 ];

	ANowPawn_eventSetStamina_Parms SetStamina_Parms;
	SetStamina_Parms.S = S;

	this->ProcessEvent ( pFnSetStamina, &SetStamina_Parms, NULL );
};

// Function NowGame.NowPawn.SetMountStamina
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          S                              ( CPF_Parm )

void ANowPawn::eventSetMountStamina ( float S )
{
	static UFunction* pFnSetMountStamina = NULL;

	if ( ! pFnSetMountStamina )
		pFnSetMountStamina = (UFunction*) UObject::GObjObjects()->Data[ 57215 ];

	ANowPawn_eventSetMountStamina_Parms SetMountStamina_Parms;
	SetMountStamina_Parms.S = S;

	this->ProcessEvent ( pFnSetMountStamina, &SetMountStamina_Parms, NULL );
};

// Function NowGame.NowPawn.StaminaTimer
// [0x00020002] 
// Parameters infos:

void ANowPawn::StaminaTimer ( )
{
	static UFunction* pFnStaminaTimer = NULL;

	if ( ! pFnStaminaTimer )
		pFnStaminaTimer = (UFunction*) UObject::GObjObjects()->Data[ 57214 ];

	ANowPawn_execStaminaTimer_Parms StaminaTimer_Parms;

	this->ProcessEvent ( pFnStaminaTimer, &StaminaTimer_Parms, NULL );
};

// Function NowGame.NowPawn.MountStaminaTimer
// [0x00020002] 
// Parameters infos:

void ANowPawn::MountStaminaTimer ( )
{
	static UFunction* pFnMountStaminaTimer = NULL;

	if ( ! pFnMountStaminaTimer )
		pFnMountStaminaTimer = (UFunction*) UObject::GObjObjects()->Data[ 57213 ];

	ANowPawn_execMountStaminaTimer_Parms MountStaminaTimer_Parms;

	this->ProcessEvent ( pFnMountStaminaTimer, &MountStaminaTimer_Parms, NULL );
};

// Function NowGame.NowPawn.FaceRotation
// [0x00020102] 
// Parameters infos:
// struct FRotator                NewRotation                    ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )

void ANowPawn::FaceRotation ( struct FRotator NewRotation, float DeltaTime )
{
	static UFunction* pFnFaceRotation = NULL;

	if ( ! pFnFaceRotation )
		pFnFaceRotation = (UFunction*) UObject::GObjObjects()->Data[ 57210 ];

	ANowPawn_execFaceRotation_Parms FaceRotation_Parms;
	memcpy ( &FaceRotation_Parms.NewRotation, &NewRotation, 0xC );
	FaceRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnFaceRotation, &FaceRotation_Parms, NULL );
};

// Function NowGame.NowPawn.GetDefaultCameraMode
// [0x00020102] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       RequestedBy                    ( CPF_Parm )

struct FName ANowPawn::GetDefaultCameraMode ( class APlayerController* RequestedBy )
{
	static UFunction* pFnGetDefaultCameraMode = NULL;

	if ( ! pFnGetDefaultCameraMode )
		pFnGetDefaultCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 57207 ];

	ANowPawn_execGetDefaultCameraMode_Parms GetDefaultCameraMode_Parms;
	GetDefaultCameraMode_Parms.RequestedBy = RequestedBy;

	this->ProcessEvent ( pFnGetDefaultCameraMode, &GetDefaultCameraMode_Parms, NULL );

	return GetDefaultCameraMode_Parms.ReturnValue;
};

// Function NowGame.NowPawn.CameraLean
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            WhatDir                        ( CPF_Parm )

void ANowPawn::eventCameraLean ( int WhatDir )
{
	static UFunction* pFnCameraLean = NULL;

	if ( ! pFnCameraLean )
		pFnCameraLean = (UFunction*) UObject::GObjObjects()->Data[ 57205 ];

	ANowPawn_eventCameraLean_Parms CameraLean_Parms;
	CameraLean_Parms.WhatDir = WhatDir;

	this->ProcessEvent ( pFnCameraLean, &CameraLean_Parms, NULL );
};

// Function NowGame.NowPawn.PlayHitSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 vPos                           ( CPF_Parm )
// int                            lastHitBoneID                  ( CPF_Parm )

void ANowPawn::eventPlayHitSound ( struct FVector vPos, int lastHitBoneID )
{
	static UFunction* pFnPlayHitSound = NULL;

	if ( ! pFnPlayHitSound )
		pFnPlayHitSound = (UFunction*) UObject::GObjObjects()->Data[ 57200 ];

	ANowPawn_eventPlayHitSound_Parms PlayHitSound_Parms;
	memcpy ( &PlayHitSound_Parms.vPos, &vPos, 0xC );
	PlayHitSound_Parms.lastHitBoneID = lastHitBoneID;

	this->ProcessEvent ( pFnPlayHitSound, &PlayHitSound_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnHitFx
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 LastHitLocation                ( CPF_Parm )
// unsigned long                  ClientFeedBack                 ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 PushBackVector                 ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 AttackerToPlayer               ( CPF_OptionalParm | CPF_Parm )
// int                            HitBoneID                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIgnoreParticles               ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSpawnHitFx ( struct FVector LastHitLocation, unsigned long ClientFeedBack, struct FVector PushBackVector, struct FVector AttackerToPlayer, int HitBoneID, unsigned long bIgnoreParticles )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = (UFunction*) UObject::GObjObjects()->Data[ 57183 ];

	ANowPawn_eventSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.LastHitLocation, &LastHitLocation, 0xC );
	SpawnHitFx_Parms.ClientFeedBack = ClientFeedBack;
	memcpy ( &SpawnHitFx_Parms.PushBackVector, &PushBackVector, 0xC );
	memcpy ( &SpawnHitFx_Parms.AttackerToPlayer, &AttackerToPlayer, 0xC );
	SpawnHitFx_Parms.HitBoneID = HitBoneID;
	SpawnHitFx_Parms.bIgnoreParticles = bIgnoreParticles;

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowPawn.CheckForPerfectBlock
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            HitBoneID                      ( CPF_Parm )

bool ANowPawn::eventCheckForPerfectBlock ( int HitBoneID )
{
	static UFunction* pFnCheckForPerfectBlock = NULL;

	if ( ! pFnCheckForPerfectBlock )
		pFnCheckForPerfectBlock = (UFunction*) UObject::GObjObjects()->Data[ 57178 ];

	ANowPawn_eventCheckForPerfectBlock_Parms CheckForPerfectBlock_Parms;
	CheckForPerfectBlock_Parms.HitBoneID = HitBoneID;

	this->ProcessEvent ( pFnCheckForPerfectBlock, &CheckForPerfectBlock_Parms, NULL );

	return CheckForPerfectBlock_Parms.ReturnValue;
};

// Function NowGame.NowPawn.CheckForShieldBash
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::eventCheckForShieldBash ( )
{
	static UFunction* pFnCheckForShieldBash = NULL;

	if ( ! pFnCheckForShieldBash )
		pFnCheckForShieldBash = (UFunction*) UObject::GObjObjects()->Data[ 57176 ];

	ANowPawn_eventCheckForShieldBash_Parms CheckForShieldBash_Parms;

	this->ProcessEvent ( pFnCheckForShieldBash, &CheckForShieldBash_Parms, NULL );

	return CheckForShieldBash_Parms.ReturnValue;
};

// Function NowGame.NowPawn.FixHeadCam
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventFixHeadCam ( )
{
	static UFunction* pFnFixHeadCam = NULL;

	if ( ! pFnFixHeadCam )
		pFnFixHeadCam = (UFunction*) UObject::GObjObjects()->Data[ 57175 ];

	ANowPawn_eventFixHeadCam_Parms FixHeadCam_Parms;

	this->ProcessEvent ( pFnFixHeadCam, &FixHeadCam_Parms, NULL );
};

// Function NowGame.NowPawn.SetAnimations
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bForceThird                    ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSetAnimations ( unsigned long bForceThird )
{
	static UFunction* pFnSetAnimations = NULL;

	if ( ! pFnSetAnimations )
		pFnSetAnimations = (UFunction*) UObject::GObjObjects()->Data[ 57172 ];

	ANowPawn_eventSetAnimations_Parms SetAnimations_Parms;
	SetAnimations_Parms.bForceThird = bForceThird;

	this->ProcessEvent ( pFnSetAnimations, &SetAnimations_Parms, NULL );
};

// Function NowGame.NowPawn.InitStartAnims
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventInitStartAnims ( )
{
	static UFunction* pFnInitStartAnims = NULL;

	if ( ! pFnInitStartAnims )
		pFnInitStartAnims = (UFunction*) UObject::GObjObjects()->Data[ 57169 ];

	ANowPawn_eventInitStartAnims_Parms InitStartAnims_Parms;

	this->ProcessEvent ( pFnInitStartAnims, &InitStartAnims_Parms, NULL );
};

// Function NowGame.NowPawn.CheckIfLoaded
// [0x00020002] 
// Parameters infos:

void ANowPawn::CheckIfLoaded ( )
{
	static UFunction* pFnCheckIfLoaded = NULL;

	if ( ! pFnCheckIfLoaded )
		pFnCheckIfLoaded = (UFunction*) UObject::GObjObjects()->Data[ 57168 ];

	ANowPawn_execCheckIfLoaded_Parms CheckIfLoaded_Parms;

	this->ProcessEvent ( pFnCheckIfLoaded, &CheckIfLoaded_Parms, NULL );
};

// Function NowGame.NowPawn.FindCoolSpot
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::FindCoolSpot ( )
{
	static UFunction* pFnFindCoolSpot = NULL;

	if ( ! pFnFindCoolSpot )
		pFnFindCoolSpot = (UFunction*) UObject::GObjObjects()->Data[ 57160 ];

	ANowPawn_execFindCoolSpot_Parms FindCoolSpot_Parms;

	this->ProcessEvent ( pFnFindCoolSpot, &FindCoolSpot_Parms, NULL );

	return FindCoolSpot_Parms.ReturnValue;
};

// Function NowGame.NowPawn.FixPositionOnLogin
// [0x00020002] 
// Parameters infos:

void ANowPawn::FixPositionOnLogin ( )
{
	static UFunction* pFnFixPositionOnLogin = NULL;

	if ( ! pFnFixPositionOnLogin )
		pFnFixPositionOnLogin = (UFunction*) UObject::GObjObjects()->Data[ 57159 ];

	ANowPawn_execFixPositionOnLogin_Parms FixPositionOnLogin_Parms;

	this->ProcessEvent ( pFnFixPositionOnLogin, &FixPositionOnLogin_Parms, NULL );
};

// Function NowGame.NowPawn.FallingResetPosition
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPawn::FallingResetPosition ( )
{
	static UFunction* pFnFallingResetPosition = NULL;

	if ( ! pFnFallingResetPosition )
		pFnFallingResetPosition = (UFunction*) UObject::GObjObjects()->Data[ 57158 ];

	ANowPawn_execFallingResetPosition_Parms FallingResetPosition_Parms;

	this->ProcessEvent ( pFnFallingResetPosition, &FallingResetPosition_Parms, NULL );
};

// Function NowGame.NowPawn.GetPosAt
// [0x00C24802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// int                            iStop                          ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

struct FVector ANowPawn::eventGetPosAt ( float fDeltaTime, int* iStop )
{
	static UFunction* pFnGetPosAt = NULL;

	if ( ! pFnGetPosAt )
		pFnGetPosAt = (UFunction*) UObject::GObjObjects()->Data[ 57140 ];

	ANowPawn_eventGetPosAt_Parms GetPosAt_Parms;
	GetPosAt_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnGetPosAt, &GetPosAt_Parms, NULL );

	if ( iStop )
		*iStop = GetPosAt_Parms.iStop;

	return GetPosAt_Parms.ReturnValue;
};

// Function NowGame.NowPawn.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowPawn::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 57134 ];

	ANowPawn_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowPawn.TickCombatSystems
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowPawn::TickCombatSystems ( float DeltaTime )
{
	static UFunction* pFnTickCombatSystems = NULL;

	if ( ! pFnTickCombatSystems )
		pFnTickCombatSystems = (UFunction*) UObject::GObjObjects()->Data[ 57132 ];

	ANowPawn_execTickCombatSystems_Parms TickCombatSystems_Parms;
	TickCombatSystems_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombatSystems, &TickCombatSystems_Parms, NULL );
};

// Function NowGame.NowPawn.PostInitAnimTree
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ANowPawn::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 57130 ];

	ANowPawn_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnWeapons
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventSpawnWeapons ( )
{
	static UFunction* pFnSpawnWeapons = NULL;

	if ( ! pFnSpawnWeapons )
		pFnSpawnWeapons = (UFunction*) UObject::GObjObjects()->Data[ 57129 ];

	ANowPawn_eventSpawnWeapons_Parms SpawnWeapons_Parms;

	this->ProcessEvent ( pFnSpawnWeapons, &SpawnWeapons_Parms, NULL );
};

// Function NowGame.NowPawn.TouchingUndergroundVolume
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::TouchingUndergroundVolume ( )
{
	static UFunction* pFnTouchingUndergroundVolume = NULL;

	if ( ! pFnTouchingUndergroundVolume )
		pFnTouchingUndergroundVolume = (UFunction*) UObject::GObjObjects()->Data[ 57126 ];

	ANowPawn_execTouchingUndergroundVolume_Parms TouchingUndergroundVolume_Parms;

	this->ProcessEvent ( pFnTouchingUndergroundVolume, &TouchingUndergroundVolume_Parms, NULL );

	return TouchingUndergroundVolume_Parms.ReturnValue;
};

// Function NowGame.NowPawn.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  Killed                         ( CPF_Parm )
// struct FName                   lastHitBoneName                ( CPF_OptionalParm | CPF_Parm )
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSpawnCorpse ( unsigned long Killed, struct FName lastHitBoneName, float InDmg, unsigned long bFromMercyMode )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = (UFunction*) UObject::GObjObjects()->Data[ 57118 ];

	ANowPawn_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	SpawnCorpse_Parms.Killed = Killed;
	memcpy ( &SpawnCorpse_Parms.lastHitBoneName, &lastHitBoneName, 0x8 );
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnCorpseLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventSpawnCorpseLogin ( )
{
	static UFunction* pFnSpawnCorpseLogin = NULL;

	if ( ! pFnSpawnCorpseLogin )
		pFnSpawnCorpseLogin = (UFunction*) UObject::GObjObjects()->Data[ 57117 ];

	ANowPawn_eventSpawnCorpseLogin_Parms SpawnCorpseLogin_Parms;

	this->ProcessEvent ( pFnSpawnCorpseLogin, &SpawnCorpseLogin_Parms, NULL );
};

// Function NowGame.NowPawn.EnterCombatModeLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventEnterCombatModeLogin ( )
{
	static UFunction* pFnEnterCombatModeLogin = NULL;

	if ( ! pFnEnterCombatModeLogin )
		pFnEnterCombatModeLogin = (UFunction*) UObject::GObjObjects()->Data[ 57116 ];

	ANowPawn_eventEnterCombatModeLogin_Parms EnterCombatModeLogin_Parms;

	this->ProcessEvent ( pFnEnterCombatModeLogin, &EnterCombatModeLogin_Parms, NULL );
};

// Function NowGame.NowPawn.HideGhost
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventHideGhost ( )
{
	static UFunction* pFnHideGhost = NULL;

	if ( ! pFnHideGhost )
		pFnHideGhost = (UFunction*) UObject::GObjObjects()->Data[ 57115 ];

	ANowPawn_eventHideGhost_Parms HideGhost_Parms;

	this->ProcessEvent ( pFnHideGhost, &HideGhost_Parms, NULL );
};

// Function NowGame.NowPawn.ShowGhost
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventShowGhost ( )
{
	static UFunction* pFnShowGhost = NULL;

	if ( ! pFnShowGhost )
		pFnShowGhost = (UFunction*) UObject::GObjObjects()->Data[ 57111 ];

	ANowPawn_eventShowGhost_Parms ShowGhost_Parms;

	this->ProcessEvent ( pFnShowGhost, &ShowGhost_Parms, NULL );
};

// Function NowGame.NowPawn.Landed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void ANowPawn::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 57107 ];

	ANowPawn_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function NowGame.NowPawn.ResetStunned
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventResetStunned ( )
{
	static UFunction* pFnResetStunned = NULL;

	if ( ! pFnResetStunned )
		pFnResetStunned = (UFunction*) UObject::GObjObjects()->Data[ 57106 ];

	ANowPawn_eventResetStunned_Parms ResetStunned_Parms;

	this->ProcessEvent ( pFnResetStunned, &ResetStunned_Parms, NULL );
};

// Function NowGame.NowPawn.SetMercyMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventSetMercyMode ( )
{
	static UFunction* pFnSetMercyMode = NULL;

	if ( ! pFnSetMercyMode )
		pFnSetMercyMode = (UFunction*) UObject::GObjObjects()->Data[ 57103 ];

	ANowPawn_eventSetMercyMode_Parms SetMercyMode_Parms;

	this->ProcessEvent ( pFnSetMercyMode, &SetMercyMode_Parms, NULL );
};

// Function NowGame.NowPawn.SetKnockedDownMode
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 PushBackVector                 ( CPF_Parm )
// unsigned long                  bFromHorse                     ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSetKnockedDownMode ( struct FVector PushBackVector, unsigned long bFromHorse )
{
	static UFunction* pFnSetKnockedDownMode = NULL;

	if ( ! pFnSetKnockedDownMode )
		pFnSetKnockedDownMode = (UFunction*) UObject::GObjObjects()->Data[ 57099 ];

	ANowPawn_eventSetKnockedDownMode_Parms SetKnockedDownMode_Parms;
	memcpy ( &SetKnockedDownMode_Parms.PushBackVector, &PushBackVector, 0xC );
	SetKnockedDownMode_Parms.bFromHorse = bFromHorse;

	this->ProcessEvent ( pFnSetKnockedDownMode, &SetKnockedDownMode_Parms, NULL );
};

// Function NowGame.NowPawn.SetStunnedState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewState                       ( CPF_Parm )

void ANowPawn::eventSetStunnedState ( int NewState )
{
	static UFunction* pFnSetStunnedState = NULL;

	if ( ! pFnSetStunnedState )
		pFnSetStunnedState = (UFunction*) UObject::GObjObjects()->Data[ 57097 ];

	ANowPawn_eventSetStunnedState_Parms SetStunnedState_Parms;
	SetStunnedState_Parms.NewState = NewState;

	this->ProcessEvent ( pFnSetStunnedState, &SetStunnedState_Parms, NULL );
};

// Function NowGame.NowPawn.ChangedDisplayName
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventChangedDisplayName ( )
{
	static UFunction* pFnChangedDisplayName = NULL;

	if ( ! pFnChangedDisplayName )
		pFnChangedDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 57096 ];

	ANowPawn_eventChangedDisplayName_Parms ChangedDisplayName_Parms;

	this->ProcessEvent ( pFnChangedDisplayName, &ChangedDisplayName_Parms, NULL );
};

// Function NowGame.NowPawn.SetLocalFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewFlag                        ( CPF_Parm )

void ANowPawn::eventSetLocalFlag ( int NewFlag )
{
	static UFunction* pFnSetLocalFlag = NULL;

	if ( ! pFnSetLocalFlag )
		pFnSetLocalFlag = (UFunction*) UObject::GObjObjects()->Data[ 57094 ];

	ANowPawn_eventSetLocalFlag_Parms SetLocalFlag_Parms;
	SetLocalFlag_Parms.NewFlag = NewFlag;

	this->ProcessEvent ( pFnSetLocalFlag, &SetLocalFlag_Parms, NULL );
};

// Function NowGame.NowPawn.ClearGuildFlags
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventClearGuildFlags ( )
{
	static UFunction* pFnClearGuildFlags = NULL;

	if ( ! pFnClearGuildFlags )
		pFnClearGuildFlags = (UFunction*) UObject::GObjObjects()->Data[ 57091 ];

	ANowPawn_eventClearGuildFlags_Parms ClearGuildFlags_Parms;

	this->ProcessEvent ( pFnClearGuildFlags, &ClearGuildFlags_Parms, NULL );
};

// Function NowGame.NowPawn.ReinitGuildFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventReinitGuildFlag ( )
{
	static UFunction* pFnReinitGuildFlag = NULL;

	if ( ! pFnReinitGuildFlag )
		pFnReinitGuildFlag = (UFunction*) UObject::GObjObjects()->Data[ 57087 ];

	ANowPawn_eventReinitGuildFlag_Parms ReinitGuildFlag_Parms;

	this->ProcessEvent ( pFnReinitGuildFlag, &ReinitGuildFlag_Parms, NULL );
};

// Function NowGame.NowPawn.AddLocalFlagDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventAddLocalFlagDelegate ( )
{
	static UFunction* pFnAddLocalFlagDelegate = NULL;

	if ( ! pFnAddLocalFlagDelegate )
		pFnAddLocalFlagDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57085 ];

	ANowPawn_eventAddLocalFlagDelegate_Parms AddLocalFlagDelegate_Parms;

	this->ProcessEvent ( pFnAddLocalFlagDelegate, &AddLocalFlagDelegate_Parms, NULL );
};

// Function NowGame.NowPawn.LocalFlagDelegateTriggered
// [0x00020002] 
// Parameters infos:

void ANowPawn::LocalFlagDelegateTriggered ( )
{
	static UFunction* pFnLocalFlagDelegateTriggered = NULL;

	if ( ! pFnLocalFlagDelegateTriggered )
		pFnLocalFlagDelegateTriggered = (UFunction*) UObject::GObjObjects()->Data[ 57084 ];

	ANowPawn_execLocalFlagDelegateTriggered_Parms LocalFlagDelegateTriggered_Parms;

	this->ProcessEvent ( pFnLocalFlagDelegateTriggered, &LocalFlagDelegateTriggered_Parms, NULL );
};

// Function NowGame.NowPawn.UpdateGroundSpeed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventUpdateGroundSpeed ( )
{
	static UFunction* pFnUpdateGroundSpeed = NULL;

	if ( ! pFnUpdateGroundSpeed )
		pFnUpdateGroundSpeed = (UFunction*) UObject::GObjObjects()->Data[ 57077 ];

	ANowPawn_eventUpdateGroundSpeed_Parms UpdateGroundSpeed_Parms;

	this->ProcessEvent ( pFnUpdateGroundSpeed, &UpdateGroundSpeed_Parms, NULL );
};

// Function NowGame.NowPawn.GetArmorWeightPctMod
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          FMax                           ( CPF_Parm )

float ANowPawn::GetArmorWeightPctMod ( float FMax )
{
	static UFunction* pFnGetArmorWeightPctMod = NULL;

	if ( ! pFnGetArmorWeightPctMod )
		pFnGetArmorWeightPctMod = (UFunction*) UObject::GObjObjects()->Data[ 57072 ];

	ANowPawn_execGetArmorWeightPctMod_Parms GetArmorWeightPctMod_Parms;
	GetArmorWeightPctMod_Parms.FMax = FMax;

	this->ProcessEvent ( pFnGetArmorWeightPctMod, &GetArmorWeightPctMod_Parms, NULL );

	return GetArmorWeightPctMod_Parms.ReturnValue;
};

// Function NowGame.NowPawn.NowCreateAndSetMaterialInstanceConstant
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UMaterialInstanceConstant* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )
// int                            ElementIndex                   ( CPF_Parm )

class UMaterialInstanceConstant* ANowPawn::eventNowCreateAndSetMaterialInstanceConstant ( class USkeletalMeshComponent* SkelComp, int ElementIndex )
{
	static UFunction* pFnNowCreateAndSetMaterialInstanceConstant = NULL;

	if ( ! pFnNowCreateAndSetMaterialInstanceConstant )
		pFnNowCreateAndSetMaterialInstanceConstant = (UFunction*) UObject::GObjObjects()->Data[ 57068 ];

	ANowPawn_eventNowCreateAndSetMaterialInstanceConstant_Parms NowCreateAndSetMaterialInstanceConstant_Parms;
	NowCreateAndSetMaterialInstanceConstant_Parms.SkelComp = SkelComp;
	NowCreateAndSetMaterialInstanceConstant_Parms.ElementIndex = ElementIndex;

	this->ProcessEvent ( pFnNowCreateAndSetMaterialInstanceConstant, &NowCreateAndSetMaterialInstanceConstant_Parms, NULL );

	return NowCreateAndSetMaterialInstanceConstant_Parms.ReturnValue;
};

// Function NowGame.NowPawn.SpawnProjectileEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 arrowLocation                  ( CPF_Parm )

void ANowPawn::eventSpawnProjectileEffect ( struct FVector arrowLocation )
{
	static UFunction* pFnSpawnProjectileEffect = NULL;

	if ( ! pFnSpawnProjectileEffect )
		pFnSpawnProjectileEffect = (UFunction*) UObject::GObjObjects()->Data[ 57064 ];

	ANowPawn_eventSpawnProjectileEffect_Parms SpawnProjectileEffect_Parms;
	memcpy ( &SpawnProjectileEffect_Parms.arrowLocation, &arrowLocation, 0xC );

	this->ProcessEvent ( pFnSpawnProjectileEffect, &SpawnProjectileEffect_Parms, NULL );
};

// Function NowGame.NowPawn.TestForInterrupt
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::eventTestForInterrupt ( )
{
	static UFunction* pFnTestForInterrupt = NULL;

	if ( ! pFnTestForInterrupt )
		pFnTestForInterrupt = (UFunction*) UObject::GObjObjects()->Data[ 57062 ];

	ANowPawn_eventTestForInterrupt_Parms TestForInterrupt_Parms;

	this->ProcessEvent ( pFnTestForInterrupt, &TestForInterrupt_Parms, NULL );

	return TestForInterrupt_Parms.ReturnValue;
};

// Function NowGame.NowPawn.UpdateWeaponStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventUpdateWeaponStats ( )
{
	static UFunction* pFnUpdateWeaponStats = NULL;

	if ( ! pFnUpdateWeaponStats )
		pFnUpdateWeaponStats = (UFunction*) UObject::GObjObjects()->Data[ 57061 ];

	ANowPawn_eventUpdateWeaponStats_Parms UpdateWeaponStats_Parms;

	this->ProcessEvent ( pFnUpdateWeaponStats, &UpdateWeaponStats_Parms, NULL );
};

// Function NowGame.NowPawn.FindAndCacheNodes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventFindAndCacheNodes ( )
{
	static UFunction* pFnFindAndCacheNodes = NULL;

	if ( ! pFnFindAndCacheNodes )
		pFnFindAndCacheNodes = (UFunction*) UObject::GObjObjects()->Data[ 57060 ];

	ANowPawn_eventFindAndCacheNodes_Parms FindAndCacheNodes_Parms;

	this->ProcessEvent ( pFnFindAndCacheNodes, &FindAndCacheNodes_Parms, NULL );
};

// Function NowGame.NowPawn.ResetAnimations
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventResetAnimations ( )
{
	static UFunction* pFnResetAnimations = NULL;

	if ( ! pFnResetAnimations )
		pFnResetAnimations = (UFunction*) UObject::GObjObjects()->Data[ 57059 ];

	ANowPawn_eventResetAnimations_Parms ResetAnimations_Parms;

	this->ProcessEvent ( pFnResetAnimations, &ResetAnimations_Parms, NULL );
};

// Function NowGame.NowPawn.GetAnimNodePointers
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// int                            WhatType                       ( CPF_Parm )
// class UAnimNodePlayCustomAnim* AnimNode                       ( CPF_Parm | CPF_OutParm )
// class UAnimNodeSequence*       AnimSeq                        ( CPF_Parm | CPF_OutParm )

void ANowPawn::eventGetAnimNodePointers ( int WhatType, class UAnimNodePlayCustomAnim** AnimNode, class UAnimNodeSequence** AnimSeq )
{
	static UFunction* pFnGetAnimNodePointers = NULL;

	if ( ! pFnGetAnimNodePointers )
		pFnGetAnimNodePointers = (UFunction*) UObject::GObjObjects()->Data[ 57055 ];

	ANowPawn_eventGetAnimNodePointers_Parms GetAnimNodePointers_Parms;
	GetAnimNodePointers_Parms.WhatType = WhatType;

	this->ProcessEvent ( pFnGetAnimNodePointers, &GetAnimNodePointers_Parms, NULL );

	if ( AnimNode )
		*AnimNode = GetAnimNodePointers_Parms.AnimNode;

	if ( AnimSeq )
		*AnimSeq = GetAnimNodePointers_Parms.AnimSeq;
};

// Function NowGame.NowPawn.GetMount
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarAiMount*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarAiMount* ANowPawn::eventGetMount ( )
{
	static UFunction* pFnGetMount = NULL;

	if ( ! pFnGetMount )
		pFnGetMount = (UFunction*) UObject::GObjObjects()->Data[ 47454 ];

	ANowPawn_eventGetMount_Parms GetMount_Parms;

	this->ProcessEvent ( pFnGetMount, &GetMount_Parms, NULL );

	return GetMount_Parms.ReturnValue;
};

// Function NowGame.NowPawn.PlayGetUpCustom
// [0x00020002] 
// Parameters infos:

void ANowPawn::PlayGetUpCustom ( )
{
	static UFunction* pFnPlayGetUpCustom = NULL;

	if ( ! pFnPlayGetUpCustom )
		pFnPlayGetUpCustom = (UFunction*) UObject::GObjObjects()->Data[ 57053 ];

	ANowPawn_execPlayGetUpCustom_Parms PlayGetUpCustom_Parms;

	this->ProcessEvent ( pFnPlayGetUpCustom, &PlayGetUpCustom_Parms, NULL );
};

// Function NowGame.NowPawn.TurnOffCustomAnims
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventTurnOffCustomAnims ( )
{
	static UFunction* pFnTurnOffCustomAnims = NULL;

	if ( ! pFnTurnOffCustomAnims )
		pFnTurnOffCustomAnims = (UFunction*) UObject::GObjObjects()->Data[ 57049 ];

	ANowPawn_eventTurnOffCustomAnims_Parms TurnOffCustomAnims_Parms;

	this->ProcessEvent ( pFnTurnOffCustomAnims, &TurnOffCustomAnims_Parms, NULL );
};

// Function NowGame.NowPawn.SetFemaleCommonSounds
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventSetFemaleCommonSounds ( )
{
	static UFunction* pFnSetFemaleCommonSounds = NULL;

	if ( ! pFnSetFemaleCommonSounds )
		pFnSetFemaleCommonSounds = (UFunction*) UObject::GObjObjects()->Data[ 57043 ];

	ANowPawn_eventSetFemaleCommonSounds_Parms SetFemaleCommonSounds_Parms;

	this->ProcessEvent ( pFnSetFemaleCommonSounds, &SetFemaleCommonSounds_Parms, NULL );
};

// Function NowGame.NowPawn.PendingGetAndCreateWeapons
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventPendingGetAndCreateWeapons ( )
{
	static UFunction* pFnPendingGetAndCreateWeapons = NULL;

	if ( ! pFnPendingGetAndCreateWeapons )
		pFnPendingGetAndCreateWeapons = (UFunction*) UObject::GObjObjects()->Data[ 57042 ];

	ANowPawn_eventPendingGetAndCreateWeapons_Parms PendingGetAndCreateWeapons_Parms;

	this->ProcessEvent ( pFnPendingGetAndCreateWeapons, &PendingGetAndCreateWeapons_Parms, NULL );
};

// Function NowGame.NowPawn.PendingUpdateCharacterFace
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventPendingUpdateCharacterFace ( )
{
	static UFunction* pFnPendingUpdateCharacterFace = NULL;

	if ( ! pFnPendingUpdateCharacterFace )
		pFnPendingUpdateCharacterFace = (UFunction*) UObject::GObjObjects()->Data[ 57041 ];

	ANowPawn_eventPendingUpdateCharacterFace_Parms PendingUpdateCharacterFace_Parms;

	this->ProcessEvent ( pFnPendingUpdateCharacterFace, &PendingUpdateCharacterFace_Parms, NULL );
};

// Function NowGame.NowPawn.PendingGetAndSetState
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventPendingGetAndSetState ( )
{
	static UFunction* pFnPendingGetAndSetState = NULL;

	if ( ! pFnPendingGetAndSetState )
		pFnPendingGetAndSetState = (UFunction*) UObject::GObjObjects()->Data[ 57040 ];

	ANowPawn_eventPendingGetAndSetState_Parms PendingGetAndSetState_Parms;

	this->ProcessEvent ( pFnPendingGetAndSetState, &PendingGetAndSetState_Parms, NULL );
};

// Function NowGame.NowPawn.PendingGetAndSetAnimations
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventPendingGetAndSetAnimations ( )
{
	static UFunction* pFnPendingGetAndSetAnimations = NULL;

	if ( ! pFnPendingGetAndSetAnimations )
		pFnPendingGetAndSetAnimations = (UFunction*) UObject::GObjObjects()->Data[ 57039 ];

	ANowPawn_eventPendingGetAndSetAnimations_Parms PendingGetAndSetAnimations_Parms;

	this->ProcessEvent ( pFnPendingGetAndSetAnimations, &PendingGetAndSetAnimations_Parms, NULL );
};

// Function NowGame.NowPawn.MagicFizzle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventMagicFizzle ( )
{
	static UFunction* pFnMagicFizzle = NULL;

	if ( ! pFnMagicFizzle )
		pFnMagicFizzle = (UFunction*) UObject::GObjObjects()->Data[ 57038 ];

	ANowPawn_eventMagicFizzle_Parms MagicFizzle_Parms;

	this->ProcessEvent ( pFnMagicFizzle, &MagicFizzle_Parms, NULL );
};

// Function NowGame.NowPawn.MagicSelfRelease
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventMagicSelfRelease ( )
{
	static UFunction* pFnMagicSelfRelease = NULL;

	if ( ! pFnMagicSelfRelease )
		pFnMagicSelfRelease = (UFunction*) UObject::GObjObjects()->Data[ 57037 ];

	ANowPawn_eventMagicSelfRelease_Parms MagicSelfRelease_Parms;

	this->ProcessEvent ( pFnMagicSelfRelease, &MagicSelfRelease_Parms, NULL );
};

// Function NowGame.NowPawn.MagicRelease
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventMagicRelease ( )
{
	static UFunction* pFnMagicRelease = NULL;

	if ( ! pFnMagicRelease )
		pFnMagicRelease = (UFunction*) UObject::GObjObjects()->Data[ 57036 ];

	ANowPawn_eventMagicRelease_Parms MagicRelease_Parms;

	this->ProcessEvent ( pFnMagicRelease, &MagicRelease_Parms, NULL );
};

// Function NowGame.NowPawn.SetCurrentSpell
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewValue                       ( CPF_Parm )

void ANowPawn::eventSetCurrentSpell ( int NewValue )
{
	static UFunction* pFnSetCurrentSpell = NULL;

	if ( ! pFnSetCurrentSpell )
		pFnSetCurrentSpell = (UFunction*) UObject::GObjObjects()->Data[ 57034 ];

	ANowPawn_eventSetCurrentSpell_Parms SetCurrentSpell_Parms;
	SetCurrentSpell_Parms.NewValue = NewValue;

	this->ProcessEvent ( pFnSetCurrentSpell, &SetCurrentSpell_Parms, NULL );
};

// Function NowGame.NowPawn.Invisible
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  On                             ( CPF_Parm )

void ANowPawn::eventInvisible ( unsigned long On )
{
	static UFunction* pFnInvisible = NULL;

	if ( ! pFnInvisible )
		pFnInvisible = (UFunction*) UObject::GObjObjects()->Data[ 57032 ];

	ANowPawn_eventInvisible_Parms Invisible_Parms;
	Invisible_Parms.On = On;

	this->ProcessEvent ( pFnInvisible, &Invisible_Parms, NULL );
};

// Function NowGame.NowPawn.GMPawnInit
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            InitEnum                       ( CPF_Parm )
// int                            InitType                       ( CPF_Parm )

void ANowPawn::eventGMPawnInit ( int InitEnum, int InitType )
{
	static UFunction* pFnGMPawnInit = NULL;

	if ( ! pFnGMPawnInit )
		pFnGMPawnInit = (UFunction*) UObject::GObjObjects()->Data[ 57025 ];

	ANowPawn_eventGMPawnInit_Parms GMPawnInit_Parms;
	GMPawnInit_Parms.InitEnum = InitEnum;
	GMPawnInit_Parms.InitType = InitType;

	this->ProcessEvent ( pFnGMPawnInit, &GMPawnInit_Parms, NULL );
};

// Function NowGame.NowPawn.PawnSkelMeshCompOnParticleSystemFinished
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void ANowPawn::PawnSkelMeshCompOnParticleSystemFinished ( class UParticleSystemComponent* PSC )
{
	static UFunction* pFnPawnSkelMeshCompOnParticleSystemFinished = NULL;

	if ( ! pFnPawnSkelMeshCompOnParticleSystemFinished )
		pFnPawnSkelMeshCompOnParticleSystemFinished = (UFunction*) UObject::GObjObjects()->Data[ 57023 ];

	ANowPawn_execPawnSkelMeshCompOnParticleSystemFinished_Parms PawnSkelMeshCompOnParticleSystemFinished_Parms;
	PawnSkelMeshCompOnParticleSystemFinished_Parms.PSC = PSC;

	this->ProcessEvent ( pFnPawnSkelMeshCompOnParticleSystemFinished, &PawnSkelMeshCompOnParticleSystemFinished_Parms, NULL );
};

// Function NowGame.NowPawn.PlayIndexedParticleEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UAnimNotify_PlayIndexedParticleEffect* AnimNotifyData                 ( CPF_Const | CPF_Parm )

void ANowPawn::eventPlayIndexedParticleEffect ( class UAnimNotify_PlayIndexedParticleEffect* AnimNotifyData )
{
	static UFunction* pFnPlayIndexedParticleEffect = NULL;

	if ( ! pFnPlayIndexedParticleEffect )
		pFnPlayIndexedParticleEffect = (UFunction*) UObject::GObjObjects()->Data[ 57021 ];

	ANowPawn_eventPlayIndexedParticleEffect_Parms PlayIndexedParticleEffect_Parms;
	PlayIndexedParticleEffect_Parms.AnimNotifyData = AnimNotifyData;

	this->ProcessEvent ( pFnPlayIndexedParticleEffect, &PlayIndexedParticleEffect_Parms, NULL );
};

// Function NowGame.NowPawn.spellSelfRelease
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventspellSelfRelease ( )
{
	static UFunction* pFnspellSelfRelease = NULL;

	if ( ! pFnspellSelfRelease )
		pFnspellSelfRelease = (UFunction*) UObject::GObjObjects()->Data[ 57020 ];

	ANowPawn_eventspellSelfRelease_Parms spellSelfRelease_Parms;

	this->ProcessEvent ( pFnspellSelfRelease, &spellSelfRelease_Parms, NULL );
};

// Function NowGame.NowPawn.AddMagicMeshFX
// [0x00020002] 
// Parameters infos:
// class UMagicMeshFX*            NewFX                          ( CPF_Parm )

void ANowPawn::AddMagicMeshFX ( class UMagicMeshFX* NewFX )
{
	static UFunction* pFnAddMagicMeshFX = NULL;

	if ( ! pFnAddMagicMeshFX )
		pFnAddMagicMeshFX = (UFunction*) UObject::GObjObjects()->Data[ 57018 ];

	ANowPawn_execAddMagicMeshFX_Parms AddMagicMeshFX_Parms;
	AddMagicMeshFX_Parms.NewFX = NewFX;

	this->ProcessEvent ( pFnAddMagicMeshFX, &AddMagicMeshFX_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnMagicMeshFX
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  eID                            ( CPF_Parm )

void ANowPawn::eventSpawnMagicMeshFX ( unsigned char eID )
{
	static UFunction* pFnSpawnMagicMeshFX = NULL;

	if ( ! pFnSpawnMagicMeshFX )
		pFnSpawnMagicMeshFX = (UFunction*) UObject::GObjObjects()->Data[ 57014 ];

	ANowPawn_eventSpawnMagicMeshFX_Parms SpawnMagicMeshFX_Parms;
	SpawnMagicMeshFX_Parms.eID = eID;

	this->ProcessEvent ( pFnSpawnMagicMeshFX, &SpawnMagicMeshFX_Parms, NULL );
};

// Function NowGame.NowPawn.GetMagicMeshFXActive
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UMagicMeshFX*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eID                            ( CPF_Parm )

class UMagicMeshFX* ANowPawn::eventGetMagicMeshFXActive ( unsigned char eID )
{
	static UFunction* pFnGetMagicMeshFXActive = NULL;

	if ( ! pFnGetMagicMeshFXActive )
		pFnGetMagicMeshFXActive = (UFunction*) UObject::GObjObjects()->Data[ 57010 ];

	ANowPawn_eventGetMagicMeshFXActive_Parms GetMagicMeshFXActive_Parms;
	GetMagicMeshFXActive_Parms.eID = eID;

	this->ProcessEvent ( pFnGetMagicMeshFXActive, &GetMagicMeshFXActive_Parms, NULL );

	return GetMagicMeshFXActive_Parms.ReturnValue;
};

// Function NowGame.NowPawn.IsMagicMeshFXActive
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eID                            ( CPF_Parm )

bool ANowPawn::eventIsMagicMeshFXActive ( unsigned char eID )
{
	static UFunction* pFnIsMagicMeshFXActive = NULL;

	if ( ! pFnIsMagicMeshFXActive )
		pFnIsMagicMeshFXActive = (UFunction*) UObject::GObjObjects()->Data[ 47709 ];

	ANowPawn_eventIsMagicMeshFXActive_Parms IsMagicMeshFXActive_Parms;
	IsMagicMeshFXActive_Parms.eID = eID;

	this->ProcessEvent ( pFnIsMagicMeshFXActive, &IsMagicMeshFXActive_Parms, NULL );

	return IsMagicMeshFXActive_Parms.ReturnValue;
};

// Function NowGame.NowPawn.ClearMagicMeshFX
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  eID                            ( CPF_Parm )

void ANowPawn::eventClearMagicMeshFX ( unsigned char eID )
{
	static UFunction* pFnClearMagicMeshFX = NULL;

	if ( ! pFnClearMagicMeshFX )
		pFnClearMagicMeshFX = (UFunction*) UObject::GObjObjects()->Data[ 57005 ];

	ANowPawn_eventClearMagicMeshFX_Parms ClearMagicMeshFX_Parms;
	ClearMagicMeshFX_Parms.eID = eID;

	this->ProcessEvent ( pFnClearMagicMeshFX, &ClearMagicMeshFX_Parms, NULL );
};

// Function NowGame.NowPawn.ClearAllMagicMeshFX
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventClearAllMagicMeshFX ( )
{
	static UFunction* pFnClearAllMagicMeshFX = NULL;

	if ( ! pFnClearAllMagicMeshFX )
		pFnClearAllMagicMeshFX = (UFunction*) UObject::GObjObjects()->Data[ 57003 ];

	ANowPawn_eventClearAllMagicMeshFX_Parms ClearAllMagicMeshFX_Parms;

	this->ProcessEvent ( pFnClearAllMagicMeshFX, &ClearAllMagicMeshFX_Parms, NULL );
};

// Function NowGame.NowPawn.HideRangedBone
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventHideRangedBone ( )
{
	static UFunction* pFnHideRangedBone = NULL;

	if ( ! pFnHideRangedBone )
		pFnHideRangedBone = (UFunction*) UObject::GObjObjects()->Data[ 57001 ];

	ANowPawn_eventHideRangedBone_Parms HideRangedBone_Parms;

	this->ProcessEvent ( pFnHideRangedBone, &HideRangedBone_Parms, NULL );
};

// Function NowGame.NowPawn.ShowRangedBone
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventShowRangedBone ( )
{
	static UFunction* pFnShowRangedBone = NULL;

	if ( ! pFnShowRangedBone )
		pFnShowRangedBone = (UFunction*) UObject::GObjObjects()->Data[ 56999 ];

	ANowPawn_eventShowRangedBone_Parms ShowRangedBone_Parms;

	this->ProcessEvent ( pFnShowRangedBone, &ShowRangedBone_Parms, NULL );
};

// Function NowGame.NowPawn.PendingGetAndSetMount
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bStart                         ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventPendingGetAndSetMount ( unsigned long bStart )
{
	static UFunction* pFnPendingGetAndSetMount = NULL;

	if ( ! pFnPendingGetAndSetMount )
		pFnPendingGetAndSetMount = (UFunction*) UObject::GObjObjects()->Data[ 56997 ];

	ANowPawn_eventPendingGetAndSetMount_Parms PendingGetAndSetMount_Parms;
	PendingGetAndSetMount_Parms.bStart = bStart;

	this->ProcessEvent ( pFnPendingGetAndSetMount, &PendingGetAndSetMount_Parms, NULL );
};

// Function NowGame.NowPawn.PendingInitDead
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventPendingInitDead ( )
{
	static UFunction* pFnPendingInitDead = NULL;

	if ( ! pFnPendingInitDead )
		pFnPendingInitDead = (UFunction*) UObject::GObjObjects()->Data[ 56996 ];

	ANowPawn_eventPendingInitDead_Parms PendingInitDead_Parms;

	this->ProcessEvent ( pFnPendingInitDead, &PendingInitDead_Parms, NULL );
};

// Function NowGame.NowPawn.SetTraceTime
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          NewLength                      ( CPF_Parm )
// float                          NewMiddle                      ( CPF_Parm )
// unsigned long                  bCombatMove                    ( CPF_Parm )

void ANowPawn::eventSetTraceTime ( float NewLength, float NewMiddle, unsigned long bCombatMove )
{
	static UFunction* pFnSetTraceTime = NULL;

	if ( ! pFnSetTraceTime )
		pFnSetTraceTime = (UFunction*) UObject::GObjObjects()->Data[ 56989 ];

	ANowPawn_eventSetTraceTime_Parms SetTraceTime_Parms;
	SetTraceTime_Parms.NewLength = NewLength;
	SetTraceTime_Parms.NewMiddle = NewMiddle;
	SetTraceTime_Parms.bCombatMove = bCombatMove;

	this->ProcessEvent ( pFnSetTraceTime, &SetTraceTime_Parms, NULL );
};

// Function NowGame.NowPawn.SetBowMinDrawDistance
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          NewMinChargeTime               ( CPF_Parm )

void ANowPawn::eventSetBowMinDrawDistance ( float NewMinChargeTime )
{
	static UFunction* pFnSetBowMinDrawDistance = NULL;

	if ( ! pFnSetBowMinDrawDistance )
		pFnSetBowMinDrawDistance = (UFunction*) UObject::GObjObjects()->Data[ 56987 ];

	ANowPawn_eventSetBowMinDrawDistance_Parms SetBowMinDrawDistance_Parms;
	SetBowMinDrawDistance_Parms.NewMinChargeTime = NewMinChargeTime;

	this->ProcessEvent ( pFnSetBowMinDrawDistance, &SetBowMinDrawDistance_Parms, NULL );
};

// Function NowGame.NowPawn.SetBlockingState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            WhatState                      ( CPF_Parm )

void ANowPawn::eventSetBlockingState ( int WhatState )
{
	static UFunction* pFnSetBlockingState = NULL;

	if ( ! pFnSetBlockingState )
		pFnSetBlockingState = (UFunction*) UObject::GObjObjects()->Data[ 56984 ];

	ANowPawn_eventSetBlockingState_Parms SetBlockingState_Parms;
	SetBlockingState_Parms.WhatState = WhatState;

	this->ProcessEvent ( pFnSetBlockingState, &SetBlockingState_Parms, NULL );
};

// Function NowGame.NowPawn.RemoveMount
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventRemoveMount ( )
{
	static UFunction* pFnRemoveMount = NULL;

	if ( ! pFnRemoveMount )
		pFnRemoveMount = (UFunction*) UObject::GObjObjects()->Data[ 56983 ];

	ANowPawn_eventRemoveMount_Parms RemoveMount_Parms;

	this->ProcessEvent ( pFnRemoveMount, &RemoveMount_Parms, NULL );
};

// Function NowGame.NowPawn.CreateMount
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ContentInfo                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            iType                          ( CPF_Parm )
// unsigned long                  bInit                          ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventCreateMount ( struct FString ContentInfo, struct FString DisplayName, int iType, unsigned long bInit )
{
	static UFunction* pFnCreateMount = NULL;

	if ( ! pFnCreateMount )
		pFnCreateMount = (UFunction*) UObject::GObjObjects()->Data[ 56978 ];

	ANowPawn_eventCreateMount_Parms CreateMount_Parms;
	memcpy ( &CreateMount_Parms.ContentInfo, &ContentInfo, 0xC );
	memcpy ( &CreateMount_Parms.DisplayName, &DisplayName, 0xC );
	CreateMount_Parms.iType = iType;
	CreateMount_Parms.bInit = bInit;

	this->ProcessEvent ( pFnCreateMount, &CreateMount_Parms, NULL );
};

// Function NowGame.NowPawn.SavePendingSwing
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 whatSwing                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowPawn::eventSavePendingSwing ( struct FString whatSwing )
{
	static UFunction* pFnSavePendingSwing = NULL;

	if ( ! pFnSavePendingSwing )
		pFnSavePendingSwing = (UFunction*) UObject::GObjObjects()->Data[ 56976 ];

	ANowPawn_eventSavePendingSwing_Parms SavePendingSwing_Parms;
	memcpy ( &SavePendingSwing_Parms.whatSwing, &whatSwing, 0xC );

	this->ProcessEvent ( pFnSavePendingSwing, &SavePendingSwing_Parms, NULL );
};

// Function NowGame.NowPawn.UpdateWeatherAwarenessData
// [0x00020000] 
// Parameters infos:

void ANowPawn::UpdateWeatherAwarenessData ( )
{
	static UFunction* pFnUpdateWeatherAwarenessData = NULL;

	if ( ! pFnUpdateWeatherAwarenessData )
		pFnUpdateWeatherAwarenessData = (UFunction*) UObject::GObjObjects()->Data[ 56975 ];

	ANowPawn_execUpdateWeatherAwarenessData_Parms UpdateWeatherAwarenessData_Parms;

	this->ProcessEvent ( pFnUpdateWeatherAwarenessData, &UpdateWeatherAwarenessData_Parms, NULL );
};

// Function NowGame.NowPawn.InitWeatherAwarenssUpdateLoop
// [0x00020002] 
// Parameters infos:

void ANowPawn::InitWeatherAwarenssUpdateLoop ( )
{
	static UFunction* pFnInitWeatherAwarenssUpdateLoop = NULL;

	if ( ! pFnInitWeatherAwarenssUpdateLoop )
		pFnInitWeatherAwarenssUpdateLoop = (UFunction*) UObject::GObjObjects()->Data[ 56974 ];

	ANowPawn_execInitWeatherAwarenssUpdateLoop_Parms InitWeatherAwarenssUpdateLoop_Parms;

	this->ProcessEvent ( pFnInitWeatherAwarenssUpdateLoop, &InitWeatherAwarenssUpdateLoop_Parms, NULL );
};

// Function NowGame.NowPawn.TerminateWeatherAwarenssUpdateLoop
// [0x00020002] 
// Parameters infos:

void ANowPawn::TerminateWeatherAwarenssUpdateLoop ( )
{
	static UFunction* pFnTerminateWeatherAwarenssUpdateLoop = NULL;

	if ( ! pFnTerminateWeatherAwarenssUpdateLoop )
		pFnTerminateWeatherAwarenssUpdateLoop = (UFunction*) UObject::GObjObjects()->Data[ 56973 ];

	ANowPawn_execTerminateWeatherAwarenssUpdateLoop_Parms TerminateWeatherAwarenssUpdateLoop_Parms;

	this->ProcessEvent ( pFnTerminateWeatherAwarenssUpdateLoop, &TerminateWeatherAwarenssUpdateLoop_Parms, NULL );
};

// Function NowGame.NowPawn.GetInteractionString
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowPawn::eventGetInteractionString ( )
{
	static UFunction* pFnGetInteractionString = NULL;

	if ( ! pFnGetInteractionString )
		pFnGetInteractionString = (UFunction*) UObject::GObjObjects()->Data[ 55972 ];

	ANowPawn_eventGetInteractionString_Parms GetInteractionString_Parms;

	this->ProcessEvent ( pFnGetInteractionString, &GetInteractionString_Parms, NULL );

	return GetInteractionString_Parms.ReturnValue;
};

// Function NowGame.NowPawn.IsCombatTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::IsCombatTarget ( )
{
	static UFunction* pFnIsCombatTarget = NULL;

	if ( ! pFnIsCombatTarget )
		pFnIsCombatTarget = (UFunction*) UObject::GObjObjects()->Data[ 56971 ];

	ANowPawn_execIsCombatTarget_Parms IsCombatTarget_Parms;

	this->ProcessEvent ( pFnIsCombatTarget, &IsCombatTarget_Parms, NULL );

	return IsCombatTarget_Parms.ReturnValue;
};

// Function NowGame.NowPawn.AddToManager
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventAddToManager ( )
{
	static UFunction* pFnAddToManager = NULL;

	if ( ! pFnAddToManager )
		pFnAddToManager = (UFunction*) UObject::GObjObjects()->Data[ 56970 ];

	ANowPawn_eventAddToManager_Parms AddToManager_Parms;

	this->ProcessEvent ( pFnAddToManager, &AddToManager_Parms, NULL );
};

// Function NowGame.NowPawn.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowPawn::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56969 ];

	ANowPawn_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowPawn.TriggerFootNotify
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            FootIndex                      ( CPF_Parm )
// float                          FootForce                      ( CPF_Parm )

void ANowPawn::TriggerFootNotify ( int FootIndex, float FootForce )
{
	static UFunction* pFnTriggerFootNotify = NULL;

	if ( ! pFnTriggerFootNotify )
		pFnTriggerFootNotify = (UFunction*) UObject::GObjObjects()->Data[ 56966 ];

	ANowPawn_execTriggerFootNotify_Parms TriggerFootNotify_Parms;
	TriggerFootNotify_Parms.FootIndex = FootIndex;
	TriggerFootNotify_Parms.FootForce = FootForce;

	pFnTriggerFootNotify->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerFootNotify, &TriggerFootNotify_Parms, NULL );

	pFnTriggerFootNotify->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetPlayerMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USkeletalMeshComponentGenerated* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )

class USkeletalMeshComponentGenerated* ANowPawn::GetPlayerMesh ( )
{
	static UFunction* pFnGetPlayerMesh = NULL;

	if ( ! pFnGetPlayerMesh )
		pFnGetPlayerMesh = (UFunction*) UObject::GObjObjects()->Data[ 47849 ];

	ANowPawn_execGetPlayerMesh_Parms GetPlayerMesh_Parms;

	pFnGetPlayerMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerMesh, &GetPlayerMesh_Parms, NULL );

	pFnGetPlayerMesh->FunctionFlags |= 0x400;

	return GetPlayerMesh_Parms.ReturnValue;
};

// Function NowGame.NowPawn.InitDead
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::InitDead ( )
{
	static UFunction* pFnInitDead = NULL;

	if ( ! pFnInitDead )
		pFnInitDead = (UFunction*) UObject::GObjObjects()->Data[ 56965 ];

	ANowPawn_execInitDead_Parms InitDead_Parms;

	pFnInitDead->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitDead, &InitDead_Parms, NULL );

	pFnInitDead->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.Detected
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::Detected ( )
{
	static UFunction* pFnDetected = NULL;

	if ( ! pFnDetected )
		pFnDetected = (UFunction*) UObject::GObjObjects()->Data[ 56964 ];

	ANowPawn_execDetected_Parms Detected_Parms;

	pFnDetected->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDetected, &Detected_Parms, NULL );

	pFnDetected->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.ReInitGmPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::ReInitGmPawn ( )
{
	static UFunction* pFnReInitGmPawn = NULL;

	if ( ! pFnReInitGmPawn )
		pFnReInitGmPawn = (UFunction*) UObject::GObjObjects()->Data[ 56963 ];

	ANowPawn_execReInitGmPawn_Parms ReInitGmPawn_Parms;

	pFnReInitGmPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReInitGmPawn, &ReInitGmPawn_Parms, NULL );

	pFnReInitGmPawn->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.PlayerInit
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            InitEnum                       ( CPF_Parm )

void ANowPawn::PlayerInit ( int InitEnum )
{
	static UFunction* pFnPlayerInit = NULL;

	if ( ! pFnPlayerInit )
		pFnPlayerInit = (UFunction*) UObject::GObjObjects()->Data[ 56961 ];

	ANowPawn_execPlayerInit_Parms PlayerInit_Parms;
	PlayerInit_Parms.InitEnum = InitEnum;

	pFnPlayerInit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayerInit, &PlayerInit_Parms, NULL );

	pFnPlayerInit->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SetGroundSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          New                            ( CPF_Parm )

void ANowPawn::SetGroundSpeed ( float New )
{
	static UFunction* pFnSetGroundSpeed = NULL;

	if ( ! pFnSetGroundSpeed )
		pFnSetGroundSpeed = (UFunction*) UObject::GObjObjects()->Data[ 56959 ];

	ANowPawn_execSetGroundSpeed_Parms SetGroundSpeed_Parms;
	SetGroundSpeed_Parms.New = New;

	pFnSetGroundSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGroundSpeed, &SetGroundSpeed_Parms, NULL );

	pFnSetGroundSpeed->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetAtlasType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowPawn::GetAtlasType ( )
{
	static UFunction* pFnGetAtlasType = NULL;

	if ( ! pFnGetAtlasType )
		pFnGetAtlasType = (UFunction*) UObject::GObjObjects()->Data[ 56957 ];

	ANowPawn_execGetAtlasType_Parms GetAtlasType_Parms;

	pFnGetAtlasType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasType, &GetAtlasType_Parms, NULL );

	pFnGetAtlasType->FunctionFlags |= 0x400;

	return GetAtlasType_Parms.ReturnValue;
};

// Function NowGame.NowPawn.addTitle
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sDisplayName                   ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bFormat                        ( CPF_Parm )
// int                            iTitle                         ( CPF_OptionalParm | CPF_Parm )

struct FString ANowPawn::addTitle ( struct FString sDisplayName, unsigned long bFormat, int iTitle )
{
	static UFunction* pFnaddTitle = NULL;

	if ( ! pFnaddTitle )
		pFnaddTitle = (UFunction*) UObject::GObjObjects()->Data[ 55967 ];

	ANowPawn_execaddTitle_Parms addTitle_Parms;
	memcpy ( &addTitle_Parms.sDisplayName, &sDisplayName, 0xC );
	addTitle_Parms.bFormat = bFormat;
	addTitle_Parms.iTitle = iTitle;

	pFnaddTitle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnaddTitle, &addTitle_Parms, NULL );

	pFnaddTitle->FunctionFlags |= 0x400;

	return addTitle_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetBodyType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowPawn::GetBodyType ( )
{
	static UFunction* pFnGetBodyType = NULL;

	if ( ! pFnGetBodyType )
		pFnGetBodyType = (UFunction*) UObject::GObjObjects()->Data[ 56952 ];

	ANowPawn_execGetBodyType_Parms GetBodyType_Parms;

	pFnGetBodyType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBodyType, &GetBodyType_Parms, NULL );

	pFnGetBodyType->FunctionFlags |= 0x400;

	return GetBodyType_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GotInitalData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::GotInitalData ( )
{
	static UFunction* pFnGotInitalData = NULL;

	if ( ! pFnGotInitalData )
		pFnGotInitalData = (UFunction*) UObject::GObjObjects()->Data[ 56950 ];

	ANowPawn_execGotInitalData_Parms GotInitalData_Parms;

	pFnGotInitalData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGotInitalData, &GotInitalData_Parms, NULL );

	pFnGotInitalData->FunctionFlags |= 0x400;

	return GotInitalData_Parms.ReturnValue;
};

// Function NowGame.NowPawn.TriggerHandleAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::TriggerHandleAction ( )
{
	static UFunction* pFnTriggerHandleAction = NULL;

	if ( ! pFnTriggerHandleAction )
		pFnTriggerHandleAction = (UFunction*) UObject::GObjObjects()->Data[ 56949 ];

	ANowPawn_execTriggerHandleAction_Parms TriggerHandleAction_Parms;

	pFnTriggerHandleAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerHandleAction, &TriggerHandleAction_Parms, NULL );

	pFnTriggerHandleAction->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetAndSetMount
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bInit                          ( CPF_OptionalParm | CPF_Parm )

bool ANowPawn::GetAndSetMount ( unsigned long bInit )
{
	static UFunction* pFnGetAndSetMount = NULL;

	if ( ! pFnGetAndSetMount )
		pFnGetAndSetMount = (UFunction*) UObject::GObjObjects()->Data[ 56946 ];

	ANowPawn_execGetAndSetMount_Parms GetAndSetMount_Parms;
	GetAndSetMount_Parms.bInit = bInit;

	pFnGetAndSetMount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetMount, &GetAndSetMount_Parms, NULL );

	pFnGetAndSetMount->FunctionFlags |= 0x400;

	return GetAndSetMount_Parms.ReturnValue;
};

// Function NowGame.NowPawn.PlayClientAnimation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 WhatAction                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowPawn::PlayClientAnimation ( struct FString WhatAction )
{
	static UFunction* pFnPlayClientAnimation = NULL;

	if ( ! pFnPlayClientAnimation )
		pFnPlayClientAnimation = (UFunction*) UObject::GObjObjects()->Data[ 56944 ];

	ANowPawn_execPlayClientAnimation_Parms PlayClientAnimation_Parms;
	memcpy ( &PlayClientAnimation_Parms.WhatAction, &WhatAction, 0xC );

	pFnPlayClientAnimation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayClientAnimation, &PlayClientAnimation_Parms, NULL );

	pFnPlayClientAnimation->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetAndSetState
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bInitialUpdate                 ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::GetAndSetState ( unsigned long bInitialUpdate )
{
	static UFunction* pFnGetAndSetState = NULL;

	if ( ! pFnGetAndSetState )
		pFnGetAndSetState = (UFunction*) UObject::GObjObjects()->Data[ 56942 ];

	ANowPawn_execGetAndSetState_Parms GetAndSetState_Parms;
	GetAndSetState_Parms.bInitialUpdate = bInitialUpdate;

	pFnGetAndSetState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetState, &GetAndSetState_Parms, NULL );

	pFnGetAndSetState->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.InitSpecialWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UStaticMesh_ContentInfo* WhatInfo                       ( CPF_Parm )
// class ANowStaticMeshActorWeapon* WhatWeapon                     ( CPF_Parm )

void ANowPawn::InitSpecialWeapon ( class UStaticMesh_ContentInfo* WhatInfo, class ANowStaticMeshActorWeapon* WhatWeapon )
{
	static UFunction* pFnInitSpecialWeapon = NULL;

	if ( ! pFnInitSpecialWeapon )
		pFnInitSpecialWeapon = (UFunction*) UObject::GObjObjects()->Data[ 56939 ];

	ANowPawn_execInitSpecialWeapon_Parms InitSpecialWeapon_Parms;
	InitSpecialWeapon_Parms.WhatInfo = WhatInfo;
	InitSpecialWeapon_Parms.WhatWeapon = WhatWeapon;

	pFnInitSpecialWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitSpecialWeapon, &InitSpecialWeapon_Parms, NULL );

	pFnInitSpecialWeapon->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetAndSetAnimations
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::GetAndSetAnimations ( )
{
	static UFunction* pFnGetAndSetAnimations = NULL;

	if ( ! pFnGetAndSetAnimations )
		pFnGetAndSetAnimations = (UFunction*) UObject::GObjObjects()->Data[ 56938 ];

	ANowPawn_execGetAndSetAnimations_Parms GetAndSetAnimations_Parms;

	pFnGetAndSetAnimations->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetAnimations, &GetAndSetAnimations_Parms, NULL );

	pFnGetAndSetAnimations->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetAvatarIDIntString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowPawn::GetAvatarIDIntString ( )
{
	static UFunction* pFnGetAvatarIDIntString = NULL;

	if ( ! pFnGetAvatarIDIntString )
		pFnGetAvatarIDIntString = (UFunction*) UObject::GObjObjects()->Data[ 53194 ];

	ANowPawn_execGetAvatarIDIntString_Parms GetAvatarIDIntString_Parms;

	pFnGetAvatarIDIntString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAvatarIDIntString, &GetAvatarIDIntString_Parms, NULL );

	pFnGetAvatarIDIntString->FunctionFlags |= 0x400;

	return GetAvatarIDIntString_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetArmorEnc
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPawn::GetArmorEnc ( )
{
	static UFunction* pFnGetArmorEnc = NULL;

	if ( ! pFnGetArmorEnc )
		pFnGetArmorEnc = (UFunction*) UObject::GObjObjects()->Data[ 56936 ];

	ANowPawn_execGetArmorEnc_Parms GetArmorEnc_Parms;

	pFnGetArmorEnc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetArmorEnc, &GetArmorEnc_Parms, NULL );

	pFnGetArmorEnc->FunctionFlags |= 0x400;

	return GetArmorEnc_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetAndSetAcronym
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::GetAndSetAcronym ( )
{
	static UFunction* pFnGetAndSetAcronym = NULL;

	if ( ! pFnGetAndSetAcronym )
		pFnGetAndSetAcronym = (UFunction*) UObject::GObjObjects()->Data[ 56935 ];

	ANowPawn_execGetAndSetAcronym_Parms GetAndSetAcronym_Parms;

	pFnGetAndSetAcronym->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetAcronym, &GetAndSetAcronym_Parms, NULL );

	pFnGetAndSetAcronym->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetGuildFlag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pOther                         ( CPF_Parm )

int ANowPawn::GetGuildFlag ( class AActor* pOther )
{
	static UFunction* pFnGetGuildFlag = NULL;

	if ( ! pFnGetGuildFlag )
		pFnGetGuildFlag = (UFunction*) UObject::GObjObjects()->Data[ 46053 ];

	ANowPawn_execGetGuildFlag_Parms GetGuildFlag_Parms;
	GetGuildFlag_Parms.pOther = pOther;

	pFnGetGuildFlag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuildFlag, &GetGuildFlag_Parms, NULL );

	pFnGetGuildFlag->FunctionFlags |= 0x400;

	return GetGuildFlag_Parms.ReturnValue;
};

// Function NowGame.NowPawn.ReinitWeapons
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::ReinitWeapons ( )
{
	static UFunction* pFnReinitWeapons = NULL;

	if ( ! pFnReinitWeapons )
		pFnReinitWeapons = (UFunction*) UObject::GObjObjects()->Data[ 56933 ];

	ANowPawn_execReinitWeapons_Parms ReinitWeapons_Parms;

	pFnReinitWeapons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReinitWeapons, &ReinitWeapons_Parms, NULL );

	pFnReinitWeapons->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetAndCreateWeapons
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::GetAndCreateWeapons ( )
{
	static UFunction* pFnGetAndCreateWeapons = NULL;

	if ( ! pFnGetAndCreateWeapons )
		pFnGetAndCreateWeapons = (UFunction*) UObject::GObjObjects()->Data[ 56932 ];

	ANowPawn_execGetAndCreateWeapons_Parms GetAndCreateWeapons_Parms;

	pFnGetAndCreateWeapons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateWeapons, &GetAndCreateWeapons_Parms, NULL );

	pFnGetAndCreateWeapons->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.UpdateCharacterFace
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::UpdateCharacterFace ( )
{
	static UFunction* pFnUpdateCharacterFace = NULL;

	if ( ! pFnUpdateCharacterFace )
		pFnUpdateCharacterFace = (UFunction*) UObject::GObjObjects()->Data[ 56931 ];

	ANowPawn_execUpdateCharacterFace_Parms UpdateCharacterFace_Parms;

	pFnUpdateCharacterFace->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCharacterFace, &UpdateCharacterFace_Parms, NULL );

	pFnUpdateCharacterFace->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.TriggerDelayedArmorUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::TriggerDelayedArmorUpdate ( )
{
	static UFunction* pFnTriggerDelayedArmorUpdate = NULL;

	if ( ! pFnTriggerDelayedArmorUpdate )
		pFnTriggerDelayedArmorUpdate = (UFunction*) UObject::GObjObjects()->Data[ 56930 ];

	ANowPawn_execTriggerDelayedArmorUpdate_Parms TriggerDelayedArmorUpdate_Parms;

	pFnTriggerDelayedArmorUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerDelayedArmorUpdate, &TriggerDelayedArmorUpdate_Parms, NULL );

	pFnTriggerDelayedArmorUpdate->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.UpdateCharacterArmor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::UpdateCharacterArmor ( )
{
	static UFunction* pFnUpdateCharacterArmor = NULL;

	if ( ! pFnUpdateCharacterArmor )
		pFnUpdateCharacterArmor = (UFunction*) UObject::GObjObjects()->Data[ 56929 ];

	ANowPawn_execUpdateCharacterArmor_Parms UpdateCharacterArmor_Parms;

	pFnUpdateCharacterArmor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCharacterArmor, &UpdateCharacterArmor_Parms, NULL );

	pFnUpdateCharacterArmor->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.UpdateMagicMeshFX
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::UpdateMagicMeshFX ( )
{
	static UFunction* pFnUpdateMagicMeshFX = NULL;

	if ( ! pFnUpdateMagicMeshFX )
		pFnUpdateMagicMeshFX = (UFunction*) UObject::GObjObjects()->Data[ 56928 ];

	ANowPawn_execUpdateMagicMeshFX_Parms UpdateMagicMeshFX_Parms;

	pFnUpdateMagicMeshFX->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateMagicMeshFX, &UpdateMagicMeshFX_Parms, NULL );

	pFnUpdateMagicMeshFX->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetAtlasChatName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowPawn::GetAtlasChatName ( )
{
	static UFunction* pFnGetAtlasChatName = NULL;

	if ( ! pFnGetAtlasChatName )
		pFnGetAtlasChatName = (UFunction*) UObject::GObjObjects()->Data[ 45861 ];

	ANowPawn_execGetAtlasChatName_Parms GetAtlasChatName_Parms;

	pFnGetAtlasChatName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasChatName, &GetAtlasChatName_Parms, NULL );

	pFnGetAtlasChatName->FunctionFlags |= 0x400;

	return GetAtlasChatName_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetDisplayName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowPawn::GetDisplayName ( )
{
	static UFunction* pFnGetDisplayName = NULL;

	if ( ! pFnGetDisplayName )
		pFnGetDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 51947 ];

	ANowPawn_execGetDisplayName_Parms GetDisplayName_Parms;

	pFnGetDisplayName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayName, &GetDisplayName_Parms, NULL );

	pFnGetDisplayName->FunctionFlags |= 0x400;

	return GetDisplayName_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetAtlasFullName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowPawn::GetAtlasFullName ( )
{
	static UFunction* pFnGetAtlasFullName = NULL;

	if ( ! pFnGetAtlasFullName )
		pFnGetAtlasFullName = (UFunction*) UObject::GObjObjects()->Data[ 56926 ];

	ANowPawn_execGetAtlasFullName_Parms GetAtlasFullName_Parms;

	pFnGetAtlasFullName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasFullName, &GetAtlasFullName_Parms, NULL );

	pFnGetAtlasFullName->FunctionFlags |= 0x400;

	return GetAtlasFullName_Parms.ReturnValue;
};

// Function NowGame.NowPawn.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowPawn::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 56923 ];

	ANowPawn_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowPawn.TakeClientDamage
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            HowMuch                        ( CPF_Parm )
// unsigned long                  bOption                        ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::TakeClientDamage ( int HowMuch, unsigned long bOption )
{
	static UFunction* pFnTakeClientDamage = NULL;

	if ( ! pFnTakeClientDamage )
		pFnTakeClientDamage = (UFunction*) UObject::GObjObjects()->Data[ 56920 ];

	ANowPawn_execTakeClientDamage_Parms TakeClientDamage_Parms;
	TakeClientDamage_Parms.HowMuch = HowMuch;
	TakeClientDamage_Parms.bOption = bOption;

	pFnTakeClientDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTakeClientDamage, &TakeClientDamage_Parms, NULL );

	pFnTakeClientDamage->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.CheckForFalling
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowPawn::CheckForFalling ( float fDeltaTime )
{
	static UFunction* pFnCheckForFalling = NULL;

	if ( ! pFnCheckForFalling )
		pFnCheckForFalling = (UFunction*) UObject::GObjObjects()->Data[ 56918 ];

	ANowPawn_execCheckForFalling_Parms CheckForFalling_Parms;
	CheckForFalling_Parms.fDeltaTime = fDeltaTime;

	pFnCheckForFalling->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckForFalling, &CheckForFalling_Parms, NULL );

	pFnCheckForFalling->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SetBodyPitch
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            NewRemoteViewPitch             ( CPF_Parm )

void ANowPawn::SetBodyPitch ( int NewRemoteViewPitch )
{
	static UFunction* pFnSetBodyPitch = NULL;

	if ( ! pFnSetBodyPitch )
		pFnSetBodyPitch = (UFunction*) UObject::GObjObjects()->Data[ 56916 ];

	ANowPawn_execSetBodyPitch_Parms SetBodyPitch_Parms;
	SetBodyPitch_Parms.NewRemoteViewPitch = NewRemoteViewPitch;

	pFnSetBodyPitch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBodyPitch, &SetBodyPitch_Parms, NULL );

	pFnSetBodyPitch->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SetAwareDist
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            newDistance                    ( CPF_Parm )

void ANowPawn::SetAwareDist ( int newDistance )
{
	static UFunction* pFnSetAwareDist = NULL;

	if ( ! pFnSetAwareDist )
		pFnSetAwareDist = (UFunction*) UObject::GObjObjects()->Data[ 56914 ];

	ANowPawn_execSetAwareDist_Parms SetAwareDist_Parms;
	SetAwareDist_Parms.newDistance = newDistance;

	pFnSetAwareDist->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAwareDist, &SetAwareDist_Parms, NULL );

	pFnSetAwareDist->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.Emote
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 WhatEmote                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowPawn::Emote ( struct FString WhatEmote )
{
	static UFunction* pFnEmote = NULL;

	if ( ! pFnEmote )
		pFnEmote = (UFunction*) UObject::GObjObjects()->Data[ 56912 ];

	ANowPawn_execEmote_Parms Emote_Parms;
	memcpy ( &Emote_Parms.WhatEmote, &WhatEmote, 0xC );

	pFnEmote->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEmote, &Emote_Parms, NULL );

	pFnEmote->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoSebbePwns
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoSebbePwns ( )
{
	static UFunction* pFnDoSebbePwns = NULL;

	if ( ! pFnDoSebbePwns )
		pFnDoSebbePwns = (UFunction*) UObject::GObjObjects()->Data[ 56911 ];

	ANowPawn_execDoSebbePwns_Parms DoSebbePwns_Parms;

	pFnDoSebbePwns->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSebbePwns, &DoSebbePwns_Parms, NULL );

	pFnDoSebbePwns->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoKillMe
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoKillMe ( )
{
	static UFunction* pFnDoKillMe = NULL;

	if ( ! pFnDoKillMe )
		pFnDoKillMe = (UFunction*) UObject::GObjObjects()->Data[ 56910 ];

	ANowPawn_execDoKillMe_Parms DoKillMe_Parms;

	pFnDoKillMe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoKillMe, &DoKillMe_Parms, NULL );

	pFnDoKillMe->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoStartMagicBehavior
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoStartMagicBehavior ( )
{
	static UFunction* pFnDoStartMagicBehavior = NULL;

	if ( ! pFnDoStartMagicBehavior )
		pFnDoStartMagicBehavior = (UFunction*) UObject::GObjObjects()->Data[ 56909 ];

	ANowPawn_execDoStartMagicBehavior_Parms DoStartMagicBehavior_Parms;

	pFnDoStartMagicBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoStartMagicBehavior, &DoStartMagicBehavior_Parms, NULL );

	pFnDoStartMagicBehavior->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoSpellReleaseAoECheat
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoSpellReleaseAoECheat ( )
{
	static UFunction* pFnDoSpellReleaseAoECheat = NULL;

	if ( ! pFnDoSpellReleaseAoECheat )
		pFnDoSpellReleaseAoECheat = (UFunction*) UObject::GObjObjects()->Data[ 56908 ];

	ANowPawn_execDoSpellReleaseAoECheat_Parms DoSpellReleaseAoECheat_Parms;

	pFnDoSpellReleaseAoECheat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSpellReleaseAoECheat, &DoSpellReleaseAoECheat_Parms, NULL );

	pFnDoSpellReleaseAoECheat->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoSpellReleaseAoE
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )
// int                            Z                              ( CPF_Parm )

void ANowPawn::DoSpellReleaseAoE ( int X, int Y, int Z )
{
	static UFunction* pFnDoSpellReleaseAoE = NULL;

	if ( ! pFnDoSpellReleaseAoE )
		pFnDoSpellReleaseAoE = (UFunction*) UObject::GObjObjects()->Data[ 56904 ];

	ANowPawn_execDoSpellReleaseAoE_Parms DoSpellReleaseAoE_Parms;
	DoSpellReleaseAoE_Parms.X = X;
	DoSpellReleaseAoE_Parms.Y = Y;
	DoSpellReleaseAoE_Parms.Z = Z;

	pFnDoSpellReleaseAoE->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSpellReleaseAoE, &DoSpellReleaseAoE_Parms, NULL );

	pFnDoSpellReleaseAoE->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoSpellReleaseSelfST
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoSpellReleaseSelfST ( )
{
	static UFunction* pFnDoSpellReleaseSelfST = NULL;

	if ( ! pFnDoSpellReleaseSelfST )
		pFnDoSpellReleaseSelfST = (UFunction*) UObject::GObjObjects()->Data[ 56903 ];

	ANowPawn_execDoSpellReleaseSelfST_Parms DoSpellReleaseSelfST_Parms;

	pFnDoSpellReleaseSelfST->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSpellReleaseSelfST, &DoSpellReleaseSelfST_Parms, NULL );

	pFnDoSpellReleaseSelfST->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoSpellReleaseST
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  HitActor                       ( CPF_Parm )

void ANowPawn::DoSpellReleaseST ( class AActor* HitActor )
{
	static UFunction* pFnDoSpellReleaseST = NULL;

	if ( ! pFnDoSpellReleaseST )
		pFnDoSpellReleaseST = (UFunction*) UObject::GObjObjects()->Data[ 56901 ];

	ANowPawn_execDoSpellReleaseST_Parms DoSpellReleaseST_Parms;
	DoSpellReleaseST_Parms.HitActor = HitActor;

	pFnDoSpellReleaseST->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSpellReleaseST, &DoSpellReleaseST_Parms, NULL );

	pFnDoSpellReleaseST->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoSpellCancelCharge
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoSpellCancelCharge ( )
{
	static UFunction* pFnDoSpellCancelCharge = NULL;

	if ( ! pFnDoSpellCancelCharge )
		pFnDoSpellCancelCharge = (UFunction*) UObject::GObjObjects()->Data[ 56900 ];

	ANowPawn_execDoSpellCancelCharge_Parms DoSpellCancelCharge_Parms;

	pFnDoSpellCancelCharge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSpellCancelCharge, &DoSpellCancelCharge_Parms, NULL );

	pFnDoSpellCancelCharge->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetSpellListSize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            magicSchool                    ( CPF_Parm )

int ANowPawn::GetSpellListSize ( int magicSchool )
{
	static UFunction* pFnGetSpellListSize = NULL;

	if ( ! pFnGetSpellListSize )
		pFnGetSpellListSize = (UFunction*) UObject::GObjObjects()->Data[ 56897 ];

	ANowPawn_execGetSpellListSize_Parms GetSpellListSize_Parms;
	GetSpellListSize_Parms.magicSchool = magicSchool;

	pFnGetSpellListSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpellListSize, &GetSpellListSize_Parms, NULL );

	pFnGetSpellListSize->FunctionFlags |= 0x400;

	return GetSpellListSize_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetSpellBitArrayForSchool
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            magicSchool                    ( CPF_Parm )

int ANowPawn::GetSpellBitArrayForSchool ( int magicSchool )
{
	static UFunction* pFnGetSpellBitArrayForSchool = NULL;

	if ( ! pFnGetSpellBitArrayForSchool )
		pFnGetSpellBitArrayForSchool = (UFunction*) UObject::GObjObjects()->Data[ 56894 ];

	ANowPawn_execGetSpellBitArrayForSchool_Parms GetSpellBitArrayForSchool_Parms;
	GetSpellBitArrayForSchool_Parms.magicSchool = magicSchool;

	pFnGetSpellBitArrayForSchool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpellBitArrayForSchool, &GetSpellBitArrayForSchool_Parms, NULL );

	pFnGetSpellBitArrayForSchool->FunctionFlags |= 0x400;

	return GetSpellBitArrayForSchool_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetSpellContentInfoOfSchool
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USpellEffect_ContentInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SpellID                        ( CPF_Parm )
// int                            magicSchool                    ( CPF_Parm )

class USpellEffect_ContentInfo* ANowPawn::GetSpellContentInfoOfSchool ( int SpellID, int magicSchool )
{
	static UFunction* pFnGetSpellContentInfoOfSchool = NULL;

	if ( ! pFnGetSpellContentInfoOfSchool )
		pFnGetSpellContentInfoOfSchool = (UFunction*) UObject::GObjObjects()->Data[ 56890 ];

	ANowPawn_execGetSpellContentInfoOfSchool_Parms GetSpellContentInfoOfSchool_Parms;
	GetSpellContentInfoOfSchool_Parms.SpellID = SpellID;
	GetSpellContentInfoOfSchool_Parms.magicSchool = magicSchool;

	pFnGetSpellContentInfoOfSchool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpellContentInfoOfSchool, &GetSpellContentInfoOfSchool_Parms, NULL );

	pFnGetSpellContentInfoOfSchool->FunctionFlags |= 0x400;

	return GetSpellContentInfoOfSchool_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetSpellContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USpellEffect_ContentInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SpellID                        ( CPF_Parm )

class USpellEffect_ContentInfo* ANowPawn::GetSpellContentInfo ( int SpellID )
{
	static UFunction* pFnGetSpellContentInfo = NULL;

	if ( ! pFnGetSpellContentInfo )
		pFnGetSpellContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 47185 ];

	ANowPawn_execGetSpellContentInfo_Parms GetSpellContentInfo_Parms;
	GetSpellContentInfo_Parms.SpellID = SpellID;

	pFnGetSpellContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpellContentInfo, &GetSpellContentInfo_Parms, NULL );

	pFnGetSpellContentInfo->FunctionFlags |= 0x400;

	return GetSpellContentInfo_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetSpellContentInfoPath
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            SpellID                        ( CPF_Parm )

struct FString ANowPawn::GetSpellContentInfoPath ( int SpellID )
{
	static UFunction* pFnGetSpellContentInfoPath = NULL;

	if ( ! pFnGetSpellContentInfoPath )
		pFnGetSpellContentInfoPath = (UFunction*) UObject::GObjObjects()->Data[ 56886 ];

	ANowPawn_execGetSpellContentInfoPath_Parms GetSpellContentInfoPath_Parms;
	GetSpellContentInfoPath_Parms.SpellID = SpellID;

	pFnGetSpellContentInfoPath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpellContentInfoPath, &GetSpellContentInfoPath_Parms, NULL );

	pFnGetSpellContentInfoPath->FunctionFlags |= 0x400;

	return GetSpellContentInfoPath_Parms.ReturnValue;
};

// Function NowGame.NowPawn.DoSpellCharge
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )

void ANowPawn::DoSpellCharge ( int SpellID )
{
	static UFunction* pFnDoSpellCharge = NULL;

	if ( ! pFnDoSpellCharge )
		pFnDoSpellCharge = (UFunction*) UObject::GObjObjects()->Data[ 56884 ];

	ANowPawn_execDoSpellCharge_Parms DoSpellCharge_Parms;
	DoSpellCharge_Parms.SpellID = SpellID;

	pFnDoSpellCharge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSpellCharge, &DoSpellCharge_Parms, NULL );

	pFnDoSpellCharge->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoServerConsole
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoServerConsole ( )
{
	static UFunction* pFnDoServerConsole = NULL;

	if ( ! pFnDoServerConsole )
		pFnDoServerConsole = (UFunction*) UObject::GObjObjects()->Data[ 56883 ];

	ANowPawn_execDoServerConsole_Parms DoServerConsole_Parms;

	pFnDoServerConsole->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoServerConsole, &DoServerConsole_Parms, NULL );

	pFnDoServerConsole->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.IsEquipSlotEmpty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 equipSlotName                  ( CPF_Parm | CPF_NeedCtorLink )

bool ANowPawn::IsEquipSlotEmpty ( struct FString equipSlotName )
{
	static UFunction* pFnIsEquipSlotEmpty = NULL;

	if ( ! pFnIsEquipSlotEmpty )
		pFnIsEquipSlotEmpty = (UFunction*) UObject::GObjObjects()->Data[ 56880 ];

	ANowPawn_execIsEquipSlotEmpty_Parms IsEquipSlotEmpty_Parms;
	memcpy ( &IsEquipSlotEmpty_Parms.equipSlotName, &equipSlotName, 0xC );

	pFnIsEquipSlotEmpty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsEquipSlotEmpty, &IsEquipSlotEmpty_Parms, NULL );

	pFnIsEquipSlotEmpty->FunctionFlags |= 0x400;

	return IsEquipSlotEmpty_Parms.ReturnValue;
};

// Function NowGame.NowPawn.getAvatarFlag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowPawn::getAvatarFlag ( )
{
	static UFunction* pFngetAvatarFlag = NULL;

	if ( ! pFngetAvatarFlag )
		pFngetAvatarFlag = (UFunction*) UObject::GObjObjects()->Data[ 56878 ];

	ANowPawn_execgetAvatarFlag_Parms getAvatarFlag_Parms;

	pFngetAvatarFlag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetAvatarFlag, &getAvatarFlag_Parms, NULL );

	pFngetAvatarFlag->FunctionFlags |= 0x400;

	return getAvatarFlag_Parms.ReturnValue;
};

// Function NowGame.NowPawn.callSetLocalFlagDelegate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::callSetLocalFlagDelegate ( )
{
	static UFunction* pFncallSetLocalFlagDelegate = NULL;

	if ( ! pFncallSetLocalFlagDelegate )
		pFncallSetLocalFlagDelegate = (UFunction*) UObject::GObjObjects()->Data[ 56877 ];

	ANowPawn_execcallSetLocalFlagDelegate_Parms callSetLocalFlagDelegate_Parms;

	pFncallSetLocalFlagDelegate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFncallSetLocalFlagDelegate, &callSetLocalFlagDelegate_Parms, NULL );

	pFncallSetLocalFlagDelegate->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.KnockDown
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                aPawn                          ( CPF_Parm )

void ANowPawn::KnockDown ( class ANowPawn* aPawn )
{
	static UFunction* pFnKnockDown = NULL;

	if ( ! pFnKnockDown )
		pFnKnockDown = (UFunction*) UObject::GObjObjects()->Data[ 56875 ];

	ANowPawn_execKnockDown_Parms KnockDown_Parms;
	KnockDown_Parms.aPawn = aPawn;

	pFnKnockDown->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKnockDown, &KnockDown_Parms, NULL );

	pFnKnockDown->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SendConsoleCommand
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Cmd                            ( CPF_Parm | CPF_NeedCtorLink )

void ANowPawn::SendConsoleCommand ( struct FString Cmd )
{
	static UFunction* pFnSendConsoleCommand = NULL;

	if ( ! pFnSendConsoleCommand )
		pFnSendConsoleCommand = (UFunction*) UObject::GObjObjects()->Data[ 56873 ];

	ANowPawn_execSendConsoleCommand_Parms SendConsoleCommand_Parms;
	memcpy ( &SendConsoleCommand_Parms.Cmd, &Cmd, 0xC );

	pFnSendConsoleCommand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendConsoleCommand, &SendConsoleCommand_Parms, NULL );

	pFnSendConsoleCommand->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.LeaveMount
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::LeaveMount ( )
{
	static UFunction* pFnLeaveMount = NULL;

	if ( ! pFnLeaveMount )
		pFnLeaveMount = (UFunction*) UObject::GObjObjects()->Data[ 56872 ];

	ANowPawn_execLeaveMount_Parms LeaveMount_Parms;

	pFnLeaveMount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLeaveMount, &LeaveMount_Parms, NULL );

	pFnLeaveMount->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetUAtlasComponent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UAtlasAvatarComponent*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )

class UAtlasAvatarComponent* ANowPawn::GetUAtlasComponent ( )
{
	static UFunction* pFnGetUAtlasComponent = NULL;

	if ( ! pFnGetUAtlasComponent )
		pFnGetUAtlasComponent = (UFunction*) UObject::GObjObjects()->Data[ 56870 ];

	ANowPawn_execGetUAtlasComponent_Parms GetUAtlasComponent_Parms;

	pFnGetUAtlasComponent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUAtlasComponent, &GetUAtlasComponent_Parms, NULL );

	pFnGetUAtlasComponent->FunctionFlags |= 0x400;

	return GetUAtlasComponent_Parms.ReturnValue;
};

// Function NowGame.NowPawn.NowDoRangedCancelCharge
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::NowDoRangedCancelCharge ( )
{
	static UFunction* pFnNowDoRangedCancelCharge = NULL;

	if ( ! pFnNowDoRangedCancelCharge )
		pFnNowDoRangedCancelCharge = (UFunction*) UObject::GObjObjects()->Data[ 56869 ];

	ANowPawn_execNowDoRangedCancelCharge_Parms NowDoRangedCancelCharge_Parms;

	pFnNowDoRangedCancelCharge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNowDoRangedCancelCharge, &NowDoRangedCancelCharge_Parms, NULL );

	pFnNowDoRangedCancelCharge->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.NowDoRangedDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            lastHitBoneID                  ( CPF_Parm )
// int                            TargetFlag                     ( CPF_Parm )
// float                          bowRange                       ( CPF_Parm )
// class AActor*                  Target                         ( CPF_Parm )

void ANowPawn::NowDoRangedDamage ( int lastHitBoneID, int TargetFlag, float bowRange, class AActor* Target )
{
	static UFunction* pFnNowDoRangedDamage = NULL;

	if ( ! pFnNowDoRangedDamage )
		pFnNowDoRangedDamage = (UFunction*) UObject::GObjObjects()->Data[ 56864 ];

	ANowPawn_execNowDoRangedDamage_Parms NowDoRangedDamage_Parms;
	NowDoRangedDamage_Parms.lastHitBoneID = lastHitBoneID;
	NowDoRangedDamage_Parms.TargetFlag = TargetFlag;
	NowDoRangedDamage_Parms.bowRange = bowRange;
	NowDoRangedDamage_Parms.Target = Target;

	pFnNowDoRangedDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNowDoRangedDamage, &NowDoRangedDamage_Parms, NULL );

	pFnNowDoRangedDamage->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.NowDoRangedStopFire
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::NowDoRangedStopFire ( )
{
	static UFunction* pFnNowDoRangedStopFire = NULL;

	if ( ! pFnNowDoRangedStopFire )
		pFnNowDoRangedStopFire = (UFunction*) UObject::GObjObjects()->Data[ 56863 ];

	ANowPawn_execNowDoRangedStopFire_Parms NowDoRangedStopFire_Parms;

	pFnNowDoRangedStopFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNowDoRangedStopFire, &NowDoRangedStopFire_Parms, NULL );

	pFnNowDoRangedStopFire->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.NowDoRangedStartFire
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::NowDoRangedStartFire ( )
{
	static UFunction* pFnNowDoRangedStartFire = NULL;

	if ( ! pFnNowDoRangedStartFire )
		pFnNowDoRangedStartFire = (UFunction*) UObject::GObjObjects()->Data[ 56862 ];

	ANowPawn_execNowDoRangedStartFire_Parms NowDoRangedStartFire_Parms;

	pFnNowDoRangedStartFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNowDoRangedStartFire, &NowDoRangedStartFire_Parms, NULL );

	pFnNowDoRangedStartFire->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.isAmmoSlotEmpty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::isAmmoSlotEmpty ( )
{
	static UFunction* pFnisAmmoSlotEmpty = NULL;

	if ( ! pFnisAmmoSlotEmpty )
		pFnisAmmoSlotEmpty = (UFunction*) UObject::GObjObjects()->Data[ 47685 ];

	ANowPawn_execisAmmoSlotEmpty_Parms isAmmoSlotEmpty_Parms;

	pFnisAmmoSlotEmpty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisAmmoSlotEmpty, &isAmmoSlotEmpty_Parms, NULL );

	pFnisAmmoSlotEmpty->FunctionFlags |= 0x400;

	return isAmmoSlotEmpty_Parms.ReturnValue;
};

// Function NowGame.NowPawn.SendLeaveCombatMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::SendLeaveCombatMode ( )
{
	static UFunction* pFnSendLeaveCombatMode = NULL;

	if ( ! pFnSendLeaveCombatMode )
		pFnSendLeaveCombatMode = (UFunction*) UObject::GObjObjects()->Data[ 56861 ];

	ANowPawn_execSendLeaveCombatMode_Parms SendLeaveCombatMode_Parms;

	pFnSendLeaveCombatMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendLeaveCombatMode, &SendLeaveCombatMode_Parms, NULL );

	pFnSendLeaveCombatMode->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatCancel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::MeleeCombatCancel ( )
{
	static UFunction* pFnMeleeCombatCancel = NULL;

	if ( ! pFnMeleeCombatCancel )
		pFnMeleeCombatCancel = (UFunction*) UObject::GObjObjects()->Data[ 56860 ];

	ANowPawn_execMeleeCombatCancel_Parms MeleeCombatCancel_Parms;

	pFnMeleeCombatCancel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatCancel, &MeleeCombatCancel_Parms, NULL );

	pFnMeleeCombatCancel->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatMoveDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// int                            MoveType                       ( CPF_Parm )
// int                            HitPart                        ( CPF_Parm )
// int                            Force                          ( CPF_Parm )
// unsigned long                  HandleHit                      ( CPF_Parm )

void ANowPawn::MeleeCombatMoveDamage ( class AActor* Target, int MoveType, int HitPart, int Force, unsigned long HandleHit )
{
	static UFunction* pFnMeleeCombatMoveDamage = NULL;

	if ( ! pFnMeleeCombatMoveDamage )
		pFnMeleeCombatMoveDamage = (UFunction*) UObject::GObjObjects()->Data[ 56854 ];

	ANowPawn_execMeleeCombatMoveDamage_Parms MeleeCombatMoveDamage_Parms;
	MeleeCombatMoveDamage_Parms.Target = Target;
	MeleeCombatMoveDamage_Parms.MoveType = MoveType;
	MeleeCombatMoveDamage_Parms.HitPart = HitPart;
	MeleeCombatMoveDamage_Parms.Force = Force;
	MeleeCombatMoveDamage_Parms.HandleHit = HandleHit;

	pFnMeleeCombatMoveDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatMoveDamage, &MeleeCombatMoveDamage_Parms, NULL );

	pFnMeleeCombatMoveDamage->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatMoveRelease
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            MoveType                       ( CPF_Parm )

void ANowPawn::MeleeCombatMoveRelease ( int MoveType )
{
	static UFunction* pFnMeleeCombatMoveRelease = NULL;

	if ( ! pFnMeleeCombatMoveRelease )
		pFnMeleeCombatMoveRelease = (UFunction*) UObject::GObjObjects()->Data[ 56852 ];

	ANowPawn_execMeleeCombatMoveRelease_Parms MeleeCombatMoveRelease_Parms;
	MeleeCombatMoveRelease_Parms.MoveType = MoveType;

	pFnMeleeCombatMoveRelease->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatMoveRelease, &MeleeCombatMoveRelease_Parms, NULL );

	pFnMeleeCombatMoveRelease->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// unsigned char                  MoveType                       ( CPF_Parm )
// int                            HitPart                        ( CPF_Parm )
// int                            Power                          ( CPF_Parm )
// int                            Force                          ( CPF_Parm )
// unsigned long                  HandleHit                      ( CPF_Parm )

void ANowPawn::MeleeCombatDamage ( class AActor* Target, unsigned char MoveType, int HitPart, int Power, int Force, unsigned long HandleHit )
{
	static UFunction* pFnMeleeCombatDamage = NULL;

	if ( ! pFnMeleeCombatDamage )
		pFnMeleeCombatDamage = (UFunction*) UObject::GObjObjects()->Data[ 56845 ];

	ANowPawn_execMeleeCombatDamage_Parms MeleeCombatDamage_Parms;
	MeleeCombatDamage_Parms.Target = Target;
	MeleeCombatDamage_Parms.MoveType = MoveType;
	MeleeCombatDamage_Parms.HitPart = HitPart;
	MeleeCombatDamage_Parms.Power = Power;
	MeleeCombatDamage_Parms.Force = Force;
	MeleeCombatDamage_Parms.HandleHit = HandleHit;

	pFnMeleeCombatDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatDamage, &MeleeCombatDamage_Parms, NULL );

	pFnMeleeCombatDamage->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatRelease
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  MoveType                       ( CPF_Parm )

void ANowPawn::MeleeCombatRelease ( unsigned char MoveType )
{
	static UFunction* pFnMeleeCombatRelease = NULL;

	if ( ! pFnMeleeCombatRelease )
		pFnMeleeCombatRelease = (UFunction*) UObject::GObjObjects()->Data[ 56843 ];

	ANowPawn_execMeleeCombatRelease_Parms MeleeCombatRelease_Parms;
	MeleeCombatRelease_Parms.MoveType = MoveType;

	pFnMeleeCombatRelease->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatRelease, &MeleeCombatRelease_Parms, NULL );

	pFnMeleeCombatRelease->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatCharge
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  MoveType                       ( CPF_Parm )
// unsigned long                  bCounter                       ( CPF_Parm )

void ANowPawn::MeleeCombatCharge ( unsigned char MoveType, unsigned long bCounter )
{
	static UFunction* pFnMeleeCombatCharge = NULL;

	if ( ! pFnMeleeCombatCharge )
		pFnMeleeCombatCharge = (UFunction*) UObject::GObjObjects()->Data[ 56840 ];

	ANowPawn_execMeleeCombatCharge_Parms MeleeCombatCharge_Parms;
	MeleeCombatCharge_Parms.MoveType = MoveType;
	MeleeCombatCharge_Parms.bCounter = bCounter;

	pFnMeleeCombatCharge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatCharge, &MeleeCombatCharge_Parms, NULL );

	pFnMeleeCombatCharge->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatBlock
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )
// unsigned char                  MoveType                       ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::MeleeCombatBlock ( unsigned long bOn, unsigned char MoveType )
{
	static UFunction* pFnMeleeCombatBlock = NULL;

	if ( ! pFnMeleeCombatBlock )
		pFnMeleeCombatBlock = (UFunction*) UObject::GObjObjects()->Data[ 56837 ];

	ANowPawn_execMeleeCombatBlock_Parms MeleeCombatBlock_Parms;
	MeleeCombatBlock_Parms.bOn = bOn;
	MeleeCombatBlock_Parms.MoveType = MoveType;

	pFnMeleeCombatBlock->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatBlock, &MeleeCombatBlock_Parms, NULL );

	pFnMeleeCombatBlock->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatShieldBash
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Target                         ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::MeleeCombatShieldBash ( class AActor* Target )
{
	static UFunction* pFnMeleeCombatShieldBash = NULL;

	if ( ! pFnMeleeCombatShieldBash )
		pFnMeleeCombatShieldBash = (UFunction*) UObject::GObjObjects()->Data[ 56835 ];

	ANowPawn_execMeleeCombatShieldBash_Parms MeleeCombatShieldBash_Parms;
	MeleeCombatShieldBash_Parms.Target = Target;

	pFnMeleeCombatShieldBash->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatShieldBash, &MeleeCombatShieldBash_Parms, NULL );

	pFnMeleeCombatShieldBash->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SendUpdatedGUISettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 updatedSetting                 ( CPF_Parm | CPF_NeedCtorLink )

void ANowPawn::SendUpdatedGUISettings ( struct FString updatedSetting )
{
	static UFunction* pFnSendUpdatedGUISettings = NULL;

	if ( ! pFnSendUpdatedGUISettings )
		pFnSendUpdatedGUISettings = (UFunction*) UObject::GObjObjects()->Data[ 56833 ];

	ANowPawn_execSendUpdatedGUISettings_Parms SendUpdatedGUISettings_Parms;
	memcpy ( &SendUpdatedGUISettings_Parms.updatedSetting, &updatedSetting, 0xC );

	pFnSendUpdatedGUISettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendUpdatedGUISettings, &SendUpdatedGUISettings_Parms, NULL );

	pFnSendUpdatedGUISettings->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SpellCharge
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )

void ANowPawn::SpellCharge ( int SpellID )
{
	static UFunction* pFnSpellCharge = NULL;

	if ( ! pFnSpellCharge )
		pFnSpellCharge = (UFunction*) UObject::GObjObjects()->Data[ 56831 ];

	ANowPawn_execSpellCharge_Parms SpellCharge_Parms;
	SpellCharge_Parms.SpellID = SpellID;

	pFnSpellCharge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpellCharge, &SpellCharge_Parms, NULL );

	pFnSpellCharge->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SpellReleaseTraced
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )

void ANowPawn::SpellReleaseTraced ( int SpellID )
{
	static UFunction* pFnSpellReleaseTraced = NULL;

	if ( ! pFnSpellReleaseTraced )
		pFnSpellReleaseTraced = (UFunction*) UObject::GObjObjects()->Data[ 56829 ];

	ANowPawn_execSpellReleaseTraced_Parms SpellReleaseTraced_Parms;
	SpellReleaseTraced_Parms.SpellID = SpellID;

	pFnSpellReleaseTraced->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpellReleaseTraced, &SpellReleaseTraced_Parms, NULL );

	pFnSpellReleaseTraced->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SpellReleaseSingleTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  HitActor                       ( CPF_Parm )
// int                            SpellID                        ( CPF_Parm )

void ANowPawn::SpellReleaseSingleTarget ( class AActor* HitActor, int SpellID )
{
	static UFunction* pFnSpellReleaseSingleTarget = NULL;

	if ( ! pFnSpellReleaseSingleTarget )
		pFnSpellReleaseSingleTarget = (UFunction*) UObject::GObjObjects()->Data[ 56826 ];

	ANowPawn_execSpellReleaseSingleTarget_Parms SpellReleaseSingleTarget_Parms;
	SpellReleaseSingleTarget_Parms.HitActor = HitActor;
	SpellReleaseSingleTarget_Parms.SpellID = SpellID;

	pFnSpellReleaseSingleTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpellReleaseSingleTarget, &SpellReleaseSingleTarget_Parms, NULL );

	pFnSpellReleaseSingleTarget->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SpellReleaseAOE
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          _x                             ( CPF_Parm )
// float                          _y                             ( CPF_Parm )
// float                          _z                             ( CPF_Parm )
// int                            SpellID                        ( CPF_Parm )

void ANowPawn::SpellReleaseAOE ( float _x, float _y, float _z, int SpellID )
{
	static UFunction* pFnSpellReleaseAOE = NULL;

	if ( ! pFnSpellReleaseAOE )
		pFnSpellReleaseAOE = (UFunction*) UObject::GObjObjects()->Data[ 56821 ];

	ANowPawn_execSpellReleaseAOE_Parms SpellReleaseAOE_Parms;
	SpellReleaseAOE_Parms._x = _x;
	SpellReleaseAOE_Parms._y = _y;
	SpellReleaseAOE_Parms._z = _z;
	SpellReleaseAOE_Parms.SpellID = SpellID;

	pFnSpellReleaseAOE->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpellReleaseAOE, &SpellReleaseAOE_Parms, NULL );

	pFnSpellReleaseAOE->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SpellCancelCharge
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::SpellCancelCharge ( )
{
	static UFunction* pFnSpellCancelCharge = NULL;

	if ( ! pFnSpellCancelCharge )
		pFnSpellCancelCharge = (UFunction*) UObject::GObjObjects()->Data[ 56820 ];

	ANowPawn_execSpellCancelCharge_Parms SpellCancelCharge_Parms;

	pFnSpellCancelCharge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpellCancelCharge, &SpellCancelCharge_Parms, NULL );

	pFnSpellCancelCharge->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.CallGuards
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )
// int                            iGuardLevel                    ( CPF_Parm )

void ANowPawn::CallGuards ( class AActor* WhatActor, int iGuardLevel )
{
	static UFunction* pFnCallGuards = NULL;

	if ( ! pFnCallGuards )
		pFnCallGuards = (UFunction*) UObject::GObjObjects()->Data[ 56817 ];

	ANowPawn_execCallGuards_Parms CallGuards_Parms;
	CallGuards_Parms.WhatActor = WhatActor;
	CallGuards_Parms.iGuardLevel = iGuardLevel;

	pFnCallGuards->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCallGuards, &CallGuards_Parms, NULL );

	pFnCallGuards->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.Resurrect
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::Resurrect ( )
{
	static UFunction* pFnResurrect = NULL;

	if ( ! pFnResurrect )
		pFnResurrect = (UFunction*) UObject::GObjObjects()->Data[ 56816 ];

	ANowPawn_execResurrect_Parms Resurrect_Parms;

	pFnResurrect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResurrect, &Resurrect_Parms, NULL );

	pFnResurrect->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.StartPhysDeath
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            lastHitBoneID                  ( CPF_Parm )

void ANowPawn::StartPhysDeath ( int lastHitBoneID )
{
	static UFunction* pFnStartPhysDeath = NULL;

	if ( ! pFnStartPhysDeath )
		pFnStartPhysDeath = (UFunction*) UObject::GObjObjects()->Data[ 56814 ];

	ANowPawn_execStartPhysDeath_Parms StartPhysDeath_Parms;
	StartPhysDeath_Parms.lastHitBoneID = lastHitBoneID;

	pFnStartPhysDeath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartPhysDeath, &StartPhysDeath_Parms, NULL );

	pFnStartPhysDeath->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerCamera.DefaultPostProcess
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::DefaultPostProcess ( )
{
	static UFunction* pFnDefaultPostProcess = NULL;

	if ( ! pFnDefaultPostProcess )
		pFnDefaultPostProcess = (UFunction*) UObject::GObjObjects()->Data[ 57558 ];

	ANowPlayerCamera_execDefaultPostProcess_Parms DefaultPostProcess_Parms;

	this->ProcessEvent ( pFnDefaultPostProcess, &DefaultPostProcess_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.BlurPostProcess
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::BlurPostProcess ( )
{
	static UFunction* pFnBlurPostProcess = NULL;

	if ( ! pFnBlurPostProcess )
		pFnBlurPostProcess = (UFunction*) UObject::GObjObjects()->Data[ 57557 ];

	ANowPlayerCamera_execBlurPostProcess_Parms BlurPostProcess_Parms;

	this->ProcessEvent ( pFnBlurPostProcess, &BlurPostProcess_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.StopCameraFx
// [0x00020102] 
// Parameters infos:

void ANowPlayerCamera::StopCameraFx ( )
{
	static UFunction* pFnStopCameraFx = NULL;

	if ( ! pFnStopCameraFx )
		pFnStopCameraFx = (UFunction*) UObject::GObjObjects()->Data[ 57556 ];

	ANowPlayerCamera_execStopCameraFx_Parms StopCameraFx_Parms;

	this->ProcessEvent ( pFnStopCameraFx, &StopCameraFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.SetCameraFX
// [0x00024102] 
// Parameters infos:
// class UPostProcessChain*       NewFX                          ( CPF_Parm )
// float                          Time                           ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerCamera::SetCameraFX ( class UPostProcessChain* NewFX, float Time )
{
	static UFunction* pFnSetCameraFX = NULL;

	if ( ! pFnSetCameraFX )
		pFnSetCameraFX = (UFunction*) UObject::GObjObjects()->Data[ 57553 ];

	ANowPlayerCamera_execSetCameraFX_Parms SetCameraFX_Parms;
	SetCameraFX_Parms.NewFX = NewFX;
	SetCameraFX_Parms.Time = Time;

	this->ProcessEvent ( pFnSetCameraFX, &SetCameraFX_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.FadePostProcess
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::FadePostProcess ( )
{
	static UFunction* pFnFadePostProcess = NULL;

	if ( ! pFnFadePostProcess )
		pFnFadePostProcess = (UFunction*) UObject::GObjObjects()->Data[ 57551 ];

	ANowPlayerCamera_execFadePostProcess_Parms FadePostProcess_Parms;

	this->ProcessEvent ( pFnFadePostProcess, &FadePostProcess_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.StopFadePostProcess
// [0x00020000] 
// Parameters infos:

void ANowPlayerCamera::StopFadePostProcess ( )
{
	static UFunction* pFnStopFadePostProcess = NULL;

	if ( ! pFnStopFadePostProcess )
		pFnStopFadePostProcess = (UFunction*) UObject::GObjObjects()->Data[ 57550 ];

	ANowPlayerCamera_execStopFadePostProcess_Parms StopFadePostProcess_Parms;

	this->ProcessEvent ( pFnStopFadePostProcess, &StopFadePostProcess_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.Tick
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowPlayerCamera::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 57548 ];

	ANowPlayerCamera_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.RemoveUnderwaterFx
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::RemoveUnderwaterFx ( )
{
	static UFunction* pFnRemoveUnderwaterFx = NULL;

	if ( ! pFnRemoveUnderwaterFx )
		pFnRemoveUnderwaterFx = (UFunction*) UObject::GObjObjects()->Data[ 57547 ];

	ANowPlayerCamera_execRemoveUnderwaterFx_Parms RemoveUnderwaterFx_Parms;

	this->ProcessEvent ( pFnRemoveUnderwaterFx, &RemoveUnderwaterFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.AddUnderwaterFx
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::AddUnderwaterFx ( )
{
	static UFunction* pFnAddUnderwaterFx = NULL;

	if ( ! pFnAddUnderwaterFx )
		pFnAddUnderwaterFx = (UFunction*) UObject::GObjObjects()->Data[ 57546 ];

	ANowPlayerCamera_execAddUnderwaterFx_Parms AddUnderwaterFx_Parms;

	this->ProcessEvent ( pFnAddUnderwaterFx, &AddUnderwaterFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.PlayDeathFx
// [0x00020002] 
// Parameters infos:
// unsigned long                  bManifested                    ( CPF_Parm )

void ANowPlayerCamera::PlayDeathFx ( unsigned long bManifested )
{
	static UFunction* pFnPlayDeathFx = NULL;

	if ( ! pFnPlayDeathFx )
		pFnPlayDeathFx = (UFunction*) UObject::GObjObjects()->Data[ 57544 ];

	ANowPlayerCamera_execPlayDeathFx_Parms PlayDeathFx_Parms;
	PlayDeathFx_Parms.bManifested = bManifested;

	this->ProcessEvent ( pFnPlayDeathFx, &PlayDeathFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.FindPriestBeacon
// [0x00020002] 
// Parameters infos:
// unsigned long                  TurnOn                         ( CPF_Parm )

void ANowPlayerCamera::FindPriestBeacon ( unsigned long TurnOn )
{
	static UFunction* pFnFindPriestBeacon = NULL;

	if ( ! pFnFindPriestBeacon )
		pFnFindPriestBeacon = (UFunction*) UObject::GObjObjects()->Data[ 57540 ];

	ANowPlayerCamera_execFindPriestBeacon_Parms FindPriestBeacon_Parms;
	FindPriestBeacon_Parms.TurnOn = TurnOn;

	this->ProcessEvent ( pFnFindPriestBeacon, &FindPriestBeacon_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.StopHitFx
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::StopHitFx ( )
{
	static UFunction* pFnStopHitFx = NULL;

	if ( ! pFnStopHitFx )
		pFnStopHitFx = (UFunction*) UObject::GObjObjects()->Data[ 57539 ];

	ANowPlayerCamera_execStopHitFx_Parms StopHitFx_Parms;

	this->ProcessEvent ( pFnStopHitFx, &StopHitFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.PlayHitFx
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::PlayHitFx ( )
{
	static UFunction* pFnPlayHitFx = NULL;

	if ( ! pFnPlayHitFx )
		pFnPlayHitFx = (UFunction*) UObject::GObjObjects()->Data[ 57535 ];

	ANowPlayerCamera_execPlayHitFx_Parms PlayHitFx_Parms;

	this->ProcessEvent ( pFnPlayHitFx, &PlayHitFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.RemoveBloodOnCameraFx
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::RemoveBloodOnCameraFx ( )
{
	static UFunction* pFnRemoveBloodOnCameraFx = NULL;

	if ( ! pFnRemoveBloodOnCameraFx )
		pFnRemoveBloodOnCameraFx = (UFunction*) UObject::GObjObjects()->Data[ 57534 ];

	ANowPlayerCamera_execRemoveBloodOnCameraFx_Parms RemoveBloodOnCameraFx_Parms;

	this->ProcessEvent ( pFnRemoveBloodOnCameraFx, &RemoveBloodOnCameraFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.PlayBloodCameraFx
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::PlayBloodCameraFx ( )
{
	static UFunction* pFnPlayBloodCameraFx = NULL;

	if ( ! pFnPlayBloodCameraFx )
		pFnPlayBloodCameraFx = (UFunction*) UObject::GObjObjects()->Data[ 57533 ];

	ANowPlayerCamera_execPlayBloodCameraFx_Parms PlayBloodCameraFx_Parms;

	this->ProcessEvent ( pFnPlayBloodCameraFx, &PlayBloodCameraFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.RemoveConfusedCamera
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::RemoveConfusedCamera ( )
{
	static UFunction* pFnRemoveConfusedCamera = NULL;

	if ( ! pFnRemoveConfusedCamera )
		pFnRemoveConfusedCamera = (UFunction*) UObject::GObjObjects()->Data[ 57532 ];

	ANowPlayerCamera_execRemoveConfusedCamera_Parms RemoveConfusedCamera_Parms;

	this->ProcessEvent ( pFnRemoveConfusedCamera, &RemoveConfusedCamera_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.PlayConfusedCameraFx
// [0x00020002] 
// Parameters infos:
// float                          Time                           ( CPF_Parm )

void ANowPlayerCamera::PlayConfusedCameraFx ( float Time )
{
	static UFunction* pFnPlayConfusedCameraFx = NULL;

	if ( ! pFnPlayConfusedCameraFx )
		pFnPlayConfusedCameraFx = (UFunction*) UObject::GObjObjects()->Data[ 57530 ];

	ANowPlayerCamera_execPlayConfusedCameraFx_Parms PlayConfusedCameraFx_Parms;
	PlayConfusedCameraFx_Parms.Time = Time;

	this->ProcessEvent ( pFnPlayConfusedCameraFx, &PlayConfusedCameraFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.StopOnScreenMaterialFX
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::StopOnScreenMaterialFX ( )
{
	static UFunction* pFnStopOnScreenMaterialFX = NULL;

	if ( ! pFnStopOnScreenMaterialFX )
		pFnStopOnScreenMaterialFX = (UFunction*) UObject::GObjObjects()->Data[ 57529 ];

	ANowPlayerCamera_execStopOnScreenMaterialFX_Parms StopOnScreenMaterialFX_Parms;

	this->ProcessEvent ( pFnStopOnScreenMaterialFX, &StopOnScreenMaterialFX_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.PlayOnScreenMaterialFX
// [0x00024002] 
// Parameters infos:
// class UMaterialInstance*       WhatFX                         ( CPF_Parm )
// float                          Timer                          ( CPF_Parm )
// float                          BlendOutTime                   ( CPF_Parm )
// unsigned long                  bIsDominantMatFX               ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerCamera::PlayOnScreenMaterialFX ( class UMaterialInstance* WhatFX, float Timer, float BlendOutTime, unsigned long bIsDominantMatFX )
{
	static UFunction* pFnPlayOnScreenMaterialFX = NULL;

	if ( ! pFnPlayOnScreenMaterialFX )
		pFnPlayOnScreenMaterialFX = (UFunction*) UObject::GObjObjects()->Data[ 57524 ];

	ANowPlayerCamera_execPlayOnScreenMaterialFX_Parms PlayOnScreenMaterialFX_Parms;
	PlayOnScreenMaterialFX_Parms.WhatFX = WhatFX;
	PlayOnScreenMaterialFX_Parms.Timer = Timer;
	PlayOnScreenMaterialFX_Parms.BlendOutTime = BlendOutTime;
	PlayOnScreenMaterialFX_Parms.bIsDominantMatFX = bIsDominantMatFX;

	this->ProcessEvent ( pFnPlayOnScreenMaterialFX, &PlayOnScreenMaterialFX_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.TrackToggle
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::TrackToggle ( )
{
	static UFunction* pFnTrackToggle = NULL;

	if ( ! pFnTrackToggle )
		pFnTrackToggle = (UFunction*) UObject::GObjObjects()->Data[ 57523 ];

	ANowPlayerCamera_execTrackToggle_Parms TrackToggle_Parms;

	this->ProcessEvent ( pFnTrackToggle, &TrackToggle_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.Measure
// [0x00020002] 
// Parameters infos:
// unsigned long                  bStart                         ( CPF_Parm )

void ANowPlayerCamera::Measure ( unsigned long bStart )
{
	static UFunction* pFnMeasure = NULL;

	if ( ! pFnMeasure )
		pFnMeasure = (UFunction*) UObject::GObjObjects()->Data[ 57521 ];

	ANowPlayerCamera_execMeasure_Parms Measure_Parms;
	Measure_Parms.bStart = bStart;

	this->ProcessEvent ( pFnMeasure, &Measure_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.TickCameraShake
// [0x00420002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FTPOV                   OutPOV                         ( CPF_Parm | CPF_OutParm )

void ANowPlayerCamera::TickCameraShake ( float DeltaTime, struct FTPOV* OutPOV )
{
	static UFunction* pFnTickCameraShake = NULL;

	if ( ! pFnTickCameraShake )
		pFnTickCameraShake = (UFunction*) UObject::GObjObjects()->Data[ 57518 ];

	ANowPlayerCamera_execTickCameraShake_Parms TickCameraShake_Parms;
	TickCameraShake_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCameraShake, &TickCameraShake_Parms, NULL );

	if ( OutPOV )
		memcpy ( OutPOV, &TickCameraShake_Parms.OutPOV, 0x1C );
};

// Function NowGame.NowPlayerCamera.StartCameraShake
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fForce                         ( CPF_Parm )
// float                          fForceReduction                ( CPF_Parm )
// float                          fShakeX                        ( CPF_Parm )
// float                          fShakeY                        ( CPF_Parm )
// float                          fShakeTweenTimeMax             ( CPF_Parm )

void ANowPlayerCamera::eventStartCameraShake ( float fForce, float fForceReduction, float fShakeX, float fShakeY, float fShakeTweenTimeMax )
{
	static UFunction* pFnStartCameraShake = NULL;

	if ( ! pFnStartCameraShake )
		pFnStartCameraShake = (UFunction*) UObject::GObjObjects()->Data[ 57512 ];

	ANowPlayerCamera_eventStartCameraShake_Parms StartCameraShake_Parms;
	StartCameraShake_Parms.fForce = fForce;
	StartCameraShake_Parms.fForceReduction = fForceReduction;
	StartCameraShake_Parms.fShakeX = fShakeX;
	StartCameraShake_Parms.fShakeY = fShakeY;
	StartCameraShake_Parms.fShakeTweenTimeMax = fShakeTweenTimeMax;

	this->ProcessEvent ( pFnStartCameraShake, &StartCameraShake_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.UpdateViewTarget
// [0x00C20002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FTViewTarget            OutVT                          ( CPF_Parm | CPF_OutParm )

void ANowPlayerCamera::UpdateViewTarget ( float DeltaTime, struct FTViewTarget* OutVT )
{
	static UFunction* pFnUpdateViewTarget = NULL;

	if ( ! pFnUpdateViewTarget )
		pFnUpdateViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 57502 ];

	ANowPlayerCamera_execUpdateViewTarget_Parms UpdateViewTarget_Parms;
	UpdateViewTarget_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateViewTarget, &UpdateViewTarget_Parms, NULL );

	if ( OutVT )
		memcpy ( OutVT, &UpdateViewTarget_Parms.OutVT, 0x2C );
};

// Function NowGame.NowPlayerCamera.SetCameraTarget
// [0x00020000] 
// Parameters infos:

void ANowPlayerCamera::SetCameraTarget ( )
{
	static UFunction* pFnSetCameraTarget = NULL;

	if ( ! pFnSetCameraTarget )
		pFnSetCameraTarget = (UFunction*) UObject::GObjObjects()->Data[ 57501 ];

	ANowPlayerCamera_execSetCameraTarget_Parms SetCameraTarget_Parms;

	this->ProcessEvent ( pFnSetCameraTarget, &SetCameraTarget_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.InitializeFor
// [0x00020002] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void ANowPlayerCamera::InitializeFor ( class APlayerController* PC )
{
	static UFunction* pFnInitializeFor = NULL;

	if ( ! pFnInitializeFor )
		pFnInitializeFor = (UFunction*) UObject::GObjObjects()->Data[ 57498 ];

	ANowPlayerCamera_execInitializeFor_Parms InitializeFor_Parms;
	InitializeFor_Parms.PC = PC;

	this->ProcessEvent ( pFnInitializeFor, &InitializeFor_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.SetPPFader
// [0x00020002] 
// Parameters infos:
// struct FVector                 NewFadeCenter                  ( CPF_Parm )
// float                          New_EffectMaxRange             ( CPF_Parm )
// struct FVector                 HighLights                     ( CPF_Parm )
// struct FVector                 MidTones                       ( CPF_Parm )
// struct FVector                 Shadows                        ( CPF_Parm )

void ANowPlayerCamera::SetPPFader ( struct FVector NewFadeCenter, float New_EffectMaxRange, struct FVector HighLights, struct FVector MidTones, struct FVector Shadows )
{
	static UFunction* pFnSetPPFader = NULL;

	if ( ! pFnSetPPFader )
		pFnSetPPFader = (UFunction*) UObject::GObjObjects()->Data[ 57491 ];

	ANowPlayerCamera_execSetPPFader_Parms SetPPFader_Parms;
	memcpy ( &SetPPFader_Parms.NewFadeCenter, &NewFadeCenter, 0xC );
	SetPPFader_Parms.New_EffectMaxRange = New_EffectMaxRange;
	memcpy ( &SetPPFader_Parms.HighLights, &HighLights, 0xC );
	memcpy ( &SetPPFader_Parms.MidTones, &MidTones, 0xC );
	memcpy ( &SetPPFader_Parms.Shadows, &Shadows, 0xC );

	this->ProcessEvent ( pFnSetPPFader, &SetPPFader_Parms, NULL );
};

// Function NowGame.NowPlayerController.BugItGo
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// float                          X                              ( CPF_Parm | CPF_CoerceParm )
// float                          Y                              ( CPF_Parm | CPF_CoerceParm )
// float                          Z                              ( CPF_Parm | CPF_CoerceParm )
// int                            Pitch                          ( CPF_Parm | CPF_CoerceParm )
// int                            Yaw                            ( CPF_Parm | CPF_CoerceParm )
// int                            Roll                           ( CPF_Parm | CPF_CoerceParm )

void ANowPlayerController::BugItGo ( float X, float Y, float Z, int Pitch, int Yaw, int Roll )
{
	static UFunction* pFnBugItGo = NULL;

	if ( ! pFnBugItGo )
		pFnBugItGo = (UFunction*) UObject::GObjObjects()->Data[ 58618 ];

	ANowPlayerController_execBugItGo_Parms BugItGo_Parms;
	BugItGo_Parms.X = X;
	BugItGo_Parms.Y = Y;
	BugItGo_Parms.Z = Z;
	BugItGo_Parms.Pitch = Pitch;
	BugItGo_Parms.Yaw = Yaw;
	BugItGo_Parms.Roll = Roll;

	this->ProcessEvent ( pFnBugItGo, &BugItGo_Parms, NULL );
};

// Function NowGame.NowPlayerController.PathClear
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::PathClear ( )
{
	static UFunction* pFnPathClear = NULL;

	if ( ! pFnPathClear )
		pFnPathClear = (UFunction*) UObject::GObjObjects()->Data[ 58617 ];

	ANowPlayerController_execPathClear_Parms PathClear_Parms;

	this->ProcessEvent ( pFnPathClear, &PathClear_Parms, NULL );
};

// Function NowGame.NowPlayerController.PathChild
// [0x00024200] ( FUNC_Exec )
// Parameters infos:
// int                            Cnt                            ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::PathChild ( int Cnt )
{
	static UFunction* pFnPathChild = NULL;

	if ( ! pFnPathChild )
		pFnPathChild = (UFunction*) UObject::GObjObjects()->Data[ 58615 ];

	ANowPlayerController_execPathChild_Parms PathChild_Parms;
	PathChild_Parms.Cnt = Cnt;

	this->ProcessEvent ( pFnPathChild, &PathChild_Parms, NULL );
};

// Function NowGame.NowPlayerController.PathStep
// [0x00024200] ( FUNC_Exec )
// Parameters infos:
// int                            Cnt                            ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::PathStep ( int Cnt )
{
	static UFunction* pFnPathStep = NULL;

	if ( ! pFnPathStep )
		pFnPathStep = (UFunction*) UObject::GObjObjects()->Data[ 58613 ];

	ANowPlayerController_execPathStep_Parms PathStep_Parms;
	PathStep_Parms.Cnt = Cnt;

	this->ProcessEvent ( pFnPathStep, &PathStep_Parms, NULL );
};

// Function NowGame.NowPlayerController.SaveActorConfig
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FName                   actorName                      ( CPF_Parm | CPF_CoerceParm )

void ANowPlayerController::SaveActorConfig ( struct FName actorName )
{
	static UFunction* pFnSaveActorConfig = NULL;

	if ( ! pFnSaveActorConfig )
		pFnSaveActorConfig = (UFunction*) UObject::GObjObjects()->Data[ 58611 ];

	ANowPlayerController_execSaveActorConfig_Parms SaveActorConfig_Parms;
	memcpy ( &SaveActorConfig_Parms.actorName, &actorName, 0x8 );

	this->ProcessEvent ( pFnSaveActorConfig, &SaveActorConfig_Parms, NULL );
};

// Function NowGame.NowPlayerController.SaveClassConfig
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 ClassName                      ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void ANowPlayerController::SaveClassConfig ( struct FString ClassName )
{
	static UFunction* pFnSaveClassConfig = NULL;

	if ( ! pFnSaveClassConfig )
		pFnSaveClassConfig = (UFunction*) UObject::GObjObjects()->Data[ 58609 ];

	ANowPlayerController_execSaveClassConfig_Parms SaveClassConfig_Parms;
	memcpy ( &SaveClassConfig_Parms.ClassName, &ClassName, 0xC );

	this->ProcessEvent ( pFnSaveClassConfig, &SaveClassConfig_Parms, NULL );
};

// Function NowGame.NowPlayerController.ShowGameState
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::ShowGameState ( )
{
	static UFunction* pFnShowGameState = NULL;

	if ( ! pFnShowGameState )
		pFnShowGameState = (UFunction*) UObject::GObjObjects()->Data[ 58608 ];

	ANowPlayerController_execShowGameState_Parms ShowGameState_Parms;

	this->ProcessEvent ( pFnShowGameState, &ShowGameState_Parms, NULL );
};

// Function NowGame.NowPlayerController.ShowPlayerState
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::ShowPlayerState ( )
{
	static UFunction* pFnShowPlayerState = NULL;

	if ( ! pFnShowPlayerState )
		pFnShowPlayerState = (UFunction*) UObject::GObjObjects()->Data[ 58607 ];

	ANowPlayerController_execShowPlayerState_Parms ShowPlayerState_Parms;

	this->ProcessEvent ( pFnShowPlayerState, &ShowPlayerState_Parms, NULL );
};

// Function NowGame.NowPlayerController.ListCE
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::ListCE ( )
{
	static UFunction* pFnListCE = NULL;

	if ( ! pFnListCE )
		pFnListCE = (UFunction*) UObject::GObjObjects()->Data[ 58606 ];

	ANowPlayerController_execListCE_Parms ListCE_Parms;

	this->ProcessEvent ( pFnListCE, &ListCE_Parms, NULL );
};

// Function NowGame.NowPlayerController.ListConsoleEvents
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::ListConsoleEvents ( )
{
	static UFunction* pFnListConsoleEvents = NULL;

	if ( ! pFnListConsoleEvents )
		pFnListConsoleEvents = (UFunction*) UObject::GObjObjects()->Data[ 58605 ];

	ANowPlayerController_execListConsoleEvents_Parms ListConsoleEvents_Parms;

	this->ProcessEvent ( pFnListConsoleEvents, &ListConsoleEvents_Parms, NULL );
};

// Function NowGame.NowPlayerController.CE
// [0x00024200] ( FUNC_Exec )
// Parameters infos:
// struct FName                   EventName                      ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::CE ( struct FName EventName )
{
	static UFunction* pFnCE = NULL;

	if ( ! pFnCE )
		pFnCE = (UFunction*) UObject::GObjObjects()->Data[ 58603 ];

	ANowPlayerController_execCE_Parms CE_Parms;
	memcpy ( &CE_Parms.EventName, &EventName, 0x8 );

	this->ProcessEvent ( pFnCE, &CE_Parms, NULL );
};

// Function NowGame.NowPlayerController.CauseEvent
// [0x00024200] ( FUNC_Exec )
// Parameters infos:
// struct FName                   EventName                      ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::CauseEvent ( struct FName EventName )
{
	static UFunction* pFnCauseEvent = NULL;

	if ( ! pFnCauseEvent )
		pFnCauseEvent = (UFunction*) UObject::GObjObjects()->Data[ 58601 ];

	ANowPlayerController_execCauseEvent_Parms CauseEvent_Parms;
	memcpy ( &CauseEvent_Parms.EventName, &EventName, 0x8 );

	this->ProcessEvent ( pFnCauseEvent, &CauseEvent_Parms, NULL );
};

// Function NowGame.NowPlayerController.ClearProgressMessages
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::ClearProgressMessages ( )
{
	static UFunction* pFnClearProgressMessages = NULL;

	if ( ! pFnClearProgressMessages )
		pFnClearProgressMessages = (UFunction*) UObject::GObjObjects()->Data[ 58600 ];

	ANowPlayerController_execClearProgressMessages_Parms ClearProgressMessages_Parms;

	this->ProcessEvent ( pFnClearProgressMessages, &ClearProgressMessages_Parms, NULL );
};

// Function NowGame.NowPlayerController.SwitchLevel
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::SwitchLevel ( struct FString URL )
{
	static UFunction* pFnSwitchLevel = NULL;

	if ( ! pFnSwitchLevel )
		pFnSwitchLevel = (UFunction*) UObject::GObjObjects()->Data[ 58598 ];

	ANowPlayerController_execSwitchLevel_Parms SwitchLevel_Parms;
	memcpy ( &SwitchLevel_Parms.URL, &URL, 0xC );

	this->ProcessEvent ( pFnSwitchLevel, &SwitchLevel_Parms, NULL );
};

// Function NowGame.NowPlayerController.ChangeTeam
// [0x00024200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 TeamName                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::ChangeTeam ( struct FString TeamName )
{
	static UFunction* pFnChangeTeam = NULL;

	if ( ! pFnChangeTeam )
		pFnChangeTeam = (UFunction*) UObject::GObjObjects()->Data[ 58596 ];

	ANowPlayerController_execChangeTeam_Parms ChangeTeam_Parms;
	memcpy ( &ChangeTeam_Parms.TeamName, &TeamName, 0xC );

	this->ProcessEvent ( pFnChangeTeam, &ChangeTeam_Parms, NULL );
};

// Function NowGame.NowPlayerController.SwitchTeam
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::SwitchTeam ( )
{
	static UFunction* pFnSwitchTeam = NULL;

	if ( ! pFnSwitchTeam )
		pFnSwitchTeam = (UFunction*) UObject::GObjObjects()->Data[ 58595 ];

	ANowPlayerController_execSwitchTeam_Parms SwitchTeam_Parms;

	this->ProcessEvent ( pFnSwitchTeam, &SwitchTeam_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetName
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 S                              ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void ANowPlayerController::SetName ( struct FString S )
{
	static UFunction* pFnSetName = NULL;

	if ( ! pFnSetName )
		pFnSetName = (UFunction*) UObject::GObjObjects()->Data[ 58593 ];

	ANowPlayerController_execSetName_Parms SetName_Parms;
	memcpy ( &SetName_Parms.S, &S, 0xC );

	this->ProcessEvent ( pFnSetName, &SetName_Parms, NULL );
};

// Function NowGame.NowPlayerController.Suicide
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::Suicide ( )
{
	static UFunction* pFnSuicide = NULL;

	if ( ! pFnSuicide )
		pFnSuicide = (UFunction*) UObject::GObjObjects()->Data[ 58592 ];

	ANowPlayerController_execSuicide_Parms Suicide_Parms;

	this->ProcessEvent ( pFnSuicide, &Suicide_Parms, NULL );
};

// Function NowGame.NowPlayerController.NextWeapon
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::NextWeapon ( )
{
	static UFunction* pFnNextWeapon = NULL;

	if ( ! pFnNextWeapon )
		pFnNextWeapon = (UFunction*) UObject::GObjObjects()->Data[ 58591 ];

	ANowPlayerController_execNextWeapon_Parms NextWeapon_Parms;

	this->ProcessEvent ( pFnNextWeapon, &NextWeapon_Parms, NULL );
};

// Function NowGame.NowPlayerController.PrevWeapon
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::PrevWeapon ( )
{
	static UFunction* pFnPrevWeapon = NULL;

	if ( ! pFnPrevWeapon )
		pFnPrevWeapon = (UFunction*) UObject::GObjObjects()->Data[ 58590 ];

	ANowPlayerController_execPrevWeapon_Parms PrevWeapon_Parms;

	this->ProcessEvent ( pFnPrevWeapon, &PrevWeapon_Parms, NULL );
};

// Function NowGame.NowPlayerController.ThrowWeapon
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::ThrowWeapon ( )
{
	static UFunction* pFnThrowWeapon = NULL;

	if ( ! pFnThrowWeapon )
		pFnThrowWeapon = (UFunction*) UObject::GObjObjects()->Data[ 58589 ];

	ANowPlayerController_execThrowWeapon_Parms ThrowWeapon_Parms;

	this->ProcessEvent ( pFnThrowWeapon, &ThrowWeapon_Parms, NULL );
};

// Function NowGame.NowPlayerController.UTrace
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::UTrace ( )
{
	static UFunction* pFnUTrace = NULL;

	if ( ! pFnUTrace )
		pFnUTrace = (UFunction*) UObject::GObjObjects()->Data[ 58588 ];

	ANowPlayerController_execUTrace_Parms UTrace_Parms;

	this->ProcessEvent ( pFnUTrace, &UTrace_Parms, NULL );
};

// Function NowGame.NowPlayerController.Pause
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::Pause ( )
{
	static UFunction* pFnPause = NULL;

	if ( ! pFnPause )
		pFnPause = (UFunction*) UObject::GObjObjects()->Data[ 58587 ];

	ANowPlayerController_execPause_Parms Pause_Parms;

	this->ProcessEvent ( pFnPause, &Pause_Parms, NULL );
};

// Function NowGame.NowPlayerController.DebugPause
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::DebugPause ( )
{
	static UFunction* pFnDebugPause = NULL;

	if ( ! pFnDebugPause )
		pFnDebugPause = (UFunction*) UObject::GObjObjects()->Data[ 58586 ];

	ANowPlayerController_execDebugPause_Parms DebugPause_Parms;

	this->ProcessEvent ( pFnDebugPause, &DebugPause_Parms, NULL );
};

// Function NowGame.NowPlayerController.QuickLoad
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::QuickLoad ( )
{
	static UFunction* pFnQuickLoad = NULL;

	if ( ! pFnQuickLoad )
		pFnQuickLoad = (UFunction*) UObject::GObjObjects()->Data[ 58585 ];

	ANowPlayerController_execQuickLoad_Parms QuickLoad_Parms;

	this->ProcessEvent ( pFnQuickLoad, &QuickLoad_Parms, NULL );
};

// Function NowGame.NowPlayerController.QuickSave
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::QuickSave ( )
{
	static UFunction* pFnQuickSave = NULL;

	if ( ! pFnQuickSave )
		pFnQuickSave = (UFunction*) UObject::GObjObjects()->Data[ 58584 ];

	ANowPlayerController_execQuickSave_Parms QuickSave_Parms;

	this->ProcessEvent ( pFnQuickSave, &QuickSave_Parms, NULL );
};

// Function NowGame.NowPlayerController.LocalTravel
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::LocalTravel ( struct FString URL )
{
	static UFunction* pFnLocalTravel = NULL;

	if ( ! pFnLocalTravel )
		pFnLocalTravel = (UFunction*) UObject::GObjObjects()->Data[ 58582 ];

	ANowPlayerController_execLocalTravel_Parms LocalTravel_Parms;
	memcpy ( &LocalTravel_Parms.URL, &URL, 0xC );

	this->ProcessEvent ( pFnLocalTravel, &LocalTravel_Parms, NULL );
};

// Function NowGame.NowPlayerController.RestartLevel
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::RestartLevel ( )
{
	static UFunction* pFnRestartLevel = NULL;

	if ( ! pFnRestartLevel )
		pFnRestartLevel = (UFunction*) UObject::GObjObjects()->Data[ 58581 ];

	ANowPlayerController_execRestartLevel_Parms RestartLevel_Parms;

	this->ProcessEvent ( pFnRestartLevel, &RestartLevel_Parms, NULL );
};

// Function NowGame.NowPlayerController.Speech
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FName                   Type                           ( CPF_Parm )
// int                            Index                          ( CPF_Parm )
// struct FString                 Callsign                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::Speech ( struct FName Type, int Index, struct FString Callsign )
{
	static UFunction* pFnSpeech = NULL;

	if ( ! pFnSpeech )
		pFnSpeech = (UFunction*) UObject::GObjObjects()->Data[ 58577 ];

	ANowPlayerController_execSpeech_Parms Speech_Parms;
	memcpy ( &Speech_Parms.Type, &Type, 0x8 );
	Speech_Parms.Index = Index;
	memcpy ( &Speech_Parms.Callsign, &Callsign, 0xC );

	this->ProcessEvent ( pFnSpeech, &Speech_Parms, NULL );
};

// Function NowGame.NowPlayerController.Camera
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FName                   NewMode                        ( CPF_Parm )

void ANowPlayerController::Camera ( struct FName NewMode )
{
	static UFunction* pFnCamera = NULL;

	if ( ! pFnCamera )
		pFnCamera = (UFunction*) UObject::GObjObjects()->Data[ 58575 ];

	ANowPlayerController_execCamera_Parms Camera_Parms;
	memcpy ( &Camera_Parms.NewMode, &NewMode, 0x8 );

	this->ProcessEvent ( pFnCamera, &Camera_Parms, NULL );
};

// Function NowGame.NowPlayerController.TeamSay
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::TeamSay ( struct FString msg )
{
	static UFunction* pFnTeamSay = NULL;

	if ( ! pFnTeamSay )
		pFnTeamSay = (UFunction*) UObject::GObjObjects()->Data[ 58573 ];

	ANowPlayerController_execTeamSay_Parms TeamSay_Parms;
	memcpy ( &TeamSay_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnTeamSay, &TeamSay_Parms, NULL );
};

// Function NowGame.NowPlayerController.Say
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::Say ( struct FString msg )
{
	static UFunction* pFnSay = NULL;

	if ( ! pFnSay )
		pFnSay = (UFunction*) UObject::GObjObjects()->Data[ 58571 ];

	ANowPlayerController_execSay_Parms Say_Parms;
	memcpy ( &Say_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnSay, &Say_Parms, NULL );
};

// Function NowGame.NowPlayerController.TeamTalk
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::TeamTalk ( )
{
	static UFunction* pFnTeamTalk = NULL;

	if ( ! pFnTeamTalk )
		pFnTeamTalk = (UFunction*) UObject::GObjObjects()->Data[ 58570 ];

	ANowPlayerController_execTeamTalk_Parms TeamTalk_Parms;

	this->ProcessEvent ( pFnTeamTalk, &TeamTalk_Parms, NULL );
};

// Function NowGame.NowPlayerController.EnableCheats
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::EnableCheats ( )
{
	static UFunction* pFnEnableCheats = NULL;

	if ( ! pFnEnableCheats )
		pFnEnableCheats = (UFunction*) UObject::GObjObjects()->Data[ 58569 ];

	ANowPlayerController_execEnableCheats_Parms EnableCheats_Parms;

	this->ProcessEvent ( pFnEnableCheats, &EnableCheats_Parms, NULL );
};

// Function NowGame.NowPlayerController.UnStuck
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventUnStuck ( )
{
	static UFunction* pFnUnStuck = NULL;

	if ( ! pFnUnStuck )
		pFnUnStuck = (UFunction*) UObject::GObjObjects()->Data[ 58568 ];

	ANowPlayerController_eventUnStuck_Parms UnStuck_Parms;

	this->ProcessEvent ( pFnUnStuck, &UnStuck_Parms, NULL );
};

// Function NowGame.NowPlayerController.MountCalcMaxCarry
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            attrb_Strength                 ( CPF_Parm )

float ANowPlayerController::eventMountCalcMaxCarry ( int attrb_Strength )
{
	static UFunction* pFnMountCalcMaxCarry = NULL;

	if ( ! pFnMountCalcMaxCarry )
		pFnMountCalcMaxCarry = (UFunction*) UObject::GObjObjects()->Data[ 55754 ];

	ANowPlayerController_eventMountCalcMaxCarry_Parms MountCalcMaxCarry_Parms;
	MountCalcMaxCarry_Parms.attrb_Strength = attrb_Strength;

	this->ProcessEvent ( pFnMountCalcMaxCarry, &MountCalcMaxCarry_Parms, NULL );

	return MountCalcMaxCarry_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.MountCalcMaxJump
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            attrb_Dexterity                ( CPF_Parm )

float ANowPlayerController::MountCalcMaxJump ( int attrb_Dexterity )
{
	static UFunction* pFnMountCalcMaxJump = NULL;

	if ( ! pFnMountCalcMaxJump )
		pFnMountCalcMaxJump = (UFunction*) UObject::GObjObjects()->Data[ 48343 ];

	ANowPlayerController_execMountCalcMaxJump_Parms MountCalcMaxJump_Parms;
	MountCalcMaxJump_Parms.attrb_Dexterity = attrb_Dexterity;

	this->ProcessEvent ( pFnMountCalcMaxJump, &MountCalcMaxJump_Parms, NULL );

	return MountCalcMaxJump_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.MountCalcMaxSpeed
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            attrb_Speed                    ( CPF_Parm )
// int                            attrb_Size                     ( CPF_Parm )
// int                            attrb_Dexterity                ( CPF_Parm )

float ANowPlayerController::MountCalcMaxSpeed ( int attrb_Speed, int attrb_Size, int attrb_Dexterity )
{
	static UFunction* pFnMountCalcMaxSpeed = NULL;

	if ( ! pFnMountCalcMaxSpeed )
		pFnMountCalcMaxSpeed = (UFunction*) UObject::GObjObjects()->Data[ 48338 ];

	ANowPlayerController_execMountCalcMaxSpeed_Parms MountCalcMaxSpeed_Parms;
	MountCalcMaxSpeed_Parms.attrb_Speed = attrb_Speed;
	MountCalcMaxSpeed_Parms.attrb_Size = attrb_Size;
	MountCalcMaxSpeed_Parms.attrb_Dexterity = attrb_Dexterity;

	this->ProcessEvent ( pFnMountCalcMaxSpeed, &MountCalcMaxSpeed_Parms, NULL );

	return MountCalcMaxSpeed_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.SetUnderground
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )

void ANowPlayerController::eventSetUnderground ( unsigned long bNewValue )
{
	static UFunction* pFnSetUnderground = NULL;

	if ( ! pFnSetUnderground )
		pFnSetUnderground = (UFunction*) UObject::GObjObjects()->Data[ 58560 ];

	ANowPlayerController_eventSetUnderground_Parms SetUnderground_Parms;
	SetUnderground_Parms.bNewValue = bNewValue;

	this->ProcessEvent ( pFnSetUnderground, &SetUnderground_Parms, NULL );
};

// Function NowGame.NowPlayerController.FindTalkerWithID
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iID                            ( CPF_Parm )

bool ANowPlayerController::eventFindTalkerWithID ( int iID )
{
	static UFunction* pFnFindTalkerWithID = NULL;

	if ( ! pFnFindTalkerWithID )
		pFnFindTalkerWithID = (UFunction*) UObject::GObjObjects()->Data[ 58556 ];

	ANowPlayerController_eventFindTalkerWithID_Parms FindTalkerWithID_Parms;
	FindTalkerWithID_Parms.iID = iID;

	this->ProcessEvent ( pFnFindTalkerWithID, &FindTalkerWithID_Parms, NULL );

	return FindTalkerWithID_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ParseGhostMessage
// [0x00024002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 WhatMessage                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bFromEther                     ( CPF_Parm )
// int                            chanSize                       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bNotChat                       ( CPF_OptionalParm | CPF_Parm )

struct FString ANowPlayerController::ParseGhostMessage ( struct FString WhatMessage, unsigned long bFromEther, int chanSize, unsigned long bNotChat )
{
	static UFunction* pFnParseGhostMessage = NULL;

	if ( ! pFnParseGhostMessage )
		pFnParseGhostMessage = (UFunction*) UObject::GObjObjects()->Data[ 45829 ];

	ANowPlayerController_execParseGhostMessage_Parms ParseGhostMessage_Parms;
	memcpy ( &ParseGhostMessage_Parms.WhatMessage, &WhatMessage, 0xC );
	ParseGhostMessage_Parms.bFromEther = bFromEther;
	ParseGhostMessage_Parms.chanSize = chanSize;
	ParseGhostMessage_Parms.bNotChat = bNotChat;

	this->ProcessEvent ( pFnParseGhostMessage, &ParseGhostMessage_Parms, NULL );

	return ParseGhostMessage_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetSkyLightToggleable
// [0x00020002] 
// Parameters infos:
// class ASkyLightToggleable*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ASkyLightToggleable* ANowPlayerController::GetSkyLightToggleable ( )
{
	static UFunction* pFnGetSkyLightToggleable = NULL;

	if ( ! pFnGetSkyLightToggleable )
		pFnGetSkyLightToggleable = (UFunction*) UObject::GObjObjects()->Data[ 58363 ];

	ANowPlayerController_execGetSkyLightToggleable_Parms GetSkyLightToggleable_Parms;

	this->ProcessEvent ( pFnGetSkyLightToggleable, &GetSkyLightToggleable_Parms, NULL );

	return GetSkyLightToggleable_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetAmbientSunLight
// [0x00020002] 
// Parameters infos:
// class ANowAmbientSunLight*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAmbientSunLight* ANowPlayerController::GetAmbientSunLight ( )
{
	static UFunction* pFnGetAmbientSunLight = NULL;

	if ( ! pFnGetAmbientSunLight )
		pFnGetAmbientSunLight = (UFunction*) UObject::GObjObjects()->Data[ 58360 ];

	ANowPlayerController_execGetAmbientSunLight_Parms GetAmbientSunLight_Parms;

	this->ProcessEvent ( pFnGetAmbientSunLight, &GetAmbientSunLight_Parms, NULL );

	return GetAmbientSunLight_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowPlayerController::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 58356 ];

	ANowPlayerController_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowPlayerController.TweenMove
// [0x00020002] 
// Parameters infos:
// struct FVector                 vPos                           ( CPF_Parm )
// struct FRotator                rRoT                           ( CPF_Parm )
// float                          fTime                          ( CPF_Parm )
// struct FString                 sReason                        ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::TweenMove ( struct FVector vPos, struct FRotator rRoT, float fTime, struct FString sReason )
{
	static UFunction* pFnTweenMove = NULL;

	if ( ! pFnTweenMove )
		pFnTweenMove = (UFunction*) UObject::GObjObjects()->Data[ 58351 ];

	ANowPlayerController_execTweenMove_Parms TweenMove_Parms;
	memcpy ( &TweenMove_Parms.vPos, &vPos, 0xC );
	memcpy ( &TweenMove_Parms.rRoT, &rRoT, 0xC );
	TweenMove_Parms.fTime = fTime;
	memcpy ( &TweenMove_Parms.sReason, &sReason, 0xC );

	this->ProcessEvent ( pFnTweenMove, &TweenMove_Parms, NULL );
};

// Function NowGame.NowPlayerController.AddDrinkCounter
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventAddDrinkCounter ( )
{
	static UFunction* pFnAddDrinkCounter = NULL;

	if ( ! pFnAddDrinkCounter )
		pFnAddDrinkCounter = (UFunction*) UObject::GObjObjects()->Data[ 58350 ];

	ANowPlayerController_eventAddDrinkCounter_Parms AddDrinkCounter_Parms;

	this->ProcessEvent ( pFnAddDrinkCounter, &AddDrinkCounter_Parms, NULL );
};

// Function NowGame.NowPlayerController.ResetGhostModeStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventResetGhostModeStats ( )
{
	static UFunction* pFnResetGhostModeStats = NULL;

	if ( ! pFnResetGhostModeStats )
		pFnResetGhostModeStats = (UFunction*) UObject::GObjObjects()->Data[ 58349 ];

	ANowPlayerController_eventResetGhostModeStats_Parms ResetGhostModeStats_Parms;

	this->ProcessEvent ( pFnResetGhostModeStats, &ResetGhostModeStats_Parms, NULL );
};

// Function NowGame.NowPlayerController.GhostModeOn
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventGhostModeOn ( )
{
	static UFunction* pFnGhostModeOn = NULL;

	if ( ! pFnGhostModeOn )
		pFnGhostModeOn = (UFunction*) UObject::GObjObjects()->Data[ 58348 ];

	ANowPlayerController_eventGhostModeOn_Parms GhostModeOn_Parms;

	this->ProcessEvent ( pFnGhostModeOn, &GhostModeOn_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetStamWgtRem
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPlayerController::GetStamWgtRem ( )
{
	static UFunction* pFnGetStamWgtRem = NULL;

	if ( ! pFnGetStamWgtRem )
		pFnGetStamWgtRem = (UFunction*) UObject::GObjObjects()->Data[ 58343 ];

	ANowPlayerController_execGetStamWgtRem_Parms GetStamWgtRem_Parms;

	this->ProcessEvent ( pFnGetStamWgtRem, &GetStamWgtRem_Parms, NULL );

	return GetStamWgtRem_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetStamWgtAdd
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPlayerController::GetStamWgtAdd ( )
{
	static UFunction* pFnGetStamWgtAdd = NULL;

	if ( ! pFnGetStamWgtAdd )
		pFnGetStamWgtAdd = (UFunction*) UObject::GObjObjects()->Data[ 58337 ];

	ANowPlayerController_execGetStamWgtAdd_Parms GetStamWgtAdd_Parms;

	this->ProcessEvent ( pFnGetStamWgtAdd, &GetStamWgtAdd_Parms, NULL );

	return GetStamWgtAdd_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ReCalcStamDrains
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventReCalcStamDrains ( )
{
	static UFunction* pFnReCalcStamDrains = NULL;

	if ( ! pFnReCalcStamDrains )
		pFnReCalcStamDrains = (UFunction*) UObject::GObjObjects()->Data[ 58334 ];

	ANowPlayerController_eventReCalcStamDrains_Parms ReCalcStamDrains_Parms;

	this->ProcessEvent ( pFnReCalcStamDrains, &ReCalcStamDrains_Parms, NULL );
};

// Function NowGame.NowPlayerController.CheckForAtlasAvatars
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::CheckForAtlasAvatars ( )
{
	static UFunction* pFnCheckForAtlasAvatars = NULL;

	if ( ! pFnCheckForAtlasAvatars )
		pFnCheckForAtlasAvatars = (UFunction*) UObject::GObjObjects()->Data[ 47863 ];

	ANowPlayerController_execCheckForAtlasAvatars_Parms CheckForAtlasAvatars_Parms;

	this->ProcessEvent ( pFnCheckForAtlasAvatars, &CheckForAtlasAvatars_Parms, NULL );

	return CheckForAtlasAvatars_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.CalcStamina_JoggingAdd
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPlayerController::CalcStamina_JoggingAdd ( )
{
	static UFunction* pFnCalcStamina_JoggingAdd = NULL;

	if ( ! pFnCalcStamina_JoggingAdd )
		pFnCalcStamina_JoggingAdd = (UFunction*) UObject::GObjObjects()->Data[ 57240 ];

	ANowPlayerController_execCalcStamina_JoggingAdd_Parms CalcStamina_JoggingAdd_Parms;

	this->ProcessEvent ( pFnCalcStamina_JoggingAdd, &CalcStamina_JoggingAdd_Parms, NULL );

	return CalcStamina_JoggingAdd_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.CalcStamina_Regain
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPlayerController::CalcStamina_Regain ( )
{
	static UFunction* pFnCalcStamina_Regain = NULL;

	if ( ! pFnCalcStamina_Regain )
		pFnCalcStamina_Regain = (UFunction*) UObject::GObjObjects()->Data[ 47847 ];

	ANowPlayerController_execCalcStamina_Regain_Parms CalcStamina_Regain_Parms;

	this->ProcessEvent ( pFnCalcStamina_Regain, &CalcStamina_Regain_Parms, NULL );

	return CalcStamina_Regain_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetKnockBackValue
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPlayerController::GetKnockBackValue ( )
{
	static UFunction* pFnGetKnockBackValue = NULL;

	if ( ! pFnGetKnockBackValue )
		pFnGetKnockBackValue = (UFunction*) UObject::GObjObjects()->Data[ 57194 ];

	ANowPlayerController_execGetKnockBackValue_Parms GetKnockBackValue_Parms;

	this->ProcessEvent ( pFnGetKnockBackValue, &GetKnockBackValue_Parms, NULL );

	return GetKnockBackValue_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.StopReading
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::StopReading ( )
{
	static UFunction* pFnStopReading = NULL;

	if ( ! pFnStopReading )
		pFnStopReading = (UFunction*) UObject::GObjObjects()->Data[ 58327 ];

	ANowPlayerController_execStopReading_Parms StopReading_Parms;

	this->ProcessEvent ( pFnStopReading, &StopReading_Parms, NULL );
};

// Function NowGame.NowPlayerController.ActionBarSlot
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            iBar                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void ANowPlayerController::ActionBarSlot ( int iBar, int iSlot )
{
	static UFunction* pFnActionBarSlot = NULL;

	if ( ! pFnActionBarSlot )
		pFnActionBarSlot = (UFunction*) UObject::GObjObjects()->Data[ 58324 ];

	ANowPlayerController_execActionBarSlot_Parms ActionBarSlot_Parms;
	ActionBarSlot_Parms.iBar = iBar;
	ActionBarSlot_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnActionBarSlot, &ActionBarSlot_Parms, NULL );
};

// Function NowGame.NowPlayerController.MortalSuicide
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::MortalSuicide ( )
{
	static UFunction* pFnMortalSuicide = NULL;

	if ( ! pFnMortalSuicide )
		pFnMortalSuicide = (UFunction*) UObject::GObjObjects()->Data[ 58323 ];

	ANowPlayerController_execMortalSuicide_Parms MortalSuicide_Parms;

	this->ProcessEvent ( pFnMortalSuicide, &MortalSuicide_Parms, NULL );
};

// Function NowGame.NowPlayerController.PendingLogOut
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInit                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bQuit                          ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::eventPendingLogOut ( unsigned long bInit, unsigned long bQuit )
{
	static UFunction* pFnPendingLogOut = NULL;

	if ( ! pFnPendingLogOut )
		pFnPendingLogOut = (UFunction*) UObject::GObjObjects()->Data[ 58320 ];

	ANowPlayerController_eventPendingLogOut_Parms PendingLogOut_Parms;
	PendingLogOut_Parms.bInit = bInit;
	PendingLogOut_Parms.bQuit = bQuit;

	this->ProcessEvent ( pFnPendingLogOut, &PendingLogOut_Parms, NULL );
};

// Function NowGame.NowPlayerController.InSecurityZone
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   WhatPawn                       ( CPF_Parm )

bool ANowPlayerController::InSecurityZone ( class APawn* WhatPawn )
{
	static UFunction* pFnInSecurityZone = NULL;

	if ( ! pFnInSecurityZone )
		pFnInSecurityZone = (UFunction*) UObject::GObjObjects()->Data[ 58316 ];

	ANowPlayerController_execInSecurityZone_Parms InSecurityZone_Parms;
	InSecurityZone_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnInSecurityZone, &InSecurityZone_Parms, NULL );

	return InSecurityZone_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.CancelLogOut
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventCancelLogOut ( )
{
	static UFunction* pFnCancelLogOut = NULL;

	if ( ! pFnCancelLogOut )
		pFnCancelLogOut = (UFunction*) UObject::GObjObjects()->Data[ 58315 ];

	ANowPlayerController_eventCancelLogOut_Parms CancelLogOut_Parms;

	this->ProcessEvent ( pFnCancelLogOut, &CancelLogOut_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartUnderWaterEffects
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bEnd                           ( CPF_Parm )

void ANowPlayerController::eventStartUnderWaterEffects ( unsigned long bEnd )
{
	static UFunction* pFnStartUnderWaterEffects = NULL;

	if ( ! pFnStartUnderWaterEffects )
		pFnStartUnderWaterEffects = (UFunction*) UObject::GObjObjects()->Data[ 58313 ];

	ANowPlayerController_eventStartUnderWaterEffects_Parms StartUnderWaterEffects_Parms;
	StartUnderWaterEffects_Parms.bEnd = bEnd;

	this->ProcessEvent ( pFnStartUnderWaterEffects, &StartUnderWaterEffects_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartBlurEffects
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bEnd                           ( CPF_Parm )

void ANowPlayerController::eventStartBlurEffects ( unsigned long bEnd )
{
	static UFunction* pFnStartBlurEffects = NULL;

	if ( ! pFnStartBlurEffects )
		pFnStartBlurEffects = (UFunction*) UObject::GObjObjects()->Data[ 58311 ];

	ANowPlayerController_eventStartBlurEffects_Parms StartBlurEffects_Parms;
	StartBlurEffects_Parms.bEnd = bEnd;

	this->ProcessEvent ( pFnStartBlurEffects, &StartBlurEffects_Parms, NULL );
};

// Function NowGame.NowPlayerController.EndBlurEffects
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventEndBlurEffects ( )
{
	static UFunction* pFnEndBlurEffects = NULL;

	if ( ! pFnEndBlurEffects )
		pFnEndBlurEffects = (UFunction*) UObject::GObjObjects()->Data[ 58310 ];

	ANowPlayerController_eventEndBlurEffects_Parms EndBlurEffects_Parms;

	this->ProcessEvent ( pFnEndBlurEffects, &EndBlurEffects_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartTimedBlurEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fTime                          ( CPF_Parm )

void ANowPlayerController::eventStartTimedBlurEffect ( float fTime )
{
	static UFunction* pFnStartTimedBlurEffect = NULL;

	if ( ! pFnStartTimedBlurEffect )
		pFnStartTimedBlurEffect = (UFunction*) UObject::GObjObjects()->Data[ 58308 ];

	ANowPlayerController_eventStartTimedBlurEffect_Parms StartTimedBlurEffect_Parms;
	StartTimedBlurEffect_Parms.fTime = fTime;

	this->ProcessEvent ( pFnStartTimedBlurEffect, &StartTimedBlurEffect_Parms, NULL );
};

// Function NowGame.NowPlayerController.setHouseDoorCollisionFalse
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::setHouseDoorCollisionFalse ( )
{
	static UFunction* pFnsetHouseDoorCollisionFalse = NULL;

	if ( ! pFnsetHouseDoorCollisionFalse )
		pFnsetHouseDoorCollisionFalse = (UFunction*) UObject::GObjObjects()->Data[ 58306 ];

	ANowPlayerController_execsetHouseDoorCollisionFalse_Parms setHouseDoorCollisionFalse_Parms;

	this->ProcessEvent ( pFnsetHouseDoorCollisionFalse, &setHouseDoorCollisionFalse_Parms, NULL );
};

// Function NowGame.NowPlayerController.setHouseDoorCollisionTrue
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::setHouseDoorCollisionTrue ( )
{
	static UFunction* pFnsetHouseDoorCollisionTrue = NULL;

	if ( ! pFnsetHouseDoorCollisionTrue )
		pFnsetHouseDoorCollisionTrue = (UFunction*) UObject::GObjObjects()->Data[ 58304 ];

	ANowPlayerController_execsetHouseDoorCollisionTrue_Parms setHouseDoorCollisionTrue_Parms;

	this->ProcessEvent ( pFnsetHouseDoorCollisionTrue, &setHouseDoorCollisionTrue_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetEtherworldsCollision
// [0x00020002] 
// Parameters infos:
// unsigned long                  bTurnOn                        ( CPF_Parm )

void ANowPlayerController::SetEtherworldsCollision ( unsigned long bTurnOn )
{
	static UFunction* pFnSetEtherworldsCollision = NULL;

	if ( ! pFnSetEtherworldsCollision )
		pFnSetEtherworldsCollision = (UFunction*) UObject::GObjObjects()->Data[ 58301 ];

	ANowPlayerController_execSetEtherworldsCollision_Parms SetEtherworldsCollision_Parms;
	SetEtherworldsCollision_Parms.bTurnOn = bTurnOn;

	this->ProcessEvent ( pFnSetEtherworldsCollision, &SetEtherworldsCollision_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartDeathEffects
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bEnd                           ( CPF_Parm )

void ANowPlayerController::eventStartDeathEffects ( unsigned long bEnd )
{
	static UFunction* pFnStartDeathEffects = NULL;

	if ( ! pFnStartDeathEffects )
		pFnStartDeathEffects = (UFunction*) UObject::GObjObjects()->Data[ 58299 ];

	ANowPlayerController_eventStartDeathEffects_Parms StartDeathEffects_Parms;
	StartDeathEffects_Parms.bEnd = bEnd;

	this->ProcessEvent ( pFnStartDeathEffects, &StartDeathEffects_Parms, NULL );
};

// Function NowGame.NowPlayerController.AllGhosts
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void ANowPlayerController::eventAllGhosts ( unsigned long bShow )
{
	static UFunction* pFnAllGhosts = NULL;

	if ( ! pFnAllGhosts )
		pFnAllGhosts = (UFunction*) UObject::GObjObjects()->Data[ 58295 ];

	ANowPlayerController_eventAllGhosts_Parms AllGhosts_Parms;
	AllGhosts_Parms.bShow = bShow;

	this->ProcessEvent ( pFnAllGhosts, &AllGhosts_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetupEtherworldsActor
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::SetupEtherworldsActor ( )
{
	static UFunction* pFnSetupEtherworldsActor = NULL;

	if ( ! pFnSetupEtherworldsActor )
		pFnSetupEtherworldsActor = (UFunction*) UObject::GObjObjects()->Data[ 58291 ];

	ANowPlayerController_execSetupEtherworldsActor_Parms SetupEtherworldsActor_Parms;

	this->ProcessEvent ( pFnSetupEtherworldsActor, &SetupEtherworldsActor_Parms, NULL );
};

// Function NowGame.NowPlayerController.SeeDeadPeopleSpell
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void ANowPlayerController::eventSeeDeadPeopleSpell ( unsigned long bShow )
{
	static UFunction* pFnSeeDeadPeopleSpell = NULL;

	if ( ! pFnSeeDeadPeopleSpell )
		pFnSeeDeadPeopleSpell = (UFunction*) UObject::GObjObjects()->Data[ 58289 ];

	ANowPlayerController_eventSeeDeadPeopleSpell_Parms SeeDeadPeopleSpell_Parms;
	SeeDeadPeopleSpell_Parms.bShow = bShow;

	this->ProcessEvent ( pFnSeeDeadPeopleSpell, &SeeDeadPeopleSpell_Parms, NULL );
};

// Function NowGame.NowPlayerController.stopHouseModeSearch
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventstopHouseModeSearch ( )
{
	static UFunction* pFnstopHouseModeSearch = NULL;

	if ( ! pFnstopHouseModeSearch )
		pFnstopHouseModeSearch = (UFunction*) UObject::GObjObjects()->Data[ 58288 ];

	ANowPlayerController_eventstopHouseModeSearch_Parms stopHouseModeSearch_Parms;

	this->ProcessEvent ( pFnstopHouseModeSearch, &stopHouseModeSearch_Parms, NULL );
};

// Function NowGame.NowPlayerController.searchForHouses
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::searchForHouses ( )
{
	static UFunction* pFnsearchForHouses = NULL;

	if ( ! pFnsearchForHouses )
		pFnsearchForHouses = (UFunction*) UObject::GObjObjects()->Data[ 58284 ];

	ANowPlayerController_execsearchForHouses_Parms searchForHouses_Parms;

	this->ProcessEvent ( pFnsearchForHouses, &searchForHouses_Parms, NULL );
};

// Function NowGame.NowPlayerController.ToCloseToPylon
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vLoc                           ( CPF_Parm )

bool ANowPlayerController::ToCloseToPylon ( struct FVector vLoc )
{
	static UFunction* pFnToCloseToPylon = NULL;

	if ( ! pFnToCloseToPylon )
		pFnToCloseToPylon = (UFunction*) UObject::GObjObjects()->Data[ 58280 ];

	ANowPlayerController_execToCloseToPylon_Parms ToCloseToPylon_Parms;
	memcpy ( &ToCloseToPylon_Parms.vLoc, &vLoc, 0xC );

	this->ProcessEvent ( pFnToCloseToPylon, &ToCloseToPylon_Parms, NULL );

	return ToCloseToPylon_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.turnOfSearchMode
// [0x00820002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* _house                         ( CPF_Parm )

void ANowPlayerController::turnOfSearchMode ( class ANowAtlasAvatarPlayerHouse* _house )
{
	static UFunction* pFnturnOfSearchMode = NULL;

	if ( ! pFnturnOfSearchMode )
		pFnturnOfSearchMode = (UFunction*) UObject::GObjObjects()->Data[ 58275 ];

	ANowPlayerController_execturnOfSearchMode_Parms turnOfSearchMode_Parms;
	turnOfSearchMode_Parms._house = _house;

	this->ProcessEvent ( pFnturnOfSearchMode, &turnOfSearchMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.checkHouse
// [0x00820002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* _house                         ( CPF_Parm )

void ANowPlayerController::checkHouse ( class ANowAtlasAvatarPlayerHouse* _house )
{
	static UFunction* pFncheckHouse = NULL;

	if ( ! pFncheckHouse )
		pFncheckHouse = (UFunction*) UObject::GObjObjects()->Data[ 58270 ];

	ANowPlayerController_execcheckHouse_Parms checkHouse_Parms;
	checkHouse_Parms._house = _house;

	this->ProcessEvent ( pFncheckHouse, &checkHouse_Parms, NULL );
};

// Function NowGame.NowPlayerController.startHouseModeSearch
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  modeOnOff                      ( CPF_Parm )
// struct FString                 _structureType                 ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::eventstartHouseModeSearch ( unsigned long modeOnOff, struct FString _structureType )
{
	static UFunction* pFnstartHouseModeSearch = NULL;

	if ( ! pFnstartHouseModeSearch )
		pFnstartHouseModeSearch = (UFunction*) UObject::GObjObjects()->Data[ 58267 ];

	ANowPlayerController_eventstartHouseModeSearch_Parms startHouseModeSearch_Parms;
	startHouseModeSearch_Parms.modeOnOff = modeOnOff;
	memcpy ( &startHouseModeSearch_Parms._structureType, &_structureType, 0xC );

	this->ProcessEvent ( pFnstartHouseModeSearch, &startHouseModeSearch_Parms, NULL );
};

// Function NowGame.NowPlayerController.NowPawnDied
// [0x00024002] 
// Parameters infos:
// unsigned long                  Killed                         ( CPF_Parm )
// class ANowCorpse*              Corpse                         ( CPF_Parm )
// struct FName                   lastHitBoneName                ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::NowPawnDied ( unsigned long Killed, class ANowCorpse* Corpse, struct FName lastHitBoneName )
{
	static UFunction* pFnNowPawnDied = NULL;

	if ( ! pFnNowPawnDied )
		pFnNowPawnDied = (UFunction*) UObject::GObjObjects()->Data[ 58261 ];

	ANowPlayerController_execNowPawnDied_Parms NowPawnDied_Parms;
	NowPawnDied_Parms.Killed = Killed;
	NowPawnDied_Parms.Corpse = Corpse;
	memcpy ( &NowPawnDied_Parms.lastHitBoneName, &lastHitBoneName, 0x8 );

	this->ProcessEvent ( pFnNowPawnDied, &NowPawnDied_Parms, NULL );
};

// Function NowGame.NowPlayerController.NowPawnDiedLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventNowPawnDiedLogin ( )
{
	static UFunction* pFnNowPawnDiedLogin = NULL;

	if ( ! pFnNowPawnDiedLogin )
		pFnNowPawnDiedLogin = (UFunction*) UObject::GObjObjects()->Data[ 58260 ];

	ANowPlayerController_eventNowPawnDiedLogin_Parms NowPawnDiedLogin_Parms;

	this->ProcessEvent ( pFnNowPawnDiedLogin, &NowPawnDiedLogin_Parms, NULL );
};

// Function NowGame.NowPlayerController.ResetCameraMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventResetCameraMode ( )
{
	static UFunction* pFnResetCameraMode = NULL;

	if ( ! pFnResetCameraMode )
		pFnResetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 58259 ];

	ANowPlayerController_eventResetCameraMode_Parms ResetCameraMode_Parms;

	this->ProcessEvent ( pFnResetCameraMode, &ResetCameraMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetCameraMode
// [0x00020002] 
// Parameters infos:
// struct FName                   NewCamMode                     ( CPF_Parm )

void ANowPlayerController::SetCameraMode ( struct FName NewCamMode )
{
	static UFunction* pFnSetCameraMode = NULL;

	if ( ! pFnSetCameraMode )
		pFnSetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 58257 ];

	ANowPlayerController_execSetCameraMode_Parms SetCameraMode_Parms;
	memcpy ( &SetCameraMode_Parms.NewCamMode, &NewCamMode, 0x8 );

	this->ProcessEvent ( pFnSetCameraMode, &SetCameraMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.NowSetSoundMode
// [0x00020000] 
// Parameters infos:
// struct FName                   newSoundMode                   ( CPF_Parm )

void ANowPlayerController::NowSetSoundMode ( struct FName newSoundMode )
{
	static UFunction* pFnNowSetSoundMode = NULL;

	if ( ! pFnNowSetSoundMode )
		pFnNowSetSoundMode = (UFunction*) UObject::GObjObjects()->Data[ 58255 ];

	ANowPlayerController_execNowSetSoundMode_Parms NowSetSoundMode_Parms;
	memcpy ( &NowSetSoundMode_Parms.newSoundMode, &newSoundMode, 0x8 );

	this->ProcessEvent ( pFnNowSetSoundMode, &NowSetSoundMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetBeastCameraView
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )

void ANowPlayerController::eventSetBeastCameraView ( class AActor* A )
{
	static UFunction* pFnSetBeastCameraView = NULL;

	if ( ! pFnSetBeastCameraView )
		pFnSetBeastCameraView = (UFunction*) UObject::GObjObjects()->Data[ 58251 ];

	ANowPlayerController_eventSetBeastCameraView_Parms SetBeastCameraView_Parms;
	SetBeastCameraView_Parms.A = A;

	this->ProcessEvent ( pFnSetBeastCameraView, &SetBeastCameraView_Parms, NULL );
};

// Function NowGame.NowPlayerController.HasLineOfSightTo
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  TestActor                      ( CPF_Parm )
// float                          LoSDegreeCOSINEValue           ( CPF_OptionalParm | CPF_Parm )

bool ANowPlayerController::eventHasLineOfSightTo ( class AActor* TestActor, float LoSDegreeCOSINEValue )
{
	static UFunction* pFnHasLineOfSightTo = NULL;

	if ( ! pFnHasLineOfSightTo )
		pFnHasLineOfSightTo = (UFunction*) UObject::GObjObjects()->Data[ 58233 ];

	ANowPlayerController_eventHasLineOfSightTo_Parms HasLineOfSightTo_Parms;
	HasLineOfSightTo_Parms.TestActor = TestActor;
	HasLineOfSightTo_Parms.LoSDegreeCOSINEValue = LoSDegreeCOSINEValue;

	this->ProcessEvent ( pFnHasLineOfSightTo, &HasLineOfSightTo_Parms, NULL );

	return HasLineOfSightTo_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.TargetAndUse
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::TargetAndUse ( )
{
	static UFunction* pFnTargetAndUse = NULL;

	if ( ! pFnTargetAndUse )
		pFnTargetAndUse = (UFunction*) UObject::GObjObjects()->Data[ 58232 ];

	ANowPlayerController_execTargetAndUse_Parms TargetAndUse_Parms;

	this->ProcessEvent ( pFnTargetAndUse, &TargetAndUse_Parms, NULL );
};

// Function NowGame.NowPlayerController.EscPressed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::EscPressed ( )
{
	static UFunction* pFnEscPressed = NULL;

	if ( ! pFnEscPressed )
		pFnEscPressed = (UFunction*) UObject::GObjObjects()->Data[ 56566 ];

	ANowPlayerController_execEscPressed_Parms EscPressed_Parms;

	this->ProcessEvent ( pFnEscPressed, &EscPressed_Parms, NULL );

	return EscPressed_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.LostInputFocus
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::LostInputFocus ( )
{
	static UFunction* pFnLostInputFocus = NULL;

	if ( ! pFnLostInputFocus )
		pFnLostInputFocus = (UFunction*) UObject::GObjObjects()->Data[ 58231 ];

	ANowPlayerController_execLostInputFocus_Parms LostInputFocus_Parms;

	this->ProcessEvent ( pFnLostInputFocus, &LostInputFocus_Parms, NULL );
};

// Function NowGame.NowPlayerController.NumberPressed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iNr                            ( CPF_Parm )

bool ANowPlayerController::eventNumberPressed ( int iNr )
{
	static UFunction* pFnNumberPressed = NULL;

	if ( ! pFnNumberPressed )
		pFnNumberPressed = (UFunction*) UObject::GObjObjects()->Data[ 58228 ];

	ANowPlayerController_eventNumberPressed_Parms NumberPressed_Parms;
	NumberPressed_Parms.iNr = iNr;

	this->ProcessEvent ( pFnNumberPressed, &NumberPressed_Parms, NULL );

	return NumberPressed_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.TargetSelfOff
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::TargetSelfOff ( )
{
	static UFunction* pFnTargetSelfOff = NULL;

	if ( ! pFnTargetSelfOff )
		pFnTargetSelfOff = (UFunction*) UObject::GObjObjects()->Data[ 58227 ];

	ANowPlayerController_execTargetSelfOff_Parms TargetSelfOff_Parms;

	this->ProcessEvent ( pFnTargetSelfOff, &TargetSelfOff_Parms, NULL );
};

// Function NowGame.NowPlayerController.TargetSelfOn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::TargetSelfOn ( )
{
	static UFunction* pFnTargetSelfOn = NULL;

	if ( ! pFnTargetSelfOn )
		pFnTargetSelfOn = (UFunction*) UObject::GObjObjects()->Data[ 58226 ];

	ANowPlayerController_execTargetSelfOn_Parms TargetSelfOn_Parms;

	this->ProcessEvent ( pFnTargetSelfOn, &TargetSelfOn_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartDelayTimer
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Why                            ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// float                          Time                           ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::eventStartDelayTimer ( struct FString Why, float Time )
{
	static UFunction* pFnStartDelayTimer = NULL;

	if ( ! pFnStartDelayTimer )
		pFnStartDelayTimer = (UFunction*) UObject::GObjObjects()->Data[ 58223 ];

	ANowPlayerController_eventStartDelayTimer_Parms StartDelayTimer_Parms;
	memcpy ( &StartDelayTimer_Parms.Why, &Why, 0xC );
	StartDelayTimer_Parms.Time = Time;

	this->ProcessEvent ( pFnStartDelayTimer, &StartDelayTimer_Parms, NULL );
};

// Function NowGame.NowPlayerController.SprintOff
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::SprintOff ( )
{
	static UFunction* pFnSprintOff = NULL;

	if ( ! pFnSprintOff )
		pFnSprintOff = (UFunction*) UObject::GObjObjects()->Data[ 58222 ];

	ANowPlayerController_execSprintOff_Parms SprintOff_Parms;

	this->ProcessEvent ( pFnSprintOff, &SprintOff_Parms, NULL );
};

// Function NowGame.NowPlayerController.SprintOn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::SprintOn ( )
{
	static UFunction* pFnSprintOn = NULL;

	if ( ! pFnSprintOn )
		pFnSprintOn = (UFunction*) UObject::GObjObjects()->Data[ 58221 ];

	ANowPlayerController_execSprintOn_Parms SprintOn_Parms;

	this->ProcessEvent ( pFnSprintOn, &SprintOn_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetServerTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowPlayerController::GetServerTime ( )
{
	static UFunction* pFnGetServerTime = NULL;

	if ( ! pFnGetServerTime )
		pFnGetServerTime = (UFunction*) UObject::GObjObjects()->Data[ 58219 ];

	ANowPlayerController_execGetServerTime_Parms GetServerTime_Parms;

	pFnGetServerTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetServerTime, &GetServerTime_Parms, NULL );

	pFnGetServerTime->FunctionFlags |= 0x400;

	return GetServerTime_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetAtlasFlag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  C                              ( CPF_Parm )

int ANowPlayerController::GetAtlasFlag ( class AActor* C )
{
	static UFunction* pFnGetAtlasFlag = NULL;

	if ( ! pFnGetAtlasFlag )
		pFnGetAtlasFlag = (UFunction*) UObject::GObjObjects()->Data[ 58216 ];

	ANowPlayerController_execGetAtlasFlag_Parms GetAtlasFlag_Parms;
	GetAtlasFlag_Parms.C = C;

	pFnGetAtlasFlag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasFlag, &GetAtlasFlag_Parms, NULL );

	pFnGetAtlasFlag->FunctionFlags |= 0x400;

	return GetAtlasFlag_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetAtlasMaxHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  C                              ( CPF_Parm )

int ANowPlayerController::GetAtlasMaxHealth ( class AActor* C )
{
	static UFunction* pFnGetAtlasMaxHealth = NULL;

	if ( ! pFnGetAtlasMaxHealth )
		pFnGetAtlasMaxHealth = (UFunction*) UObject::GObjObjects()->Data[ 49371 ];

	ANowPlayerController_execGetAtlasMaxHealth_Parms GetAtlasMaxHealth_Parms;
	GetAtlasMaxHealth_Parms.C = C;

	pFnGetAtlasMaxHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasMaxHealth, &GetAtlasMaxHealth_Parms, NULL );

	pFnGetAtlasMaxHealth->FunctionFlags |= 0x400;

	return GetAtlasMaxHealth_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetAtlasHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  C                              ( CPF_Parm )

int ANowPlayerController::GetAtlasHealth ( class AActor* C )
{
	static UFunction* pFnGetAtlasHealth = NULL;

	if ( ! pFnGetAtlasHealth )
		pFnGetAtlasHealth = (UFunction*) UObject::GObjObjects()->Data[ 49369 ];

	ANowPlayerController_execGetAtlasHealth_Parms GetAtlasHealth_Parms;
	GetAtlasHealth_Parms.C = C;

	pFnGetAtlasHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasHealth, &GetAtlasHealth_Parms, NULL );

	pFnGetAtlasHealth->FunctionFlags |= 0x400;

	return GetAtlasHealth_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.CanDodge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::CanDodge ( )
{
	static UFunction* pFnCanDodge = NULL;

	if ( ! pFnCanDodge )
		pFnCanDodge = (UFunction*) UObject::GObjObjects()->Data[ 57317 ];

	ANowPlayerController_execCanDodge_Parms CanDodge_Parms;

	this->ProcessEvent ( pFnCanDodge, &CanDodge_Parms, NULL );

	return CanDodge_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetStatManager
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UStatManager*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UStatManager* ANowPlayerController::eventGetStatManager ( )
{
	static UFunction* pFnGetStatManager = NULL;

	if ( ! pFnGetStatManager )
		pFnGetStatManager = (UFunction*) UObject::GObjObjects()->Data[ 47828 ];

	ANowPlayerController_eventGetStatManager_Parms GetStatManager_Parms;

	this->ProcessEvent ( pFnGetStatManager, &GetStatManager_Parms, NULL );

	return GetStatManager_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetMountBrain
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UMountBrain*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UMountBrain* ANowPlayerController::eventGetMountBrain ( )
{
	static UFunction* pFnGetMountBrain = NULL;

	if ( ! pFnGetMountBrain )
		pFnGetMountBrain = (UFunction*) UObject::GObjObjects()->Data[ 58212 ];

	ANowPlayerController_eventGetMountBrain_Parms GetMountBrain_Parms;

	this->ProcessEvent ( pFnGetMountBrain, &GetMountBrain_Parms, NULL );

	return GetMountBrain_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetMount
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarAiMount*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarAiMount* ANowPlayerController::eventGetMount ( )
{
	static UFunction* pFnGetMount = NULL;

	if ( ! pFnGetMount )
		pFnGetMount = (UFunction*) UObject::GObjObjects()->Data[ 58210 ];

	ANowPlayerController_eventGetMount_Parms GetMount_Parms;

	this->ProcessEvent ( pFnGetMount, &GetMount_Parms, NULL );

	return GetMount_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GameMessage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 WhatMessage                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sChan                          ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::eventGameMessage ( struct FString WhatMessage, struct FString sChan )
{
	static UFunction* pFnGameMessage = NULL;

	if ( ! pFnGameMessage )
		pFnGameMessage = (UFunction*) UObject::GObjObjects()->Data[ 58207 ];

	ANowPlayerController_eventGameMessage_Parms GameMessage_Parms;
	memcpy ( &GameMessage_Parms.WhatMessage, &WhatMessage, 0xC );
	memcpy ( &GameMessage_Parms.sChan, &sChan, 0xC );

	this->ProcessEvent ( pFnGameMessage, &GameMessage_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetTargetInAim
// [0x00824A02] ( FUNC_Exec | FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Range                          ( CPF_Parm )
// int                            ExtraTraceFlags                ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bRadiusCheck                   ( CPF_OptionalParm | CPF_Parm )

class AActor* ANowPlayerController::GetTargetInAim ( int Range, int ExtraTraceFlags, unsigned long bRadiusCheck )
{
	static UFunction* pFnGetTargetInAim = NULL;

	if ( ! pFnGetTargetInAim )
		pFnGetTargetInAim = (UFunction*) UObject::GObjObjects()->Data[ 54800 ];

	ANowPlayerController_execGetTargetInAim_Parms GetTargetInAim_Parms;
	GetTargetInAim_Parms.Range = Range;
	GetTargetInAim_Parms.ExtraTraceFlags = ExtraTraceFlags;
	GetTargetInAim_Parms.bRadiusCheck = bRadiusCheck;

	this->ProcessEvent ( pFnGetTargetInAim, &GetTargetInAim_Parms, NULL );

	return GetTargetInAim_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetTargetValueInAim
// [0x00C20802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iRange                         ( CPF_Parm )
// unsigned char                  eTargetType                    ( CPF_Parm )
// struct FString                 sTargetValue                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool ANowPlayerController::eventGetTargetValueInAim ( int iRange, unsigned char eTargetType, struct FString* sTargetValue )
{
	static UFunction* pFnGetTargetValueInAim = NULL;

	if ( ! pFnGetTargetValueInAim )
		pFnGetTargetValueInAim = (UFunction*) UObject::GObjObjects()->Data[ 58169 ];

	ANowPlayerController_eventGetTargetValueInAim_Parms GetTargetValueInAim_Parms;
	GetTargetValueInAim_Parms.iRange = iRange;
	GetTargetValueInAim_Parms.eTargetType = eTargetType;

	this->ProcessEvent ( pFnGetTargetValueInAim, &GetTargetValueInAim_Parms, NULL );

	if ( sTargetValue )
		memcpy ( sTargetValue, &GetTargetValueInAim_Parms.sTargetValue, 0xC );

	return GetTargetValueInAim_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ResetTargetFlags
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventResetTargetFlags ( )
{
	static UFunction* pFnResetTargetFlags = NULL;

	if ( ! pFnResetTargetFlags )
		pFnResetTargetFlags = (UFunction*) UObject::GObjObjects()->Data[ 58167 ];

	ANowPlayerController_eventResetTargetFlags_Parms ResetTargetFlags_Parms;

	this->ProcessEvent ( pFnResetTargetFlags, &ResetTargetFlags_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ANowPlayerController::eventGetTarget ( )
{
	static UFunction* pFnGetTarget = NULL;

	if ( ! pFnGetTarget )
		pFnGetTarget = (UFunction*) UObject::GObjObjects()->Data[ 45928 ];

	ANowPlayerController_eventGetTarget_Parms GetTarget_Parms;

	this->ProcessEvent ( pFnGetTarget, &GetTarget_Parms, NULL );

	return GetTarget_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ClearTargets
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventClearTargets ( )
{
	static UFunction* pFnClearTargets = NULL;

	if ( ! pFnClearTargets )
		pFnClearTargets = (UFunction*) UObject::GObjObjects()->Data[ 58166 ];

	ANowPlayerController_eventClearTargets_Parms ClearTargets_Parms;

	this->ProcessEvent ( pFnClearTargets, &ClearTargets_Parms, NULL );
};

// Function NowGame.NowPlayerController.CheckTargetRange
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::CheckTargetRange ( )
{
	static UFunction* pFnCheckTargetRange = NULL;

	if ( ! pFnCheckTargetRange )
		pFnCheckTargetRange = (UFunction*) UObject::GObjObjects()->Data[ 58165 ];

	ANowPlayerController_execCheckTargetRange_Parms CheckTargetRange_Parms;

	this->ProcessEvent ( pFnCheckTargetRange, &CheckTargetRange_Parms, NULL );
};

// Function NowGame.NowPlayerController.CheckForHouseSearch
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::CheckForHouseSearch ( )
{
	static UFunction* pFnCheckForHouseSearch = NULL;

	if ( ! pFnCheckForHouseSearch )
		pFnCheckForHouseSearch = (UFunction*) UObject::GObjObjects()->Data[ 58156 ];

	ANowPlayerController_execCheckForHouseSearch_Parms CheckForHouseSearch_Parms;

	this->ProcessEvent ( pFnCheckForHouseSearch, &CheckForHouseSearch_Parms, NULL );

	return CheckForHouseSearch_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.TargetNearestEnemy
// [0x00820202] ( FUNC_Exec )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::TargetNearestEnemy ( )
{
	static UFunction* pFnTargetNearestEnemy = NULL;

	if ( ! pFnTargetNearestEnemy )
		pFnTargetNearestEnemy = (UFunction*) UObject::GObjObjects()->Data[ 58141 ];

	ANowPlayerController_execTargetNearestEnemy_Parms TargetNearestEnemy_Parms;

	this->ProcessEvent ( pFnTargetNearestEnemy, &TargetNearestEnemy_Parms, NULL );

	return TargetNearestEnemy_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.TabLookForTarget
// [0x00820002] 
// Parameters infos:

void ANowPlayerController::TabLookForTarget ( )
{
	static UFunction* pFnTabLookForTarget = NULL;

	if ( ! pFnTabLookForTarget )
		pFnTabLookForTarget = (UFunction*) UObject::GObjObjects()->Data[ 58129 ];

	ANowPlayerController_execTabLookForTarget_Parms TabLookForTarget_Parms;

	this->ProcessEvent ( pFnTabLookForTarget, &TabLookForTarget_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetTargetHitInfo
// [0x00820002] 
// Parameters infos:
// struct FTraceHitInfo           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FTraceHitInfo ANowPlayerController::GetTargetHitInfo ( )
{
	static UFunction* pFnGetTargetHitInfo = NULL;

	if ( ! pFnGetTargetHitInfo )
		pFnGetTargetHitInfo = (UFunction*) UObject::GObjObjects()->Data[ 51264 ];

	ANowPlayerController_execGetTargetHitInfo_Parms GetTargetHitInfo_Parms;

	this->ProcessEvent ( pFnGetTargetHitInfo, &GetTargetHitInfo_Parms, NULL );

	return GetTargetHitInfo_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.MortalScreenshotTiled
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            iMulti                         ( CPF_Parm )

void ANowPlayerController::MortalScreenshotTiled ( int iMulti )
{
	static UFunction* pFnMortalScreenshotTiled = NULL;

	if ( ! pFnMortalScreenshotTiled )
		pFnMortalScreenshotTiled = (UFunction*) UObject::GObjObjects()->Data[ 58116 ];

	ANowPlayerController_execMortalScreenshotTiled_Parms MortalScreenshotTiled_Parms;
	MortalScreenshotTiled_Parms.iMulti = iMulti;

	this->ProcessEvent ( pFnMortalScreenshotTiled, &MortalScreenshotTiled_Parms, NULL );
};

// Function NowGame.NowPlayerController.MortalScreenshotHighRes
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::MortalScreenshotHighRes ( )
{
	static UFunction* pFnMortalScreenshotHighRes = NULL;

	if ( ! pFnMortalScreenshotHighRes )
		pFnMortalScreenshotHighRes = (UFunction*) UObject::GObjObjects()->Data[ 58115 ];

	ANowPlayerController_execMortalScreenshotHighRes_Parms MortalScreenshotHighRes_Parms;

	this->ProcessEvent ( pFnMortalScreenshotHighRes, &MortalScreenshotHighRes_Parms, NULL );
};

// Function NowGame.NowPlayerController.MortalScreenshot
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::MortalScreenshot ( )
{
	static UFunction* pFnMortalScreenshot = NULL;

	if ( ! pFnMortalScreenshot )
		pFnMortalScreenshot = (UFunction*) UObject::GObjObjects()->Data[ 58114 ];

	ANowPlayerController_execMortalScreenshot_Parms MortalScreenshot_Parms;

	this->ProcessEvent ( pFnMortalScreenshot, &MortalScreenshot_Parms, NULL );
};

// Function NowGame.NowPlayerController.RHoldTab
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::RHoldTab ( )
{
	static UFunction* pFnRHoldTab = NULL;

	if ( ! pFnRHoldTab )
		pFnRHoldTab = (UFunction*) UObject::GObjObjects()->Data[ 58113 ];

	ANowPlayerController_execRHoldTab_Parms RHoldTab_Parms;

	this->ProcessEvent ( pFnRHoldTab, &RHoldTab_Parms, NULL );
};

// Function NowGame.NowPlayerController.HoldTab
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::HoldTab ( )
{
	static UFunction* pFnHoldTab = NULL;

	if ( ! pFnHoldTab )
		pFnHoldTab = (UFunction*) UObject::GObjObjects()->Data[ 58112 ];

	ANowPlayerController_execHoldTab_Parms HoldTab_Parms;

	this->ProcessEvent ( pFnHoldTab, &HoldTab_Parms, NULL );
};

// Function NowGame.NowPlayerController.FocusCharacterOnPoint
// [0x00020002] 
// Parameters infos:
// struct FVector                 WorldLoc                       ( CPF_Parm )

void ANowPlayerController::FocusCharacterOnPoint ( struct FVector WorldLoc )
{
	static UFunction* pFnFocusCharacterOnPoint = NULL;

	if ( ! pFnFocusCharacterOnPoint )
		pFnFocusCharacterOnPoint = (UFunction*) UObject::GObjObjects()->Data[ 58110 ];

	ANowPlayerController_execFocusCharacterOnPoint_Parms FocusCharacterOnPoint_Parms;
	memcpy ( &FocusCharacterOnPoint_Parms.WorldLoc, &WorldLoc, 0xC );

	this->ProcessEvent ( pFnFocusCharacterOnPoint, &FocusCharacterOnPoint_Parms, NULL );
};

// Function NowGame.NowPlayerController.SelectAtlasTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  NewTarget                      ( CPF_Parm )

void ANowPlayerController::SelectAtlasTarget ( class AActor* NewTarget )
{
	static UFunction* pFnSelectAtlasTarget = NULL;

	if ( ! pFnSelectAtlasTarget )
		pFnSelectAtlasTarget = (UFunction*) UObject::GObjObjects()->Data[ 58108 ];

	ANowPlayerController_execSelectAtlasTarget_Parms SelectAtlasTarget_Parms;
	SelectAtlasTarget_Parms.NewTarget = NewTarget;

	this->ProcessEvent ( pFnSelectAtlasTarget, &SelectAtlasTarget_Parms, NULL );
};

// Function NowGame.NowPlayerController.UpdateGFXTarget
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::UpdateGFXTarget ( )
{
	static UFunction* pFnUpdateGFXTarget = NULL;

	if ( ! pFnUpdateGFXTarget )
		pFnUpdateGFXTarget = (UFunction*) UObject::GObjObjects()->Data[ 58102 ];

	ANowPlayerController_execUpdateGFXTarget_Parms UpdateGFXTarget_Parms;

	this->ProcessEvent ( pFnUpdateGFXTarget, &UpdateGFXTarget_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetTarget
// [0x00020002] 
// Parameters infos:
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 TargetName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            CurHealth                      ( CPF_Parm )
// int                            MaxHealth                      ( CPF_Parm )
// int                            Flag                           ( CPF_Parm )
// class AActor*                  pActor                         ( CPF_Parm )

void ANowPlayerController::SetTarget ( struct FString DisplayName, struct FString TargetName, int CurHealth, int MaxHealth, int Flag, class AActor* pActor )
{
	static UFunction* pFnSetTarget = NULL;

	if ( ! pFnSetTarget )
		pFnSetTarget = (UFunction*) UObject::GObjObjects()->Data[ 58095 ];

	ANowPlayerController_execSetTarget_Parms SetTarget_Parms;
	memcpy ( &SetTarget_Parms.DisplayName, &DisplayName, 0xC );
	memcpy ( &SetTarget_Parms.TargetName, &TargetName, 0xC );
	SetTarget_Parms.CurHealth = CurHealth;
	SetTarget_Parms.MaxHealth = MaxHealth;
	SetTarget_Parms.Flag = Flag;
	SetTarget_Parms.pActor = pActor;

	this->ProcessEvent ( pFnSetTarget, &SetTarget_Parms, NULL );
};

// Function NowGame.NowPlayerController.UseTarget
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::UseTarget ( )
{
	static UFunction* pFnUseTarget = NULL;

	if ( ! pFnUseTarget )
		pFnUseTarget = (UFunction*) UObject::GObjObjects()->Data[ 58092 ];

	ANowPlayerController_execUseTarget_Parms UseTarget_Parms;

	this->ProcessEvent ( pFnUseTarget, &UseTarget_Parms, NULL );
};

// Function NowGame.NowPlayerController.CloseEnough
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pTarget                        ( CPF_Parm )

bool ANowPlayerController::CloseEnough ( class AActor* pTarget )
{
	static UFunction* pFnCloseEnough = NULL;

	if ( ! pFnCloseEnough )
		pFnCloseEnough = (UFunction*) UObject::GObjObjects()->Data[ 55969 ];

	ANowPlayerController_execCloseEnough_Parms CloseEnough_Parms;
	CloseEnough_Parms.pTarget = pTarget;

	this->ProcessEvent ( pFnCloseEnough, &CloseEnough_Parms, NULL );

	return CloseEnough_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.Dismount
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::Dismount ( )
{
	static UFunction* pFnDismount = NULL;

	if ( ! pFnDismount )
		pFnDismount = (UFunction*) UObject::GObjObjects()->Data[ 58088 ];

	ANowPlayerController_execDismount_Parms Dismount_Parms;

	this->ProcessEvent ( pFnDismount, &Dismount_Parms, NULL );
};

// Function NowGame.NowPlayerController.CancelCharge
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::CancelCharge ( )
{
	static UFunction* pFnCancelCharge = NULL;

	if ( ! pFnCancelCharge )
		pFnCancelCharge = (UFunction*) UObject::GObjObjects()->Data[ 58087 ];

	ANowPlayerController_execCancelCharge_Parms CancelCharge_Parms;

	this->ProcessEvent ( pFnCancelCharge, &CancelCharge_Parms, NULL );
};

// Function NowGame.NowPlayerController.Quick
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void ANowPlayerController::Quick ( int Index )
{
	static UFunction* pFnQuick = NULL;

	if ( ! pFnQuick )
		pFnQuick = (UFunction*) UObject::GObjObjects()->Data[ 58085 ];

	ANowPlayerController_execQuick_Parms Quick_Parms;
	Quick_Parms.Index = Index;

	this->ProcessEvent ( pFnQuick, &Quick_Parms, NULL );
};

// Function NowGame.NowPlayerController.ToggleCombatMode
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::ToggleCombatMode ( unsigned long bForce )
{
	static UFunction* pFnToggleCombatMode = NULL;

	if ( ! pFnToggleCombatMode )
		pFnToggleCombatMode = (UFunction*) UObject::GObjObjects()->Data[ 58082 ];

	ANowPlayerController_execToggleCombatMode_Parms ToggleCombatMode_Parms;
	ToggleCombatMode_Parms.bForce = bForce;

	this->ProcessEvent ( pFnToggleCombatMode, &ToggleCombatMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetGFX
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowGFXHud*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHud* ANowPlayerController::eventGetGFX ( )
{
	static UFunction* pFnGetGFX = NULL;

	if ( ! pFnGetGFX )
		pFnGetGFX = (UFunction*) UObject::GObjObjects()->Data[ 47084 ];

	ANowPlayerController_eventGetGFX_Parms GetGFX_Parms;

	this->ProcessEvent ( pFnGetGFX, &GetGFX_Parms, NULL );

	return GetGFX_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetGFXHud
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* ANowPlayerController::eventGetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = (UFunction*) UObject::GObjObjects()->Data[ 45871 ];

	ANowPlayerController_eventGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.IsPhysOk
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::eventIsPhysOk ( )
{
	static UFunction* pFnIsPhysOk = NULL;

	if ( ! pFnIsPhysOk )
		pFnIsPhysOk = (UFunction*) UObject::GObjObjects()->Data[ 47416 ];

	ANowPlayerController_eventIsPhysOk_Parms IsPhysOk_Parms;

	this->ProcessEvent ( pFnIsPhysOk, &IsPhysOk_Parms, NULL );

	return IsPhysOk_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.SetFishingMode
// [0x00024002] 
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::SetFishingMode ( unsigned long bNewValue, unsigned long bForce )
{
	static UFunction* pFnSetFishingMode = NULL;

	if ( ! pFnSetFishingMode )
		pFnSetFishingMode = (UFunction*) UObject::GObjObjects()->Data[ 58079 ];

	ANowPlayerController_execSetFishingMode_Parms SetFishingMode_Parms;
	SetFishingMode_Parms.bNewValue = bNewValue;
	SetFishingMode_Parms.bForce = bForce;

	this->ProcessEvent ( pFnSetFishingMode, &SetFishingMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetRangedMode
// [0x00024002] 
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::SetRangedMode ( unsigned long bNewValue, unsigned long bForce )
{
	static UFunction* pFnSetRangedMode = NULL;

	if ( ! pFnSetRangedMode )
		pFnSetRangedMode = (UFunction*) UObject::GObjObjects()->Data[ 58076 ];

	ANowPlayerController_execSetRangedMode_Parms SetRangedMode_Parms;
	SetRangedMode_Parms.bNewValue = bNewValue;
	SetRangedMode_Parms.bForce = bForce;

	this->ProcessEvent ( pFnSetRangedMode, &SetRangedMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetMeleeMode
// [0x00024002] 
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::SetMeleeMode ( unsigned long bNewValue, unsigned long bForce )
{
	static UFunction* pFnSetMeleeMode = NULL;

	if ( ! pFnSetMeleeMode )
		pFnSetMeleeMode = (UFunction*) UObject::GObjObjects()->Data[ 58073 ];

	ANowPlayerController_execSetMeleeMode_Parms SetMeleeMode_Parms;
	SetMeleeMode_Parms.bNewValue = bNewValue;
	SetMeleeMode_Parms.bForce = bForce;

	this->ProcessEvent ( pFnSetMeleeMode, &SetMeleeMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.CheckCombatTimerOk
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::eventCheckCombatTimerOk ( )
{
	static UFunction* pFnCheckCombatTimerOk = NULL;

	if ( ! pFnCheckCombatTimerOk )
		pFnCheckCombatTimerOk = (UFunction*) UObject::GObjObjects()->Data[ 47182 ];

	ANowPlayerController_eventCheckCombatTimerOk_Parms CheckCombatTimerOk_Parms;

	this->ProcessEvent ( pFnCheckCombatTimerOk, &CheckCombatTimerOk_Parms, NULL );

	return CheckCombatTimerOk_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ExitCombatMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventExitCombatMode ( )
{
	static UFunction* pFnExitCombatMode = NULL;

	if ( ! pFnExitCombatMode )
		pFnExitCombatMode = (UFunction*) UObject::GObjObjects()->Data[ 58072 ];

	ANowPlayerController_eventExitCombatMode_Parms ExitCombatMode_Parms;

	this->ProcessEvent ( pFnExitCombatMode, &ExitCombatMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.EnterCombatModeLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventEnterCombatModeLogin ( )
{
	static UFunction* pFnEnterCombatModeLogin = NULL;

	if ( ! pFnEnterCombatModeLogin )
		pFnEnterCombatModeLogin = (UFunction*) UObject::GObjObjects()->Data[ 58071 ];

	ANowPlayerController_eventEnterCombatModeLogin_Parms EnterCombatModeLogin_Parms;

	this->ProcessEvent ( pFnEnterCombatModeLogin, &EnterCombatModeLogin_Parms, NULL );
};

// Function NowGame.NowPlayerController.ForceCamera
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          Time                           ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::eventForceCamera ( float Time )
{
	static UFunction* pFnForceCamera = NULL;

	if ( ! pFnForceCamera )
		pFnForceCamera = (UFunction*) UObject::GObjObjects()->Data[ 58069 ];

	ANowPlayerController_eventForceCamera_Parms ForceCamera_Parms;
	ForceCamera_Parms.Time = Time;

	this->ProcessEvent ( pFnForceCamera, &ForceCamera_Parms, NULL );
};

// Function NowGame.NowPlayerController.TickCamToZeroRot
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowPlayerController::TickCamToZeroRot ( float DT )
{
	static UFunction* pFnTickCamToZeroRot = NULL;

	if ( ! pFnTickCamToZeroRot )
		pFnTickCamToZeroRot = (UFunction*) UObject::GObjObjects()->Data[ 58064 ];

	ANowPlayerController_execTickCamToZeroRot_Parms TickCamToZeroRot_Parms;
	TickCamToZeroRot_Parms.DT = DT;

	this->ProcessEvent ( pFnTickCamToZeroRot, &TickCamToZeroRot_Parms, NULL );
};

// Function NowGame.NowPlayerController.TweenCamToZeroRot
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventTweenCamToZeroRot ( )
{
	static UFunction* pFnTweenCamToZeroRot = NULL;

	if ( ! pFnTweenCamToZeroRot )
		pFnTweenCamToZeroRot = (UFunction*) UObject::GObjObjects()->Data[ 58063 ];

	ANowPlayerController_eventTweenCamToZeroRot_Parms TweenCamToZeroRot_Parms;

	this->ProcessEvent ( pFnTweenCamToZeroRot, &TweenCamToZeroRot_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetStunned
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Why                            ( CPF_Parm | CPF_NeedCtorLink )
// float                          Time                           ( CPF_Parm )

void ANowPlayerController::eventSetStunned ( struct FString Why, float Time )
{
	static UFunction* pFnSetStunned = NULL;

	if ( ! pFnSetStunned )
		pFnSetStunned = (UFunction*) UObject::GObjObjects()->Data[ 58060 ];

	ANowPlayerController_eventSetStunned_Parms SetStunned_Parms;
	memcpy ( &SetStunned_Parms.Why, &Why, 0xC );
	SetStunned_Parms.Time = Time;

	this->ProcessEvent ( pFnSetStunned, &SetStunned_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetDisableMouseRotate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  NewValue                       ( CPF_Parm )

void ANowPlayerController::eventSetDisableMouseRotate ( unsigned long NewValue )
{
	static UFunction* pFnSetDisableMouseRotate = NULL;

	if ( ! pFnSetDisableMouseRotate )
		pFnSetDisableMouseRotate = (UFunction*) UObject::GObjObjects()->Data[ 58057 ];

	ANowPlayerController_eventSetDisableMouseRotate_Parms SetDisableMouseRotate_Parms;
	SetDisableMouseRotate_Parms.NewValue = NewValue;

	this->ProcessEvent ( pFnSetDisableMouseRotate, &SetDisableMouseRotate_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetNewSkillStats
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::GetNewSkillStats ( )
{
	static UFunction* pFnGetNewSkillStats = NULL;

	if ( ! pFnGetNewSkillStats )
		pFnGetNewSkillStats = (UFunction*) UObject::GObjObjects()->Data[ 58056 ];

	ANowPlayerController_execGetNewSkillStats_Parms GetNewSkillStats_Parms;

	this->ProcessEvent ( pFnGetNewSkillStats, &GetNewSkillStats_Parms, NULL );
};

// Function NowGame.NowPlayerController.StopAltFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::StopAltFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = (UFunction*) UObject::GObjObjects()->Data[ 58054 ];

	ANowPlayerController_execStopAltFire_Parms StopAltFire_Parms;
	StopAltFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartAltFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::StartAltFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = (UFunction*) UObject::GObjObjects()->Data[ 58052 ];

	ANowPlayerController_execStartAltFire_Parms StartAltFire_Parms;
	StartAltFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.NowPlayerController.StopFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::StopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 58050 ];

	ANowPlayerController_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 58048 ];

	ANowPlayerController_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.NowPlayerController.TriggerPendingClientReq
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::TriggerPendingClientReq ( )
{
	static UFunction* pFnTriggerPendingClientReq = NULL;

	if ( ! pFnTriggerPendingClientReq )
		pFnTriggerPendingClientReq = (UFunction*) UObject::GObjObjects()->Data[ 58047 ];

	ANowPlayerController_execTriggerPendingClientReq_Parms TriggerPendingClientReq_Parms;

	this->ProcessEvent ( pFnTriggerPendingClientReq, &TriggerPendingClientReq_Parms, NULL );
};

// Function NowGame.NowPlayerController.PendingClientReq
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iType                          ( CPF_Parm )
// float                          fTime                          ( CPF_Parm )

void ANowPlayerController::eventPendingClientReq ( int iType, float fTime )
{
	static UFunction* pFnPendingClientReq = NULL;

	if ( ! pFnPendingClientReq )
		pFnPendingClientReq = (UFunction*) UObject::GObjObjects()->Data[ 58044 ];

	ANowPlayerController_eventPendingClientReq_Parms PendingClientReq_Parms;
	PendingClientReq_Parms.iType = iType;
	PendingClientReq_Parms.fTime = fTime;

	this->ProcessEvent ( pFnPendingClientReq, &PendingClientReq_Parms, NULL );
};

// Function NowGame.NowPlayerController.SpectatorMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventSpectatorMode ( )
{
	static UFunction* pFnSpectatorMode = NULL;

	if ( ! pFnSpectatorMode )
		pFnSpectatorMode = (UFunction*) UObject::GObjObjects()->Data[ 58043 ];

	ANowPlayerController_eventSpectatorMode_Parms SpectatorMode_Parms;

	this->ProcessEvent ( pFnSpectatorMode, &SpectatorMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.Ghost
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventGhost ( )
{
	static UFunction* pFnGhost = NULL;

	if ( ! pFnGhost )
		pFnGhost = (UFunction*) UObject::GObjObjects()->Data[ 58042 ];

	ANowPlayerController_eventGhost_Parms Ghost_Parms;

	this->ProcessEvent ( pFnGhost, &Ghost_Parms, NULL );
};

// Function NowGame.NowPlayerController.Walk
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventWalk ( )
{
	static UFunction* pFnWalk = NULL;

	if ( ! pFnWalk )
		pFnWalk = (UFunction*) UObject::GObjObjects()->Data[ 58041 ];

	ANowPlayerController_eventWalk_Parms Walk_Parms;

	this->ProcessEvent ( pFnWalk, &Walk_Parms, NULL );
};

// Function NowGame.NowPlayerController.Fly
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventFly ( )
{
	static UFunction* pFnFly = NULL;

	if ( ! pFnFly )
		pFnFly = (UFunction*) UObject::GObjObjects()->Data[ 58040 ];

	ANowPlayerController_eventFly_Parms Fly_Parms;

	this->ProcessEvent ( pFnFly, &Fly_Parms, NULL );
};

// Function NowGame.NowPlayerController.SpellAction
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )

void ANowPlayerController::eventSpellAction ( int SpellID )
{
	static UFunction* pFnSpellAction = NULL;

	if ( ! pFnSpellAction )
		pFnSpellAction = (UFunction*) UObject::GObjObjects()->Data[ 58038 ];

	ANowPlayerController_eventSpellAction_Parms SpellAction_Parms;
	SpellAction_Parms.SpellID = SpellID;

	this->ProcessEvent ( pFnSpellAction, &SpellAction_Parms, NULL );
};

// Function NowGame.NowPlayerController.OpenGamesMenu
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventOpenGamesMenu ( )
{
	static UFunction* pFnOpenGamesMenu = NULL;

	if ( ! pFnOpenGamesMenu )
		pFnOpenGamesMenu = (UFunction*) UObject::GObjObjects()->Data[ 58036 ];

	ANowPlayerController_eventOpenGamesMenu_Parms OpenGamesMenu_Parms;

	this->ProcessEvent ( pFnOpenGamesMenu, &OpenGamesMenu_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetAudioDevice
// [0x00020002] 
// Parameters infos:
// class UAudioDevice*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UAudioDevice* ANowPlayerController::GetAudioDevice ( )
{
	static UFunction* pFnGetAudioDevice = NULL;

	if ( ! pFnGetAudioDevice )
		pFnGetAudioDevice = (UFunction*) UObject::GObjObjects()->Data[ 46129 ];

	ANowPlayerController_execGetAudioDevice_Parms GetAudioDevice_Parms;

	this->ProcessEvent ( pFnGetAudioDevice, &GetAudioDevice_Parms, NULL );

	return GetAudioDevice_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.SetPendingAiSlotUpdate
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInit                          ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::eventSetPendingAiSlotUpdate ( unsigned long bInit )
{
	static UFunction* pFnSetPendingAiSlotUpdate = NULL;

	if ( ! pFnSetPendingAiSlotUpdate )
		pFnSetPendingAiSlotUpdate = (UFunction*) UObject::GObjObjects()->Data[ 58033 ];

	ANowPlayerController_eventSetPendingAiSlotUpdate_Parms SetPendingAiSlotUpdate_Parms;
	SetPendingAiSlotUpdate_Parms.bInit = bInit;

	this->ProcessEvent ( pFnSetPendingAiSlotUpdate, &SetPendingAiSlotUpdate_Parms, NULL );
};

// Function NowGame.NowPlayerController.LightHack
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventLightHack ( )
{
	static UFunction* pFnLightHack = NULL;

	if ( ! pFnLightHack )
		pFnLightHack = (UFunction*) UObject::GObjObjects()->Data[ 58032 ];

	ANowPlayerController_eventLightHack_Parms LightHack_Parms;

	this->ProcessEvent ( pFnLightHack, &LightHack_Parms, NULL );
};

// Function NowGame.NowPlayerController.LevelLoaded
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::LevelLoaded ( )
{
	static UFunction* pFnLevelLoaded = NULL;

	if ( ! pFnLevelLoaded )
		pFnLevelLoaded = (UFunction*) UObject::GObjObjects()->Data[ 58030 ];

	ANowPlayerController_execLevelLoaded_Parms LevelLoaded_Parms;

	this->ProcessEvent ( pFnLevelLoaded, &LevelLoaded_Parms, NULL );
};

// Function NowGame.NowPlayerController.PostAvatarObtained
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::PostAvatarObtained ( )
{
	static UFunction* pFnPostAvatarObtained = NULL;

	if ( ! pFnPostAvatarObtained )
		pFnPostAvatarObtained = (UFunction*) UObject::GObjObjects()->Data[ 58029 ];

	ANowPlayerController_execPostAvatarObtained_Parms PostAvatarObtained_Parms;

	this->ProcessEvent ( pFnPostAvatarObtained, &PostAvatarObtained_Parms, NULL );
};

// Function NowGame.NowPlayerController.ReplaceWeather
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::ReplaceWeather ( )
{
	static UFunction* pFnReplaceWeather = NULL;

	if ( ! pFnReplaceWeather )
		pFnReplaceWeather = (UFunction*) UObject::GObjObjects()->Data[ 58028 ];

	ANowPlayerController_execReplaceWeather_Parms ReplaceWeather_Parms;

	this->ProcessEvent ( pFnReplaceWeather, &ReplaceWeather_Parms, NULL );
};

// Function NowGame.NowPlayerController.AttachActorsToPlayer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventAttachActorsToPlayer ( )
{
	static UFunction* pFnAttachActorsToPlayer = NULL;

	if ( ! pFnAttachActorsToPlayer )
		pFnAttachActorsToPlayer = (UFunction*) UObject::GObjObjects()->Data[ 58026 ];

	ANowPlayerController_eventAttachActorsToPlayer_Parms AttachActorsToPlayer_Parms;

	this->ProcessEvent ( pFnAttachActorsToPlayer, &AttachActorsToPlayer_Parms, NULL );
};

// Function NowGame.NowPlayerController.AttachActorsToMount
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventAttachActorsToMount ( )
{
	static UFunction* pFnAttachActorsToMount = NULL;

	if ( ! pFnAttachActorsToMount )
		pFnAttachActorsToMount = (UFunction*) UObject::GObjObjects()->Data[ 58024 ];

	ANowPlayerController_eventAttachActorsToMount_Parms AttachActorsToMount_Parms;

	this->ProcessEvent ( pFnAttachActorsToMount, &AttachActorsToMount_Parms, NULL );
};

// Function NowGame.NowPlayerController.KeepBased
// [0x00020002] 
// Parameters infos:
// class AActor*                  BaseActor                      ( CPF_Parm )

void ANowPlayerController::KeepBased ( class AActor* BaseActor )
{
	static UFunction* pFnKeepBased = NULL;

	if ( ! pFnKeepBased )
		pFnKeepBased = (UFunction*) UObject::GObjObjects()->Data[ 58022 ];

	ANowPlayerController_execKeepBased_Parms KeepBased_Parms;
	KeepBased_Parms.BaseActor = BaseActor;

	this->ProcessEvent ( pFnKeepBased, &KeepBased_Parms, NULL );
};

// Function NowGame.NowPlayerController.TickWeather1Sec
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::TickWeather1Sec ( )
{
	static UFunction* pFnTickWeather1Sec = NULL;

	if ( ! pFnTickWeather1Sec )
		pFnTickWeather1Sec = (UFunction*) UObject::GObjObjects()->Data[ 58021 ];

	ANowPlayerController_execTickWeather1Sec_Parms TickWeather1Sec_Parms;

	this->ProcessEvent ( pFnTickWeather1Sec, &TickWeather1Sec_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartWeather
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::StartWeather ( )
{
	static UFunction* pFnStartWeather = NULL;

	if ( ! pFnStartWeather )
		pFnStartWeather = (UFunction*) UObject::GObjObjects()->Data[ 58019 ];

	ANowPlayerController_execStartWeather_Parms StartWeather_Parms;

	this->ProcessEvent ( pFnStartWeather, &StartWeather_Parms, NULL );
};

// Function NowGame.NowPlayerController.UpdateTime
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::UpdateTime ( )
{
	static UFunction* pFnUpdateTime = NULL;

	if ( ! pFnUpdateTime )
		pFnUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 58018 ];

	ANowPlayerController_execUpdateTime_Parms UpdateTime_Parms;

	this->ProcessEvent ( pFnUpdateTime, &UpdateTime_Parms, NULL );
};

// Function NowGame.NowPlayerController.SynchTime
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::SynchTime ( )
{
	static UFunction* pFnSynchTime = NULL;

	if ( ! pFnSynchTime )
		pFnSynchTime = (UFunction*) UObject::GObjObjects()->Data[ 58017 ];

	ANowPlayerController_execSynchTime_Parms SynchTime_Parms;

	this->ProcessEvent ( pFnSynchTime, &SynchTime_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartTime
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::StartTime ( )
{
	static UFunction* pFnStartTime = NULL;

	if ( ! pFnStartTime )
		pFnStartTime = (UFunction*) UObject::GObjObjects()->Data[ 58015 ];

	ANowPlayerController_execStartTime_Parms StartTime_Parms;

	this->ProcessEvent ( pFnStartTime, &StartTime_Parms, NULL );
};

// Function NowGame.NowPlayerController.RedrawAllPawns
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::RedrawAllPawns ( )
{
	static UFunction* pFnRedrawAllPawns = NULL;

	if ( ! pFnRedrawAllPawns )
		pFnRedrawAllPawns = (UFunction*) UObject::GObjObjects()->Data[ 58013 ];

	ANowPlayerController_execRedrawAllPawns_Parms RedrawAllPawns_Parms;

	this->ProcessEvent ( pFnRedrawAllPawns, &RedrawAllPawns_Parms, NULL );
};

// Function NowGame.NowPlayerController.FindInCIListString
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WhatString                     ( CPF_Parm | CPF_NeedCtorLink )
// class UContentInfo_StringList* WhatList                       ( CPF_Parm )

int ANowPlayerController::eventFindInCIListString ( struct FString WhatString, class UContentInfo_StringList* WhatList )
{
	static UFunction* pFnFindInCIListString = NULL;

	if ( ! pFnFindInCIListString )
		pFnFindInCIListString = (UFunction*) UObject::GObjObjects()->Data[ 45944 ];

	ANowPlayerController_eventFindInCIListString_Parms FindInCIListString_Parms;
	memcpy ( &FindInCIListString_Parms.WhatString, &WhatString, 0xC );
	FindInCIListString_Parms.WhatList = WhatList;

	this->ProcessEvent ( pFnFindInCIListString, &FindInCIListString_Parms, NULL );

	return FindInCIListString_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.PlayAmbientSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class USoundCue*               NewCue                         ( CPF_Parm )

void ANowPlayerController::eventPlayAmbientSound ( class USoundCue* NewCue )
{
	static UFunction* pFnPlayAmbientSound = NULL;

	if ( ! pFnPlayAmbientSound )
		pFnPlayAmbientSound = (UFunction*) UObject::GObjObjects()->Data[ 58008 ];

	ANowPlayerController_eventPlayAmbientSound_Parms PlayAmbientSound_Parms;
	PlayAmbientSound_Parms.NewCue = NewCue;

	this->ProcessEvent ( pFnPlayAmbientSound, &PlayAmbientSound_Parms, NULL );
};

// Function NowGame.NowPlayerController.StopAmbientSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventStopAmbientSound ( )
{
	static UFunction* pFnStopAmbientSound = NULL;

	if ( ! pFnStopAmbientSound )
		pFnStopAmbientSound = (UFunction*) UObject::GObjObjects()->Data[ 58007 ];

	ANowPlayerController_eventStopAmbientSound_Parms StopAmbientSound_Parms;

	this->ProcessEvent ( pFnStopAmbientSound, &StopAmbientSound_Parms, NULL );
};

// Function NowGame.NowPlayerController.InitInputSystem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventInitInputSystem ( )
{
	static UFunction* pFnInitInputSystem = NULL;

	if ( ! pFnInitInputSystem )
		pFnInitInputSystem = (UFunction*) UObject::GObjObjects()->Data[ 58006 ];

	ANowPlayerController_eventInitInputSystem_Parms InitInputSystem_Parms;

	this->ProcessEvent ( pFnInitInputSystem, &InitInputSystem_Parms, NULL );
};

// Function NowGame.NowPlayerController.CancelAutoRun
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventCancelAutoRun ( )
{
	static UFunction* pFnCancelAutoRun = NULL;

	if ( ! pFnCancelAutoRun )
		pFnCancelAutoRun = (UFunction*) UObject::GObjObjects()->Data[ 58005 ];

	ANowPlayerController_eventCancelAutoRun_Parms CancelAutoRun_Parms;

	this->ProcessEvent ( pFnCancelAutoRun, &CancelAutoRun_Parms, NULL );
};

// Function NowGame.NowPlayerController.NotifyHeadVolumeChange
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APhysicsVolume*          NewVolume                      ( CPF_Parm )

bool ANowPlayerController::eventNotifyHeadVolumeChange ( class APhysicsVolume* NewVolume )
{
	static UFunction* pFnNotifyHeadVolumeChange = NULL;

	if ( ! pFnNotifyHeadVolumeChange )
		pFnNotifyHeadVolumeChange = (UFunction*) UObject::GObjObjects()->Data[ 58002 ];

	ANowPlayerController_eventNotifyHeadVolumeChange_Parms NotifyHeadVolumeChange_Parms;
	NotifyHeadVolumeChange_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnNotifyHeadVolumeChange, &NotifyHeadVolumeChange_Parms, NULL );

	return NotifyHeadVolumeChange_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.PlayIconSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPlayIconSound ( )
{
	static UFunction* pFnPlayIconSound = NULL;

	if ( ! pFnPlayIconSound )
		pFnPlayIconSound = (UFunction*) UObject::GObjObjects()->Data[ 58001 ];

	ANowPlayerController_eventPlayIconSound_Parms PlayIconSound_Parms;

	this->ProcessEvent ( pFnPlayIconSound, &PlayIconSound_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlayGuildSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            WhatSound                      ( CPF_Parm )

void ANowPlayerController::eventPlayGuildSound ( int WhatSound )
{
	static UFunction* pFnPlayGuildSound = NULL;

	if ( ! pFnPlayGuildSound )
		pFnPlayGuildSound = (UFunction*) UObject::GObjObjects()->Data[ 57999 ];

	ANowPlayerController_eventPlayGuildSound_Parms PlayGuildSound_Parms;
	PlayGuildSound_Parms.WhatSound = WhatSound;

	this->ProcessEvent ( pFnPlayGuildSound, &PlayGuildSound_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetFishingOn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          NewRange                       ( CPF_Parm )

void ANowPlayerController::eventSetFishingOn ( float NewRange )
{
	static UFunction* pFnSetFishingOn = NULL;

	if ( ! pFnSetFishingOn )
		pFnSetFishingOn = (UFunction*) UObject::GObjObjects()->Data[ 57997 ];

	ANowPlayerController_eventSetFishingOn_Parms SetFishingOn_Parms;
	SetFishingOn_Parms.NewRange = NewRange;

	this->ProcessEvent ( pFnSetFishingOn, &SetFishingOn_Parms, NULL );
};

// Function NowGame.NowPlayerController.UpdatePetUI
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventUpdatePetUI ( )
{
	static UFunction* pFnUpdatePetUI = NULL;

	if ( ! pFnUpdatePetUI )
		pFnUpdatePetUI = (UFunction*) UObject::GObjObjects()->Data[ 57996 ];

	ANowPlayerController_eventUpdatePetUI_Parms UpdatePetUI_Parms;

	this->ProcessEvent ( pFnUpdatePetUI, &UpdatePetUI_Parms, NULL );
};

// Function NowGame.NowPlayerController.AddClientEffect
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class UClientEffect*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  NewEffectName                  ( CPF_Parm )
// float                          EffectRate                     ( CPF_OptionalParm | CPF_Parm )
// float                          StartTime                      ( CPF_OptionalParm | CPF_Parm )

class UClientEffect* ANowPlayerController::eventAddClientEffect ( class UClass* NewEffectName, float EffectRate, float StartTime )
{
	static UFunction* pFnAddClientEffect = NULL;

	if ( ! pFnAddClientEffect )
		pFnAddClientEffect = (UFunction*) UObject::GObjObjects()->Data[ 46127 ];

	ANowPlayerController_eventAddClientEffect_Parms AddClientEffect_Parms;
	AddClientEffect_Parms.NewEffectName = NewEffectName;
	AddClientEffect_Parms.EffectRate = EffectRate;
	AddClientEffect_Parms.StartTime = StartTime;

	this->ProcessEvent ( pFnAddClientEffect, &AddClientEffect_Parms, NULL );

	return AddClientEffect_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.AddViewMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  NewViewMode                    ( CPF_Parm )

void ANowPlayerController::eventAddViewMode ( class UClass* NewViewMode )
{
	static UFunction* pFnAddViewMode = NULL;

	if ( ! pFnAddViewMode )
		pFnAddViewMode = (UFunction*) UObject::GObjObjects()->Data[ 57988 ];

	ANowPlayerController_eventAddViewMode_Parms AddViewMode_Parms;
	AddViewMode_Parms.NewViewMode = NewViewMode;

	this->ProcessEvent ( pFnAddViewMode, &AddViewMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.AddClientEffectString
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 NewEffectName                  ( CPF_Parm | CPF_NeedCtorLink )
// float                          EffectRate                     ( CPF_OptionalParm | CPF_Parm )
// float                          StartTime                      ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::eventAddClientEffectString ( struct FString NewEffectName, float EffectRate, float StartTime )
{
	static UFunction* pFnAddClientEffectString = NULL;

	if ( ! pFnAddClientEffectString )
		pFnAddClientEffectString = (UFunction*) UObject::GObjObjects()->Data[ 57983 ];

	ANowPlayerController_eventAddClientEffectString_Parms AddClientEffectString_Parms;
	memcpy ( &AddClientEffectString_Parms.NewEffectName, &NewEffectName, 0xC );
	AddClientEffectString_Parms.EffectRate = EffectRate;
	AddClientEffectString_Parms.StartTime = StartTime;

	this->ProcessEvent ( pFnAddClientEffectString, &AddClientEffectString_Parms, NULL );
};

// Function NowGame.NowPlayerController.UpgradePylonMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventUpgradePylonMode ( )
{
	static UFunction* pFnUpgradePylonMode = NULL;

	if ( ! pFnUpgradePylonMode )
		pFnUpgradePylonMode = (UFunction*) UObject::GObjObjects()->Data[ 57982 ];

	ANowPlayerController_eventUpgradePylonMode_Parms UpgradePylonMode_Parms;

	this->ProcessEvent ( pFnUpgradePylonMode, &UpgradePylonMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.TSUpgradeTierMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventTSUpgradeTierMode ( )
{
	static UFunction* pFnTSUpgradeTierMode = NULL;

	if ( ! pFnTSUpgradeTierMode )
		pFnTSUpgradeTierMode = (UFunction*) UObject::GObjObjects()->Data[ 57981 ];

	ANowPlayerController_eventTSUpgradeTierMode_Parms TSUpgradeTierMode_Parms;

	this->ProcessEvent ( pFnTSUpgradeTierMode, &TSUpgradeTierMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlaceTSNpcMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPlaceTSNpcMode ( )
{
	static UFunction* pFnPlaceTSNpcMode = NULL;

	if ( ! pFnPlaceTSNpcMode )
		pFnPlaceTSNpcMode = (UFunction*) UObject::GObjObjects()->Data[ 57980 ];

	ANowPlayerController_eventPlaceTSNpcMode_Parms PlaceTSNpcMode_Parms;

	this->ProcessEvent ( pFnPlaceTSNpcMode, &PlaceTSNpcMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlaceGateMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPlaceGateMode ( )
{
	static UFunction* pFnPlaceGateMode = NULL;

	if ( ! pFnPlaceGateMode )
		pFnPlaceGateMode = (UFunction*) UObject::GObjObjects()->Data[ 57979 ];

	ANowPlayerController_eventPlaceGateMode_Parms PlaceGateMode_Parms;

	this->ProcessEvent ( pFnPlaceGateMode, &PlaceGateMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlaceWallMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPlaceWallMode ( )
{
	static UFunction* pFnPlaceWallMode = NULL;

	if ( ! pFnPlaceWallMode )
		pFnPlaceWallMode = (UFunction*) UObject::GObjObjects()->Data[ 57978 ];

	ANowPlayerController_eventPlaceWallMode_Parms PlaceWallMode_Parms;

	this->ProcessEvent ( pFnPlaceWallMode, &PlaceWallMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlaceMine
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPlaceMine ( )
{
	static UFunction* pFnPlaceMine = NULL;

	if ( ! pFnPlaceMine )
		pFnPlaceMine = (UFunction*) UObject::GObjObjects()->Data[ 57977 ];

	ANowPlayerController_eventPlaceMine_Parms PlaceMine_Parms;

	this->ProcessEvent ( pFnPlaceMine, &PlaceMine_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlacePatrolSphere
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPlacePatrolSphere ( )
{
	static UFunction* pFnPlacePatrolSphere = NULL;

	if ( ! pFnPlacePatrolSphere )
		pFnPlacePatrolSphere = (UFunction*) UObject::GObjObjects()->Data[ 57976 ];

	ANowPlayerController_eventPlacePatrolSphere_Parms PlacePatrolSphere_Parms;

	this->ProcessEvent ( pFnPlacePatrolSphere, &PlacePatrolSphere_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlaceStructureMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPlaceStructureMode ( )
{
	static UFunction* pFnPlaceStructureMode = NULL;

	if ( ! pFnPlaceStructureMode )
		pFnPlaceStructureMode = (UFunction*) UObject::GObjObjects()->Data[ 57975 ];

	ANowPlayerController_eventPlaceStructureMode_Parms PlaceStructureMode_Parms;

	this->ProcessEvent ( pFnPlaceStructureMode, &PlaceStructureMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlacePylonMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPlacePylonMode ( )
{
	static UFunction* pFnPlacePylonMode = NULL;

	if ( ! pFnPlacePylonMode )
		pFnPlacePylonMode = (UFunction*) UObject::GObjObjects()->Data[ 57974 ];

	ANowPlayerController_eventPlacePylonMode_Parms PlacePylonMode_Parms;

	this->ProcessEvent ( pFnPlacePylonMode, &PlacePylonMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlaceKeepNpcMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPlaceKeepNpcMode ( )
{
	static UFunction* pFnPlaceKeepNpcMode = NULL;

	if ( ! pFnPlaceKeepNpcMode )
		pFnPlaceKeepNpcMode = (UFunction*) UObject::GObjObjects()->Data[ 57973 ];

	ANowPlayerController_eventPlaceKeepNpcMode_Parms PlaceKeepNpcMode_Parms;

	this->ProcessEvent ( pFnPlaceKeepNpcMode, &PlaceKeepNpcMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlaceAvatarMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sContentInfo                   ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bGuardZone                     ( CPF_Parm )

void ANowPlayerController::eventPlaceAvatarMode ( struct FString sContentInfo, unsigned long bGuardZone )
{
	static UFunction* pFnPlaceAvatarMode = NULL;

	if ( ! pFnPlaceAvatarMode )
		pFnPlaceAvatarMode = (UFunction*) UObject::GObjObjects()->Data[ 57970 ];

	ANowPlayerController_eventPlaceAvatarMode_Parms PlaceAvatarMode_Parms;
	memcpy ( &PlaceAvatarMode_Parms.sContentInfo, &sContentInfo, 0xC );
	PlaceAvatarMode_Parms.bGuardZone = bGuardZone;

	this->ProcessEvent ( pFnPlaceAvatarMode, &PlaceAvatarMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.ViewModeOff
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventViewModeOff ( )
{
	static UFunction* pFnViewModeOff = NULL;

	if ( ! pFnViewModeOff )
		pFnViewModeOff = (UFunction*) UObject::GObjObjects()->Data[ 57969 ];

	ANowPlayerController_eventViewModeOff_Parms ViewModeOff_Parms;

	this->ProcessEvent ( pFnViewModeOff, &ViewModeOff_Parms, NULL );
};

// Function NowGame.NowPlayerController.ResetPetInfo
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::ResetPetInfo ( )
{
	static UFunction* pFnResetPetInfo = NULL;

	if ( ! pFnResetPetInfo )
		pFnResetPetInfo = (UFunction*) UObject::GObjObjects()->Data[ 57968 ];

	ANowPlayerController_execResetPetInfo_Parms ResetPetInfo_Parms;

	this->ProcessEvent ( pFnResetPetInfo, &ResetPetInfo_Parms, NULL );
};

// Function NowGame.NowPlayerController.AddPetInfo
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sPetName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPetType                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            iPetLevel                      ( CPF_Parm )
// int                            iPetLoyalty                    ( CPF_Parm )
// int                            iPetHP                         ( CPF_Parm )
// int                            iStableIndex                   ( CPF_Parm )
// struct FString                 sState                         ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::eventAddPetInfo ( struct FString sPetName, struct FString sPetType, int iPetLevel, int iPetLoyalty, int iPetHP, int iStableIndex, struct FString sState )
{
	static UFunction* pFnAddPetInfo = NULL;

	if ( ! pFnAddPetInfo )
		pFnAddPetInfo = (UFunction*) UObject::GObjObjects()->Data[ 57959 ];

	ANowPlayerController_eventAddPetInfo_Parms AddPetInfo_Parms;
	memcpy ( &AddPetInfo_Parms.sPetName, &sPetName, 0xC );
	memcpy ( &AddPetInfo_Parms.sPetType, &sPetType, 0xC );
	AddPetInfo_Parms.iPetLevel = iPetLevel;
	AddPetInfo_Parms.iPetLoyalty = iPetLoyalty;
	AddPetInfo_Parms.iPetHP = iPetHP;
	AddPetInfo_Parms.iStableIndex = iStableIndex;
	memcpy ( &AddPetInfo_Parms.sState, &sState, 0xC );

	this->ProcessEvent ( pFnAddPetInfo, &AddPetInfo_Parms, NULL );
};

// Function NowGame.NowPlayerController.ResetPylonInfo
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::ResetPylonInfo ( )
{
	static UFunction* pFnResetPylonInfo = NULL;

	if ( ! pFnResetPylonInfo )
		pFnResetPylonInfo = (UFunction*) UObject::GObjObjects()->Data[ 57958 ];

	ANowPlayerController_execResetPylonInfo_Parms ResetPylonInfo_Parms;

	this->ProcessEvent ( pFnResetPylonInfo, &ResetPylonInfo_Parms, NULL );
};

// Function NowGame.NowPlayerController.AddPylonInfo
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 newPylonGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 newPylonGuild                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 newPylonLoc                    ( CPF_Parm )
// float                          newPylonAOE                    ( CPF_Parm )
// float                          newPylonAOEMeter               ( CPF_Parm )
// float                          newPylonAOETgt                 ( CPF_Parm )
// float                          newPylonDef                    ( CPF_Parm )
// float                          newPylonDefTgt                 ( CPF_Parm )
// float                          newPylonAtt                    ( CPF_Parm )
// float                          newPylonAttTgt                 ( CPF_Parm )
// int                            newPylonTier                   ( CPF_Parm )
// int                            newPylonUpkeep                 ( CPF_Parm )

void ANowPlayerController::eventAddPylonInfo ( struct FString newPylonGuid, struct FString newPylonGuild, struct FVector newPylonLoc, float newPylonAOE, float newPylonAOEMeter, float newPylonAOETgt, float newPylonDef, float newPylonDefTgt, float newPylonAtt, float newPylonAttTgt, int newPylonTier, int newPylonUpkeep )
{
	static UFunction* pFnAddPylonInfo = NULL;

	if ( ! pFnAddPylonInfo )
		pFnAddPylonInfo = (UFunction*) UObject::GObjObjects()->Data[ 57943 ];

	ANowPlayerController_eventAddPylonInfo_Parms AddPylonInfo_Parms;
	memcpy ( &AddPylonInfo_Parms.newPylonGuid, &newPylonGuid, 0xC );
	memcpy ( &AddPylonInfo_Parms.newPylonGuild, &newPylonGuild, 0xC );
	memcpy ( &AddPylonInfo_Parms.newPylonLoc, &newPylonLoc, 0xC );
	AddPylonInfo_Parms.newPylonAOE = newPylonAOE;
	AddPylonInfo_Parms.newPylonAOEMeter = newPylonAOEMeter;
	AddPylonInfo_Parms.newPylonAOETgt = newPylonAOETgt;
	AddPylonInfo_Parms.newPylonDef = newPylonDef;
	AddPylonInfo_Parms.newPylonDefTgt = newPylonDefTgt;
	AddPylonInfo_Parms.newPylonAtt = newPylonAtt;
	AddPylonInfo_Parms.newPylonAttTgt = newPylonAttTgt;
	AddPylonInfo_Parms.newPylonTier = newPylonTier;
	AddPylonInfo_Parms.newPylonUpkeep = newPylonUpkeep;

	this->ProcessEvent ( pFnAddPylonInfo, &AddPylonInfo_Parms, NULL );
};

// Function NowGame.NowPlayerController.ClearPylonInfo
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventClearPylonInfo ( )
{
	static UFunction* pFnClearPylonInfo = NULL;

	if ( ! pFnClearPylonInfo )
		pFnClearPylonInfo = (UFunction*) UObject::GObjObjects()->Data[ 57942 ];

	ANowPlayerController_eventClearPylonInfo_Parms ClearPylonInfo_Parms;

	this->ProcessEvent ( pFnClearPylonInfo, &ClearPylonInfo_Parms, NULL );
};

// Function NowGame.NowPlayerController.OpenPylonGui
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::OpenPylonGui ( )
{
	static UFunction* pFnOpenPylonGui = NULL;

	if ( ! pFnOpenPylonGui )
		pFnOpenPylonGui = (UFunction*) UObject::GObjObjects()->Data[ 57941 ];

	ANowPlayerController_execOpenPylonGui_Parms OpenPylonGui_Parms;

	this->ProcessEvent ( pFnOpenPylonGui, &OpenPylonGui_Parms, NULL );
};

// Function NowGame.NowPlayerController.PingTimer
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::PingTimer ( )
{
	static UFunction* pFnPingTimer = NULL;

	if ( ! pFnPingTimer )
		pFnPingTimer = (UFunction*) UObject::GObjObjects()->Data[ 57939 ];

	ANowPlayerController_execPingTimer_Parms PingTimer_Parms;

	this->ProcessEvent ( pFnPingTimer, &PingTimer_Parms, NULL );
};

// Function NowGame.NowPlayerController.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 57936 ];

	ANowPlayerController_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowPlayerController.VarGainTimer
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::VarGainTimer ( )
{
	static UFunction* pFnVarGainTimer = NULL;

	if ( ! pFnVarGainTimer )
		pFnVarGainTimer = (UFunction*) UObject::GObjObjects()->Data[ 57935 ];

	ANowPlayerController_execVarGainTimer_Parms VarGainTimer_Parms;

	this->ProcessEvent ( pFnVarGainTimer, &VarGainTimer_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetHouseFromID
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iID                            ( CPF_Parm )

class ANowAtlasAvatarPlayerHouse* ANowPlayerController::GetHouseFromID ( int iID )
{
	static UFunction* pFnGetHouseFromID = NULL;

	if ( ! pFnGetHouseFromID )
		pFnGetHouseFromID = (UFunction*) UObject::GObjObjects()->Data[ 53956 ];

	ANowPlayerController_execGetHouseFromID_Parms GetHouseFromID_Parms;
	GetHouseFromID_Parms.iID = iID;

	this->ProcessEvent ( pFnGetHouseFromID, &GetHouseFromID_Parms, NULL );

	return GetHouseFromID_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.IsMyPet
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowAtlasAvatarAi*       pAi                            ( CPF_Parm )

bool ANowPlayerController::eventIsMyPet ( class ANowAtlasAvatarAi* pAi )
{
	static UFunction* pFnIsMyPet = NULL;

	if ( ! pFnIsMyPet )
		pFnIsMyPet = (UFunction*) UObject::GObjObjects()->Data[ 49298 ];

	ANowPlayerController_eventIsMyPet_Parms IsMyPet_Parms;
	IsMyPet_Parms.pAi = pAi;

	this->ProcessEvent ( pFnIsMyPet, &IsMyPet_Parms, NULL );

	return IsMyPet_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetPetIndexFromGuid
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int ANowPlayerController::eventGetPetIndexFromGuid ( struct FString sGuid )
{
	static UFunction* pFnGetPetIndexFromGuid = NULL;

	if ( ! pFnGetPetIndexFromGuid )
		pFnGetPetIndexFromGuid = (UFunction*) UObject::GObjObjects()->Data[ 57927 ];

	ANowPlayerController_eventGetPetIndexFromGuid_Parms GetPetIndexFromGuid_Parms;
	memcpy ( &GetPetIndexFromGuid_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGetPetIndexFromGuid, &GetPetIndexFromGuid_Parms, NULL );

	return GetPetIndexFromGuid_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetPetFromGuid
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarAi*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

class ANowAtlasAvatarAi* ANowPlayerController::eventGetPetFromGuid ( struct FString sGuid )
{
	static UFunction* pFnGetPetFromGuid = NULL;

	if ( ! pFnGetPetFromGuid )
		pFnGetPetFromGuid = (UFunction*) UObject::GObjObjects()->Data[ 46034 ];

	ANowPlayerController_eventGetPetFromGuid_Parms GetPetFromGuid_Parms;
	memcpy ( &GetPetFromGuid_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGetPetFromGuid, &GetPetFromGuid_Parms, NULL );

	return GetPetFromGuid_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetNowPawn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* ANowPlayerController::eventGetNowPawn ( )
{
	static UFunction* pFnGetNowPawn = NULL;

	if ( ! pFnGetNowPawn )
		pFnGetNowPawn = (UFunction*) UObject::GObjObjects()->Data[ 57923 ];

	ANowPlayerController_eventGetNowPawn_Parms GetNowPawn_Parms;

	this->ProcessEvent ( pFnGetNowPawn, &GetNowPawn_Parms, NULL );

	return GetNowPawn_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetPawnFromName
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

class ANowPawn* ANowPlayerController::GetPawnFromName ( struct FString sName )
{
	static UFunction* pFnGetPawnFromName = NULL;

	if ( ! pFnGetPawnFromName )
		pFnGetPawnFromName = (UFunction*) UObject::GObjObjects()->Data[ 54004 ];

	ANowPlayerController_execGetPawnFromName_Parms GetPawnFromName_Parms;
	memcpy ( &GetPawnFromName_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetPawnFromName, &GetPawnFromName_Parms, NULL );

	return GetPawnFromName_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetPetFromName
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAi*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sPetName                       ( CPF_Parm | CPF_NeedCtorLink )

class ANowAtlasAvatarAi* ANowPlayerController::GetPetFromName ( struct FString sPetName )
{
	static UFunction* pFnGetPetFromName = NULL;

	if ( ! pFnGetPetFromName )
		pFnGetPetFromName = (UFunction*) UObject::GObjObjects()->Data[ 46032 ];

	ANowPlayerController_execGetPetFromName_Parms GetPetFromName_Parms;
	memcpy ( &GetPetFromName_Parms.sPetName, &sPetName, 0xC );

	this->ProcessEvent ( pFnGetPetFromName, &GetPetFromName_Parms, NULL );

	return GetPetFromName_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.UpdateAiSlot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarAi*       pActor                         ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::eventUpdateAiSlot ( class ANowAtlasAvatarAi* pActor, int iSlot, struct FString sGuid )
{
	static UFunction* pFnUpdateAiSlot = NULL;

	if ( ! pFnUpdateAiSlot )
		pFnUpdateAiSlot = (UFunction*) UObject::GObjObjects()->Data[ 57914 ];

	ANowPlayerController_eventUpdateAiSlot_Parms UpdateAiSlot_Parms;
	UpdateAiSlot_Parms.pActor = pActor;
	UpdateAiSlot_Parms.iSlot = iSlot;
	memcpy ( &UpdateAiSlot_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnUpdateAiSlot, &UpdateAiSlot_Parms, NULL );
};

// Function NowGame.NowPlayerController.ClearAiSlot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void ANowPlayerController::eventClearAiSlot ( int iSlot )
{
	static UFunction* pFnClearAiSlot = NULL;

	if ( ! pFnClearAiSlot )
		pFnClearAiSlot = (UFunction*) UObject::GObjObjects()->Data[ 57912 ];

	ANowPlayerController_eventClearAiSlot_Parms ClearAiSlot_Parms;
	ClearAiSlot_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnClearAiSlot, &ClearAiSlot_Parms, NULL );
};

// Function NowGame.NowPlayerController.SortPetSlots
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventSortPetSlots ( )
{
	static UFunction* pFnSortPetSlots = NULL;

	if ( ! pFnSortPetSlots )
		pFnSortPetSlots = (UFunction*) UObject::GObjObjects()->Data[ 57909 ];

	ANowPlayerController_eventSortPetSlots_Parms SortPetSlots_Parms;

	this->ProcessEvent ( pFnSortPetSlots, &SortPetSlots_Parms, NULL );
};

// Function NowGame.NowPlayerController.ClearCachedPetInfo
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventClearCachedPetInfo ( )
{
	static UFunction* pFnClearCachedPetInfo = NULL;

	if ( ! pFnClearCachedPetInfo )
		pFnClearCachedPetInfo = (UFunction*) UObject::GObjObjects()->Data[ 57908 ];

	ANowPlayerController_eventClearCachedPetInfo_Parms ClearCachedPetInfo_Parms;

	this->ProcessEvent ( pFnClearCachedPetInfo, &ClearCachedPetInfo_Parms, NULL );
};

// Function NowGame.NowPlayerController.AskAiCommandAbandonGlobal
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::AskAiCommandAbandonGlobal ( struct FString sGuid )
{
	static UFunction* pFnAskAiCommandAbandonGlobal = NULL;

	if ( ! pFnAskAiCommandAbandonGlobal )
		pFnAskAiCommandAbandonGlobal = (UFunction*) UObject::GObjObjects()->Data[ 57906 ];

	ANowPlayerController_execAskAiCommandAbandonGlobal_Parms AskAiCommandAbandonGlobal_Parms;
	memcpy ( &AskAiCommandAbandonGlobal_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnAskAiCommandAbandonGlobal, &AskAiCommandAbandonGlobal_Parms, NULL );
};

// Function NowGame.NowPlayerController.AskAiCommandAbandon
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )

void ANowPlayerController::AskAiCommandAbandon ( class ANowAtlasAvatar* aActor )
{
	static UFunction* pFnAskAiCommandAbandon = NULL;

	if ( ! pFnAskAiCommandAbandon )
		pFnAskAiCommandAbandon = (UFunction*) UObject::GObjObjects()->Data[ 57904 ];

	ANowPlayerController_execAskAiCommandAbandon_Parms AskAiCommandAbandon_Parms;
	AskAiCommandAbandon_Parms.aActor = aActor;

	this->ProcessEvent ( pFnAskAiCommandAbandon, &AskAiCommandAbandon_Parms, NULL );
};

// Function NowGame.NowPlayerController.FindAiFromAvatarID
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAi*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sAvatarId                      ( CPF_Parm | CPF_NeedCtorLink )

class ANowAtlasAvatarAi* ANowPlayerController::FindAiFromAvatarID ( struct FString sAvatarId )
{
	static UFunction* pFnFindAiFromAvatarID = NULL;

	if ( ! pFnFindAiFromAvatarID )
		pFnFindAiFromAvatarID = (UFunction*) UObject::GObjObjects()->Data[ 55980 ];

	ANowPlayerController_execFindAiFromAvatarID_Parms FindAiFromAvatarID_Parms;
	memcpy ( &FindAiFromAvatarID_Parms.sAvatarId, &sAvatarId, 0xC );

	this->ProcessEvent ( pFnFindAiFromAvatarID, &FindAiFromAvatarID_Parms, NULL );

	return FindAiFromAvatarID_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.PreContinentChange
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPreContinentChange ( )
{
	static UFunction* pFnPreContinentChange = NULL;

	if ( ! pFnPreContinentChange )
		pFnPreContinentChange = (UFunction*) UObject::GObjObjects()->Data[ 57897 ];

	ANowPlayerController_eventPreContinentChange_Parms PreContinentChange_Parms;

	this->ProcessEvent ( pFnPreContinentChange, &PreContinentChange_Parms, NULL );
};

// Function NowGame.NowPlayerController.SaveHighResScreenshot
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::SaveHighResScreenshot ( )
{
	static UFunction* pFnSaveHighResScreenshot = NULL;

	if ( ! pFnSaveHighResScreenshot )
		pFnSaveHighResScreenshot = (UFunction*) UObject::GObjObjects()->Data[ 57896 ];

	ANowPlayerController_execSaveHighResScreenshot_Parms SaveHighResScreenshot_Parms;

	pFnSaveHighResScreenshot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveHighResScreenshot, &SaveHighResScreenshot_Parms, NULL );

	pFnSaveHighResScreenshot->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SaveTiledScreenshot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iMulti                         ( CPF_Parm )

void ANowPlayerController::SaveTiledScreenshot ( int iMulti )
{
	static UFunction* pFnSaveTiledScreenshot = NULL;

	if ( ! pFnSaveTiledScreenshot )
		pFnSaveTiledScreenshot = (UFunction*) UObject::GObjObjects()->Data[ 57894 ];

	ANowPlayerController_execSaveTiledScreenshot_Parms SaveTiledScreenshot_Parms;
	SaveTiledScreenshot_Parms.iMulti = iMulti;

	pFnSaveTiledScreenshot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveTiledScreenshot, &SaveTiledScreenshot_Parms, NULL );

	pFnSaveTiledScreenshot->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SaveScreenshot
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::SaveScreenshot ( )
{
	static UFunction* pFnSaveScreenshot = NULL;

	if ( ! pFnSaveScreenshot )
		pFnSaveScreenshot = (UFunction*) UObject::GObjObjects()->Data[ 57893 ];

	ANowPlayerController_execSaveScreenshot_Parms SaveScreenshot_Parms;

	pFnSaveScreenshot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveScreenshot, &SaveScreenshot_Parms, NULL );

	pFnSaveScreenshot->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.IsMortalLoading
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::IsMortalLoading ( )
{
	static UFunction* pFnIsMortalLoading = NULL;

	if ( ! pFnIsMortalLoading )
		pFnIsMortalLoading = (UFunction*) UObject::GObjObjects()->Data[ 51794 ];

	ANowPlayerController_execIsMortalLoading_Parms IsMortalLoading_Parms;

	pFnIsMortalLoading->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsMortalLoading, &IsMortalLoading_Parms, NULL );

	pFnIsMortalLoading->FunctionFlags |= 0x400;

	return IsMortalLoading_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.CombatPing
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::CombatPing ( )
{
	static UFunction* pFnCombatPing = NULL;

	if ( ! pFnCombatPing )
		pFnCombatPing = (UFunction*) UObject::GObjObjects()->Data[ 57892 ];

	ANowPlayerController_execCombatPing_Parms CombatPing_Parms;

	pFnCombatPing->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCombatPing, &CombatPing_Parms, NULL );

	pFnCombatPing->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.CombatPingOut
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::CombatPingOut ( )
{
	static UFunction* pFnCombatPingOut = NULL;

	if ( ! pFnCombatPingOut )
		pFnCombatPingOut = (UFunction*) UObject::GObjObjects()->Data[ 57891 ];

	ANowPlayerController_execCombatPingOut_Parms CombatPingOut_Parms;

	pFnCombatPingOut->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCombatPingOut, &CombatPingOut_Parms, NULL );

	pFnCombatPingOut->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SendChangeContinentRequest
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iNewContinent                  ( CPF_Parm )

void ANowPlayerController::SendChangeContinentRequest ( int iNewContinent )
{
	static UFunction* pFnSendChangeContinentRequest = NULL;

	if ( ! pFnSendChangeContinentRequest )
		pFnSendChangeContinentRequest = (UFunction*) UObject::GObjObjects()->Data[ 57889 ];

	ANowPlayerController_execSendChangeContinentRequest_Parms SendChangeContinentRequest_Parms;
	SendChangeContinentRequest_Parms.iNewContinent = iNewContinent;

	pFnSendChangeContinentRequest->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendChangeContinentRequest, &SendChangeContinentRequest_Parms, NULL );

	pFnSendChangeContinentRequest->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.HandlePendingClientReq
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bStart                         ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::HandlePendingClientReq ( unsigned long bStart )
{
	static UFunction* pFnHandlePendingClientReq = NULL;

	if ( ! pFnHandlePendingClientReq )
		pFnHandlePendingClientReq = (UFunction*) UObject::GObjObjects()->Data[ 57887 ];

	ANowPlayerController_execHandlePendingClientReq_Parms HandlePendingClientReq_Parms;
	HandlePendingClientReq_Parms.bStart = bStart;

	pFnHandlePendingClientReq->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHandlePendingClientReq, &HandlePendingClientReq_Parms, NULL );

	pFnHandlePendingClientReq->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.CanDoEvilWithMessage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bLoot                          ( CPF_Parm )

bool ANowPlayerController::CanDoEvilWithMessage ( unsigned long bLoot )
{
	static UFunction* pFnCanDoEvilWithMessage = NULL;

	if ( ! pFnCanDoEvilWithMessage )
		pFnCanDoEvilWithMessage = (UFunction*) UObject::GObjObjects()->Data[ 57884 ];

	ANowPlayerController_execCanDoEvilWithMessage_Parms CanDoEvilWithMessage_Parms;
	CanDoEvilWithMessage_Parms.bLoot = bLoot;

	pFnCanDoEvilWithMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanDoEvilWithMessage, &CanDoEvilWithMessage_Parms, NULL );

	pFnCanDoEvilWithMessage->FunctionFlags |= 0x400;

	return CanDoEvilWithMessage_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.IsLocalAllowed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pActor                         ( CPF_Parm )

bool ANowPlayerController::IsLocalAllowed ( class AActor* pActor )
{
	static UFunction* pFnIsLocalAllowed = NULL;

	if ( ! pFnIsLocalAllowed )
		pFnIsLocalAllowed = (UFunction*) UObject::GObjObjects()->Data[ 49002 ];

	ANowPlayerController_execIsLocalAllowed_Parms IsLocalAllowed_Parms;
	IsLocalAllowed_Parms.pActor = pActor;

	pFnIsLocalAllowed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsLocalAllowed, &IsLocalAllowed_Parms, NULL );

	pFnIsLocalAllowed->FunctionFlags |= 0x400;

	return IsLocalAllowed_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetNoobBitMap
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iAiId                          ( CPF_Parm )

int ANowPlayerController::GetNoobBitMap ( int iAiId )
{
	static UFunction* pFnGetNoobBitMap = NULL;

	if ( ! pFnGetNoobBitMap )
		pFnGetNoobBitMap = (UFunction*) UObject::GObjObjects()->Data[ 57880 ];

	ANowPlayerController_execGetNoobBitMap_Parms GetNoobBitMap_Parms;
	GetNoobBitMap_Parms.iAiId = iAiId;

	pFnGetNoobBitMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNoobBitMap, &GetNoobBitMap_Parms, NULL );

	pFnGetNoobBitMap->FunctionFlags |= 0x400;

	return GetNoobBitMap_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.SendConsumeItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iCounter                       ( CPF_Parm )

void ANowPlayerController::SendConsumeItem ( int iCounter )
{
	static UFunction* pFnSendConsumeItem = NULL;

	if ( ! pFnSendConsumeItem )
		pFnSendConsumeItem = (UFunction*) UObject::GObjObjects()->Data[ 57878 ];

	ANowPlayerController_execSendConsumeItem_Parms SendConsumeItem_Parms;
	SendConsumeItem_Parms.iCounter = iCounter;

	pFnSendConsumeItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendConsumeItem, &SendConsumeItem_Parms, NULL );

	pFnSendConsumeItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SendUseToTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::SendUseToTarget ( )
{
	static UFunction* pFnSendUseToTarget = NULL;

	if ( ! pFnSendUseToTarget )
		pFnSendUseToTarget = (UFunction*) UObject::GObjObjects()->Data[ 57877 ];

	ANowPlayerController_execSendUseToTarget_Parms SendUseToTarget_Parms;

	pFnSendUseToTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendUseToTarget, &SendUseToTarget_Parms, NULL );

	pFnSendUseToTarget->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.CmdUseItemSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void ANowPlayerController::CmdUseItemSlot ( int iSlot )
{
	static UFunction* pFnCmdUseItemSlot = NULL;

	if ( ! pFnCmdUseItemSlot )
		pFnCmdUseItemSlot = (UFunction*) UObject::GObjObjects()->Data[ 57875 ];

	ANowPlayerController_execCmdUseItemSlot_Parms CmdUseItemSlot_Parms;
	CmdUseItemSlot_Parms.iSlot = iSlot;

	pFnCmdUseItemSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCmdUseItemSlot, &CmdUseItemSlot_Parms, NULL );

	pFnCmdUseItemSlot->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.StringColorFromIntColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iIntColor                      ( CPF_Parm )

struct FString ANowPlayerController::StringColorFromIntColor ( int iIntColor )
{
	static UFunction* pFnStringColorFromIntColor = NULL;

	if ( ! pFnStringColorFromIntColor )
		pFnStringColorFromIntColor = (UFunction*) UObject::GObjObjects()->Data[ 57872 ];

	ANowPlayerController_execStringColorFromIntColor_Parms StringColorFromIntColor_Parms;
	StringColorFromIntColor_Parms.iIntColor = iIntColor;

	pFnStringColorFromIntColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStringColorFromIntColor, &StringColorFromIntColor_Parms, NULL );

	pFnStringColorFromIntColor->FunctionFlags |= 0x400;

	return StringColorFromIntColor_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ColorFromIntColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iIntColor                      ( CPF_Parm )

struct FColor ANowPlayerController::ColorFromIntColor ( int iIntColor )
{
	static UFunction* pFnColorFromIntColor = NULL;

	if ( ! pFnColorFromIntColor )
		pFnColorFromIntColor = (UFunction*) UObject::GObjObjects()->Data[ 57869 ];

	ANowPlayerController_execColorFromIntColor_Parms ColorFromIntColor_Parms;
	ColorFromIntColor_Parms.iIntColor = iIntColor;

	pFnColorFromIntColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnColorFromIntColor, &ColorFromIntColor_Parms, NULL );

	pFnColorFromIntColor->FunctionFlags |= 0x400;

	return ColorFromIntColor_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetIntColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            R                              ( CPF_Parm )
// int                            G                              ( CPF_Parm )
// int                            B                              ( CPF_Parm )
// int                            A                              ( CPF_Parm )

int ANowPlayerController::GetIntColor ( int R, int G, int B, int A )
{
	static UFunction* pFnGetIntColor = NULL;

	if ( ! pFnGetIntColor )
		pFnGetIntColor = (UFunction*) UObject::GObjObjects()->Data[ 57863 ];

	ANowPlayerController_execGetIntColor_Parms GetIntColor_Parms;
	GetIntColor_Parms.R = R;
	GetIntColor_Parms.G = G;
	GetIntColor_Parms.B = B;
	GetIntColor_Parms.A = A;

	pFnGetIntColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIntColor, &GetIntColor_Parms, NULL );

	pFnGetIntColor->FunctionFlags |= 0x400;

	return GetIntColor_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetPetGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iSlotId                        ( CPF_Parm )

struct FString ANowPlayerController::GetPetGuid ( int iSlotId )
{
	static UFunction* pFnGetPetGuid = NULL;

	if ( ! pFnGetPetGuid )
		pFnGetPetGuid = (UFunction*) UObject::GObjObjects()->Data[ 46036 ];

	ANowPlayerController_execGetPetGuid_Parms GetPetGuid_Parms;
	GetPetGuid_Parms.iSlotId = iSlotId;

	pFnGetPetGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetGuid, &GetPetGuid_Parms, NULL );

	pFnGetPetGuid->FunctionFlags |= 0x400;

	return GetPetGuid_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.UseSpell
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sSpellGuid                     ( CPF_Parm | CPF_NeedCtorLink )

bool ANowPlayerController::UseSpell ( struct FString sSpellGuid )
{
	static UFunction* pFnUseSpell = NULL;

	if ( ! pFnUseSpell )
		pFnUseSpell = (UFunction*) UObject::GObjObjects()->Data[ 45956 ];

	ANowPlayerController_execUseSpell_Parms UseSpell_Parms;
	memcpy ( &UseSpell_Parms.sSpellGuid, &sSpellGuid, 0xC );

	pFnUseSpell->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseSpell, &UseSpell_Parms, NULL );

	pFnUseSpell->FunctionFlags |= 0x400;

	return UseSpell_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetGuidFromSpellName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sSpellGuid                     ( CPF_Parm | CPF_NeedCtorLink )

struct FString ANowPlayerController::GetGuidFromSpellName ( struct FString sSpellGuid )
{
	static UFunction* pFnGetGuidFromSpellName = NULL;

	if ( ! pFnGetGuidFromSpellName )
		pFnGetGuidFromSpellName = (UFunction*) UObject::GObjObjects()->Data[ 45954 ];

	ANowPlayerController_execGetGuidFromSpellName_Parms GetGuidFromSpellName_Parms;
	memcpy ( &GetGuidFromSpellName_Parms.sSpellGuid, &sSpellGuid, 0xC );

	pFnGetGuidFromSpellName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuidFromSpellName, &GetGuidFromSpellName_Parms, NULL );

	pFnGetGuidFromSpellName->FunctionFlags |= 0x400;

	return GetGuidFromSpellName_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.UseSkill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sSkillGuid                     ( CPF_Parm | CPF_NeedCtorLink )

bool ANowPlayerController::UseSkill ( struct FString sSkillGuid )
{
	static UFunction* pFnUseSkill = NULL;

	if ( ! pFnUseSkill )
		pFnUseSkill = (UFunction*) UObject::GObjObjects()->Data[ 45949 ];

	ANowPlayerController_execUseSkill_Parms UseSkill_Parms;
	memcpy ( &UseSkill_Parms.sSkillGuid, &sSkillGuid, 0xC );

	pFnUseSkill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseSkill, &UseSkill_Parms, NULL );

	pFnUseSkill->FunctionFlags |= 0x400;

	return UseSkill_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetGuidFromSkillName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString ANowPlayerController::GetGuidFromSkillName ( struct FString sName )
{
	static UFunction* pFnGetGuidFromSkillName = NULL;

	if ( ! pFnGetGuidFromSkillName )
		pFnGetGuidFromSkillName = (UFunction*) UObject::GObjObjects()->Data[ 57856 ];

	ANowPlayerController_execGetGuidFromSkillName_Parms GetGuidFromSkillName_Parms;
	memcpy ( &GetGuidFromSkillName_Parms.sName, &sName, 0xC );

	pFnGetGuidFromSkillName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuidFromSkillName, &GetGuidFromSkillName_Parms, NULL );

	pFnGetGuidFromSkillName->FunctionFlags |= 0x400;

	return GetGuidFromSkillName_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.DebugGetHeatMap
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::DebugGetHeatMap ( )
{
	static UFunction* pFnDebugGetHeatMap = NULL;

	if ( ! pFnDebugGetHeatMap )
		pFnDebugGetHeatMap = (UFunction*) UObject::GObjObjects()->Data[ 57855 ];

	ANowPlayerController_execDebugGetHeatMap_Parms DebugGetHeatMap_Parms;

	pFnDebugGetHeatMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugGetHeatMap, &DebugGetHeatMap_Parms, NULL );

	pFnDebugGetHeatMap->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.DebugDynamicCollision
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::DebugDynamicCollision ( )
{
	static UFunction* pFnDebugDynamicCollision = NULL;

	if ( ! pFnDebugDynamicCollision )
		pFnDebugDynamicCollision = (UFunction*) UObject::GObjObjects()->Data[ 57854 ];

	ANowPlayerController_execDebugDynamicCollision_Parms DebugDynamicCollision_Parms;

	pFnDebugDynamicCollision->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugDynamicCollision, &DebugDynamicCollision_Parms, NULL );

	pFnDebugDynamicCollision->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.DebugNavMeshErrors
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::DebugNavMeshErrors ( )
{
	static UFunction* pFnDebugNavMeshErrors = NULL;

	if ( ! pFnDebugNavMeshErrors )
		pFnDebugNavMeshErrors = (UFunction*) UObject::GObjObjects()->Data[ 57853 ];

	ANowPlayerController_execDebugNavMeshErrors_Parms DebugNavMeshErrors_Parms;

	pFnDebugNavMeshErrors->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugNavMeshErrors, &DebugNavMeshErrors_Parms, NULL );

	pFnDebugNavMeshErrors->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.RemTags
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

struct FString ANowPlayerController::RemTags ( struct FString sString )
{
	static UFunction* pFnRemTags = NULL;

	if ( ! pFnRemTags )
		pFnRemTags = (UFunction*) UObject::GObjObjects()->Data[ 57850 ];

	ANowPlayerController_execRemTags_Parms RemTags_Parms;
	memcpy ( &RemTags_Parms.sString, &sString, 0xC );

	pFnRemTags->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemTags, &RemTags_Parms, NULL );

	pFnRemTags->FunctionFlags |= 0x400;

	return RemTags_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.AiCommandMount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )

void ANowPlayerController::AiCommandMount ( class ANowAtlasAvatar* aActor )
{
	static UFunction* pFnAiCommandMount = NULL;

	if ( ! pFnAiCommandMount )
		pFnAiCommandMount = (UFunction*) UObject::GObjObjects()->Data[ 57848 ];

	ANowPlayerController_execAiCommandMount_Parms AiCommandMount_Parms;
	AiCommandMount_Parms.aActor = aActor;

	pFnAiCommandMount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandMount, &AiCommandMount_Parms, NULL );

	pFnAiCommandMount->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandLevelLock
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )

void ANowPlayerController::AiCommandLevelLock ( class ANowAtlasAvatar* aActor )
{
	static UFunction* pFnAiCommandLevelLock = NULL;

	if ( ! pFnAiCommandLevelLock )
		pFnAiCommandLevelLock = (UFunction*) UObject::GObjObjects()->Data[ 57846 ];

	ANowPlayerController_execAiCommandLevelLock_Parms AiCommandLevelLock_Parms;
	AiCommandLevelLock_Parms.aActor = aActor;

	pFnAiCommandLevelLock->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandLevelLock, &AiCommandLevelLock_Parms, NULL );

	pFnAiCommandLevelLock->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandRename
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// struct FString                 sNewName                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::AiCommandRename ( class ANowAtlasAvatar* aActor, struct FString sNewName )
{
	static UFunction* pFnAiCommandRename = NULL;

	if ( ! pFnAiCommandRename )
		pFnAiCommandRename = (UFunction*) UObject::GObjObjects()->Data[ 57843 ];

	ANowPlayerController_execAiCommandRename_Parms AiCommandRename_Parms;
	AiCommandRename_Parms.aActor = aActor;
	memcpy ( &AiCommandRename_Parms.sNewName, &sNewName, 0xC );

	pFnAiCommandRename->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandRename, &AiCommandRename_Parms, NULL );

	pFnAiCommandRename->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandAbandonGlobal
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::AiCommandAbandonGlobal ( struct FString sGuid )
{
	static UFunction* pFnAiCommandAbandonGlobal = NULL;

	if ( ! pFnAiCommandAbandonGlobal )
		pFnAiCommandAbandonGlobal = (UFunction*) UObject::GObjObjects()->Data[ 57841 ];

	ANowPlayerController_execAiCommandAbandonGlobal_Parms AiCommandAbandonGlobal_Parms;
	memcpy ( &AiCommandAbandonGlobal_Parms.sGuid, &sGuid, 0xC );

	pFnAiCommandAbandonGlobal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandAbandonGlobal, &AiCommandAbandonGlobal_Parms, NULL );

	pFnAiCommandAbandonGlobal->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandAbandon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )

void ANowPlayerController::AiCommandAbandon ( class ANowAtlasAvatar* aActor )
{
	static UFunction* pFnAiCommandAbandon = NULL;

	if ( ! pFnAiCommandAbandon )
		pFnAiCommandAbandon = (UFunction*) UObject::GObjObjects()->Data[ 57839 ];

	ANowPlayerController_execAiCommandAbandon_Parms AiCommandAbandon_Parms;
	AiCommandAbandon_Parms.aActor = aActor;

	pFnAiCommandAbandon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandAbandon, &AiCommandAbandon_Parms, NULL );

	pFnAiCommandAbandon->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandFeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::AiCommandFeed ( class ANowAtlasAvatar* aActor, struct FString sItemGuid )
{
	static UFunction* pFnAiCommandFeed = NULL;

	if ( ! pFnAiCommandFeed )
		pFnAiCommandFeed = (UFunction*) UObject::GObjObjects()->Data[ 57836 ];

	ANowPlayerController_execAiCommandFeed_Parms AiCommandFeed_Parms;
	AiCommandFeed_Parms.aActor = aActor;
	memcpy ( &AiCommandFeed_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnAiCommandFeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandFeed, &AiCommandFeed_Parms, NULL );

	pFnAiCommandFeed->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandSummonToPos
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// struct FVector                 vPos                           ( CPF_Parm )

void ANowPlayerController::AiCommandSummonToPos ( class ANowAtlasAvatar* aActor, struct FVector vPos )
{
	static UFunction* pFnAiCommandSummonToPos = NULL;

	if ( ! pFnAiCommandSummonToPos )
		pFnAiCommandSummonToPos = (UFunction*) UObject::GObjObjects()->Data[ 57833 ];

	ANowPlayerController_execAiCommandSummonToPos_Parms AiCommandSummonToPos_Parms;
	AiCommandSummonToPos_Parms.aActor = aActor;
	memcpy ( &AiCommandSummonToPos_Parms.vPos, &vPos, 0xC );

	pFnAiCommandSummonToPos->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandSummonToPos, &AiCommandSummonToPos_Parms, NULL );

	pFnAiCommandSummonToPos->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandGoToPos
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// struct FVector                 vPos                           ( CPF_Parm )

void ANowPlayerController::AiCommandGoToPos ( class ANowAtlasAvatar* aActor, struct FVector vPos )
{
	static UFunction* pFnAiCommandGoToPos = NULL;

	if ( ! pFnAiCommandGoToPos )
		pFnAiCommandGoToPos = (UFunction*) UObject::GObjObjects()->Data[ 57830 ];

	ANowPlayerController_execAiCommandGoToPos_Parms AiCommandGoToPos_Parms;
	AiCommandGoToPos_Parms.aActor = aActor;
	memcpy ( &AiCommandGoToPos_Parms.vPos, &vPos, 0xC );

	pFnAiCommandGoToPos->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandGoToPos, &AiCommandGoToPos_Parms, NULL );

	pFnAiCommandGoToPos->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandStay
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// unsigned long                  bAll                           ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::AiCommandStay ( class ANowAtlasAvatar* aActor, unsigned long bAll )
{
	static UFunction* pFnAiCommandStay = NULL;

	if ( ! pFnAiCommandStay )
		pFnAiCommandStay = (UFunction*) UObject::GObjObjects()->Data[ 57827 ];

	ANowPlayerController_execAiCommandStay_Parms AiCommandStay_Parms;
	AiCommandStay_Parms.aActor = aActor;
	AiCommandStay_Parms.bAll = bAll;

	pFnAiCommandStay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandStay, &AiCommandStay_Parms, NULL );

	pFnAiCommandStay->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandMode
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// int                            NewModer                       ( CPF_Parm )
// unsigned long                  bAll                           ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::AiCommandMode ( class ANowAtlasAvatar* aActor, int NewModer, unsigned long bAll )
{
	static UFunction* pFnAiCommandMode = NULL;

	if ( ! pFnAiCommandMode )
		pFnAiCommandMode = (UFunction*) UObject::GObjObjects()->Data[ 57823 ];

	ANowPlayerController_execAiCommandMode_Parms AiCommandMode_Parms;
	AiCommandMode_Parms.aActor = aActor;
	AiCommandMode_Parms.NewModer = NewModer;
	AiCommandMode_Parms.bAll = bAll;

	pFnAiCommandMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandMode, &AiCommandMode_Parms, NULL );

	pFnAiCommandMode->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandAttack
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// class AActor*                  aTargetr                       ( CPF_Parm )
// unsigned long                  bAll                           ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::AiCommandAttack ( class ANowAtlasAvatar* aActor, class AActor* aTargetr, unsigned long bAll )
{
	static UFunction* pFnAiCommandAttack = NULL;

	if ( ! pFnAiCommandAttack )
		pFnAiCommandAttack = (UFunction*) UObject::GObjObjects()->Data[ 57819 ];

	ANowPlayerController_execAiCommandAttack_Parms AiCommandAttack_Parms;
	AiCommandAttack_Parms.aActor = aActor;
	AiCommandAttack_Parms.aTargetr = aTargetr;
	AiCommandAttack_Parms.bAll = bAll;

	pFnAiCommandAttack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandAttack, &AiCommandAttack_Parms, NULL );

	pFnAiCommandAttack->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandFollow
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// class AActor*                  aTargetr                       ( CPF_Parm )
// unsigned long                  bAll                           ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::AiCommandFollow ( class ANowAtlasAvatar* aActor, class AActor* aTargetr, unsigned long bAll )
{
	static UFunction* pFnAiCommandFollow = NULL;

	if ( ! pFnAiCommandFollow )
		pFnAiCommandFollow = (UFunction*) UObject::GObjObjects()->Data[ 57815 ];

	ANowPlayerController_execAiCommandFollow_Parms AiCommandFollow_Parms;
	AiCommandFollow_Parms.aActor = aActor;
	AiCommandFollow_Parms.aTargetr = aTargetr;
	AiCommandFollow_Parms.bAll = bAll;

	pFnAiCommandFollow->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandFollow, &AiCommandFollow_Parms, NULL );

	pFnAiCommandFollow->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SendEscape
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::SendEscape ( )
{
	static UFunction* pFnSendEscape = NULL;

	if ( ! pFnSendEscape )
		pFnSendEscape = (UFunction*) UObject::GObjObjects()->Data[ 57814 ];

	ANowPlayerController_execSendEscape_Parms SendEscape_Parms;

	pFnSendEscape->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendEscape, &SendEscape_Parms, NULL );

	pFnSendEscape->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.CalcClusterInfo
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// struct FString                 TargetPylonGuid                ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// float                          MaxArea                        ( CPF_Parm | CPF_OutParm )
// float                          IntersectArea                  ( CPF_Parm | CPF_OutParm )
// int                            PointsToSpend                  ( CPF_Parm | CPF_OutParm )
// int                            PointsCost                     ( CPF_Parm | CPF_OutParm )
// int                            TotalTowersInCluster           ( CPF_Parm | CPF_OutParm )
// int                            bConnectedToKeep               ( CPF_Parm | CPF_OutParm )
// int                            iTierCost                      ( CPF_Parm | CPF_OutParm )
// int                            iCanChange                     ( CPF_Parm | CPF_OutParm )
// int                            iCanSeeTarget                  ( CPF_Parm | CPF_OutParm )
// int                            iMaxTargetAoe                  ( CPF_Parm | CPF_OutParm )
// int                            iMaxTargetDef                  ( CPF_Parm | CPF_OutParm )
// int                            iMaxTargetAtt                  ( CPF_Parm | CPF_OutParm )

void ANowPlayerController::CalcClusterInfo ( struct FString TargetPylonGuid, float* MaxArea, float* IntersectArea, int* PointsToSpend, int* PointsCost, int* TotalTowersInCluster, int* bConnectedToKeep, int* iTierCost, int* iCanChange, int* iCanSeeTarget, int* iMaxTargetAoe, int* iMaxTargetDef, int* iMaxTargetAtt )
{
	static UFunction* pFnCalcClusterInfo = NULL;

	if ( ! pFnCalcClusterInfo )
		pFnCalcClusterInfo = (UFunction*) UObject::GObjObjects()->Data[ 57800 ];

	ANowPlayerController_execCalcClusterInfo_Parms CalcClusterInfo_Parms;
	memcpy ( &CalcClusterInfo_Parms.TargetPylonGuid, &TargetPylonGuid, 0xC );

	pFnCalcClusterInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcClusterInfo, &CalcClusterInfo_Parms, NULL );

	pFnCalcClusterInfo->FunctionFlags |= 0x400;

	if ( MaxArea )
		*MaxArea = CalcClusterInfo_Parms.MaxArea;

	if ( IntersectArea )
		*IntersectArea = CalcClusterInfo_Parms.IntersectArea;

	if ( PointsToSpend )
		*PointsToSpend = CalcClusterInfo_Parms.PointsToSpend;

	if ( PointsCost )
		*PointsCost = CalcClusterInfo_Parms.PointsCost;

	if ( TotalTowersInCluster )
		*TotalTowersInCluster = CalcClusterInfo_Parms.TotalTowersInCluster;

	if ( bConnectedToKeep )
		*bConnectedToKeep = CalcClusterInfo_Parms.bConnectedToKeep;

	if ( iTierCost )
		*iTierCost = CalcClusterInfo_Parms.iTierCost;

	if ( iCanChange )
		*iCanChange = CalcClusterInfo_Parms.iCanChange;

	if ( iCanSeeTarget )
		*iCanSeeTarget = CalcClusterInfo_Parms.iCanSeeTarget;

	if ( iMaxTargetAoe )
		*iMaxTargetAoe = CalcClusterInfo_Parms.iMaxTargetAoe;

	if ( iMaxTargetDef )
		*iMaxTargetDef = CalcClusterInfo_Parms.iMaxTargetDef;

	if ( iMaxTargetAtt )
		*iMaxTargetAtt = CalcClusterInfo_Parms.iMaxTargetAtt;
};

// Function NowGame.NowPlayerController.InterSectCalcThing
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          A1                             ( CPF_Parm )
// float                          A2                             ( CPF_Parm )
// struct FVector                 Pos1                           ( CPF_Parm | CPF_OutParm )
// struct FVector                 Pos2                           ( CPF_Parm | CPF_OutParm )

float ANowPlayerController::InterSectCalcThing ( float A1, float A2, struct FVector* Pos1, struct FVector* Pos2 )
{
	static UFunction* pFnInterSectCalcThing = NULL;

	if ( ! pFnInterSectCalcThing )
		pFnInterSectCalcThing = (UFunction*) UObject::GObjObjects()->Data[ 52323 ];

	ANowPlayerController_execInterSectCalcThing_Parms InterSectCalcThing_Parms;
	InterSectCalcThing_Parms.A1 = A1;
	InterSectCalcThing_Parms.A2 = A2;

	pFnInterSectCalcThing->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInterSectCalcThing, &InterSectCalcThing_Parms, NULL );

	pFnInterSectCalcThing->FunctionFlags |= 0x400;

	if ( Pos1 )
		memcpy ( Pos1, &InterSectCalcThing_Parms.Pos1, 0xC );

	if ( Pos2 )
		memcpy ( Pos2, &InterSectCalcThing_Parms.Pos2, 0xC );

	return InterSectCalcThing_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.MountStat_IsMale
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 BodyString                     ( CPF_Parm | CPF_NeedCtorLink )

bool ANowPlayerController::MountStat_IsMale ( struct FString BodyString )
{
	static UFunction* pFnMountStat_IsMale = NULL;

	if ( ! pFnMountStat_IsMale )
		pFnMountStat_IsMale = (UFunction*) UObject::GObjObjects()->Data[ 57793 ];

	ANowPlayerController_execMountStat_IsMale_Parms MountStat_IsMale_Parms;
	memcpy ( &MountStat_IsMale_Parms.BodyString, &BodyString, 0xC );

	pFnMountStat_IsMale->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMountStat_IsMale, &MountStat_IsMale_Parms, NULL );

	pFnMountStat_IsMale->FunctionFlags |= 0x400;

	return MountStat_IsMale_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetRawDynamicMountStatsFromString
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 StatString                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iLevel                         ( CPF_Parm )
// int                            attrb_Strength                 ( CPF_Parm | CPF_OutParm )
// int                            attrb_Dexterity                ( CPF_Parm | CPF_OutParm )
// int                            attrb_Constitution             ( CPF_Parm | CPF_OutParm )
// int                            attrb_Psyche                   ( CPF_Parm | CPF_OutParm )
// int                            attrb_Intelligence             ( CPF_Parm | CPF_OutParm )
// int                            attrb_Speed                    ( CPF_Parm | CPF_OutParm )
// int                            attrb_Size                     ( CPF_Parm | CPF_OutParm )
// int                            attrb_Weight                   ( CPF_Parm | CPF_OutParm )

void ANowPlayerController::GetRawDynamicMountStatsFromString ( struct FString StatString, int iLevel, int* attrb_Strength, int* attrb_Dexterity, int* attrb_Constitution, int* attrb_Psyche, int* attrb_Intelligence, int* attrb_Speed, int* attrb_Size, int* attrb_Weight )
{
	static UFunction* pFnGetRawDynamicMountStatsFromString = NULL;

	if ( ! pFnGetRawDynamicMountStatsFromString )
		pFnGetRawDynamicMountStatsFromString = (UFunction*) UObject::GObjObjects()->Data[ 57782 ];

	ANowPlayerController_execGetRawDynamicMountStatsFromString_Parms GetRawDynamicMountStatsFromString_Parms;
	memcpy ( &GetRawDynamicMountStatsFromString_Parms.StatString, &StatString, 0xC );
	GetRawDynamicMountStatsFromString_Parms.iLevel = iLevel;

	pFnGetRawDynamicMountStatsFromString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRawDynamicMountStatsFromString, &GetRawDynamicMountStatsFromString_Parms, NULL );

	pFnGetRawDynamicMountStatsFromString->FunctionFlags |= 0x400;

	if ( attrb_Strength )
		*attrb_Strength = GetRawDynamicMountStatsFromString_Parms.attrb_Strength;

	if ( attrb_Dexterity )
		*attrb_Dexterity = GetRawDynamicMountStatsFromString_Parms.attrb_Dexterity;

	if ( attrb_Constitution )
		*attrb_Constitution = GetRawDynamicMountStatsFromString_Parms.attrb_Constitution;

	if ( attrb_Psyche )
		*attrb_Psyche = GetRawDynamicMountStatsFromString_Parms.attrb_Psyche;

	if ( attrb_Intelligence )
		*attrb_Intelligence = GetRawDynamicMountStatsFromString_Parms.attrb_Intelligence;

	if ( attrb_Speed )
		*attrb_Speed = GetRawDynamicMountStatsFromString_Parms.attrb_Speed;

	if ( attrb_Size )
		*attrb_Size = GetRawDynamicMountStatsFromString_Parms.attrb_Size;

	if ( attrb_Weight )
		*attrb_Weight = GetRawDynamicMountStatsFromString_Parms.attrb_Weight;
};

// Function NowGame.NowPlayerController.GetDynamicMountStatsFromString
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iMountType                     ( CPF_Parm )
// struct FString                 StatString                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iLevel                         ( CPF_Parm )
// int                            attrb_Strength                 ( CPF_Parm | CPF_OutParm )
// int                            attrb_Dexterity                ( CPF_Parm | CPF_OutParm )
// int                            attrb_Constitution             ( CPF_Parm | CPF_OutParm )
// int                            attrb_Psyche                   ( CPF_Parm | CPF_OutParm )
// int                            attrb_Intelligence             ( CPF_Parm | CPF_OutParm )
// int                            attrb_Speed                    ( CPF_Parm | CPF_OutParm )
// int                            attrb_Size                     ( CPF_Parm | CPF_OutParm )
// int                            attrb_Weight                   ( CPF_Parm | CPF_OutParm )

void ANowPlayerController::GetDynamicMountStatsFromString ( int iMountType, struct FString StatString, int iLevel, int* attrb_Strength, int* attrb_Dexterity, int* attrb_Constitution, int* attrb_Psyche, int* attrb_Intelligence, int* attrb_Speed, int* attrb_Size, int* attrb_Weight )
{
	static UFunction* pFnGetDynamicMountStatsFromString = NULL;

	if ( ! pFnGetDynamicMountStatsFromString )
		pFnGetDynamicMountStatsFromString = (UFunction*) UObject::GObjObjects()->Data[ 57770 ];

	ANowPlayerController_execGetDynamicMountStatsFromString_Parms GetDynamicMountStatsFromString_Parms;
	GetDynamicMountStatsFromString_Parms.iMountType = iMountType;
	memcpy ( &GetDynamicMountStatsFromString_Parms.StatString, &StatString, 0xC );
	GetDynamicMountStatsFromString_Parms.iLevel = iLevel;

	pFnGetDynamicMountStatsFromString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDynamicMountStatsFromString, &GetDynamicMountStatsFromString_Parms, NULL );

	pFnGetDynamicMountStatsFromString->FunctionFlags |= 0x400;

	if ( attrb_Strength )
		*attrb_Strength = GetDynamicMountStatsFromString_Parms.attrb_Strength;

	if ( attrb_Dexterity )
		*attrb_Dexterity = GetDynamicMountStatsFromString_Parms.attrb_Dexterity;

	if ( attrb_Constitution )
		*attrb_Constitution = GetDynamicMountStatsFromString_Parms.attrb_Constitution;

	if ( attrb_Psyche )
		*attrb_Psyche = GetDynamicMountStatsFromString_Parms.attrb_Psyche;

	if ( attrb_Intelligence )
		*attrb_Intelligence = GetDynamicMountStatsFromString_Parms.attrb_Intelligence;

	if ( attrb_Speed )
		*attrb_Speed = GetDynamicMountStatsFromString_Parms.attrb_Speed;

	if ( attrb_Size )
		*attrb_Size = GetDynamicMountStatsFromString_Parms.attrb_Size;

	if ( attrb_Weight )
		*attrb_Weight = GetDynamicMountStatsFromString_Parms.attrb_Weight;
};

// Function NowGame.NowPlayerController.GetDynamicMountStatsFromStringMount
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarAiMount*  pMount                         ( CPF_Parm )
// struct FString                 StatString                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iLevel                         ( CPF_Parm )
// int                            attrb_Strength                 ( CPF_Parm | CPF_OutParm )
// int                            attrb_Dexterity                ( CPF_Parm | CPF_OutParm )
// int                            attrb_Constitution             ( CPF_Parm | CPF_OutParm )
// int                            attrb_Psyche                   ( CPF_Parm | CPF_OutParm )
// int                            attrb_Intelligence             ( CPF_Parm | CPF_OutParm )
// int                            attrb_Speed                    ( CPF_Parm | CPF_OutParm )
// int                            attrb_Size                     ( CPF_Parm | CPF_OutParm )
// int                            attrb_Weight                   ( CPF_Parm | CPF_OutParm )

void ANowPlayerController::GetDynamicMountStatsFromStringMount ( class ANowAtlasAvatarAiMount* pMount, struct FString StatString, int iLevel, int* attrb_Strength, int* attrb_Dexterity, int* attrb_Constitution, int* attrb_Psyche, int* attrb_Intelligence, int* attrb_Speed, int* attrb_Size, int* attrb_Weight )
{
	static UFunction* pFnGetDynamicMountStatsFromStringMount = NULL;

	if ( ! pFnGetDynamicMountStatsFromStringMount )
		pFnGetDynamicMountStatsFromStringMount = (UFunction*) UObject::GObjObjects()->Data[ 57758 ];

	ANowPlayerController_execGetDynamicMountStatsFromStringMount_Parms GetDynamicMountStatsFromStringMount_Parms;
	GetDynamicMountStatsFromStringMount_Parms.pMount = pMount;
	memcpy ( &GetDynamicMountStatsFromStringMount_Parms.StatString, &StatString, 0xC );
	GetDynamicMountStatsFromStringMount_Parms.iLevel = iLevel;

	pFnGetDynamicMountStatsFromStringMount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDynamicMountStatsFromStringMount, &GetDynamicMountStatsFromStringMount_Parms, NULL );

	pFnGetDynamicMountStatsFromStringMount->FunctionFlags |= 0x400;

	if ( attrb_Strength )
		*attrb_Strength = GetDynamicMountStatsFromStringMount_Parms.attrb_Strength;

	if ( attrb_Dexterity )
		*attrb_Dexterity = GetDynamicMountStatsFromStringMount_Parms.attrb_Dexterity;

	if ( attrb_Constitution )
		*attrb_Constitution = GetDynamicMountStatsFromStringMount_Parms.attrb_Constitution;

	if ( attrb_Psyche )
		*attrb_Psyche = GetDynamicMountStatsFromStringMount_Parms.attrb_Psyche;

	if ( attrb_Intelligence )
		*attrb_Intelligence = GetDynamicMountStatsFromStringMount_Parms.attrb_Intelligence;

	if ( attrb_Speed )
		*attrb_Speed = GetDynamicMountStatsFromStringMount_Parms.attrb_Speed;

	if ( attrb_Size )
		*attrb_Size = GetDynamicMountStatsFromStringMount_Parms.attrb_Size;

	if ( attrb_Weight )
		*attrb_Weight = GetDynamicMountStatsFromStringMount_Parms.attrb_Weight;
};

// Function NowGame.NowPlayerController.GetFriendsListName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       out_list                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ANowPlayerController::GetFriendsListName ( TArray< struct FString >* out_list )
{
	static UFunction* pFnGetFriendsListName = NULL;

	if ( ! pFnGetFriendsListName )
		pFnGetFriendsListName = (UFunction*) UObject::GObjObjects()->Data[ 57755 ];

	ANowPlayerController_execGetFriendsListName_Parms GetFriendsListName_Parms;

	pFnGetFriendsListName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFriendsListName, &GetFriendsListName_Parms, NULL );

	pFnGetFriendsListName->FunctionFlags |= 0x400;

	if ( out_list )
		memcpy ( out_list, &GetFriendsListName_Parms.out_list, 0xC );
};

// Function NowGame.NowPlayerController.ForceUpdateDLE
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  DLEC                           ( CPF_Parm )

void ANowPlayerController::ForceUpdateDLE ( class AActor* DLEC )
{
	static UFunction* pFnForceUpdateDLE = NULL;

	if ( ! pFnForceUpdateDLE )
		pFnForceUpdateDLE = (UFunction*) UObject::GObjObjects()->Data[ 57753 ];

	ANowPlayerController_execForceUpdateDLE_Parms ForceUpdateDLE_Parms;
	ForceUpdateDLE_Parms.DLEC = DLEC;

	pFnForceUpdateDLE->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceUpdateDLE, &ForceUpdateDLE_Parms, NULL );

	pFnForceUpdateDLE->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.UpdateWeather
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::UpdateWeather ( )
{
	static UFunction* pFnUpdateWeather = NULL;

	if ( ! pFnUpdateWeather )
		pFnUpdateWeather = (UFunction*) UObject::GObjObjects()->Data[ 57751 ];

	ANowPlayerController_execUpdateWeather_Parms UpdateWeather_Parms;

	pFnUpdateWeather->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateWeather, &UpdateWeather_Parms, NULL );

	pFnUpdateWeather->FunctionFlags |= 0x400;

	return UpdateWeather_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.IsInGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::IsInGuild ( )
{
	static UFunction* pFnIsInGuild = NULL;

	if ( ! pFnIsInGuild )
		pFnIsInGuild = (UFunction*) UObject::GObjObjects()->Data[ 45896 ];

	ANowPlayerController_execIsInGuild_Parms IsInGuild_Parms;

	pFnIsInGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInGuild, &IsInGuild_Parms, NULL );

	pFnIsInGuild->FunctionFlags |= 0x400;

	return IsInGuild_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.IsThisMyGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 GuildGuid                      ( CPF_Parm | CPF_NeedCtorLink )

bool ANowPlayerController::IsThisMyGuild ( struct FString GuildGuid )
{
	static UFunction* pFnIsThisMyGuild = NULL;

	if ( ! pFnIsThisMyGuild )
		pFnIsThisMyGuild = (UFunction*) UObject::GObjObjects()->Data[ 57748 ];

	ANowPlayerController_execIsThisMyGuild_Parms IsThisMyGuild_Parms;
	memcpy ( &IsThisMyGuild_Parms.GuildGuid, &GuildGuid, 0xC );

	pFnIsThisMyGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsThisMyGuild, &IsThisMyGuild_Parms, NULL );

	pFnIsThisMyGuild->FunctionFlags |= 0x400;

	return IsThisMyGuild_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetVersionString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowPlayerController::GetVersionString ( )
{
	static UFunction* pFnGetVersionString = NULL;

	if ( ! pFnGetVersionString )
		pFnGetVersionString = (UFunction*) UObject::GObjObjects()->Data[ 45921 ];

	ANowPlayerController_execGetVersionString_Parms GetVersionString_Parms;

	pFnGetVersionString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVersionString, &GetVersionString_Parms, NULL );

	pFnGetVersionString->FunctionFlags |= 0x400;

	return GetVersionString_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.CommandOk
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WhatCommand                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool ANowPlayerController::CommandOk ( struct FString WhatCommand )
{
	static UFunction* pFnCommandOk = NULL;

	if ( ! pFnCommandOk )
		pFnCommandOk = (UFunction*) UObject::GObjObjects()->Data[ 46006 ];

	ANowPlayerController_execCommandOk_Parms CommandOk_Parms;
	memcpy ( &CommandOk_Parms.WhatCommand, &WhatCommand, 0xC );

	pFnCommandOk->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCommandOk, &CommandOk_Parms, NULL );

	pFnCommandOk->FunctionFlags |= 0x400;

	return CommandOk_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetQueryStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::GetQueryStats ( )
{
	static UFunction* pFnGetQueryStats = NULL;

	if ( ! pFnGetQueryStats )
		pFnGetQueryStats = (UFunction*) UObject::GObjObjects()->Data[ 57746 ];

	ANowPlayerController_execGetQueryStats_Parms GetQueryStats_Parms;

	pFnGetQueryStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetQueryStats, &GetQueryStats_Parms, NULL );

	pFnGetQueryStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.GetPetPointsMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowPlayerController::GetPetPointsMax ( )
{
	static UFunction* pFnGetPetPointsMax = NULL;

	if ( ! pFnGetPetPointsMax )
		pFnGetPetPointsMax = (UFunction*) UObject::GObjObjects()->Data[ 45925 ];

	ANowPlayerController_execGetPetPointsMax_Parms GetPetPointsMax_Parms;

	pFnGetPetPointsMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetPointsMax, &GetPetPointsMax_Parms, NULL );

	pFnGetPetPointsMax->FunctionFlags |= 0x400;

	return GetPetPointsMax_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetPetPoints
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowPlayerController::GetPetPoints ( )
{
	static UFunction* pFnGetPetPoints = NULL;

	if ( ! pFnGetPetPoints )
		pFnGetPetPoints = (UFunction*) UObject::GObjObjects()->Data[ 45923 ];

	ANowPlayerController_execGetPetPoints_Parms GetPetPoints_Parms;

	pFnGetPetPoints->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetPoints, &GetPetPoints_Parms, NULL );

	pFnGetPetPoints->FunctionFlags |= 0x400;

	return GetPetPoints_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetMurderCounts
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::GetMurderCounts ( )
{
	static UFunction* pFnGetMurderCounts = NULL;

	if ( ! pFnGetMurderCounts )
		pFnGetMurderCounts = (UFunction*) UObject::GObjObjects()->Data[ 57745 ];

	ANowPlayerController_execGetMurderCounts_Parms GetMurderCounts_Parms;

	pFnGetMurderCounts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMurderCounts, &GetMurderCounts_Parms, NULL );

	pFnGetMurderCounts->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.GetWeights
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::GetWeights ( )
{
	static UFunction* pFnGetWeights = NULL;

	if ( ! pFnGetWeights )
		pFnGetWeights = (UFunction*) UObject::GObjObjects()->Data[ 57744 ];

	ANowPlayerController_execGetWeights_Parms GetWeights_Parms;

	pFnGetWeights->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWeights, &GetWeights_Parms, NULL );

	pFnGetWeights->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SetLastVar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          New                            ( CPF_Parm )

void ANowPlayerController::SetLastVar ( float New )
{
	static UFunction* pFnSetLastVar = NULL;

	if ( ! pFnSetLastVar )
		pFnSetLastVar = (UFunction*) UObject::GObjObjects()->Data[ 57742 ];

	ANowPlayerController_execSetLastVar_Parms SetLastVar_Parms;
	SetLastVar_Parms.New = New;

	pFnSetLastVar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLastVar, &SetLastVar_Parms, NULL );

	pFnSetLastVar->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SetVarB
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            WhatVal                        ( CPF_Parm )
// int                            WhatVar                        ( CPF_Parm )

void ANowPlayerController::SetVarB ( int WhatVal, int WhatVar )
{
	static UFunction* pFnSetVarB = NULL;

	if ( ! pFnSetVarB )
		pFnSetVarB = (UFunction*) UObject::GObjObjects()->Data[ 57739 ];

	ANowPlayerController_execSetVarB_Parms SetVarB_Parms;
	SetVarB_Parms.WhatVal = WhatVal;
	SetVarB_Parms.WhatVar = WhatVar;

	pFnSetVarB->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVarB, &SetVarB_Parms, NULL );

	pFnSetVarB->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SetVar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          WhatVal                        ( CPF_Parm )
// int                            WhatVar                        ( CPF_Parm )

void ANowPlayerController::SetVar ( float WhatVal, int WhatVar )
{
	static UFunction* pFnSetVar = NULL;

	if ( ! pFnSetVar )
		pFnSetVar = (UFunction*) UObject::GObjObjects()->Data[ 57736 ];

	ANowPlayerController_execSetVar_Parms SetVar_Parms;
	SetVar_Parms.WhatVal = WhatVal;
	SetVar_Parms.WhatVar = WhatVar;

	pFnSetVar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVar, &SetVar_Parms, NULL );

	pFnSetVar->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.GetVarB
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            WhatVar                        ( CPF_Parm )

int ANowPlayerController::GetVarB ( int WhatVar )
{
	static UFunction* pFnGetVarB = NULL;

	if ( ! pFnGetVarB )
		pFnGetVarB = (UFunction*) UObject::GObjObjects()->Data[ 57224 ];

	ANowPlayerController_execGetVarB_Parms GetVarB_Parms;
	GetVarB_Parms.WhatVar = WhatVar;

	pFnGetVarB->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVarB, &GetVarB_Parms, NULL );

	pFnGetVarB->FunctionFlags |= 0x400;

	return GetVarB_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetVar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            WhatVar                        ( CPF_Parm )

float ANowPlayerController::GetVar ( int WhatVar )
{
	static UFunction* pFnGetVar = NULL;

	if ( ! pFnGetVar )
		pFnGetVar = (UFunction*) UObject::GObjObjects()->Data[ 57222 ];

	ANowPlayerController_execGetVar_Parms GetVar_Parms;
	GetVar_Parms.WhatVar = WhatVar;

	pFnGetVar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVar, &GetVar_Parms, NULL );

	pFnGetVar->FunctionFlags |= 0x400;

	return GetVar_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ShowingMouse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::ShowingMouse ( )
{
	static UFunction* pFnShowingMouse = NULL;

	if ( ! pFnShowingMouse )
		pFnShowingMouse = (UFunction*) UObject::GObjObjects()->Data[ 57732 ];

	ANowPlayerController_execShowingMouse_Parms ShowingMouse_Parms;

	pFnShowingMouse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowingMouse, &ShowingMouse_Parms, NULL );

	pFnShowingMouse->FunctionFlags |= 0x400;

	return ShowingMouse_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.SetLoginStage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            newStage                       ( CPF_Parm )

void ANowPlayerController::SetLoginStage ( int newStage )
{
	static UFunction* pFnSetLoginStage = NULL;

	if ( ! pFnSetLoginStage )
		pFnSetLoginStage = (UFunction*) UObject::GObjObjects()->Data[ 57730 ];

	ANowPlayerController_execSetLoginStage_Parms SetLoginStage_Parms;
	SetLoginStage_Parms.newStage = newStage;

	pFnSetLoginStage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLoginStage, &SetLoginStage_Parms, NULL );

	pFnSetLoginStage->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SetSoundCueC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USoundCue*               New                            ( CPF_Parm )

void ANowPlayerController::SetSoundCueC ( class USoundCue* New )
{
	static UFunction* pFnSetSoundCueC = NULL;

	if ( ! pFnSetSoundCueC )
		pFnSetSoundCueC = (UFunction*) UObject::GObjObjects()->Data[ 57728 ];

	ANowPlayerController_execSetSoundCueC_Parms SetSoundCueC_Parms;
	SetSoundCueC_Parms.New = New;

	pFnSetSoundCueC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSoundCueC, &SetSoundCueC_Parms, NULL );

	pFnSetSoundCueC->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.GetSkillLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WhatSkill                      ( CPF_Parm | CPF_NeedCtorLink )

int ANowPlayerController::GetSkillLevel ( struct FString WhatSkill )
{
	static UFunction* pFnGetSkillLevel = NULL;

	if ( ! pFnGetSkillLevel )
		pFnGetSkillLevel = (UFunction*) UObject::GObjObjects()->Data[ 47111 ];

	ANowPlayerController_execGetSkillLevel_Parms GetSkillLevel_Parms;
	memcpy ( &GetSkillLevel_Parms.WhatSkill, &WhatSkill, 0xC );

	pFnGetSkillLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillLevel, &GetSkillLevel_Parms, NULL );

	pFnGetSkillLevel->FunctionFlags |= 0x400;

	return GetSkillLevel_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.IsIntact
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::IsIntact ( )
{
	static UFunction* pFnIsIntact = NULL;

	if ( ! pFnIsIntact )
		pFnIsIntact = (UFunction*) UObject::GObjObjects()->Data[ 57726 ];

	ANowPlayerController_execIsIntact_Parms IsIntact_Parms;

	pFnIsIntact->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsIntact, &IsIntact_Parms, NULL );

	pFnIsIntact->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.CheckIt
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::CheckIt ( )
{
	static UFunction* pFnCheckIt = NULL;

	if ( ! pFnCheckIt )
		pFnCheckIt = (UFunction*) UObject::GObjObjects()->Data[ 57725 ];

	ANowPlayerController_execCheckIt_Parms CheckIt_Parms;

	pFnCheckIt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckIt, &CheckIt_Parms, NULL );

	pFnCheckIt->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.ShowPendingClientResponse
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::ShowPendingClientResponse ( )
{
	static UFunction* pFnShowPendingClientResponse = NULL;

	if ( ! pFnShowPendingClientResponse )
		pFnShowPendingClientResponse = (UFunction*) UObject::GObjObjects()->Data[ 57724 ];

	ANowPlayerController_execShowPendingClientResponse_Parms ShowPendingClientResponse_Parms;

	pFnShowPendingClientResponse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowPendingClientResponse, &ShowPendingClientResponse_Parms, NULL );

	pFnShowPendingClientResponse->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.GetCursorPosition
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            X                              ( CPF_Parm | CPF_OutParm )
// int                            Y                              ( CPF_Parm | CPF_OutParm )

void ANowPlayerController::GetCursorPosition ( int* X, int* Y )
{
	static UFunction* pFnGetCursorPosition = NULL;

	if ( ! pFnGetCursorPosition )
		pFnGetCursorPosition = (UFunction*) UObject::GObjObjects()->Data[ 57721 ];

	ANowPlayerController_execGetCursorPosition_Parms GetCursorPosition_Parms;

	pFnGetCursorPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCursorPosition, &GetCursorPosition_Parms, NULL );

	pFnGetCursorPosition->FunctionFlags |= 0x400;

	if ( X )
		*X = GetCursorPosition_Parms.X;

	if ( Y )
		*Y = GetCursorPosition_Parms.Y;
};

// Function NowGame.NowPlayerHouse.whatAmILookingAt
// [0x00020002] 
// Parameters infos:

void ANowPlayerHouse::whatAmILookingAt ( )
{
	static UFunction* pFnwhatAmILookingAt = NULL;

	if ( ! pFnwhatAmILookingAt )
		pFnwhatAmILookingAt = (UFunction*) UObject::GObjObjects()->Data[ 58699 ];

	ANowPlayerHouse_execwhatAmILookingAt_Parms whatAmILookingAt_Parms;

	this->ProcessEvent ( pFnwhatAmILookingAt, &whatAmILookingAt_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.setIamCreator
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    Control                        ( CPF_Parm )

void ANowPlayerHouse::setIamCreator ( class ANowPlayerController* Control )
{
	static UFunction* pFnsetIamCreator = NULL;

	if ( ! pFnsetIamCreator )
		pFnsetIamCreator = (UFunction*) UObject::GObjObjects()->Data[ 58697 ];

	ANowPlayerHouse_execsetIamCreator_Parms setIamCreator_Parms;
	setIamCreator_Parms.Control = Control;

	this->ProcessEvent ( pFnsetIamCreator, &setIamCreator_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.CreateSign
// [0x00020002] 
// Parameters infos:

void ANowPlayerHouse::CreateSign ( )
{
	static UFunction* pFnCreateSign = NULL;

	if ( ! pFnCreateSign )
		pFnCreateSign = (UFunction*) UObject::GObjObjects()->Data[ 58694 ];

	ANowPlayerHouse_execCreateSign_Parms CreateSign_Parms;

	this->ProcessEvent ( pFnCreateSign, &CreateSign_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.CreateDoor
// [0x00020002] 
// Parameters infos:

void ANowPlayerHouse::CreateDoor ( )
{
	static UFunction* pFnCreateDoor = NULL;

	if ( ! pFnCreateDoor )
		pFnCreateDoor = (UFunction*) UObject::GObjObjects()->Data[ 58692 ];

	ANowPlayerHouse_execCreateDoor_Parms CreateDoor_Parms;

	this->ProcessEvent ( pFnCreateDoor, &CreateDoor_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.setHouse
// [0x00020002] 
// Parameters infos:

void ANowPlayerHouse::setHouse ( )
{
	static UFunction* pFnsetHouse = NULL;

	if ( ! pFnsetHouse )
		pFnsetHouse = (UFunction*) UObject::GObjObjects()->Data[ 58690 ];

	ANowPlayerHouse_execsetHouse_Parms setHouse_Parms;

	this->ProcessEvent ( pFnsetHouse, &setHouse_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.closeDoor
// [0x00020002] 
// Parameters infos:

void ANowPlayerHouse::closeDoor ( )
{
	static UFunction* pFncloseDoor = NULL;

	if ( ! pFncloseDoor )
		pFncloseDoor = (UFunction*) UObject::GObjObjects()->Data[ 58688 ];

	ANowPlayerHouse_execcloseDoor_Parms closeDoor_Parms;

	this->ProcessEvent ( pFncloseDoor, &closeDoor_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.openDoor
// [0x00020002] 
// Parameters infos:

void ANowPlayerHouse::openDoor ( )
{
	static UFunction* pFnopenDoor = NULL;

	if ( ! pFnopenDoor )
		pFnopenDoor = (UFunction*) UObject::GObjObjects()->Data[ 58685 ];

	ANowPlayerHouse_execopenDoor_Parms openDoor_Parms;

	this->ProcessEvent ( pFnopenDoor, &openDoor_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.TargetMesh
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerHouse::eventTargetMesh ( )
{
	static UFunction* pFnTargetMesh = NULL;

	if ( ! pFnTargetMesh )
		pFnTargetMesh = (UFunction*) UObject::GObjObjects()->Data[ 58672 ];

	ANowPlayerHouse_eventTargetMesh_Parms TargetMesh_Parms;

	this->ProcessEvent ( pFnTargetMesh, &TargetMesh_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.spawnHouse
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowPlayerHouse::eventspawnHouse ( )
{
	static UFunction* pFnspawnHouse = NULL;

	if ( ! pFnspawnHouse )
		pFnspawnHouse = (UFunction*) UObject::GObjObjects()->Data[ 58671 ];

	ANowPlayerHouse_eventspawnHouse_Parms spawnHouse_Parms;

	this->ProcessEvent ( pFnspawnHouse, &spawnHouse_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.createHouseOnServer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                pwnd                           ( CPF_Parm )
// struct FVector                 posi                           ( CPF_Parm )
// int                            Rot                            ( CPF_Parm )

void ANowPlayerHouse::createHouseOnServer ( class ANowPawn* pwnd, struct FVector posi, int Rot )
{
	static UFunction* pFncreateHouseOnServer = NULL;

	if ( ! pFncreateHouseOnServer )
		pFncreateHouseOnServer = (UFunction*) UObject::GObjObjects()->Data[ 58667 ];

	ANowPlayerHouse_execcreateHouseOnServer_Parms createHouseOnServer_Parms;
	createHouseOnServer_Parms.pwnd = pwnd;
	memcpy ( &createHouseOnServer_Parms.posi, &posi, 0xC );
	createHouseOnServer_Parms.Rot = Rot;

	pFncreateHouseOnServer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFncreateHouseOnServer, &createHouseOnServer_Parms, NULL );

	pFncreateHouseOnServer->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerHouse.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerHouse::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = (UFunction*) UObject::GObjObjects()->Data[ 58665 ];

	ANowPlayerHouse_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowPlayerHouse.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowPlayerHouse::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 58662 ];

	ANowPlayerHouse_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowPlayerManager.CheckOkForMerge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowPawn*                WhatPawn                       ( CPF_Parm )

bool UNowPlayerManager::CheckOkForMerge ( class ANowPawn* WhatPawn )
{
	static UFunction* pFnCheckOkForMerge = NULL;

	if ( ! pFnCheckOkForMerge )
		pFnCheckOkForMerge = (UFunction*) UObject::GObjObjects()->Data[ 58744 ];

	UNowPlayerManager_execCheckOkForMerge_Parms CheckOkForMerge_Parms;
	CheckOkForMerge_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnCheckOkForMerge, &CheckOkForMerge_Parms, NULL );

	return CheckOkForMerge_Parms.ReturnValue;
};

// Function NowGame.NowPlayerManager.CheckPlayerList
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowPlayerManager::CheckPlayerList ( )
{
	static UFunction* pFnCheckPlayerList = NULL;

	if ( ! pFnCheckPlayerList )
		pFnCheckPlayerList = (UFunction*) UObject::GObjObjects()->Data[ 58741 ];

	UNowPlayerManager_execCheckPlayerList_Parms CheckPlayerList_Parms;

	this->ProcessEvent ( pFnCheckPlayerList, &CheckPlayerList_Parms, NULL );

	return CheckPlayerList_Parms.ReturnValue;
};

// Function NowGame.NowPlayerManager.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UNowPlayerManager::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 58739 ];

	UNowPlayerManager_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowPlayerManager.AddPawnToList
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                WhatPawn                       ( CPF_Parm )

void UNowPlayerManager::AddPawnToList ( class ANowPawn* WhatPawn )
{
	static UFunction* pFnAddPawnToList = NULL;

	if ( ! pFnAddPawnToList )
		pFnAddPawnToList = (UFunction*) UObject::GObjObjects()->Data[ 58736 ];

	UNowPlayerManager_execAddPawnToList_Parms AddPawnToList_Parms;
	AddPawnToList_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnAddPawnToList, &AddPawnToList_Parms, NULL );
};

// Function NowGame.NowPlayerManager.InitManager
// [0x00020002] 
// Parameters infos:

void UNowPlayerManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = (UFunction*) UObject::GObjObjects()->Data[ 58735 ];

	UNowPlayerManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.NowPlayerManager.CleanUpAwareDist
// [0x00020002] 
// Parameters infos:

void UNowPlayerManager::CleanUpAwareDist ( )
{
	static UFunction* pFnCleanUpAwareDist = NULL;

	if ( ! pFnCleanUpAwareDist )
		pFnCleanUpAwareDist = (UFunction*) UObject::GObjObjects()->Data[ 58733 ];

	UNowPlayerManager_execCleanUpAwareDist_Parms CleanUpAwareDist_Parms;

	this->ProcessEvent ( pFnCleanUpAwareDist, &CleanUpAwareDist_Parms, NULL );
};

// Function NowGame.NowPlayerManager.ForceDestroy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )

void UNowPlayerManager::ForceDestroy ( class AActor* WhatActor )
{
	static UFunction* pFnForceDestroy = NULL;

	if ( ! pFnForceDestroy )
		pFnForceDestroy = (UFunction*) UObject::GObjObjects()->Data[ 58731 ];

	UNowPlayerManager_execForceDestroy_Parms ForceDestroy_Parms;
	ForceDestroy_Parms.WhatActor = WhatActor;

	pFnForceDestroy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceDestroy, &ForceDestroy_Parms, NULL );

	pFnForceDestroy->FunctionFlags |= 0x400;
};

// Function NowGame.NowPointLightDayNight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowPointLightDayNight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 58756 ];

	ANowPointLightDayNight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowPointLightDayNight.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowPointLightDayNight::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 58755 ];

	ANowPointLightDayNight_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowPointLightDayNight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowPointLightDayNight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 58753 ];

	ANowPointLightDayNight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowPointLightDayNight.TurnOnNightLight
// [0x00020002] 
// Parameters infos:

void ANowPointLightDayNight::TurnOnNightLight ( )
{
	static UFunction* pFnTurnOnNightLight = NULL;

	if ( ! pFnTurnOnNightLight )
		pFnTurnOnNightLight = (UFunction*) UObject::GObjObjects()->Data[ 58752 ];

	ANowPointLightDayNight_execTurnOnNightLight_Parms TurnOnNightLight_Parms;

	this->ProcessEvent ( pFnTurnOnNightLight, &TurnOnNightLight_Parms, NULL );
};

// Function NowGame.NowProjectile.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectile::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 58775 ];

	ANowProjectile_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowProjectile.RemoveMyComponents
// [0x00020000] 
// Parameters infos:

void ANowProjectile::RemoveMyComponents ( )
{
	static UFunction* pFnRemoveMyComponents = NULL;

	if ( ! pFnRemoveMyComponents )
		pFnRemoveMyComponents = (UFunction*) UObject::GObjObjects()->Data[ 58774 ];

	ANowProjectile_execRemoveMyComponents_Parms RemoveMyComponents_Parms;

	this->ProcessEvent ( pFnRemoveMyComponents, &RemoveMyComponents_Parms, NULL );
};

// Function NowGame.NowProjectile.HomingTimer
// [0x00020000] 
// Parameters infos:

void ANowProjectile::HomingTimer ( )
{
	static UFunction* pFnHomingTimer = NULL;

	if ( ! pFnHomingTimer )
		pFnHomingTimer = (UFunction*) UObject::GObjObjects()->Data[ 58773 ];

	ANowProjectile_execHomingTimer_Parms HomingTimer_Parms;

	this->ProcessEvent ( pFnHomingTimer, &HomingTimer_Parms, NULL );
};

// Function NowGame.NowProjectile.failSafeExplode
// [0x00020102] 
// Parameters infos:

void ANowProjectile::failSafeExplode ( )
{
	static UFunction* pFnfailSafeExplode = NULL;

	if ( ! pFnfailSafeExplode )
		pFnfailSafeExplode = (UFunction*) UObject::GObjObjects()->Data[ 58772 ];

	ANowProjectile_execfailSafeExplode_Parms failSafeExplode_Parms;

	this->ProcessEvent ( pFnfailSafeExplode, &failSafeExplode_Parms, NULL );
};

// Function NowGame.NowProjectile.Explode
// [0x00020100] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowProjectile::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 58769 ];

	ANowProjectile_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function NowGame.NowProjectile.Timer
// [0x00020100] 
// Parameters infos:

void ANowProjectile::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 58768 ];

	ANowProjectile_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function NowGame.NowProjectile.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowProjectile::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 58767 ];

	ANowProjectile_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowProjectile.SpawnHitFx
// [0x00020000] 
// Parameters infos:
// struct FVector                 Loc                            ( CPF_Parm )
// struct FRotator                Rot                            ( CPF_Parm )

void ANowProjectile::SpawnHitFx ( struct FVector Loc, struct FRotator Rot )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = (UFunction*) UObject::GObjObjects()->Data[ 58764 ];

	ANowProjectile_execSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.Loc, &Loc, 0xC );
	memcpy ( &SpawnHitFx_Parms.Rot, &Rot, 0xC );

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowProjectile.SpawnTrailFX
// [0x00020000] 
// Parameters infos:

void ANowProjectile::SpawnTrailFX ( )
{
	static UFunction* pFnSpawnTrailFX = NULL;

	if ( ! pFnSpawnTrailFX )
		pFnSpawnTrailFX = (UFunction*) UObject::GObjObjects()->Data[ 58763 ];

	ANowProjectile_execSpawnTrailFX_Parms SpawnTrailFX_Parms;

	this->ProcessEvent ( pFnSpawnTrailFX, &SpawnTrailFX_Parms, NULL );
};

// Function NowGame.NowProjectile.StartProjectile
// [0x00020100] 
// Parameters infos:

void ANowProjectile::StartProjectile ( )
{
	static UFunction* pFnStartProjectile = NULL;

	if ( ! pFnStartProjectile )
		pFnStartProjectile = (UFunction*) UObject::GObjObjects()->Data[ 58762 ];

	ANowProjectile_execStartProjectile_Parms StartProjectile_Parms;

	this->ProcessEvent ( pFnStartProjectile, &StartProjectile_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowProjectileArrow::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 58872 ];

	ANowProjectileArrow_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.setDestrTimer
// [0x00020002] 
// Parameters infos:
// float                          secondsTilBoomBoom             ( CPF_Parm )

void ANowProjectileArrow::setDestrTimer ( float secondsTilBoomBoom )
{
	static UFunction* pFnsetDestrTimer = NULL;

	if ( ! pFnsetDestrTimer )
		pFnsetDestrTimer = (UFunction*) UObject::GObjObjects()->Data[ 58870 ];

	ANowProjectileArrow_execsetDestrTimer_Parms setDestrTimer_Parms;
	setDestrTimer_Parms.secondsTilBoomBoom = secondsTilBoomBoom;

	this->ProcessEvent ( pFnsetDestrTimer, &setDestrTimer_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.EncroachedBy
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowProjectileArrow::eventEncroachedBy ( class AActor* Other )
{
	static UFunction* pFnEncroachedBy = NULL;

	if ( ! pFnEncroachedBy )
		pFnEncroachedBy = (UFunction*) UObject::GObjObjects()->Data[ 58868 ];

	ANowProjectileArrow_eventEncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachedBy, &EncroachedBy_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.HitWall
// [0x00020922] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ANowProjectileArrow::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 58864 ];

	ANowProjectileArrow_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.ProcessTouch
// [0x00820102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowProjectileArrow::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 58854 ];

	ANowProjectileArrow_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.Landed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

void ANowProjectileArrow::eventLanded ( struct FVector HitNormal, class AActor* HitActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 58851 ];

	ANowProjectileArrow_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.ProjectileFire
// [0x00020100] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartShot                      ( CPF_Parm )
// struct FVector                 Direction                      ( CPF_Parm )

class AProjectile* ANowProjectileArrow::ProjectileFire ( struct FVector StartShot, struct FVector Direction )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 58847 ];

	ANowProjectileArrow_execProjectileFire_Parms ProjectileFire_Parms;
	memcpy ( &ProjectileFire_Parms.StartShot, &StartShot, 0xC );
	memcpy ( &ProjectileFire_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function NowGame.NowProjectileArrow.GetProjectileHitPart
// [0x00C24002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StarTrace                      ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_OptionalParm | CPF_Parm )
// int                            HitPart                        ( CPF_Parm | CPF_OutParm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 HitLoc                         ( CPF_Parm | CPF_OutParm )

bool ANowProjectileArrow::GetProjectileHitPart ( struct FVector StarTrace, struct FVector EndTrace, class AActor* HitActor, int* HitPart, struct FTraceHitInfo* HitInfo, struct FVector* HitLoc )
{
	static UFunction* pFnGetProjectileHitPart = NULL;

	if ( ! pFnGetProjectileHitPart )
		pFnGetProjectileHitPart = (UFunction*) UObject::GObjObjects()->Data[ 58833 ];

	ANowProjectileArrow_execGetProjectileHitPart_Parms GetProjectileHitPart_Parms;
	memcpy ( &GetProjectileHitPart_Parms.StarTrace, &StarTrace, 0xC );
	memcpy ( &GetProjectileHitPart_Parms.EndTrace, &EndTrace, 0xC );
	GetProjectileHitPart_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnGetProjectileHitPart, &GetProjectileHitPart_Parms, NULL );

	if ( HitPart )
		*HitPart = GetProjectileHitPart_Parms.HitPart;

	if ( HitInfo )
		memcpy ( HitInfo, &GetProjectileHitPart_Parms.HitInfo, 0x1C );

	if ( HitLoc )
		memcpy ( HitLoc, &GetProjectileHitPart_Parms.HitLoc, 0xC );

	return GetProjectileHitPart_Parms.ReturnValue;
};

// Function NowGame.NowProjectileArrow.TraceTargets
// [0x00820002] 
// Parameters infos:

void ANowProjectileArrow::TraceTargets ( )
{
	static UFunction* pFnTraceTargets = NULL;

	if ( ! pFnTraceTargets )
		pFnTraceTargets = (UFunction*) UObject::GObjObjects()->Data[ 58822 ];

	ANowProjectileArrow_execTraceTargets_Parms TraceTargets_Parms;

	this->ProcessEvent ( pFnTraceTargets, &TraceTargets_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.SortDel
// [0x00920002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )
// class AActor*                  B                              ( CPF_Parm )

int ANowProjectileArrow::SortDel ( class AActor* A, class AActor* B )
{
	static UFunction* pFnSortDel = NULL;

	if ( ! pFnSortDel )
		pFnSortDel = (UFunction*) UObject::GObjObjects()->Data[ 58782 ];

	ANowProjectileArrow_execSortDel_Parms SortDel_Parms;
	SortDel_Parms.A = A;
	SortDel_Parms.B = B;

	this->ProcessEvent ( pFnSortDel, &SortDel_Parms, NULL );

	return SortDel_Parms.ReturnValue;
};

// Function NowGame.NowProjectileArrow.FindPossibleTargets
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    PC                             ( CPF_Parm )

void ANowProjectileArrow::FindPossibleTargets ( class ANowPlayerController* PC )
{
	static UFunction* pFnFindPossibleTargets = NULL;

	if ( ! pFnFindPossibleTargets )
		pFnFindPossibleTargets = (UFunction*) UObject::GObjObjects()->Data[ 58813 ];

	ANowProjectileArrow_execFindPossibleTargets_Parms FindPossibleTargets_Parms;
	FindPossibleTargets_Parms.PC = PC;

	this->ProcessEvent ( pFnFindPossibleTargets, &FindPossibleTargets_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectileArrow::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 58809 ];

	ANowProjectileArrow_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.PhysicsVolumeChange
// [0x00020102] 
// Parameters infos:
// class APhysicsVolume*          NewVolume                      ( CPF_Parm )

void ANowProjectileArrow::PhysicsVolumeChange ( class APhysicsVolume* NewVolume )
{
	static UFunction* pFnPhysicsVolumeChange = NULL;

	if ( ! pFnPhysicsVolumeChange )
		pFnPhysicsVolumeChange = (UFunction*) UObject::GObjObjects()->Data[ 58807 ];

	ANowProjectileArrow_execPhysicsVolumeChange_Parms PhysicsVolumeChange_Parms;
	PhysicsVolumeChange_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnPhysicsVolumeChange, &PhysicsVolumeChange_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.Timer
// [0x00020102] 
// Parameters infos:

void ANowProjectileArrow::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 58806 ];

	ANowProjectileArrow_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.InitBurning
// [0x00020002] 
// Parameters infos:

void ANowProjectileArrow::InitBurning ( )
{
	static UFunction* pFnInitBurning = NULL;

	if ( ! pFnInitBurning )
		pFnInitBurning = (UFunction*) UObject::GObjObjects()->Data[ 58805 ];

	ANowProjectileArrow_execInitBurning_Parms InitBurning_Parms;

	this->ProcessEvent ( pFnInitBurning, &InitBurning_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.Init
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ANowProjectileArrow::Init ( struct FVector Direction )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 58803 ];

	ANowProjectileArrow_execInit_Parms Init_Parms;
	memcpy ( &Init_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.SetWeatherVariables
// [0x00820002] 
// Parameters infos:
// int                            WindDirection                  ( CPF_Parm )
// int                            Rain                           ( CPF_Parm )
// float                          windMagnitude                  ( CPF_Parm )

void ANowProjectileArrow::SetWeatherVariables ( int WindDirection, int Rain, float windMagnitude )
{
	static UFunction* pFnSetWeatherVariables = NULL;

	if ( ! pFnSetWeatherVariables )
		pFnSetWeatherVariables = (UFunction*) UObject::GObjObjects()->Data[ 58796 ];

	ANowProjectileArrow_execSetWeatherVariables_Parms SetWeatherVariables_Parms;
	SetWeatherVariables_Parms.WindDirection = WindDirection;
	SetWeatherVariables_Parms.Rain = Rain;
	SetWeatherVariables_Parms.windMagnitude = windMagnitude;

	this->ProcessEvent ( pFnSetWeatherVariables, &SetWeatherVariables_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.SetCombatSystemReference
// [0x00020002] 
// Parameters infos:
// class UCombatSystemRangedNew*  rangedSystem                   ( CPF_Parm )

void ANowProjectileArrow::SetCombatSystemReference ( class UCombatSystemRangedNew* rangedSystem )
{
	static UFunction* pFnSetCombatSystemReference = NULL;

	if ( ! pFnSetCombatSystemReference )
		pFnSetCombatSystemReference = (UFunction*) UObject::GObjObjects()->Data[ 58794 ];

	ANowProjectileArrow_execSetCombatSystemReference_Parms SetCombatSystemReference_Parms;
	SetCombatSystemReference_Parms.rangedSystem = rangedSystem;

	this->ProcessEvent ( pFnSetCombatSystemReference, &SetCombatSystemReference_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.SetProjectileSpeed
// [0x00020002] 
// Parameters infos:
// int                            ProjectileSpeed                ( CPF_Parm )

void ANowProjectileArrow::SetProjectileSpeed ( int ProjectileSpeed )
{
	static UFunction* pFnSetProjectileSpeed = NULL;

	if ( ! pFnSetProjectileSpeed )
		pFnSetProjectileSpeed = (UFunction*) UObject::GObjObjects()->Data[ 58792 ];

	ANowProjectileArrow_execSetProjectileSpeed_Parms SetProjectileSpeed_Parms;
	SetProjectileSpeed_Parms.ProjectileSpeed = ProjectileSpeed;

	this->ProcessEvent ( pFnSetProjectileSpeed, &SetProjectileSpeed_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowProjectileArrow::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 58791 ];

	ANowProjectileArrow_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.setDestrTimer
// [0x00020002] 
// Parameters infos:
// float                          secondsTilBoomBoom             ( CPF_Parm )

void ANowProjectileFishing::setDestrTimer ( float secondsTilBoomBoom )
{
	static UFunction* pFnsetDestrTimer = NULL;

	if ( ! pFnsetDestrTimer )
		pFnsetDestrTimer = (UFunction*) UObject::GObjObjects()->Data[ 59022 ];

	ANowProjectileFishing_execsetDestrTimer_Parms setDestrTimer_Parms;
	setDestrTimer_Parms.secondsTilBoomBoom = secondsTilBoomBoom;

	this->ProcessEvent ( pFnsetDestrTimer, &setDestrTimer_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.EncroachedBy
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowProjectileFishing::eventEncroachedBy ( class AActor* Other )
{
	static UFunction* pFnEncroachedBy = NULL;

	if ( ! pFnEncroachedBy )
		pFnEncroachedBy = (UFunction*) UObject::GObjObjects()->Data[ 59013 ];

	ANowProjectileFishing_eventEncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachedBy, &EncroachedBy_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.HitWall
// [0x00020922] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ANowProjectileFishing::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 59009 ];

	ANowProjectileFishing_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.ProcessTouch
// [0x00820102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowProjectileFishing::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 58997 ];

	ANowProjectileFishing_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.Landed
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

void ANowProjectileFishing::eventLanded ( struct FVector HitNormal, class AActor* HitActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 58992 ];

	ANowProjectileFishing_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.HookLanded
// [0x00020000] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// float                          deptt                          ( CPF_Parm )

void ANowProjectileFishing::HookLanded ( struct FVector HitLocation, float deptt )
{
	static UFunction* pFnHookLanded = NULL;

	if ( ! pFnHookLanded )
		pFnHookLanded = (UFunction*) UObject::GObjObjects()->Data[ 58989 ];

	ANowProjectileFishing_execHookLanded_Parms HookLanded_Parms;
	memcpy ( &HookLanded_Parms.HitLocation, &HitLocation, 0xC );
	HookLanded_Parms.deptt = deptt;

	this->ProcessEvent ( pFnHookLanded, &HookLanded_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.ProjectileFire
// [0x00020100] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartShot                      ( CPF_Parm )
// struct FVector                 Direction                      ( CPF_Parm )

class AProjectile* ANowProjectileFishing::ProjectileFire ( struct FVector StartShot, struct FVector Direction )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 58985 ];

	ANowProjectileFishing_execProjectileFire_Parms ProjectileFire_Parms;
	memcpy ( &ProjectileFire_Parms.StartShot, &StartShot, 0xC );
	memcpy ( &ProjectileFire_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function NowGame.NowProjectileFishing.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectileFishing::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 58981 ];

	ANowProjectileFishing_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.DoSink
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectileFishing::DoSink ( float DeltaTime )
{
	static UFunction* pFnDoSink = NULL;

	if ( ! pFnDoSink )
		pFnDoSink = (UFunction*) UObject::GObjObjects()->Data[ 58978 ];

	ANowProjectileFishing_execDoSink_Parms DoSink_Parms;
	DoSink_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnDoSink, &DoSink_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.PlaySplash
// [0x00020002] 
// Parameters infos:
// int                            WhatEffect                     ( CPF_Parm )

void ANowProjectileFishing::PlaySplash ( int WhatEffect )
{
	static UFunction* pFnPlaySplash = NULL;

	if ( ! pFnPlaySplash )
		pFnPlaySplash = (UFunction*) UObject::GObjObjects()->Data[ 58968 ];

	ANowProjectileFishing_execPlaySplash_Parms PlaySplash_Parms;
	PlaySplash_Parms.WhatEffect = WhatEffect;

	this->ProcessEvent ( pFnPlaySplash, &PlaySplash_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.PhysicsVolumeChange
// [0x00020102] 
// Parameters infos:
// class APhysicsVolume*          NewVolume                      ( CPF_Parm )

void ANowProjectileFishing::PhysicsVolumeChange ( class APhysicsVolume* NewVolume )
{
	static UFunction* pFnPhysicsVolumeChange = NULL;

	if ( ! pFnPhysicsVolumeChange )
		pFnPhysicsVolumeChange = (UFunction*) UObject::GObjObjects()->Data[ 58966 ];

	ANowProjectileFishing_execPhysicsVolumeChange_Parms PhysicsVolumeChange_Parms;
	PhysicsVolumeChange_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnPhysicsVolumeChange, &PhysicsVolumeChange_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.Timer
// [0x00020102] 
// Parameters infos:

void ANowProjectileFishing::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 58965 ];

	ANowProjectileFishing_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.Init
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ANowProjectileFishing::Init ( struct FVector Direction )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 58963 ];

	ANowProjectileFishing_execInit_Parms Init_Parms;
	memcpy ( &Init_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.SetWeatherVariables
// [0x00820002] 
// Parameters infos:
// int                            WindDirection                  ( CPF_Parm )
// int                            Rain                           ( CPF_Parm )
// float                          windMagnitude                  ( CPF_Parm )

void ANowProjectileFishing::SetWeatherVariables ( int WindDirection, int Rain, float windMagnitude )
{
	static UFunction* pFnSetWeatherVariables = NULL;

	if ( ! pFnSetWeatherVariables )
		pFnSetWeatherVariables = (UFunction*) UObject::GObjObjects()->Data[ 58956 ];

	ANowProjectileFishing_execSetWeatherVariables_Parms SetWeatherVariables_Parms;
	SetWeatherVariables_Parms.WindDirection = WindDirection;
	SetWeatherVariables_Parms.Rain = Rain;
	SetWeatherVariables_Parms.windMagnitude = windMagnitude;

	this->ProcessEvent ( pFnSetWeatherVariables, &SetWeatherVariables_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.SetCombatSystemReference
// [0x00020002] 
// Parameters infos:
// class UCombatSystemFishingNew* CombatSystem                   ( CPF_Parm )

void ANowProjectileFishing::SetCombatSystemReference ( class UCombatSystemFishingNew* CombatSystem )
{
	static UFunction* pFnSetCombatSystemReference = NULL;

	if ( ! pFnSetCombatSystemReference )
		pFnSetCombatSystemReference = (UFunction*) UObject::GObjObjects()->Data[ 58954 ];

	ANowProjectileFishing_execSetCombatSystemReference_Parms SetCombatSystemReference_Parms;
	SetCombatSystemReference_Parms.CombatSystem = CombatSystem;

	this->ProcessEvent ( pFnSetCombatSystemReference, &SetCombatSystemReference_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.SetProjectileSpeed
// [0x00020002] 
// Parameters infos:
// int                            ProjectileSpeed                ( CPF_Parm )

void ANowProjectileFishing::SetProjectileSpeed ( int ProjectileSpeed )
{
	static UFunction* pFnSetProjectileSpeed = NULL;

	if ( ! pFnSetProjectileSpeed )
		pFnSetProjectileSpeed = (UFunction*) UObject::GObjObjects()->Data[ 58952 ];

	ANowProjectileFishing_execSetProjectileSpeed_Parms SetProjectileSpeed_Parms;
	SetProjectileSpeed_Parms.ProjectileSpeed = ProjectileSpeed;

	this->ProcessEvent ( pFnSetProjectileSpeed, &SetProjectileSpeed_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowProjectileFishing::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 58951 ];

	ANowProjectileFishing_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.floatToSurface
// [0x00820002] 
// Parameters infos:

void ANowProjectileFishing::floatToSurface ( )
{
	static UFunction* pFnfloatToSurface = NULL;

	if ( ! pFnfloatToSurface )
		pFnfloatToSurface = (UFunction*) UObject::GObjObjects()->Data[ 58943 ];

	ANowProjectileFishing_execfloatToSurface_Parms floatToSurface_Parms;

	this->ProcessEvent ( pFnfloatToSurface, &floatToSurface_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.GetSurfaceActor
// [0x00C20002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm | CPF_OutParm )

class AActor* ANowProjectileFishing::GetSurfaceActor ( struct FVector Start, struct FVector* HitLocation )
{
	static UFunction* pFnGetSurfaceActor = NULL;

	if ( ! pFnGetSurfaceActor )
		pFnGetSurfaceActor = (UFunction*) UObject::GObjObjects()->Data[ 58933 ];

	ANowProjectileFishing_execGetSurfaceActor_Parms GetSurfaceActor_Parms;
	memcpy ( &GetSurfaceActor_Parms.Start, &Start, 0xC );

	this->ProcessEvent ( pFnGetSurfaceActor, &GetSurfaceActor_Parms, NULL );

	if ( HitLocation )
		memcpy ( HitLocation, &GetSurfaceActor_Parms.HitLocation, 0xC );

	return GetSurfaceActor_Parms.ReturnValue;
};

// Function NowGame.NowProjectileFishing.FindWater
// [0x00820002] 
// Parameters infos:
// struct FVector                 oldpos                         ( CPF_Parm )
// struct FVector                 NewPos                         ( CPF_Parm )

void ANowProjectileFishing::FindWater ( struct FVector oldpos, struct FVector NewPos )
{
	static UFunction* pFnFindWater = NULL;

	if ( ! pFnFindWater )
		pFnFindWater = (UFunction*) UObject::GObjObjects()->Data[ 58922 ];

	ANowProjectileFishing_execFindWater_Parms FindWater_Parms;
	memcpy ( &FindWater_Parms.oldpos, &oldpos, 0xC );
	memcpy ( &FindWater_Parms.NewPos, &NewPos, 0xC );

	this->ProcessEvent ( pFnFindWater, &FindWater_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.findBottomDepth
// [0x00820002] 
// Parameters infos:

void ANowProjectileFishing::findBottomDepth ( )
{
	static UFunction* pFnfindBottomDepth = NULL;

	if ( ! pFnfindBottomDepth )
		pFnfindBottomDepth = (UFunction*) UObject::GObjObjects()->Data[ 58914 ];

	ANowProjectileFishing_execfindBottomDepth_Parms findBottomDepth_Parms;

	this->ProcessEvent ( pFnfindBottomDepth, &findBottomDepth_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.HomingTimer
// [0x00020002] 
// Parameters infos:

void ANowProjectileMagic::HomingTimer ( )
{
	static UFunction* pFnHomingTimer = NULL;

	if ( ! pFnHomingTimer )
		pFnHomingTimer = (UFunction*) UObject::GObjObjects()->Data[ 59096 ];

	ANowProjectileMagic_execHomingTimer_Parms HomingTimer_Parms;

	this->ProcessEvent ( pFnHomingTimer, &HomingTimer_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.failSafeExplode
// [0x00020102] 
// Parameters infos:

void ANowProjectileMagic::failSafeExplode ( )
{
	static UFunction* pFnfailSafeExplode = NULL;

	if ( ! pFnfailSafeExplode )
		pFnfailSafeExplode = (UFunction*) UObject::GObjObjects()->Data[ 59095 ];

	ANowProjectileMagic_execfailSafeExplode_Parms failSafeExplode_Parms;

	this->ProcessEvent ( pFnfailSafeExplode, &failSafeExplode_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowProjectileMagic::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 59092 ];

	ANowProjectileMagic_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.Timer
// [0x00020102] 
// Parameters infos:

void ANowProjectileMagic::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 59091 ];

	ANowProjectileMagic_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowProjectileMagic::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 59090 ];

	ANowProjectileMagic_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.SpawnHitFx
// [0x00020002] 
// Parameters infos:
// struct FVector                 Loc                            ( CPF_Parm )
// struct FRotator                Rot                            ( CPF_Parm )

void ANowProjectileMagic::SpawnHitFx ( struct FVector Loc, struct FRotator Rot )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = (UFunction*) UObject::GObjObjects()->Data[ 59087 ];

	ANowProjectileMagic_execSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.Loc, &Loc, 0xC );
	memcpy ( &SpawnHitFx_Parms.Rot, &Rot, 0xC );

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.SpawnTrailFX
// [0x00020002] 
// Parameters infos:

void ANowProjectileMagic::SpawnTrailFX ( )
{
	static UFunction* pFnSpawnTrailFX = NULL;

	if ( ! pFnSpawnTrailFX )
		pFnSpawnTrailFX = (UFunction*) UObject::GObjObjects()->Data[ 59086 ];

	ANowProjectileMagic_execSpawnTrailFX_Parms SpawnTrailFX_Parms;

	this->ProcessEvent ( pFnSpawnTrailFX, &SpawnTrailFX_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.StartProjectile
// [0x00020102] 
// Parameters infos:

void ANowProjectileMagic::StartProjectile ( )
{
	static UFunction* pFnStartProjectile = NULL;

	if ( ! pFnStartProjectile )
		pFnStartProjectile = (UFunction*) UObject::GObjObjects()->Data[ 59085 ];

	ANowProjectileMagic_execStartProjectile_Parms StartProjectile_Parms;

	this->ProcessEvent ( pFnStartProjectile, &StartProjectile_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.SetNowImpactSound
// [0x00020002] 
// Parameters infos:
// class USoundCue*               NewSound                       ( CPF_Parm )

void ANowProjectileMagic::SetNowImpactSound ( class USoundCue* NewSound )
{
	static UFunction* pFnSetNowImpactSound = NULL;

	if ( ! pFnSetNowImpactSound )
		pFnSetNowImpactSound = (UFunction*) UObject::GObjObjects()->Data[ 59083 ];

	ANowProjectileMagic_execSetNowImpactSound_Parms SetNowImpactSound_Parms;
	SetNowImpactSound_Parms.NewSound = NewSound;

	this->ProcessEvent ( pFnSetNowImpactSound, &SetNowImpactSound_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.SetMercyMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActor::eventSetMercyMode ( )
{
	static UFunction* pFnSetMercyMode = NULL;

	if ( ! pFnSetMercyMode )
		pFnSetMercyMode = (UFunction*) UObject::GObjObjects()->Data[ 59137 ];

	ANowSkeletalMeshActor_eventSetMercyMode_Parms SetMercyMode_Parms;

	this->ProcessEvent ( pFnSetMercyMode, &SetMercyMode_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.PostBeginPlay
// [0x00020100] 
// Parameters infos:

void ANowSkeletalMeshActor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 59136 ];

	ANowSkeletalMeshActor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.NowCreateAndSetMaterialInstanceConstant
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UMaterialInstanceConstant* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )
// int                            ElementIndex                   ( CPF_Parm )

class UMaterialInstanceConstant* ANowSkeletalMeshActor::eventNowCreateAndSetMaterialInstanceConstant ( class USkeletalMeshComponent* SkelComp, int ElementIndex )
{
	static UFunction* pFnNowCreateAndSetMaterialInstanceConstant = NULL;

	if ( ! pFnNowCreateAndSetMaterialInstanceConstant )
		pFnNowCreateAndSetMaterialInstanceConstant = (UFunction*) UObject::GObjObjects()->Data[ 59132 ];

	ANowSkeletalMeshActor_eventNowCreateAndSetMaterialInstanceConstant_Parms NowCreateAndSetMaterialInstanceConstant_Parms;
	NowCreateAndSetMaterialInstanceConstant_Parms.SkelComp = SkelComp;
	NowCreateAndSetMaterialInstanceConstant_Parms.ElementIndex = ElementIndex;

	this->ProcessEvent ( pFnNowCreateAndSetMaterialInstanceConstant, &NowCreateAndSetMaterialInstanceConstant_Parms, NULL );

	return NowCreateAndSetMaterialInstanceConstant_Parms.ReturnValue;
};

// Function NowGame.NowSkeletalMeshActor.PlayDeleteEffect
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActor::eventPlayDeleteEffect ( )
{
	static UFunction* pFnPlayDeleteEffect = NULL;

	if ( ! pFnPlayDeleteEffect )
		pFnPlayDeleteEffect = (UFunction*) UObject::GObjObjects()->Data[ 59131 ];

	ANowSkeletalMeshActor_eventPlayDeleteEffect_Parms PlayDeleteEffect_Parms;

	this->ProcessEvent ( pFnPlayDeleteEffect, &PlayDeleteEffect_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.PlayDeSelectEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActor::eventPlayDeSelectEffect ( )
{
	static UFunction* pFnPlayDeSelectEffect = NULL;

	if ( ! pFnPlayDeSelectEffect )
		pFnPlayDeSelectEffect = (UFunction*) UObject::GObjObjects()->Data[ 59127 ];

	ANowSkeletalMeshActor_eventPlayDeSelectEffect_Parms PlayDeSelectEffect_Parms;

	this->ProcessEvent ( pFnPlayDeSelectEffect, &PlayDeSelectEffect_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.PlaySelectEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActor::eventPlaySelectEffect ( )
{
	static UFunction* pFnPlaySelectEffect = NULL;

	if ( ! pFnPlaySelectEffect )
		pFnPlaySelectEffect = (UFunction*) UObject::GObjObjects()->Data[ 59124 ];

	ANowSkeletalMeshActor_eventPlaySelectEffect_Parms PlaySelectEffect_Parms;

	this->ProcessEvent ( pFnPlaySelectEffect, &PlaySelectEffect_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.SaveMaterials
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActor::eventSaveMaterials ( )
{
	static UFunction* pFnSaveMaterials = NULL;

	if ( ! pFnSaveMaterials )
		pFnSaveMaterials = (UFunction*) UObject::GObjObjects()->Data[ 59123 ];

	ANowSkeletalMeshActor_eventSaveMaterials_Parms SaveMaterials_Parms;

	this->ProcessEvent ( pFnSaveMaterials, &SaveMaterials_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.SetFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iNewFlag                       ( CPF_Parm )

void ANowSkeletalMeshActor::eventSetFlag ( int iNewFlag )
{
	static UFunction* pFnSetFlag = NULL;

	if ( ! pFnSetFlag )
		pFnSetFlag = (UFunction*) UObject::GObjObjects()->Data[ 59121 ];

	ANowSkeletalMeshActor_eventSetFlag_Parms SetFlag_Parms;
	SetFlag_Parms.iNewFlag = iNewFlag;

	this->ProcessEvent ( pFnSetFlag, &SetFlag_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.TriggerFirstUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowSkeletalMeshActor::TriggerFirstUpdate ( )
{
	static UFunction* pFnTriggerFirstUpdate = NULL;

	if ( ! pFnTriggerFirstUpdate )
		pFnTriggerFirstUpdate = (UFunction*) UObject::GObjObjects()->Data[ 59120 ];

	ANowSkeletalMeshActor_execTriggerFirstUpdate_Parms TriggerFirstUpdate_Parms;

	pFnTriggerFirstUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerFirstUpdate, &TriggerFirstUpdate_Parms, NULL );

	pFnTriggerFirstUpdate->FunctionFlags |= 0x400;
};

// Function NowGame.NowSkeletalMeshActor.SetVisibility
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  Value                          ( CPF_Parm )

void ANowSkeletalMeshActor::SetVisibility ( unsigned long Value )
{
	static UFunction* pFnSetVisibility = NULL;

	if ( ! pFnSetVisibility )
		pFnSetVisibility = (UFunction*) UObject::GObjObjects()->Data[ 59118 ];

	ANowSkeletalMeshActor_execSetVisibility_Parms SetVisibility_Parms;
	SetVisibility_Parms.Value = Value;

	pFnSetVisibility->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVisibility, &SetVisibility_Parms, NULL );

	pFnSetVisibility->FunctionFlags |= 0x400;
};

// Function NowGame.NowSkeletalMeshActor.ToggleVisibility
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowSkeletalMeshActor::ToggleVisibility ( )
{
	static UFunction* pFnToggleVisibility = NULL;

	if ( ! pFnToggleVisibility )
		pFnToggleVisibility = (UFunction*) UObject::GObjObjects()->Data[ 59117 ];

	ANowSkeletalMeshActor_execToggleVisibility_Parms ToggleVisibility_Parms;

	pFnToggleVisibility->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleVisibility, &ToggleVisibility_Parms, NULL );

	pFnToggleVisibility->FunctionFlags |= 0x400;
};

// Function NowGame.NowSkeletalMeshActorDoll.Tick
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowSkeletalMeshActorDoll::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 59182 ];

	ANowSkeletalMeshActorDoll_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.RotateLeft
// [0x00820002] 
// Parameters infos:

void ANowSkeletalMeshActorDoll::RotateLeft ( )
{
	static UFunction* pFnRotateLeft = NULL;

	if ( ! pFnRotateLeft )
		pFnRotateLeft = (UFunction*) UObject::GObjObjects()->Data[ 59180 ];

	ANowSkeletalMeshActorDoll_execRotateLeft_Parms RotateLeft_Parms;

	this->ProcessEvent ( pFnRotateLeft, &RotateLeft_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.RotateRight
// [0x00820002] 
// Parameters infos:

void ANowSkeletalMeshActorDoll::RotateRight ( )
{
	static UFunction* pFnRotateRight = NULL;

	if ( ! pFnRotateRight )
		pFnRotateRight = (UFunction*) UObject::GObjObjects()->Data[ 59178 ];

	ANowSkeletalMeshActorDoll_execRotateRight_Parms RotateRight_Parms;

	this->ProcessEvent ( pFnRotateRight, &RotateRight_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.PaperdollZoom
// [0x00820002] 
// Parameters infos:
// unsigned long                  bZoom                          ( CPF_Parm )

void ANowSkeletalMeshActorDoll::PaperdollZoom ( unsigned long bZoom )
{
	static UFunction* pFnPaperdollZoom = NULL;

	if ( ! pFnPaperdollZoom )
		pFnPaperdollZoom = (UFunction*) UObject::GObjObjects()->Data[ 59175 ];

	ANowSkeletalMeshActorDoll_execPaperdollZoom_Parms PaperdollZoom_Parms;
	PaperdollZoom_Parms.bZoom = bZoom;

	this->ProcessEvent ( pFnPaperdollZoom, &PaperdollZoom_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.PaperdollPan
// [0x00820002] 
// Parameters infos:
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )

void ANowSkeletalMeshActorDoll::PaperdollPan ( int X, int Y )
{
	static UFunction* pFnPaperdollPan = NULL;

	if ( ! pFnPaperdollPan )
		pFnPaperdollPan = (UFunction*) UObject::GObjObjects()->Data[ 59171 ];

	ANowSkeletalMeshActorDoll_execPaperdollPan_Parms PaperdollPan_Parms;
	PaperdollPan_Parms.X = X;
	PaperdollPan_Parms.Y = Y;

	this->ProcessEvent ( pFnPaperdollPan, &PaperdollPan_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.SetInCombat
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bNewInCombat                   ( CPF_Parm )

void ANowSkeletalMeshActorDoll::eventSetInCombat ( unsigned long bNewInCombat )
{
	static UFunction* pFnSetInCombat = NULL;

	if ( ! pFnSetInCombat )
		pFnSetInCombat = (UFunction*) UObject::GObjObjects()->Data[ 59169 ];

	ANowSkeletalMeshActorDoll_eventSetInCombat_Parms SetInCombat_Parms;
	SetInCombat_Parms.bNewInCombat = bNewInCombat;

	this->ProcessEvent ( pFnSetInCombat, &SetInCombat_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.cacheNodes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActorDoll::eventcacheNodes ( )
{
	static UFunction* pFncacheNodes = NULL;

	if ( ! pFncacheNodes )
		pFncacheNodes = (UFunction*) UObject::GObjObjects()->Data[ 59168 ];

	ANowSkeletalMeshActorDoll_eventcacheNodes_Parms cacheNodes_Parms;

	this->ProcessEvent ( pFncacheNodes, &cacheNodes_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.AddMagicMeshFX
// [0x00020002] 
// Parameters infos:
// class UMagicMeshFX*            NewFX                          ( CPF_Parm )

void ANowSkeletalMeshActorDoll::AddMagicMeshFX ( class UMagicMeshFX* NewFX )
{
	static UFunction* pFnAddMagicMeshFX = NULL;

	if ( ! pFnAddMagicMeshFX )
		pFnAddMagicMeshFX = (UFunction*) UObject::GObjObjects()->Data[ 59166 ];

	ANowSkeletalMeshActorDoll_execAddMagicMeshFX_Parms AddMagicMeshFX_Parms;
	AddMagicMeshFX_Parms.NewFX = NewFX;

	this->ProcessEvent ( pFnAddMagicMeshFX, &AddMagicMeshFX_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.SpawnMagicMeshFX
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  eID                            ( CPF_Parm )

void ANowSkeletalMeshActorDoll::eventSpawnMagicMeshFX ( unsigned char eID )
{
	static UFunction* pFnSpawnMagicMeshFX = NULL;

	if ( ! pFnSpawnMagicMeshFX )
		pFnSpawnMagicMeshFX = (UFunction*) UObject::GObjObjects()->Data[ 59162 ];

	ANowSkeletalMeshActorDoll_eventSpawnMagicMeshFX_Parms SpawnMagicMeshFX_Parms;
	SpawnMagicMeshFX_Parms.eID = eID;

	this->ProcessEvent ( pFnSpawnMagicMeshFX, &SpawnMagicMeshFX_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.ClearAllMagicMeshFX
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActorDoll::eventClearAllMagicMeshFX ( )
{
	static UFunction* pFnClearAllMagicMeshFX = NULL;

	if ( ! pFnClearAllMagicMeshFX )
		pFnClearAllMagicMeshFX = (UFunction*) UObject::GObjObjects()->Data[ 59160 ];

	ANowSkeletalMeshActorDoll_eventClearAllMagicMeshFX_Parms ClearAllMagicMeshFX_Parms;

	this->ProcessEvent ( pFnClearAllMagicMeshFX, &ClearAllMagicMeshFX_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.ClearMagicMeshFX
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  eID                            ( CPF_Parm )

void ANowSkeletalMeshActorDoll::eventClearMagicMeshFX ( unsigned char eID )
{
	static UFunction* pFnClearMagicMeshFX = NULL;

	if ( ! pFnClearMagicMeshFX )
		pFnClearMagicMeshFX = (UFunction*) UObject::GObjObjects()->Data[ 59157 ];

	ANowSkeletalMeshActorDoll_eventClearMagicMeshFX_Parms ClearMagicMeshFX_Parms;
	ClearMagicMeshFX_Parms.eID = eID;

	this->ProcessEvent ( pFnClearMagicMeshFX, &ClearMagicMeshFX_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.UpdateSkeletalComponents
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                FromWhatPawn                   ( CPF_Parm )

void ANowSkeletalMeshActorDoll::UpdateSkeletalComponents ( class ANowPawn* FromWhatPawn )
{
	static UFunction* pFnUpdateSkeletalComponents = NULL;

	if ( ! pFnUpdateSkeletalComponents )
		pFnUpdateSkeletalComponents = (UFunction*) UObject::GObjObjects()->Data[ 59155 ];

	ANowSkeletalMeshActorDoll_execUpdateSkeletalComponents_Parms UpdateSkeletalComponents_Parms;
	UpdateSkeletalComponents_Parms.FromWhatPawn = FromWhatPawn;

	pFnUpdateSkeletalComponents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSkeletalComponents, &UpdateSkeletalComponents_Parms, NULL );

	pFnUpdateSkeletalComponents->FunctionFlags |= 0x400;
};

// Function NowGame.NowSkeletalMeshActorDollEditor.SetInCombat
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bNewInCombat                   ( CPF_Parm )

void ANowSkeletalMeshActorDollEditor::eventSetInCombat ( unsigned long bNewInCombat )
{
	static UFunction* pFnSetInCombat = NULL;

	if ( ! pFnSetInCombat )
		pFnSetInCombat = (UFunction*) UObject::GObjObjects()->Data[ 59239 ];

	ANowSkeletalMeshActorDollEditor_eventSetInCombat_Parms SetInCombat_Parms;
	SetInCombat_Parms.bNewInCombat = bNewInCombat;

	this->ProcessEvent ( pFnSetInCombat, &SetInCombat_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.cacheNodes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::eventcacheNodes ( )
{
	static UFunction* pFncacheNodes = NULL;

	if ( ! pFncacheNodes )
		pFncacheNodes = (UFunction*) UObject::GObjObjects()->Data[ 59238 ];

	ANowSkeletalMeshActorDollEditor_eventcacheNodes_Parms cacheNodes_Parms;

	this->ProcessEvent ( pFncacheNodes, &cacheNodes_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.initAnimations
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::eventinitAnimations ( )
{
	static UFunction* pFninitAnimations = NULL;

	if ( ! pFninitAnimations )
		pFninitAnimations = (UFunction*) UObject::GObjObjects()->Data[ 59237 ];

	ANowSkeletalMeshActorDollEditor_eventinitAnimations_Parms initAnimations_Parms;

	this->ProcessEvent ( pFninitAnimations, &initAnimations_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.Die
// [0x00820002] 
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::Die ( )
{
	static UFunction* pFnDie = NULL;

	if ( ! pFnDie )
		pFnDie = (UFunction*) UObject::GObjObjects()->Data[ 59235 ];

	ANowSkeletalMeshActorDollEditor_execDie_Parms Die_Parms;

	this->ProcessEvent ( pFnDie, &Die_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.Bleed
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::eventBleed ( )
{
	static UFunction* pFnBleed = NULL;

	if ( ! pFnBleed )
		pFnBleed = (UFunction*) UObject::GObjObjects()->Data[ 59233 ];

	ANowSkeletalMeshActorDollEditor_eventBleed_Parms Bleed_Parms;

	this->ProcessEvent ( pFnBleed, &Bleed_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.AddWeapon
// [0x00020002] 
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::AddWeapon ( )
{
	static UFunction* pFnAddWeapon = NULL;

	if ( ! pFnAddWeapon )
		pFnAddWeapon = (UFunction*) UObject::GObjObjects()->Data[ 59229 ];

	ANowSkeletalMeshActorDollEditor_execAddWeapon_Parms AddWeapon_Parms;

	this->ProcessEvent ( pFnAddWeapon, &AddWeapon_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.StartRun
// [0x00020002] 
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::StartRun ( )
{
	static UFunction* pFnStartRun = NULL;

	if ( ! pFnStartRun )
		pFnStartRun = (UFunction*) UObject::GObjObjects()->Data[ 59228 ];

	ANowSkeletalMeshActorDollEditor_execStartRun_Parms StartRun_Parms;

	this->ProcessEvent ( pFnStartRun, &StartRun_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 59227 ];

	ANowSkeletalMeshActorDollEditor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.NowCreateAndSetMaterialInstanceConstant
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UMaterialInstanceConstant* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )
// int                            ElementIndex                   ( CPF_Parm )

class UMaterialInstanceConstant* ANowSkeletalMeshActorDollEditor::eventNowCreateAndSetMaterialInstanceConstant ( class USkeletalMeshComponent* SkelComp, int ElementIndex )
{
	static UFunction* pFnNowCreateAndSetMaterialInstanceConstant = NULL;

	if ( ! pFnNowCreateAndSetMaterialInstanceConstant )
		pFnNowCreateAndSetMaterialInstanceConstant = (UFunction*) UObject::GObjObjects()->Data[ 59223 ];

	ANowSkeletalMeshActorDollEditor_eventNowCreateAndSetMaterialInstanceConstant_Parms NowCreateAndSetMaterialInstanceConstant_Parms;
	NowCreateAndSetMaterialInstanceConstant_Parms.SkelComp = SkelComp;
	NowCreateAndSetMaterialInstanceConstant_Parms.ElementIndex = ElementIndex;

	this->ProcessEvent ( pFnNowCreateAndSetMaterialInstanceConstant, &NowCreateAndSetMaterialInstanceConstant_Parms, NULL );

	return NowCreateAndSetMaterialInstanceConstant_Parms.ReturnValue;
};

// Function NowGame.NowSkeletalMeshActorDollEditor.Generate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::Generate ( )
{
	static UFunction* pFnGenerate = NULL;

	if ( ! pFnGenerate )
		pFnGenerate = (UFunction*) UObject::GObjObjects()->Data[ 59222 ];

	ANowSkeletalMeshActorDollEditor_execGenerate_Parms Generate_Parms;

	pFnGenerate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerate, &Generate_Parms, NULL );

	pFnGenerate->FunctionFlags |= 0x400;
};

// Function NowGame.NowSkeletalMeshPlayerActor.Tick
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowSkeletalMeshPlayerActor::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 59285 ];

	ANowSkeletalMeshPlayerActor_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshPlayerActor.Randomize
// [0x00020002] 
// Parameters infos:

void ANowSkeletalMeshPlayerActor::Randomize ( )
{
	static UFunction* pFnRandomize = NULL;

	if ( ! pFnRandomize )
		pFnRandomize = (UFunction*) UObject::GObjObjects()->Data[ 59283 ];

	ANowSkeletalMeshPlayerActor_execRandomize_Parms Randomize_Parms;

	this->ProcessEvent ( pFnRandomize, &Randomize_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshPlayerActor.InitData
// [0x00020002] 
// Parameters infos:

void ANowSkeletalMeshPlayerActor::InitData ( )
{
	static UFunction* pFnInitData = NULL;

	if ( ! pFnInitData )
		pFnInitData = (UFunction*) UObject::GObjObjects()->Data[ 59281 ];

	ANowSkeletalMeshPlayerActor_execInitData_Parms InitData_Parms;

	this->ProcessEvent ( pFnInitData, &InitData_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshPlayerActor.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshPlayerActor::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 59280 ];

	ANowSkeletalMeshPlayerActor_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowSpotLightMovableDayNight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowSpotLightMovableDayNight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 59297 ];

	ANowSpotLightMovableDayNight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowSpotLightMovableDayNight.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowSpotLightMovableDayNight::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 59296 ];

	ANowSpotLightMovableDayNight_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowSpotLightMovableDayNight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowSpotLightMovableDayNight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 59294 ];

	ANowSpotLightMovableDayNight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowSpotLightMovableDayNight.TurnOnNightLight
// [0x00020002] 
// Parameters infos:

void ANowSpotLightMovableDayNight::TurnOnNightLight ( )
{
	static UFunction* pFnTurnOnNightLight = NULL;

	if ( ! pFnTurnOnNightLight )
		pFnTurnOnNightLight = (UFunction*) UObject::GObjObjects()->Data[ 59293 ];

	ANowSpotLightMovableDayNight_execTurnOnNightLight_Parms TurnOnNightLight_Parms;

	this->ProcessEvent ( pFnTurnOnNightLight, &TurnOnNightLight_Parms, NULL );
};

// Function NowGame.NowStaticMeshActor.OpenGFXScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iGfxScene                      ( CPF_Parm )

void ANowStaticMeshActor::eventOpenGFXScene ( int iGfxScene )
{
	static UFunction* pFnOpenGFXScene = NULL;

	if ( ! pFnOpenGFXScene )
		pFnOpenGFXScene = (UFunction*) UObject::GObjObjects()->Data[ 59316 ];

	ANowStaticMeshActor_eventOpenGFXScene_Parms OpenGFXScene_Parms;
	OpenGFXScene_Parms.iGfxScene = iGfxScene;

	this->ProcessEvent ( pFnOpenGFXScene, &OpenGFXScene_Parms, NULL );
};

// Function NowGame.NowStaticMeshActor.SetTargetTypesFromString
// [0x00020002] 
// Parameters infos:
// struct FString                 sWorkBenchType                 ( CPF_Parm | CPF_NeedCtorLink )

void ANowStaticMeshActor::SetTargetTypesFromString ( struct FString sWorkBenchType )
{
	static UFunction* pFnSetTargetTypesFromString = NULL;

	if ( ! pFnSetTargetTypesFromString )
		pFnSetTargetTypesFromString = (UFunction*) UObject::GObjObjects()->Data[ 59314 ];

	ANowStaticMeshActor_execSetTargetTypesFromString_Parms SetTargetTypesFromString_Parms;
	memcpy ( &SetTargetTypesFromString_Parms.sWorkBenchType, &sWorkBenchType, 0xC );

	this->ProcessEvent ( pFnSetTargetTypesFromString, &SetTargetTypesFromString_Parms, NULL );
};

// Function NowGame.NowStaticMeshActor.GetAnyPhysMaterialTargetValue
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  eTargetType                    ( CPF_Parm )
// struct FString                 sTargetValue                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool ANowStaticMeshActor::GetAnyPhysMaterialTargetValue ( unsigned char eTargetType, struct FString* sTargetValue )
{
	static UFunction* pFnGetAnyPhysMaterialTargetValue = NULL;

	if ( ! pFnGetAnyPhysMaterialTargetValue )
		pFnGetAnyPhysMaterialTargetValue = (UFunction*) UObject::GObjObjects()->Data[ 46545 ];

	ANowStaticMeshActor_execGetAnyPhysMaterialTargetValue_Parms GetAnyPhysMaterialTargetValue_Parms;
	GetAnyPhysMaterialTargetValue_Parms.eTargetType = eTargetType;

	this->ProcessEvent ( pFnGetAnyPhysMaterialTargetValue, &GetAnyPhysMaterialTargetValue_Parms, NULL );

	if ( sTargetValue )
		memcpy ( sTargetValue, &GetAnyPhysMaterialTargetValue_Parms.sTargetValue, 0xC );

	return GetAnyPhysMaterialTargetValue_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActor.GetDisplayName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowStaticMeshActor::GetDisplayName ( )
{
	static UFunction* pFnGetDisplayName = NULL;

	if ( ! pFnGetDisplayName )
		pFnGetDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 59309 ];

	ANowStaticMeshActor_execGetDisplayName_Parms GetDisplayName_Parms;

	pFnGetDisplayName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayName, &GetDisplayName_Parms, NULL );

	pFnGetDisplayName->FunctionFlags |= 0x400;

	return GetDisplayName_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActor.GetAtlasType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowStaticMeshActor::GetAtlasType ( )
{
	static UFunction* pFnGetAtlasType = NULL;

	if ( ! pFnGetAtlasType )
		pFnGetAtlasType = (UFunction*) UObject::GObjObjects()->Data[ 59307 ];

	ANowStaticMeshActor_execGetAtlasType_Parms GetAtlasType_Parms;

	pFnGetAtlasType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasType, &GetAtlasType_Parms, NULL );

	pFnGetAtlasType->FunctionFlags |= 0x400;

	return GetAtlasType_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActor.GetAtlasName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowStaticMeshActor::GetAtlasName ( )
{
	static UFunction* pFnGetAtlasName = NULL;

	if ( ! pFnGetAtlasName )
		pFnGetAtlasName = (UFunction*) UObject::GObjObjects()->Data[ 59305 ];

	ANowStaticMeshActor_execGetAtlasName_Parms GetAtlasName_Parms;

	pFnGetAtlasName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasName, &GetAtlasName_Parms, NULL );

	pFnGetAtlasName->FunctionFlags |= 0x400;

	return GetAtlasName_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActor.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowStaticMeshActor::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = (UFunction*) UObject::GObjObjects()->Data[ 59303 ];

	ANowStaticMeshActor_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActor.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowStaticMeshActor::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 58154 ];

	ANowStaticMeshActor_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorCraft.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowStaticMeshActorCraft::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 59320 ];

	ANowStaticMeshActorCraft_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorEmote.TriggerEmote
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void ANowStaticMeshActorEmote::eventTriggerEmote ( class APlayerController* PC )
{
	static UFunction* pFnTriggerEmote = NULL;

	if ( ! pFnTriggerEmote )
		pFnTriggerEmote = (UFunction*) UObject::GObjObjects()->Data[ 59373 ];

	ANowStaticMeshActorEmote_eventTriggerEmote_Parms TriggerEmote_Parms;
	TriggerEmote_Parms.PC = PC;

	this->ProcessEvent ( pFnTriggerEmote, &TriggerEmote_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorEmote.GetDisplayName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowStaticMeshActorEmote::GetDisplayName ( )
{
	static UFunction* pFnGetDisplayName = NULL;

	if ( ! pFnGetDisplayName )
		pFnGetDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 59371 ];

	ANowStaticMeshActorEmote_execGetDisplayName_Parms GetDisplayName_Parms;

	pFnGetDisplayName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayName, &GetDisplayName_Parms, NULL );

	pFnGetDisplayName->FunctionFlags |= 0x400;

	return GetDisplayName_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorEmote.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowStaticMeshActorEmote::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = (UFunction*) UObject::GObjObjects()->Data[ 59369 ];

	ANowStaticMeshActorEmote_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorEmote.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowStaticMeshActorEmote::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 59366 ];

	ANowStaticMeshActorEmote_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorGate.Tick
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowStaticMeshActorGate::eventTick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 59418 ];

	ANowStaticMeshActorGate_eventTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorGate.CloseGate
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowStaticMeshActorGate::eventCloseGate ( )
{
	static UFunction* pFnCloseGate = NULL;

	if ( ! pFnCloseGate )
		pFnCloseGate = (UFunction*) UObject::GObjObjects()->Data[ 59417 ];

	ANowStaticMeshActorGate_eventCloseGate_Parms CloseGate_Parms;

	this->ProcessEvent ( pFnCloseGate, &CloseGate_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorGate.OpenGate
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowStaticMeshActorGate::eventOpenGate ( )
{
	static UFunction* pFnOpenGate = NULL;

	if ( ! pFnOpenGate )
		pFnOpenGate = (UFunction*) UObject::GObjObjects()->Data[ 59416 ];

	ANowStaticMeshActorGate_eventOpenGate_Parms OpenGate_Parms;

	this->ProcessEvent ( pFnOpenGate, &OpenGate_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorGate.SetEtherworldsCollision
// [0x00020002] 
// Parameters infos:
// unsigned long                  bTurnOn                        ( CPF_Parm )

void ANowStaticMeshActorGate::SetEtherworldsCollision ( unsigned long bTurnOn )
{
	static UFunction* pFnSetEtherworldsCollision = NULL;

	if ( ! pFnSetEtherworldsCollision )
		pFnSetEtherworldsCollision = (UFunction*) UObject::GObjObjects()->Data[ 59414 ];

	ANowStaticMeshActorGate_execSetEtherworldsCollision_Parms SetEtherworldsCollision_Parms;
	SetEtherworldsCollision_Parms.bTurnOn = bTurnOn;

	this->ProcessEvent ( pFnSetEtherworldsCollision, &SetEtherworldsCollision_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorGate.SetStructureOwner
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarTerritoryStructure* pNewOwner                      ( CPF_Parm )
// struct FVector                 vPos                           ( CPF_Parm )

void ANowStaticMeshActorGate::SetStructureOwner ( class ANowAtlasAvatarTerritoryStructure* pNewOwner, struct FVector vPos )
{
	static UFunction* pFnSetStructureOwner = NULL;

	if ( ! pFnSetStructureOwner )
		pFnSetStructureOwner = (UFunction*) UObject::GObjObjects()->Data[ 59411 ];

	ANowStaticMeshActorGate_execSetStructureOwner_Parms SetStructureOwner_Parms;
	SetStructureOwner_Parms.pNewOwner = pNewOwner;
	memcpy ( &SetStructureOwner_Parms.vPos, &vPos, 0xC );

	this->ProcessEvent ( pFnSetStructureOwner, &SetStructureOwner_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorGate.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowStaticMeshActorGate::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 59408 ];

	ANowStaticMeshActorGate_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorGate.GetAvatarID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowStaticMeshActorGate::GetAvatarID ( )
{
	static UFunction* pFnGetAvatarID = NULL;

	if ( ! pFnGetAvatarID )
		pFnGetAvatarID = (UFunction*) UObject::GObjObjects()->Data[ 59406 ];

	ANowStaticMeshActorGate_execGetAvatarID_Parms GetAvatarID_Parms;

	pFnGetAvatarID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAvatarID, &GetAvatarID_Parms, NULL );

	pFnGetAvatarID->FunctionFlags |= 0x400;

	return GetAvatarID_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorGateStoneGatehouse.Tick
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowStaticMeshActorGateStoneGatehouse::eventTick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 59434 ];

	ANowStaticMeshActorGateStoneGatehouse_eventTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorNoteboard.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowStaticMeshActorNoteboard::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = (UFunction*) UObject::GObjObjects()->Data[ 59513 ];

	ANowStaticMeshActorNoteboard_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorPriestBeacon.ShowBeacon
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void ANowStaticMeshActorPriestBeacon::ShowBeacon ( unsigned long bOn )
{
	static UFunction* pFnShowBeacon = NULL;

	if ( ! pFnShowBeacon )
		pFnShowBeacon = (UFunction*) UObject::GObjObjects()->Data[ 59517 ];

	ANowStaticMeshActorPriestBeacon_execShowBeacon_Parms ShowBeacon_Parms;
	ShowBeacon_Parms.bOn = bOn;

	this->ProcessEvent ( pFnShowBeacon, &ShowBeacon_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorRelicBeacon.SetRelicType
// [0x00020002] 
// Parameters infos:
// int                            iNewType                       ( CPF_Parm )

void ANowStaticMeshActorRelicBeacon::SetRelicType ( int iNewType )
{
	static UFunction* pFnSetRelicType = NULL;

	if ( ! pFnSetRelicType )
		pFnSetRelicType = (UFunction*) UObject::GObjObjects()->Data[ 59531 ];

	ANowStaticMeshActorRelicBeacon_execSetRelicType_Parms SetRelicType_Parms;
	SetRelicType_Parms.iNewType = iNewType;

	this->ProcessEvent ( pFnSetRelicType, &SetRelicType_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorRelicBeacon.DestroyRelic
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorRelicBeacon::DestroyRelic ( )
{
	static UFunction* pFnDestroyRelic = NULL;

	if ( ! pFnDestroyRelic )
		pFnDestroyRelic = (UFunction*) UObject::GObjObjects()->Data[ 59524 ];

	ANowStaticMeshActorRelicBeacon_execDestroyRelic_Parms DestroyRelic_Parms;

	this->ProcessEvent ( pFnDestroyRelic, &DestroyRelic_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorRelicBeacon.RemoveRelic
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorRelicBeacon::RemoveRelic ( )
{
	static UFunction* pFnRemoveRelic = NULL;

	if ( ! pFnRemoveRelic )
		pFnRemoveRelic = (UFunction*) UObject::GObjObjects()->Data[ 59523 ];

	ANowStaticMeshActorRelicBeacon_execRemoveRelic_Parms RemoveRelic_Parms;

	this->ProcessEvent ( pFnRemoveRelic, &RemoveRelic_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorLadder.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowStaticMeshActorLadder::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 59501 ];

	ANowStaticMeshActorLadder_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorLadder.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowStaticMeshActorLadder::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 59496 ];

	ANowStaticMeshActorLadder_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorLadder.SetLadderLength
// [0x00820002] 
// Parameters infos:
// float                          NewLength                      ( CPF_Parm )

void ANowStaticMeshActorLadder::SetLadderLength ( float NewLength )
{
	static UFunction* pFnSetLadderLength = NULL;

	if ( ! pFnSetLadderLength )
		pFnSetLadderLength = (UFunction*) UObject::GObjObjects()->Data[ 59493 ];

	ANowStaticMeshActorLadder_execSetLadderLength_Parms SetLadderLength_Parms;
	SetLadderLength_Parms.NewLength = NewLength;

	this->ProcessEvent ( pFnSetLadderLength, &SetLadderLength_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorLadder.IsAtTop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool ANowStaticMeshActorLadder::IsAtTop ( class AActor* Other )
{
	static UFunction* pFnIsAtTop = NULL;

	if ( ! pFnIsAtTop )
		pFnIsAtTop = (UFunction*) UObject::GObjObjects()->Data[ 59490 ];

	ANowStaticMeshActorLadder_execIsAtTop_Parms IsAtTop_Parms;
	IsAtTop_Parms.Other = Other;

	this->ProcessEvent ( pFnIsAtTop, &IsAtTop_Parms, NULL );

	return IsAtTop_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorLadder.SetLadderPoints
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowStaticMeshActorLadder::eventSetLadderPoints ( )
{
	static UFunction* pFnSetLadderPoints = NULL;

	if ( ! pFnSetLadderPoints )
		pFnSetLadderPoints = (UFunction*) UObject::GObjObjects()->Data[ 59489 ];

	ANowStaticMeshActorLadder_eventSetLadderPoints_Parms SetLadderPoints_Parms;

	this->ProcessEvent ( pFnSetLadderPoints, &SetLadderPoints_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorTorch.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowStaticMeshActorTorch::eventTick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 59561 ];

	ANowStaticMeshActorTorch_eventTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorTorch.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowStaticMeshActorTorch::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 59559 ];

	ANowStaticMeshActorTorch_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorTorch.SetNightLight
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorTorch::SetNightLight ( )
{
	static UFunction* pFnSetNightLight = NULL;

	if ( ! pFnSetNightLight )
		pFnSetNightLight = (UFunction*) UObject::GObjObjects()->Data[ 59558 ];

	ANowStaticMeshActorTorch_execSetNightLight_Parms SetNightLight_Parms;

	this->ProcessEvent ( pFnSetNightLight, &SetNightLight_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorTorch.SetStructureOwner
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarTerritoryStructure* pNewOwner                      ( CPF_Parm )
// struct FVector                 vPos                           ( CPF_Parm )

void ANowStaticMeshActorTorch::SetStructureOwner ( class ANowAtlasAvatarTerritoryStructure* pNewOwner, struct FVector vPos )
{
	static UFunction* pFnSetStructureOwner = NULL;

	if ( ! pFnSetStructureOwner )
		pFnSetStructureOwner = (UFunction*) UObject::GObjObjects()->Data[ 59555 ];

	ANowStaticMeshActorTorch_execSetStructureOwner_Parms SetStructureOwner_Parms;
	SetStructureOwner_Parms.pNewOwner = pNewOwner;
	memcpy ( &SetStructureOwner_Parms.vPos, &vPos, 0xC );

	this->ProcessEvent ( pFnSetStructureOwner, &SetStructureOwner_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.Tick
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowStaticMeshActorWeaponPreviewCrafting::eventTick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 59591 ];

	ANowStaticMeshActorWeaponPreviewCrafting_eventTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.PreviewRanged
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorWeaponPreviewCrafting::PreviewRanged ( )
{
	static UFunction* pFnPreviewRanged = NULL;

	if ( ! pFnPreviewRanged )
		pFnPreviewRanged = (UFunction*) UObject::GObjObjects()->Data[ 59590 ];

	ANowStaticMeshActorWeaponPreviewCrafting_execPreviewRanged_Parms PreviewRanged_Parms;

	this->ProcessEvent ( pFnPreviewRanged, &PreviewRanged_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.PreviewShield
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorWeaponPreviewCrafting::PreviewShield ( )
{
	static UFunction* pFnPreviewShield = NULL;

	if ( ! pFnPreviewShield )
		pFnPreviewShield = (UFunction*) UObject::GObjObjects()->Data[ 59589 ];

	ANowStaticMeshActorWeaponPreviewCrafting_execPreviewShield_Parms PreviewShield_Parms;

	this->ProcessEvent ( pFnPreviewShield, &PreviewShield_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.PreviewWeapon
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorWeaponPreviewCrafting::PreviewWeapon ( )
{
	static UFunction* pFnPreviewWeapon = NULL;

	if ( ! pFnPreviewWeapon )
		pFnPreviewWeapon = (UFunction*) UObject::GObjObjects()->Data[ 59588 ];

	ANowStaticMeshActorWeaponPreviewCrafting_execPreviewWeapon_Parms PreviewWeapon_Parms;

	this->ProcessEvent ( pFnPreviewWeapon, &PreviewWeapon_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.RemoveSkinFromArmor
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorWeaponPreviewCrafting::RemoveSkinFromArmor ( )
{
	static UFunction* pFnRemoveSkinFromArmor = NULL;

	if ( ! pFnRemoveSkinFromArmor )
		pFnRemoveSkinFromArmor = (UFunction*) UObject::GObjObjects()->Data[ 59587 ];

	ANowStaticMeshActorWeaponPreviewCrafting_execRemoveSkinFromArmor_Parms RemoveSkinFromArmor_Parms;

	this->ProcessEvent ( pFnRemoveSkinFromArmor, &RemoveSkinFromArmor_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.SetInvalid
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowStaticMeshActorWeaponPreviewCrafting::eventSetInvalid ( )
{
	static UFunction* pFnSetInvalid = NULL;

	if ( ! pFnSetInvalid )
		pFnSetInvalid = (UFunction*) UObject::GObjObjects()->Data[ 59586 ];

	ANowStaticMeshActorWeaponPreviewCrafting_eventSetInvalid_Parms SetInvalid_Parms;

	this->ProcessEvent ( pFnSetInvalid, &SetInvalid_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.PreviewArmor
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorWeaponPreviewCrafting::PreviewArmor ( )
{
	static UFunction* pFnPreviewArmor = NULL;

	if ( ! pFnPreviewArmor )
		pFnPreviewArmor = (UFunction*) UObject::GObjObjects()->Data[ 59585 ];

	ANowStaticMeshActorWeaponPreviewCrafting_execPreviewArmor_Parms PreviewArmor_Parms;

	this->ProcessEvent ( pFnPreviewArmor, &PreviewArmor_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.SetWeaponLength
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          NewLength                      ( CPF_Parm )

void ANowStaticMeshActorWeaponPreviewCrafting::SetWeaponLength ( float NewLength )
{
	static UFunction* pFnSetWeaponLength = NULL;

	if ( ! pFnSetWeaponLength )
		pFnSetWeaponLength = (UFunction*) UObject::GObjObjects()->Data[ 59583 ];

	ANowStaticMeshActorWeaponPreviewCrafting_execSetWeaponLength_Parms SetWeaponLength_Parms;
	SetWeaponLength_Parms.NewLength = NewLength;

	pFnSetWeaponLength->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetWeaponLength, &SetWeaponLength_Parms, NULL );

	pFnSetWeaponLength->FunctionFlags |= 0x400;
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.SetPreviewArmor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sDataString                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )
// unsigned long                  bNoMat                         ( CPF_Parm )

void ANowStaticMeshActorWeaponPreviewCrafting::SetPreviewArmor ( struct FString sDataString, int iSlot, unsigned long bNoMat )
{
	static UFunction* pFnSetPreviewArmor = NULL;

	if ( ! pFnSetPreviewArmor )
		pFnSetPreviewArmor = (UFunction*) UObject::GObjObjects()->Data[ 59579 ];

	ANowStaticMeshActorWeaponPreviewCrafting_execSetPreviewArmor_Parms SetPreviewArmor_Parms;
	memcpy ( &SetPreviewArmor_Parms.sDataString, &sDataString, 0xC );
	SetPreviewArmor_Parms.iSlot = iSlot;
	SetPreviewArmor_Parms.bNoMat = bNoMat;

	pFnSetPreviewArmor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPreviewArmor, &SetPreviewArmor_Parms, NULL );

	pFnSetPreviewArmor->FunctionFlags |= 0x400;
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.SetPreviewWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sDataString                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bNoMat                         ( CPF_Parm )

void ANowStaticMeshActorWeaponPreviewCrafting::SetPreviewWeapon ( struct FString sDataString, unsigned long bNoMat )
{
	static UFunction* pFnSetPreviewWeapon = NULL;

	if ( ! pFnSetPreviewWeapon )
		pFnSetPreviewWeapon = (UFunction*) UObject::GObjObjects()->Data[ 59576 ];

	ANowStaticMeshActorWeaponPreviewCrafting_execSetPreviewWeapon_Parms SetPreviewWeapon_Parms;
	memcpy ( &SetPreviewWeapon_Parms.sDataString, &sDataString, 0xC );
	SetPreviewWeapon_Parms.bNoMat = bNoMat;

	pFnSetPreviewWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPreviewWeapon, &SetPreviewWeapon_Parms, NULL );

	pFnSetPreviewWeapon->FunctionFlags |= 0x400;
};

// Function NowGame.NowTCPLink.OnRequestComplete
// [0x00020002] 
// Parameters infos:
// class UHttpRequestInterface*   OriginalRequest                ( CPF_Parm )
// class UHttpResponseInterface*  Response                       ( CPF_Parm )
// unsigned long                  bDidSucceed                    ( CPF_Parm )

void ANowTCPLink::OnRequestComplete ( class UHttpRequestInterface* OriginalRequest, class UHttpResponseInterface* Response, unsigned long bDidSucceed )
{
	static UFunction* pFnOnRequestComplete = NULL;

	if ( ! pFnOnRequestComplete )
		pFnOnRequestComplete = (UFunction*) UObject::GObjObjects()->Data[ 59672 ];

	ANowTCPLink_execOnRequestComplete_Parms OnRequestComplete_Parms;
	OnRequestComplete_Parms.OriginalRequest = OriginalRequest;
	OnRequestComplete_Parms.Response = Response;
	OnRequestComplete_Parms.bDidSucceed = bDidSucceed;

	this->ProcessEvent ( pFnOnRequestComplete, &OnRequestComplete_Parms, NULL );
};

// Function NowGame.NowTCPLink.IsCompleteJSon
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

bool ANowTCPLink::IsCompleteJSon ( struct FString sString )
{
	static UFunction* pFnIsCompleteJSon = NULL;

	if ( ! pFnIsCompleteJSon )
		pFnIsCompleteJSon = (UFunction*) UObject::GObjObjects()->Data[ 59669 ];

	ANowTCPLink_execIsCompleteJSon_Parms IsCompleteJSon_Parms;
	memcpy ( &IsCompleteJSon_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnIsCompleteJSon, &IsCompleteJSon_Parms, NULL );

	return IsCompleteJSon_Parms.ReturnValue;
};

// Function NowGame.NowTCPLink.ReceivedText
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void ANowTCPLink::eventReceivedText ( struct FString Text )
{
	static UFunction* pFnReceivedText = NULL;

	if ( ! pFnReceivedText )
		pFnReceivedText = (UFunction*) UObject::GObjObjects()->Data[ 59667 ];

	ANowTCPLink_eventReceivedText_Parms ReceivedText_Parms;
	memcpy ( &ReceivedText_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnReceivedText, &ReceivedText_Parms, NULL );
};

// Function NowGame.NowTCPLink.Closed
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowTCPLink::eventClosed ( )
{
	static UFunction* pFnClosed = NULL;

	if ( ! pFnClosed )
		pFnClosed = (UFunction*) UObject::GObjObjects()->Data[ 59666 ];

	ANowTCPLink_eventClosed_Parms Closed_Parms;

	this->ProcessEvent ( pFnClosed, &Closed_Parms, NULL );
};

// Function NowGame.NowTCPLink.Opened
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowTCPLink::eventOpened ( )
{
	static UFunction* pFnOpened = NULL;

	if ( ! pFnOpened )
		pFnOpened = (UFunction*) UObject::GObjObjects()->Data[ 59665 ];

	ANowTCPLink_eventOpened_Parms Opened_Parms;

	this->ProcessEvent ( pFnOpened, &Opened_Parms, NULL );
};

// Function NowGame.NowTCPLink.ResolveFailed
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowTCPLink::eventResolveFailed ( )
{
	static UFunction* pFnResolveFailed = NULL;

	if ( ! pFnResolveFailed )
		pFnResolveFailed = (UFunction*) UObject::GObjObjects()->Data[ 59664 ];

	ANowTCPLink_eventResolveFailed_Parms ResolveFailed_Parms;

	this->ProcessEvent ( pFnResolveFailed, &ResolveFailed_Parms, NULL );
};

// Function NowGame.NowTCPLink.Resolved
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowTCPLink::eventResolved ( )
{
	static UFunction* pFnResolved = NULL;

	if ( ! pFnResolved )
		pFnResolved = (UFunction*) UObject::GObjObjects()->Data[ 59663 ];

	ANowTCPLink_eventResolved_Parms Resolved_Parms;

	this->ProcessEvent ( pFnResolved, &Resolved_Parms, NULL );
};

// Function NowGame.NowTCPLink.GetSendURL
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iQueryIndex                    ( CPF_Parm )

struct FString ANowTCPLink::eventGetSendURL ( int iQueryIndex )
{
	static UFunction* pFnGetSendURL = NULL;

	if ( ! pFnGetSendURL )
		pFnGetSendURL = (UFunction*) UObject::GObjObjects()->Data[ 59660 ];

	ANowTCPLink_eventGetSendURL_Parms GetSendURL_Parms;
	GetSendURL_Parms.iQueryIndex = iQueryIndex;

	this->ProcessEvent ( pFnGetSendURL, &GetSendURL_Parms, NULL );

	return GetSendURL_Parms.ReturnValue;
};

// Function NowGame.NowTCPLink.CreateHttpRequestInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UHttpRequestInterface*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UObject*                 pNewReportTo                   ( CPF_Parm )

class UHttpRequestInterface* ANowTCPLink::eventCreateHttpRequestInterface ( class UObject* pNewReportTo )
{
	static UFunction* pFnCreateHttpRequestInterface = NULL;

	if ( ! pFnCreateHttpRequestInterface )
		pFnCreateHttpRequestInterface = (UFunction*) UObject::GObjObjects()->Data[ 59656 ];

	ANowTCPLink_eventCreateHttpRequestInterface_Parms CreateHttpRequestInterface_Parms;
	CreateHttpRequestInterface_Parms.pNewReportTo = pNewReportTo;

	this->ProcessEvent ( pFnCreateHttpRequestInterface, &CreateHttpRequestInterface_Parms, NULL );

	return CreateHttpRequestInterface_Parms.ReturnValue;
};

// Function NowGame.NowTCPLink.CreateRequest
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FsSendQuery             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UObject*                 pNewReportTo                   ( CPF_Parm )
// unsigned char                  eType                          ( CPF_Parm )

struct FsSendQuery ANowTCPLink::eventCreateRequest ( class UObject* pNewReportTo, unsigned char eType )
{
	static UFunction* pFnCreateRequest = NULL;

	if ( ! pFnCreateRequest )
		pFnCreateRequest = (UFunction*) UObject::GObjObjects()->Data[ 59651 ];

	ANowTCPLink_eventCreateRequest_Parms CreateRequest_Parms;
	CreateRequest_Parms.pNewReportTo = pNewReportTo;
	CreateRequest_Parms.eType = eType;

	this->ProcessEvent ( pFnCreateRequest, &CreateRequest_Parms, NULL );

	return CreateRequest_Parms.ReturnValue;
};

// Function NowGame.NowTCPLink.FindQueryIndex
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iReqIndex                      ( CPF_Parm )

int ANowTCPLink::eventFindQueryIndex ( int iReqIndex )
{
	static UFunction* pFnFindQueryIndex = NULL;

	if ( ! pFnFindQueryIndex )
		pFnFindQueryIndex = (UFunction*) UObject::GObjObjects()->Data[ 59647 ];

	ANowTCPLink_eventFindQueryIndex_Parms FindQueryIndex_Parms;
	FindQueryIndex_Parms.iReqIndex = iReqIndex;

	this->ProcessEvent ( pFnFindQueryIndex, &FindQueryIndex_Parms, NULL );

	return FindQueryIndex_Parms.ReturnValue;
};

// Function NowGame.NowTCPLink.HandleRequestComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UHttpRequestInterface*   OriginalRequest                ( CPF_Parm )
// class UHttpResponseInterface*  Response                       ( CPF_Parm )

void ANowTCPLink::HandleRequestComplete ( class UHttpRequestInterface* OriginalRequest, class UHttpResponseInterface* Response )
{
	static UFunction* pFnHandleRequestComplete = NULL;

	if ( ! pFnHandleRequestComplete )
		pFnHandleRequestComplete = (UFunction*) UObject::GObjObjects()->Data[ 59644 ];

	ANowTCPLink_execHandleRequestComplete_Parms HandleRequestComplete_Parms;
	HandleRequestComplete_Parms.OriginalRequest = OriginalRequest;
	HandleRequestComplete_Parms.Response = Response;

	pFnHandleRequestComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHandleRequestComplete, &HandleRequestComplete_Parms, NULL );

	pFnHandleRequestComplete->FunctionFlags |= 0x400;
};

// Function NowGame.NowTCPLink.SendQuery
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eTarget                        ( CPF_Parm )
// struct FString                 sQuery                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bStart                         ( CPF_Parm )
// unsigned long                  bEnd                           ( CPF_Parm )
// class UObject*                 pNewReportTo                   ( CPF_OptionalParm | CPF_Parm )

void ANowTCPLink::SendQuery ( unsigned char eTarget, struct FString sQuery, unsigned long bStart, unsigned long bEnd, class UObject* pNewReportTo )
{
	static UFunction* pFnSendQuery = NULL;

	if ( ! pFnSendQuery )
		pFnSendQuery = (UFunction*) UObject::GObjObjects()->Data[ 59638 ];

	ANowTCPLink_execSendQuery_Parms SendQuery_Parms;
	SendQuery_Parms.eTarget = eTarget;
	memcpy ( &SendQuery_Parms.sQuery, &sQuery, 0xC );
	SendQuery_Parms.bStart = bStart;
	SendQuery_Parms.bEnd = bEnd;
	SendQuery_Parms.pNewReportTo = pNewReportTo;

	pFnSendQuery->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendQuery, &SendQuery_Parms, NULL );

	pFnSendQuery->FunctionFlags |= 0x400;
};

// Function NowGame.NowTeleporter.TeleportMe
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                P                              ( CPF_Parm )

void ANowTeleporter::TeleportMe ( class ANowPawn* P )
{
	static UFunction* pFnTeleportMe = NULL;

	if ( ! pFnTeleportMe )
		pFnTeleportMe = (UFunction*) UObject::GObjObjects()->Data[ 59678 ];

	ANowTeleporter_execTeleportMe_Parms TeleportMe_Parms;
	TeleportMe_Parms.P = P;

	this->ProcessEvent ( pFnTeleportMe, &TeleportMe_Parms, NULL );
};

// Function NowGame.NowVolumeSecurityZone.LookForCriminalsTgt
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowPawn*                WhatPawn                       ( CPF_Parm )
// class AActor*                  Victim                         ( CPF_Parm )

bool ANowVolumeSecurityZone::LookForCriminalsTgt ( class ANowPawn* WhatPawn, class AActor* Victim )
{
	static UFunction* pFnLookForCriminalsTgt = NULL;

	if ( ! pFnLookForCriminalsTgt )
		pFnLookForCriminalsTgt = (UFunction*) UObject::GObjObjects()->Data[ 59803 ];

	ANowVolumeSecurityZone_execLookForCriminalsTgt_Parms LookForCriminalsTgt_Parms;
	LookForCriminalsTgt_Parms.WhatPawn = WhatPawn;
	LookForCriminalsTgt_Parms.Victim = Victim;

	this->ProcessEvent ( pFnLookForCriminalsTgt, &LookForCriminalsTgt_Parms, NULL );

	return LookForCriminalsTgt_Parms.ReturnValue;
};

// Function NowGame.NowVolumeSecurityZone.CalledGuards
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                WhatPawn                       ( CPF_Parm )

void ANowVolumeSecurityZone::CalledGuards ( class ANowPawn* WhatPawn )
{
	static UFunction* pFnCalledGuards = NULL;

	if ( ! pFnCalledGuards )
		pFnCalledGuards = (UFunction*) UObject::GObjObjects()->Data[ 59801 ];

	ANowVolumeSecurityZone_execCalledGuards_Parms CalledGuards_Parms;
	CalledGuards_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnCalledGuards, &CalledGuards_Parms, NULL );
};

// Function NowGame.NowVolumeSecurityZone.TurnOffCombatModes
// [0x00020002] 
// Parameters infos:

void ANowVolumeSecurityZone::TurnOffCombatModes ( )
{
	static UFunction* pFnTurnOffCombatModes = NULL;

	if ( ! pFnTurnOffCombatModes )
		pFnTurnOffCombatModes = (UFunction*) UObject::GObjObjects()->Data[ 59799 ];

	ANowVolumeSecurityZone_execTurnOffCombatModes_Parms TurnOffCombatModes_Parms;

	this->ProcessEvent ( pFnTurnOffCombatModes, &TurnOffCombatModes_Parms, NULL );
};

// Function NowGame.NowVolumeSecurityZone.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowVolumeSecurityZone::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 59794 ];

	ANowVolumeSecurityZone_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.NowVolumeSecurityZone.ClientLeft
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    PC                             ( CPF_Parm )

void ANowVolumeSecurityZone::eventClientLeft ( class ANowPlayerController* PC )
{
	static UFunction* pFnClientLeft = NULL;

	if ( ! pFnClientLeft )
		pFnClientLeft = (UFunction*) UObject::GObjObjects()->Data[ 59792 ];

	ANowVolumeSecurityZone_eventClientLeft_Parms ClientLeft_Parms;
	ClientLeft_Parms.PC = PC;

	this->ProcessEvent ( pFnClientLeft, &ClientLeft_Parms, NULL );
};

// Function NowGame.NowVolumeSecurityZone.CheckPlayerInMe
// [0x00020002] 
// Parameters infos:

void ANowVolumeSecurityZone::CheckPlayerInMe ( )
{
	static UFunction* pFnCheckPlayerInMe = NULL;

	if ( ! pFnCheckPlayerInMe )
		pFnCheckPlayerInMe = (UFunction*) UObject::GObjObjects()->Data[ 59790 ];

	ANowVolumeSecurityZone_execCheckPlayerInMe_Parms CheckPlayerInMe_Parms;

	this->ProcessEvent ( pFnCheckPlayerInMe, &CheckPlayerInMe_Parms, NULL );
};

// Function NowGame.NowVolumeSecurityZone.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowVolumeSecurityZone::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 59789 ];

	ANowVolumeSecurityZone_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.Observable.NotifyObservers
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UObservable::eventNotifyObservers ( )
{
	static UFunction* pFnNotifyObservers = NULL;

	if ( ! pFnNotifyObservers )
		pFnNotifyObservers = (UFunction*) UObject::GObjObjects()->Data[ 57569 ];

	UObservable_eventNotifyObservers_Parms NotifyObservers_Parms;

	this->ProcessEvent ( pFnNotifyObservers, &NotifyObservers_Parms, NULL );
};

// Function NowGame.Observable.DeleteObserver
// [0x00020002] 
// Parameters infos:
// class UObserver*               obs                            ( CPF_Parm )

void UObservable::DeleteObserver ( class UObserver* obs )
{
	static UFunction* pFnDeleteObserver = NULL;

	if ( ! pFnDeleteObserver )
		pFnDeleteObserver = (UFunction*) UObject::GObjObjects()->Data[ 57567 ];

	UObservable_execDeleteObserver_Parms DeleteObserver_Parms;
	DeleteObserver_Parms.obs = obs;

	this->ProcessEvent ( pFnDeleteObserver, &DeleteObserver_Parms, NULL );
};

// Function NowGame.Observable.AddObserver
// [0x00020002] 
// Parameters infos:
// class UObserver*               obs                            ( CPF_Parm )

void UObservable::AddObserver ( class UObserver* obs )
{
	static UFunction* pFnAddObserver = NULL;

	if ( ! pFnAddObserver )
		pFnAddObserver = (UFunction*) UObject::GObjObjects()->Data[ 57565 ];

	UObservable_execAddObserver_Parms AddObserver_Parms;
	AddObserver_Parms.obs = obs;

	this->ProcessEvent ( pFnAddObserver, &AddObserver_Parms, NULL );
};

// Function NowGame.TimeControl.UpdatePartOfDMY
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UTimeControl::UpdatePartOfDMY ( )
{
	static UFunction* pFnUpdatePartOfDMY = NULL;

	if ( ! pFnUpdatePartOfDMY )
		pFnUpdatePartOfDMY = (UFunction*) UObject::GObjObjects()->Data[ 57587 ];

	UTimeControl_execUpdatePartOfDMY_Parms UpdatePartOfDMY_Parms;

	pFnUpdatePartOfDMY->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePartOfDMY, &UpdatePartOfDMY_Parms, NULL );

	pFnUpdatePartOfDMY->FunctionFlags |= 0x400;
};

// Function NowGame.TimeControl.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            serverTime                     ( CPF_Parm )

void UTimeControl::Initialize ( int serverTime )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 57585 ];

	UTimeControl_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.serverTime = serverTime;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function NowGame.TimeControl.SynchTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            serverTime                     ( CPF_Parm )

void UTimeControl::SynchTime ( int serverTime )
{
	static UFunction* pFnSynchTime = NULL;

	if ( ! pFnSynchTime )
		pFnSynchTime = (UFunction*) UObject::GObjObjects()->Data[ 57583 ];

	UTimeControl_execSynchTime_Parms SynchTime_Parms;
	SynchTime_Parms.serverTime = serverTime;

	pFnSynchTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSynchTime, &SynchTime_Parms, NULL );

	pFnSynchTime->FunctionFlags |= 0x400;
};

// Function NowGame.TimeControl.Update
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTimeControl::Update ( )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 57582 ];

	UTimeControl_execUpdate_Parms Update_Parms;

	pFnUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );

	pFnUpdate->FunctionFlags |= 0x400;
};

// Function NowGame.WeatherControl.SetRegionParam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Region                         ( CPF_Parm )

void UWeatherControl::SetRegionParam ( int Region )
{
	static UFunction* pFnSetRegionParam = NULL;

	if ( ! pFnSetRegionParam )
		pFnSetRegionParam = (UFunction*) UObject::GObjObjects()->Data[ 57647 ];

	UWeatherControl_execSetRegionParam_Parms SetRegionParam_Parms;
	SetRegionParam_Parms.Region = Region;

	pFnSetRegionParam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetRegionParam, &SetRegionParam_Parms, NULL );

	pFnSetRegionParam->FunctionFlags |= 0x400;
};

// Function NowGame.WeatherControl.GetRegionName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Region                         ( CPF_Parm )

struct FString UWeatherControl::GetRegionName ( int Region )
{
	static UFunction* pFnGetRegionName = NULL;

	if ( ! pFnGetRegionName )
		pFnGetRegionName = (UFunction*) UObject::GObjObjects()->Data[ 57644 ];

	UWeatherControl_execGetRegionName_Parms GetRegionName_Parms;
	GetRegionName_Parms.Region = Region;

	pFnGetRegionName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRegionName, &GetRegionName_Parms, NULL );

	pFnGetRegionName->FunctionFlags |= 0x400;

	return GetRegionName_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetRegionNumber
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Region                         ( CPF_Parm | CPF_NeedCtorLink )

int UWeatherControl::GetRegionNumber ( struct FString Region )
{
	static UFunction* pFnGetRegionNumber = NULL;

	if ( ! pFnGetRegionNumber )
		pFnGetRegionNumber = (UFunction*) UObject::GObjObjects()->Data[ 48008 ];

	UWeatherControl_execGetRegionNumber_Parms GetRegionNumber_Parms;
	memcpy ( &GetRegionNumber_Parms.Region, &Region, 0xC );

	pFnGetRegionNumber->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRegionNumber, &GetRegionNumber_Parms, NULL );

	pFnGetRegionNumber->FunctionFlags |= 0x400;

	return GetRegionNumber_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.AddCheapObserver
// [0x00020002] 
// Parameters infos:
// class UObserver*               obs                            ( CPF_Parm )

void UWeatherControl::AddCheapObserver ( class UObserver* obs )
{
	static UFunction* pFnAddCheapObserver = NULL;

	if ( ! pFnAddCheapObserver )
		pFnAddCheapObserver = (UFunction*) UObject::GObjObjects()->Data[ 57641 ];

	UWeatherControl_execAddCheapObserver_Parms AddCheapObserver_Parms;
	AddCheapObserver_Parms.obs = obs;

	this->ProcessEvent ( pFnAddCheapObserver, &AddCheapObserver_Parms, NULL );
};

// Function NowGame.WeatherControl.UpdateCheaper
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UWeatherControl::eventUpdateCheaper ( )
{
	static UFunction* pFnUpdateCheaper = NULL;

	if ( ! pFnUpdateCheaper )
		pFnUpdateCheaper = (UFunction*) UObject::GObjObjects()->Data[ 57639 ];

	UWeatherControl_eventUpdateCheaper_Parms UpdateCheaper_Parms;

	this->ProcessEvent ( pFnUpdateCheaper, &UpdateCheaper_Parms, NULL );
};

// Function NowGame.WeatherControl.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UWeatherControl::eventUpdate ( )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 57638 ];

	UWeatherControl_eventUpdate_Parms Update_Parms;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function NowGame.WeatherControl.PutWindData
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            WindD                          ( CPF_Parm )
// float                          WindM                          ( CPF_Parm )

void UWeatherControl::eventPutWindData ( int WindD, float WindM )
{
	static UFunction* pFnPutWindData = NULL;

	if ( ! pFnPutWindData )
		pFnPutWindData = (UFunction*) UObject::GObjObjects()->Data[ 57635 ];

	UWeatherControl_eventPutWindData_Parms PutWindData_Parms;
	PutWindData_Parms.WindD = WindD;
	PutWindData_Parms.WindM = WindM;

	this->ProcessEvent ( pFnPutWindData, &PutWindData_Parms, NULL );
};

// Function NowGame.WeatherControl.PutThunderstorm
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Region                         ( CPF_Parm )

void UWeatherControl::eventPutThunderstorm ( int Region )
{
	static UFunction* pFnPutThunderstorm = NULL;

	if ( ! pFnPutThunderstorm )
		pFnPutThunderstorm = (UFunction*) UObject::GObjObjects()->Data[ 57633 ];

	UWeatherControl_eventPutThunderstorm_Parms PutThunderstorm_Parms;
	PutThunderstorm_Parms.Region = Region;

	this->ProcessEvent ( pFnPutThunderstorm, &PutThunderstorm_Parms, NULL );
};

// Function NowGame.WeatherControl.PutData
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Region                         ( CPF_Parm )
// int                            clouds                         ( CPF_Parm )
// int                            Rain                           ( CPF_Parm )
// int                            Fog                            ( CPF_Parm )

void UWeatherControl::eventPutData ( int Region, int clouds, int Rain, int Fog )
{
	static UFunction* pFnPutData = NULL;

	if ( ! pFnPutData )
		pFnPutData = (UFunction*) UObject::GObjObjects()->Data[ 57628 ];

	UWeatherControl_eventPutData_Parms PutData_Parms;
	PutData_Parms.Region = Region;
	PutData_Parms.clouds = clouds;
	PutData_Parms.Rain = Rain;
	PutData_Parms.Fog = Fog;

	this->ProcessEvent ( pFnPutData, &PutData_Parms, NULL );
};

// Function NowGame.WeatherControl.RelocateCloudsWith
// [0x00820002] 
// Parameters infos:
// class AMortalWeatherPostProcessVolume* Vol                            ( CPF_Parm )

void UWeatherControl::RelocateCloudsWith ( class AMortalWeatherPostProcessVolume* Vol )
{
	static UFunction* pFnRelocateCloudsWith = NULL;

	if ( ! pFnRelocateCloudsWith )
		pFnRelocateCloudsWith = (UFunction*) UObject::GObjObjects()->Data[ 57624 ];

	UWeatherControl_execRelocateCloudsWith_Parms RelocateCloudsWith_Parms;
	RelocateCloudsWith_Parms.Vol = Vol;

	this->ProcessEvent ( pFnRelocateCloudsWith, &RelocateCloudsWith_Parms, NULL );
};

// Function NowGame.WeatherControl.AddCloudToRelocated
// [0x00020002] 
// Parameters infos:
// class AMortalCloudEmitter*     Add                            ( CPF_Parm )

void UWeatherControl::AddCloudToRelocated ( class AMortalCloudEmitter* Add )
{
	static UFunction* pFnAddCloudToRelocated = NULL;

	if ( ! pFnAddCloudToRelocated )
		pFnAddCloudToRelocated = (UFunction*) UObject::GObjObjects()->Data[ 57622 ];

	UWeatherControl_execAddCloudToRelocated_Parms AddCloudToRelocated_Parms;
	AddCloudToRelocated_Parms.Add = Add;

	this->ProcessEvent ( pFnAddCloudToRelocated, &AddCloudToRelocated_Parms, NULL );
};

// Function NowGame.WeatherControl.ToggleWeatherOnOff
// [0x00020002] 
// Parameters infos:

void UWeatherControl::ToggleWeatherOnOff ( )
{
	static UFunction* pFnToggleWeatherOnOff = NULL;

	if ( ! pFnToggleWeatherOnOff )
		pFnToggleWeatherOnOff = (UFunction*) UObject::GObjObjects()->Data[ 57621 ];

	UWeatherControl_execToggleWeatherOnOff_Parms ToggleWeatherOnOff_Parms;

	this->ProcessEvent ( pFnToggleWeatherOnOff, &ToggleWeatherOnOff_Parms, NULL );
};

// Function NowGame.WeatherControl.Tick1Sec
// [0x00020002] 
// Parameters infos:

void UWeatherControl::Tick1Sec ( )
{
	static UFunction* pFnTick1Sec = NULL;

	if ( ! pFnTick1Sec )
		pFnTick1Sec = (UFunction*) UObject::GObjObjects()->Data[ 57620 ];

	UWeatherControl_execTick1Sec_Parms Tick1Sec_Parms;

	this->ProcessEvent ( pFnTick1Sec, &Tick1Sec_Parms, NULL );
};

// Function NowGame.WeatherControl.GetCurrentRegionName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UWeatherControl::GetCurrentRegionName ( )
{
	static UFunction* pFnGetCurrentRegionName = NULL;

	if ( ! pFnGetCurrentRegionName )
		pFnGetCurrentRegionName = (UFunction*) UObject::GObjObjects()->Data[ 52247 ];

	UWeatherControl_execGetCurrentRegionName_Parms GetCurrentRegionName_Parms;

	this->ProcessEvent ( pFnGetCurrentRegionName, &GetCurrentRegionName_Parms, NULL );

	return GetCurrentRegionName_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.ThunderMore
// [0x00020002] 
// Parameters infos:

void UWeatherControl::ThunderMore ( )
{
	static UFunction* pFnThunderMore = NULL;

	if ( ! pFnThunderMore )
		pFnThunderMore = (UFunction*) UObject::GObjObjects()->Data[ 57619 ];

	UWeatherControl_execThunderMore_Parms ThunderMore_Parms;

	this->ProcessEvent ( pFnThunderMore, &ThunderMore_Parms, NULL );
};

// Function NowGame.WeatherControl.GetWindMagnitude
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UWeatherControl::GetWindMagnitude ( )
{
	static UFunction* pFnGetWindMagnitude = NULL;

	if ( ! pFnGetWindMagnitude )
		pFnGetWindMagnitude = (UFunction*) UObject::GObjObjects()->Data[ 47705 ];

	UWeatherControl_execGetWindMagnitude_Parms GetWindMagnitude_Parms;

	this->ProcessEvent ( pFnGetWindMagnitude, &GetWindMagnitude_Parms, NULL );

	return GetWindMagnitude_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetWindDirection
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UWeatherControl::GetWindDirection ( )
{
	static UFunction* pFnGetWindDirection = NULL;

	if ( ! pFnGetWindDirection )
		pFnGetWindDirection = (UFunction*) UObject::GObjObjects()->Data[ 47703 ];

	UWeatherControl_execGetWindDirection_Parms GetWindDirection_Parms;

	this->ProcessEvent ( pFnGetWindDirection, &GetWindDirection_Parms, NULL );

	return GetWindDirection_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.IsMagicThunder
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Region                         ( CPF_Parm )

bool UWeatherControl::IsMagicThunder ( int Region )
{
	static UFunction* pFnIsMagicThunder = NULL;

	if ( ! pFnIsMagicThunder )
		pFnIsMagicThunder = (UFunction*) UObject::GObjObjects()->Data[ 57616 ];

	UWeatherControl_execIsMagicThunder_Parms IsMagicThunder_Parms;
	IsMagicThunder_Parms.Region = Region;

	this->ProcessEvent ( pFnIsMagicThunder, &IsMagicThunder_Parms, NULL );

	return IsMagicThunder_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetFog
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Region                         ( CPF_Parm )

int UWeatherControl::GetFog ( int Region )
{
	static UFunction* pFnGetFog = NULL;

	if ( ! pFnGetFog )
		pFnGetFog = (UFunction*) UObject::GObjObjects()->Data[ 48152 ];

	UWeatherControl_execGetFog_Parms GetFog_Parms;
	GetFog_Parms.Region = Region;

	this->ProcessEvent ( pFnGetFog, &GetFog_Parms, NULL );

	return GetFog_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetRain
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Region                         ( CPF_Parm )

int UWeatherControl::GetRain ( int Region )
{
	static UFunction* pFnGetRain = NULL;

	if ( ! pFnGetRain )
		pFnGetRain = (UFunction*) UObject::GObjObjects()->Data[ 47992 ];

	UWeatherControl_execGetRain_Parms GetRain_Parms;
	GetRain_Parms.Region = Region;

	this->ProcessEvent ( pFnGetRain, &GetRain_Parms, NULL );

	return GetRain_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetClouds
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Region                         ( CPF_Parm )

int UWeatherControl::GetClouds ( int Region )
{
	static UFunction* pFnGetClouds = NULL;

	if ( ! pFnGetClouds )
		pFnGetClouds = (UFunction*) UObject::GObjObjects()->Data[ 47990 ];

	UWeatherControl_execGetClouds_Parms GetClouds_Parms;
	GetClouds_Parms.Region = Region;

	this->ProcessEvent ( pFnGetClouds, &GetClouds_Parms, NULL );

	return GetClouds_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.IsLocalMagicThunder
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UWeatherControl::IsLocalMagicThunder ( )
{
	static UFunction* pFnIsLocalMagicThunder = NULL;

	if ( ! pFnIsLocalMagicThunder )
		pFnIsLocalMagicThunder = (UFunction*) UObject::GObjObjects()->Data[ 57611 ];

	UWeatherControl_execIsLocalMagicThunder_Parms IsLocalMagicThunder_Parms;

	this->ProcessEvent ( pFnIsLocalMagicThunder, &IsLocalMagicThunder_Parms, NULL );

	return IsLocalMagicThunder_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetLocalFog
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UWeatherControl::GetLocalFog ( )
{
	static UFunction* pFnGetLocalFog = NULL;

	if ( ! pFnGetLocalFog )
		pFnGetLocalFog = (UFunction*) UObject::GObjObjects()->Data[ 48034 ];

	UWeatherControl_execGetLocalFog_Parms GetLocalFog_Parms;

	this->ProcessEvent ( pFnGetLocalFog, &GetLocalFog_Parms, NULL );

	return GetLocalFog_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetLocalRain
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UWeatherControl::GetLocalRain ( )
{
	static UFunction* pFnGetLocalRain = NULL;

	if ( ! pFnGetLocalRain )
		pFnGetLocalRain = (UFunction*) UObject::GObjObjects()->Data[ 47707 ];

	UWeatherControl_execGetLocalRain_Parms GetLocalRain_Parms;

	this->ProcessEvent ( pFnGetLocalRain, &GetLocalRain_Parms, NULL );

	return GetLocalRain_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetLocalClouds
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UWeatherControl::GetLocalClouds ( )
{
	static UFunction* pFnGetLocalClouds = NULL;

	if ( ! pFnGetLocalClouds )
		pFnGetLocalClouds = (UFunction*) UObject::GObjObjects()->Data[ 48139 ];

	UWeatherControl_execGetLocalClouds_Parms GetLocalClouds_Parms;

	this->ProcessEvent ( pFnGetLocalClouds, &GetLocalClouds_Parms, NULL );

	return GetLocalClouds_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.LeaveRegion
// [0x00020002] 
// Parameters infos:
// int                            Region                         ( CPF_Parm )

void UWeatherControl::LeaveRegion ( int Region )
{
	static UFunction* pFnLeaveRegion = NULL;

	if ( ! pFnLeaveRegion )
		pFnLeaveRegion = (UFunction*) UObject::GObjObjects()->Data[ 57609 ];

	UWeatherControl_execLeaveRegion_Parms LeaveRegion_Parms;
	LeaveRegion_Parms.Region = Region;

	this->ProcessEvent ( pFnLeaveRegion, &LeaveRegion_Parms, NULL );
};

// Function NowGame.WeatherControl.EnterRegion
// [0x00020002] 
// Parameters infos:
// int                            Region                         ( CPF_Parm )

void UWeatherControl::EnterRegion ( int Region )
{
	static UFunction* pFnEnterRegion = NULL;

	if ( ! pFnEnterRegion )
		pFnEnterRegion = (UFunction*) UObject::GObjObjects()->Data[ 57607 ];

	UWeatherControl_execEnterRegion_Parms EnterRegion_Parms;
	EnterRegion_Parms.Region = Region;

	this->ProcessEvent ( pFnEnterRegion, &EnterRegion_Parms, NULL );
};

// Function NowGame.Observer.Notify
// [0x00020000] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void UObserver::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = (UFunction*) UObject::GObjObjects()->Data[ 59879 ];

	UObserver_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.GetGFXHud
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* UOnlineSubsystemNowGame::eventGetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = (UFunction*) UObject::GObjObjects()->Data[ 60601 ];

	UOnlineSubsystemNowGame_eventGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.DrawDebugLineColor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 vStart                         ( CPF_Parm )
// struct FVector                 vEnd                           ( CPF_Parm )
// int                            R                              ( CPF_Parm )
// int                            G                              ( CPF_Parm )
// int                            B                              ( CPF_Parm )

void UOnlineSubsystemNowGame::eventDrawDebugLineColor ( struct FVector vStart, struct FVector vEnd, int R, int G, int B )
{
	static UFunction* pFnDrawDebugLineColor = NULL;

	if ( ! pFnDrawDebugLineColor )
		pFnDrawDebugLineColor = (UFunction*) UObject::GObjObjects()->Data[ 60595 ];

	UOnlineSubsystemNowGame_eventDrawDebugLineColor_Parms DrawDebugLineColor_Parms;
	memcpy ( &DrawDebugLineColor_Parms.vStart, &vStart, 0xC );
	memcpy ( &DrawDebugLineColor_Parms.vEnd, &vEnd, 0xC );
	DrawDebugLineColor_Parms.R = R;
	DrawDebugLineColor_Parms.G = G;
	DrawDebugLineColor_Parms.B = B;

	this->ProcessEvent ( pFnDrawDebugLineColor, &DrawDebugLineColor_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.DrawDebugLine
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 vStart                         ( CPF_Parm )
// struct FVector                 vEnd                           ( CPF_Parm )

void UOnlineSubsystemNowGame::eventDrawDebugLine ( struct FVector vStart, struct FVector vEnd )
{
	static UFunction* pFnDrawDebugLine = NULL;

	if ( ! pFnDrawDebugLine )
		pFnDrawDebugLine = (UFunction*) UObject::GObjObjects()->Data[ 60592 ];

	UOnlineSubsystemNowGame_eventDrawDebugLine_Parms DrawDebugLine_Parms;
	memcpy ( &DrawDebugLine_Parms.vStart, &vStart, 0xC );
	memcpy ( &DrawDebugLine_Parms.vEnd, &vEnd, 0xC );

	this->ProcessEvent ( pFnDrawDebugLine, &DrawDebugLine_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.IsMyTgt
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )

bool UOnlineSubsystemNowGame::eventIsMyTgt ( class AActor* A )
{
	static UFunction* pFnIsMyTgt = NULL;

	if ( ! pFnIsMyTgt )
		pFnIsMyTgt = (UFunction*) UObject::GObjObjects()->Data[ 60589 ];

	UOnlineSubsystemNowGame_eventIsMyTgt_Parms IsMyTgt_Parms;
	IsMyTgt_Parms.A = A;

	this->ProcessEvent ( pFnIsMyTgt, &IsMyTgt_Parms, NULL );

	return IsMyTgt_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ConvertGuidToActor
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// class ANowAtlasAvatarAi*       pOutActor                      ( CPF_Parm | CPF_OutParm )

bool UOnlineSubsystemNowGame::eventConvertGuidToActor ( struct FString petGUID, class ANowAtlasAvatarAi** pOutActor )
{
	static UFunction* pFnConvertGuidToActor = NULL;

	if ( ! pFnConvertGuidToActor )
		pFnConvertGuidToActor = (UFunction*) UObject::GObjObjects()->Data[ 60584 ];

	UOnlineSubsystemNowGame_eventConvertGuidToActor_Parms ConvertGuidToActor_Parms;
	memcpy ( &ConvertGuidToActor_Parms.petGUID, &petGUID, 0xC );

	this->ProcessEvent ( pFnConvertGuidToActor, &ConvertGuidToActor_Parms, NULL );

	if ( pOutActor )
		*pOutActor = ConvertGuidToActor_Parms.pOutActor;

	return ConvertGuidToActor_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.SpawnEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iWhatEffect                    ( CPF_Parm )
// struct FVector                 vFrom                          ( CPF_Parm )
// struct FVector                 vDest                          ( CPF_Parm )

void UOnlineSubsystemNowGame::eventSpawnEffect ( int iWhatEffect, struct FVector vFrom, struct FVector vDest )
{
	static UFunction* pFnSpawnEffect = NULL;

	if ( ! pFnSpawnEffect )
		pFnSpawnEffect = (UFunction*) UObject::GObjObjects()->Data[ 60580 ];

	UOnlineSubsystemNowGame_eventSpawnEffect_Parms SpawnEffect_Parms;
	SpawnEffect_Parms.iWhatEffect = iWhatEffect;
	memcpy ( &SpawnEffect_Parms.vFrom, &vFrom, 0xC );
	memcpy ( &SpawnEffect_Parms.vDest, &vDest, 0xC );

	this->ProcessEvent ( pFnSpawnEffect, &SpawnEffect_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.PlaceMurderCounts
// [0x00020002] 
// Parameters infos:

void UOnlineSubsystemNowGame::PlaceMurderCounts ( )
{
	static UFunction* pFnPlaceMurderCounts = NULL;

	if ( ! pFnPlaceMurderCounts )
		pFnPlaceMurderCounts = (UFunction*) UObject::GObjObjects()->Data[ 60576 ];

	UOnlineSubsystemNowGame_execPlaceMurderCounts_Parms PlaceMurderCounts_Parms;

	this->ProcessEvent ( pFnPlaceMurderCounts, &PlaceMurderCounts_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddClientAvatarObtainedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         ClientAvatarObtainedDelegate   ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::AddClientAvatarObtainedDelegate ( struct FScriptDelegate ClientAvatarObtainedDelegate )
{
	static UFunction* pFnAddClientAvatarObtainedDelegate = NULL;

	if ( ! pFnAddClientAvatarObtainedDelegate )
		pFnAddClientAvatarObtainedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60573 ];

	UOnlineSubsystemNowGame_execAddClientAvatarObtainedDelegate_Parms AddClientAvatarObtainedDelegate_Parms;
	memcpy ( &AddClientAvatarObtainedDelegate_Parms.ClientAvatarObtainedDelegate, &ClientAvatarObtainedDelegate, 0xC );

	this->ProcessEvent ( pFnAddClientAvatarObtainedDelegate, &AddClientAvatarObtainedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnClientAvatarObtained
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnClientAvatarObtained ( )
{
	static UFunction* pFnOnClientAvatarObtained = NULL;

	if ( ! pFnOnClientAvatarObtained )
		pFnOnClientAvatarObtained = (UFunction*) UObject::GObjObjects()->Data[ 60572 ];

	UOnlineSubsystemNowGame_execOnClientAvatarObtained_Parms OnClientAvatarObtained_Parms;

	this->ProcessEvent ( pFnOnClientAvatarObtained, &OnClientAvatarObtained_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearOnGMPetitionUpdatedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         OnGMPetitionUpdatedDelegate    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearOnGMPetitionUpdatedDelegate ( struct FScriptDelegate OnGMPetitionUpdatedDelegate )
{
	static UFunction* pFnClearOnGMPetitionUpdatedDelegate = NULL;

	if ( ! pFnClearOnGMPetitionUpdatedDelegate )
		pFnClearOnGMPetitionUpdatedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60569 ];

	UOnlineSubsystemNowGame_execClearOnGMPetitionUpdatedDelegate_Parms ClearOnGMPetitionUpdatedDelegate_Parms;
	memcpy ( &ClearOnGMPetitionUpdatedDelegate_Parms.OnGMPetitionUpdatedDelegate, &OnGMPetitionUpdatedDelegate, 0xC );

	this->ProcessEvent ( pFnClearOnGMPetitionUpdatedDelegate, &ClearOnGMPetitionUpdatedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearOnClientGuildWarUpdatedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         OnClientGuildWarUpdatedDelegate ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearOnClientGuildWarUpdatedDelegate ( struct FScriptDelegate OnClientGuildWarUpdatedDelegate )
{
	static UFunction* pFnClearOnClientGuildWarUpdatedDelegate = NULL;

	if ( ! pFnClearOnClientGuildWarUpdatedDelegate )
		pFnClearOnClientGuildWarUpdatedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60566 ];

	UOnlineSubsystemNowGame_execClearOnClientGuildWarUpdatedDelegate_Parms ClearOnClientGuildWarUpdatedDelegate_Parms;
	memcpy ( &ClearOnClientGuildWarUpdatedDelegate_Parms.OnClientGuildWarUpdatedDelegate, &OnClientGuildWarUpdatedDelegate, 0xC );

	this->ProcessEvent ( pFnClearOnClientGuildWarUpdatedDelegate, &ClearOnClientGuildWarUpdatedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearOnClientGuildUpdatedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         OnClientGuildUpdatedDelegate   ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearOnClientGuildUpdatedDelegate ( struct FScriptDelegate OnClientGuildUpdatedDelegate )
{
	static UFunction* pFnClearOnClientGuildUpdatedDelegate = NULL;

	if ( ! pFnClearOnClientGuildUpdatedDelegate )
		pFnClearOnClientGuildUpdatedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60563 ];

	UOnlineSubsystemNowGame_execClearOnClientGuildUpdatedDelegate_Parms ClearOnClientGuildUpdatedDelegate_Parms;
	memcpy ( &ClearOnClientGuildUpdatedDelegate_Parms.OnClientGuildUpdatedDelegate, &OnClientGuildUpdatedDelegate, 0xC );

	this->ProcessEvent ( pFnClearOnClientGuildUpdatedDelegate, &ClearOnClientGuildUpdatedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddOnGMPetitionUpdatedDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FScriptDelegate         OnGMPetitionUpdatedDelegate    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::eventAddOnGMPetitionUpdatedDelegate ( struct FScriptDelegate OnGMPetitionUpdatedDelegate )
{
	static UFunction* pFnAddOnGMPetitionUpdatedDelegate = NULL;

	if ( ! pFnAddOnGMPetitionUpdatedDelegate )
		pFnAddOnGMPetitionUpdatedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60560 ];

	UOnlineSubsystemNowGame_eventAddOnGMPetitionUpdatedDelegate_Parms AddOnGMPetitionUpdatedDelegate_Parms;
	memcpy ( &AddOnGMPetitionUpdatedDelegate_Parms.OnGMPetitionUpdatedDelegate, &OnGMPetitionUpdatedDelegate, 0xC );

	this->ProcessEvent ( pFnAddOnGMPetitionUpdatedDelegate, &AddOnGMPetitionUpdatedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddOnClientGuildWarUpdatedDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FScriptDelegate         OnClientGuildWarUpdatedDelegate ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::eventAddOnClientGuildWarUpdatedDelegate ( struct FScriptDelegate OnClientGuildWarUpdatedDelegate )
{
	static UFunction* pFnAddOnClientGuildWarUpdatedDelegate = NULL;

	if ( ! pFnAddOnClientGuildWarUpdatedDelegate )
		pFnAddOnClientGuildWarUpdatedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60557 ];

	UOnlineSubsystemNowGame_eventAddOnClientGuildWarUpdatedDelegate_Parms AddOnClientGuildWarUpdatedDelegate_Parms;
	memcpy ( &AddOnClientGuildWarUpdatedDelegate_Parms.OnClientGuildWarUpdatedDelegate, &OnClientGuildWarUpdatedDelegate, 0xC );

	this->ProcessEvent ( pFnAddOnClientGuildWarUpdatedDelegate, &AddOnClientGuildWarUpdatedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddOnClientGuildUpdatedDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FScriptDelegate         OnClientGuildUpdatedDelegate   ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::eventAddOnClientGuildUpdatedDelegate ( struct FScriptDelegate OnClientGuildUpdatedDelegate )
{
	static UFunction* pFnAddOnClientGuildUpdatedDelegate = NULL;

	if ( ! pFnAddOnClientGuildUpdatedDelegate )
		pFnAddOnClientGuildUpdatedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60554 ];

	UOnlineSubsystemNowGame_eventAddOnClientGuildUpdatedDelegate_Parms AddOnClientGuildUpdatedDelegate_Parms;
	memcpy ( &AddOnClientGuildUpdatedDelegate_Parms.OnClientGuildUpdatedDelegate, &OnClientGuildUpdatedDelegate, 0xC );

	this->ProcessEvent ( pFnAddOnClientGuildUpdatedDelegate, &AddOnClientGuildUpdatedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearOnClientMailRequestDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         OnClientMailRequestDelegate    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearOnClientMailRequestDelegate ( struct FScriptDelegate OnClientMailRequestDelegate )
{
	static UFunction* pFnClearOnClientMailRequestDelegate = NULL;

	if ( ! pFnClearOnClientMailRequestDelegate )
		pFnClearOnClientMailRequestDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60551 ];

	UOnlineSubsystemNowGame_execClearOnClientMailRequestDelegate_Parms ClearOnClientMailRequestDelegate_Parms;
	memcpy ( &ClearOnClientMailRequestDelegate_Parms.OnClientMailRequestDelegate, &OnClientMailRequestDelegate, 0xC );

	this->ProcessEvent ( pFnClearOnClientMailRequestDelegate, &ClearOnClientMailRequestDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddOnClientMailRequestDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FScriptDelegate         OnClientMailRequestDelegate    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::eventAddOnClientMailRequestDelegate ( struct FScriptDelegate OnClientMailRequestDelegate )
{
	static UFunction* pFnAddOnClientMailRequestDelegate = NULL;

	if ( ! pFnAddOnClientMailRequestDelegate )
		pFnAddOnClientMailRequestDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60548 ];

	UOnlineSubsystemNowGame_eventAddOnClientMailRequestDelegate_Parms AddOnClientMailRequestDelegate_Parms;
	memcpy ( &AddOnClientMailRequestDelegate_Parms.OnClientMailRequestDelegate, &OnClientMailRequestDelegate, 0xC );

	this->ProcessEvent ( pFnAddOnClientMailRequestDelegate, &AddOnClientMailRequestDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnClientMailRequest
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnClientMailRequest ( )
{
	static UFunction* pFnOnClientMailRequest = NULL;

	if ( ! pFnOnClientMailRequest )
		pFnOnClientMailRequest = (UFunction*) UObject::GObjObjects()->Data[ 60547 ];

	UOnlineSubsystemNowGame_execOnClientMailRequest_Parms OnClientMailRequest_Parms;

	this->ProcessEvent ( pFnOnClientMailRequest, &OnClientMailRequest_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnClientGuildWarUpdated
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnClientGuildWarUpdated ( )
{
	static UFunction* pFnOnClientGuildWarUpdated = NULL;

	if ( ! pFnOnClientGuildWarUpdated )
		pFnOnClientGuildWarUpdated = (UFunction*) UObject::GObjObjects()->Data[ 60546 ];

	UOnlineSubsystemNowGame_execOnClientGuildWarUpdated_Parms OnClientGuildWarUpdated_Parms;

	this->ProcessEvent ( pFnOnClientGuildWarUpdated, &OnClientGuildWarUpdated_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnGMPetitionUpdated
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnGMPetitionUpdated ( )
{
	static UFunction* pFnOnGMPetitionUpdated = NULL;

	if ( ! pFnOnGMPetitionUpdated )
		pFnOnGMPetitionUpdated = (UFunction*) UObject::GObjObjects()->Data[ 60545 ];

	UOnlineSubsystemNowGame_execOnGMPetitionUpdated_Parms OnGMPetitionUpdated_Parms;

	this->ProcessEvent ( pFnOnGMPetitionUpdated, &OnGMPetitionUpdated_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnClientGuildUpdated
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnClientGuildUpdated ( )
{
	static UFunction* pFnOnClientGuildUpdated = NULL;

	if ( ! pFnOnClientGuildUpdated )
		pFnOnClientGuildUpdated = (UFunction*) UObject::GObjObjects()->Data[ 60544 ];

	UOnlineSubsystemNowGame_execOnClientGuildUpdated_Parms OnClientGuildUpdated_Parms;

	this->ProcessEvent ( pFnOnClientGuildUpdated, &OnClientGuildUpdated_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnOpenInventoryContextMenu
// [0x00120000] 
// Parameters infos:
// int                            iBagID                         ( CPF_Parm )
// int                            iSlotId                        ( CPF_Parm )

void UOnlineSubsystemNowGame::OnOpenInventoryContextMenu ( int iBagID, int iSlotId )
{
	static UFunction* pFnOnOpenInventoryContextMenu = NULL;

	if ( ! pFnOnOpenInventoryContextMenu )
		pFnOnOpenInventoryContextMenu = (UFunction*) UObject::GObjObjects()->Data[ 60541 ];

	UOnlineSubsystemNowGame_execOnOpenInventoryContextMenu_Parms OnOpenInventoryContextMenu_Parms;
	OnOpenInventoryContextMenu_Parms.iBagID = iBagID;
	OnOpenInventoryContextMenu_Parms.iSlotId = iSlotId;

	this->ProcessEvent ( pFnOnOpenInventoryContextMenu, &OnOpenInventoryContextMenu_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.SetLocalPlayerController
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    LocalPlayerController          ( CPF_Parm )

void UOnlineSubsystemNowGame::SetLocalPlayerController ( class ANowPlayerController* LocalPlayerController )
{
	static UFunction* pFnSetLocalPlayerController = NULL;

	if ( ! pFnSetLocalPlayerController )
		pFnSetLocalPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 60539 ];

	UOnlineSubsystemNowGame_execSetLocalPlayerController_Parms SetLocalPlayerController_Parms;
	SetLocalPlayerController_Parms.LocalPlayerController = LocalPlayerController;

	this->ProcessEvent ( pFnSetLocalPlayerController, &SetLocalPlayerController_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.SendServerMessage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::SendServerMessage ( struct FString msg )
{
	static UFunction* pFnSendServerMessage = NULL;

	if ( ! pFnSendServerMessage )
		pFnSendServerMessage = (UFunction*) UObject::GObjObjects()->Data[ 60537 ];

	UOnlineSubsystemNowGame_execSendServerMessage_Parms SendServerMessage_Parms;
	memcpy ( &SendServerMessage_Parms.msg, &msg, 0xC );

	pFnSendServerMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendServerMessage, &SendServerMessage_Parms, NULL );

	pFnSendServerMessage->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.TellBehaviorPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 TellCommand                    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::TellBehaviorPlayer ( struct FString TellCommand )
{
	static UFunction* pFnTellBehaviorPlayer = NULL;

	if ( ! pFnTellBehaviorPlayer )
		pFnTellBehaviorPlayer = (UFunction*) UObject::GObjObjects()->Data[ 60535 ];

	UOnlineSubsystemNowGame_execTellBehaviorPlayer_Parms TellBehaviorPlayer_Parms;
	memcpy ( &TellBehaviorPlayer_Parms.TellCommand, &TellCommand, 0xC );

	pFnTellBehaviorPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTellBehaviorPlayer, &TellBehaviorPlayer_Parms, NULL );

	pFnTellBehaviorPlayer->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetNumStabledPets
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            numPets                        ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetNumStabledPets ( int* numPets )
{
	static UFunction* pFnGetNumStabledPets = NULL;

	if ( ! pFnGetNumStabledPets )
		pFnGetNumStabledPets = (UFunction*) UObject::GObjObjects()->Data[ 60533 ];

	UOnlineSubsystemNowGame_execGetNumStabledPets_Parms GetNumStabledPets_Parms;

	pFnGetNumStabledPets->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumStabledPets, &GetNumStabledPets_Parms, NULL );

	pFnGetNumStabledPets->FunctionFlags |= 0x400;

	if ( numPets )
		*numPets = GetNumStabledPets_Parms.numPets;
};

// Function NowGame.OnlineSubsystemNowGame.GetInventoryContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// int                            itemValue                      ( CPF_Parm | CPF_OutParm )
// int                            ItemQuantity                   ( CPF_Parm | CPF_OutParm )
// unsigned char                  bLocked                        ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetInventoryContentInfo ( int iBag, int iSlot, class UContentInfo** Info, int* itemValue, int* ItemQuantity, unsigned char* bLocked )
{
	static UFunction* pFnGetInventoryContentInfo = NULL;

	if ( ! pFnGetInventoryContentInfo )
		pFnGetInventoryContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 60526 ];

	UOnlineSubsystemNowGame_execGetInventoryContentInfo_Parms GetInventoryContentInfo_Parms;
	GetInventoryContentInfo_Parms.iBag = iBag;
	GetInventoryContentInfo_Parms.iSlot = iSlot;

	pFnGetInventoryContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventoryContentInfo, &GetInventoryContentInfo_Parms, NULL );

	pFnGetInventoryContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetInventoryContentInfo_Parms.Info;

	if ( itemValue )
		*itemValue = GetInventoryContentInfo_Parms.itemValue;

	if ( ItemQuantity )
		*ItemQuantity = GetInventoryContentInfo_Parms.ItemQuantity;

	if ( bLocked )
		*bLocked = GetInventoryContentInfo_Parms.bLocked;
};

// Function NowGame.OnlineSubsystemNowGame.GetInventoryCompactGuid
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetInventoryCompactGuid ( int iSlot, struct FString* ItemGuid )
{
	static UFunction* pFnGetInventoryCompactGuid = NULL;

	if ( ! pFnGetInventoryCompactGuid )
		pFnGetInventoryCompactGuid = (UFunction*) UObject::GObjObjects()->Data[ 60523 ];

	UOnlineSubsystemNowGame_execGetInventoryCompactGuid_Parms GetInventoryCompactGuid_Parms;
	GetInventoryCompactGuid_Parms.iSlot = iSlot;

	pFnGetInventoryCompactGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventoryCompactGuid, &GetInventoryCompactGuid_Parms, NULL );

	pFnGetInventoryCompactGuid->FunctionFlags |= 0x400;

	if ( ItemGuid )
		memcpy ( ItemGuid, &GetInventoryCompactGuid_Parms.ItemGuid, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.ClearTradeChangedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         TradeChangedDelegate           ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearTradeChangedDelegate ( struct FScriptDelegate TradeChangedDelegate )
{
	static UFunction* pFnClearTradeChangedDelegate = NULL;

	if ( ! pFnClearTradeChangedDelegate )
		pFnClearTradeChangedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60520 ];

	UOnlineSubsystemNowGame_execClearTradeChangedDelegate_Parms ClearTradeChangedDelegate_Parms;
	memcpy ( &ClearTradeChangedDelegate_Parms.TradeChangedDelegate, &TradeChangedDelegate, 0xC );

	this->ProcessEvent ( pFnClearTradeChangedDelegate, &ClearTradeChangedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddTradeChangedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         TradeChangedDelegate           ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::AddTradeChangedDelegate ( struct FScriptDelegate TradeChangedDelegate )
{
	static UFunction* pFnAddTradeChangedDelegate = NULL;

	if ( ! pFnAddTradeChangedDelegate )
		pFnAddTradeChangedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60517 ];

	UOnlineSubsystemNowGame_execAddTradeChangedDelegate_Parms AddTradeChangedDelegate_Parms;
	memcpy ( &AddTradeChangedDelegate_Parms.TradeChangedDelegate, &TradeChangedDelegate, 0xC );

	this->ProcessEvent ( pFnAddTradeChangedDelegate, &AddTradeChangedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearMoStatChangedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         MoStatsChangedDelegate         ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearMoStatChangedDelegate ( struct FScriptDelegate MoStatsChangedDelegate )
{
	static UFunction* pFnClearMoStatChangedDelegate = NULL;

	if ( ! pFnClearMoStatChangedDelegate )
		pFnClearMoStatChangedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60514 ];

	UOnlineSubsystemNowGame_execClearMoStatChangedDelegate_Parms ClearMoStatChangedDelegate_Parms;
	memcpy ( &ClearMoStatChangedDelegate_Parms.MoStatsChangedDelegate, &MoStatsChangedDelegate, 0xC );

	this->ProcessEvent ( pFnClearMoStatChangedDelegate, &ClearMoStatChangedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddMoStatChangedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         MoStatsChangedDelegate         ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::AddMoStatChangedDelegate ( struct FScriptDelegate MoStatsChangedDelegate )
{
	static UFunction* pFnAddMoStatChangedDelegate = NULL;

	if ( ! pFnAddMoStatChangedDelegate )
		pFnAddMoStatChangedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60511 ];

	UOnlineSubsystemNowGame_execAddMoStatChangedDelegate_Parms AddMoStatChangedDelegate_Parms;
	memcpy ( &AddMoStatChangedDelegate_Parms.MoStatsChangedDelegate, &MoStatsChangedDelegate, 0xC );

	this->ProcessEvent ( pFnAddMoStatChangedDelegate, &AddMoStatChangedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearFriendListChangedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         FriendListsChangedDelegate     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearFriendListChangedDelegate ( struct FScriptDelegate FriendListsChangedDelegate )
{
	static UFunction* pFnClearFriendListChangedDelegate = NULL;

	if ( ! pFnClearFriendListChangedDelegate )
		pFnClearFriendListChangedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60508 ];

	UOnlineSubsystemNowGame_execClearFriendListChangedDelegate_Parms ClearFriendListChangedDelegate_Parms;
	memcpy ( &ClearFriendListChangedDelegate_Parms.FriendListsChangedDelegate, &FriendListsChangedDelegate, 0xC );

	this->ProcessEvent ( pFnClearFriendListChangedDelegate, &ClearFriendListChangedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddFriendListChangedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         FriendListsChangedDelegate     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::AddFriendListChangedDelegate ( struct FScriptDelegate FriendListsChangedDelegate )
{
	static UFunction* pFnAddFriendListChangedDelegate = NULL;

	if ( ! pFnAddFriendListChangedDelegate )
		pFnAddFriendListChangedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 60505 ];

	UOnlineSubsystemNowGame_execAddFriendListChangedDelegate_Parms AddFriendListChangedDelegate_Parms;
	memcpy ( &AddFriendListChangedDelegate_Parms.FriendListsChangedDelegate, &FriendListsChangedDelegate, 0xC );

	this->ProcessEvent ( pFnAddFriendListChangedDelegate, &AddFriendListChangedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.isChallengingGuild
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            N                              ( CPF_Parm )

bool UOnlineSubsystemNowGame::isChallengingGuild ( int N )
{
	static UFunction* pFnisChallengingGuild = NULL;

	if ( ! pFnisChallengingGuild )
		pFnisChallengingGuild = (UFunction*) UObject::GObjObjects()->Data[ 60501 ];

	UOnlineSubsystemNowGame_execisChallengingGuild_Parms isChallengingGuild_Parms;
	isChallengingGuild_Parms.N = N;

	this->ProcessEvent ( pFnisChallengingGuild, &isChallengingGuild_Parms, NULL );

	return isChallengingGuild_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.getGMPetition
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 petitionSourceName             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 ClaimedBy                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::getGMPetition ( struct FString petitionSourceName, struct FString* Category, struct FString* Description, struct FString* ClaimedBy )
{
	static UFunction* pFngetGMPetition = NULL;

	if ( ! pFngetGMPetition )
		pFngetGMPetition = (UFunction*) UObject::GObjObjects()->Data[ 60494 ];

	UOnlineSubsystemNowGame_execgetGMPetition_Parms getGMPetition_Parms;
	memcpy ( &getGMPetition_Parms.petitionSourceName, &petitionSourceName, 0xC );

	this->ProcessEvent ( pFngetGMPetition, &getGMPetition_Parms, NULL );

	if ( Category )
		memcpy ( Category, &getGMPetition_Parms.Category, 0xC );

	if ( Description )
		memcpy ( Description, &getGMPetition_Parms.Description, 0xC );

	if ( ClaimedBy )
		memcpy ( ClaimedBy, &getGMPetition_Parms.ClaimedBy, 0xC );

	return getGMPetition_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.getGMPetitionAt
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            I                              ( CPF_Parm )
// struct FString                 petitionSourceName             ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 ClaimedBy                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::getGMPetitionAt ( int I, struct FString* petitionSourceName, struct FString* Category, struct FString* Description, struct FString* ClaimedBy )
{
	static UFunction* pFngetGMPetitionAt = NULL;

	if ( ! pFngetGMPetitionAt )
		pFngetGMPetitionAt = (UFunction*) UObject::GObjObjects()->Data[ 60487 ];

	UOnlineSubsystemNowGame_execgetGMPetitionAt_Parms getGMPetitionAt_Parms;
	getGMPetitionAt_Parms.I = I;

	this->ProcessEvent ( pFngetGMPetitionAt, &getGMPetitionAt_Parms, NULL );

	if ( petitionSourceName )
		memcpy ( petitionSourceName, &getGMPetitionAt_Parms.petitionSourceName, 0xC );

	if ( Category )
		memcpy ( Category, &getGMPetitionAt_Parms.Category, 0xC );

	if ( Description )
		memcpy ( Description, &getGMPetitionAt_Parms.Description, 0xC );

	if ( ClaimedBy )
		memcpy ( ClaimedBy, &getGMPetitionAt_Parms.ClaimedBy, 0xC );

	return getGMPetitionAt_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.TellClientPetitionUpdated
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 SourceName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ClaimedBy                      ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  ClosingStatus                  ( CPF_Parm )
// unsigned long                  bConnection                    ( CPF_Parm )

bool UOnlineSubsystemNowGame::eventTellClientPetitionUpdated ( struct FString SourceName, struct FString Category, struct FString Description, struct FString ClaimedBy, unsigned long ClosingStatus, unsigned long bConnection )
{
	static UFunction* pFnTellClientPetitionUpdated = NULL;

	if ( ! pFnTellClientPetitionUpdated )
		pFnTellClientPetitionUpdated = (UFunction*) UObject::GObjObjects()->Data[ 60473 ];

	UOnlineSubsystemNowGame_eventTellClientPetitionUpdated_Parms TellClientPetitionUpdated_Parms;
	memcpy ( &TellClientPetitionUpdated_Parms.SourceName, &SourceName, 0xC );
	memcpy ( &TellClientPetitionUpdated_Parms.Category, &Category, 0xC );
	memcpy ( &TellClientPetitionUpdated_Parms.Description, &Description, 0xC );
	memcpy ( &TellClientPetitionUpdated_Parms.ClaimedBy, &ClaimedBy, 0xC );
	TellClientPetitionUpdated_Parms.ClosingStatus = ClosingStatus;
	TellClientPetitionUpdated_Parms.bConnection = bConnection;

	this->ProcessEvent ( pFnTellClientPetitionUpdated, &TellClientPetitionUpdated_Parms, NULL );

	return TellClientPetitionUpdated_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.TellClientAddParam
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 StringValue                    ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::eventTellClientAddParam ( struct FString StringValue )
{
	static UFunction* pFnTellClientAddParam = NULL;

	if ( ! pFnTellClientAddParam )
		pFnTellClientAddParam = (UFunction*) UObject::GObjObjects()->Data[ 60470 ];

	UOnlineSubsystemNowGame_eventTellClientAddParam_Parms TellClientAddParam_Parms;
	memcpy ( &TellClientAddParam_Parms.StringValue, &StringValue, 0xC );

	this->ProcessEvent ( pFnTellClientAddParam, &TellClientAddParam_Parms, NULL );

	return TellClientAddParam_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.TellClientLastExecutedCommands
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 GMAvatarName                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            timeSinceLastCommand           ( CPF_Parm )

bool UOnlineSubsystemNowGame::eventTellClientLastExecutedCommands ( struct FString GMAvatarName, int timeSinceLastCommand )
{
	static UFunction* pFnTellClientLastExecutedCommands = NULL;

	if ( ! pFnTellClientLastExecutedCommands )
		pFnTellClientLastExecutedCommands = (UFunction*) UObject::GObjObjects()->Data[ 60466 ];

	UOnlineSubsystemNowGame_eventTellClientLastExecutedCommands_Parms TellClientLastExecutedCommands_Parms;
	memcpy ( &TellClientLastExecutedCommands_Parms.GMAvatarName, &GMAvatarName, 0xC );
	TellClientLastExecutedCommands_Parms.timeSinceLastCommand = timeSinceLastCommand;

	this->ProcessEvent ( pFnTellClientLastExecutedCommands, &TellClientLastExecutedCommands_Parms, NULL );

	return TellClientLastExecutedCommands_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ModCommandSetDay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystemNowGame::eventModCommandSetDay ( )
{
	static UFunction* pFnModCommandSetDay = NULL;

	if ( ! pFnModCommandSetDay )
		pFnModCommandSetDay = (UFunction*) UObject::GObjObjects()->Data[ 60465 ];

	UOnlineSubsystemNowGame_eventModCommandSetDay_Parms ModCommandSetDay_Parms;

	this->ProcessEvent ( pFnModCommandSetDay, &ModCommandSetDay_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.setGotPetition
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  hasPetition                    ( CPF_Parm )

void UOnlineSubsystemNowGame::eventsetGotPetition ( unsigned long hasPetition )
{
	static UFunction* pFnsetGotPetition = NULL;

	if ( ! pFnsetGotPetition )
		pFnsetGotPetition = (UFunction*) UObject::GObjObjects()->Data[ 60462 ];

	UOnlineSubsystemNowGame_eventsetGotPetition_Parms setGotPetition_Parms;
	setGotPetition_Parms.hasPetition = hasPetition;

	this->ProcessEvent ( pFnsetGotPetition, &setGotPetition_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.getWarDeclarations
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            N                              ( CPF_Parm )
// struct FString                 guildName                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::getWarDeclarations ( int N, struct FString* guildName )
{
	static UFunction* pFngetWarDeclarations = NULL;

	if ( ! pFngetWarDeclarations )
		pFngetWarDeclarations = (UFunction*) UObject::GObjObjects()->Data[ 60455 ];

	UOnlineSubsystemNowGame_execgetWarDeclarations_Parms getWarDeclarations_Parms;
	getWarDeclarations_Parms.N = N;

	this->ProcessEvent ( pFngetWarDeclarations, &getWarDeclarations_Parms, NULL );

	if ( guildName )
		memcpy ( guildName, &getWarDeclarations_Parms.guildName, 0xC );

	return getWarDeclarations_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.getNrOfGMPetitions
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::getNrOfGMPetitions ( )
{
	static UFunction* pFngetNrOfGMPetitions = NULL;

	if ( ! pFngetNrOfGMPetitions )
		pFngetNrOfGMPetitions = (UFunction*) UObject::GObjObjects()->Data[ 60453 ];

	UOnlineSubsystemNowGame_execgetNrOfGMPetitions_Parms getNrOfGMPetitions_Parms;

	this->ProcessEvent ( pFngetNrOfGMPetitions, &getNrOfGMPetitions_Parms, NULL );

	return getNrOfGMPetitions_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.getNrOfGuildWars
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::getNrOfGuildWars ( )
{
	static UFunction* pFngetNrOfGuildWars = NULL;

	if ( ! pFngetNrOfGuildWars )
		pFngetNrOfGuildWars = (UFunction*) UObject::GObjObjects()->Data[ 60450 ];

	UOnlineSubsystemNowGame_execgetNrOfGuildWars_Parms getNrOfGuildWars_Parms;

	this->ProcessEvent ( pFngetNrOfGuildWars, &getNrOfGuildWars_Parms, NULL );

	return getNrOfGuildWars_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.DoDumpTextToFile
// [0x00020002] 
// Parameters infos:
// struct FString                 outFilename                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 dumpString                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::DoDumpTextToFile ( struct FString outFilename, struct FString dumpString )
{
	static UFunction* pFnDoDumpTextToFile = NULL;

	if ( ! pFnDoDumpTextToFile )
		pFnDoDumpTextToFile = (UFunction*) UObject::GObjObjects()->Data[ 60447 ];

	UOnlineSubsystemNowGame_execDoDumpTextToFile_Parms DoDumpTextToFile_Parms;
	memcpy ( &DoDumpTextToFile_Parms.outFilename, &outFilename, 0xC );
	memcpy ( &DoDumpTextToFile_Parms.dumpString, &dumpString, 0xC );

	this->ProcessEvent ( pFnDoDumpTextToFile, &DoDumpTextToFile_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.RemTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sId                            ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::eventRemTimer ( struct FString sId )
{
	static UFunction* pFnRemTimer = NULL;

	if ( ! pFnRemTimer )
		pFnRemTimer = (UFunction*) UObject::GObjObjects()->Data[ 60445 ];

	UOnlineSubsystemNowGame_eventRemTimer_Parms RemTimer_Parms;
	memcpy ( &RemTimer_Parms.sId, &sId, 0xC );

	this->ProcessEvent ( pFnRemTimer, &RemTimer_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.TriggerPendingTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystemNowGame::eventTriggerPendingTimer ( )
{
	static UFunction* pFnTriggerPendingTimer = NULL;

	if ( ! pFnTriggerPendingTimer )
		pFnTriggerPendingTimer = (UFunction*) UObject::GObjObjects()->Data[ 60444 ];

	UOnlineSubsystemNowGame_eventTriggerPendingTimer_Parms TriggerPendingTimer_Parms;

	this->ProcessEvent ( pFnTriggerPendingTimer, &TriggerPendingTimer_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddTimer
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sId                            ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sDesc                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIcon                          ( CPF_Parm | CPF_NeedCtorLink )
// float                          fTimer                         ( CPF_Parm )
// struct FString                 sCancelDesc                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bDontAutoClose                 ( CPF_OptionalParm | CPF_Parm )

void UOnlineSubsystemNowGame::eventAddTimer ( struct FString sId, struct FString sName, struct FString sDesc, struct FString sIcon, float fTimer, struct FString sCancelDesc, unsigned long bDontAutoClose )
{
	static UFunction* pFnAddTimer = NULL;

	if ( ! pFnAddTimer )
		pFnAddTimer = (UFunction*) UObject::GObjObjects()->Data[ 60429 ];

	UOnlineSubsystemNowGame_eventAddTimer_Parms AddTimer_Parms;
	memcpy ( &AddTimer_Parms.sId, &sId, 0xC );
	memcpy ( &AddTimer_Parms.sName, &sName, 0xC );
	memcpy ( &AddTimer_Parms.sDesc, &sDesc, 0xC );
	memcpy ( &AddTimer_Parms.sIcon, &sIcon, 0xC );
	AddTimer_Parms.fTimer = fTimer;
	memcpy ( &AddTimer_Parms.sCancelDesc, &sCancelDesc, 0xC );
	AddTimer_Parms.bDontAutoClose = bDontAutoClose;

	this->ProcessEvent ( pFnAddTimer, &AddTimer_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddCrossNodeAvatarToList
// [0x00020002] 
// Parameters infos:
// class ANowCrossNodeActor*      NewAvatar                      ( CPF_Parm )

void UOnlineSubsystemNowGame::AddCrossNodeAvatarToList ( class ANowCrossNodeActor* NewAvatar )
{
	static UFunction* pFnAddCrossNodeAvatarToList = NULL;

	if ( ! pFnAddCrossNodeAvatarToList )
		pFnAddCrossNodeAvatarToList = (UFunction*) UObject::GObjObjects()->Data[ 60427 ];

	UOnlineSubsystemNowGame_execAddCrossNodeAvatarToList_Parms AddCrossNodeAvatarToList_Parms;
	AddCrossNodeAvatarToList_Parms.NewAvatar = NewAvatar;

	this->ProcessEvent ( pFnAddCrossNodeAvatarToList, &AddCrossNodeAvatarToList_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddBrokerPoint
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iID                            ( CPF_Parm )
// struct FVector                 vPos                           ( CPF_Parm )

void UOnlineSubsystemNowGame::eventAddBrokerPoint ( struct FString sName, int iID, struct FVector vPos )
{
	static UFunction* pFnAddBrokerPoint = NULL;

	if ( ! pFnAddBrokerPoint )
		pFnAddBrokerPoint = (UFunction*) UObject::GObjObjects()->Data[ 60421 ];

	UOnlineSubsystemNowGame_eventAddBrokerPoint_Parms AddBrokerPoint_Parms;
	memcpy ( &AddBrokerPoint_Parms.sName, &sName, 0xC );
	AddBrokerPoint_Parms.iID = iID;
	memcpy ( &AddBrokerPoint_Parms.vPos, &vPos, 0xC );

	this->ProcessEvent ( pFnAddBrokerPoint, &AddBrokerPoint_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddStartingPoint
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 vPos                           ( CPF_Parm )

void UOnlineSubsystemNowGame::eventAddStartingPoint ( int iID, struct FString sName, struct FVector vPos )
{
	static UFunction* pFnAddStartingPoint = NULL;

	if ( ! pFnAddStartingPoint )
		pFnAddStartingPoint = (UFunction*) UObject::GObjObjects()->Data[ 60416 ];

	UOnlineSubsystemNowGame_eventAddStartingPoint_Parms AddStartingPoint_Parms;
	AddStartingPoint_Parms.iID = iID;
	memcpy ( &AddStartingPoint_Parms.sName, &sName, 0xC );
	memcpy ( &AddStartingPoint_Parms.vPos, &vPos, 0xC );

	this->ProcessEvent ( pFnAddStartingPoint, &AddStartingPoint_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddPriestPoint
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FVector                 vPos                           ( CPF_Parm )

void UOnlineSubsystemNowGame::eventAddPriestPoint ( int iID, struct FVector vPos )
{
	static UFunction* pFnAddPriestPoint = NULL;

	if ( ! pFnAddPriestPoint )
		pFnAddPriestPoint = (UFunction*) UObject::GObjObjects()->Data[ 60412 ];

	UOnlineSubsystemNowGame_eventAddPriestPoint_Parms AddPriestPoint_Parms;
	AddPriestPoint_Parms.iID = iID;
	memcpy ( &AddPriestPoint_Parms.vPos, &vPos, 0xC );

	this->ProcessEvent ( pFnAddPriestPoint, &AddPriestPoint_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.SpawnRelicEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FVector                 vPos                           ( CPF_Parm )
// int                            iAnim                          ( CPF_Parm )

void UOnlineSubsystemNowGame::eventSpawnRelicEffect ( int iID, struct FVector vPos, int iAnim )
{
	static UFunction* pFnSpawnRelicEffect = NULL;

	if ( ! pFnSpawnRelicEffect )
		pFnSpawnRelicEffect = (UFunction*) UObject::GObjObjects()->Data[ 60406 ];

	UOnlineSubsystemNowGame_eventSpawnRelicEffect_Parms SpawnRelicEffect_Parms;
	SpawnRelicEffect_Parms.iID = iID;
	memcpy ( &SpawnRelicEffect_Parms.vPos, &vPos, 0xC );
	SpawnRelicEffect_Parms.iAnim = iAnim;

	this->ProcessEvent ( pFnSpawnRelicEffect, &SpawnRelicEffect_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.RemRelicPoint
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iID                            ( CPF_Parm )

void UOnlineSubsystemNowGame::eventRemRelicPoint ( int iID )
{
	static UFunction* pFnRemRelicPoint = NULL;

	if ( ! pFnRemRelicPoint )
		pFnRemRelicPoint = (UFunction*) UObject::GObjObjects()->Data[ 60403 ];

	UOnlineSubsystemNowGame_eventRemRelicPoint_Parms RemRelicPoint_Parms;
	RemRelicPoint_Parms.iID = iID;

	this->ProcessEvent ( pFnRemRelicPoint, &RemRelicPoint_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnFriendListsChanged
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnFriendListsChanged ( )
{
	static UFunction* pFnOnFriendListsChanged = NULL;

	if ( ! pFnOnFriendListsChanged )
		pFnOnFriendListsChanged = (UFunction*) UObject::GObjObjects()->Data[ 60402 ];

	UOnlineSubsystemNowGame_execOnFriendListsChanged_Parms OnFriendListsChanged_Parms;

	this->ProcessEvent ( pFnOnFriendListsChanged, &OnFriendListsChanged_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnMoStatsChanged
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnMoStatsChanged ( )
{
	static UFunction* pFnOnMoStatsChanged = NULL;

	if ( ! pFnOnMoStatsChanged )
		pFnOnMoStatsChanged = (UFunction*) UObject::GObjObjects()->Data[ 60401 ];

	UOnlineSubsystemNowGame_execOnMoStatsChanged_Parms OnMoStatsChanged_Parms;

	this->ProcessEvent ( pFnOnMoStatsChanged, &OnMoStatsChanged_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnTradeChanged
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnTradeChanged ( )
{
	static UFunction* pFnOnTradeChanged = NULL;

	if ( ! pFnOnTradeChanged )
		pFnOnTradeChanged = (UFunction*) UObject::GObjObjects()->Data[ 60400 ];

	UOnlineSubsystemNowGame_execOnTradeChanged_Parms OnTradeChanged_Parms;

	this->ProcessEvent ( pFnOnTradeChanged, &OnTradeChanged_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.GetStatManager
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UStatManager*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UStatManager* UOnlineSubsystemNowGame::GetStatManager ( )
{
	static UFunction* pFnGetStatManager = NULL;

	if ( ! pFnGetStatManager )
		pFnGetStatManager = (UFunction*) UObject::GObjObjects()->Data[ 60398 ];

	UOnlineSubsystemNowGame_execGetStatManager_Parms GetStatManager_Parms;

	pFnGetStatManager->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatManager, &GetStatManager_Parms, NULL );

	pFnGetStatManager->FunctionFlags |= 0x400;

	return GetStatManager_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.SetActivateCrossNodeAvatarList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         pActor                         ( CPF_Parm )
// unsigned long                  bActive                        ( CPF_Parm )

void UOnlineSubsystemNowGame::SetActivateCrossNodeAvatarList ( class ANowAtlasAvatar* pActor, unsigned long bActive )
{
	static UFunction* pFnSetActivateCrossNodeAvatarList = NULL;

	if ( ! pFnSetActivateCrossNodeAvatarList )
		pFnSetActivateCrossNodeAvatarList = (UFunction*) UObject::GObjObjects()->Data[ 60395 ];

	UOnlineSubsystemNowGame_execSetActivateCrossNodeAvatarList_Parms SetActivateCrossNodeAvatarList_Parms;
	SetActivateCrossNodeAvatarList_Parms.pActor = pActor;
	SetActivateCrossNodeAvatarList_Parms.bActive = bActive;

	pFnSetActivateCrossNodeAvatarList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActivateCrossNodeAvatarList, &SetActivateCrossNodeAvatarList_Parms, NULL );

	pFnSetActivateCrossNodeAvatarList->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.CheckCrossNodeAvatars
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::CheckCrossNodeAvatars ( )
{
	static UFunction* pFnCheckCrossNodeAvatars = NULL;

	if ( ! pFnCheckCrossNodeAvatars )
		pFnCheckCrossNodeAvatars = (UFunction*) UObject::GObjObjects()->Data[ 60394 ];

	UOnlineSubsystemNowGame_execCheckCrossNodeAvatars_Parms CheckCrossNodeAvatars_Parms;

	pFnCheckCrossNodeAvatars->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckCrossNodeAvatars, &CheckCrossNodeAvatars_Parms, NULL );

	pFnCheckCrossNodeAvatars->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.HandlePotionTickUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                Pawn                           ( CPF_Parm )

void UOnlineSubsystemNowGame::HandlePotionTickUpdate ( class ANowPawn* Pawn )
{
	static UFunction* pFnHandlePotionTickUpdate = NULL;

	if ( ! pFnHandlePotionTickUpdate )
		pFnHandlePotionTickUpdate = (UFunction*) UObject::GObjObjects()->Data[ 60392 ];

	UOnlineSubsystemNowGame_execHandlePotionTickUpdate_Parms HandlePotionTickUpdate_Parms;
	HandlePotionTickUpdate_Parms.Pawn = Pawn;

	pFnHandlePotionTickUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHandlePotionTickUpdate, &HandlePotionTickUpdate_Parms, NULL );

	pFnHandlePotionTickUpdate->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetGuidFromItemName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetGuidFromItemName ( struct FString sName )
{
	static UFunction* pFnGetGuidFromItemName = NULL;

	if ( ! pFnGetGuidFromItemName )
		pFnGetGuidFromItemName = (UFunction*) UObject::GObjObjects()->Data[ 46001 ];

	UOnlineSubsystemNowGame_execGetGuidFromItemName_Parms GetGuidFromItemName_Parms;
	memcpy ( &GetGuidFromItemName_Parms.sName, &sName, 0xC );

	pFnGetGuidFromItemName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuidFromItemName, &GetGuidFromItemName_Parms, NULL );

	pFnGetGuidFromItemName->FunctionFlags |= 0x400;

	return GetGuidFromItemName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.LogoutCleanup
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::LogoutCleanup ( )
{
	static UFunction* pFnLogoutCleanup = NULL;

	if ( ! pFnLogoutCleanup )
		pFnLogoutCleanup = (UFunction*) UObject::GObjObjects()->Data[ 60390 ];

	UOnlineSubsystemNowGame_execLogoutCleanup_Parms LogoutCleanup_Parms;

	pFnLogoutCleanup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogoutCleanup, &LogoutCleanup_Parms, NULL );

	pFnLogoutCleanup->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PlayerLogout
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::PlayerLogout ( )
{
	static UFunction* pFnPlayerLogout = NULL;

	if ( ! pFnPlayerLogout )
		pFnPlayerLogout = (UFunction*) UObject::GObjObjects()->Data[ 60389 ];

	UOnlineSubsystemNowGame_execPlayerLogout_Parms PlayerLogout_Parms;

	pFnPlayerLogout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayerLogout, &PlayerLogout_Parms, NULL );

	pFnPlayerLogout->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetBookInfoString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetBookInfoString ( )
{
	static UFunction* pFnGetBookInfoString = NULL;

	if ( ! pFnGetBookInfoString )
		pFnGetBookInfoString = (UFunction*) UObject::GObjObjects()->Data[ 60387 ];

	UOnlineSubsystemNowGame_execGetBookInfoString_Parms GetBookInfoString_Parms;

	pFnGetBookInfoString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBookInfoString, &GetBookInfoString_Parms, NULL );

	pFnGetBookInfoString->FunctionFlags |= 0x400;

	return GetBookInfoString_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.HasItemWithContentGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sItemContentGuid               ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::HasItemWithContentGuid ( struct FString sItemContentGuid )
{
	static UFunction* pFnHasItemWithContentGuid = NULL;

	if ( ! pFnHasItemWithContentGuid )
		pFnHasItemWithContentGuid = (UFunction*) UObject::GObjObjects()->Data[ 60384 ];

	UOnlineSubsystemNowGame_execHasItemWithContentGuid_Parms HasItemWithContentGuid_Parms;
	memcpy ( &HasItemWithContentGuid_Parms.sItemContentGuid, &sItemContentGuid, 0xC );

	pFnHasItemWithContentGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasItemWithContentGuid, &HasItemWithContentGuid_Parms, NULL );

	pFnHasItemWithContentGuid->FunctionFlags |= 0x400;

	return HasItemWithContentGuid_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetAllBagsJSon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetAllBagsJSon ( )
{
	static UFunction* pFnGetAllBagsJSon = NULL;

	if ( ! pFnGetAllBagsJSon )
		pFnGetAllBagsJSon = (UFunction*) UObject::GObjObjects()->Data[ 53886 ];

	UOnlineSubsystemNowGame_execGetAllBagsJSon_Parms GetAllBagsJSon_Parms;

	pFnGetAllBagsJSon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAllBagsJSon, &GetAllBagsJSon_Parms, NULL );

	pFnGetAllBagsJSon->FunctionFlags |= 0x400;

	return GetAllBagsJSon_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetInventoryLimitString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetInventoryLimitString ( )
{
	static UFunction* pFnGetInventoryLimitString = NULL;

	if ( ! pFnGetInventoryLimitString )
		pFnGetInventoryLimitString = (UFunction*) UObject::GObjObjects()->Data[ 53176 ];

	UOnlineSubsystemNowGame_execGetInventoryLimitString_Parms GetInventoryLimitString_Parms;

	pFnGetInventoryLimitString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventoryLimitString, &GetInventoryLimitString_Parms, NULL );

	pFnGetInventoryLimitString->FunctionFlags |= 0x400;

	return GetInventoryLimitString_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetDepositLimitString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iDeposit                       ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetDepositLimitString ( int iDeposit )
{
	static UFunction* pFnGetDepositLimitString = NULL;

	if ( ! pFnGetDepositLimitString )
		pFnGetDepositLimitString = (UFunction*) UObject::GObjObjects()->Data[ 53178 ];

	UOnlineSubsystemNowGame_execGetDepositLimitString_Parms GetDepositLimitString_Parms;
	GetDepositLimitString_Parms.iDeposit = iDeposit;

	pFnGetDepositLimitString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDepositLimitString, &GetDepositLimitString_Parms, NULL );

	pFnGetDepositLimitString->FunctionFlags |= 0x400;

	return GetDepositLimitString_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ItemContentMiscNameFromGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::ItemContentMiscNameFromGuid ( struct FString sGuid )
{
	static UFunction* pFnItemContentMiscNameFromGuid = NULL;

	if ( ! pFnItemContentMiscNameFromGuid )
		pFnItemContentMiscNameFromGuid = (UFunction*) UObject::GObjObjects()->Data[ 54549 ];

	UOnlineSubsystemNowGame_execItemContentMiscNameFromGuid_Parms ItemContentMiscNameFromGuid_Parms;
	memcpy ( &ItemContentMiscNameFromGuid_Parms.sGuid, &sGuid, 0xC );

	pFnItemContentMiscNameFromGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnItemContentMiscNameFromGuid, &ItemContentMiscNameFromGuid_Parms, NULL );

	pFnItemContentMiscNameFromGuid->FunctionFlags |= 0x400;

	return ItemContentMiscNameFromGuid_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ItemContentNameFromGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::ItemContentNameFromGuid ( struct FString sGuid )
{
	static UFunction* pFnItemContentNameFromGuid = NULL;

	if ( ! pFnItemContentNameFromGuid )
		pFnItemContentNameFromGuid = (UFunction*) UObject::GObjObjects()->Data[ 60379 ];

	UOnlineSubsystemNowGame_execItemContentNameFromGuid_Parms ItemContentNameFromGuid_Parms;
	memcpy ( &ItemContentNameFromGuid_Parms.sGuid, &sGuid, 0xC );

	pFnItemContentNameFromGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnItemContentNameFromGuid, &ItemContentNameFromGuid_Parms, NULL );

	pFnItemContentNameFromGuid->FunctionFlags |= 0x400;

	return ItemContentNameFromGuid_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetAvatarJSon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetAvatarJSon ( )
{
	static UFunction* pFnGetAvatarJSon = NULL;

	if ( ! pFnGetAvatarJSon )
		pFnGetAvatarJSon = (UFunction*) UObject::GObjObjects()->Data[ 53196 ];

	UOnlineSubsystemNowGame_execGetAvatarJSon_Parms GetAvatarJSon_Parms;

	pFnGetAvatarJSon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAvatarJSon, &GetAvatarJSon_Parms, NULL );

	pFnGetAvatarJSon->FunctionFlags |= 0x400;

	return GetAvatarJSon_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ExtractJSonFromString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sText                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::ExtractJSonFromString ( struct FString sText )
{
	static UFunction* pFnExtractJSonFromString = NULL;

	if ( ! pFnExtractJSonFromString )
		pFnExtractJSonFromString = (UFunction*) UObject::GObjObjects()->Data[ 60376 ];

	UOnlineSubsystemNowGame_execExtractJSonFromString_Parms ExtractJSonFromString_Parms;
	memcpy ( &ExtractJSonFromString_Parms.sText, &sText, 0xC );

	pFnExtractJSonFromString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExtractJSonFromString, &ExtractJSonFromString_Parms, NULL );

	pFnExtractJSonFromString->FunctionFlags |= 0x400;

	return ExtractJSonFromString_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.SendPing
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::SendPing ( )
{
	static UFunction* pFnSendPing = NULL;

	if ( ! pFnSendPing )
		pFnSendPing = (UFunction*) UObject::GObjObjects()->Data[ 60375 ];

	UOnlineSubsystemNowGame_execSendPing_Parms SendPing_Parms;

	pFnSendPing->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendPing, &SendPing_Parms, NULL );

	pFnSendPing->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetGuildPP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetGuildPP ( )
{
	static UFunction* pFnGetGuildPP = NULL;

	if ( ! pFnGetGuildPP )
		pFnGetGuildPP = (UFunction*) UObject::GObjObjects()->Data[ 53724 ];

	UOnlineSubsystemNowGame_execGetGuildPP_Parms GetGuildPP_Parms;

	pFnGetGuildPP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuildPP, &GetGuildPP_Parms, NULL );

	pFnGetGuildPP->FunctionFlags |= 0x400;

	return GetGuildPP_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.UpdatePetSlots
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::UpdatePetSlots ( )
{
	static UFunction* pFnUpdatePetSlots = NULL;

	if ( ! pFnUpdatePetSlots )
		pFnUpdatePetSlots = (UFunction*) UObject::GObjObjects()->Data[ 60374 ];

	UOnlineSubsystemNowGame_execUpdatePetSlots_Parms UpdatePetSlots_Parms;

	pFnUpdatePetSlots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePetSlots, &UpdatePetSlots_Parms, NULL );

	pFnUpdatePetSlots->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.RequestPylonInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::RequestPylonInfo ( )
{
	static UFunction* pFnRequestPylonInfo = NULL;

	if ( ! pFnRequestPylonInfo )
		pFnRequestPylonInfo = (UFunction*) UObject::GObjObjects()->Data[ 60373 ];

	UOnlineSubsystemNowGame_execRequestPylonInfo_Parms RequestPylonInfo_Parms;

	pFnRequestPylonInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPylonInfo, &RequestPylonInfo_Parms, NULL );

	pFnRequestPylonInfo->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.getEnabledStats
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       vStatNames                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< int >                  vStatValue                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::getEnabledStats ( TArray< struct FString >* vStatNames, TArray< int >* vStatValue )
{
	static UFunction* pFngetEnabledStats = NULL;

	if ( ! pFngetEnabledStats )
		pFngetEnabledStats = (UFunction*) UObject::GObjObjects()->Data[ 60368 ];

	UOnlineSubsystemNowGame_execgetEnabledStats_Parms getEnabledStats_Parms;

	pFngetEnabledStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetEnabledStats, &getEnabledStats_Parms, NULL );

	pFngetEnabledStats->FunctionFlags |= 0x400;

	if ( vStatNames )
		memcpy ( vStatNames, &getEnabledStats_Parms.vStatNames, 0xC );

	if ( vStatValue )
		memcpy ( vStatValue, &getEnabledStats_Parms.vStatValue, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.enableStatOnClient
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ContentName                    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::enableStatOnClient ( struct FString ContentName )
{
	static UFunction* pFnenableStatOnClient = NULL;

	if ( ! pFnenableStatOnClient )
		pFnenableStatOnClient = (UFunction*) UObject::GObjObjects()->Data[ 60366 ];

	UOnlineSubsystemNowGame_execenableStatOnClient_Parms enableStatOnClient_Parms;
	memcpy ( &enableStatOnClient_Parms.ContentName, &ContentName, 0xC );

	pFnenableStatOnClient->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnenableStatOnClient, &enableStatOnClient_Parms, NULL );

	pFnenableStatOnClient->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ClearSkills
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::ClearSkills ( )
{
	static UFunction* pFnClearSkills = NULL;

	if ( ! pFnClearSkills )
		pFnClearSkills = (UFunction*) UObject::GObjObjects()->Data[ 60365 ];

	UOnlineSubsystemNowGame_execClearSkills_Parms ClearSkills_Parms;

	pFnClearSkills->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearSkills, &ClearSkills_Parms, NULL );

	pFnClearSkills->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetNrLockpicks
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetNrLockpicks ( )
{
	static UFunction* pFnGetNrLockpicks = NULL;

	if ( ! pFnGetNrLockpicks )
		pFnGetNrLockpicks = (UFunction*) UObject::GObjObjects()->Data[ 56103 ];

	UOnlineSubsystemNowGame_execGetNrLockpicks_Parms GetNrLockpicks_Parms;

	pFnGetNrLockpicks->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNrLockpicks, &GetNrLockpicks_Parms, NULL );

	pFnGetNrLockpicks->FunctionFlags |= 0x400;

	return GetNrLockpicks_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetTotalCumprumAmount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetTotalCumprumAmount ( )
{
	static UFunction* pFnGetTotalCumprumAmount = NULL;

	if ( ! pFnGetTotalCumprumAmount )
		pFnGetTotalCumprumAmount = (UFunction*) UObject::GObjObjects()->Data[ 53722 ];

	UOnlineSubsystemNowGame_execGetTotalCumprumAmount_Parms GetTotalCumprumAmount_Parms;

	pFnGetTotalCumprumAmount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTotalCumprumAmount, &GetTotalCumprumAmount_Parms, NULL );

	pFnGetTotalCumprumAmount->FunctionFlags |= 0x400;

	return GetTotalCumprumAmount_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSilverAmount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetSilverAmount ( )
{
	static UFunction* pFnGetSilverAmount = NULL;

	if ( ! pFnGetSilverAmount )
		pFnGetSilverAmount = (UFunction*) UObject::GObjObjects()->Data[ 60363 ];

	UOnlineSubsystemNowGame_execGetSilverAmount_Parms GetSilverAmount_Parms;

	pFnGetSilverAmount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSilverAmount, &GetSilverAmount_Parms, NULL );

	pFnGetSilverAmount->FunctionFlags |= 0x400;

	return GetSilverAmount_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.CheckGotSilver
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )

bool UOnlineSubsystemNowGame::CheckGotSilver ( int Amount )
{
	static UFunction* pFnCheckGotSilver = NULL;

	if ( ! pFnCheckGotSilver )
		pFnCheckGotSilver = (UFunction*) UObject::GObjObjects()->Data[ 60360 ];

	UOnlineSubsystemNowGame_execCheckGotSilver_Parms CheckGotSilver_Parms;
	CheckGotSilver_Parms.Amount = Amount;

	pFnCheckGotSilver->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckGotSilver, &CheckGotSilver_Parms, NULL );

	pFnCheckGotSilver->FunctionFlags |= 0x400;

	return CheckGotSilver_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.IsItemFishItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Type                           ( CPF_Parm )
// struct FString                 strguid                        ( CPF_Parm | CPF_NeedCtorLink )

float UOnlineSubsystemNowGame::IsItemFishItem ( int Type, struct FString strguid )
{
	static UFunction* pFnIsItemFishItem = NULL;

	if ( ! pFnIsItemFishItem )
		pFnIsItemFishItem = (UFunction*) UObject::GObjObjects()->Data[ 60356 ];

	UOnlineSubsystemNowGame_execIsItemFishItem_Parms IsItemFishItem_Parms;
	IsItemFishItem_Parms.Type = Type;
	memcpy ( &IsItemFishItem_Parms.strguid, &strguid, 0xC );

	pFnIsItemFishItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsItemFishItem, &IsItemFishItem_Parms, NULL );

	pFnIsItemFishItem->FunctionFlags |= 0x400;

	return IsItemFishItem_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.IsItemBait
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 strguid                        ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::IsItemBait ( struct FString strguid )
{
	static UFunction* pFnIsItemBait = NULL;

	if ( ! pFnIsItemBait )
		pFnIsItemBait = (UFunction*) UObject::GObjObjects()->Data[ 60353 ];

	UOnlineSubsystemNowGame_execIsItemBait_Parms IsItemBait_Parms;
	memcpy ( &IsItemBait_Parms.strguid, &strguid, 0xC );

	pFnIsItemBait->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsItemBait, &IsItemBait_Parms, NULL );

	pFnIsItemBait->FunctionFlags |= 0x400;

	return IsItemBait_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.TellBFishingCombat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            I                              ( CPF_Parm )
// struct FString                 strguid                        ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::TellBFishingCombat ( int I, struct FString strguid )
{
	static UFunction* pFnTellBFishingCombat = NULL;

	if ( ! pFnTellBFishingCombat )
		pFnTellBFishingCombat = (UFunction*) UObject::GObjObjects()->Data[ 60350 ];

	UOnlineSubsystemNowGame_execTellBFishingCombat_Parms TellBFishingCombat_Parms;
	TellBFishingCombat_Parms.I = I;
	memcpy ( &TellBFishingCombat_Parms.strguid, &strguid, 0xC );

	pFnTellBFishingCombat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTellBFishingCombat, &TellBFishingCombat_Parms, NULL );

	pFnTellBFishingCombat->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetFishContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetFishContentInfo ( int iBag, int iSlot, class UContentInfo** Info )
{
	static UFunction* pFnGetFishContentInfo = NULL;

	if ( ! pFnGetFishContentInfo )
		pFnGetFishContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 60346 ];

	UOnlineSubsystemNowGame_execGetFishContentInfo_Parms GetFishContentInfo_Parms;
	GetFishContentInfo_Parms.iBag = iBag;
	GetFishContentInfo_Parms.iSlot = iSlot;

	pFnGetFishContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFishContentInfo, &GetFishContentInfo_Parms, NULL );

	pFnGetFishContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetFishContentInfo_Parms.Info;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillIsActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::GetSkillIsActive ( int iSlot )
{
	static UFunction* pFnGetSkillIsActive = NULL;

	if ( ! pFnGetSkillIsActive )
		pFnGetSkillIsActive = (UFunction*) UObject::GObjObjects()->Data[ 60343 ];

	UOnlineSubsystemNowGame_execGetSkillIsActive_Parms GetSkillIsActive_Parms;
	GetSkillIsActive_Parms.iSlot = iSlot;

	pFnGetSkillIsActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillIsActive, &GetSkillIsActive_Parms, NULL );

	pFnGetSkillIsActive->FunctionFlags |= 0x400;

	return GetSkillIsActive_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

float UOnlineSubsystemNowGame::GetSkillValue ( int iSlot )
{
	static UFunction* pFnGetSkillValue = NULL;

	if ( ! pFnGetSkillValue )
		pFnGetSkillValue = (UFunction*) UObject::GObjObjects()->Data[ 60340 ];

	UOnlineSubsystemNowGame_execGetSkillValue_Parms GetSkillValue_Parms;
	GetSkillValue_Parms.iSlot = iSlot;

	pFnGetSkillValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillValue, &GetSkillValue_Parms, NULL );

	pFnGetSkillValue->FunctionFlags |= 0x400;

	return GetSkillValue_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillGroup
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetSkillGroup ( int iSlot )
{
	static UFunction* pFnGetSkillGroup = NULL;

	if ( ! pFnGetSkillGroup )
		pFnGetSkillGroup = (UFunction*) UObject::GObjObjects()->Data[ 60337 ];

	UOnlineSubsystemNowGame_execGetSkillGroup_Parms GetSkillGroup_Parms;
	GetSkillGroup_Parms.iSlot = iSlot;

	pFnGetSkillGroup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillGroup, &GetSkillGroup_Parms, NULL );

	pFnGetSkillGroup->FunctionFlags |= 0x400;

	return GetSkillGroup_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetSkillContentInfo ( int iSlot, class UContentInfo** Info )
{
	static UFunction* pFnGetSkillContentInfo = NULL;

	if ( ! pFnGetSkillContentInfo )
		pFnGetSkillContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 60334 ];

	UOnlineSubsystemNowGame_execGetSkillContentInfo_Parms GetSkillContentInfo_Parms;
	GetSkillContentInfo_Parms.iSlot = iSlot;

	pFnGetSkillContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillContentInfo, &GetSkillContentInfo_Parms, NULL );

	pFnGetSkillContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetSkillContentInfo_Parms.Info;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetSkillName ( int iSlot )
{
	static UFunction* pFnGetSkillName = NULL;

	if ( ! pFnGetSkillName )
		pFnGetSkillName = (UFunction*) UObject::GObjObjects()->Data[ 60331 ];

	UOnlineSubsystemNowGame_execGetSkillName_Parms GetSkillName_Parms;
	GetSkillName_Parms.iSlot = iSlot;

	pFnGetSkillName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillName, &GetSkillName_Parms, NULL );

	pFnGetSkillName->FunctionFlags |= 0x400;

	return GetSkillName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetNumSkills
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetNumSkills ( )
{
	static UFunction* pFnGetNumSkills = NULL;

	if ( ! pFnGetNumSkills )
		pFnGetNumSkills = (UFunction*) UObject::GObjObjects()->Data[ 60329 ];

	UOnlineSubsystemNowGame_execGetNumSkills_Parms GetNumSkills_Parms;

	pFnGetNumSkills->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumSkills, &GetNumSkills_Parms, NULL );

	pFnGetNumSkills->FunctionFlags |= 0x400;

	return GetNumSkills_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.IsItemConstructionMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::IsItemConstructionMaterial ( struct FString sGuid )
{
	static UFunction* pFnIsItemConstructionMaterial = NULL;

	if ( ! pFnIsItemConstructionMaterial )
		pFnIsItemConstructionMaterial = (UFunction*) UObject::GObjObjects()->Data[ 53905 ];

	UOnlineSubsystemNowGame_execIsItemConstructionMaterial_Parms IsItemConstructionMaterial_Parms;
	memcpy ( &IsItemConstructionMaterial_Parms.sGuid, &sGuid, 0xC );

	pFnIsItemConstructionMaterial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsItemConstructionMaterial, &IsItemConstructionMaterial_Parms, NULL );

	pFnIsItemConstructionMaterial->FunctionFlags |= 0x400;

	return IsItemConstructionMaterial_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.CheckRefineMaterialsNew
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Item1                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Item2                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Item3                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::CheckRefineMaterialsNew ( struct FString Item1, struct FString Item2, struct FString Item3, struct FString* Message )
{
	static UFunction* pFnCheckRefineMaterialsNew = NULL;

	if ( ! pFnCheckRefineMaterialsNew )
		pFnCheckRefineMaterialsNew = (UFunction*) UObject::GObjObjects()->Data[ 54481 ];

	UOnlineSubsystemNowGame_execCheckRefineMaterialsNew_Parms CheckRefineMaterialsNew_Parms;
	memcpy ( &CheckRefineMaterialsNew_Parms.Item1, &Item1, 0xC );
	memcpy ( &CheckRefineMaterialsNew_Parms.Item2, &Item2, 0xC );
	memcpy ( &CheckRefineMaterialsNew_Parms.Item3, &Item3, 0xC );

	pFnCheckRefineMaterialsNew->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckRefineMaterialsNew, &CheckRefineMaterialsNew_Parms, NULL );

	pFnCheckRefineMaterialsNew->FunctionFlags |= 0x400;

	if ( Message )
		memcpy ( Message, &CheckRefineMaterialsNew_Parms.Message, 0xC );

	return CheckRefineMaterialsNew_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.CheckDevicePrerequisites
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 DeviceName                     ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::CheckDevicePrerequisites ( struct FString DeviceName )
{
	static UFunction* pFnCheckDevicePrerequisites = NULL;

	if ( ! pFnCheckDevicePrerequisites )
		pFnCheckDevicePrerequisites = (UFunction*) UObject::GObjObjects()->Data[ 60321 ];

	UOnlineSubsystemNowGame_execCheckDevicePrerequisites_Parms CheckDevicePrerequisites_Parms;
	memcpy ( &CheckDevicePrerequisites_Parms.DeviceName, &DeviceName, 0xC );

	pFnCheckDevicePrerequisites->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckDevicePrerequisites, &CheckDevicePrerequisites_Parms, NULL );

	pFnCheckDevicePrerequisites->FunctionFlags |= 0x400;

	return CheckDevicePrerequisites_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetReagentContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )
// struct FString                 impagepath                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetReagentContentInfo ( int SpellID, struct FString impagepath )
{
	static UFunction* pFnGetReagentContentInfo = NULL;

	if ( ! pFnGetReagentContentInfo )
		pFnGetReagentContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 60318 ];

	UOnlineSubsystemNowGame_execGetReagentContentInfo_Parms GetReagentContentInfo_Parms;
	GetReagentContentInfo_Parms.SpellID = SpellID;
	memcpy ( &GetReagentContentInfo_Parms.impagepath, &impagepath, 0xC );

	pFnGetReagentContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReagentContentInfo, &GetReagentContentInfo_Parms, NULL );

	pFnGetReagentContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.LocalPickSpell
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )
// int                            spellSchoolPage                ( CPF_Parm )

void UOnlineSubsystemNowGame::LocalPickSpell ( int SpellID, int spellSchoolPage )
{
	static UFunction* pFnLocalPickSpell = NULL;

	if ( ! pFnLocalPickSpell )
		pFnLocalPickSpell = (UFunction*) UObject::GObjObjects()->Data[ 60315 ];

	UOnlineSubsystemNowGame_execLocalPickSpell_Parms LocalPickSpell_Parms;
	LocalPickSpell_Parms.SpellID = SpellID;
	LocalPickSpell_Parms.spellSchoolPage = spellSchoolPage;

	pFnLocalPickSpell->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLocalPickSpell, &LocalPickSpell_Parms, NULL );

	pFnLocalPickSpell->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetActionSlotInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 strguid                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

int UOnlineSubsystemNowGame::GetActionSlotInfo ( int iSlot, struct FString* strguid )
{
	static UFunction* pFnGetActionSlotInfo = NULL;

	if ( ! pFnGetActionSlotInfo )
		pFnGetActionSlotInfo = (UFunction*) UObject::GObjObjects()->Data[ 60311 ];

	UOnlineSubsystemNowGame_execGetActionSlotInfo_Parms GetActionSlotInfo_Parms;
	GetActionSlotInfo_Parms.iSlot = iSlot;

	pFnGetActionSlotInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActionSlotInfo, &GetActionSlotInfo_Parms, NULL );

	pFnGetActionSlotInfo->FunctionFlags |= 0x400;

	if ( strguid )
		memcpy ( strguid, &GetActionSlotInfo_Parms.strguid, 0xC );

	return GetActionSlotInfo_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSpellID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

int UOnlineSubsystemNowGame::GetSpellID ( int iSlot )
{
	static UFunction* pFnGetSpellID = NULL;

	if ( ! pFnGetSpellID )
		pFnGetSpellID = (UFunction*) UObject::GObjObjects()->Data[ 60308 ];

	UOnlineSubsystemNowGame_execGetSpellID_Parms GetSpellID_Parms;
	GetSpellID_Parms.iSlot = iSlot;

	pFnGetSpellID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpellID, &GetSpellID_Parms, NULL );

	pFnGetSpellID->FunctionFlags |= 0x400;

	return GetSpellID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

int UOnlineSubsystemNowGame::GetSkillID ( int iSlot )
{
	static UFunction* pFnGetSkillID = NULL;

	if ( ! pFnGetSkillID )
		pFnGetSkillID = (UFunction*) UObject::GObjObjects()->Data[ 60305 ];

	UOnlineSubsystemNowGame_execGetSkillID_Parms GetSkillID_Parms;
	GetSkillID_Parms.iSlot = iSlot;

	pFnGetSkillID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillID, &GetSkillID_Parms, NULL );

	pFnGetSkillID->FunctionFlags |= 0x400;

	return GetSkillID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

int UOnlineSubsystemNowGame::GetItemID ( int iSlot )
{
	static UFunction* pFnGetItemID = NULL;

	if ( ! pFnGetItemID )
		pFnGetItemID = (UFunction*) UObject::GObjObjects()->Data[ 60302 ];

	UOnlineSubsystemNowGame_execGetItemID_Parms GetItemID_Parms;
	GetItemID_Parms.iSlot = iSlot;

	pFnGetItemID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemID, &GetItemID_Parms, NULL );

	pFnGetItemID->FunctionFlags |= 0x400;

	return GetItemID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillCGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetSkillCGuid ( int iSlot )
{
	static UFunction* pFnGetSkillCGuid = NULL;

	if ( ! pFnGetSkillCGuid )
		pFnGetSkillCGuid = (UFunction*) UObject::GObjObjects()->Data[ 60299 ];

	UOnlineSubsystemNowGame_execGetSkillCGuid_Parms GetSkillCGuid_Parms;
	GetSkillCGuid_Parms.iSlot = iSlot;

	pFnGetSkillCGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillCGuid, &GetSkillCGuid_Parms, NULL );

	pFnGetSkillCGuid->FunctionFlags |= 0x400;

	return GetSkillCGuid_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.IsValidVial
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::IsValidVial ( int iSlot )
{
	static UFunction* pFnIsValidVial = NULL;

	if ( ! pFnIsValidVial )
		pFnIsValidVial = (UFunction*) UObject::GObjObjects()->Data[ 60296 ];

	UOnlineSubsystemNowGame_execIsValidVial_Parms IsValidVial_Parms;
	IsValidVial_Parms.iSlot = iSlot;

	pFnIsValidVial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidVial, &IsValidVial_Parms, NULL );

	pFnIsValidVial->FunctionFlags |= 0x400;

	return IsValidVial_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemVialData
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 sVial                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::GetItemVialData ( int iSlot, struct FString* sVial )
{
	static UFunction* pFnGetItemVialData = NULL;

	if ( ! pFnGetItemVialData )
		pFnGetItemVialData = (UFunction*) UObject::GObjObjects()->Data[ 60292 ];

	UOnlineSubsystemNowGame_execGetItemVialData_Parms GetItemVialData_Parms;
	GetItemVialData_Parms.iSlot = iSlot;

	pFnGetItemVialData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemVialData, &GetItemVialData_Parms, NULL );

	pFnGetItemVialData->FunctionFlags |= 0x400;

	if ( sVial )
		memcpy ( sVial, &GetItemVialData_Parms.sVial, 0xC );

	return GetItemVialData_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemToolData
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )
// TArray< struct FString >       vString                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::GetItemToolData ( int iSlot, TArray< struct FString >* vString )
{
	static UFunction* pFnGetItemToolData = NULL;

	if ( ! pFnGetItemToolData )
		pFnGetItemToolData = (UFunction*) UObject::GObjObjects()->Data[ 60287 ];

	UOnlineSubsystemNowGame_execGetItemToolData_Parms GetItemToolData_Parms;
	GetItemToolData_Parms.iSlot = iSlot;

	pFnGetItemToolData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemToolData, &GetItemToolData_Parms, NULL );

	pFnGetItemToolData->FunctionFlags |= 0x400;

	if ( vString )
		memcpy ( vString, &GetItemToolData_Parms.vString, 0xC );

	return GetItemToolData_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemCGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetItemCGuid ( int iSlot )
{
	static UFunction* pFnGetItemCGuid = NULL;

	if ( ! pFnGetItemCGuid )
		pFnGetItemCGuid = (UFunction*) UObject::GObjObjects()->Data[ 60284 ];

	UOnlineSubsystemNowGame_execGetItemCGuid_Parms GetItemCGuid_Parms;
	GetItemCGuid_Parms.iSlot = iSlot;

	pFnGetItemCGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemCGuid, &GetItemCGuid_Parms, NULL );

	pFnGetItemCGuid->FunctionFlags |= 0x400;

	return GetItemCGuid_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ActionbarClearSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::ActionbarClearSlot ( int iSlot )
{
	static UFunction* pFnActionbarClearSlot = NULL;

	if ( ! pFnActionbarClearSlot )
		pFnActionbarClearSlot = (UFunction*) UObject::GObjObjects()->Data[ 60282 ];

	UOnlineSubsystemNowGame_execActionbarClearSlot_Parms ActionbarClearSlot_Parms;
	ActionbarClearSlot_Parms.iSlot = iSlot;

	pFnActionbarClearSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActionbarClearSlot, &ActionbarClearSlot_Parms, NULL );

	pFnActionbarClearSlot->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PlaceLocalPicked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::PlaceLocalPicked ( int iSlot )
{
	static UFunction* pFnPlaceLocalPicked = NULL;

	if ( ! pFnPlaceLocalPicked )
		pFnPlaceLocalPicked = (UFunction*) UObject::GObjObjects()->Data[ 60280 ];

	UOnlineSubsystemNowGame_execPlaceLocalPicked_Parms PlaceLocalPicked_Parms;
	PlaceLocalPicked_Parms.iSlot = iSlot;

	pFnPlaceLocalPicked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaceLocalPicked, &PlaceLocalPicked_Parms, NULL );

	pFnPlaceLocalPicked->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetContentInfoActionbar
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )

int UOnlineSubsystemNowGame::GetContentInfoActionbar ( int iSlot, class UContentInfo** Info )
{
	static UFunction* pFnGetContentInfoActionbar = NULL;

	if ( ! pFnGetContentInfoActionbar )
		pFnGetContentInfoActionbar = (UFunction*) UObject::GObjObjects()->Data[ 60276 ];

	UOnlineSubsystemNowGame_execGetContentInfoActionbar_Parms GetContentInfoActionbar_Parms;
	GetContentInfoActionbar_Parms.iSlot = iSlot;

	pFnGetContentInfoActionbar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetContentInfoActionbar, &GetContentInfoActionbar_Parms, NULL );

	pFnGetContentInfoActionbar->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetContentInfoActionbar_Parms.Info;

	return GetContentInfoActionbar_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetPickedContentInfoActionBar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UContentInfo* UOnlineSubsystemNowGame::GetPickedContentInfoActionBar ( )
{
	static UFunction* pFnGetPickedContentInfoActionBar = NULL;

	if ( ! pFnGetPickedContentInfoActionBar )
		pFnGetPickedContentInfoActionBar = (UFunction*) UObject::GObjObjects()->Data[ 60274 ];

	UOnlineSubsystemNowGame_execGetPickedContentInfoActionBar_Parms GetPickedContentInfoActionBar_Parms;

	pFnGetPickedContentInfoActionBar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPickedContentInfoActionBar, &GetPickedContentInfoActionBar_Parms, NULL );

	pFnGetPickedContentInfoActionBar->FunctionFlags |= 0x400;

	return GetPickedContentInfoActionBar_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.PlacePickedInActionBar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::PlacePickedInActionBar ( int iSlot )
{
	static UFunction* pFnPlacePickedInActionBar = NULL;

	if ( ! pFnPlacePickedInActionBar )
		pFnPlacePickedInActionBar = (UFunction*) UObject::GObjObjects()->Data[ 60272 ];

	UOnlineSubsystemNowGame_execPlacePickedInActionBar_Parms PlacePickedInActionBar_Parms;
	PlacePickedInActionBar_Parms.iSlot = iSlot;

	pFnPlacePickedInActionBar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlacePickedInActionBar, &PlacePickedInActionBar_Parms, NULL );

	pFnPlacePickedInActionBar->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetActionBarContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetActionBarContentInfo ( int iSlot, class UContentInfo** Info )
{
	static UFunction* pFnGetActionBarContentInfo = NULL;

	if ( ! pFnGetActionBarContentInfo )
		pFnGetActionBarContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 60269 ];

	UOnlineSubsystemNowGame_execGetActionBarContentInfo_Parms GetActionBarContentInfo_Parms;
	GetActionBarContentInfo_Parms.iSlot = iSlot;

	pFnGetActionBarContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActionBarContentInfo, &GetActionBarContentInfo_Parms, NULL );

	pFnGetActionBarContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetActionBarContentInfo_Parms.Info;
};

// Function NowGame.OnlineSubsystemNowGame.UnEquipSlotItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sEquipSlot                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::UnEquipSlotItem ( struct FString sEquipSlot )
{
	static UFunction* pFnUnEquipSlotItem = NULL;

	if ( ! pFnUnEquipSlotItem )
		pFnUnEquipSlotItem = (UFunction*) UObject::GObjObjects()->Data[ 60267 ];

	UOnlineSubsystemNowGame_execUnEquipSlotItem_Parms UnEquipSlotItem_Parms;
	memcpy ( &UnEquipSlotItem_Parms.sEquipSlot, &sEquipSlot, 0xC );

	pFnUnEquipSlotItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnEquipSlotItem, &UnEquipSlotItem_Parms, NULL );

	pFnUnEquipSlotItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PlacePickedInEquipSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sEquipSlot                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::PlacePickedInEquipSlot ( struct FString sEquipSlot )
{
	static UFunction* pFnPlacePickedInEquipSlot = NULL;

	if ( ! pFnPlacePickedInEquipSlot )
		pFnPlacePickedInEquipSlot = (UFunction*) UObject::GObjObjects()->Data[ 60265 ];

	UOnlineSubsystemNowGame_execPlacePickedInEquipSlot_Parms PlacePickedInEquipSlot_Parms;
	memcpy ( &PlacePickedInEquipSlot_Parms.sEquipSlot, &sEquipSlot, 0xC );

	pFnPlacePickedInEquipSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlacePickedInEquipSlot, &PlacePickedInEquipSlot_Parms, NULL );

	pFnPlacePickedInEquipSlot->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetAttributeState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AttributeId                    ( CPF_Parm )

int UOnlineSubsystemNowGame::GetAttributeState ( int AttributeId )
{
	static UFunction* pFnGetAttributeState = NULL;

	if ( ! pFnGetAttributeState )
		pFnGetAttributeState = (UFunction*) UObject::GObjObjects()->Data[ 55334 ];

	UOnlineSubsystemNowGame_execGetAttributeState_Parms GetAttributeState_Parms;
	GetAttributeState_Parms.AttributeId = AttributeId;

	pFnGetAttributeState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAttributeState, &GetAttributeState_Parms, NULL );

	pFnGetAttributeState->FunctionFlags |= 0x400;

	return GetAttributeState_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ToggleAttributeState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AttributeId                    ( CPF_Parm )

int UOnlineSubsystemNowGame::ToggleAttributeState ( int AttributeId )
{
	static UFunction* pFnToggleAttributeState = NULL;

	if ( ! pFnToggleAttributeState )
		pFnToggleAttributeState = (UFunction*) UObject::GObjObjects()->Data[ 55377 ];

	UOnlineSubsystemNowGame_execToggleAttributeState_Parms ToggleAttributeState_Parms;
	ToggleAttributeState_Parms.AttributeId = AttributeId;

	pFnToggleAttributeState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleAttributeState, &ToggleAttributeState_Parms, NULL );

	pFnToggleAttributeState->FunctionFlags |= 0x400;

	return ToggleAttributeState_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.TradeRemoveItemFromTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::TradeRemoveItemFromTrade ( struct FString ItemGuid )
{
	static UFunction* pFnTradeRemoveItemFromTrade = NULL;

	if ( ! pFnTradeRemoveItemFromTrade )
		pFnTradeRemoveItemFromTrade = (UFunction*) UObject::GObjObjects()->Data[ 60261 ];

	UOnlineSubsystemNowGame_execTradeRemoveItemFromTrade_Parms TradeRemoveItemFromTrade_Parms;
	memcpy ( &TradeRemoveItemFromTrade_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnTradeRemoveItemFromTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTradeRemoveItemFromTrade, &TradeRemoveItemFromTrade_Parms, NULL );

	pFnTradeRemoveItemFromTrade->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.TradeRightClickInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            bag                            ( CPF_Parm )
// int                            Slot                           ( CPF_Parm )

void UOnlineSubsystemNowGame::TradeRightClickInventory ( int bag, int Slot )
{
	static UFunction* pFnTradeRightClickInventory = NULL;

	if ( ! pFnTradeRightClickInventory )
		pFnTradeRightClickInventory = (UFunction*) UObject::GObjObjects()->Data[ 60258 ];

	UOnlineSubsystemNowGame_execTradeRightClickInventory_Parms TradeRightClickInventory_Parms;
	TradeRightClickInventory_Parms.bag = bag;
	TradeRightClickInventory_Parms.Slot = Slot;

	pFnTradeRightClickInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTradeRightClickInventory, &TradeRightClickInventory_Parms, NULL );

	pFnTradeRightClickInventory->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.UseSkill
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            _skill                         ( CPF_Parm )
// struct FString                 Target                         ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::UseSkill ( int _skill, struct FString Target )
{
	static UFunction* pFnUseSkill = NULL;

	if ( ! pFnUseSkill )
		pFnUseSkill = (UFunction*) UObject::GObjObjects()->Data[ 60255 ];

	UOnlineSubsystemNowGame_execUseSkill_Parms UseSkill_Parms;
	UseSkill_Parms._skill = _skill;
	memcpy ( &UseSkill_Parms.Target, &Target, 0xC );

	pFnUseSkill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseSkill, &UseSkill_Parms, NULL );

	pFnUseSkill->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillPoints
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            curPoints                      ( CPF_Parm | CPF_OutParm )
// int                            Pool                           ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetSkillPoints ( int* curPoints, int* Pool )
{
	static UFunction* pFnGetSkillPoints = NULL;

	if ( ! pFnGetSkillPoints )
		pFnGetSkillPoints = (UFunction*) UObject::GObjObjects()->Data[ 60252 ];

	UOnlineSubsystemNowGame_execGetSkillPoints_Parms GetSkillPoints_Parms;

	pFnGetSkillPoints->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillPoints, &GetSkillPoints_Parms, NULL );

	pFnGetSkillPoints->FunctionFlags |= 0x400;

	if ( curPoints )
		*curPoints = GetSkillPoints_Parms.curPoints;

	if ( Pool )
		*Pool = GetSkillPoints_Parms.Pool;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillInfoByName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 skillName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            FullListIndex                  ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetSkillInfoByName ( struct FString skillName, int* FullListIndex )
{
	static UFunction* pFnGetSkillInfoByName = NULL;

	if ( ! pFnGetSkillInfoByName )
		pFnGetSkillInfoByName = (UFunction*) UObject::GObjObjects()->Data[ 60249 ];

	UOnlineSubsystemNowGame_execGetSkillInfoByName_Parms GetSkillInfoByName_Parms;
	memcpy ( &GetSkillInfoByName_Parms.skillName, &skillName, 0xC );

	pFnGetSkillInfoByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillInfoByName, &GetSkillInfoByName_Parms, NULL );

	pFnGetSkillInfoByName->FunctionFlags |= 0x400;

	if ( FullListIndex )
		*FullListIndex = GetSkillInfoByName_Parms.FullListIndex;
};

// Function NowGame.OnlineSubsystemNowGame.GetBaseSkillInfoByName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 skillName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            FullListIndex                  ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetBaseSkillInfoByName ( struct FString skillName, int* FullListIndex )
{
	static UFunction* pFnGetBaseSkillInfoByName = NULL;

	if ( ! pFnGetBaseSkillInfoByName )
		pFnGetBaseSkillInfoByName = (UFunction*) UObject::GObjObjects()->Data[ 60246 ];

	UOnlineSubsystemNowGame_execGetBaseSkillInfoByName_Parms GetBaseSkillInfoByName_Parms;
	memcpy ( &GetBaseSkillInfoByName_Parms.skillName, &skillName, 0xC );

	pFnGetBaseSkillInfoByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBaseSkillInfoByName, &GetBaseSkillInfoByName_Parms, NULL );

	pFnGetBaseSkillInfoByName->FunctionFlags |= 0x400;

	if ( FullListIndex )
		*FullListIndex = GetBaseSkillInfoByName_Parms.FullListIndex;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillRelativeInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            BaseIndex                      ( CPF_Parm )
// int                            RelativeIndex                  ( CPF_Parm )
// unsigned long                  bParent                        ( CPF_Parm )
// struct FString                 skillName                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            FullListIndex                  ( CPF_Parm | CPF_OutParm )
// int                            SkillState                     ( CPF_Parm | CPF_OutParm )
// int                            SkillLevel                     ( CPF_Parm | CPF_OutParm )
// int                            AttributeLevel                 ( CPF_Parm | CPF_OutParm )
// int                            EnabledLevel                   ( CPF_Parm | CPF_OutParm )
// int                            EffectiveSkill                 ( CPF_Parm | CPF_OutParm )
// int                            bPrimary                       ( CPF_Parm | CPF_OutParm )
// int                            lockState                      ( CPF_Parm | CPF_OutParm )
// int                            bDisabled                      ( CPF_Parm | CPF_OutParm )

bool UOnlineSubsystemNowGame::GetSkillRelativeInfo ( int BaseIndex, int RelativeIndex, unsigned long bParent, struct FString* skillName, int* FullListIndex, int* SkillState, int* SkillLevel, int* AttributeLevel, int* EnabledLevel, int* EffectiveSkill, int* bPrimary, int* lockState, int* bDisabled )
{
	static UFunction* pFnGetSkillRelativeInfo = NULL;

	if ( ! pFnGetSkillRelativeInfo )
		pFnGetSkillRelativeInfo = (UFunction*) UObject::GObjObjects()->Data[ 60231 ];

	UOnlineSubsystemNowGame_execGetSkillRelativeInfo_Parms GetSkillRelativeInfo_Parms;
	GetSkillRelativeInfo_Parms.BaseIndex = BaseIndex;
	GetSkillRelativeInfo_Parms.RelativeIndex = RelativeIndex;
	GetSkillRelativeInfo_Parms.bParent = bParent;

	pFnGetSkillRelativeInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillRelativeInfo, &GetSkillRelativeInfo_Parms, NULL );

	pFnGetSkillRelativeInfo->FunctionFlags |= 0x400;

	if ( skillName )
		memcpy ( skillName, &GetSkillRelativeInfo_Parms.skillName, 0xC );

	if ( FullListIndex )
		*FullListIndex = GetSkillRelativeInfo_Parms.FullListIndex;

	if ( SkillState )
		*SkillState = GetSkillRelativeInfo_Parms.SkillState;

	if ( SkillLevel )
		*SkillLevel = GetSkillRelativeInfo_Parms.SkillLevel;

	if ( AttributeLevel )
		*AttributeLevel = GetSkillRelativeInfo_Parms.AttributeLevel;

	if ( EnabledLevel )
		*EnabledLevel = GetSkillRelativeInfo_Parms.EnabledLevel;

	if ( EffectiveSkill )
		*EffectiveSkill = GetSkillRelativeInfo_Parms.EffectiveSkill;

	if ( bPrimary )
		*bPrimary = GetSkillRelativeInfo_Parms.bPrimary;

	if ( lockState )
		*lockState = GetSkillRelativeInfo_Parms.lockState;

	if ( bDisabled )
		*bDisabled = GetSkillRelativeInfo_Parms.bDisabled;

	return GetSkillRelativeInfo_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillExtendedInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            SkillIndex                     ( CPF_Parm )
// int                            NumParents                     ( CPF_Parm | CPF_OutParm )
// int                            NumChilds                      ( CPF_Parm | CPF_OutParm )
// int                            Prereq1                        ( CPF_Parm | CPF_OutParm )
// int                            Prereq2                        ( CPF_Parm | CPF_OutParm )
// int                            CurLvlXp                       ( CPF_Parm | CPF_OutParm )
// int                            NextLvlXp                      ( CPF_Parm | CPF_OutParm )
// int                            CurXp                          ( CPF_Parm | CPF_OutParm )
// int                            MaxXp                          ( CPF_Parm | CPF_OutParm )
// int                            BcAtt1                         ( CPF_Parm | CPF_OutParm )
// int                            BcAtt2                         ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetSkillExtendedInfo ( int SkillIndex, int* NumParents, int* NumChilds, int* Prereq1, int* Prereq2, int* CurLvlXp, int* NextLvlXp, int* CurXp, int* MaxXp, int* BcAtt1, int* BcAtt2 )
{
	static UFunction* pFnGetSkillExtendedInfo = NULL;

	if ( ! pFnGetSkillExtendedInfo )
		pFnGetSkillExtendedInfo = (UFunction*) UObject::GObjObjects()->Data[ 60219 ];

	UOnlineSubsystemNowGame_execGetSkillExtendedInfo_Parms GetSkillExtendedInfo_Parms;
	GetSkillExtendedInfo_Parms.SkillIndex = SkillIndex;

	pFnGetSkillExtendedInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillExtendedInfo, &GetSkillExtendedInfo_Parms, NULL );

	pFnGetSkillExtendedInfo->FunctionFlags |= 0x400;

	if ( NumParents )
		*NumParents = GetSkillExtendedInfo_Parms.NumParents;

	if ( NumChilds )
		*NumChilds = GetSkillExtendedInfo_Parms.NumChilds;

	if ( Prereq1 )
		*Prereq1 = GetSkillExtendedInfo_Parms.Prereq1;

	if ( Prereq2 )
		*Prereq2 = GetSkillExtendedInfo_Parms.Prereq2;

	if ( CurLvlXp )
		*CurLvlXp = GetSkillExtendedInfo_Parms.CurLvlXp;

	if ( NextLvlXp )
		*NextLvlXp = GetSkillExtendedInfo_Parms.NextLvlXp;

	if ( CurXp )
		*CurXp = GetSkillExtendedInfo_Parms.CurXp;

	if ( MaxXp )
		*MaxXp = GetSkillExtendedInfo_Parms.MaxXp;

	if ( BcAtt1 )
		*BcAtt1 = GetSkillExtendedInfo_Parms.BcAtt1;

	if ( BcAtt2 )
		*BcAtt2 = GetSkillExtendedInfo_Parms.BcAtt2;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SkillIndex                     ( CPF_Parm )
// class USkill_ContentInfo*      Info                           ( CPF_Parm | CPF_OutParm )
// struct FString                 skillName                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            SkillState                     ( CPF_Parm | CPF_OutParm )
// int                            SkillLevel                     ( CPF_Parm | CPF_OutParm )
// int                            AttributeLevel                 ( CPF_Parm | CPF_OutParm )
// int                            EnabledLevel                   ( CPF_Parm | CPF_OutParm )
// int                            bPrimary                       ( CPF_Parm | CPF_OutParm )
// int                            lockState                      ( CPF_Parm | CPF_OutParm )
// int                            EffectiveSkill                 ( CPF_Parm | CPF_OutParm )
// int                            bDisabled                      ( CPF_Parm | CPF_OutParm )

bool UOnlineSubsystemNowGame::GetSkillInfo ( int SkillIndex, class USkill_ContentInfo** Info, struct FString* skillName, int* SkillState, int* SkillLevel, int* AttributeLevel, int* EnabledLevel, int* bPrimary, int* lockState, int* EffectiveSkill, int* bDisabled )
{
	static UFunction* pFnGetSkillInfo = NULL;

	if ( ! pFnGetSkillInfo )
		pFnGetSkillInfo = (UFunction*) UObject::GObjObjects()->Data[ 60206 ];

	UOnlineSubsystemNowGame_execGetSkillInfo_Parms GetSkillInfo_Parms;
	GetSkillInfo_Parms.SkillIndex = SkillIndex;

	pFnGetSkillInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillInfo, &GetSkillInfo_Parms, NULL );

	pFnGetSkillInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetSkillInfo_Parms.Info;

	if ( skillName )
		memcpy ( skillName, &GetSkillInfo_Parms.skillName, 0xC );

	if ( SkillState )
		*SkillState = GetSkillInfo_Parms.SkillState;

	if ( SkillLevel )
		*SkillLevel = GetSkillInfo_Parms.SkillLevel;

	if ( AttributeLevel )
		*AttributeLevel = GetSkillInfo_Parms.AttributeLevel;

	if ( EnabledLevel )
		*EnabledLevel = GetSkillInfo_Parms.EnabledLevel;

	if ( bPrimary )
		*bPrimary = GetSkillInfo_Parms.bPrimary;

	if ( lockState )
		*lockState = GetSkillInfo_Parms.lockState;

	if ( EffectiveSkill )
		*EffectiveSkill = GetSkillInfo_Parms.EffectiveSkill;

	if ( bDisabled )
		*bDisabled = GetSkillInfo_Parms.bDisabled;

	return GetSkillInfo_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.SkillIsDisabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 skillName                      ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::SkillIsDisabled ( struct FString skillName )
{
	static UFunction* pFnSkillIsDisabled = NULL;

	if ( ! pFnSkillIsDisabled )
		pFnSkillIsDisabled = (UFunction*) UObject::GObjObjects()->Data[ 60203 ];

	UOnlineSubsystemNowGame_execSkillIsDisabled_Parms SkillIsDisabled_Parms;
	memcpy ( &SkillIsDisabled_Parms.skillName, &skillName, 0xC );

	pFnSkillIsDisabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSkillIsDisabled, &SkillIsDisabled_Parms, NULL );

	pFnSkillIsDisabled->FunctionFlags |= 0x400;

	return SkillIsDisabled_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillContentInfoByCGUID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 strguid                        ( CPF_Parm | CPF_NeedCtorLink )

class UContentInfo* UOnlineSubsystemNowGame::GetSkillContentInfoByCGUID ( struct FString strguid )
{
	static UFunction* pFnGetSkillContentInfoByCGUID = NULL;

	if ( ! pFnGetSkillContentInfoByCGUID )
		pFnGetSkillContentInfoByCGUID = (UFunction*) UObject::GObjObjects()->Data[ 60200 ];

	UOnlineSubsystemNowGame_execGetSkillContentInfoByCGUID_Parms GetSkillContentInfoByCGUID_Parms;
	memcpy ( &GetSkillContentInfoByCGUID_Parms.strguid, &strguid, 0xC );

	pFnGetSkillContentInfoByCGUID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillContentInfoByCGUID, &GetSkillContentInfoByCGUID_Parms, NULL );

	pFnGetSkillContentInfoByCGUID->FunctionFlags |= 0x400;

	return GetSkillContentInfoByCGUID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.LocalPickSkill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SkillID                        ( CPF_Parm )

void UOnlineSubsystemNowGame::LocalPickSkill ( int SkillID )
{
	static UFunction* pFnLocalPickSkill = NULL;

	if ( ! pFnLocalPickSkill )
		pFnLocalPickSkill = (UFunction*) UObject::GObjObjects()->Data[ 60198 ];

	UOnlineSubsystemNowGame_execLocalPickSkill_Parms LocalPickSkill_Parms;
	LocalPickSkill_Parms.SkillID = SkillID;

	pFnLocalPickSkill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLocalPickSkill, &LocalPickSkill_Parms, NULL );

	pFnLocalPickSkill->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SkillID                        ( CPF_Parm )

int UOnlineSubsystemNowGame::GetSkillState ( int SkillID )
{
	static UFunction* pFnGetSkillState = NULL;

	if ( ! pFnGetSkillState )
		pFnGetSkillState = (UFunction*) UObject::GObjObjects()->Data[ 60195 ];

	UOnlineSubsystemNowGame_execGetSkillState_Parms GetSkillState_Parms;
	GetSkillState_Parms.SkillID = SkillID;

	pFnGetSkillState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillState, &GetSkillState_Parms, NULL );

	pFnGetSkillState->FunctionFlags |= 0x400;

	return GetSkillState_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.LevelDownSkill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 SkillGUID                      ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::LevelDownSkill ( struct FString SkillGUID )
{
	static UFunction* pFnLevelDownSkill = NULL;

	if ( ! pFnLevelDownSkill )
		pFnLevelDownSkill = (UFunction*) UObject::GObjObjects()->Data[ 60193 ];

	UOnlineSubsystemNowGame_execLevelDownSkill_Parms LevelDownSkill_Parms;
	memcpy ( &LevelDownSkill_Parms.SkillGUID, &SkillGUID, 0xC );

	pFnLevelDownSkill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLevelDownSkill, &LevelDownSkill_Parms, NULL );

	pFnLevelDownSkill->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ChangeSkillStateGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 SkillGUID                      ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ChangeSkillStateGuid ( struct FString SkillGUID )
{
	static UFunction* pFnChangeSkillStateGuid = NULL;

	if ( ! pFnChangeSkillStateGuid )
		pFnChangeSkillStateGuid = (UFunction*) UObject::GObjObjects()->Data[ 60191 ];

	UOnlineSubsystemNowGame_execChangeSkillStateGuid_Parms ChangeSkillStateGuid_Parms;
	memcpy ( &ChangeSkillStateGuid_Parms.SkillGUID, &SkillGUID, 0xC );

	pFnChangeSkillStateGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeSkillStateGuid, &ChangeSkillStateGuid_Parms, NULL );

	pFnChangeSkillStateGuid->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ChangeSkillState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SkillID                        ( CPF_Parm )

void UOnlineSubsystemNowGame::ChangeSkillState ( int SkillID )
{
	static UFunction* pFnChangeSkillState = NULL;

	if ( ! pFnChangeSkillState )
		pFnChangeSkillState = (UFunction*) UObject::GObjObjects()->Data[ 60189 ];

	UOnlineSubsystemNowGame_execChangeSkillState_Parms ChangeSkillState_Parms;
	ChangeSkillState_Parms.SkillID = SkillID;

	pFnChangeSkillState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeSkillState, &ChangeSkillState_Parms, NULL );

	pFnChangeSkillState->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.CancelTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::CancelTrade ( )
{
	static UFunction* pFnCancelTrade = NULL;

	if ( ! pFnCancelTrade )
		pFnCancelTrade = (UFunction*) UObject::GObjObjects()->Data[ 60188 ];

	UOnlineSubsystemNowGame_execCancelTrade_Parms CancelTrade_Parms;

	pFnCancelTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelTrade, &CancelTrade_Parms, NULL );

	pFnCancelTrade->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.IsPickedInTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UOnlineSubsystemNowGame::IsPickedInTrade ( )
{
	static UFunction* pFnIsPickedInTrade = NULL;

	if ( ! pFnIsPickedInTrade )
		pFnIsPickedInTrade = (UFunction*) UObject::GObjObjects()->Data[ 60186 ];

	UOnlineSubsystemNowGame_execIsPickedInTrade_Parms IsPickedInTrade_Parms;

	pFnIsPickedInTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPickedInTrade, &IsPickedInTrade_Parms, NULL );

	pFnIsPickedInTrade->FunctionFlags |= 0x400;

	return IsPickedInTrade_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.IsItemInTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Slot                           ( CPF_Parm )

bool UOnlineSubsystemNowGame::IsItemInTrade ( int Slot )
{
	static UFunction* pFnIsItemInTrade = NULL;

	if ( ! pFnIsItemInTrade )
		pFnIsItemInTrade = (UFunction*) UObject::GObjObjects()->Data[ 60183 ];

	UOnlineSubsystemNowGame_execIsItemInTrade_Parms IsItemInTrade_Parms;
	IsItemInTrade_Parms.Slot = Slot;

	pFnIsItemInTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsItemInTrade, &IsItemInTrade_Parms, NULL );

	pFnIsItemInTrade->FunctionFlags |= 0x400;

	return IsItemInTrade_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetTradeItemStr
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Slot                           ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetTradeItemStr ( int Slot )
{
	static UFunction* pFnGetTradeItemStr = NULL;

	if ( ! pFnGetTradeItemStr )
		pFnGetTradeItemStr = (UFunction*) UObject::GObjObjects()->Data[ 60180 ];

	UOnlineSubsystemNowGame_execGetTradeItemStr_Parms GetTradeItemStr_Parms;
	GetTradeItemStr_Parms.Slot = Slot;

	pFnGetTradeItemStr->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTradeItemStr, &GetTradeItemStr_Parms, NULL );

	pFnGetTradeItemStr->FunctionFlags |= 0x400;

	return GetTradeItemStr_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetTradeAvatarJSon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetTradeAvatarJSon ( )
{
	static UFunction* pFnGetTradeAvatarJSon = NULL;

	if ( ! pFnGetTradeAvatarJSon )
		pFnGetTradeAvatarJSon = (UFunction*) UObject::GObjObjects()->Data[ 60178 ];

	UOnlineSubsystemNowGame_execGetTradeAvatarJSon_Parms GetTradeAvatarJSon_Parms;

	pFnGetTradeAvatarJSon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTradeAvatarJSon, &GetTradeAvatarJSon_Parms, NULL );

	pFnGetTradeAvatarJSon->FunctionFlags |= 0x400;

	return GetTradeAvatarJSon_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetTradeName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned long                  bYou                           ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetTradeName ( unsigned long bYou )
{
	static UFunction* pFnGetTradeName = NULL;

	if ( ! pFnGetTradeName )
		pFnGetTradeName = (UFunction*) UObject::GObjObjects()->Data[ 60175 ];

	UOnlineSubsystemNowGame_execGetTradeName_Parms GetTradeName_Parms;
	GetTradeName_Parms.bYou = bYou;

	pFnGetTradeName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTradeName, &GetTradeName_Parms, NULL );

	pFnGetTradeName->FunctionFlags |= 0x400;

	return GetTradeName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetTradeAcceptState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bYou                           ( CPF_Parm )

bool UOnlineSubsystemNowGame::GetTradeAcceptState ( unsigned long bYou )
{
	static UFunction* pFnGetTradeAcceptState = NULL;

	if ( ! pFnGetTradeAcceptState )
		pFnGetTradeAcceptState = (UFunction*) UObject::GObjObjects()->Data[ 60172 ];

	UOnlineSubsystemNowGame_execGetTradeAcceptState_Parms GetTradeAcceptState_Parms;
	GetTradeAcceptState_Parms.bYou = bYou;

	pFnGetTradeAcceptState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTradeAcceptState, &GetTradeAcceptState_Parms, NULL );

	pFnGetTradeAcceptState->FunctionFlags |= 0x400;

	return GetTradeAcceptState_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetTradeContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bYou                           ( CPF_Parm )
// int                            Slot                           ( CPF_Parm )
// class UContentInfo*            Int                            ( CPF_Parm | CPF_OutParm )
// int                            Quantity                       ( CPF_Parm | CPF_OutParm )
// struct FString                 ItemName                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetTradeContentInfo ( unsigned long bYou, int Slot, class UContentInfo** Int, int* Quantity, struct FString* ItemName )
{
	static UFunction* pFnGetTradeContentInfo = NULL;

	if ( ! pFnGetTradeContentInfo )
		pFnGetTradeContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 60166 ];

	UOnlineSubsystemNowGame_execGetTradeContentInfo_Parms GetTradeContentInfo_Parms;
	GetTradeContentInfo_Parms.bYou = bYou;
	GetTradeContentInfo_Parms.Slot = Slot;

	pFnGetTradeContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTradeContentInfo, &GetTradeContentInfo_Parms, NULL );

	pFnGetTradeContentInfo->FunctionFlags |= 0x400;

	if ( Int )
		*Int = GetTradeContentInfo_Parms.Int;

	if ( Quantity )
		*Quantity = GetTradeContentInfo_Parms.Quantity;

	if ( ItemName )
		memcpy ( ItemName, &GetTradeContentInfo_Parms.ItemName, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.ItemOfName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ItemName                       ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::ItemOfName ( int iBag, int iSlot, struct FString ItemName )
{
	static UFunction* pFnItemOfName = NULL;

	if ( ! pFnItemOfName )
		pFnItemOfName = (UFunction*) UObject::GObjObjects()->Data[ 60161 ];

	UOnlineSubsystemNowGame_execItemOfName_Parms ItemOfName_Parms;
	ItemOfName_Parms.iBag = iBag;
	ItemOfName_Parms.iSlot = iSlot;
	memcpy ( &ItemOfName_Parms.ItemName, &ItemName, 0xC );

	pFnItemOfName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnItemOfName, &ItemOfName_Parms, NULL );

	pFnItemOfName->FunctionFlags |= 0x400;

	return ItemOfName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetInventoryItemGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetInventoryItemGuid ( int iBag, int iSlot )
{
	static UFunction* pFnGetInventoryItemGuid = NULL;

	if ( ! pFnGetInventoryItemGuid )
		pFnGetInventoryItemGuid = (UFunction*) UObject::GObjObjects()->Data[ 60157 ];

	UOnlineSubsystemNowGame_execGetInventoryItemGuid_Parms GetInventoryItemGuid_Parms;
	GetInventoryItemGuid_Parms.iBag = iBag;
	GetInventoryItemGuid_Parms.iSlot = iSlot;

	pFnGetInventoryItemGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventoryItemGuid, &GetInventoryItemGuid_Parms, NULL );

	pFnGetInventoryItemGuid->FunctionFlags |= 0x400;

	return GetInventoryItemGuid_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ItemByGuidIsClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::ItemByGuidIsClass ( struct FString sGuid, struct FString ClassName )
{
	static UFunction* pFnItemByGuidIsClass = NULL;

	if ( ! pFnItemByGuidIsClass )
		pFnItemByGuidIsClass = (UFunction*) UObject::GObjObjects()->Data[ 60153 ];

	UOnlineSubsystemNowGame_execItemByGuidIsClass_Parms ItemByGuidIsClass_Parms;
	memcpy ( &ItemByGuidIsClass_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &ItemByGuidIsClass_Parms.ClassName, &ClassName, 0xC );

	pFnItemByGuidIsClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnItemByGuidIsClass, &ItemByGuidIsClass_Parms, NULL );

	pFnItemByGuidIsClass->FunctionFlags |= 0x400;

	return ItemByGuidIsClass_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetLootContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// struct FString                 LootName                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            ItemQuantity                   ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetLootContentInfo ( int iSlot, class UContentInfo** Info, struct FString* LootName, int* ItemQuantity )
{
	static UFunction* pFnGetLootContentInfo = NULL;

	if ( ! pFnGetLootContentInfo )
		pFnGetLootContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 60148 ];

	UOnlineSubsystemNowGame_execGetLootContentInfo_Parms GetLootContentInfo_Parms;
	GetLootContentInfo_Parms.iSlot = iSlot;

	pFnGetLootContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLootContentInfo, &GetLootContentInfo_Parms, NULL );

	pFnGetLootContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetLootContentInfo_Parms.Info;

	if ( LootName )
		memcpy ( LootName, &GetLootContentInfo_Parms.LootName, 0xC );

	if ( ItemQuantity )
		*ItemQuantity = GetLootContentInfo_Parms.ItemQuantity;
};

// Function NowGame.OnlineSubsystemNowGame.GetEquipSlotContentInfo
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sEquipSlot                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FPointer                pPlayer                        ( CPF_OptionalParm | CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// unsigned char                  bLocked                        ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetEquipSlotContentInfo ( struct FString sEquipSlot, struct FPointer pPlayer, class UContentInfo** Info, unsigned char* bLocked )
{
	static UFunction* pFnGetEquipSlotContentInfo = NULL;

	if ( ! pFnGetEquipSlotContentInfo )
		pFnGetEquipSlotContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 60143 ];

	UOnlineSubsystemNowGame_execGetEquipSlotContentInfo_Parms GetEquipSlotContentInfo_Parms;
	memcpy ( &GetEquipSlotContentInfo_Parms.sEquipSlot, &sEquipSlot, 0xC );
	memcpy ( &GetEquipSlotContentInfo_Parms.pPlayer, &pPlayer, 0x4 );

	pFnGetEquipSlotContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEquipSlotContentInfo, &GetEquipSlotContentInfo_Parms, NULL );

	pFnGetEquipSlotContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetEquipSlotContentInfo_Parms.Info;

	if ( bLocked )
		*bLocked = GetEquipSlotContentInfo_Parms.bLocked;
};

// Function NowGame.OnlineSubsystemNowGame.GetVendorContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Int                            ( CPF_Parm | CPF_OutParm )
// int                            ItemCost                       ( CPF_Parm | CPF_OutParm )
// int                            ItemQuantity                   ( CPF_Parm | CPF_OutParm )
// struct FString                 ItemName                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            MaxQuantity                    ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetVendorContentInfo ( int iSlot, class UContentInfo** Int, int* ItemCost, int* ItemQuantity, struct FString* ItemName, int* MaxQuantity )
{
	static UFunction* pFnGetVendorContentInfo = NULL;

	if ( ! pFnGetVendorContentInfo )
		pFnGetVendorContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 60136 ];

	UOnlineSubsystemNowGame_execGetVendorContentInfo_Parms GetVendorContentInfo_Parms;
	GetVendorContentInfo_Parms.iSlot = iSlot;

	pFnGetVendorContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVendorContentInfo, &GetVendorContentInfo_Parms, NULL );

	pFnGetVendorContentInfo->FunctionFlags |= 0x400;

	if ( Int )
		*Int = GetVendorContentInfo_Parms.Int;

	if ( ItemCost )
		*ItemCost = GetVendorContentInfo_Parms.ItemCost;

	if ( ItemQuantity )
		*ItemQuantity = GetVendorContentInfo_Parms.ItemQuantity;

	if ( ItemName )
		memcpy ( ItemName, &GetVendorContentInfo_Parms.ItemName, 0xC );

	if ( MaxQuantity )
		*MaxQuantity = GetVendorContentInfo_Parms.MaxQuantity;
};

// Function NowGame.OnlineSubsystemNowGame.CanIReadThisBook
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ContentName                    ( CPF_Parm | CPF_NeedCtorLink )

int UOnlineSubsystemNowGame::CanIReadThisBook ( struct FString ContentName )
{
	static UFunction* pFnCanIReadThisBook = NULL;

	if ( ! pFnCanIReadThisBook )
		pFnCanIReadThisBook = (UFunction*) UObject::GObjObjects()->Data[ 60133 ];

	UOnlineSubsystemNowGame_execCanIReadThisBook_Parms CanIReadThisBook_Parms;
	memcpy ( &CanIReadThisBook_Parms.ContentName, &ContentName, 0xC );

	pFnCanIReadThisBook->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanIReadThisBook, &CanIReadThisBook_Parms, NULL );

	pFnCanIReadThisBook->FunctionFlags |= 0x400;

	return CanIReadThisBook_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetBookInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ContentName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 BookName                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            Cost                           ( CPF_Parm | CPF_OutParm )
// struct FString                 skillName                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 Author                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetBookInfo ( struct FString ContentName, struct FString* BookName, int* Cost, struct FString* skillName, struct FString* Author )
{
	static UFunction* pFnGetBookInfo = NULL;

	if ( ! pFnGetBookInfo )
		pFnGetBookInfo = (UFunction*) UObject::GObjObjects()->Data[ 60127 ];

	UOnlineSubsystemNowGame_execGetBookInfo_Parms GetBookInfo_Parms;
	memcpy ( &GetBookInfo_Parms.ContentName, &ContentName, 0xC );

	pFnGetBookInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBookInfo, &GetBookInfo_Parms, NULL );

	pFnGetBookInfo->FunctionFlags |= 0x400;

	if ( BookName )
		memcpy ( BookName, &GetBookInfo_Parms.BookName, 0xC );

	if ( Cost )
		*Cost = GetBookInfo_Parms.Cost;

	if ( skillName )
		memcpy ( skillName, &GetBookInfo_Parms.skillName, 0xC );

	if ( Author )
		memcpy ( Author, &GetBookInfo_Parms.Author, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.TakeLootItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::TakeLootItem ( int iSlot )
{
	static UFunction* pFnTakeLootItem = NULL;

	if ( ! pFnTakeLootItem )
		pFnTakeLootItem = (UFunction*) UObject::GObjObjects()->Data[ 60125 ];

	UOnlineSubsystemNowGame_execTakeLootItem_Parms TakeLootItem_Parms;
	TakeLootItem_Parms.iSlot = iSlot;

	pFnTakeLootItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTakeLootItem, &TakeLootItem_Parms, NULL );

	pFnTakeLootItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemNameFromContent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 strContentGuid                 ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetItemNameFromContent ( struct FString strContentGuid )
{
	static UFunction* pFnGetItemNameFromContent = NULL;

	if ( ! pFnGetItemNameFromContent )
		pFnGetItemNameFromContent = (UFunction*) UObject::GObjObjects()->Data[ 60122 ];

	UOnlineSubsystemNowGame_execGetItemNameFromContent_Parms GetItemNameFromContent_Parms;
	memcpy ( &GetItemNameFromContent_Parms.strContentGuid, &strContentGuid, 0xC );

	pFnGetItemNameFromContent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemNameFromContent, &GetItemNameFromContent_Parms, NULL );

	pFnGetItemNameFromContent->FunctionFlags |= 0x400;

	return GetItemNameFromContent_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 strguid                        ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetItemName ( struct FString strguid )
{
	static UFunction* pFnGetItemName = NULL;

	if ( ! pFnGetItemName )
		pFnGetItemName = (UFunction*) UObject::GObjObjects()->Data[ 60119 ];

	UOnlineSubsystemNowGame_execGetItemName_Parms GetItemName_Parms;
	memcpy ( &GetItemName_Parms.strguid, &strguid, 0xC );

	pFnGetItemName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemName, &GetItemName_Parms, NULL );

	pFnGetItemName->FunctionFlags |= 0x400;

	return GetItemName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemContentInfo
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// int                            ItemId                         ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// struct FString                 strguid                        ( CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetItemContentInfo ( int ItemId, class UContentInfo** Info, struct FString* strguid )
{
	static UFunction* pFnGetItemContentInfo = NULL;

	if ( ! pFnGetItemContentInfo )
		pFnGetItemContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 60115 ];

	UOnlineSubsystemNowGame_execGetItemContentInfo_Parms GetItemContentInfo_Parms;
	GetItemContentInfo_Parms.ItemId = ItemId;

	pFnGetItemContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemContentInfo, &GetItemContentInfo_Parms, NULL );

	pFnGetItemContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetItemContentInfo_Parms.Info;

	if ( strguid )
		memcpy ( strguid, &GetItemContentInfo_Parms.strguid, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.LocalPickItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ItemId                         ( CPF_Parm )

void UOnlineSubsystemNowGame::LocalPickItem ( int ItemId )
{
	static UFunction* pFnLocalPickItem = NULL;

	if ( ! pFnLocalPickItem )
		pFnLocalPickItem = (UFunction*) UObject::GObjObjects()->Data[ 60113 ];

	UOnlineSubsystemNowGame_execLocalPickItem_Parms LocalPickItem_Parms;
	LocalPickItem_Parms.ItemId = ItemId;

	pFnLocalPickItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLocalPickItem, &LocalPickItem_Parms, NULL );

	pFnLocalPickItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemContentInfoByCGUID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 strguid                        ( CPF_Parm | CPF_NeedCtorLink )

class UContentInfo* UOnlineSubsystemNowGame::GetItemContentInfoByCGUID ( struct FString strguid )
{
	static UFunction* pFnGetItemContentInfoByCGUID = NULL;

	if ( ! pFnGetItemContentInfoByCGUID )
		pFnGetItemContentInfoByCGUID = (UFunction*) UObject::GObjObjects()->Data[ 60110 ];

	UOnlineSubsystemNowGame_execGetItemContentInfoByCGUID_Parms GetItemContentInfoByCGUID_Parms;
	memcpy ( &GetItemContentInfoByCGUID_Parms.strguid, &strguid, 0xC );

	pFnGetItemContentInfoByCGUID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemContentInfoByCGUID, &GetItemContentInfoByCGUID_Parms, NULL );

	pFnGetItemContentInfoByCGUID->FunctionFlags |= 0x400;

	return GetItemContentInfoByCGUID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.checkForItemsInInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iBag                           ( CPF_Parm )
// TArray< struct FString >       ItemNames                      ( CPF_Parm | CPF_NeedCtorLink )
// TArray< int >                  itemQty                        ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::checkForItemsInInventory ( int iBag, TArray< struct FString > ItemNames, TArray< int > itemQty )
{
	static UFunction* pFncheckForItemsInInventory = NULL;

	if ( ! pFncheckForItemsInInventory )
		pFncheckForItemsInInventory = (UFunction*) UObject::GObjObjects()->Data[ 47197 ];

	UOnlineSubsystemNowGame_execcheckForItemsInInventory_Parms checkForItemsInInventory_Parms;
	checkForItemsInInventory_Parms.iBag = iBag;
	memcpy ( &checkForItemsInInventory_Parms.ItemNames, &ItemNames, 0xC );
	memcpy ( &checkForItemsInInventory_Parms.itemQty, &itemQty, 0xC );

	pFncheckForItemsInInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFncheckForItemsInInventory, &checkForItemsInInventory_Parms, NULL );

	pFncheckForItemsInInventory->FunctionFlags |= 0x400;

	return checkForItemsInInventory_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ItemIsClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::ItemIsClass ( int iBag, int iSlot, struct FString ClassName )
{
	static UFunction* pFnItemIsClass = NULL;

	if ( ! pFnItemIsClass )
		pFnItemIsClass = (UFunction*) UObject::GObjObjects()->Data[ 60100 ];

	UOnlineSubsystemNowGame_execItemIsClass_Parms ItemIsClass_Parms;
	ItemIsClass_Parms.iBag = iBag;
	ItemIsClass_Parms.iSlot = iSlot;
	memcpy ( &ItemIsClass_Parms.ClassName, &ClassName, 0xC );

	pFnItemIsClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnItemIsClass, &ItemIsClass_Parms, NULL );

	pFnItemIsClass->FunctionFlags |= 0x400;

	return ItemIsClass_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.QueryItem_ContentName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ParamName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DefaultValue                   ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::QueryItem_ContentName ( int iBag, int iSlot, struct FString ParamName, struct FString DefaultValue )
{
	static UFunction* pFnQueryItem_ContentName = NULL;

	if ( ! pFnQueryItem_ContentName )
		pFnQueryItem_ContentName = (UFunction*) UObject::GObjObjects()->Data[ 60094 ];

	UOnlineSubsystemNowGame_execQueryItem_ContentName_Parms QueryItem_ContentName_Parms;
	QueryItem_ContentName_Parms.iBag = iBag;
	QueryItem_ContentName_Parms.iSlot = iSlot;
	memcpy ( &QueryItem_ContentName_Parms.ParamName, &ParamName, 0xC );
	memcpy ( &QueryItem_ContentName_Parms.DefaultValue, &DefaultValue, 0xC );

	pFnQueryItem_ContentName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQueryItem_ContentName, &QueryItem_ContentName_Parms, NULL );

	pFnQueryItem_ContentName->FunctionFlags |= 0x400;

	return QueryItem_ContentName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.QueryItem_String
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ParamName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DefaultValue                   ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::QueryItem_String ( int iBag, int iSlot, struct FString ParamName, struct FString DefaultValue )
{
	static UFunction* pFnQueryItem_String = NULL;

	if ( ! pFnQueryItem_String )
		pFnQueryItem_String = (UFunction*) UObject::GObjObjects()->Data[ 60088 ];

	UOnlineSubsystemNowGame_execQueryItem_String_Parms QueryItem_String_Parms;
	QueryItem_String_Parms.iBag = iBag;
	QueryItem_String_Parms.iSlot = iSlot;
	memcpy ( &QueryItem_String_Parms.ParamName, &ParamName, 0xC );
	memcpy ( &QueryItem_String_Parms.DefaultValue, &DefaultValue, 0xC );

	pFnQueryItem_String->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQueryItem_String, &QueryItem_String_Parms, NULL );

	pFnQueryItem_String->FunctionFlags |= 0x400;

	return QueryItem_String_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.QueryItem_Int
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ParamName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            DefaultValue                   ( CPF_Parm )

int UOnlineSubsystemNowGame::QueryItem_Int ( int iBag, int iSlot, struct FString ParamName, int DefaultValue )
{
	static UFunction* pFnQueryItem_Int = NULL;

	if ( ! pFnQueryItem_Int )
		pFnQueryItem_Int = (UFunction*) UObject::GObjObjects()->Data[ 60082 ];

	UOnlineSubsystemNowGame_execQueryItem_Int_Parms QueryItem_Int_Parms;
	QueryItem_Int_Parms.iBag = iBag;
	QueryItem_Int_Parms.iSlot = iSlot;
	memcpy ( &QueryItem_Int_Parms.ParamName, &ParamName, 0xC );
	QueryItem_Int_Parms.DefaultValue = DefaultValue;

	pFnQueryItem_Int->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQueryItem_Int, &QueryItem_Int_Parms, NULL );

	pFnQueryItem_Int->FunctionFlags |= 0x400;

	return QueryItem_Int_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetPickedSlotID
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iBag                           ( CPF_Parm | CPF_OutParm )
// int                            iSlot                          ( CPF_Parm | CPF_OutParm )

bool UOnlineSubsystemNowGame::GetPickedSlotID ( int* iBag, int* iSlot )
{
	static UFunction* pFnGetPickedSlotID = NULL;

	if ( ! pFnGetPickedSlotID )
		pFnGetPickedSlotID = (UFunction*) UObject::GObjObjects()->Data[ 60078 ];

	UOnlineSubsystemNowGame_execGetPickedSlotID_Parms GetPickedSlotID_Parms;

	pFnGetPickedSlotID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPickedSlotID, &GetPickedSlotID_Parms, NULL );

	pFnGetPickedSlotID->FunctionFlags |= 0x400;

	if ( iBag )
		*iBag = GetPickedSlotID_Parms.iBag;

	if ( iSlot )
		*iSlot = GetPickedSlotID_Parms.iSlot;

	return GetPickedSlotID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.SplitItemStack
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )

void UOnlineSubsystemNowGame::SplitItemStack ( int iBag, int iSlot, int iQuantity )
{
	static UFunction* pFnSplitItemStack = NULL;

	if ( ! pFnSplitItemStack )
		pFnSplitItemStack = (UFunction*) UObject::GObjObjects()->Data[ 60074 ];

	UOnlineSubsystemNowGame_execSplitItemStack_Parms SplitItemStack_Parms;
	SplitItemStack_Parms.iBag = iBag;
	SplitItemStack_Parms.iSlot = iSlot;
	SplitItemStack_Parms.iQuantity = iQuantity;

	pFnSplitItemStack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSplitItemStack, &SplitItemStack_Parms, NULL );

	pFnSplitItemStack->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.IsItemSplittable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::IsItemSplittable ( int iBag, int iSlot )
{
	static UFunction* pFnIsItemSplittable = NULL;

	if ( ! pFnIsItemSplittable )
		pFnIsItemSplittable = (UFunction*) UObject::GObjObjects()->Data[ 60070 ];

	UOnlineSubsystemNowGame_execIsItemSplittable_Parms IsItemSplittable_Parms;
	IsItemSplittable_Parms.iBag = iBag;
	IsItemSplittable_Parms.iSlot = iSlot;

	pFnIsItemSplittable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsItemSplittable, &IsItemSplittable_Parms, NULL );

	pFnIsItemSplittable->FunctionFlags |= 0x400;

	return IsItemSplittable_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ItemMatchesPicked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::ItemMatchesPicked ( int iBag, int iSlot )
{
	static UFunction* pFnItemMatchesPicked = NULL;

	if ( ! pFnItemMatchesPicked )
		pFnItemMatchesPicked = (UFunction*) UObject::GObjObjects()->Data[ 60066 ];

	UOnlineSubsystemNowGame_execItemMatchesPicked_Parms ItemMatchesPicked_Parms;
	ItemMatchesPicked_Parms.iBag = iBag;
	ItemMatchesPicked_Parms.iSlot = iSlot;

	pFnItemMatchesPicked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnItemMatchesPicked, &ItemMatchesPicked_Parms, NULL );

	pFnItemMatchesPicked->FunctionFlags |= 0x400;

	return ItemMatchesPicked_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetPetInventoryWeight
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )

float UOnlineSubsystemNowGame::GetPetInventoryWeight ( struct FString sPetGuid )
{
	static UFunction* pFnGetPetInventoryWeight = NULL;

	if ( ! pFnGetPetInventoryWeight )
		pFnGetPetInventoryWeight = (UFunction*) UObject::GObjObjects()->Data[ 60063 ];

	UOnlineSubsystemNowGame_execGetPetInventoryWeight_Parms GetPetInventoryWeight_Parms;
	memcpy ( &GetPetInventoryWeight_Parms.sPetGuid, &sPetGuid, 0xC );

	pFnGetPetInventoryWeight->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetInventoryWeight, &GetPetInventoryWeight_Parms, NULL );

	pFnGetPetInventoryWeight->FunctionFlags |= 0x400;

	return GetPetInventoryWeight_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetPetEquipmentMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sSlot                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )

float UOnlineSubsystemNowGame::GetPetEquipmentMod ( struct FString sSlot, struct FString sPetGuid )
{
	static UFunction* pFnGetPetEquipmentMod = NULL;

	if ( ! pFnGetPetEquipmentMod )
		pFnGetPetEquipmentMod = (UFunction*) UObject::GObjObjects()->Data[ 60059 ];

	UOnlineSubsystemNowGame_execGetPetEquipmentMod_Parms GetPetEquipmentMod_Parms;
	memcpy ( &GetPetEquipmentMod_Parms.sSlot, &sSlot, 0xC );
	memcpy ( &GetPetEquipmentMod_Parms.sPetGuid, &sPetGuid, 0xC );

	pFnGetPetEquipmentMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetEquipmentMod, &GetPetEquipmentMod_Parms, NULL );

	pFnGetPetEquipmentMod->FunctionFlags |= 0x400;

	return GetPetEquipmentMod_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetUsingBank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UOnlineSubsystemNowGame::GetUsingBank ( )
{
	static UFunction* pFnGetUsingBank = NULL;

	if ( ! pFnGetUsingBank )
		pFnGetUsingBank = (UFunction*) UObject::GObjObjects()->Data[ 60057 ];

	UOnlineSubsystemNowGame_execGetUsingBank_Parms GetUsingBank_Parms;

	pFnGetUsingBank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUsingBank, &GetUsingBank_Parms, NULL );

	pFnGetUsingBank->FunctionFlags |= 0x400;

	return GetUsingBank_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.SetUsingBank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  banked                         ( CPF_Parm )

void UOnlineSubsystemNowGame::SetUsingBank ( unsigned long banked )
{
	static UFunction* pFnSetUsingBank = NULL;

	if ( ! pFnSetUsingBank )
		pFnSetUsingBank = (UFunction*) UObject::GObjObjects()->Data[ 60055 ];

	UOnlineSubsystemNowGame_execSetUsingBank_Parms SetUsingBank_Parms;
	SetUsingBank_Parms.banked = banked;

	pFnSetUsingBank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetUsingBank, &SetUsingBank_Parms, NULL );

	pFnSetUsingBank->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PickupBankItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::PickupBankItem ( int iSlot )
{
	static UFunction* pFnPickupBankItem = NULL;

	if ( ! pFnPickupBankItem )
		pFnPickupBankItem = (UFunction*) UObject::GObjObjects()->Data[ 60053 ];

	UOnlineSubsystemNowGame_execPickupBankItem_Parms PickupBankItem_Parms;
	PickupBankItem_Parms.iSlot = iSlot;

	pFnPickupBankItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPickupBankItem, &PickupBankItem_Parms, NULL );

	pFnPickupBankItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PlacePickedInBank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::PlacePickedInBank ( int iSlot )
{
	static UFunction* pFnPlacePickedInBank = NULL;

	if ( ! pFnPlacePickedInBank )
		pFnPlacePickedInBank = (UFunction*) UObject::GObjObjects()->Data[ 60051 ];

	UOnlineSubsystemNowGame_execPlacePickedInBank_Parms PlacePickedInBank_Parms;
	PlacePickedInBank_Parms.iSlot = iSlot;

	pFnPlacePickedInBank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlacePickedInBank, &PlacePickedInBank_Parms, NULL );

	pFnPlacePickedInBank->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetBankContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// int                            ItemQuantity                   ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetBankContentInfo ( int iSlot, class UContentInfo** Info, int* ItemQuantity )
{
	static UFunction* pFnGetBankContentInfo = NULL;

	if ( ! pFnGetBankContentInfo )
		pFnGetBankContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 60047 ];

	UOnlineSubsystemNowGame_execGetBankContentInfo_Parms GetBankContentInfo_Parms;
	GetBankContentInfo_Parms.iSlot = iSlot;

	pFnGetBankContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBankContentInfo, &GetBankContentInfo_Parms, NULL );

	pFnGetBankContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetBankContentInfo_Parms.Info;

	if ( ItemQuantity )
		*ItemQuantity = GetBankContentInfo_Parms.ItemQuantity;
};

// Function NowGame.OnlineSubsystemNowGame.SplitInBag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBagGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNewSlot                       ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )

bool UOnlineSubsystemNowGame::SplitInBag ( struct FString sGuid, struct FString sBagGuid, int iNewSlot, int iQuantity )
{
	static UFunction* pFnSplitInBag = NULL;

	if ( ! pFnSplitInBag )
		pFnSplitInBag = (UFunction*) UObject::GObjObjects()->Data[ 55071 ];

	UOnlineSubsystemNowGame_execSplitInBag_Parms SplitInBag_Parms;
	memcpy ( &SplitInBag_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &SplitInBag_Parms.sBagGuid, &sBagGuid, 0xC );
	SplitInBag_Parms.iNewSlot = iNewSlot;
	SplitInBag_Parms.iQuantity = iQuantity;

	pFnSplitInBag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSplitInBag, &SplitInBag_Parms, NULL );

	pFnSplitInBag->FunctionFlags |= 0x400;

	return SplitInBag_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.SplitInInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNewDeposit                    ( CPF_Parm )
// int                            iNewSlot                       ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )

bool UOnlineSubsystemNowGame::SplitInInventory ( struct FString sGuid, int iNewDeposit, int iNewSlot, int iQuantity )
{
	static UFunction* pFnSplitInInventory = NULL;

	if ( ! pFnSplitInInventory )
		pFnSplitInInventory = (UFunction*) UObject::GObjObjects()->Data[ 55073 ];

	UOnlineSubsystemNowGame_execSplitInInventory_Parms SplitInInventory_Parms;
	memcpy ( &SplitInInventory_Parms.sGuid, &sGuid, 0xC );
	SplitInInventory_Parms.iNewDeposit = iNewDeposit;
	SplitInInventory_Parms.iNewSlot = iNewSlot;
	SplitInInventory_Parms.iQuantity = iQuantity;

	pFnSplitInInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSplitInInventory, &SplitInInventory_Parms, NULL );

	pFnSplitInInventory->FunctionFlags |= 0x400;

	return SplitInInventory_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.PlaceInGuidBag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBagGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::PlaceInGuidBag ( struct FString sGuid, struct FString sBagGuid, int iSlot )
{
	static UFunction* pFnPlaceInGuidBag = NULL;

	if ( ! pFnPlaceInGuidBag )
		pFnPlaceInGuidBag = (UFunction*) UObject::GObjObjects()->Data[ 55053 ];

	UOnlineSubsystemNowGame_execPlaceInGuidBag_Parms PlaceInGuidBag_Parms;
	memcpy ( &PlaceInGuidBag_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &PlaceInGuidBag_Parms.sBagGuid, &sBagGuid, 0xC );
	PlaceInGuidBag_Parms.iSlot = iSlot;

	pFnPlaceInGuidBag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaceInGuidBag, &PlaceInGuidBag_Parms, NULL );

	pFnPlaceInGuidBag->FunctionFlags |= 0x400;

	return PlaceInGuidBag_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.PlaceInInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iDeposit                       ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::PlaceInInventory ( struct FString sGuid, int iDeposit, int iSlot )
{
	static UFunction* pFnPlaceInInventory = NULL;

	if ( ! pFnPlaceInInventory )
		pFnPlaceInInventory = (UFunction*) UObject::GObjObjects()->Data[ 55055 ];

	UOnlineSubsystemNowGame_execPlaceInInventory_Parms PlaceInInventory_Parms;
	memcpy ( &PlaceInInventory_Parms.sGuid, &sGuid, 0xC );
	PlaceInInventory_Parms.iDeposit = iDeposit;
	PlaceInInventory_Parms.iSlot = iSlot;

	pFnPlaceInInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaceInInventory, &PlaceInInventory_Parms, NULL );

	pFnPlaceInInventory->FunctionFlags |= 0x400;

	return PlaceInInventory_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ServerFixBrokenItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            ItemType                       ( CPF_Parm )
// struct FString                 TargetName                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ServerFixBrokenItem ( struct FString ItemGuid, int ItemType, struct FString TargetName )
{
	static UFunction* pFnServerFixBrokenItem = NULL;

	if ( ! pFnServerFixBrokenItem )
		pFnServerFixBrokenItem = (UFunction*) UObject::GObjObjects()->Data[ 60029 ];

	UOnlineSubsystemNowGame_execServerFixBrokenItem_Parms ServerFixBrokenItem_Parms;
	memcpy ( &ServerFixBrokenItem_Parms.ItemGuid, &ItemGuid, 0xC );
	ServerFixBrokenItem_Parms.ItemType = ItemType;
	memcpy ( &ServerFixBrokenItem_Parms.TargetName, &TargetName, 0xC );

	pFnServerFixBrokenItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerFixBrokenItem, &ServerFixBrokenItem_Parms, NULL );

	pFnServerFixBrokenItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.RequestGMBrokenItemList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 TargetName                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::RequestGMBrokenItemList ( struct FString TargetName )
{
	static UFunction* pFnRequestGMBrokenItemList = NULL;

	if ( ! pFnRequestGMBrokenItemList )
		pFnRequestGMBrokenItemList = (UFunction*) UObject::GObjObjects()->Data[ 60027 ];

	UOnlineSubsystemNowGame_execRequestGMBrokenItemList_Parms RequestGMBrokenItemList_Parms;
	memcpy ( &RequestGMBrokenItemList_Parms.TargetName, &TargetName, 0xC );

	pFnRequestGMBrokenItemList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestGMBrokenItemList, &RequestGMBrokenItemList_Parms, NULL );

	pFnRequestGMBrokenItemList->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ClaimGMPetition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sPetitionSource                ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClaimGMPetition ( struct FString sPetitionSource )
{
	static UFunction* pFnClaimGMPetition = NULL;

	if ( ! pFnClaimGMPetition )
		pFnClaimGMPetition = (UFunction*) UObject::GObjObjects()->Data[ 60025 ];

	UOnlineSubsystemNowGame_execClaimGMPetition_Parms ClaimGMPetition_Parms;
	memcpy ( &ClaimGMPetition_Parms.sPetitionSource, &sPetitionSource, 0xC );

	pFnClaimGMPetition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClaimGMPetition, &ClaimGMPetition_Parms, NULL );

	pFnClaimGMPetition->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.EscalateGMPetition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sPetitionSourceName            ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::EscalateGMPetition ( struct FString sPetitionSourceName )
{
	static UFunction* pFnEscalateGMPetition = NULL;

	if ( ! pFnEscalateGMPetition )
		pFnEscalateGMPetition = (UFunction*) UObject::GObjObjects()->Data[ 60023 ];

	UOnlineSubsystemNowGame_execEscalateGMPetition_Parms EscalateGMPetition_Parms;
	memcpy ( &EscalateGMPetition_Parms.sPetitionSourceName, &sPetitionSourceName, 0xC );

	pFnEscalateGMPetition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEscalateGMPetition, &EscalateGMPetition_Parms, NULL );

	pFnEscalateGMPetition->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.CloseGMPetition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sPetitionSource                ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::CloseGMPetition ( struct FString sPetitionSource )
{
	static UFunction* pFnCloseGMPetition = NULL;

	if ( ! pFnCloseGMPetition )
		pFnCloseGMPetition = (UFunction*) UObject::GObjObjects()->Data[ 60021 ];

	UOnlineSubsystemNowGame_execCloseGMPetition_Parms CloseGMPetition_Parms;
	memcpy ( &CloseGMPetition_Parms.sPetitionSource, &sPetitionSource, 0xC );

	pFnCloseGMPetition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCloseGMPetition, &CloseGMPetition_Parms, NULL );

	pFnCloseGMPetition->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.SendGMPetition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sCategory                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sDescription                   ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::SendGMPetition ( struct FString sCategory, struct FString sDescription )
{
	static UFunction* pFnSendGMPetition = NULL;

	if ( ! pFnSendGMPetition )
		pFnSendGMPetition = (UFunction*) UObject::GObjObjects()->Data[ 60018 ];

	UOnlineSubsystemNowGame_execSendGMPetition_Parms SendGMPetition_Parms;
	memcpy ( &SendGMPetition_Parms.sCategory, &sCategory, 0xC );
	memcpy ( &SendGMPetition_Parms.sDescription, &sDescription, 0xC );

	pFnSendGMPetition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendGMPetition, &SendGMPetition_Parms, NULL );

	pFnSendGMPetition->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.FindItemGuidByBookGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sBookGuid                      ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::FindItemGuidByBookGuid ( struct FString sBookGuid )
{
	static UFunction* pFnFindItemGuidByBookGuid = NULL;

	if ( ! pFnFindItemGuidByBookGuid )
		pFnFindItemGuidByBookGuid = (UFunction*) UObject::GObjObjects()->Data[ 53517 ];

	UOnlineSubsystemNowGame_execFindItemGuidByBookGuid_Parms FindItemGuidByBookGuid_Parms;
	memcpy ( &FindItemGuidByBookGuid_Parms.sBookGuid, &sBookGuid, 0xC );

	pFnFindItemGuidByBookGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindItemGuidByBookGuid, &FindItemGuidByBookGuid_Parms, NULL );

	pFnFindItemGuidByBookGuid->FunctionFlags |= 0x400;

	return FindItemGuidByBookGuid_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.RenameBook
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sBookGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::RenameBook ( struct FString sBookGuid, struct FString sTitle )
{
	static UFunction* pFnRenameBook = NULL;

	if ( ! pFnRenameBook )
		pFnRenameBook = (UFunction*) UObject::GObjObjects()->Data[ 60014 ];

	UOnlineSubsystemNowGame_execRenameBook_Parms RenameBook_Parms;
	memcpy ( &RenameBook_Parms.sBookGuid, &sBookGuid, 0xC );
	memcpy ( &RenameBook_Parms.sTitle, &sTitle, 0xC );

	pFnRenameBook->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRenameBook, &RenameBook_Parms, NULL );

	pFnRenameBook->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.DestroyItemAmount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iAmount                        ( CPF_Parm )

void UOnlineSubsystemNowGame::DestroyItemAmount ( struct FString sItemGuid, int iAmount )
{
	static UFunction* pFnDestroyItemAmount = NULL;

	if ( ! pFnDestroyItemAmount )
		pFnDestroyItemAmount = (UFunction*) UObject::GObjObjects()->Data[ 60011 ];

	UOnlineSubsystemNowGame_execDestroyItemAmount_Parms DestroyItemAmount_Parms;
	memcpy ( &DestroyItemAmount_Parms.sItemGuid, &sItemGuid, 0xC );
	DestroyItemAmount_Parms.iAmount = iAmount;

	pFnDestroyItemAmount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDestroyItemAmount, &DestroyItemAmount_Parms, NULL );

	pFnDestroyItemAmount->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.DestroyItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::DestroyItem ( struct FString sItemGuid )
{
	static UFunction* pFnDestroyItem = NULL;

	if ( ! pFnDestroyItem )
		pFnDestroyItem = (UFunction*) UObject::GObjObjects()->Data[ 60009 ];

	UOnlineSubsystemNowGame_execDestroyItem_Parms DestroyItem_Parms;
	memcpy ( &DestroyItem_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnDestroyItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDestroyItem, &DestroyItem_Parms, NULL );

	pFnDestroyItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.DestroyPickedItem
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            iQuantity                      ( CPF_OptionalParm | CPF_Parm )

void UOnlineSubsystemNowGame::DestroyPickedItem ( int iQuantity )
{
	static UFunction* pFnDestroyPickedItem = NULL;

	if ( ! pFnDestroyPickedItem )
		pFnDestroyPickedItem = (UFunction*) UObject::GObjObjects()->Data[ 60007 ];

	UOnlineSubsystemNowGame_execDestroyPickedItem_Parms DestroyPickedItem_Parms;
	DestroyPickedItem_Parms.iQuantity = iQuantity;

	pFnDestroyPickedItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDestroyPickedItem, &DestroyPickedItem_Parms, NULL );

	pFnDestroyPickedItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetPickedInventorySlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetPickedInventorySlot ( )
{
	static UFunction* pFnGetPickedInventorySlot = NULL;

	if ( ! pFnGetPickedInventorySlot )
		pFnGetPickedInventorySlot = (UFunction*) UObject::GObjObjects()->Data[ 60005 ];

	UOnlineSubsystemNowGame_execGetPickedInventorySlot_Parms GetPickedInventorySlot_Parms;

	pFnGetPickedInventorySlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPickedInventorySlot, &GetPickedInventorySlot_Parms, NULL );

	pFnGetPickedInventorySlot->FunctionFlags |= 0x400;

	return GetPickedInventorySlot_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetMyGuildRank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetMyGuildRank ( )
{
	static UFunction* pFnGetMyGuildRank = NULL;

	if ( ! pFnGetMyGuildRank )
		pFnGetMyGuildRank = (UFunction*) UObject::GObjObjects()->Data[ 54841 ];

	UOnlineSubsystemNowGame_execGetMyGuildRank_Parms GetMyGuildRank_Parms;

	pFnGetMyGuildRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMyGuildRank, &GetMyGuildRank_Parms, NULL );

	pFnGetMyGuildRank->FunctionFlags |= 0x400;

	return GetMyGuildRank_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetMyFullGuildName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetMyFullGuildName ( )
{
	static UFunction* pFnGetMyFullGuildName = NULL;

	if ( ! pFnGetMyFullGuildName )
		pFnGetMyFullGuildName = (UFunction*) UObject::GObjObjects()->Data[ 45908 ];

	UOnlineSubsystemNowGame_execGetMyFullGuildName_Parms GetMyFullGuildName_Parms;

	pFnGetMyFullGuildName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMyFullGuildName, &GetMyFullGuildName_Parms, NULL );

	pFnGetMyFullGuildName->FunctionFlags |= 0x400;

	return GetMyFullGuildName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetMyGuildName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetMyGuildName ( )
{
	static UFunction* pFnGetMyGuildName = NULL;

	if ( ! pFnGetMyGuildName )
		pFnGetMyGuildName = (UFunction*) UObject::GObjObjects()->Data[ 60003 ];

	UOnlineSubsystemNowGame_execGetMyGuildName_Parms GetMyGuildName_Parms;

	pFnGetMyGuildName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMyGuildName, &GetMyGuildName_Parms, NULL );

	pFnGetMyGuildName->FunctionFlags |= 0x400;

	return GetMyGuildName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.TellAvatar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         Avatar                         ( CPF_Parm )
// int                            tellEnum                       ( CPF_Parm )

void UOnlineSubsystemNowGame::TellAvatar ( class ANowAtlasAvatar* Avatar, int tellEnum )
{
	static UFunction* pFnTellAvatar = NULL;

	if ( ! pFnTellAvatar )
		pFnTellAvatar = (UFunction*) UObject::GObjObjects()->Data[ 60000 ];

	UOnlineSubsystemNowGame_execTellAvatar_Parms TellAvatar_Parms;
	TellAvatar_Parms.Avatar = Avatar;
	TellAvatar_Parms.tellEnum = tellEnum;

	pFnTellAvatar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTellAvatar, &TellAvatar_Parms, NULL );

	pFnTellAvatar->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.EquipPetItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sEquipSlot                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::EquipPetItem ( struct FString sItemGuid, struct FString sEquipSlot, struct FString sPetGuid )
{
	static UFunction* pFnEquipPetItem = NULL;

	if ( ! pFnEquipPetItem )
		pFnEquipPetItem = (UFunction*) UObject::GObjObjects()->Data[ 59996 ];

	UOnlineSubsystemNowGame_execEquipPetItem_Parms EquipPetItem_Parms;
	memcpy ( &EquipPetItem_Parms.sItemGuid, &sItemGuid, 0xC );
	memcpy ( &EquipPetItem_Parms.sEquipSlot, &sEquipSlot, 0xC );
	memcpy ( &EquipPetItem_Parms.sPetGuid, &sPetGuid, 0xC );

	pFnEquipPetItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquipPetItem, &EquipPetItem_Parms, NULL );

	pFnEquipPetItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.SwapItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sTargetGuid                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPickedGuid                    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::SwapItem ( struct FString sTargetGuid, struct FString sPickedGuid )
{
	static UFunction* pFnSwapItem = NULL;

	if ( ! pFnSwapItem )
		pFnSwapItem = (UFunction*) UObject::GObjObjects()->Data[ 59993 ];

	UOnlineSubsystemNowGame_execSwapItem_Parms SwapItem_Parms;
	memcpy ( &SwapItem_Parms.sTargetGuid, &sTargetGuid, 0xC );
	memcpy ( &SwapItem_Parms.sPickedGuid, &sPickedGuid, 0xC );

	pFnSwapItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSwapItem, &SwapItem_Parms, NULL );

	pFnSwapItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.EquipItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sEquipSlot                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::EquipItem ( struct FString sItemGuid, struct FString sEquipSlot )
{
	static UFunction* pFnEquipItem = NULL;

	if ( ! pFnEquipItem )
		pFnEquipItem = (UFunction*) UObject::GObjObjects()->Data[ 59990 ];

	UOnlineSubsystemNowGame_execEquipItem_Parms EquipItem_Parms;
	memcpy ( &EquipItem_Parms.sItemGuid, &sItemGuid, 0xC );
	memcpy ( &EquipItem_Parms.sEquipSlot, &sEquipSlot, 0xC );

	pFnEquipItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquipItem, &EquipItem_Parms, NULL );

	pFnEquipItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.UseItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::UseItem ( struct FString sItemGuid )
{
	static UFunction* pFnUseItem = NULL;

	if ( ! pFnUseItem )
		pFnUseItem = (UFunction*) UObject::GObjObjects()->Data[ 55042 ];

	UOnlineSubsystemNowGame_execUseItem_Parms UseItem_Parms;
	memcpy ( &UseItem_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnUseItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseItem, &UseItem_Parms, NULL );

	pFnUseItem->FunctionFlags |= 0x400;

	return UseItem_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.UseInventoryItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::UseInventoryItem ( int iBag, int iSlot )
{
	static UFunction* pFnUseInventoryItem = NULL;

	if ( ! pFnUseInventoryItem )
		pFnUseInventoryItem = (UFunction*) UObject::GObjObjects()->Data[ 59986 ];

	UOnlineSubsystemNowGame_execUseInventoryItem_Parms UseInventoryItem_Parms;
	UseInventoryItem_Parms.iBag = iBag;
	UseInventoryItem_Parms.iSlot = iSlot;

	pFnUseInventoryItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseInventoryItem, &UseInventoryItem_Parms, NULL );

	pFnUseInventoryItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetVendorCompactGuid
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetVendorCompactGuid ( int iSlot, struct FString* ItemGuid )
{
	static UFunction* pFnGetVendorCompactGuid = NULL;

	if ( ! pFnGetVendorCompactGuid )
		pFnGetVendorCompactGuid = (UFunction*) UObject::GObjObjects()->Data[ 59983 ];

	UOnlineSubsystemNowGame_execGetVendorCompactGuid_Parms GetVendorCompactGuid_Parms;
	GetVendorCompactGuid_Parms.iSlot = iSlot;

	pFnGetVendorCompactGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVendorCompactGuid, &GetVendorCompactGuid_Parms, NULL );

	pFnGetVendorCompactGuid->FunctionFlags |= 0x400;

	if ( ItemGuid )
		memcpy ( ItemGuid, &GetVendorCompactGuid_Parms.ItemGuid, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillOpenInterface
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 SceneStr                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            GFXEnum                        ( CPF_Parm | CPF_OutParm )

bool UOnlineSubsystemNowGame::GetSkillOpenInterface ( int iSlot, struct FString* SceneStr, int* GFXEnum )
{
	static UFunction* pFnGetSkillOpenInterface = NULL;

	if ( ! pFnGetSkillOpenInterface )
		pFnGetSkillOpenInterface = (UFunction*) UObject::GObjObjects()->Data[ 59978 ];

	UOnlineSubsystemNowGame_execGetSkillOpenInterface_Parms GetSkillOpenInterface_Parms;
	GetSkillOpenInterface_Parms.iSlot = iSlot;

	pFnGetSkillOpenInterface->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillOpenInterface, &GetSkillOpenInterface_Parms, NULL );

	pFnGetSkillOpenInterface->FunctionFlags |= 0x400;

	if ( SceneStr )
		memcpy ( SceneStr, &GetSkillOpenInterface_Parms.SceneStr, 0xC );

	if ( GFXEnum )
		*GFXEnum = GetSkillOpenInterface_Parms.GFXEnum;

	return GetSkillOpenInterface_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillTargetRequierment
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::GetSkillTargetRequierment ( int iSlot )
{
	static UFunction* pFnGetSkillTargetRequierment = NULL;

	if ( ! pFnGetSkillTargetRequierment )
		pFnGetSkillTargetRequierment = (UFunction*) UObject::GObjObjects()->Data[ 59975 ];

	UOnlineSubsystemNowGame_execGetSkillTargetRequierment_Parms GetSkillTargetRequierment_Parms;
	GetSkillTargetRequierment_Parms.iSlot = iSlot;

	pFnGetSkillTargetRequierment->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillTargetRequierment, &GetSkillTargetRequierment_Parms, NULL );

	pFnGetSkillTargetRequierment->FunctionFlags |= 0x400;

	return GetSkillTargetRequierment_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillCombatMove
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::GetSkillCombatMove ( int iSlot )
{
	static UFunction* pFnGetSkillCombatMove = NULL;

	if ( ! pFnGetSkillCombatMove )
		pFnGetSkillCombatMove = (UFunction*) UObject::GObjObjects()->Data[ 59972 ];

	UOnlineSubsystemNowGame_execGetSkillCombatMove_Parms GetSkillCombatMove_Parms;
	GetSkillCombatMove_Parms.iSlot = iSlot;

	pFnGetSkillCombatMove->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillCombatMove, &GetSkillCombatMove_Parms, NULL );

	pFnGetSkillCombatMove->FunctionFlags |= 0x400;

	return GetSkillCombatMove_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillTargetDistLimit
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

int UOnlineSubsystemNowGame::GetSkillTargetDistLimit ( int iSlot )
{
	static UFunction* pFnGetSkillTargetDistLimit = NULL;

	if ( ! pFnGetSkillTargetDistLimit )
		pFnGetSkillTargetDistLimit = (UFunction*) UObject::GObjObjects()->Data[ 59969 ];

	UOnlineSubsystemNowGame_execGetSkillTargetDistLimit_Parms GetSkillTargetDistLimit_Parms;
	GetSkillTargetDistLimit_Parms.iSlot = iSlot;

	pFnGetSkillTargetDistLimit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillTargetDistLimit, &GetSkillTargetDistLimit_Parms, NULL );

	pFnGetSkillTargetDistLimit->FunctionFlags |= 0x400;

	return GetSkillTargetDistLimit_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillTargetTypeID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

int UOnlineSubsystemNowGame::GetSkillTargetTypeID ( int iSlot )
{
	static UFunction* pFnGetSkillTargetTypeID = NULL;

	if ( ! pFnGetSkillTargetTypeID )
		pFnGetSkillTargetTypeID = (UFunction*) UObject::GObjObjects()->Data[ 59966 ];

	UOnlineSubsystemNowGame_execGetSkillTargetTypeID_Parms GetSkillTargetTypeID_Parms;
	GetSkillTargetTypeID_Parms.iSlot = iSlot;

	pFnGetSkillTargetTypeID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillTargetTypeID, &GetSkillTargetTypeID_Parms, NULL );

	pFnGetSkillTargetTypeID->FunctionFlags |= 0x400;

	return GetSkillTargetTypeID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.UpdateFriendsList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::UpdateFriendsList ( )
{
	static UFunction* pFnUpdateFriendsList = NULL;

	if ( ! pFnUpdateFriendsList )
		pFnUpdateFriendsList = (UFunction*) UObject::GObjObjects()->Data[ 59965 ];

	UOnlineSubsystemNowGame_execUpdateFriendsList_Parms UpdateFriendsList_Parms;

	pFnUpdateFriendsList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFriendsList, &UpdateFriendsList_Parms, NULL );

	pFnUpdateFriendsList->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetHouseSessionType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetHouseSessionType ( )
{
	static UFunction* pFnGetHouseSessionType = NULL;

	if ( ! pFnGetHouseSessionType )
		pFnGetHouseSessionType = (UFunction*) UObject::GObjObjects()->Data[ 59963 ];

	UOnlineSubsystemNowGame_execGetHouseSessionType_Parms GetHouseSessionType_Parms;

	pFnGetHouseSessionType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHouseSessionType, &GetHouseSessionType_Parms, NULL );

	pFnGetHouseSessionType->FunctionFlags |= 0x400;

	return GetHouseSessionType_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetHouseSessionBag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetHouseSessionBag ( )
{
	static UFunction* pFnGetHouseSessionBag = NULL;

	if ( ! pFnGetHouseSessionBag )
		pFnGetHouseSessionBag = (UFunction*) UObject::GObjObjects()->Data[ 55051 ];

	UOnlineSubsystemNowGame_execGetHouseSessionBag_Parms GetHouseSessionBag_Parms;

	pFnGetHouseSessionBag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHouseSessionBag, &GetHouseSessionBag_Parms, NULL );

	pFnGetHouseSessionBag->FunctionFlags |= 0x400;

	return GetHouseSessionBag_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetHouseItemContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// int                            SessionId                      ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// int                            ItemQuantity                   ( CPF_Parm | CPF_OutParm )
// struct FString                 Description                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetHouseItemContentInfo ( int iSlot, int SessionId, class UContentInfo** Info, int* ItemQuantity, struct FString* Description, struct FString* ItemGuid )
{
	static UFunction* pFnGetHouseItemContentInfo = NULL;

	if ( ! pFnGetHouseItemContentInfo )
		pFnGetHouseItemContentInfo = (UFunction*) UObject::GObjObjects()->Data[ 59956 ];

	UOnlineSubsystemNowGame_execGetHouseItemContentInfo_Parms GetHouseItemContentInfo_Parms;
	GetHouseItemContentInfo_Parms.iSlot = iSlot;
	GetHouseItemContentInfo_Parms.SessionId = SessionId;

	pFnGetHouseItemContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHouseItemContentInfo, &GetHouseItemContentInfo_Parms, NULL );

	pFnGetHouseItemContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetHouseItemContentInfo_Parms.Info;

	if ( ItemQuantity )
		*ItemQuantity = GetHouseItemContentInfo_Parms.ItemQuantity;

	if ( Description )
		memcpy ( Description, &GetHouseItemContentInfo_Parms.Description, 0xC );

	if ( ItemGuid )
		memcpy ( ItemGuid, &GetHouseItemContentInfo_Parms.ItemGuid, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.CancelLogin
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UOnlineSubsystemNowGame::CancelLogin ( )
{
	static UFunction* pFnCancelLogin = NULL;

	if ( ! pFnCancelLogin )
		pFnCancelLogin = (UFunction*) UObject::GObjObjects()->Data[ 59954 ];

	UOnlineSubsystemNowGame_execCancelLogin_Parms CancelLogin_Parms;

	pFnCancelLogin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelLogin, &CancelLogin_Parms, NULL );

	pFnCancelLogin->FunctionFlags |= 0x400;

	return CancelLogin_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.AtlasLogin
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 UserName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Password                       ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::AtlasLogin ( struct FString UserName, struct FString Password )
{
	static UFunction* pFnAtlasLogin = NULL;

	if ( ! pFnAtlasLogin )
		pFnAtlasLogin = (UFunction*) UObject::GObjObjects()->Data[ 56182 ];

	UOnlineSubsystemNowGame_execAtlasLogin_Parms AtlasLogin_Parms;
	memcpy ( &AtlasLogin_Parms.UserName, &UserName, 0xC );
	memcpy ( &AtlasLogin_Parms.Password, &Password, 0xC );

	pFnAtlasLogin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasLogin, &AtlasLogin_Parms, NULL );

	pFnAtlasLogin->FunctionFlags |= 0x400;

	return AtlasLogin_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.DumpTextToFile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 outFilename                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::DumpTextToFile ( struct FString outFilename, struct FString Text )
{
	static UFunction* pFnDumpTextToFile = NULL;

	if ( ! pFnDumpTextToFile )
		pFnDumpTextToFile = (UFunction*) UObject::GObjObjects()->Data[ 59949 ];

	UOnlineSubsystemNowGame_execDumpTextToFile_Parms DumpTextToFile_Parms;
	memcpy ( &DumpTextToFile_Parms.outFilename, &outFilename, 0xC );
	memcpy ( &DumpTextToFile_Parms.Text, &Text, 0xC );

	pFnDumpTextToFile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDumpTextToFile, &DumpTextToFile_Parms, NULL );

	pFnDumpTextToFile->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.UpgradeTS
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarTerritoryStructure* pStructure                     ( CPF_Parm )

void UOnlineSubsystemNowGame::UpgradeTS ( class ANowAtlasAvatarTerritoryStructure* pStructure )
{
	static UFunction* pFnUpgradeTS = NULL;

	if ( ! pFnUpgradeTS )
		pFnUpgradeTS = (UFunction*) UObject::GObjObjects()->Data[ 59947 ];

	UOnlineSubsystemNowGame_execUpgradeTS_Parms UpgradeTS_Parms;
	UpgradeTS_Parms.pStructure = pStructure;

	pFnUpgradeTS->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpgradeTS, &UpgradeTS_Parms, NULL );

	pFnUpgradeTS->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PlaceTSNpc
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Slot                           ( CPF_Parm )
// class ANowAtlasAvatarTerritoryStructure* pStructure                     ( CPF_Parm )

void UOnlineSubsystemNowGame::PlaceTSNpc ( int Slot, class ANowAtlasAvatarTerritoryStructure* pStructure )
{
	static UFunction* pFnPlaceTSNpc = NULL;

	if ( ! pFnPlaceTSNpc )
		pFnPlaceTSNpc = (UFunction*) UObject::GObjObjects()->Data[ 59944 ];

	UOnlineSubsystemNowGame_execPlaceTSNpc_Parms PlaceTSNpc_Parms;
	PlaceTSNpc_Parms.Slot = Slot;
	PlaceTSNpc_Parms.pStructure = pStructure;

	pFnPlaceTSNpc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaceTSNpc, &PlaceTSNpc_Parms, NULL );

	pFnPlaceTSNpc->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.LockLastItemUsed
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::LockLastItemUsed ( )
{
	static UFunction* pFnLockLastItemUsed = NULL;

	if ( ! pFnLockLastItemUsed )
		pFnLockLastItemUsed = (UFunction*) UObject::GObjObjects()->Data[ 59943 ];

	UOnlineSubsystemNowGame_execLockLastItemUsed_Parms LockLastItemUsed_Parms;

	pFnLockLastItemUsed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLockLastItemUsed, &LockLastItemUsed_Parms, NULL );

	pFnLockLastItemUsed->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ClearLockedItemGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::ClearLockedItemGuid ( )
{
	static UFunction* pFnClearLockedItemGuid = NULL;

	if ( ! pFnClearLockedItemGuid )
		pFnClearLockedItemGuid = (UFunction*) UObject::GObjObjects()->Data[ 59942 ];

	UOnlineSubsystemNowGame_execClearLockedItemGuid_Parms ClearLockedItemGuid_Parms;

	pFnClearLockedItemGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearLockedItemGuid, &ClearLockedItemGuid_Parms, NULL );

	pFnClearLockedItemGuid->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ClearLastItemUsed
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::ClearLastItemUsed ( )
{
	static UFunction* pFnClearLastItemUsed = NULL;

	if ( ! pFnClearLastItemUsed )
		pFnClearLastItemUsed = (UFunction*) UObject::GObjObjects()->Data[ 59941 ];

	UOnlineSubsystemNowGame_execClearLastItemUsed_Parms ClearLastItemUsed_Parms;

	pFnClearLastItemUsed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearLastItemUsed, &ClearLastItemUsed_Parms, NULL );

	pFnClearLastItemUsed->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ForceTriggerEquipDelegate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::ForceTriggerEquipDelegate ( )
{
	static UFunction* pFnForceTriggerEquipDelegate = NULL;

	if ( ! pFnForceTriggerEquipDelegate )
		pFnForceTriggerEquipDelegate = (UFunction*) UObject::GObjObjects()->Data[ 59940 ];

	UOnlineSubsystemNowGame_execForceTriggerEquipDelegate_Parms ForceTriggerEquipDelegate_Parms;

	pFnForceTriggerEquipDelegate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceTriggerEquipDelegate, &ForceTriggerEquipDelegate_Parms, NULL );

	pFnForceTriggerEquipDelegate->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PlaceKeepNpc
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Slot                           ( CPF_Parm )

void UOnlineSubsystemNowGame::PlaceKeepNpc ( int Slot )
{
	static UFunction* pFnPlaceKeepNpc = NULL;

	if ( ! pFnPlaceKeepNpc )
		pFnPlaceKeepNpc = (UFunction*) UObject::GObjObjects()->Data[ 59938 ];

	UOnlineSubsystemNowGame_execPlaceKeepNpc_Parms PlaceKeepNpc_Parms;
	PlaceKeepNpc_Parms.Slot = Slot;

	pFnPlaceKeepNpc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaceKeepNpc, &PlaceKeepNpc_Parms, NULL );

	pFnPlaceKeepNpc->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.SetPylonName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarPylon*    targetPylon                    ( CPF_Parm )
// struct FString                 NewValue                       ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::SetPylonName ( class ANowAtlasAvatarPylon* targetPylon, struct FString NewValue )
{
	static UFunction* pFnSetPylonName = NULL;

	if ( ! pFnSetPylonName )
		pFnSetPylonName = (UFunction*) UObject::GObjObjects()->Data[ 59935 ];

	UOnlineSubsystemNowGame_execSetPylonName_Parms SetPylonName_Parms;
	SetPylonName_Parms.targetPylon = targetPylon;
	memcpy ( &SetPylonName_Parms.NewValue, &NewValue, 0xC );

	pFnSetPylonName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPylonName, &SetPylonName_Parms, NULL );

	pFnSetPylonName->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.SetPylonAttTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         targetPylon                    ( CPF_Parm )
// int                            NewValue                       ( CPF_Parm )

void UOnlineSubsystemNowGame::SetPylonAttTarget ( class ANowAtlasAvatar* targetPylon, int NewValue )
{
	static UFunction* pFnSetPylonAttTarget = NULL;

	if ( ! pFnSetPylonAttTarget )
		pFnSetPylonAttTarget = (UFunction*) UObject::GObjObjects()->Data[ 59932 ];

	UOnlineSubsystemNowGame_execSetPylonAttTarget_Parms SetPylonAttTarget_Parms;
	SetPylonAttTarget_Parms.targetPylon = targetPylon;
	SetPylonAttTarget_Parms.NewValue = NewValue;

	pFnSetPylonAttTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPylonAttTarget, &SetPylonAttTarget_Parms, NULL );

	pFnSetPylonAttTarget->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.SetPylonDefTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         targetPylon                    ( CPF_Parm )
// int                            NewValue                       ( CPF_Parm )

void UOnlineSubsystemNowGame::SetPylonDefTarget ( class ANowAtlasAvatar* targetPylon, int NewValue )
{
	static UFunction* pFnSetPylonDefTarget = NULL;

	if ( ! pFnSetPylonDefTarget )
		pFnSetPylonDefTarget = (UFunction*) UObject::GObjObjects()->Data[ 59929 ];

	UOnlineSubsystemNowGame_execSetPylonDefTarget_Parms SetPylonDefTarget_Parms;
	SetPylonDefTarget_Parms.targetPylon = targetPylon;
	SetPylonDefTarget_Parms.NewValue = NewValue;

	pFnSetPylonDefTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPylonDefTarget, &SetPylonDefTarget_Parms, NULL );

	pFnSetPylonDefTarget->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.SetPylonAoeTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         targetPylon                    ( CPF_Parm )
// int                            NewValue                       ( CPF_Parm )

void UOnlineSubsystemNowGame::SetPylonAoeTarget ( class ANowAtlasAvatar* targetPylon, int NewValue )
{
	static UFunction* pFnSetPylonAoeTarget = NULL;

	if ( ! pFnSetPylonAoeTarget )
		pFnSetPylonAoeTarget = (UFunction*) UObject::GObjObjects()->Data[ 59926 ];

	UOnlineSubsystemNowGame_execSetPylonAoeTarget_Parms SetPylonAoeTarget_Parms;
	SetPylonAoeTarget_Parms.targetPylon = targetPylon;
	SetPylonAoeTarget_Parms.NewValue = NewValue;

	pFnSetPylonAoeTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPylonAoeTarget, &SetPylonAoeTarget_Parms, NULL );

	pFnSetPylonAoeTarget->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.UpgradePylon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarPylon*    targetPylon                    ( CPF_Parm )

void UOnlineSubsystemNowGame::UpgradePylon ( class ANowAtlasAvatarPylon* targetPylon )
{
	static UFunction* pFnUpgradePylon = NULL;

	if ( ! pFnUpgradePylon )
		pFnUpgradePylon = (UFunction*) UObject::GObjObjects()->Data[ 59924 ];

	UOnlineSubsystemNowGame_execUpgradePylon_Parms UpgradePylon_Parms;
	UpgradePylon_Parms.targetPylon = targetPylon;

	pFnUpgradePylon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpgradePylon, &UpgradePylon_Parms, NULL );

	pFnUpgradePylon->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PlaceTerritoryStructure
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 NewLoc                         ( CPF_Parm )
// struct FRotator                NewRot                         ( CPF_Parm )
// class AActor*                  pParent                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  pParentB                       ( CPF_OptionalParm | CPF_Parm )
// struct FString                 sInitString                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::PlaceTerritoryStructure ( struct FVector NewLoc, struct FRotator NewRot, class AActor* pParent, class AActor* pParentB, struct FString sInitString )
{
	static UFunction* pFnPlaceTerritoryStructure = NULL;

	if ( ! pFnPlaceTerritoryStructure )
		pFnPlaceTerritoryStructure = (UFunction*) UObject::GObjObjects()->Data[ 59918 ];

	UOnlineSubsystemNowGame_execPlaceTerritoryStructure_Parms PlaceTerritoryStructure_Parms;
	memcpy ( &PlaceTerritoryStructure_Parms.NewLoc, &NewLoc, 0xC );
	memcpy ( &PlaceTerritoryStructure_Parms.NewRot, &NewRot, 0xC );
	PlaceTerritoryStructure_Parms.pParent = pParent;
	PlaceTerritoryStructure_Parms.pParentB = pParentB;
	memcpy ( &PlaceTerritoryStructure_Parms.sInitString, &sInitString, 0xC );

	pFnPlaceTerritoryStructure->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaceTerritoryStructure, &PlaceTerritoryStructure_Parms, NULL );

	pFnPlaceTerritoryStructure->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PlaceAvatar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 newPylonLoc                    ( CPF_Parm )

void UOnlineSubsystemNowGame::PlaceAvatar ( struct FVector newPylonLoc )
{
	static UFunction* pFnPlaceAvatar = NULL;

	if ( ! pFnPlaceAvatar )
		pFnPlaceAvatar = (UFunction*) UObject::GObjObjects()->Data[ 59916 ];

	UOnlineSubsystemNowGame_execPlaceAvatar_Parms PlaceAvatar_Parms;
	memcpy ( &PlaceAvatar_Parms.newPylonLoc, &newPylonLoc, 0xC );

	pFnPlaceAvatar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaceAvatar, &PlaceAvatar_Parms, NULL );

	pFnPlaceAvatar->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.AddPylonInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 newPylonGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 newPylonGuild                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 newPylonLoc                    ( CPF_Parm )
// int                            newPylonAOE                    ( CPF_Parm )
// int                            newPylonAOETgt                 ( CPF_Parm )
// int                            newPylonDef                    ( CPF_Parm )
// int                            newPylonDefTgt                 ( CPF_Parm )
// int                            newPylonAtt                    ( CPF_Parm )
// int                            newPylonAttTgt                 ( CPF_Parm )
// int                            newPylonTier                   ( CPF_Parm )
// int                            newPylonUpkeep                 ( CPF_Parm )

void UOnlineSubsystemNowGame::AddPylonInfo ( struct FString newPylonGuid, struct FString newPylonGuild, struct FVector newPylonLoc, int newPylonAOE, int newPylonAOETgt, int newPylonDef, int newPylonDefTgt, int newPylonAtt, int newPylonAttTgt, int newPylonTier, int newPylonUpkeep )
{
	static UFunction* pFnAddPylonInfo = NULL;

	if ( ! pFnAddPylonInfo )
		pFnAddPylonInfo = (UFunction*) UObject::GObjObjects()->Data[ 59904 ];

	UOnlineSubsystemNowGame_execAddPylonInfo_Parms AddPylonInfo_Parms;
	memcpy ( &AddPylonInfo_Parms.newPylonGuid, &newPylonGuid, 0xC );
	memcpy ( &AddPylonInfo_Parms.newPylonGuild, &newPylonGuild, 0xC );
	memcpy ( &AddPylonInfo_Parms.newPylonLoc, &newPylonLoc, 0xC );
	AddPylonInfo_Parms.newPylonAOE = newPylonAOE;
	AddPylonInfo_Parms.newPylonAOETgt = newPylonAOETgt;
	AddPylonInfo_Parms.newPylonDef = newPylonDef;
	AddPylonInfo_Parms.newPylonDefTgt = newPylonDefTgt;
	AddPylonInfo_Parms.newPylonAtt = newPylonAtt;
	AddPylonInfo_Parms.newPylonAttTgt = newPylonAttTgt;
	AddPylonInfo_Parms.newPylonTier = newPylonTier;
	AddPylonInfo_Parms.newPylonUpkeep = newPylonUpkeep;

	pFnAddPylonInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPylonInfo, &AddPylonInfo_Parms, NULL );

	pFnAddPylonInfo->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.AddPetInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sPetName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPetType                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            iPetLevel                      ( CPF_Parm )
// int                            iPetLoyalty                    ( CPF_Parm )
// int                            iPetHP                         ( CPF_Parm )
// int                            iStableIndex                   ( CPF_Parm )
// struct FString                 sState                         ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::AddPetInfo ( struct FString sPetName, struct FString sPetType, int iPetLevel, int iPetLoyalty, int iPetHP, int iStableIndex, struct FString sState )
{
	static UFunction* pFnAddPetInfo = NULL;

	if ( ! pFnAddPetInfo )
		pFnAddPetInfo = (UFunction*) UObject::GObjObjects()->Data[ 59896 ];

	UOnlineSubsystemNowGame_execAddPetInfo_Parms AddPetInfo_Parms;
	memcpy ( &AddPetInfo_Parms.sPetName, &sPetName, 0xC );
	memcpy ( &AddPetInfo_Parms.sPetType, &sPetType, 0xC );
	AddPetInfo_Parms.iPetLevel = iPetLevel;
	AddPetInfo_Parms.iPetLoyalty = iPetLoyalty;
	AddPetInfo_Parms.iPetHP = iPetHP;
	AddPetInfo_Parms.iStableIndex = iStableIndex;
	memcpy ( &AddPetInfo_Parms.sState, &sState, 0xC );

	pFnAddPetInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPetInfo, &AddPetInfo_Parms, NULL );

	pFnAddPetInfo->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.RemItemInterest
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iDeposit                       ( CPF_Parm )

void UOnlineSubsystemNowGame::RemItemInterest ( int iDeposit )
{
	static UFunction* pFnRemItemInterest = NULL;

	if ( ! pFnRemItemInterest )
		pFnRemItemInterest = (UFunction*) UObject::GObjObjects()->Data[ 59894 ];

	UOnlineSubsystemNowGame_execRemItemInterest_Parms RemItemInterest_Parms;
	RemItemInterest_Parms.iDeposit = iDeposit;

	pFnRemItemInterest->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemItemInterest, &RemItemInterest_Parms, NULL );

	pFnRemItemInterest->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.AddItemInterest
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iDeposit                       ( CPF_Parm )

void UOnlineSubsystemNowGame::AddItemInterest ( int iDeposit )
{
	static UFunction* pFnAddItemInterest = NULL;

	if ( ! pFnAddItemInterest )
		pFnAddItemInterest = (UFunction*) UObject::GObjObjects()->Data[ 59892 ];

	UOnlineSubsystemNowGame_execAddItemInterest_Parms AddItemInterest_Parms;
	AddItemInterest_Parms.iDeposit = iDeposit;

	pFnAddItemInterest->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddItemInterest, &AddItemInterest_Parms, NULL );

	pFnAddItemInterest->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.OnNameCheck
// [0x00120000] 
// Parameters infos:
// unsigned long                  Check                          ( CPF_Parm )

void UOnlineSubsystemNowGame::OnNameCheck ( unsigned long Check )
{
	static UFunction* pFnOnNameCheck = NULL;

	if ( ! pFnOnNameCheck )
		pFnOnNameCheck = (UFunction*) UObject::GObjObjects()->Data[ 59890 ];

	UOnlineSubsystemNowGame_execOnNameCheck_Parms OnNameCheck_Parms;
	OnNameCheck_Parms.Check = Check;

	this->ProcessEvent ( pFnOnNameCheck, &OnNameCheck_Parms, NULL );
};

// Function NowGame.SkelControlDrawScale.TriggerDrawScale
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkelControlDrawScale::TriggerDrawScale ( )
{
	static UFunction* pFnTriggerDrawScale = NULL;

	if ( ! pFnTriggerDrawScale )
		pFnTriggerDrawScale = (UFunction*) UObject::GObjObjects()->Data[ 60680 ];

	USkelControlDrawScale_execTriggerDrawScale_Parms TriggerDrawScale_Parms;

	pFnTriggerDrawScale->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerDrawScale, &TriggerDrawScale_Parms, NULL );

	pFnTriggerDrawScale->FunctionFlags |= 0x400;
};

// Function NowGame.SkelControlDynamicCreature.CreateParentInfo
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FParentInfo             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            I                              ( CPF_Parm )

struct FParentInfo USkelControlDynamicCreature::eventCreateParentInfo ( int I )
{
	static UFunction* pFnCreateParentInfo = NULL;

	if ( ! pFnCreateParentInfo )
		pFnCreateParentInfo = (UFunction*) UObject::GObjObjects()->Data[ 60705 ];

	USkelControlDynamicCreature_eventCreateParentInfo_Parms CreateParentInfo_Parms;
	CreateParentInfo_Parms.I = I;

	this->ProcessEvent ( pFnCreateParentInfo, &CreateParentInfo_Parms, NULL );

	return CreateParentInfo_Parms.ReturnValue;
};

// Function NowGame.SkelControlDynamicCreature.UpdateInput
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkelControlDynamicCreature::UpdateInput ( )
{
	static UFunction* pFnUpdateInput = NULL;

	if ( ! pFnUpdateInput )
		pFnUpdateInput = (UFunction*) UObject::GObjObjects()->Data[ 60704 ];

	USkelControlDynamicCreature_execUpdateInput_Parms UpdateInput_Parms;

	pFnUpdateInput->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateInput, &UpdateInput_Parms, NULL );

	pFnUpdateInput->FunctionFlags |= 0x400;
};

// Function NowGame.SkelControlDynamicCreature.SetDynamicIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            NewIndex                       ( CPF_Parm )

void USkelControlDynamicCreature::SetDynamicIndex ( int NewIndex )
{
	static UFunction* pFnSetDynamicIndex = NULL;

	if ( ! pFnSetDynamicIndex )
		pFnSetDynamicIndex = (UFunction*) UObject::GObjObjects()->Data[ 60702 ];

	USkelControlDynamicCreature_execSetDynamicIndex_Parms SetDynamicIndex_Parms;
	SetDynamicIndex_Parms.NewIndex = NewIndex;

	pFnSetDynamicIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDynamicIndex, &SetDynamicIndex_Parms, NULL );

	pFnSetDynamicIndex->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.ResetSettings
// [0x00020002] 
// Parameters infos:

void USkeletalMeshComponentGenerated::ResetSettings ( )
{
	static UFunction* pFnResetSettings = NULL;

	if ( ! pFnResetSettings )
		pFnResetSettings = (UFunction*) UObject::GObjObjects()->Data[ 45645 ];

	USkeletalMeshComponentGenerated_execResetSettings_Parms ResetSettings_Parms;

	this->ProcessEvent ( pFnResetSettings, &ResetSettings_Parms, NULL );
};

// Function NowGame.SkeletalMeshComponentGenerated.SetFrom
// [0x00020002] 
// Parameters infos:
// class USkeletalMeshComponentGenerated* pOther                         ( CPF_Parm | CPF_EditInline )

void USkeletalMeshComponentGenerated::SetFrom ( class USkeletalMeshComponentGenerated* pOther )
{
	static UFunction* pFnSetFrom = NULL;

	if ( ! pFnSetFrom )
		pFnSetFrom = (UFunction*) UObject::GObjObjects()->Data[ 45642 ];

	USkeletalMeshComponentGenerated_execSetFrom_Parms SetFrom_Parms;
	SetFrom_Parms.pOther = pOther;

	this->ProcessEvent ( pFnSetFrom, &SetFrom_Parms, NULL );
};

// Function NowGame.SkeletalMeshComponentGenerated.GetOwnerPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* USkeletalMeshComponentGenerated::GetOwnerPawn ( )
{
	static UFunction* pFnGetOwnerPawn = NULL;

	if ( ! pFnGetOwnerPawn )
		pFnGetOwnerPawn = (UFunction*) UObject::GObjObjects()->Data[ 45640 ];

	USkeletalMeshComponentGenerated_execGetOwnerPawn_Parms GetOwnerPawn_Parms;

	pFnGetOwnerPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetOwnerPawn, &GetOwnerPawn_Parms, NULL );

	pFnGetOwnerPawn->FunctionFlags |= 0x400;

	return GetOwnerPawn_Parms.ReturnValue;
};

// Function NowGame.SkeletalMeshComponentGenerated.BuildRacePath
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )
// struct FString                 sPath                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void USkeletalMeshComponentGenerated::BuildRacePath ( int iIndex, struct FString* sPath, struct FString* sName )
{
	static UFunction* pFnBuildRacePath = NULL;

	if ( ! pFnBuildRacePath )
		pFnBuildRacePath = (UFunction*) UObject::GObjObjects()->Data[ 45636 ];

	USkeletalMeshComponentGenerated_execBuildRacePath_Parms BuildRacePath_Parms;
	BuildRacePath_Parms.iIndex = iIndex;

	pFnBuildRacePath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildRacePath, &BuildRacePath_Parms, NULL );

	pFnBuildRacePath->FunctionFlags |= 0x400;

	if ( sPath )
		memcpy ( sPath, &BuildRacePath_Parms.sPath, 0xC );

	if ( sName )
		memcpy ( sName, &BuildRacePath_Parms.sName, 0xC );
};

// Function NowGame.SkeletalMeshComponentGenerated.SetHelmetOverlay
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGenerated::SetHelmetOverlay ( )
{
	static UFunction* pFnSetHelmetOverlay = NULL;

	if ( ! pFnSetHelmetOverlay )
		pFnSetHelmetOverlay = (UFunction*) UObject::GObjObjects()->Data[ 45635 ];

	USkeletalMeshComponentGenerated_execSetHelmetOverlay_Parms SetHelmetOverlay_Parms;

	pFnSetHelmetOverlay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetHelmetOverlay, &SetHelmetOverlay_Parms, NULL );

	pFnSetHelmetOverlay->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.SetGMMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGenerated::SetGMMesh ( )
{
	static UFunction* pFnSetGMMesh = NULL;

	if ( ! pFnSetGMMesh )
		pFnSetGMMesh = (UFunction*) UObject::GObjObjects()->Data[ 45634 ];

	USkeletalMeshComponentGenerated_execSetGMMesh_Parms SetGMMesh_Parms;

	pFnSetGMMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGMMesh, &SetGMMesh_Parms, NULL );

	pFnSetGMMesh->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.SetupMaterials
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGenerated::SetupMaterials ( )
{
	static UFunction* pFnSetupMaterials = NULL;

	if ( ! pFnSetupMaterials )
		pFnSetupMaterials = (UFunction*) UObject::GObjObjects()->Data[ 45633 ];

	USkeletalMeshComponentGenerated_execSetupMaterials_Parms SetupMaterials_Parms;

	pFnSetupMaterials->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetupMaterials, &SetupMaterials_Parms, NULL );

	pFnSetupMaterials->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.BuildAnimations
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGenerated::BuildAnimations ( )
{
	static UFunction* pFnBuildAnimations = NULL;

	if ( ! pFnBuildAnimations )
		pFnBuildAnimations = (UFunction*) UObject::GObjObjects()->Data[ 45632 ];

	USkeletalMeshComponentGenerated_execBuildAnimations_Parms BuildAnimations_Parms;

	pFnBuildAnimations->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildAnimations, &BuildAnimations_Parms, NULL );

	pFnBuildAnimations->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.BuildBodyMaterials
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGenerated::BuildBodyMaterials ( )
{
	static UFunction* pFnBuildBodyMaterials = NULL;

	if ( ! pFnBuildBodyMaterials )
		pFnBuildBodyMaterials = (UFunction*) UObject::GObjObjects()->Data[ 45631 ];

	USkeletalMeshComponentGenerated_execBuildBodyMaterials_Parms BuildBodyMaterials_Parms;

	pFnBuildBodyMaterials->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildBodyMaterials, &BuildBodyMaterials_Parms, NULL );

	pFnBuildBodyMaterials->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.BuildMainRace
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGenerated::BuildMainRace ( )
{
	static UFunction* pFnBuildMainRace = NULL;

	if ( ! pFnBuildMainRace )
		pFnBuildMainRace = (UFunction*) UObject::GObjObjects()->Data[ 45630 ];

	USkeletalMeshComponentGenerated_execBuildMainRace_Parms BuildMainRace_Parms;

	pFnBuildMainRace->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildMainRace, &BuildMainRace_Parms, NULL );

	pFnBuildMainRace->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.BuildMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGenerated::BuildMesh ( )
{
	static UFunction* pFnBuildMesh = NULL;

	if ( ! pFnBuildMesh )
		pFnBuildMesh = (UFunction*) UObject::GObjObjects()->Data[ 45629 ];

	USkeletalMeshComponentGenerated_execBuildMesh_Parms BuildMesh_Parms;

	pFnBuildMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildMesh, &BuildMesh_Parms, NULL );

	pFnBuildMesh->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.BuildStaticData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGenerated::BuildStaticData ( )
{
	static UFunction* pFnBuildStaticData = NULL;

	if ( ! pFnBuildStaticData )
		pFnBuildStaticData = (UFunction*) UObject::GObjObjects()->Data[ 45628 ];

	USkeletalMeshComponentGenerated_execBuildStaticData_Parms BuildStaticData_Parms;

	pFnBuildStaticData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildStaticData, &BuildStaticData_Parms, NULL );

	pFnBuildStaticData->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.BuildArmorData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGenerated::BuildArmorData ( )
{
	static UFunction* pFnBuildArmorData = NULL;

	if ( ! pFnBuildArmorData )
		pFnBuildArmorData = (UFunction*) UObject::GObjObjects()->Data[ 45627 ];

	USkeletalMeshComponentGenerated_execBuildArmorData_Parms BuildArmorData_Parms;

	pFnBuildArmorData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildArmorData, &BuildArmorData_Parms, NULL );

	pFnBuildArmorData->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.RemoveFullNudity
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGenerated::RemoveFullNudity ( )
{
	static UFunction* pFnRemoveFullNudity = NULL;

	if ( ! pFnRemoveFullNudity )
		pFnRemoveFullNudity = (UFunction*) UObject::GObjObjects()->Data[ 45626 ];

	USkeletalMeshComponentGenerated_execRemoveFullNudity_Parms RemoveFullNudity_Parms;

	pFnRemoveFullNudity->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFullNudity, &RemoveFullNudity_Parms, NULL );

	pFnRemoveFullNudity->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.BuildPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGenerated::BuildPlayer ( )
{
	static UFunction* pFnBuildPlayer = NULL;

	if ( ! pFnBuildPlayer )
		pFnBuildPlayer = (UFunction*) UObject::GObjObjects()->Data[ 45625 ];

	USkeletalMeshComponentGenerated_execBuildPlayer_Parms BuildPlayer_Parms;

	pFnBuildPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildPlayer, &BuildPlayer_Parms, NULL );

	pFnBuildPlayer->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.ReadyBuildPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGenerated::ReadyBuildPlayer ( )
{
	static UFunction* pFnReadyBuildPlayer = NULL;

	if ( ! pFnReadyBuildPlayer )
		pFnReadyBuildPlayer = (UFunction*) UObject::GObjObjects()->Data[ 45624 ];

	USkeletalMeshComponentGenerated_execReadyBuildPlayer_Parms ReadyBuildPlayer_Parms;

	pFnReadyBuildPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadyBuildPlayer, &ReadyBuildPlayer_Parms, NULL );

	pFnReadyBuildPlayer->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.SetArmorColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iNewColor                      ( CPF_Parm )
// int                            iIndex                         ( CPF_Parm )

void USkeletalMeshComponentGenerated::SetArmorColor ( int iNewColor, int iIndex )
{
	static UFunction* pFnSetArmorColor = NULL;

	if ( ! pFnSetArmorColor )
		pFnSetArmorColor = (UFunction*) UObject::GObjObjects()->Data[ 45621 ];

	USkeletalMeshComponentGenerated_execSetArmorColor_Parms SetArmorColor_Parms;
	SetArmorColor_Parms.iNewColor = iNewColor;
	SetArmorColor_Parms.iIndex = iIndex;

	pFnSetArmorColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetArmorColor, &SetArmorColor_Parms, NULL );

	pFnSetArmorColor->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.SetArmorString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sNewString                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iIndex                         ( CPF_Parm )

void USkeletalMeshComponentGenerated::SetArmorString ( struct FString sNewString, int iIndex )
{
	static UFunction* pFnSetArmorString = NULL;

	if ( ! pFnSetArmorString )
		pFnSetArmorString = (UFunction*) UObject::GObjObjects()->Data[ 45618 ];

	USkeletalMeshComponentGenerated_execSetArmorString_Parms SetArmorString_Parms;
	memcpy ( &SetArmorString_Parms.sNewString, &sNewString, 0xC );
	SetArmorString_Parms.iIndex = iIndex;

	pFnSetArmorString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetArmorString, &SetArmorString_Parms, NULL );

	pFnSetArmorString->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.SetFaceString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sNewString                     ( CPF_Parm | CPF_NeedCtorLink )

void USkeletalMeshComponentGenerated::SetFaceString ( struct FString sNewString )
{
	static UFunction* pFnSetFaceString = NULL;

	if ( ! pFnSetFaceString )
		pFnSetFaceString = (UFunction*) UObject::GObjObjects()->Data[ 45616 ];

	USkeletalMeshComponentGenerated_execSetFaceString_Parms SetFaceString_Parms;
	memcpy ( &SetFaceString_Parms.sNewString, &sNewString, 0xC );

	pFnSetFaceString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFaceString, &SetFaceString_Parms, NULL );

	pFnSetFaceString->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.SetDecoString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sNewString                     ( CPF_Parm | CPF_NeedCtorLink )

void USkeletalMeshComponentGenerated::SetDecoString ( struct FString sNewString )
{
	static UFunction* pFnSetDecoString = NULL;

	if ( ! pFnSetDecoString )
		pFnSetDecoString = (UFunction*) UObject::GObjObjects()->Data[ 45614 ];

	USkeletalMeshComponentGenerated_execSetDecoString_Parms SetDecoString_Parms;
	memcpy ( &SetDecoString_Parms.sNewString, &sNewString, 0xC );

	pFnSetDecoString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDecoString, &SetDecoString_Parms, NULL );

	pFnSetDecoString->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.UpdateStrings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGenerated::UpdateStrings ( )
{
	static UFunction* pFnUpdateStrings = NULL;

	if ( ! pFnUpdateStrings )
		pFnUpdateStrings = (UFunction*) UObject::GObjObjects()->Data[ 45613 ];

	USkeletalMeshComponentGenerated_execUpdateStrings_Parms UpdateStrings_Parms;

	pFnUpdateStrings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateStrings, &UpdateStrings_Parms, NULL );

	pFnUpdateStrings->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.BuildGeneratedData
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            iAge                           ( CPF_OptionalParm | CPF_Parm )

void USkeletalMeshComponentGenerated::BuildGeneratedData ( int iAge )
{
	static UFunction* pFnBuildGeneratedData = NULL;

	if ( ! pFnBuildGeneratedData )
		pFnBuildGeneratedData = (UFunction*) UObject::GObjObjects()->Data[ 45611 ];

	USkeletalMeshComponentGenerated_execBuildGeneratedData_Parms BuildGeneratedData_Parms;
	BuildGeneratedData_Parms.iAge = iAge;

	pFnBuildGeneratedData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildGeneratedData, &BuildGeneratedData_Parms, NULL );

	pFnBuildGeneratedData->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGenerated.LoadHeadMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USkeletalMesh* USkeletalMeshComponentGenerated::LoadHeadMesh ( )
{
	static UFunction* pFnLoadHeadMesh = NULL;

	if ( ! pFnLoadHeadMesh )
		pFnLoadHeadMesh = (UFunction*) UObject::GObjObjects()->Data[ 45609 ];

	USkeletalMeshComponentGenerated_execLoadHeadMesh_Parms LoadHeadMesh_Parms;

	pFnLoadHeadMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadHeadMesh, &LoadHeadMesh_Parms, NULL );

	pFnLoadHeadMesh->FunctionFlags |= 0x400;

	return LoadHeadMesh_Parms.ReturnValue;
};

// Function NowGame.SkeletalMeshComponentGeneratedPlayer.BuildMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGeneratedPlayer::BuildMesh ( )
{
	static UFunction* pFnBuildMesh = NULL;

	if ( ! pFnBuildMesh )
		pFnBuildMesh = (UFunction*) UObject::GObjObjects()->Data[ 59250 ];

	USkeletalMeshComponentGeneratedPlayer_execBuildMesh_Parms BuildMesh_Parms;

	pFnBuildMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildMesh, &BuildMesh_Parms, NULL );

	pFnBuildMesh->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGeneratedPlayer.SetupMaterials
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGeneratedPlayer::SetupMaterials ( )
{
	static UFunction* pFnSetupMaterials = NULL;

	if ( ! pFnSetupMaterials )
		pFnSetupMaterials = (UFunction*) UObject::GObjObjects()->Data[ 59249 ];

	USkeletalMeshComponentGeneratedPlayer_execSetupMaterials_Parms SetupMaterials_Parms;

	pFnSetupMaterials->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetupMaterials, &SetupMaterials_Parms, NULL );

	pFnSetupMaterials->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGeneratedPlayer.BuildBodyMaterials
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGeneratedPlayer::BuildBodyMaterials ( )
{
	static UFunction* pFnBuildBodyMaterials = NULL;

	if ( ! pFnBuildBodyMaterials )
		pFnBuildBodyMaterials = (UFunction*) UObject::GObjObjects()->Data[ 59248 ];

	USkeletalMeshComponentGeneratedPlayer_execBuildBodyMaterials_Parms BuildBodyMaterials_Parms;

	pFnBuildBodyMaterials->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildBodyMaterials, &BuildBodyMaterials_Parms, NULL );

	pFnBuildBodyMaterials->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGeneratedPlayerNew.BuildMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGeneratedPlayerNew::BuildMesh ( )
{
	static UFunction* pFnBuildMesh = NULL;

	if ( ! pFnBuildMesh )
		pFnBuildMesh = (UFunction*) UObject::GObjObjects()->Data[ 45669 ];

	USkeletalMeshComponentGeneratedPlayerNew_execBuildMesh_Parms BuildMesh_Parms;

	pFnBuildMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildMesh, &BuildMesh_Parms, NULL );

	pFnBuildMesh->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGeneratedPlayerNew.SetupMaterials
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGeneratedPlayerNew::SetupMaterials ( )
{
	static UFunction* pFnSetupMaterials = NULL;

	if ( ! pFnSetupMaterials )
		pFnSetupMaterials = (UFunction*) UObject::GObjObjects()->Data[ 45668 ];

	USkeletalMeshComponentGeneratedPlayerNew_execSetupMaterials_Parms SetupMaterials_Parms;

	pFnSetupMaterials->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetupMaterials, &SetupMaterials_Parms, NULL );

	pFnSetupMaterials->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGeneratedPlayerNew.BuildBodyMaterials
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponentGeneratedPlayerNew::BuildBodyMaterials ( )
{
	static UFunction* pFnBuildBodyMaterials = NULL;

	if ( ! pFnBuildBodyMaterials )
		pFnBuildBodyMaterials = (UFunction*) UObject::GObjObjects()->Data[ 45667 ];

	USkeletalMeshComponentGeneratedPlayerNew_execBuildBodyMaterials_Parms BuildBodyMaterials_Parms;

	pFnBuildBodyMaterials->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildBodyMaterials, &BuildBodyMaterials_Parms, NULL );

	pFnBuildBodyMaterials->FunctionFlags |= 0x400;
};

// Function NowGame.SkeletalMeshComponentGeneratedPlayerNew.BuildSkinTextureBasePath
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString USkeletalMeshComponentGeneratedPlayerNew::BuildSkinTextureBasePath ( )
{
	static UFunction* pFnBuildSkinTextureBasePath = NULL;

	if ( ! pFnBuildSkinTextureBasePath )
		pFnBuildSkinTextureBasePath = (UFunction*) UObject::GObjObjects()->Data[ 45665 ];

	USkeletalMeshComponentGeneratedPlayerNew_execBuildSkinTextureBasePath_Parms BuildSkinTextureBasePath_Parms;

	pFnBuildSkinTextureBasePath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuildSkinTextureBasePath, &BuildSkinTextureBasePath_Parms, NULL );

	pFnBuildSkinTextureBasePath->FunctionFlags |= 0x400;

	return BuildSkinTextureBasePath_Parms.ReturnValue;
};

// Function NowGame.SkeletalMeshComponentGeneratedPlayerNew.GetArmorBaseMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UMaterial*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UMaterial* USkeletalMeshComponentGeneratedPlayerNew::GetArmorBaseMaterial ( )
{
	static UFunction* pFnGetArmorBaseMaterial = NULL;

	if ( ! pFnGetArmorBaseMaterial )
		pFnGetArmorBaseMaterial = (UFunction*) UObject::GObjObjects()->Data[ 45663 ];

	USkeletalMeshComponentGeneratedPlayerNew_execGetArmorBaseMaterial_Parms GetArmorBaseMaterial_Parms;

	pFnGetArmorBaseMaterial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetArmorBaseMaterial, &GetArmorBaseMaterial_Parms, NULL );

	pFnGetArmorBaseMaterial->FunctionFlags |= 0x400;

	return GetArmorBaseMaterial_Parms.ReturnValue;
};

// Function NowGame.SkeletalMeshComponentGeneratedPlayerNew.GetSkinBaseMaterialFemale
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UMaterialInstanceConstant* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UMaterialInstanceConstant* USkeletalMeshComponentGeneratedPlayerNew::GetSkinBaseMaterialFemale ( )
{
	static UFunction* pFnGetSkinBaseMaterialFemale = NULL;

	if ( ! pFnGetSkinBaseMaterialFemale )
		pFnGetSkinBaseMaterialFemale = (UFunction*) UObject::GObjObjects()->Data[ 45661 ];

	USkeletalMeshComponentGeneratedPlayerNew_execGetSkinBaseMaterialFemale_Parms GetSkinBaseMaterialFemale_Parms;

	pFnGetSkinBaseMaterialFemale->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkinBaseMaterialFemale, &GetSkinBaseMaterialFemale_Parms, NULL );

	pFnGetSkinBaseMaterialFemale->FunctionFlags |= 0x400;

	return GetSkinBaseMaterialFemale_Parms.ReturnValue;
};

// Function NowGame.SkeletalMeshComponentGeneratedPlayerNew.GetSkinBaseMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UMaterial*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UMaterial* USkeletalMeshComponentGeneratedPlayerNew::GetSkinBaseMaterial ( )
{
	static UFunction* pFnGetSkinBaseMaterial = NULL;

	if ( ! pFnGetSkinBaseMaterial )
		pFnGetSkinBaseMaterial = (UFunction*) UObject::GObjObjects()->Data[ 45659 ];

	USkeletalMeshComponentGeneratedPlayerNew_execGetSkinBaseMaterial_Parms GetSkinBaseMaterial_Parms;

	pFnGetSkinBaseMaterial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkinBaseMaterial, &GetSkinBaseMaterial_Parms, NULL );

	pFnGetSkinBaseMaterial->FunctionFlags |= 0x400;

	return GetSkinBaseMaterial_Parms.ReturnValue;
};

// Function NowGame.StatManager.GetGFXHud
// [0x00020002] 
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* UStatManager::GetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = (UFunction*) UObject::GObjObjects()->Data[ 60769 ];

	UStatManager_execGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.StatManager.GetFatnessName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UStatManager::GetFatnessName ( )
{
	static UFunction* pFnGetFatnessName = NULL;

	if ( ! pFnGetFatnessName )
		pFnGetFatnessName = (UFunction*) UObject::GObjObjects()->Data[ 60767 ];

	UStatManager_execGetFatnessName_Parms GetFatnessName_Parms;

	this->ProcessEvent ( pFnGetFatnessName, &GetFatnessName_Parms, NULL );

	return GetFatnessName_Parms.ReturnValue;
};

// Function NowGame.StatManager.SetMaxStamina
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewMaxSP                       ( CPF_Parm )

void UStatManager::eventSetMaxStamina ( int NewMaxSP )
{
	static UFunction* pFnSetMaxStamina = NULL;

	if ( ! pFnSetMaxStamina )
		pFnSetMaxStamina = (UFunction*) UObject::GObjObjects()->Data[ 60764 ];

	UStatManager_eventSetMaxStamina_Parms SetMaxStamina_Parms;
	SetMaxStamina_Parms.NewMaxSP = NewMaxSP;

	this->ProcessEvent ( pFnSetMaxStamina, &SetMaxStamina_Parms, NULL );
};

// Function NowGame.StatManager.GetMaxSP
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UStatManager::GetMaxSP ( )
{
	static UFunction* pFnGetMaxSP = NULL;

	if ( ! pFnGetMaxSP )
		pFnGetMaxSP = (UFunction*) UObject::GObjObjects()->Data[ 57220 ];

	UStatManager_execGetMaxSP_Parms GetMaxSP_Parms;

	this->ProcessEvent ( pFnGetMaxSP, &GetMaxSP_Parms, NULL );

	return GetMaxSP_Parms.ReturnValue;
};

// Function NowGame.StatManager.UpdateTarget
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )
// unsigned char                  UpdateType                     ( CPF_Parm )
// int                            IntValue                       ( CPF_OptionalParm | CPF_Parm )
// struct FString                 StrValue                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UStatManager::eventUpdateTarget ( class AActor* WhatActor, unsigned char UpdateType, int IntValue, struct FString StrValue )
{
	static UFunction* pFnUpdateTarget = NULL;

	if ( ! pFnUpdateTarget )
		pFnUpdateTarget = (UFunction*) UObject::GObjObjects()->Data[ 60759 ];

	UStatManager_eventUpdateTarget_Parms UpdateTarget_Parms;
	UpdateTarget_Parms.WhatActor = WhatActor;
	UpdateTarget_Parms.UpdateType = UpdateType;
	UpdateTarget_Parms.IntValue = IntValue;
	memcpy ( &UpdateTarget_Parms.StrValue, &StrValue, 0xC );

	this->ProcessEvent ( pFnUpdateTarget, &UpdateTarget_Parms, NULL );
};

// Function NowGame.StatManager.UpdateGFXHudParam
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  Param                          ( CPF_Parm )
// unsigned char                  TargetType                     ( CPF_Parm )
// int                            NewIntValue                    ( CPF_OptionalParm | CPF_Parm )
// struct FString                 NewStringValue                 ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UStatManager::eventUpdateGFXHudParam ( unsigned char Param, unsigned char TargetType, int NewIntValue, struct FString NewStringValue )
{
	static UFunction* pFnUpdateGFXHudParam = NULL;

	if ( ! pFnUpdateGFXHudParam )
		pFnUpdateGFXHudParam = (UFunction*) UObject::GObjObjects()->Data[ 60753 ];

	UStatManager_eventUpdateGFXHudParam_Parms UpdateGFXHudParam_Parms;
	UpdateGFXHudParam_Parms.Param = Param;
	UpdateGFXHudParam_Parms.TargetType = TargetType;
	UpdateGFXHudParam_Parms.NewIntValue = NewIntValue;
	memcpy ( &UpdateGFXHudParam_Parms.NewStringValue, &NewStringValue, 0xC );

	this->ProcessEvent ( pFnUpdateGFXHudParam, &UpdateGFXHudParam_Parms, NULL );
};

// Function NowGame.StatManager.UpdateGFX
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UStatManager::eventUpdateGFX ( struct FString sName )
{
	static UFunction* pFnUpdateGFX = NULL;

	if ( ! pFnUpdateGFX )
		pFnUpdateGFX = (UFunction*) UObject::GObjObjects()->Data[ 60751 ];

	UStatManager_eventUpdateGFX_Parms UpdateGFX_Parms;
	memcpy ( &UpdateGFX_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnUpdateGFX, &UpdateGFX_Parms, NULL );
};

// Function NowGame.StatManager.InitGFXStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UStatManager::eventInitGFXStats ( )
{
	static UFunction* pFnInitGFXStats = NULL;

	if ( ! pFnInitGFXStats )
		pFnInitGFXStats = (UFunction*) UObject::GObjObjects()->Data[ 60750 ];

	UStatManager_eventInitGFXStats_Parms InitGFXStats_Parms;

	this->ProcessEvent ( pFnInitGFXStats, &InitGFXStats_Parms, NULL );
};

// Function NowGame.StatManager.InitManager
// [0x00020002] 
// Parameters infos:

void UStatManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = (UFunction*) UObject::GObjObjects()->Data[ 60749 ];

	UStatManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.StatManager.GetSizeMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UStatManager::GetSizeMod ( )
{
	static UFunction* pFnGetSizeMod = NULL;

	if ( ! pFnGetSizeMod )
		pFnGetSizeMod = (UFunction*) UObject::GObjObjects()->Data[ 57248 ];

	UStatManager_execGetSizeMod_Parms GetSizeMod_Parms;

	pFnGetSizeMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSizeMod, &GetSizeMod_Parms, NULL );

	pFnGetSizeMod->FunctionFlags |= 0x400;

	return GetSizeMod_Parms.ReturnValue;
};

// Function NowGame.StatManager.GetDexterityMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UStatManager::GetDexterityMod ( )
{
	static UFunction* pFnGetDexterityMod = NULL;

	if ( ! pFnGetDexterityMod )
		pFnGetDexterityMod = (UFunction*) UObject::GObjObjects()->Data[ 60747 ];

	UStatManager_execGetDexterityMod_Parms GetDexterityMod_Parms;

	pFnGetDexterityMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDexterityMod, &GetDexterityMod_Parms, NULL );

	pFnGetDexterityMod->FunctionFlags |= 0x400;

	return GetDexterityMod_Parms.ReturnValue;
};

// Function NowGame.StatManager.GetPsycheMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UStatManager::GetPsycheMod ( )
{
	static UFunction* pFnGetPsycheMod = NULL;

	if ( ! pFnGetPsycheMod )
		pFnGetPsycheMod = (UFunction*) UObject::GObjObjects()->Data[ 60745 ];

	UStatManager_execGetPsycheMod_Parms GetPsycheMod_Parms;

	pFnGetPsycheMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPsycheMod, &GetPsycheMod_Parms, NULL );

	pFnGetPsycheMod->FunctionFlags |= 0x400;

	return GetPsycheMod_Parms.ReturnValue;
};

// Function NowGame.StatManager.GetIntelligenceMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UStatManager::GetIntelligenceMod ( )
{
	static UFunction* pFnGetIntelligenceMod = NULL;

	if ( ! pFnGetIntelligenceMod )
		pFnGetIntelligenceMod = (UFunction*) UObject::GObjObjects()->Data[ 60743 ];

	UStatManager_execGetIntelligenceMod_Parms GetIntelligenceMod_Parms;

	pFnGetIntelligenceMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIntelligenceMod, &GetIntelligenceMod_Parms, NULL );

	pFnGetIntelligenceMod->FunctionFlags |= 0x400;

	return GetIntelligenceMod_Parms.ReturnValue;
};

// Function NowGame.StatManager.GetConstitutionMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UStatManager::GetConstitutionMod ( )
{
	static UFunction* pFnGetConstitutionMod = NULL;

	if ( ! pFnGetConstitutionMod )
		pFnGetConstitutionMod = (UFunction*) UObject::GObjObjects()->Data[ 60741 ];

	UStatManager_execGetConstitutionMod_Parms GetConstitutionMod_Parms;

	pFnGetConstitutionMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetConstitutionMod, &GetConstitutionMod_Parms, NULL );

	pFnGetConstitutionMod->FunctionFlags |= 0x400;

	return GetConstitutionMod_Parms.ReturnValue;
};

// Function NowGame.StatManager.GetStrengthMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UStatManager::GetStrengthMod ( )
{
	static UFunction* pFnGetStrengthMod = NULL;

	if ( ! pFnGetStrengthMod )
		pFnGetStrengthMod = (UFunction*) UObject::GObjObjects()->Data[ 47748 ];

	UStatManager_execGetStrengthMod_Parms GetStrengthMod_Parms;

	pFnGetStrengthMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStrengthMod, &GetStrengthMod_Parms, NULL );

	pFnGetStrengthMod->FunctionFlags |= 0x400;

	return GetStrengthMod_Parms.ReturnValue;
};

// Function NowGame.StatManager.CalcDamageBonusPct
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UStatManager::CalcDamageBonusPct ( )
{
	static UFunction* pFnCalcDamageBonusPct = NULL;

	if ( ! pFnCalcDamageBonusPct )
		pFnCalcDamageBonusPct = (UFunction*) UObject::GObjObjects()->Data[ 60739 ];

	UStatManager_execCalcDamageBonusPct_Parms CalcDamageBonusPct_Parms;

	pFnCalcDamageBonusPct->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcDamageBonusPct, &CalcDamageBonusPct_Parms, NULL );

	pFnCalcDamageBonusPct->FunctionFlags |= 0x400;

	return CalcDamageBonusPct_Parms.ReturnValue;
};

// Function NowGame.StatManager.CalcWeights
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UStatManager::CalcWeights ( )
{
	static UFunction* pFnCalcWeights = NULL;

	if ( ! pFnCalcWeights )
		pFnCalcWeights = (UFunction*) UObject::GObjObjects()->Data[ 60738 ];

	UStatManager_execCalcWeights_Parms CalcWeights_Parms;

	pFnCalcWeights->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcWeights, &CalcWeights_Parms, NULL );

	pFnCalcWeights->FunctionFlags |= 0x400;
};

// Function NowGame.StatManager.CalculateBuoyancy
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UStatManager::CalculateBuoyancy ( )
{
	static UFunction* pFnCalculateBuoyancy = NULL;

	if ( ! pFnCalculateBuoyancy )
		pFnCalculateBuoyancy = (UFunction*) UObject::GObjObjects()->Data[ 60737 ];

	UStatManager_execCalculateBuoyancy_Parms CalculateBuoyancy_Parms;

	pFnCalculateBuoyancy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalculateBuoyancy, &CalculateBuoyancy_Parms, NULL );

	pFnCalculateBuoyancy->FunctionFlags |= 0x400;
};

// Function NowGame.StatManager.CalculateMaxUnderWaterTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UStatManager::CalculateMaxUnderWaterTime ( )
{
	static UFunction* pFnCalculateMaxUnderWaterTime = NULL;

	if ( ! pFnCalculateMaxUnderWaterTime )
		pFnCalculateMaxUnderWaterTime = (UFunction*) UObject::GObjObjects()->Data[ 60736 ];

	UStatManager_execCalculateMaxUnderWaterTime_Parms CalculateMaxUnderWaterTime_Parms;

	pFnCalculateMaxUnderWaterTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalculateMaxUnderWaterTime, &CalculateMaxUnderWaterTime_Parms, NULL );

	pFnCalculateMaxUnderWaterTime->FunctionFlags |= 0x400;
};

// Function NowGame.StatManager.CalcDamageBonus
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UStatManager::CalcDamageBonus ( )
{
	static UFunction* pFnCalcDamageBonus = NULL;

	if ( ! pFnCalcDamageBonus )
		pFnCalcDamageBonus = (UFunction*) UObject::GObjObjects()->Data[ 60735 ];

	UStatManager_execCalcDamageBonus_Parms CalcDamageBonus_Parms;

	pFnCalcDamageBonus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcDamageBonus, &CalcDamageBonus_Parms, NULL );

	pFnCalcDamageBonus->FunctionFlags |= 0x400;
};

// Function NowGame.StatTracker.Tick
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UStatTracker::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 60807 ];

	UStatTracker_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.StatTracker.IsTimerActive
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

bool UStatTracker::IsTimerActive ( struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnIsTimerActive = NULL;

	if ( ! pFnIsTimerActive )
		pFnIsTimerActive = (UFunction*) UObject::GObjObjects()->Data[ 60803 ];

	UStatTracker_execIsTimerActive_Parms IsTimerActive_Parms;
	memcpy ( &IsTimerActive_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	IsTimerActive_Parms.inObj = inObj;

	this->ProcessEvent ( pFnIsTimerActive, &IsTimerActive_Parms, NULL );

	return IsTimerActive_Parms.ReturnValue;
};

// Function NowGame.StatTracker.ClearTimer
// [0x00024002] 
// Parameters infos:
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

void UStatTracker::ClearTimer ( struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnClearTimer = NULL;

	if ( ! pFnClearTimer )
		pFnClearTimer = (UFunction*) UObject::GObjObjects()->Data[ 60800 ];

	UStatTracker_execClearTimer_Parms ClearTimer_Parms;
	memcpy ( &ClearTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	ClearTimer_Parms.inObj = inObj;

	this->ProcessEvent ( pFnClearTimer, &ClearTimer_Parms, NULL );
};

// Function NowGame.StatTracker.SetTimer
// [0x00024002] 
// Parameters infos:
// float                          InRate                         ( CPF_Parm )
// unsigned long                  inbLoop                        ( CPF_OptionalParm | CPF_Parm )
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

void UStatTracker::SetTimer ( float InRate, unsigned long inbLoop, struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnSetTimer = NULL;

	if ( ! pFnSetTimer )
		pFnSetTimer = (UFunction*) UObject::GObjObjects()->Data[ 60795 ];

	UStatTracker_execSetTimer_Parms SetTimer_Parms;
	SetTimer_Parms.InRate = InRate;
	SetTimer_Parms.inbLoop = inbLoop;
	memcpy ( &SetTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	SetTimer_Parms.inObj = inObj;

	this->ProcessEvent ( pFnSetTimer, &SetTimer_Parms, NULL );
};

// Function NowGame.StatTracker.ResetLongterm
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UStatTracker::eventResetLongterm ( )
{
	static UFunction* pFnResetLongterm = NULL;

	if ( ! pFnResetLongterm )
		pFnResetLongterm = (UFunction*) UObject::GObjObjects()->Data[ 60794 ];

	UStatTracker_eventResetLongterm_Parms ResetLongterm_Parms;

	this->ProcessEvent ( pFnResetLongterm, &ResetLongterm_Parms, NULL );
};

// Function NowGame.StatTracker.AddLongTerm
// [0x00020002] 
// Parameters infos:
// int                            addWhat                        ( CPF_Parm )

void UStatTracker::AddLongTerm ( int addWhat )
{
	static UFunction* pFnAddLongTerm = NULL;

	if ( ! pFnAddLongTerm )
		pFnAddLongTerm = (UFunction*) UObject::GObjObjects()->Data[ 60792 ];

	UStatTracker_execAddLongTerm_Parms AddLongTerm_Parms;
	AddLongTerm_Parms.addWhat = addWhat;

	this->ProcessEvent ( pFnAddLongTerm, &AddLongTerm_Parms, NULL );
};

// Function NowGame.StatTracker.ResetStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UStatTracker::eventResetStats ( )
{
	static UFunction* pFnResetStats = NULL;

	if ( ! pFnResetStats )
		pFnResetStats = (UFunction*) UObject::GObjObjects()->Data[ 60791 ];

	UStatTracker_eventResetStats_Parms ResetStats_Parms;

	this->ProcessEvent ( pFnResetStats, &ResetStats_Parms, NULL );
};

// Function NowGame.StatTracker.CollectInfo
// [0x00020002] 
// Parameters infos:

void UStatTracker::CollectInfo ( )
{
	static UFunction* pFnCollectInfo = NULL;

	if ( ! pFnCollectInfo )
		pFnCollectInfo = (UFunction*) UObject::GObjObjects()->Data[ 60789 ];

	UStatTracker_execCollectInfo_Parms CollectInfo_Parms;

	this->ProcessEvent ( pFnCollectInfo, &CollectInfo_Parms, NULL );
};

// Function NowGame.StatTracker.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UStatTracker::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 60787 ];

	UStatTracker_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.StatTracker.SendLongterm
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            Add                            ( CPF_OptionalParm | CPF_Parm )

void UStatTracker::SendLongterm ( int Add )
{
	static UFunction* pFnSendLongterm = NULL;

	if ( ! pFnSendLongterm )
		pFnSendLongterm = (UFunction*) UObject::GObjObjects()->Data[ 60785 ];

	UStatTracker_execSendLongterm_Parms SendLongterm_Parms;
	SendLongterm_Parms.Add = Add;

	pFnSendLongterm->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendLongterm, &SendLongterm_Parms, NULL );

	pFnSendLongterm->FunctionFlags |= 0x400;
};

// Function NowGame.StatTracker.SendStats
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            Add                            ( CPF_OptionalParm | CPF_Parm )

void UStatTracker::SendStats ( int Add )
{
	static UFunction* pFnSendStats = NULL;

	if ( ! pFnSendStats )
		pFnSendStats = (UFunction*) UObject::GObjObjects()->Data[ 60783 ];

	UStatTracker_execSendStats_Parms SendStats_Parms;
	SendStats_Parms.Add = Add;

	pFnSendStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendStats, &SendStats_Parms, NULL );

	pFnSendStats->FunctionFlags |= 0x400;
};

// Function NowGame.UIInfo.InitInfo
// [0x00020000] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfo::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60811 ];

	UUIInfo_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalker.AddRespToArray
// [0x00820002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )
// int                            iTargetIndex                   ( CPF_Parm )
// struct FString                 Script                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Chat                           ( CPF_Parm | CPF_NeedCtorLink )

void UUIInfoTalker::AddRespToArray ( int iIndex, int iTargetIndex, struct FString Script, struct FString Chat )
{
	static UFunction* pFnAddRespToArray = NULL;

	if ( ! pFnAddRespToArray )
		pFnAddRespToArray = (UFunction*) UObject::GObjObjects()->Data[ 60819 ];

	UUIInfoTalker_execAddRespToArray_Parms AddRespToArray_Parms;
	AddRespToArray_Parms.iIndex = iIndex;
	AddRespToArray_Parms.iTargetIndex = iTargetIndex;
	memcpy ( &AddRespToArray_Parms.Script, &Script, 0xC );
	memcpy ( &AddRespToArray_Parms.Chat, &Chat, 0xC );

	this->ProcessEvent ( pFnAddRespToArray, &AddRespToArray_Parms, NULL );
};

// Function NowGame.UIInfoTalker.AddChatToArray
// [0x00820002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )
// struct FString                 Chat                           ( CPF_Parm | CPF_NeedCtorLink )

void UUIInfoTalker::AddChatToArray ( int iIndex, struct FString Chat )
{
	static UFunction* pFnAddChatToArray = NULL;

	if ( ! pFnAddChatToArray )
		pFnAddChatToArray = (UFunction*) UObject::GObjObjects()->Data[ 60815 ];

	UUIInfoTalker_execAddChatToArray_Parms AddChatToArray_Parms;
	AddChatToArray_Parms.iIndex = iIndex;
	memcpy ( &AddChatToArray_Parms.Chat, &Chat, 0xC );

	this->ProcessEvent ( pFnAddChatToArray, &AddChatToArray_Parms, NULL );
};

// Function NowGame.UIInfoTalkerAnimalBreeder.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerAnimalBreeder::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60826 ];

	UUIInfoTalkerAnimalBreeder_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerCityBrain.GenerateResponse
// [0x00020002] 
// Parameters infos:

void UUIInfoTalkerCityBrain::GenerateResponse ( )
{
	static UFunction* pFnGenerateResponse = NULL;

	if ( ! pFnGenerateResponse )
		pFnGenerateResponse = (UFunction*) UObject::GObjObjects()->Data[ 60843 ];

	UUIInfoTalkerCityBrain_execGenerateResponse_Parms GenerateResponse_Parms;

	this->ProcessEvent ( pFnGenerateResponse, &GenerateResponse_Parms, NULL );
};

// Function NowGame.UIInfoTalkerCityBrain.GenerateIntro
// [0x00020002] 
// Parameters infos:

void UUIInfoTalkerCityBrain::GenerateIntro ( )
{
	static UFunction* pFnGenerateIntro = NULL;

	if ( ! pFnGenerateIntro )
		pFnGenerateIntro = (UFunction*) UObject::GObjObjects()->Data[ 60841 ];

	UUIInfoTalkerCityBrain_execGenerateIntro_Parms GenerateIntro_Parms;

	this->ProcessEvent ( pFnGenerateIntro, &GenerateIntro_Parms, NULL );
};

// Function NowGame.UIInfoTalkerCityBrain.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerCityBrain::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60839 ];

	UUIInfoTalkerCityBrain_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerCityBrain.GetKeeperStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIInfoTalkerCityBrain::GetKeeperStats ( )
{
	static UFunction* pFnGetKeeperStats = NULL;

	if ( ! pFnGetKeeperStats )
		pFnGetKeeperStats = (UFunction*) UObject::GObjObjects()->Data[ 60838 ];

	UUIInfoTalkerCityBrain_execGetKeeperStats_Parms GetKeeperStats_Parms;

	pFnGetKeeperStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetKeeperStats, &GetKeeperStats_Parms, NULL );

	pFnGetKeeperStats->FunctionFlags |= 0x400;
};

// Function NowGame.UIInfoTalkerCropsFarmer.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerCropsFarmer::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60845 ];

	UUIInfoTalkerCropsFarmer_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerFromContent.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerFromContent::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60849 ];

	UUIInfoTalkerFromContent_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerGateKeeper.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerGateKeeper::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60854 ];

	UUIInfoTalkerGateKeeper_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerGuard.InitInfo
// [0x00020000] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerGuard::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60857 ];

	UUIInfoTalkerGuard_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerNoobHelp.HasRabbit
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUIInfoTalkerNoobHelp::HasRabbit ( )
{
	static UFunction* pFnHasRabbit = NULL;

	if ( ! pFnHasRabbit )
		pFnHasRabbit = (UFunction*) UObject::GObjObjects()->Data[ 60882 ];

	UUIInfoTalkerNoobHelp_execHasRabbit_Parms HasRabbit_Parms;

	this->ProcessEvent ( pFnHasRabbit, &HasRabbit_Parms, NULL );

	return HasRabbit_Parms.ReturnValue;
};

// Function NowGame.UIInfoTalkerNoobHelp.GenerateResponseD
// [0x00020002] 
// Parameters infos:
// int                            iState                         ( CPF_Parm )

void UUIInfoTalkerNoobHelp::GenerateResponseD ( int iState )
{
	static UFunction* pFnGenerateResponseD = NULL;

	if ( ! pFnGenerateResponseD )
		pFnGenerateResponseD = (UFunction*) UObject::GObjObjects()->Data[ 60880 ];

	UUIInfoTalkerNoobHelp_execGenerateResponseD_Parms GenerateResponseD_Parms;
	GenerateResponseD_Parms.iState = iState;

	this->ProcessEvent ( pFnGenerateResponseD, &GenerateResponseD_Parms, NULL );
};

// Function NowGame.UIInfoTalkerNoobHelp.GenerateResponseC
// [0x00020002] 
// Parameters infos:
// int                            iState                         ( CPF_Parm )

void UUIInfoTalkerNoobHelp::GenerateResponseC ( int iState )
{
	static UFunction* pFnGenerateResponseC = NULL;

	if ( ! pFnGenerateResponseC )
		pFnGenerateResponseC = (UFunction*) UObject::GObjObjects()->Data[ 60878 ];

	UUIInfoTalkerNoobHelp_execGenerateResponseC_Parms GenerateResponseC_Parms;
	GenerateResponseC_Parms.iState = iState;

	this->ProcessEvent ( pFnGenerateResponseC, &GenerateResponseC_Parms, NULL );
};

// Function NowGame.UIInfoTalkerNoobHelp.GenerateResponseB
// [0x00020002] 
// Parameters infos:
// int                            iState                         ( CPF_Parm )

void UUIInfoTalkerNoobHelp::GenerateResponseB ( int iState )
{
	static UFunction* pFnGenerateResponseB = NULL;

	if ( ! pFnGenerateResponseB )
		pFnGenerateResponseB = (UFunction*) UObject::GObjObjects()->Data[ 60876 ];

	UUIInfoTalkerNoobHelp_execGenerateResponseB_Parms GenerateResponseB_Parms;
	GenerateResponseB_Parms.iState = iState;

	this->ProcessEvent ( pFnGenerateResponseB, &GenerateResponseB_Parms, NULL );
};

// Function NowGame.UIInfoTalkerNoobHelp.GenerateResponseA
// [0x00020002] 
// Parameters infos:
// int                            iState                         ( CPF_Parm )

void UUIInfoTalkerNoobHelp::GenerateResponseA ( int iState )
{
	static UFunction* pFnGenerateResponseA = NULL;

	if ( ! pFnGenerateResponseA )
		pFnGenerateResponseA = (UFunction*) UObject::GObjObjects()->Data[ 60874 ];

	UUIInfoTalkerNoobHelp_execGenerateResponseA_Parms GenerateResponseA_Parms;
	GenerateResponseA_Parms.iState = iState;

	this->ProcessEvent ( pFnGenerateResponseA, &GenerateResponseA_Parms, NULL );
};

// Function NowGame.UIInfoTalkerNoobHelp.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerNoobHelp::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60872 ];

	UUIInfoTalkerNoobHelp_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerNoobHelp.HasRobe
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIInfoTalkerNoobHelp::HasRobe ( )
{
	static UFunction* pFnHasRobe = NULL;

	if ( ! pFnHasRobe )
		pFnHasRobe = (UFunction*) UObject::GObjObjects()->Data[ 60870 ];

	UUIInfoTalkerNoobHelp_execHasRobe_Parms HasRobe_Parms;

	pFnHasRobe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasRobe, &HasRobe_Parms, NULL );

	pFnHasRobe->FunctionFlags |= 0x400;

	return HasRobe_Parms.ReturnValue;
};

// Function NowGame.UIInfoTalkerNoobHelp.HasLeather
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIInfoTalkerNoobHelp::HasLeather ( )
{
	static UFunction* pFnHasLeather = NULL;

	if ( ! pFnHasLeather )
		pFnHasLeather = (UFunction*) UObject::GObjObjects()->Data[ 60868 ];

	UUIInfoTalkerNoobHelp_execHasLeather_Parms HasLeather_Parms;

	pFnHasLeather->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasLeather, &HasLeather_Parms, NULL );

	pFnHasLeather->FunctionFlags |= 0x400;

	return HasLeather_Parms.ReturnValue;
};

// Function NowGame.UIInfoTalkerStable.GeneratePetResponse
// [0x00020002] 
// Parameters infos:

void UUIInfoTalkerStable::GeneratePetResponse ( )
{
	static UFunction* pFnGeneratePetResponse = NULL;

	if ( ! pFnGeneratePetResponse )
		pFnGeneratePetResponse = (UFunction*) UObject::GObjObjects()->Data[ 60888 ];

	UUIInfoTalkerStable_execGeneratePetResponse_Parms GeneratePetResponse_Parms;

	this->ProcessEvent ( pFnGeneratePetResponse, &GeneratePetResponse_Parms, NULL );
};

// Function NowGame.UIInfoTalkerStable.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerStable::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60886 ];

	UUIInfoTalkerStable_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerTaxManagerHouse.GetAHouse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerHouse* UUIInfoTalkerTaxManagerHouse::eventGetAHouse ( )
{
	static UFunction* pFnGetAHouse = NULL;

	if ( ! pFnGetAHouse )
		pFnGetAHouse = (UFunction*) UObject::GObjObjects()->Data[ 60914 ];

	UUIInfoTalkerTaxManagerHouse_eventGetAHouse_Parms GetAHouse_Parms;

	this->ProcessEvent ( pFnGetAHouse, &GetAHouse_Parms, NULL );

	return GetAHouse_Parms.ReturnValue;
};

// Function NowGame.UIInfoTalkerTaxManagerHouse.GenerateResponse
// [0x00020002] 
// Parameters infos:

void UUIInfoTalkerTaxManagerHouse::GenerateResponse ( )
{
	static UFunction* pFnGenerateResponse = NULL;

	if ( ! pFnGenerateResponse )
		pFnGenerateResponse = (UFunction*) UObject::GObjObjects()->Data[ 60912 ];

	UUIInfoTalkerTaxManagerHouse_execGenerateResponse_Parms GenerateResponse_Parms;

	this->ProcessEvent ( pFnGenerateResponse, &GenerateResponse_Parms, NULL );
};

// Function NowGame.UIInfoTalkerTaxManagerHouse.GenerateIntro
// [0x00020002] 
// Parameters infos:

void UUIInfoTalkerTaxManagerHouse::GenerateIntro ( )
{
	static UFunction* pFnGenerateIntro = NULL;

	if ( ! pFnGenerateIntro )
		pFnGenerateIntro = (UFunction*) UObject::GObjObjects()->Data[ 60910 ];

	UUIInfoTalkerTaxManagerHouse_execGenerateIntro_Parms GenerateIntro_Parms;

	this->ProcessEvent ( pFnGenerateIntro, &GenerateIntro_Parms, NULL );
};

// Function NowGame.UIInfoTalkerTaxManagerHouse.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerTaxManagerHouse::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60908 ];

	UUIInfoTalkerTaxManagerHouse_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerTaxManagerHouse.GetTaxManagerStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIInfoTalkerTaxManagerHouse::GetTaxManagerStats ( )
{
	static UFunction* pFnGetTaxManagerStats = NULL;

	if ( ! pFnGetTaxManagerStats )
		pFnGetTaxManagerStats = (UFunction*) UObject::GObjObjects()->Data[ 60907 ];

	UUIInfoTalkerTaxManagerHouse_execGetTaxManagerStats_Parms GetTaxManagerStats_Parms;

	pFnGetTaxManagerStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTaxManagerStats, &GetTaxManagerStats_Parms, NULL );

	pFnGetTaxManagerStats->FunctionFlags |= 0x400;
};

// Function NowGame.UIInfoTalkerTaxManagerKeep.GetAKeep
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarPlayerKeep* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerKeep* UUIInfoTalkerTaxManagerKeep::eventGetAKeep ( )
{
	static UFunction* pFnGetAKeep = NULL;

	if ( ! pFnGetAKeep )
		pFnGetAKeep = (UFunction*) UObject::GObjObjects()->Data[ 60926 ];

	UUIInfoTalkerTaxManagerKeep_eventGetAKeep_Parms GetAKeep_Parms;

	this->ProcessEvent ( pFnGetAKeep, &GetAKeep_Parms, NULL );

	return GetAKeep_Parms.ReturnValue;
};

// Function NowGame.UIInfoTalkerTaxManagerKeep.GenerateResponse
// [0x00020002] 
// Parameters infos:

void UUIInfoTalkerTaxManagerKeep::GenerateResponse ( )
{
	static UFunction* pFnGenerateResponse = NULL;

	if ( ! pFnGenerateResponse )
		pFnGenerateResponse = (UFunction*) UObject::GObjObjects()->Data[ 60924 ];

	UUIInfoTalkerTaxManagerKeep_execGenerateResponse_Parms GenerateResponse_Parms;

	this->ProcessEvent ( pFnGenerateResponse, &GenerateResponse_Parms, NULL );
};

// Function NowGame.UIInfoTalkerTaxManagerKeep.GenerateIntro
// [0x00020002] 
// Parameters infos:

void UUIInfoTalkerTaxManagerKeep::GenerateIntro ( )
{
	static UFunction* pFnGenerateIntro = NULL;

	if ( ! pFnGenerateIntro )
		pFnGenerateIntro = (UFunction*) UObject::GObjObjects()->Data[ 60922 ];

	UUIInfoTalkerTaxManagerKeep_execGenerateIntro_Parms GenerateIntro_Parms;

	this->ProcessEvent ( pFnGenerateIntro, &GenerateIntro_Parms, NULL );
};

// Function NowGame.UIInfoTalkerTaxManagerKeep.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerTaxManagerKeep::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60920 ];

	UUIInfoTalkerTaxManagerKeep_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerTaxManagerKeep.GetTaxManagerStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIInfoTalkerTaxManagerKeep::GetTaxManagerStats ( )
{
	static UFunction* pFnGetTaxManagerStats = NULL;

	if ( ! pFnGetTaxManagerStats )
		pFnGetTaxManagerStats = (UFunction*) UObject::GObjObjects()->Data[ 60919 ];

	UUIInfoTalkerTaxManagerKeep_execGetTaxManagerStats_Parms GetTaxManagerStats_Parms;

	pFnGetTaxManagerStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTaxManagerStats, &GetTaxManagerStats_Parms, NULL );

	pFnGetTaxManagerStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowChildHudGM.SendCommand
// [0x00020000] 
// Parameters infos:
// struct FString                 WhatCommand                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::SendCommand ( struct FString WhatCommand )
{
	static UFunction* pFnSendCommand = NULL;

	if ( ! pFnSendCommand )
		pFnSendCommand = (UFunction*) UObject::GObjObjects()->Data[ 52294 ];

	UNowChildHudGM_execSendCommand_Parms SendCommand_Parms;
	memcpy ( &SendCommand_Parms.WhatCommand, &WhatCommand, 0xC );

	this->ProcessEvent ( pFnSendCommand, &SendCommand_Parms, NULL );
};

// Function NowGame.NowChildHudGM.HandleCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WhatCommand                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 fullString                     ( CPF_Parm | CPF_NeedCtorLink )

bool UNowChildHudGM::HandleCommand ( struct FString WhatCommand, struct FString fullString )
{
	static UFunction* pFnHandleCommand = NULL;

	if ( ! pFnHandleCommand )
		pFnHandleCommand = (UFunction*) UObject::GObjObjects()->Data[ 45973 ];

	UNowChildHudGM_execHandleCommand_Parms HandleCommand_Parms;
	memcpy ( &HandleCommand_Parms.WhatCommand, &WhatCommand, 0xC );
	memcpy ( &HandleCommand_Parms.fullString, &fullString, 0xC );

	this->ProcessEvent ( pFnHandleCommand, &HandleCommand_Parms, NULL );

	return HandleCommand_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.NewAnnouncement
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::NewAnnouncement ( struct FString Message )
{
	static UFunction* pFnNewAnnouncement = NULL;

	if ( ! pFnNewAnnouncement )
		pFnNewAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 52285 ];

	UNowChildHudGM_execNewAnnouncement_Parms NewAnnouncement_Parms;
	memcpy ( &NewAnnouncement_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnNewAnnouncement, &NewAnnouncement_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ClearPetitions
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ClearPetitions ( )
{
	static UFunction* pFnClearPetitions = NULL;

	if ( ! pFnClearPetitions )
		pFnClearPetitions = (UFunction*) UObject::GObjObjects()->Data[ 52283 ];

	UNowChildHudGM_execClearPetitions_Parms ClearPetitions_Parms;

	this->ProcessEvent ( pFnClearPetitions, &ClearPetitions_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ClearMsg
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ClearMsg ( )
{
	static UFunction* pFnClearMsg = NULL;

	if ( ! pFnClearMsg )
		pFnClearMsg = (UFunction*) UObject::GObjObjects()->Data[ 52281 ];

	UNowChildHudGM_execClearMsg_Parms ClearMsg_Parms;

	this->ProcessEvent ( pFnClearMsg, &ClearMsg_Parms, NULL );
};

// Function NowGame.NowChildHudGM.GetIndexOfPetitionSource
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PetitionSource                 ( CPF_Parm | CPF_NeedCtorLink )

int UNowChildHudGM::GetIndexOfPetitionSource ( struct FString PetitionSource )
{
	static UFunction* pFnGetIndexOfPetitionSource = NULL;

	if ( ! pFnGetIndexOfPetitionSource )
		pFnGetIndexOfPetitionSource = (UFunction*) UObject::GObjObjects()->Data[ 52276 ];

	UNowChildHudGM_execGetIndexOfPetitionSource_Parms GetIndexOfPetitionSource_Parms;
	memcpy ( &GetIndexOfPetitionSource_Parms.PetitionSource, &PetitionSource, 0xC );

	this->ProcessEvent ( pFnGetIndexOfPetitionSource, &GetIndexOfPetitionSource_Parms, NULL );

	return GetIndexOfPetitionSource_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.ExecQuick
// [0x00020000] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowChildHudGM::ExecQuick ( int Index )
{
	static UFunction* pFnExecQuick = NULL;

	if ( ! pFnExecQuick )
		pFnExecQuick = (UFunction*) UObject::GObjObjects()->Data[ 52274 ];

	UNowChildHudGM_execExecQuick_Parms ExecQuick_Parms;
	ExecQuick_Parms.Index = Index;

	this->ProcessEvent ( pFnExecQuick, &ExecQuick_Parms, NULL );
};

// Function NowGame.NowChildHudGM.RemQuick
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowChildHudGM::RemQuick ( int Index )
{
	static UFunction* pFnRemQuick = NULL;

	if ( ! pFnRemQuick )
		pFnRemQuick = (UFunction*) UObject::GObjObjects()->Data[ 52272 ];

	UNowChildHudGM_execRemQuick_Parms RemQuick_Parms;
	RemQuick_Parms.Index = Index;

	this->ProcessEvent ( pFnRemQuick, &RemQuick_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ShowQuick
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ShowQuick ( )
{
	static UFunction* pFnShowQuick = NULL;

	if ( ! pFnShowQuick )
		pFnShowQuick = (UFunction*) UObject::GObjObjects()->Data[ 52270 ];

	UNowChildHudGM_execShowQuick_Parms ShowQuick_Parms;

	this->ProcessEvent ( pFnShowQuick, &ShowQuick_Parms, NULL );
};

// Function NowGame.NowChildHudGM.FindQuickSpot
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowChildHudGM::FindQuickSpot ( )
{
	static UFunction* pFnFindQuickSpot = NULL;

	if ( ! pFnFindQuickSpot )
		pFnFindQuickSpot = (UFunction*) UObject::GObjObjects()->Data[ 52267 ];

	UNowChildHudGM_execFindQuickSpot_Parms FindQuickSpot_Parms;

	this->ProcessEvent ( pFnFindQuickSpot, &FindQuickSpot_Parms, NULL );

	return FindQuickSpot_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.AddQuick
// [0x00020002] 
// Parameters infos:
// struct FString                 NewCommand                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::AddQuick ( struct FString NewCommand )
{
	static UFunction* pFnAddQuick = NULL;

	if ( ! pFnAddQuick )
		pFnAddQuick = (UFunction*) UObject::GObjObjects()->Data[ 52264 ];

	UNowChildHudGM_execAddQuick_Parms AddQuick_Parms;
	memcpy ( &AddQuick_Parms.NewCommand, &NewCommand, 0xC );

	this->ProcessEvent ( pFnAddQuick, &AddQuick_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ExecTP
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowChildHudGM::ExecTP ( int Index )
{
	static UFunction* pFnExecTP = NULL;

	if ( ! pFnExecTP )
		pFnExecTP = (UFunction*) UObject::GObjObjects()->Data[ 52262 ];

	UNowChildHudGM_execExecTP_Parms ExecTP_Parms;
	ExecTP_Parms.Index = Index;

	this->ProcessEvent ( pFnExecTP, &ExecTP_Parms, NULL );
};

// Function NowGame.NowChildHudGM.RemTP
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowChildHudGM::RemTP ( int Index )
{
	static UFunction* pFnRemTP = NULL;

	if ( ! pFnRemTP )
		pFnRemTP = (UFunction*) UObject::GObjObjects()->Data[ 52260 ];

	UNowChildHudGM_execRemTP_Parms RemTP_Parms;
	RemTP_Parms.Index = Index;

	this->ProcessEvent ( pFnRemTP, &RemTP_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ShowTP
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ShowTP ( )
{
	static UFunction* pFnShowTP = NULL;

	if ( ! pFnShowTP )
		pFnShowTP = (UFunction*) UObject::GObjObjects()->Data[ 52258 ];

	UNowChildHudGM_execShowTP_Parms ShowTP_Parms;

	this->ProcessEvent ( pFnShowTP, &ShowTP_Parms, NULL );
};

// Function NowGame.NowChildHudGM.FindTPSpot
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowChildHudGM::FindTPSpot ( )
{
	static UFunction* pFnFindTPSpot = NULL;

	if ( ! pFnFindTPSpot )
		pFnFindTPSpot = (UFunction*) UObject::GObjObjects()->Data[ 52255 ];

	UNowChildHudGM_execFindTPSpot_Parms FindTPSpot_Parms;

	this->ProcessEvent ( pFnFindTPSpot, &FindTPSpot_Parms, NULL );

	return FindTPSpot_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.AddTP
// [0x00020002] 
// Parameters infos:
// struct FString                 newDesc                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::AddTP ( struct FString newDesc )
{
	static UFunction* pFnAddTP = NULL;

	if ( ! pFnAddTP )
		pFnAddTP = (UFunction*) UObject::GObjObjects()->Data[ 52252 ];

	UNowChildHudGM_execAddTP_Parms AddTP_Parms;
	memcpy ( &AddTP_Parms.newDesc, &newDesc, 0xC );

	this->ProcessEvent ( pFnAddTP, &AddTP_Parms, NULL );
};

// Function NowGame.NowChildHudGM.FindNoteSpot
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowChildHudGM::FindNoteSpot ( )
{
	static UFunction* pFnFindNoteSpot = NULL;

	if ( ! pFnFindNoteSpot )
		pFnFindNoteSpot = (UFunction*) UObject::GObjObjects()->Data[ 52249 ];

	UNowChildHudGM_execFindNoteSpot_Parms FindNoteSpot_Parms;

	this->ProcessEvent ( pFnFindNoteSpot, &FindNoteSpot_Parms, NULL );

	return FindNoteSpot_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.AddNote
// [0x00020002] 
// Parameters infos:
// struct FString                 newMsg                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::AddNote ( struct FString newMsg )
{
	static UFunction* pFnAddNote = NULL;

	if ( ! pFnAddNote )
		pFnAddNote = (UFunction*) UObject::GObjObjects()->Data[ 52244 ];

	UNowChildHudGM_execAddNote_Parms AddNote_Parms;
	memcpy ( &AddNote_Parms.newMsg, &newMsg, 0xC );

	this->ProcessEvent ( pFnAddNote, &AddNote_Parms, NULL );
};

// Function NowGame.NowChildHudGM.RemNote
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowChildHudGM::RemNote ( int Index )
{
	static UFunction* pFnRemNote = NULL;

	if ( ! pFnRemNote )
		pFnRemNote = (UFunction*) UObject::GObjObjects()->Data[ 52242 ];

	UNowChildHudGM_execRemNote_Parms RemNote_Parms;
	RemNote_Parms.Index = Index;

	this->ProcessEvent ( pFnRemNote, &RemNote_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ShowNotes
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ShowNotes ( )
{
	static UFunction* pFnShowNotes = NULL;

	if ( ! pFnShowNotes )
		pFnShowNotes = (UFunction*) UObject::GObjObjects()->Data[ 52240 ];

	UNowChildHudGM_execShowNotes_Parms ShowNotes_Parms;

	this->ProcessEvent ( pFnShowNotes, &ShowNotes_Parms, NULL );
};

// Function NowGame.NowChildHudGM.GetItemTypeReadable
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Type                           ( CPF_Parm )

struct FString UNowChildHudGM::GetItemTypeReadable ( int Type )
{
	static UFunction* pFnGetItemTypeReadable = NULL;

	if ( ! pFnGetItemTypeReadable )
		pFnGetItemTypeReadable = (UFunction*) UObject::GObjObjects()->Data[ 52237 ];

	UNowChildHudGM_execGetItemTypeReadable_Parms GetItemTypeReadable_Parms;
	GetItemTypeReadable_Parms.Type = Type;

	this->ProcessEvent ( pFnGetItemTypeReadable, &GetItemTypeReadable_Parms, NULL );

	return GetItemTypeReadable_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.FixBrokenItem
// [0x00824002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FString                 TargetName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            ItemType                       ( CPF_OptionalParm | CPF_Parm )

void UNowChildHudGM::FixBrokenItem ( int Index, struct FString TargetName, int ItemType )
{
	static UFunction* pFnFixBrokenItem = NULL;

	if ( ! pFnFixBrokenItem )
		pFnFixBrokenItem = (UFunction*) UObject::GObjObjects()->Data[ 52231 ];

	UNowChildHudGM_execFixBrokenItem_Parms FixBrokenItem_Parms;
	FixBrokenItem_Parms.Index = Index;
	memcpy ( &FixBrokenItem_Parms.TargetName, &TargetName, 0xC );
	FixBrokenItem_Parms.ItemType = ItemType;

	this->ProcessEvent ( pFnFixBrokenItem, &FixBrokenItem_Parms, NULL );
};

// Function NowGame.NowChildHudGM.IdentifyItem
// [0x00020002] 
// Parameters infos:
// struct FBrokenItem             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FBrokenItem             Item                           ( CPF_Parm | CPF_NeedCtorLink )

struct FBrokenItem UNowChildHudGM::IdentifyItem ( struct FBrokenItem Item )
{
	static UFunction* pFnIdentifyItem = NULL;

	if ( ! pFnIdentifyItem )
		pFnIdentifyItem = (UFunction*) UObject::GObjObjects()->Data[ 52228 ];

	UNowChildHudGM_execIdentifyItem_Parms IdentifyItem_Parms;
	memcpy ( &IdentifyItem_Parms.Item, &Item, 0x28 );

	this->ProcessEvent ( pFnIdentifyItem, &IdentifyItem_Parms, NULL );

	return IdentifyItem_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.ParseBrokenItem
// [0x00820002] 
// Parameters infos:
// struct FString                 RawString                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::ParseBrokenItem ( struct FString RawString )
{
	static UFunction* pFnParseBrokenItem = NULL;

	if ( ! pFnParseBrokenItem )
		pFnParseBrokenItem = (UFunction*) UObject::GObjObjects()->Data[ 52225 ];

	UNowChildHudGM_execParseBrokenItem_Parms ParseBrokenItem_Parms;
	memcpy ( &ParseBrokenItem_Parms.RawString, &RawString, 0xC );

	this->ProcessEvent ( pFnParseBrokenItem, &ParseBrokenItem_Parms, NULL );
};

// Function NowGame.NowChildHudGM.GetBrokenItems
// [0x00020002] 
// Parameters infos:
// struct FString                 TargetName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::GetBrokenItems ( struct FString TargetName )
{
	static UFunction* pFnGetBrokenItems = NULL;

	if ( ! pFnGetBrokenItems )
		pFnGetBrokenItems = (UFunction*) UObject::GObjObjects()->Data[ 52222 ];

	UNowChildHudGM_execGetBrokenItems_Parms GetBrokenItems_Parms;
	memcpy ( &GetBrokenItems_Parms.TargetName, &TargetName, 0xC );

	this->ProcessEvent ( pFnGetBrokenItems, &GetBrokenItems_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ShowBrokenItems
// [0x00820002] 
// Parameters infos:

void UNowChildHudGM::ShowBrokenItems ( )
{
	static UFunction* pFnShowBrokenItems = NULL;

	if ( ! pFnShowBrokenItems )
		pFnShowBrokenItems = (UFunction*) UObject::GObjObjects()->Data[ 52219 ];

	UNowChildHudGM_execShowBrokenItems_Parms ShowBrokenItems_Parms;

	this->ProcessEvent ( pFnShowBrokenItems, &ShowBrokenItems_Parms, NULL );
};

// Function NowGame.NowChildHudGM.SetPetitionFilter
// [0x00020002] 
// Parameters infos:
// struct FString                 Filter                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::SetPetitionFilter ( struct FString Filter )
{
	static UFunction* pFnSetPetitionFilter = NULL;

	if ( ! pFnSetPetitionFilter )
		pFnSetPetitionFilter = (UFunction*) UObject::GObjObjects()->Data[ 52217 ];

	UNowChildHudGM_execSetPetitionFilter_Parms SetPetitionFilter_Parms;
	memcpy ( &SetPetitionFilter_Parms.Filter, &Filter, 0xC );

	this->ProcessEvent ( pFnSetPetitionFilter, &SetPetitionFilter_Parms, NULL );
};

// Function NowGame.NowChildHudGM.WhisperToPetitionSource
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 SourceName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::WhisperToPetitionSource ( struct FString Message, struct FString SourceName )
{
	static UFunction* pFnWhisperToPetitionSource = NULL;

	if ( ! pFnWhisperToPetitionSource )
		pFnWhisperToPetitionSource = (UFunction*) UObject::GObjObjects()->Data[ 52214 ];

	UNowChildHudGM_execWhisperToPetitionSource_Parms WhisperToPetitionSource_Parms;
	memcpy ( &WhisperToPetitionSource_Parms.Message, &Message, 0xC );
	memcpy ( &WhisperToPetitionSource_Parms.SourceName, &SourceName, 0xC );

	this->ProcessEvent ( pFnWhisperToPetitionSource, &WhisperToPetitionSource_Parms, NULL );
};

// Function NowGame.NowChildHudGM.GotoPetitionSource
// [0x00020002] 
// Parameters infos:
// struct FString                 SourceName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::GotoPetitionSource ( struct FString SourceName )
{
	static UFunction* pFnGotoPetitionSource = NULL;

	if ( ! pFnGotoPetitionSource )
		pFnGotoPetitionSource = (UFunction*) UObject::GObjObjects()->Data[ 52210 ];

	UNowChildHudGM_execGotoPetitionSource_Parms GotoPetitionSource_Parms;
	memcpy ( &GotoPetitionSource_Parms.SourceName, &SourceName, 0xC );

	this->ProcessEvent ( pFnGotoPetitionSource, &GotoPetitionSource_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ClaimPetition
// [0x00020002] 
// Parameters infos:
// struct FString                 SourceName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::ClaimPetition ( struct FString SourceName )
{
	static UFunction* pFnClaimPetition = NULL;

	if ( ! pFnClaimPetition )
		pFnClaimPetition = (UFunction*) UObject::GObjObjects()->Data[ 52203 ];

	UNowChildHudGM_execClaimPetition_Parms ClaimPetition_Parms;
	memcpy ( &ClaimPetition_Parms.SourceName, &SourceName, 0xC );

	this->ProcessEvent ( pFnClaimPetition, &ClaimPetition_Parms, NULL );
};

// Function NowGame.NowChildHudGM.RemPetition
// [0x00020002] 
// Parameters infos:
// struct FString                 PetitionSource                 ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::RemPetition ( struct FString PetitionSource )
{
	static UFunction* pFnRemPetition = NULL;

	if ( ! pFnRemPetition )
		pFnRemPetition = (UFunction*) UObject::GObjObjects()->Data[ 52199 ];

	UNowChildHudGM_execRemPetition_Parms RemPetition_Parms;
	memcpy ( &RemPetition_Parms.PetitionSource, &PetitionSource, 0xC );

	this->ProcessEvent ( pFnRemPetition, &RemPetition_Parms, NULL );
};

// Function NowGame.NowChildHudGM.PetitionUpdate
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::PetitionUpdate ( )
{
	static UFunction* pFnPetitionUpdate = NULL;

	if ( ! pFnPetitionUpdate )
		pFnPetitionUpdate = (UFunction*) UObject::GObjObjects()->Data[ 52186 ];

	UNowChildHudGM_execPetitionUpdate_Parms PetitionUpdate_Parms;

	this->ProcessEvent ( pFnPetitionUpdate, &PetitionUpdate_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ShowPetitions
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ShowPetitions ( )
{
	static UFunction* pFnShowPetitions = NULL;

	if ( ! pFnShowPetitions )
		pFnShowPetitions = (UFunction*) UObject::GObjObjects()->Data[ 52184 ];

	UNowChildHudGM_execShowPetitions_Parms ShowPetitions_Parms;

	this->ProcessEvent ( pFnShowPetitions, &ShowPetitions_Parms, NULL );
};

// Function NowGame.NowChildHudGM.DumpChatLog
// [0x00020000] 
// Parameters infos:
// struct FString                 outFile                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::DumpChatLog ( struct FString outFile )
{
	static UFunction* pFnDumpChatLog = NULL;

	if ( ! pFnDumpChatLog )
		pFnDumpChatLog = (UFunction*) UObject::GObjObjects()->Data[ 52182 ];

	UNowChildHudGM_execDumpChatLog_Parms DumpChatLog_Parms;
	memcpy ( &DumpChatLog_Parms.outFile, &outFile, 0xC );

	this->ProcessEvent ( pFnDumpChatLog, &DumpChatLog_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ShowText
// [0x00020002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::ShowText ( struct FString Text )
{
	static UFunction* pFnShowText = NULL;

	if ( ! pFnShowText )
		pFnShowText = (UFunction*) UObject::GObjObjects()->Data[ 52176 ];

	UNowChildHudGM_execShowText_Parms ShowText_Parms;
	memcpy ( &ShowText_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnShowText, &ShowText_Parms, NULL );
};

// Function NowGame.NowChildHudGM.InitChildHud
// [0x00020002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHudGM::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = (UFunction*) UObject::GObjObjects()->Data[ 52174 ];

	UNowChildHudGM_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudGM.DrawAnnouncements
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudGM::DrawAnnouncements ( class UCanvas* C )
{
	static UFunction* pFnDrawAnnouncements = NULL;

	if ( ! pFnDrawAnnouncements )
		pFnDrawAnnouncements = (UFunction*) UObject::GObjObjects()->Data[ 52171 ];

	UNowChildHudGM_execDrawAnnouncements_Parms DrawAnnouncements_Parms;
	DrawAnnouncements_Parms.C = C;

	this->ProcessEvent ( pFnDrawAnnouncements, &DrawAnnouncements_Parms, NULL );
};

// Function NowGame.NowChildHudGM.LastParamPage
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::LastParamPage ( )
{
	static UFunction* pFnLastParamPage = NULL;

	if ( ! pFnLastParamPage )
		pFnLastParamPage = (UFunction*) UObject::GObjObjects()->Data[ 52169 ];

	UNowChildHudGM_execLastParamPage_Parms LastParamPage_Parms;

	this->ProcessEvent ( pFnLastParamPage, &LastParamPage_Parms, NULL );
};

// Function NowGame.NowChildHudGM.NextParamPage
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::NextParamPage ( )
{
	static UFunction* pFnNextParamPage = NULL;

	if ( ! pFnNextParamPage )
		pFnNextParamPage = (UFunction*) UObject::GObjObjects()->Data[ 52167 ];

	UNowChildHudGM_execNextParamPage_Parms NextParamPage_Parms;

	this->ProcessEvent ( pFnNextParamPage, &NextParamPage_Parms, NULL );
};

// Function NowGame.NowChildHudGM.SetParamPage
// [0x00020002] 
// Parameters infos:
// int                            iParamPage                     ( CPF_Parm )

void UNowChildHudGM::SetParamPage ( int iParamPage )
{
	static UFunction* pFnSetParamPage = NULL;

	if ( ! pFnSetParamPage )
		pFnSetParamPage = (UFunction*) UObject::GObjObjects()->Data[ 52163 ];

	UNowChildHudGM_execSetParamPage_Parms SetParamPage_Parms;
	SetParamPage_Parms.iParamPage = iParamPage;

	this->ProcessEvent ( pFnSetParamPage, &SetParamPage_Parms, NULL );
};

// Function NowGame.NowChildHudGM.AddParamToViewList
// [0x00020002] 
// Parameters infos:
// struct FString                 StringValue                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::AddParamToViewList ( struct FString StringValue )
{
	static UFunction* pFnAddParamToViewList = NULL;

	if ( ! pFnAddParamToViewList )
		pFnAddParamToViewList = (UFunction*) UObject::GObjObjects()->Data[ 52161 ];

	UNowChildHudGM_execAddParamToViewList_Parms AddParamToViewList_Parms;
	memcpy ( &AddParamToViewList_Parms.StringValue, &StringValue, 0xC );

	this->ProcessEvent ( pFnAddParamToViewList, &AddParamToViewList_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ClearAndShowPetList
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ClearAndShowPetList ( )
{
	static UFunction* pFnClearAndShowPetList = NULL;

	if ( ! pFnClearAndShowPetList )
		pFnClearAndShowPetList = (UFunction*) UObject::GObjObjects()->Data[ 52150 ];

	UNowChildHudGM_execClearAndShowPetList_Parms ClearAndShowPetList_Parms;

	this->ProcessEvent ( pFnClearAndShowPetList, &ClearAndShowPetList_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ClearAndShowViewParamList
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ClearAndShowViewParamList ( )
{
	static UFunction* pFnClearAndShowViewParamList = NULL;

	if ( ! pFnClearAndShowViewParamList )
		pFnClearAndShowViewParamList = (UFunction*) UObject::GObjObjects()->Data[ 52148 ];

	UNowChildHudGM_execClearAndShowViewParamList_Parms ClearAndShowViewParamList_Parms;

	this->ProcessEvent ( pFnClearAndShowViewParamList, &ClearAndShowViewParamList_Parms, NULL );
};

// Function NowGame.NowChildHudGM.AddLastCommandTime
// [0x00020002] 
// Parameters infos:
// struct FString                 GMAvatarName                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            Time                           ( CPF_Parm )

void UNowChildHudGM::AddLastCommandTime ( struct FString GMAvatarName, int Time )
{
	static UFunction* pFnAddLastCommandTime = NULL;

	if ( ! pFnAddLastCommandTime )
		pFnAddLastCommandTime = (UFunction*) UObject::GObjObjects()->Data[ 52145 ];

	UNowChildHudGM_execAddLastCommandTime_Parms AddLastCommandTime_Parms;
	memcpy ( &AddLastCommandTime_Parms.GMAvatarName, &GMAvatarName, 0xC );
	AddLastCommandTime_Parms.Time = Time;

	this->ProcessEvent ( pFnAddLastCommandTime, &AddLastCommandTime_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ClearAndShowLastCommandList
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ClearAndShowLastCommandList ( )
{
	static UFunction* pFnClearAndShowLastCommandList = NULL;

	if ( ! pFnClearAndShowLastCommandList )
		pFnClearAndShowLastCommandList = (UFunction*) UObject::GObjObjects()->Data[ 52143 ];

	UNowChildHudGM_execClearAndShowLastCommandList_Parms ClearAndShowLastCommandList_Parms;

	this->ProcessEvent ( pFnClearAndShowLastCommandList, &ClearAndShowLastCommandList_Parms, NULL );
};

// Function NowGame.NowChildHudGM.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudGM::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = (UFunction*) UObject::GObjObjects()->Data[ 52140 ];

	UNowChildHudGM_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHud.DumpDebugHudInfo
// [0x00020002] 
// Parameters infos:

void UNowChildHud::DumpDebugHudInfo ( )
{
	static UFunction* pFnDumpDebugHudInfo = NULL;

	if ( ! pFnDumpDebugHudInfo )
		pFnDumpDebugHudInfo = (UFunction*) UObject::GObjObjects()->Data[ 51877 ];

	UNowChildHud_execDumpDebugHudInfo_Parms DumpDebugHudInfo_Parms;

	this->ProcessEvent ( pFnDumpDebugHudInfo, &DumpDebugHudInfo_Parms, NULL );
};

// Function NowGame.NowChildHud.DrawChildHud
// [0x00020000] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHud::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = (UFunction*) UObject::GObjObjects()->Data[ 51875 ];

	UNowChildHud_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHud.UseDebugHudB
// [0x00020000] 
// Parameters infos:

void UNowChildHud::UseDebugHudB ( )
{
	static UFunction* pFnUseDebugHudB = NULL;

	if ( ! pFnUseDebugHudB )
		pFnUseDebugHudB = (UFunction*) UObject::GObjObjects()->Data[ 51874 ];

	UNowChildHud_execUseDebugHudB_Parms UseDebugHudB_Parms;

	this->ProcessEvent ( pFnUseDebugHudB, &UseDebugHudB_Parms, NULL );
};

// Function NowGame.NowChildHud.UseDebugHud
// [0x00020000] 
// Parameters infos:

void UNowChildHud::UseDebugHud ( )
{
	static UFunction* pFnUseDebugHud = NULL;

	if ( ! pFnUseDebugHud )
		pFnUseDebugHud = (UFunction*) UObject::GObjObjects()->Data[ 51873 ];

	UNowChildHud_execUseDebugHud_Parms UseDebugHud_Parms;

	this->ProcessEvent ( pFnUseDebugHud, &UseDebugHud_Parms, NULL );
};

// Function NowGame.NowChildHud.InitChildHud
// [0x00020002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHud::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = (UFunction*) UObject::GObjObjects()->Data[ 51871 ];

	UNowChildHud_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.NowPlayerInput.ToggleMOUI
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UNowPlayerInput::ToggleMOUI ( )
{
	static UFunction* pFnToggleMOUI = NULL;

	if ( ! pFnToggleMOUI )
		pFnToggleMOUI = (UFunction*) UObject::GObjObjects()->Data[ 58727 ];

	UNowPlayerInput_execToggleMOUI_Parms ToggleMOUI_Parms;

	this->ProcessEvent ( pFnToggleMOUI, &ToggleMOUI_Parms, NULL );
};

// Function NowGame.NowPlayerInput.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void UNowPlayerInput::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 58726 ];

	UNowPlayerInput_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowPlayerInput.GetMount
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarAiMount*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarAiMount* UNowPlayerInput::eventGetMount ( )
{
	static UFunction* pFnGetMount = NULL;

	if ( ! pFnGetMount )
		pFnGetMount = (UFunction*) UObject::GObjObjects()->Data[ 58724 ];

	UNowPlayerInput_eventGetMount_Parms GetMount_Parms;

	this->ProcessEvent ( pFnGetMount, &GetMount_Parms, NULL );

	return GetMount_Parms.ReturnValue;
};

// Function NowGame.NowPlayerInput.ToggleAutoMove
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UNowPlayerInput::ToggleAutoMove ( )
{
	static UFunction* pFnToggleAutoMove = NULL;

	if ( ! pFnToggleAutoMove )
		pFnToggleAutoMove = (UFunction*) UObject::GObjObjects()->Data[ 58723 ];

	UNowPlayerInput_execToggleAutoMove_Parms ToggleAutoMove_Parms;

	this->ProcessEvent ( pFnToggleAutoMove, &ToggleAutoMove_Parms, NULL );
};

// Function NowGame.NowPlayerInput.ShowMouseOff
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void UNowPlayerInput::ShowMouseOff ( )
{
	static UFunction* pFnShowMouseOff = NULL;

	if ( ! pFnShowMouseOff )
		pFnShowMouseOff = (UFunction*) UObject::GObjObjects()->Data[ 58722 ];

	UNowPlayerInput_execShowMouseOff_Parms ShowMouseOff_Parms;

	this->ProcessEvent ( pFnShowMouseOff, &ShowMouseOff_Parms, NULL );
};

// Function NowGame.NowPlayerInput.ShowMouseOn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UNowPlayerInput::ShowMouseOn ( )
{
	static UFunction* pFnShowMouseOn = NULL;

	if ( ! pFnShowMouseOn )
		pFnShowMouseOn = (UFunction*) UObject::GObjObjects()->Data[ 58721 ];

	UNowPlayerInput_execShowMouseOn_Parms ShowMouseOn_Parms;

	this->ProcessEvent ( pFnShowMouseOn, &ShowMouseOn_Parms, NULL );
};

// Function NowGame.NowPlayerInput.GetGFXHud
// [0x00020002] 
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* UNowPlayerInput::GetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = (UFunction*) UObject::GObjObjects()->Data[ 58719 ];

	UNowPlayerInput_execGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.NowPlayerInput.SetShowMouse
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void UNowPlayerInput::SetShowMouse ( unsigned long bShow )
{
	static UFunction* pFnSetShowMouse = NULL;

	if ( ! pFnSetShowMouse )
		pFnSetShowMouse = (UFunction*) UObject::GObjObjects()->Data[ 58717 ];

	UNowPlayerInput_execSetShowMouse_Parms SetShowMouse_Parms;
	SetShowMouse_Parms.bShow = bShow;

	this->ProcessEvent ( pFnSetShowMouse, &SetShowMouse_Parms, NULL );
};

// Function NowGame.NowPlayerInput.ToggleMouse
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UNowPlayerInput::ToggleMouse ( )
{
	static UFunction* pFnToggleMouse = NULL;

	if ( ! pFnToggleMouse )
		pFnToggleMouse = (UFunction*) UObject::GObjObjects()->Data[ 58716 ];

	UNowPlayerInput_execToggleMouse_Parms ToggleMouse_Parms;

	this->ProcessEvent ( pFnToggleMouse, &ToggleMouse_Parms, NULL );
};

// Function NowGame.NowPlayerInput.CheckForDoubleClickMove
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

unsigned char UNowPlayerInput::CheckForDoubleClickMove ( float DeltaTime )
{
	static UFunction* pFnCheckForDoubleClickMove = NULL;

	if ( ! pFnCheckForDoubleClickMove )
		pFnCheckForDoubleClickMove = (UFunction*) UObject::GObjObjects()->Data[ 58713 ];

	UNowPlayerInput_execCheckForDoubleClickMove_Parms CheckForDoubleClickMove_Parms;
	CheckForDoubleClickMove_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnCheckForDoubleClickMove, &CheckForDoubleClickMove_Parms, NULL );

	return CheckForDoubleClickMove_Parms.ReturnValue;
};

// Function NowGame.NowPlayerInput.PlayerInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UNowPlayerInput::eventPlayerInput ( float DeltaTime )
{
	static UFunction* pFnPlayerInput = NULL;

	if ( ! pFnPlayerInput )
		pFnPlayerInput = (UFunction*) UObject::GObjObjects()->Data[ 58709 ];

	UNowPlayerInput_eventPlayerInput_Parms PlayerInput_Parms;
	PlayerInput_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPlayerInput, &PlayerInput_Parms, NULL );
};

// Function NowGame.NowPlayerInput.HasLookInput
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowPlayerInput::HasLookInput ( )
{
	static UFunction* pFnHasLookInput = NULL;

	if ( ! pFnHasLookInput )
		pFnHasLookInput = (UFunction*) UObject::GObjObjects()->Data[ 58707 ];

	UNowPlayerInput_execHasLookInput_Parms HasLookInput_Parms;

	this->ProcessEvent ( pFnHasLookInput, &HasLookInput_Parms, NULL );

	return HasLookInput_Parms.ReturnValue;
};

// Function NowGame.NowPlayerInput.HasMoveInput
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowPlayerInput::HasMoveInput ( )
{
	static UFunction* pFnHasMoveInput = NULL;

	if ( ! pFnHasMoveInput )
		pFnHasMoveInput = (UFunction*) UObject::GObjObjects()->Data[ 47178 ];

	UNowPlayerInput_execHasMoveInput_Parms HasMoveInput_Parms;

	this->ProcessEvent ( pFnHasMoveInput, &HasMoveInput_Parms, NULL );

	return HasMoveInput_Parms.ReturnValue;
};

// Function NowGame.NowChildHudDebugAvatarManager.DumpDebugHudInfo
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugAvatarManager::DumpDebugHudInfo ( )
{
	static UFunction* pFnDumpDebugHudInfo = NULL;

	if ( ! pFnDumpDebugHudInfo )
		pFnDumpDebugHudInfo = (UFunction*) UObject::GObjObjects()->Data[ 51965 ];

	UNowChildHudDebugAvatarManager_execDumpDebugHudInfo_Parms DumpDebugHudInfo_Parms;

	this->ProcessEvent ( pFnDumpDebugHudInfo, &DumpDebugHudInfo_Parms, NULL );
};

// Function NowGame.NowChildHudDebugAvatarManager.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebugAvatarManager::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = (UFunction*) UObject::GObjObjects()->Data[ 51962 ];

	UNowChildHudDebugAvatarManager_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDebugAvatarManager.UseDebugHudB
// [0x00020000] 
// Parameters infos:

void UNowChildHudDebugAvatarManager::UseDebugHudB ( )
{
	static UFunction* pFnUseDebugHudB = NULL;

	if ( ! pFnUseDebugHudB )
		pFnUseDebugHudB = (UFunction*) UObject::GObjObjects()->Data[ 51961 ];

	UNowChildHudDebugAvatarManager_execUseDebugHudB_Parms UseDebugHudB_Parms;

	this->ProcessEvent ( pFnUseDebugHudB, &UseDebugHudB_Parms, NULL );
};

// Function NowGame.NowChildHudDebugAvatarManager.UseDebugHud
// [0x00020000] 
// Parameters infos:

void UNowChildHudDebugAvatarManager::UseDebugHud ( )
{
	static UFunction* pFnUseDebugHud = NULL;

	if ( ! pFnUseDebugHud )
		pFnUseDebugHud = (UFunction*) UObject::GObjObjects()->Data[ 51960 ];

	UNowChildHudDebugAvatarManager_execUseDebugHud_Parms UseDebugHud_Parms;

	this->ProcessEvent ( pFnUseDebugHud, &UseDebugHud_Parms, NULL );
};

// Function NowGame.NowChildHudDebugAvatarManager.InitChildHud
// [0x00020002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHudDebugAvatarManager::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = (UFunction*) UObject::GObjObjects()->Data[ 51958 ];

	UNowChildHudDebugAvatarManager_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.GetFollowPawn
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* UNowChildHudDebug::GetFollowPawn ( )
{
	static UFunction* pFnGetFollowPawn = NULL;

	if ( ! pFnGetFollowPawn )
		pFnGetFollowPawn = (UFunction*) UObject::GObjObjects()->Data[ 51954 ];

	UNowChildHudDebug_execGetFollowPawn_Parms GetFollowPawn_Parms;

	this->ProcessEvent ( pFnGetFollowPawn, &GetFollowPawn_Parms, NULL );

	return GetFollowPawn_Parms.ReturnValue;
};

// Function NowGame.NowChildHudDebug.DrawMessages
// [0x00020000] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebug::DrawMessages ( class UCanvas* C )
{
	static UFunction* pFnDrawMessages = NULL;

	if ( ! pFnDrawMessages )
		pFnDrawMessages = (UFunction*) UObject::GObjObjects()->Data[ 51952 ];

	UNowChildHudDebug_execDrawMessages_Parms DrawMessages_Parms;
	DrawMessages_Parms.C = C;

	this->ProcessEvent ( pFnDrawMessages, &DrawMessages_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.DrawDebugLines
// [0x00820002] 
// Parameters infos:

void UNowChildHudDebug::DrawDebugLines ( )
{
	static UFunction* pFnDrawDebugLines = NULL;

	if ( ! pFnDrawDebugLines )
		pFnDrawDebugLines = (UFunction*) UObject::GObjObjects()->Data[ 51949 ];

	UNowChildHudDebug_execDrawDebugLines_Parms DrawDebugLines_Parms;

	this->ProcessEvent ( pFnDrawDebugLines, &DrawDebugLines_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.DrawTargetInfo
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebug::DrawTargetInfo ( class UCanvas* C )
{
	static UFunction* pFnDrawTargetInfo = NULL;

	if ( ! pFnDrawTargetInfo )
		pFnDrawTargetInfo = (UFunction*) UObject::GObjObjects()->Data[ 51945 ];

	UNowChildHudDebug_execDrawTargetInfo_Parms DrawTargetInfo_Parms;
	DrawTargetInfo_Parms.C = C;

	this->ProcessEvent ( pFnDrawTargetInfo, &DrawTargetInfo_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.DrawGraph
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebug::DrawGraph ( class UCanvas* C )
{
	static UFunction* pFnDrawGraph = NULL;

	if ( ! pFnDrawGraph )
		pFnDrawGraph = (UFunction*) UObject::GObjObjects()->Data[ 51942 ];

	UNowChildHudDebug_execDrawGraph_Parms DrawGraph_Parms;
	DrawGraph_Parms.C = C;

	this->ProcessEvent ( pFnDrawGraph, &DrawGraph_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.ClearGraph
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebug::ClearGraph ( )
{
	static UFunction* pFnClearGraph = NULL;

	if ( ! pFnClearGraph )
		pFnClearGraph = (UFunction*) UObject::GObjObjects()->Data[ 51940 ];

	UNowChildHudDebug_execClearGraph_Parms ClearGraph_Parms;

	this->ProcessEvent ( pFnClearGraph, &ClearGraph_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.DumpGraphDebug
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebug::DumpGraphDebug ( )
{
	static UFunction* pFnDumpGraphDebug = NULL;

	if ( ! pFnDumpGraphDebug )
		pFnDumpGraphDebug = (UFunction*) UObject::GObjObjects()->Data[ 51939 ];

	UNowChildHudDebug_execDumpGraphDebug_Parms DumpGraphDebug_Parms;

	this->ProcessEvent ( pFnDumpGraphDebug, &DumpGraphDebug_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.ReCalcAverage
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebug::ReCalcAverage ( )
{
	static UFunction* pFnReCalcAverage = NULL;

	if ( ! pFnReCalcAverage )
		pFnReCalcAverage = (UFunction*) UObject::GObjObjects()->Data[ 51936 ];

	UNowChildHudDebug_execReCalcAverage_Parms ReCalcAverage_Parms;

	this->ProcessEvent ( pFnReCalcAverage, &ReCalcAverage_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebug::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = (UFunction*) UObject::GObjObjects()->Data[ 51934 ];

	UNowChildHudDebug_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDebugPlayerManager.DumpDebugHudInfo
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugPlayerManager::DumpDebugHudInfo ( )
{
	static UFunction* pFnDumpDebugHudInfo = NULL;

	if ( ! pFnDumpDebugHudInfo )
		pFnDumpDebugHudInfo = (UFunction*) UObject::GObjObjects()->Data[ 52047 ];

	UNowChildHudDebugPlayerManager_execDumpDebugHudInfo_Parms DumpDebugHudInfo_Parms;

	this->ProcessEvent ( pFnDumpDebugHudInfo, &DumpDebugHudInfo_Parms, NULL );
};

// Function NowGame.NowChildHudDebugPlayerManager.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebugPlayerManager::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = (UFunction*) UObject::GObjObjects()->Data[ 52041 ];

	UNowChildHudDebugPlayerManager_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDebugPlayerManager.UseDebugHudB
// [0x00020000] 
// Parameters infos:

void UNowChildHudDebugPlayerManager::UseDebugHudB ( )
{
	static UFunction* pFnUseDebugHudB = NULL;

	if ( ! pFnUseDebugHudB )
		pFnUseDebugHudB = (UFunction*) UObject::GObjObjects()->Data[ 52040 ];

	UNowChildHudDebugPlayerManager_execUseDebugHudB_Parms UseDebugHudB_Parms;

	this->ProcessEvent ( pFnUseDebugHudB, &UseDebugHudB_Parms, NULL );
};

// Function NowGame.NowChildHudDebugPlayerManager.UseDebugHud
// [0x00020000] 
// Parameters infos:

void UNowChildHudDebugPlayerManager::UseDebugHud ( )
{
	static UFunction* pFnUseDebugHud = NULL;

	if ( ! pFnUseDebugHud )
		pFnUseDebugHud = (UFunction*) UObject::GObjObjects()->Data[ 52039 ];

	UNowChildHudDebugPlayerManager_execUseDebugHud_Parms UseDebugHud_Parms;

	this->ProcessEvent ( pFnUseDebugHud, &UseDebugHud_Parms, NULL );
};

// Function NowGame.NowChildHudDebugPlayerManager.InitChildHud
// [0x00020002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHudDebugPlayerManager::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = (UFunction*) UObject::GObjObjects()->Data[ 52036 ];

	UNowChildHudDebugPlayerManager_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.ClientViewModeAiControl.Escape
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeAiControl::Escape ( )
{
	static UFunction* pFnEscape = NULL;

	if ( ! pFnEscape )
		pFnEscape = (UFunction*) UObject::GObjObjects()->Data[ 46220 ];

	UClientViewModeAiControl_execEscape_Parms Escape_Parms;

	this->ProcessEvent ( pFnEscape, &Escape_Parms, NULL );

	return Escape_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeAiControl.RightClick
// [0x00020002] 
// Parameters infos:

void UClientViewModeAiControl::RightClick ( )
{
	static UFunction* pFnRightClick = NULL;

	if ( ! pFnRightClick )
		pFnRightClick = (UFunction*) UObject::GObjObjects()->Data[ 46219 ];

	UClientViewModeAiControl_execRightClick_Parms RightClick_Parms;

	this->ProcessEvent ( pFnRightClick, &RightClick_Parms, NULL );
};

// Function NowGame.ClientViewModeAiControl.LeftClick
// [0x00020002] 
// Parameters infos:

void UClientViewModeAiControl::LeftClick ( )
{
	static UFunction* pFnLeftClick = NULL;

	if ( ! pFnLeftClick )
		pFnLeftClick = (UFunction*) UObject::GObjObjects()->Data[ 46218 ];

	UClientViewModeAiControl_execLeftClick_Parms LeftClick_Parms;

	this->ProcessEvent ( pFnLeftClick, &LeftClick_Parms, NULL );
};

// Function NowGame.ClientViewModeAiControl.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeAiControl::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = (UFunction*) UObject::GObjObjects()->Data[ 46216 ];

	UClientViewModeAiControl_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeAiControl.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewModeAiControl::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46215 ];

	UClientViewModeAiControl_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewModeAiControl.CanvasTick
// [0x00820002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UClientViewModeAiControl::CanvasTick ( class UCanvas* C )
{
	static UFunction* pFnCanvasTick = NULL;

	if ( ! pFnCanvasTick )
		pFnCanvasTick = (UFunction*) UObject::GObjObjects()->Data[ 46191 ];

	UClientViewModeAiControl_execCanvasTick_Parms CanvasTick_Parms;
	CanvasTick_Parms.C = C;

	this->ProcessEvent ( pFnCanvasTick, &CanvasTick_Parms, NULL );
};

// Function NowGame.ClientViewModeAiControl.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModeAiControl::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46186 ];

	UClientViewModeAiControl_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModeAiControl.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModeAiControl::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46184 ];

	UClientViewModeAiControl_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModeCreatureControl.SendCommand
// [0x00020002] 
// Parameters infos:
// int                            FinalCommand                   ( CPF_Parm )

void UClientViewModeCreatureControl::SendCommand ( int FinalCommand )
{
	static UFunction* pFnSendCommand = NULL;

	if ( ! pFnSendCommand )
		pFnSendCommand = (UFunction*) UObject::GObjObjects()->Data[ 46240 ];

	UClientViewModeCreatureControl_execSendCommand_Parms SendCommand_Parms;
	SendCommand_Parms.FinalCommand = FinalCommand;

	this->ProcessEvent ( pFnSendCommand, &SendCommand_Parms, NULL );
};

// Function NowGame.ClientViewModeCreatureControl.NumberPress
// [0x00020002] 
// Parameters infos:
// int                            iNumber                        ( CPF_Parm )

void UClientViewModeCreatureControl::NumberPress ( int iNumber )
{
	static UFunction* pFnNumberPress = NULL;

	if ( ! pFnNumberPress )
		pFnNumberPress = (UFunction*) UObject::GObjObjects()->Data[ 46238 ];

	UClientViewModeCreatureControl_execNumberPress_Parms NumberPress_Parms;
	NumberPress_Parms.iNumber = iNumber;

	this->ProcessEvent ( pFnNumberPress, &NumberPress_Parms, NULL );
};

// Function NowGame.ClientViewModeCreatureControl.CanvasTick
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UClientViewModeCreatureControl::CanvasTick ( class UCanvas* C )
{
	static UFunction* pFnCanvasTick = NULL;

	if ( ! pFnCanvasTick )
		pFnCanvasTick = (UFunction*) UObject::GObjObjects()->Data[ 46230 ];

	UClientViewModeCreatureControl_execCanvasTick_Parms CanvasTick_Parms;
	CanvasTick_Parms.C = C;

	this->ProcessEvent ( pFnCanvasTick, &CanvasTick_Parms, NULL );
};

// Function NowGame.ClientViewModeCreatureControl.Escape
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeCreatureControl::Escape ( )
{
	static UFunction* pFnEscape = NULL;

	if ( ! pFnEscape )
		pFnEscape = (UFunction*) UObject::GObjObjects()->Data[ 46228 ];

	UClientViewModeCreatureControl_execEscape_Parms Escape_Parms;

	this->ProcessEvent ( pFnEscape, &Escape_Parms, NULL );

	return Escape_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeCreatureControl.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModeCreatureControl::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46226 ];

	UClientViewModeCreatureControl_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.NowVolumeUnderground.PawnLeavingVolume
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ANowVolumeUnderground::eventPawnLeavingVolume ( class APawn* P )
{
	static UFunction* pFnPawnLeavingVolume = NULL;

	if ( ! pFnPawnLeavingVolume )
		pFnPawnLeavingVolume = (UFunction*) UObject::GObjObjects()->Data[ 59815 ];

	ANowVolumeUnderground_eventPawnLeavingVolume_Parms PawnLeavingVolume_Parms;
	PawnLeavingVolume_Parms.P = P;

	this->ProcessEvent ( pFnPawnLeavingVolume, &PawnLeavingVolume_Parms, NULL );
};

// Function NowGame.NowVolumeUnderground.PawnEnteredVolume
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ANowVolumeUnderground::eventPawnEnteredVolume ( class APawn* P )
{
	static UFunction* pFnPawnEnteredVolume = NULL;

	if ( ! pFnPawnEnteredVolume )
		pFnPawnEnteredVolume = (UFunction*) UObject::GObjObjects()->Data[ 59813 ];

	ANowVolumeUnderground_eventPawnEnteredVolume_Parms PawnEnteredVolume_Parms;
	PawnEnteredVolume_Parms.P = P;

	this->ProcessEvent ( pFnPawnEnteredVolume, &PawnEnteredVolume_Parms, NULL );
};

// Function NowGame.NowVolumeWater.GetANowPawn
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* ANowVolumeWater::GetANowPawn ( )
{
	static UFunction* pFnGetANowPawn = NULL;

	if ( ! pFnGetANowPawn )
		pFnGetANowPawn = (UFunction*) UObject::GObjObjects()->Data[ 59872 ];

	ANowVolumeWater_execGetANowPawn_Parms GetANowPawn_Parms;

	this->ProcessEvent ( pFnGetANowPawn, &GetANowPawn_Parms, NULL );

	return GetANowPawn_Parms.ReturnValue;
};

// Function NowGame.NowVolumeWater.GetANowController
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowVolumeWater::GetANowController ( )
{
	static UFunction* pFnGetANowController = NULL;

	if ( ! pFnGetANowController )
		pFnGetANowController = (UFunction*) UObject::GObjObjects()->Data[ 59870 ];

	ANowVolumeWater_execGetANowController_Parms GetANowController_Parms;

	this->ProcessEvent ( pFnGetANowController, &GetANowController_Parms, NULL );

	return GetANowController_Parms.ReturnValue;
};

// Function NowGame.NowVolumeWater.Splash
// [0x00820102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumeWater::Splash ( class AActor* Other )
{
	static UFunction* pFnSplash = NULL;

	if ( ! pFnSplash )
		pFnSplash = (UFunction*) UObject::GObjObjects()->Data[ 59867 ];

	ANowVolumeWater_execSplash_Parms Splash_Parms;
	Splash_Parms.Other = Other;

	this->ProcessEvent ( pFnSplash, &Splash_Parms, NULL );
};

// Function NowGame.NowVolumeWater.PlayExitSplash
// [0x00020002] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumeWater::PlayExitSplash ( class AActor* Other )
{
	static UFunction* pFnPlayExitSplash = NULL;

	if ( ! pFnPlayExitSplash )
		pFnPlayExitSplash = (UFunction*) UObject::GObjObjects()->Data[ 59865 ];

	ANowVolumeWater_execPlayExitSplash_Parms PlayExitSplash_Parms;
	PlayExitSplash_Parms.Other = Other;

	this->ProcessEvent ( pFnPlayExitSplash, &PlayExitSplash_Parms, NULL );
};

// Function NowGame.NowVolumeWater.PlayEntrySplash
// [0x00020002] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumeWater::PlayEntrySplash ( class AActor* Other )
{
	static UFunction* pFnPlayEntrySplash = NULL;

	if ( ! pFnPlayEntrySplash )
		pFnPlayEntrySplash = (UFunction*) UObject::GObjObjects()->Data[ 59863 ];

	ANowVolumeWater_execPlayEntrySplash_Parms PlayEntrySplash_Parms;
	PlayEntrySplash_Parms.Other = Other;

	this->ProcessEvent ( pFnPlayEntrySplash, &PlayEntrySplash_Parms, NULL );
};

// Function NowGame.NowVolumeWater.PawnLeavingVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ANowVolumeWater::eventPawnLeavingVolume ( class APawn* Other )
{
	static UFunction* pFnPawnLeavingVolume = NULL;

	if ( ! pFnPawnLeavingVolume )
		pFnPawnLeavingVolume = (UFunction*) UObject::GObjObjects()->Data[ 59861 ];

	ANowVolumeWater_eventPawnLeavingVolume_Parms PawnLeavingVolume_Parms;
	PawnLeavingVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnLeavingVolume, &PawnLeavingVolume_Parms, NULL );
};

// Function NowGame.NowVolumeWater.PawnEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ANowVolumeWater::eventPawnEnteredVolume ( class APawn* Other )
{
	static UFunction* pFnPawnEnteredVolume = NULL;

	if ( ! pFnPawnEnteredVolume )
		pFnPawnEnteredVolume = (UFunction*) UObject::GObjObjects()->Data[ 59859 ];

	ANowVolumeWater_eventPawnEnteredVolume_Parms PawnEnteredVolume_Parms;
	PawnEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnEnteredVolume, &PawnEnteredVolume_Parms, NULL );
};

// Function NowGame.NowVolumeWater.ActorLeavingVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumeWater::eventActorLeavingVolume ( class AActor* Other )
{
	static UFunction* pFnActorLeavingVolume = NULL;

	if ( ! pFnActorLeavingVolume )
		pFnActorLeavingVolume = (UFunction*) UObject::GObjObjects()->Data[ 59857 ];

	ANowVolumeWater_eventActorLeavingVolume_Parms ActorLeavingVolume_Parms;
	ActorLeavingVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorLeavingVolume, &ActorLeavingVolume_Parms, NULL );
};

// Function NowGame.NowVolumeWater.CheckSwimmers
// [0x00020002] 
// Parameters infos:

void ANowVolumeWater::CheckSwimmers ( )
{
	static UFunction* pFnCheckSwimmers = NULL;

	if ( ! pFnCheckSwimmers )
		pFnCheckSwimmers = (UFunction*) UObject::GObjObjects()->Data[ 59855 ];

	ANowVolumeWater_execCheckSwimmers_Parms CheckSwimmers_Parms;

	this->ProcessEvent ( pFnCheckSwimmers, &CheckSwimmers_Parms, NULL );
};

// Function NowGame.NowVolumeWater.ClientDrowning
// [0x00020002] 
// Parameters infos:

void ANowVolumeWater::ClientDrowning ( )
{
	static UFunction* pFnClientDrowning = NULL;

	if ( ! pFnClientDrowning )
		pFnClientDrowning = (UFunction*) UObject::GObjObjects()->Data[ 59854 ];

	ANowVolumeWater_execClientDrowning_Parms ClientDrowning_Parms;

	this->ProcessEvent ( pFnClientDrowning, &ClientDrowning_Parms, NULL );
};

// Function NowGame.NowVolumeWater.SurfaceCheckClient
// [0x00020002] 
// Parameters infos:

void ANowVolumeWater::SurfaceCheckClient ( )
{
	static UFunction* pFnSurfaceCheckClient = NULL;

	if ( ! pFnSurfaceCheckClient )
		pFnSurfaceCheckClient = (UFunction*) UObject::GObjObjects()->Data[ 59852 ];

	ANowVolumeWater_execSurfaceCheckClient_Parms SurfaceCheckClient_Parms;

	this->ProcessEvent ( pFnSurfaceCheckClient, &SurfaceCheckClient_Parms, NULL );
};

// Function NowGame.NowVolumeWater.CanSink
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowPawn*                P                              ( CPF_Parm )

bool ANowVolumeWater::CanSink ( class ANowPawn* P )
{
	static UFunction* pFnCanSink = NULL;

	if ( ! pFnCanSink )
		pFnCanSink = (UFunction*) UObject::GObjObjects()->Data[ 59843 ];

	ANowVolumeWater_execCanSink_Parms CanSink_Parms;
	CanSink_Parms.P = P;

	this->ProcessEvent ( pFnCanSink, &CanSink_Parms, NULL );

	return CanSink_Parms.ReturnValue;
};

// Function NowGame.NowVolumeWater.ActorEnteredVolume
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumeWater::eventActorEnteredVolume ( class AActor* Other )
{
	static UFunction* pFnActorEnteredVolume = NULL;

	if ( ! pFnActorEnteredVolume )
		pFnActorEnteredVolume = (UFunction*) UObject::GObjObjects()->Data[ 59836 ];

	ANowVolumeWater_eventActorEnteredVolume_Parms ActorEnteredVolume_Parms;
	ActorEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorEnteredVolume, &ActorEnteredVolume_Parms, NULL );
};

// Function NowGame.NowVolumeWater.MountDrowned
// [0x00020000] 
// Parameters infos:

void ANowVolumeWater::MountDrowned ( )
{
	static UFunction* pFnMountDrowned = NULL;

	if ( ! pFnMountDrowned )
		pFnMountDrowned = (UFunction*) UObject::GObjObjects()->Data[ 59835 ];

	ANowVolumeWater_execMountDrowned_Parms MountDrowned_Parms;

	this->ProcessEvent ( pFnMountDrowned, &MountDrowned_Parms, NULL );
};

// Function NowGame.NowVolumeWater.CheckMountSwimming
// [0x00020002] 
// Parameters infos:

void ANowVolumeWater::CheckMountSwimming ( )
{
	static UFunction* pFnCheckMountSwimming = NULL;

	if ( ! pFnCheckMountSwimming )
		pFnCheckMountSwimming = (UFunction*) UObject::GObjObjects()->Data[ 59834 ];

	ANowVolumeWater_execCheckMountSwimming_Parms CheckMountSwimming_Parms;

	this->ProcessEvent ( pFnCheckMountSwimming, &CheckMountSwimming_Parms, NULL );
};

// Function NowGame.NowVolumeWater.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowVolumeWater::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 59829 ];

	ANowVolumeWater_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.ClientViewModeKeepNpcPlace.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewModeKeepNpcPlace::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46520 ];

	UClientViewModeKeepNpcPlace_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewModeKeepNpcPlace.UpdateSelected
// [0x00020002] 
// Parameters infos:

void UClientViewModeKeepNpcPlace::UpdateSelected ( )
{
	static UFunction* pFnUpdateSelected = NULL;

	if ( ! pFnUpdateSelected )
		pFnUpdateSelected = (UFunction*) UObject::GObjObjects()->Data[ 46515 ];

	UClientViewModeKeepNpcPlace_execUpdateSelected_Parms UpdateSelected_Parms;

	this->ProcessEvent ( pFnUpdateSelected, &UpdateSelected_Parms, NULL );
};

// Function NowGame.ClientViewModeKeepNpcPlace.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModeKeepNpcPlace::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46513 ];

	UClientViewModeKeepNpcPlace_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModeKeepNpcPlace.ConnectToKeep
// [0x00820002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerKeep* WhatKeep                       ( CPF_Parm )

void UClientViewModeKeepNpcPlace::ConnectToKeep ( class ANowAtlasAvatarPlayerKeep* WhatKeep )
{
	static UFunction* pFnConnectToKeep = NULL;

	if ( ! pFnConnectToKeep )
		pFnConnectToKeep = (UFunction*) UObject::GObjObjects()->Data[ 46506 ];

	UClientViewModeKeepNpcPlace_execConnectToKeep_Parms ConnectToKeep_Parms;
	ConnectToKeep_Parms.WhatKeep = WhatKeep;

	this->ProcessEvent ( pFnConnectToKeep, &ConnectToKeep_Parms, NULL );
};

// Function NowGame.ClientViewModeKeepNpcPlace.FindKeep
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerKeep* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerKeep* UClientViewModeKeepNpcPlace::FindKeep ( )
{
	static UFunction* pFnFindKeep = NULL;

	if ( ! pFnFindKeep )
		pFnFindKeep = (UFunction*) UObject::GObjObjects()->Data[ 46497 ];

	UClientViewModeKeepNpcPlace_execFindKeep_Parms FindKeep_Parms;

	this->ProcessEvent ( pFnFindKeep, &FindKeep_Parms, NULL );

	return FindKeep_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeKeepNpcPlace.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModeKeepNpcPlace::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46495 ];

	UClientViewModeKeepNpcPlace_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModeKeepNpcPlace.GetSlot
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UClientViewModeKeepNpcPlace::GetSlot ( )
{
	static UFunction* pFnGetSlot = NULL;

	if ( ! pFnGetSlot )
		pFnGetSlot = (UFunction*) UObject::GObjObjects()->Data[ 46493 ];

	UClientViewModeKeepNpcPlace_execGetSlot_Parms GetSlot_Parms;

	this->ProcessEvent ( pFnGetSlot, &GetSlot_Parms, NULL );

	return GetSlot_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeKeepNpcPlace.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeKeepNpcPlace::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = (UFunction*) UObject::GObjObjects()->Data[ 46490 ];

	UClientViewModeKeepNpcPlace_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewModePlace::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46653 ];

	UClientViewModePlace_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewModePlace.DrawDebugCylinder
// [0x00024002] 
// Parameters infos:
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 End                            ( CPF_Parm )
// float                          Radius                         ( CPF_Parm )
// int                            Segments                       ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UClientViewModePlace::DrawDebugCylinder ( struct FVector Start, struct FVector End, float Radius, int Segments, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawDebugCylinder = NULL;

	if ( ! pFnDrawDebugCylinder )
		pFnDrawDebugCylinder = (UFunction*) UObject::GObjObjects()->Data[ 46644 ];

	UClientViewModePlace_execDrawDebugCylinder_Parms DrawDebugCylinder_Parms;
	memcpy ( &DrawDebugCylinder_Parms.Start, &Start, 0xC );
	memcpy ( &DrawDebugCylinder_Parms.End, &End, 0xC );
	DrawDebugCylinder_Parms.Radius = Radius;
	DrawDebugCylinder_Parms.Segments = Segments;
	DrawDebugCylinder_Parms.R = R;
	DrawDebugCylinder_Parms.G = G;
	DrawDebugCylinder_Parms.B = B;
	DrawDebugCylinder_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawDebugCylinder, &DrawDebugCylinder_Parms, NULL );
};

// Function NowGame.ClientViewModePlace.DrawMoDebugLine
// [0x00024002] 
// Parameters infos:
// struct FVector                 LineStart                      ( CPF_Parm )
// struct FVector                 LineEnd                        ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UClientViewModePlace::DrawMoDebugLine ( struct FVector LineStart, struct FVector LineEnd, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawMoDebugLine = NULL;

	if ( ! pFnDrawMoDebugLine )
		pFnDrawMoDebugLine = (UFunction*) UObject::GObjObjects()->Data[ 46637 ];

	UClientViewModePlace_execDrawMoDebugLine_Parms DrawMoDebugLine_Parms;
	memcpy ( &DrawMoDebugLine_Parms.LineStart, &LineStart, 0xC );
	memcpy ( &DrawMoDebugLine_Parms.LineEnd, &LineEnd, 0xC );
	DrawMoDebugLine_Parms.R = R;
	DrawMoDebugLine_Parms.G = G;
	DrawMoDebugLine_Parms.B = B;
	DrawMoDebugLine_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawMoDebugLine, &DrawMoDebugLine_Parms, NULL );
};

// Function NowGame.ClientViewModePlace.VerifyPoint
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm )
// unsigned long                  bMessage                       ( CPF_Parm )

bool UClientViewModePlace::VerifyPoint ( struct FVector WhatPoint, unsigned long bMessage )
{
	static UFunction* pFnVerifyPoint = NULL;

	if ( ! pFnVerifyPoint )
		pFnVerifyPoint = (UFunction*) UObject::GObjObjects()->Data[ 46631 ];

	UClientViewModePlace_execVerifyPoint_Parms VerifyPoint_Parms;
	memcpy ( &VerifyPoint_Parms.WhatPoint, &WhatPoint, 0xC );
	VerifyPoint_Parms.bMessage = bMessage;

	this->ProcessEvent ( pFnVerifyPoint, &VerifyPoint_Parms, NULL );

	return VerifyPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.GroundPoint
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm | CPF_OutParm )

bool UClientViewModePlace::GroundPoint ( struct FVector* WhatPoint )
{
	static UFunction* pFnGroundPoint = NULL;

	if ( ! pFnGroundPoint )
		pFnGroundPoint = (UFunction*) UObject::GObjObjects()->Data[ 46621 ];

	UClientViewModePlace_execGroundPoint_Parms GroundPoint_Parms;

	this->ProcessEvent ( pFnGroundPoint, &GroundPoint_Parms, NULL );

	if ( WhatPoint )
		memcpy ( WhatPoint, &GroundPoint_Parms.WhatPoint, 0xC );

	return GroundPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.ResetPreviewMaterials
// [0x00020002] 
// Parameters infos:

void UClientViewModePlace::ResetPreviewMaterials ( )
{
	static UFunction* pFnResetPreviewMaterials = NULL;

	if ( ! pFnResetPreviewMaterials )
		pFnResetPreviewMaterials = (UFunction*) UObject::GObjObjects()->Data[ 46619 ];

	UClientViewModePlace_execResetPreviewMaterials_Parms ResetPreviewMaterials_Parms;

	this->ProcessEvent ( pFnResetPreviewMaterials, &ResetPreviewMaterials_Parms, NULL );
};

// Function NowGame.ClientViewModePlace.GetPlacePoint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UClientViewModePlace::GetPlacePoint ( )
{
	static UFunction* pFnGetPlacePoint = NULL;

	if ( ! pFnGetPlacePoint )
		pFnGetPlacePoint = (UFunction*) UObject::GObjObjects()->Data[ 46615 ];

	UClientViewModePlace_execGetPlacePoint_Parms GetPlacePoint_Parms;

	this->ProcessEvent ( pFnGetPlacePoint, &GetPlacePoint_Parms, NULL );

	return GetPlacePoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.CornerCheck
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm )

bool UClientViewModePlace::CornerCheck ( struct FVector WhatPoint )
{
	static UFunction* pFnCornerCheck = NULL;

	if ( ! pFnCornerCheck )
		pFnCornerCheck = (UFunction*) UObject::GObjObjects()->Data[ 46603 ];

	UClientViewModePlace_execCornerCheck_Parms CornerCheck_Parms;
	memcpy ( &CornerCheck_Parms.WhatPoint, &WhatPoint, 0xC );

	this->ProcessEvent ( pFnCornerCheck, &CornerCheck_Parms, NULL );

	return CornerCheck_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.CanPlaceAvatar
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModePlace::CanPlaceAvatar ( )
{
	static UFunction* pFnCanPlaceAvatar = NULL;

	if ( ! pFnCanPlaceAvatar )
		pFnCanPlaceAvatar = (UFunction*) UObject::GObjObjects()->Data[ 46601 ];

	UClientViewModePlace_execCanPlaceAvatar_Parms CanPlaceAvatar_Parms;

	this->ProcessEvent ( pFnCanPlaceAvatar, &CanPlaceAvatar_Parms, NULL );

	return CanPlaceAvatar_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModePlace::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46597 ];

	UClientViewModePlace_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModePlace.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModePlace::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46595 ];

	UClientViewModePlace_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModePlace.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModePlace::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = (UFunction*) UObject::GObjObjects()->Data[ 46592 ];

	UClientViewModePlace_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.InitPlaceMode
// [0x00020002] 
// Parameters infos:
// struct FString                 sContentInfo                   ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bPlaceInGuardZone              ( CPF_Parm )

void UClientViewModePlace::InitPlaceMode ( struct FString sContentInfo, unsigned long bPlaceInGuardZone )
{
	static UFunction* pFnInitPlaceMode = NULL;

	if ( ! pFnInitPlaceMode )
		pFnInitPlaceMode = (UFunction*) UObject::GObjObjects()->Data[ 46588 ];

	UClientViewModePlace_execInitPlaceMode_Parms InitPlaceMode_Parms;
	memcpy ( &InitPlaceMode_Parms.sContentInfo, &sContentInfo, 0xC );
	InitPlaceMode_Parms.bPlaceInGuardZone = bPlaceInGuardZone;

	this->ProcessEvent ( pFnInitPlaceMode, &InitPlaceMode_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewModePylonBuild::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46735 ];

	UClientViewModePylonBuild_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.DrawDebugCylinder
// [0x00024002] 
// Parameters infos:
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 End                            ( CPF_Parm )
// float                          Radius                         ( CPF_Parm )
// int                            Segments                       ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UClientViewModePylonBuild::DrawDebugCylinder ( struct FVector Start, struct FVector End, float Radius, int Segments, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawDebugCylinder = NULL;

	if ( ! pFnDrawDebugCylinder )
		pFnDrawDebugCylinder = (UFunction*) UObject::GObjObjects()->Data[ 46726 ];

	UClientViewModePylonBuild_execDrawDebugCylinder_Parms DrawDebugCylinder_Parms;
	memcpy ( &DrawDebugCylinder_Parms.Start, &Start, 0xC );
	memcpy ( &DrawDebugCylinder_Parms.End, &End, 0xC );
	DrawDebugCylinder_Parms.Radius = Radius;
	DrawDebugCylinder_Parms.Segments = Segments;
	DrawDebugCylinder_Parms.R = R;
	DrawDebugCylinder_Parms.G = G;
	DrawDebugCylinder_Parms.B = B;
	DrawDebugCylinder_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawDebugCylinder, &DrawDebugCylinder_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.DrawMoDebugLine
// [0x00024002] 
// Parameters infos:
// struct FVector                 LineStart                      ( CPF_Parm )
// struct FVector                 LineEnd                        ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UClientViewModePylonBuild::DrawMoDebugLine ( struct FVector LineStart, struct FVector LineEnd, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawMoDebugLine = NULL;

	if ( ! pFnDrawMoDebugLine )
		pFnDrawMoDebugLine = (UFunction*) UObject::GObjObjects()->Data[ 46719 ];

	UClientViewModePylonBuild_execDrawMoDebugLine_Parms DrawMoDebugLine_Parms;
	memcpy ( &DrawMoDebugLine_Parms.LineStart, &LineStart, 0xC );
	memcpy ( &DrawMoDebugLine_Parms.LineEnd, &LineEnd, 0xC );
	DrawMoDebugLine_Parms.R = R;
	DrawMoDebugLine_Parms.G = G;
	DrawMoDebugLine_Parms.B = B;
	DrawMoDebugLine_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawMoDebugLine, &DrawMoDebugLine_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.VerifyPoint
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm )
// unsigned long                  bMessage                       ( CPF_Parm )

bool UClientViewModePylonBuild::VerifyPoint ( struct FVector WhatPoint, unsigned long bMessage )
{
	static UFunction* pFnVerifyPoint = NULL;

	if ( ! pFnVerifyPoint )
		pFnVerifyPoint = (UFunction*) UObject::GObjObjects()->Data[ 46709 ];

	UClientViewModePylonBuild_execVerifyPoint_Parms VerifyPoint_Parms;
	memcpy ( &VerifyPoint_Parms.WhatPoint, &WhatPoint, 0xC );
	VerifyPoint_Parms.bMessage = bMessage;

	this->ProcessEvent ( pFnVerifyPoint, &VerifyPoint_Parms, NULL );

	return VerifyPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonBuild.GroundPoint
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm | CPF_OutParm )

bool UClientViewModePylonBuild::GroundPoint ( struct FVector* WhatPoint )
{
	static UFunction* pFnGroundPoint = NULL;

	if ( ! pFnGroundPoint )
		pFnGroundPoint = (UFunction*) UObject::GObjObjects()->Data[ 46700 ];

	UClientViewModePylonBuild_execGroundPoint_Parms GroundPoint_Parms;

	this->ProcessEvent ( pFnGroundPoint, &GroundPoint_Parms, NULL );

	if ( WhatPoint )
		memcpy ( WhatPoint, &GroundPoint_Parms.WhatPoint, 0xC );

	return GroundPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonBuild.ResetPreviewMaterials
// [0x00020002] 
// Parameters infos:

void UClientViewModePylonBuild::ResetPreviewMaterials ( )
{
	static UFunction* pFnResetPreviewMaterials = NULL;

	if ( ! pFnResetPreviewMaterials )
		pFnResetPreviewMaterials = (UFunction*) UObject::GObjObjects()->Data[ 46697 ];

	UClientViewModePylonBuild_execResetPreviewMaterials_Parms ResetPreviewMaterials_Parms;

	this->ProcessEvent ( pFnResetPreviewMaterials, &ResetPreviewMaterials_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.GetPlacePoint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UClientViewModePylonBuild::GetPlacePoint ( )
{
	static UFunction* pFnGetPlacePoint = NULL;

	if ( ! pFnGetPlacePoint )
		pFnGetPlacePoint = (UFunction*) UObject::GObjObjects()->Data[ 46693 ];

	UClientViewModePylonBuild_execGetPlacePoint_Parms GetPlacePoint_Parms;

	this->ProcessEvent ( pFnGetPlacePoint, &GetPlacePoint_Parms, NULL );

	return GetPlacePoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonBuild.CornerCheck
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm )

bool UClientViewModePylonBuild::CornerCheck ( struct FVector WhatPoint )
{
	static UFunction* pFnCornerCheck = NULL;

	if ( ! pFnCornerCheck )
		pFnCornerCheck = (UFunction*) UObject::GObjObjects()->Data[ 46681 ];

	UClientViewModePylonBuild_execCornerCheck_Parms CornerCheck_Parms;
	memcpy ( &CornerCheck_Parms.WhatPoint, &WhatPoint, 0xC );

	this->ProcessEvent ( pFnCornerCheck, &CornerCheck_Parms, NULL );

	return CornerCheck_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonBuild.UpdatePylonHelpers
// [0x00820002] 
// Parameters infos:

void UClientViewModePylonBuild::UpdatePylonHelpers ( )
{
	static UFunction* pFnUpdatePylonHelpers = NULL;

	if ( ! pFnUpdatePylonHelpers )
		pFnUpdatePylonHelpers = (UFunction*) UObject::GObjObjects()->Data[ 46676 ];

	UClientViewModePylonBuild_execUpdatePylonHelpers_Parms UpdatePylonHelpers_Parms;

	this->ProcessEvent ( pFnUpdatePylonHelpers, &UpdatePylonHelpers_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.CanPlacePylon
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModePylonBuild::CanPlacePylon ( )
{
	static UFunction* pFnCanPlacePylon = NULL;

	if ( ! pFnCanPlacePylon )
		pFnCanPlacePylon = (UFunction*) UObject::GObjObjects()->Data[ 46674 ];

	UClientViewModePylonBuild_execCanPlacePylon_Parms CanPlacePylon_Parms;

	this->ProcessEvent ( pFnCanPlacePylon, &CanPlacePylon_Parms, NULL );

	return CanPlacePylon_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonBuild.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModePylonBuild::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46671 ];

	UClientViewModePylonBuild_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.ShowLinkMeshes
// [0x00020000] 
// Parameters infos:

void UClientViewModePylonBuild::ShowLinkMeshes ( )
{
	static UFunction* pFnShowLinkMeshes = NULL;

	if ( ! pFnShowLinkMeshes )
		pFnShowLinkMeshes = (UFunction*) UObject::GObjObjects()->Data[ 46670 ];

	UClientViewModePylonBuild_execShowLinkMeshes_Parms ShowLinkMeshes_Parms;

	this->ProcessEvent ( pFnShowLinkMeshes, &ShowLinkMeshes_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.InitPylonInfo
// [0x00020002] 
// Parameters infos:

void UClientViewModePylonBuild::InitPylonInfo ( )
{
	static UFunction* pFnInitPylonInfo = NULL;

	if ( ! pFnInitPylonInfo )
		pFnInitPylonInfo = (UFunction*) UObject::GObjObjects()->Data[ 46669 ];

	UClientViewModePylonBuild_execInitPylonInfo_Parms InitPylonInfo_Parms;

	this->ProcessEvent ( pFnInitPylonInfo, &InitPylonInfo_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModePylonBuild::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46666 ];

	UClientViewModePylonBuild_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModePylonBuild::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = (UFunction*) UObject::GObjObjects()->Data[ 46663 ];

	UClientViewModePylonBuild_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonUpgrade.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewModePylonUpgrade::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46765 ];

	UClientViewModePylonUpgrade_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewModePylonUpgrade.GetSlot
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UClientViewModePylonUpgrade::GetSlot ( )
{
	static UFunction* pFnGetSlot = NULL;

	if ( ! pFnGetSlot )
		pFnGetSlot = (UFunction*) UObject::GObjObjects()->Data[ 46763 ];

	UClientViewModePylonUpgrade_execGetSlot_Parms GetSlot_Parms;

	this->ProcessEvent ( pFnGetSlot, &GetSlot_Parms, NULL );

	return GetSlot_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonUpgrade.UpdateSelected
// [0x00020002] 
// Parameters infos:

void UClientViewModePylonUpgrade::UpdateSelected ( )
{
	static UFunction* pFnUpdateSelected = NULL;

	if ( ! pFnUpdateSelected )
		pFnUpdateSelected = (UFunction*) UObject::GObjObjects()->Data[ 46758 ];

	UClientViewModePylonUpgrade_execUpdateSelected_Parms UpdateSelected_Parms;

	this->ProcessEvent ( pFnUpdateSelected, &UpdateSelected_Parms, NULL );
};

// Function NowGame.ClientViewModePylonUpgrade.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModePylonUpgrade::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46756 ];

	UClientViewModePylonUpgrade_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModePylonUpgrade.CreatePreviewMesh
// [0x00820002] 
// Parameters infos:

void UClientViewModePylonUpgrade::CreatePreviewMesh ( )
{
	static UFunction* pFnCreatePreviewMesh = NULL;

	if ( ! pFnCreatePreviewMesh )
		pFnCreatePreviewMesh = (UFunction*) UObject::GObjObjects()->Data[ 46750 ];

	UClientViewModePylonUpgrade_execCreatePreviewMesh_Parms CreatePreviewMesh_Parms;

	this->ProcessEvent ( pFnCreatePreviewMesh, &CreatePreviewMesh_Parms, NULL );
};

// Function NowGame.ClientViewModePylonUpgrade.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModePylonUpgrade::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46748 ];

	UClientViewModePylonUpgrade_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModePylonUpgrade.GetPylonActor
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPylon*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPylon* UClientViewModePylonUpgrade::GetPylonActor ( )
{
	static UFunction* pFnGetPylonActor = NULL;

	if ( ! pFnGetPylonActor )
		pFnGetPylonActor = (UFunction*) UObject::GObjObjects()->Data[ 46746 ];

	UClientViewModePylonUpgrade_execGetPylonActor_Parms GetPylonActor_Parms;

	this->ProcessEvent ( pFnGetPylonActor, &GetPylonActor_Parms, NULL );

	return GetPylonActor_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonUpgrade.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModePylonUpgrade::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = (UFunction*) UObject::GObjObjects()->Data[ 46743 ];

	UClientViewModePylonUpgrade_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeTrailerCameraMode.Escape
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeTrailerCameraMode::Escape ( )
{
	static UFunction* pFnEscape = NULL;

	if ( ! pFnEscape )
		pFnEscape = (UFunction*) UObject::GObjObjects()->Data[ 46826 ];

	UClientViewModeTrailerCameraMode_execEscape_Parms Escape_Parms;

	this->ProcessEvent ( pFnEscape, &Escape_Parms, NULL );

	return Escape_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeTrailerCameraMode.RightClick
// [0x00020002] 
// Parameters infos:

void UClientViewModeTrailerCameraMode::RightClick ( )
{
	static UFunction* pFnRightClick = NULL;

	if ( ! pFnRightClick )
		pFnRightClick = (UFunction*) UObject::GObjObjects()->Data[ 46824 ];

	UClientViewModeTrailerCameraMode_execRightClick_Parms RightClick_Parms;

	this->ProcessEvent ( pFnRightClick, &RightClick_Parms, NULL );
};

// Function NowGame.ClientViewModeTrailerCameraMode.LeftClick
// [0x00020002] 
// Parameters infos:

void UClientViewModeTrailerCameraMode::LeftClick ( )
{
	static UFunction* pFnLeftClick = NULL;

	if ( ! pFnLeftClick )
		pFnLeftClick = (UFunction*) UObject::GObjObjects()->Data[ 46823 ];

	UClientViewModeTrailerCameraMode_execLeftClick_Parms LeftClick_Parms;

	this->ProcessEvent ( pFnLeftClick, &LeftClick_Parms, NULL );
};

// Function NowGame.ClientViewModeTrailerCameraMode.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeTrailerCameraMode::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = (UFunction*) UObject::GObjObjects()->Data[ 46821 ];

	UClientViewModeTrailerCameraMode_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeTrailerCameraMode.StartAnim
// [0x00820002] 
// Parameters infos:

void UClientViewModeTrailerCameraMode::StartAnim ( )
{
	static UFunction* pFnStartAnim = NULL;

	if ( ! pFnStartAnim )
		pFnStartAnim = (UFunction*) UObject::GObjObjects()->Data[ 46819 ];

	UClientViewModeTrailerCameraMode_execStartAnim_Parms StartAnim_Parms;

	this->ProcessEvent ( pFnStartAnim, &StartAnim_Parms, NULL );
};

// Function NowGame.ClientViewModeTrailerCameraMode.RemoveViewmode
// [0x00020002] 
// Parameters infos:

void UClientViewModeTrailerCameraMode::RemoveViewmode ( )
{
	static UFunction* pFnRemoveViewmode = NULL;

	if ( ! pFnRemoveViewmode )
		pFnRemoveViewmode = (UFunction*) UObject::GObjObjects()->Data[ 46817 ];

	UClientViewModeTrailerCameraMode_execRemoveViewmode_Parms RemoveViewmode_Parms;

	this->ProcessEvent ( pFnRemoveViewmode, &RemoveViewmode_Parms, NULL );
};

// Function NowGame.ClientViewModeTrailerCameraMode.CanvasTick
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UClientViewModeTrailerCameraMode::CanvasTick ( class UCanvas* C )
{
	static UFunction* pFnCanvasTick = NULL;

	if ( ! pFnCanvasTick )
		pFnCanvasTick = (UFunction*) UObject::GObjObjects()->Data[ 46815 ];

	UClientViewModeTrailerCameraMode_execCanvasTick_Parms CanvasTick_Parms;
	CanvasTick_Parms.C = C;

	this->ProcessEvent ( pFnCanvasTick, &CanvasTick_Parms, NULL );
};

// Function NowGame.ClientViewModeTrailerCameraMode.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModeTrailerCameraMode::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46809 ];

	UClientViewModeTrailerCameraMode_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModeTrailerCameraMode.CalcTotalDist
// [0x00020002] 
// Parameters infos:

void UClientViewModeTrailerCameraMode::CalcTotalDist ( )
{
	static UFunction* pFnCalcTotalDist = NULL;

	if ( ! pFnCalcTotalDist )
		pFnCalcTotalDist = (UFunction*) UObject::GObjObjects()->Data[ 46807 ];

	UClientViewModeTrailerCameraMode_execCalcTotalDist_Parms CalcTotalDist_Parms;

	this->ProcessEvent ( pFnCalcTotalDist, &CalcTotalDist_Parms, NULL );
};

// Function NowGame.ClientViewModeTrailerCameraMode.SetCameraSaveString
// [0x00820002] 
// Parameters infos:
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

void UClientViewModeTrailerCameraMode::SetCameraSaveString ( struct FString sString )
{
	static UFunction* pFnSetCameraSaveString = NULL;

	if ( ! pFnSetCameraSaveString )
		pFnSetCameraSaveString = (UFunction*) UObject::GObjObjects()->Data[ 46799 ];

	UClientViewModeTrailerCameraMode_execSetCameraSaveString_Parms SetCameraSaveString_Parms;
	memcpy ( &SetCameraSaveString_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnSetCameraSaveString, &SetCameraSaveString_Parms, NULL );
};

// Function NowGame.ClientViewModeTrailerCameraMode.GetCameraSaveString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UClientViewModeTrailerCameraMode::GetCameraSaveString ( )
{
	static UFunction* pFnGetCameraSaveString = NULL;

	if ( ! pFnGetCameraSaveString )
		pFnGetCameraSaveString = (UFunction*) UObject::GObjObjects()->Data[ 46795 ];

	UClientViewModeTrailerCameraMode_execGetCameraSaveString_Parms GetCameraSaveString_Parms;

	this->ProcessEvent ( pFnGetCameraSaveString, &GetCameraSaveString_Parms, NULL );

	return GetCameraSaveString_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeTrailerCameraMode.AddCameraPos
// [0x00020002] 
// Parameters infos:

void UClientViewModeTrailerCameraMode::AddCameraPos ( )
{
	static UFunction* pFnAddCameraPos = NULL;

	if ( ! pFnAddCameraPos )
		pFnAddCameraPos = (UFunction*) UObject::GObjObjects()->Data[ 46790 ];

	UClientViewModeTrailerCameraMode_execAddCameraPos_Parms AddCameraPos_Parms;

	this->ProcessEvent ( pFnAddCameraPos, &AddCameraPos_Parms, NULL );
};

// Function NowGame.ClientViewModeTrailerCameraMode.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModeTrailerCameraMode::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 46788 ];

	UClientViewModeTrailerCameraMode_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.DeathFX.SetRagdollStats
// [0x00020002] 
// Parameters infos:

void UDeathFX::SetRagdollStats ( )
{
	static UFunction* pFnSetRagdollStats = NULL;

	if ( ! pFnSetRagdollStats )
		pFnSetRagdollStats = (UFunction*) UObject::GObjObjects()->Data[ 47797 ];

	UDeathFX_execSetRagdollStats_Parms SetRagdollStats_Parms;

	this->ProcessEvent ( pFnSetRagdollStats, &SetRagdollStats_Parms, NULL );
};

// Function NowGame.DeathFX.AddParticleEffects
// [0x00020002] 
// Parameters infos:

void UDeathFX::AddParticleEffects ( )
{
	static UFunction* pFnAddParticleEffects = NULL;

	if ( ! pFnAddParticleEffects )
		pFnAddParticleEffects = (UFunction*) UObject::GObjObjects()->Data[ 47794 ];

	UDeathFX_execAddParticleEffects_Parms AddParticleEffects_Parms;

	this->ProcessEvent ( pFnAddParticleEffects, &AddParticleEffects_Parms, NULL );
};

// Function NowGame.DeathFX.SetCorpseMaterials
// [0x00020002] 
// Parameters infos:

void UDeathFX::SetCorpseMaterials ( )
{
	static UFunction* pFnSetCorpseMaterials = NULL;

	if ( ! pFnSetCorpseMaterials )
		pFnSetCorpseMaterials = (UFunction*) UObject::GObjObjects()->Data[ 47789 ];

	UDeathFX_execSetCorpseMaterials_Parms SetCorpseMaterials_Parms;

	this->ProcessEvent ( pFnSetCorpseMaterials, &SetCorpseMaterials_Parms, NULL );
};

// Function NowGame.DeathFX.StartEffect
// [0x00020002] 
// Parameters infos:
// class ANowCorpse*              pNewCorpse                     ( CPF_Parm )

void UDeathFX::StartEffect ( class ANowCorpse* pNewCorpse )
{
	static UFunction* pFnStartEffect = NULL;

	if ( ! pFnStartEffect )
		pFnStartEffect = (UFunction*) UObject::GObjObjects()->Data[ 47787 ];

	UDeathFX_execStartEffect_Parms StartEffect_Parms;
	StartEffect_Parms.pNewCorpse = pNewCorpse;

	this->ProcessEvent ( pFnStartEffect, &StartEffect_Parms, NULL );
};

// Function NowGame.NowCorpse.AiGibLimb
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            iLimb                          ( CPF_Parm )
// class ANowAtlasAvatarAi*       pOwner                         ( CPF_Parm )

void ANowCorpse::eventAiGibLimb ( int iLimb, class ANowAtlasAvatarAi* pOwner )
{
	static UFunction* pFnAiGibLimb = NULL;

	if ( ! pFnAiGibLimb )
		pFnAiGibLimb = (UFunction*) UObject::GObjObjects()->Data[ 52525 ];

	ANowCorpse_eventAiGibLimb_Parms AiGibLimb_Parms;
	AiGibLimb_Parms.iLimb = iLimb;
	AiGibLimb_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnAiGibLimb, &AiGibLimb_Parms, NULL );
};

// Function NowGame.NowCorpse.LeaveADecal
// [0x00824102] 
// Parameters infos:
// struct FVector                 HitLoc                         ( CPF_Parm )
// struct FVector                 HitNorm                        ( CPF_Parm )
// unsigned long                  bSmall                         ( CPF_OptionalParm | CPF_Parm )

void ANowCorpse::LeaveADecal ( struct FVector HitLoc, struct FVector HitNorm, unsigned long bSmall )
{
	static UFunction* pFnLeaveADecal = NULL;

	if ( ! pFnLeaveADecal )
		pFnLeaveADecal = (UFunction*) UObject::GObjObjects()->Data[ 52512 ];

	ANowCorpse_execLeaveADecal_Parms LeaveADecal_Parms;
	memcpy ( &LeaveADecal_Parms.HitLoc, &HitLoc, 0xC );
	memcpy ( &LeaveADecal_Parms.HitNorm, &HitNorm, 0xC );
	LeaveADecal_Parms.bSmall = bSmall;

	this->ProcessEvent ( pFnLeaveADecal, &LeaveADecal_Parms, NULL );
};

// Function NowGame.NowCorpse.AddDecal
// [0x00824002] 
// Parameters infos:
// struct FVector                 StartPos                       ( CPF_Parm )
// unsigned long                  bSmall                         ( CPF_OptionalParm | CPF_Parm )

void ANowCorpse::AddDecal ( struct FVector StartPos, unsigned long bSmall )
{
	static UFunction* pFnAddDecal = NULL;

	if ( ! pFnAddDecal )
		pFnAddDecal = (UFunction*) UObject::GObjObjects()->Data[ 52502 ];

	ANowCorpse_execAddDecal_Parms AddDecal_Parms;
	memcpy ( &AddDecal_Parms.StartPos, &StartPos, 0xC );
	AddDecal_Parms.bSmall = bSmall;

	this->ProcessEvent ( pFnAddDecal, &AddDecal_Parms, NULL );
};

// Function NowGame.NowCorpse.SpawnLimbMesh
// [0x00020002] 
// Parameters infos:
// int                            WhatIndex                      ( CPF_Parm )
// class AActor*                  WhatActor                      ( CPF_Parm )

void ANowCorpse::SpawnLimbMesh ( int WhatIndex, class AActor* WhatActor )
{
	static UFunction* pFnSpawnLimbMesh = NULL;

	if ( ! pFnSpawnLimbMesh )
		pFnSpawnLimbMesh = (UFunction*) UObject::GObjObjects()->Data[ 52496 ];

	ANowCorpse_execSpawnLimbMesh_Parms SpawnLimbMesh_Parms;
	SpawnLimbMesh_Parms.WhatIndex = WhatIndex;
	SpawnLimbMesh_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnSpawnLimbMesh, &SpawnLimbMesh_Parms, NULL );
};

// Function NowGame.NowCorpse.SpawnBloodPS
// [0x00820002] 
// Parameters infos:
// int                            WhatIndex                      ( CPF_Parm )
// class AActor*                  WhatActor                      ( CPF_Parm )

void ANowCorpse::SpawnBloodPS ( int WhatIndex, class AActor* WhatActor )
{
	static UFunction* pFnSpawnBloodPS = NULL;

	if ( ! pFnSpawnBloodPS )
		pFnSpawnBloodPS = (UFunction*) UObject::GObjObjects()->Data[ 52489 ];

	ANowCorpse_execSpawnBloodPS_Parms SpawnBloodPS_Parms;
	SpawnBloodPS_Parms.WhatIndex = WhatIndex;
	SpawnBloodPS_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnSpawnBloodPS, &SpawnBloodPS_Parms, NULL );
};

// Function NowGame.NowCorpse.RemoveLimb
// [0x00020002] 
// Parameters infos:
// int                            WhatIndex                      ( CPF_Parm )
// class AActor*                  WhatActor                      ( CPF_Parm )

void ANowCorpse::RemoveLimb ( int WhatIndex, class AActor* WhatActor )
{
	static UFunction* pFnRemoveLimb = NULL;

	if ( ! pFnRemoveLimb )
		pFnRemoveLimb = (UFunction*) UObject::GObjObjects()->Data[ 52483 ];

	ANowCorpse_execRemoveLimb_Parms RemoveLimb_Parms;
	RemoveLimb_Parms.WhatIndex = WhatIndex;
	RemoveLimb_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnRemoveLimb, &RemoveLimb_Parms, NULL );
};

// Function NowGame.NowCorpse.GetFinalBlowImpulse
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  MyActor                        ( CPF_Parm )
// struct FVector                 LastHitPos                     ( CPF_Parm )
// struct FVector                 AddVelocity                    ( CPF_Parm )
// float                          LastDmg                        ( CPF_Parm )

struct FVector ANowCorpse::GetFinalBlowImpulse ( class AActor* MyActor, struct FVector LastHitPos, struct FVector AddVelocity, float LastDmg )
{
	static UFunction* pFnGetFinalBlowImpulse = NULL;

	if ( ! pFnGetFinalBlowImpulse )
		pFnGetFinalBlowImpulse = (UFunction*) UObject::GObjObjects()->Data[ 52470 ];

	ANowCorpse_execGetFinalBlowImpulse_Parms GetFinalBlowImpulse_Parms;
	GetFinalBlowImpulse_Parms.MyActor = MyActor;
	memcpy ( &GetFinalBlowImpulse_Parms.LastHitPos, &LastHitPos, 0xC );
	memcpy ( &GetFinalBlowImpulse_Parms.AddVelocity, &AddVelocity, 0xC );
	GetFinalBlowImpulse_Parms.LastDmg = LastDmg;

	this->ProcessEvent ( pFnGetFinalBlowImpulse, &GetFinalBlowImpulse_Parms, NULL );

	return GetFinalBlowImpulse_Parms.ReturnValue;
};

// Function NowGame.NowCorpse.TurnOnCollision
// [0x00020102] 
// Parameters infos:

void ANowCorpse::TurnOnCollision ( )
{
	static UFunction* pFnTurnOnCollision = NULL;

	if ( ! pFnTurnOnCollision )
		pFnTurnOnCollision = (UFunction*) UObject::GObjObjects()->Data[ 52469 ];

	ANowCorpse_execTurnOnCollision_Parms TurnOnCollision_Parms;

	this->ProcessEvent ( pFnTurnOnCollision, &TurnOnCollision_Parms, NULL );
};

// Function NowGame.NowCorpse.RigidBodyCollision
// [0x00C20902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ANowCorpse::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 52462 ];

	ANowCorpse_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x24 );
};

// Function NowGame.NowCorpse.CheckForGibs
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WhatHitBone                    ( CPF_Parm )
// class AActor*                  WhatActor                      ( CPF_Parm )

bool ANowCorpse::CheckForGibs ( struct FName WhatHitBone, class AActor* WhatActor )
{
	static UFunction* pFnCheckForGibs = NULL;

	if ( ! pFnCheckForGibs )
		pFnCheckForGibs = (UFunction*) UObject::GObjObjects()->Data[ 52452 ];

	ANowCorpse_execCheckForGibs_Parms CheckForGibs_Parms;
	memcpy ( &CheckForGibs_Parms.WhatHitBone, &WhatHitBone, 0x8 );
	CheckForGibs_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnCheckForGibs, &CheckForGibs_Parms, NULL );

	return CheckForGibs_Parms.ReturnValue;
};

// Function NowGame.NowCorpse.GrabMaterials
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatar*         WhatActor                      ( CPF_Parm )

void ANowCorpse::GrabMaterials ( class ANowAtlasAvatar* WhatActor )
{
	static UFunction* pFnGrabMaterials = NULL;

	if ( ! pFnGrabMaterials )
		pFnGrabMaterials = (UFunction*) UObject::GObjObjects()->Data[ 52449 ];

	ANowCorpse_execGrabMaterials_Parms GrabMaterials_Parms;
	GrabMaterials_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnGrabMaterials, &GrabMaterials_Parms, NULL );
};

// Function NowGame.NowCorpse.GiveMeRandomBoneName
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPhysicsAsset*           TestPhys                       ( CPF_Parm )

struct FName ANowCorpse::GiveMeRandomBoneName ( class UPhysicsAsset* TestPhys )
{
	static UFunction* pFnGiveMeRandomBoneName = NULL;

	if ( ! pFnGiveMeRandomBoneName )
		pFnGiveMeRandomBoneName = (UFunction*) UObject::GObjObjects()->Data[ 47795 ];

	ANowCorpse_execGiveMeRandomBoneName_Parms GiveMeRandomBoneName_Parms;
	GiveMeRandomBoneName_Parms.TestPhys = TestPhys;

	this->ProcessEvent ( pFnGiveMeRandomBoneName, &GiveMeRandomBoneName_Parms, NULL );

	return GiveMeRandomBoneName_Parms.ReturnValue;
};

// Function NowGame.NowCorpse.TouchingWaterVolume
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pOwner                         ( CPF_Parm )

bool ANowCorpse::TouchingWaterVolume ( class AActor* pOwner )
{
	static UFunction* pFnTouchingWaterVolume = NULL;

	if ( ! pFnTouchingWaterVolume )
		pFnTouchingWaterVolume = (UFunction*) UObject::GObjObjects()->Data[ 52444 ];

	ANowCorpse_execTouchingWaterVolume_Parms TouchingWaterVolume_Parms;
	TouchingWaterVolume_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnTouchingWaterVolume, &TouchingWaterVolume_Parms, NULL );

	return TouchingWaterVolume_Parms.ReturnValue;
};

// Function NowGame.NowCorpse.StartCorpse
// [0x00824002] 
// Parameters infos:
// class AActor*                  FromActor                      ( CPF_Parm )
// struct FName                   lastHitBoneName                ( CPF_Parm )
// struct FVector                 AddVelocity                    ( CPF_OptionalParm | CPF_Parm )
// float                          LastDmg                        ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )

void ANowCorpse::StartCorpse ( class AActor* FromActor, struct FName lastHitBoneName, struct FVector AddVelocity, float LastDmg, unsigned long bFromMercyMode )
{
	static UFunction* pFnStartCorpse = NULL;

	if ( ! pFnStartCorpse )
		pFnStartCorpse = (UFunction*) UObject::GObjObjects()->Data[ 52426 ];

	ANowCorpse_execStartCorpse_Parms StartCorpse_Parms;
	StartCorpse_Parms.FromActor = FromActor;
	memcpy ( &StartCorpse_Parms.lastHitBoneName, &lastHitBoneName, 0x8 );
	memcpy ( &StartCorpse_Parms.AddVelocity, &AddVelocity, 0xC );
	StartCorpse_Parms.LastDmg = LastDmg;
	StartCorpse_Parms.bFromMercyMode = bFromMercyMode;

	this->ProcessEvent ( pFnStartCorpse, &StartCorpse_Parms, NULL );
};

// Function NowGame.NowCorpse.FullGibCorpse
// [0x00820002] 
// Parameters infos:
// class AActor*                  FromActor                      ( CPF_Parm )

void ANowCorpse::FullGibCorpse ( class AActor* FromActor )
{
	static UFunction* pFnFullGibCorpse = NULL;

	if ( ! pFnFullGibCorpse )
		pFnFullGibCorpse = (UFunction*) UObject::GObjObjects()->Data[ 52414 ];

	ANowCorpse_execFullGibCorpse_Parms FullGibCorpse_Parms;
	FullGibCorpse_Parms.FromActor = FromActor;

	this->ProcessEvent ( pFnFullGibCorpse, &FullGibCorpse_Parms, NULL );
};

// Function NowGame.NowCorpse.SetDeathEffect
// [0x00020002] 
// Parameters infos:
// struct FString                 sDeathEffect                   ( CPF_Parm | CPF_NeedCtorLink )

void ANowCorpse::SetDeathEffect ( struct FString sDeathEffect )
{
	static UFunction* pFnSetDeathEffect = NULL;

	if ( ! pFnSetDeathEffect )
		pFnSetDeathEffect = (UFunction*) UObject::GObjObjects()->Data[ 52410 ];

	ANowCorpse_execSetDeathEffect_Parms SetDeathEffect_Parms;
	memcpy ( &SetDeathEffect_Parms.sDeathEffect, &sDeathEffect, 0xC );

	this->ProcessEvent ( pFnSetDeathEffect, &SetDeathEffect_Parms, NULL );
};

// Function NowGame.NowCorpse.Tick
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowCorpse::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 52407 ];

	ANowCorpse_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowGFXSceneLoading.startHints
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneLoading::startHints ( )
{
	static UFunction* pFnstartHints = NULL;

	if ( ! pFnstartHints )
		pFnstartHints = (UFunction*) UObject::GObjObjects()->Data[ 56086 ];

	UNowGFXSceneLoading_execstartHints_Parms startHints_Parms;

	this->ProcessEvent ( pFnstartHints, &startHints_Parms, NULL );
};

// Function NowGame.NowGFXSceneLoading.setProgress
// [0x00020002] 
// Parameters infos:
// int                            Percent                        ( CPF_Parm )
// unsigned long                  skipTween                      ( CPF_Parm )

void UNowGFXSceneLoading::setProgress ( int Percent, unsigned long skipTween )
{
	static UFunction* pFnsetProgress = NULL;

	if ( ! pFnsetProgress )
		pFnsetProgress = (UFunction*) UObject::GObjObjects()->Data[ 56083 ];

	UNowGFXSceneLoading_execsetProgress_Parms setProgress_Parms;
	setProgress_Parms.Percent = Percent;
	setProgress_Parms.skipTween = skipTween;

	this->ProcessEvent ( pFnsetProgress, &setProgress_Parms, NULL );
};

// Function NowGame.NowGFXSceneLoading.addHint
// [0x00020002] 
// Parameters infos:
// struct FString                 hint                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneLoading::addHint ( struct FString hint )
{
	static UFunction* pFnaddHint = NULL;

	if ( ! pFnaddHint )
		pFnaddHint = (UFunction*) UObject::GObjObjects()->Data[ 56081 ];

	UNowGFXSceneLoading_execaddHint_Parms addHint_Parms;
	memcpy ( &addHint_Parms.hint, &hint, 0xC );

	this->ProcessEvent ( pFnaddHint, &addHint_Parms, NULL );
};

// Function NowGame.NowGFXSceneLoading.InitGFXScene
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneLoading::InitGFXScene ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInitGFXScene = NULL;

	if ( ! pFnInitGFXScene )
		pFnInitGFXScene = (UFunction*) UObject::GObjObjects()->Data[ 56077 ];

	UNowGFXSceneLoading_execInitGFXScene_Parms InitGFXScene_Parms;
	InitGFXScene_Parms.Player = Player;
	InitGFXScene_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInitGFXScene, &InitGFXScene_Parms, NULL );
};

// Function NowGame.MagicMeshFXFireArrow.RemoveEffect
// [0x00020002] 
// Parameters infos:

void UMagicMeshFXFireArrow::RemoveEffect ( )
{
	static UFunction* pFnRemoveEffect = NULL;

	if ( ! pFnRemoveEffect )
		pFnRemoveEffect = (UFunction*) UObject::GObjObjects()->Data[ 47897 ];

	UMagicMeshFXFireArrow_execRemoveEffect_Parms RemoveEffect_Parms;

	this->ProcessEvent ( pFnRemoveEffect, &RemoveEffect_Parms, NULL );
};

// Function NowGame.MagicMeshFXFireArrow.HandleStacking
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UMagicMeshFXFireArrow::HandleStacking ( )
{
	static UFunction* pFnHandleStacking = NULL;

	if ( ! pFnHandleStacking )
		pFnHandleStacking = (UFunction*) UObject::GObjObjects()->Data[ 47895 ];

	UMagicMeshFXFireArrow_execHandleStacking_Parms HandleStacking_Parms;

	this->ProcessEvent ( pFnHandleStacking, &HandleStacking_Parms, NULL );

	return HandleStacking_Parms.ReturnValue;
};

// Function NowGame.MagicMeshFXFireArrow.AddParticleEffects
// [0x00020002] 
// Parameters infos:

void UMagicMeshFXFireArrow::AddParticleEffects ( )
{
	static UFunction* pFnAddParticleEffects = NULL;

	if ( ! pFnAddParticleEffects )
		pFnAddParticleEffects = (UFunction*) UObject::GObjObjects()->Data[ 47892 ];

	UMagicMeshFXFireArrow_execAddParticleEffects_Parms AddParticleEffects_Parms;

	this->ProcessEvent ( pFnAddParticleEffects, &AddParticleEffects_Parms, NULL );
};

// Function NowGame.MortalAvatarManager.Tick
// [0x00020002] 
// Parameters infos:

void UMortalAvatarManager::Tick ( )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 47965 ];

	UMortalAvatarManager_execTick_Parms Tick_Parms;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.MortalAvatarManager.MoveToGround
// [0x00820002] 
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )

void UMortalAvatarManager::MoveToGround ( class AActor* A )
{
	static UFunction* pFnMoveToGround = NULL;

	if ( ! pFnMoveToGround )
		pFnMoveToGround = (UFunction*) UObject::GObjObjects()->Data[ 47955 ];

	UMortalAvatarManager_execMoveToGround_Parms MoveToGround_Parms;
	MoveToGround_Parms.A = A;

	this->ProcessEvent ( pFnMoveToGround, &MoveToGround_Parms, NULL );
};

// Function NowGame.MortalAvatarManager.RemoveActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )

void UMortalAvatarManager::RemoveActor ( class AActor* A )
{
	static UFunction* pFnRemoveActor = NULL;

	if ( ! pFnRemoveActor )
		pFnRemoveActor = (UFunction*) UObject::GObjObjects()->Data[ 47953 ];

	UMortalAvatarManager_execRemoveActor_Parms RemoveActor_Parms;
	RemoveActor_Parms.A = A;

	this->ProcessEvent ( pFnRemoveActor, &RemoveActor_Parms, NULL );
};

// Function NowGame.MortalAvatarManager.AddActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )

void UMortalAvatarManager::AddActor ( class AActor* A )
{
	static UFunction* pFnAddActor = NULL;

	if ( ! pFnAddActor )
		pFnAddActor = (UFunction*) UObject::GObjObjects()->Data[ 47951 ];

	UMortalAvatarManager_execAddActor_Parms AddActor_Parms;
	AddActor_Parms.A = A;

	this->ProcessEvent ( pFnAddActor, &AddActor_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.MoveToGround
// [0x00820002] 
// Parameters infos:

void ANowProjectileEffect::MoveToGround ( )
{
	static UFunction* pFnMoveToGround = NULL;

	if ( ! pFnMoveToGround )
		pFnMoveToGround = (UFunction*) UObject::GObjObjects()->Data[ 48521 ];

	ANowProjectileEffect_execMoveToGround_Parms MoveToGround_Parms;

	this->ProcessEvent ( pFnMoveToGround, &MoveToGround_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectileEffect::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 48518 ];

	ANowProjectileEffect_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowProjectileEffect::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48517 ];

	ANowProjectileEffect_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.SetTargetActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  NewActor                       ( CPF_Parm )

void ANowProjectileEffect::SetTargetActor ( class AActor* NewActor )
{
	static UFunction* pFnSetTargetActor = NULL;

	if ( ! pFnSetTargetActor )
		pFnSetTargetActor = (UFunction*) UObject::GObjObjects()->Data[ 48515 ];

	ANowProjectileEffect_execSetTargetActor_Parms SetTargetActor_Parms;
	SetTargetActor_Parms.NewActor = NewActor;

	this->ProcessEvent ( pFnSetTargetActor, &SetTargetActor_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.SetTargetVect
// [0x00020002] 
// Parameters infos:
// struct FVector                 NewVector                      ( CPF_Parm )

void ANowProjectileEffect::SetTargetVect ( struct FVector NewVector )
{
	static UFunction* pFnSetTargetVect = NULL;

	if ( ! pFnSetTargetVect )
		pFnSetTargetVect = (UFunction*) UObject::GObjObjects()->Data[ 48513 ];

	ANowProjectileEffect_execSetTargetVect_Parms SetTargetVect_Parms;
	memcpy ( &SetTargetVect_Parms.NewVector, &NewVector, 0xC );

	this->ProcessEvent ( pFnSetTargetVect, &SetTargetVect_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.CameraShake
// [0x00020002] 
// Parameters infos:

void ANowProjectileEffect::CameraShake ( )
{
	static UFunction* pFnCameraShake = NULL;

	if ( ! pFnCameraShake )
		pFnCameraShake = (UFunction*) UObject::GObjObjects()->Data[ 48511 ];

	ANowProjectileEffect_execCameraShake_Parms CameraShake_Parms;

	this->ProcessEvent ( pFnCameraShake, &CameraShake_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.EffectProjectileHit
// [0x00020002] 
// Parameters infos:

void ANowProjectileEffect::EffectProjectileHit ( )
{
	static UFunction* pFnEffectProjectileHit = NULL;

	if ( ! pFnEffectProjectileHit )
		pFnEffectProjectileHit = (UFunction*) UObject::GObjObjects()->Data[ 48510 ];

	ANowProjectileEffect_execEffectProjectileHit_Parms EffectProjectileHit_Parms;

	this->ProcessEvent ( pFnEffectProjectileHit, &EffectProjectileHit_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.LeaveDecal
// [0x00820002] 
// Parameters infos:

void ANowProjectileEffect::LeaveDecal ( )
{
	static UFunction* pFnLeaveDecal = NULL;

	if ( ! pFnLeaveDecal )
		pFnLeaveDecal = (UFunction*) UObject::GObjObjects()->Data[ 48503 ];

	ANowProjectileEffect_execLeaveDecal_Parms LeaveDecal_Parms;

	this->ProcessEvent ( pFnLeaveDecal, &LeaveDecal_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.InitEffectProjectile
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDuped                         ( CPF_OptionalParm | CPF_Parm )

void ANowProjectileEffect::InitEffectProjectile ( unsigned long bDuped )
{
	static UFunction* pFnInitEffectProjectile = NULL;

	if ( ! pFnInitEffectProjectile )
		pFnInitEffectProjectile = (UFunction*) UObject::GObjObjects()->Data[ 48500 ];

	ANowProjectileEffect_execInitEffectProjectile_Parms InitEffectProjectile_Parms;
	InitEffectProjectile_Parms.bDuped = bDuped;

	this->ProcessEvent ( pFnInitEffectProjectile, &InitEffectProjectile_Parms, NULL );
};

// Function NowGame.NowAiEffectAcidSuicide.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowAiEffectAcidSuicide::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48545 ];

	ANowAiEffectAcidSuicide_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAiEffectAcidSuicide.InitEffectProjectile
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDuped                         ( CPF_OptionalParm | CPF_Parm )

void ANowAiEffectAcidSuicide::InitEffectProjectile ( unsigned long bDuped )
{
	static UFunction* pFnInitEffectProjectile = NULL;

	if ( ! pFnInitEffectProjectile )
		pFnInitEffectProjectile = (UFunction*) UObject::GObjObjects()->Data[ 48543 ];

	ANowAiEffectAcidSuicide_execInitEffectProjectile_Parms InitEffectProjectile_Parms;
	InitEffectProjectile_Parms.bDuped = bDuped;

	this->ProcessEvent ( pFnInitEffectProjectile, &InitEffectProjectile_Parms, NULL );
};

// Function NowGame.NowAiEffectDemonicSphere.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowAiEffectDemonicSphere::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 48625 ];

	ANowAiEffectDemonicSphere_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAiEffectDemonicSphere.EffectProjectileHit
// [0x00020002] 
// Parameters infos:

void ANowAiEffectDemonicSphere::EffectProjectileHit ( )
{
	static UFunction* pFnEffectProjectileHit = NULL;

	if ( ! pFnEffectProjectileHit )
		pFnEffectProjectileHit = (UFunction*) UObject::GObjObjects()->Data[ 48619 ];

	ANowAiEffectDemonicSphere_execEffectProjectileHit_Parms EffectProjectileHit_Parms;

	this->ProcessEvent ( pFnEffectProjectileHit, &EffectProjectileHit_Parms, NULL );
};

// Function NowGame.NowAiEffectDemonicSphere.InitEffectProjectile
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDuped                         ( CPF_OptionalParm | CPF_Parm )

void ANowAiEffectDemonicSphere::InitEffectProjectile ( unsigned long bDuped )
{
	static UFunction* pFnInitEffectProjectile = NULL;

	if ( ! pFnInitEffectProjectile )
		pFnInitEffectProjectile = (UFunction*) UObject::GObjObjects()->Data[ 48617 ];

	ANowAiEffectDemonicSphere_execInitEffectProjectile_Parms InitEffectProjectile_Parms;
	InitEffectProjectile_Parms.bDuped = bDuped;

	this->ProcessEvent ( pFnInitEffectProjectile, &InitEffectProjectile_Parms, NULL );
};

// Function NowGame.NowAiEffectLight.InitEffectProjectile
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDuped                         ( CPF_OptionalParm | CPF_Parm )

void ANowAiEffectLight::InitEffectProjectile ( unsigned long bDuped )
{
	static UFunction* pFnInitEffectProjectile = NULL;

	if ( ! pFnInitEffectProjectile )
		pFnInitEffectProjectile = (UFunction*) UObject::GObjObjects()->Data[ 48706 ];

	ANowAiEffectLight_execInitEffectProjectile_Parms InitEffectProjectile_Parms;
	InitEffectProjectile_Parms.bDuped = bDuped;

	this->ProcessEvent ( pFnInitEffectProjectile, &InitEffectProjectile_Parms, NULL );
};

// Function NowGame.NowAiEffectPortalProj.InitEffectProjectile
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDuped                         ( CPF_OptionalParm | CPF_Parm )

void ANowAiEffectPortalProj::InitEffectProjectile ( unsigned long bDuped )
{
	static UFunction* pFnInitEffectProjectile = NULL;

	if ( ! pFnInitEffectProjectile )
		pFnInitEffectProjectile = (UFunction*) UObject::GObjObjects()->Data[ 48739 ];

	ANowAiEffectPortalProj_execInitEffectProjectile_Parms InitEffectProjectile_Parms;
	InitEffectProjectile_Parms.bDuped = bDuped;

	this->ProcessEvent ( pFnInitEffectProjectile, &InitEffectProjectile_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawn.TimeOut
// [0x00020002] 
// Parameters infos:

void ANowAiEffectSpawn::TimeOut ( )
{
	static UFunction* pFnTimeOut = NULL;

	if ( ! pFnTimeOut )
		pFnTimeOut = (UFunction*) UObject::GObjObjects()->Data[ 48782 ];

	ANowAiEffectSpawn_execTimeOut_Parms TimeOut_Parms;

	this->ProcessEvent ( pFnTimeOut, &TimeOut_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawn.Tick
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAiEffectSpawn::Tick ( float DT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 48780 ];

	ANowAiEffectSpawn_execTick_Parms Tick_Parms;
	Tick_Parms.DT = DT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawn.UnHideEffect
// [0x00020002] 
// Parameters infos:

void ANowAiEffectSpawn::UnHideEffect ( )
{
	static UFunction* pFnUnHideEffect = NULL;

	if ( ! pFnUnHideEffect )
		pFnUnHideEffect = (UFunction*) UObject::GObjObjects()->Data[ 48779 ];

	ANowAiEffectSpawn_execUnHideEffect_Parms UnHideEffect_Parms;

	this->ProcessEvent ( pFnUnHideEffect, &UnHideEffect_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawn.InitEffect
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAi*       NewOwner                       ( CPF_Parm )

void ANowAiEffectSpawn::InitEffect ( class ANowAtlasAvatarAi* NewOwner )
{
	static UFunction* pFnInitEffect = NULL;

	if ( ! pFnInitEffect )
		pFnInitEffect = (UFunction*) UObject::GObjObjects()->Data[ 48775 ];

	ANowAiEffectSpawn_execInitEffect_Parms InitEffect_Parms;
	InitEffect_Parms.NewOwner = NewOwner;

	this->ProcessEvent ( pFnInitEffect, &InitEffect_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawnFromGround.Tick
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAiEffectSpawnFromGround::Tick ( float DT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 48796 ];

	ANowAiEffectSpawnFromGround_execTick_Parms Tick_Parms;
	Tick_Parms.DT = DT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawnFromGround.InitEffect
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAi*       NewOwner                       ( CPF_Parm )

void ANowAiEffectSpawnFromGround::InitEffect ( class ANowAtlasAvatarAi* NewOwner )
{
	static UFunction* pFnInitEffect = NULL;

	if ( ! pFnInitEffect )
		pFnInitEffect = (UFunction*) UObject::GObjObjects()->Data[ 48794 ];

	ANowAiEffectSpawnFromGround_execInitEffect_Parms InitEffect_Parms;
	InitEffect_Parms.NewOwner = NewOwner;

	this->ProcessEvent ( pFnInitEffect, &InitEffect_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawnUnHideAnimation.TimeOut
// [0x00020002] 
// Parameters infos:

void ANowAiEffectSpawnUnHideAnimation::TimeOut ( )
{
	static UFunction* pFnTimeOut = NULL;

	if ( ! pFnTimeOut )
		pFnTimeOut = (UFunction*) UObject::GObjObjects()->Data[ 48806 ];

	ANowAiEffectSpawnUnHideAnimation_execTimeOut_Parms TimeOut_Parms;

	this->ProcessEvent ( pFnTimeOut, &TimeOut_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawnUnHideAnimation.UnHideEffect
// [0x00020002] 
// Parameters infos:

void ANowAiEffectSpawnUnHideAnimation::UnHideEffect ( )
{
	static UFunction* pFnUnHideEffect = NULL;

	if ( ! pFnUnHideEffect )
		pFnUnHideEffect = (UFunction*) UObject::GObjObjects()->Data[ 48805 ];

	ANowAiEffectSpawnUnHideAnimation_execUnHideEffect_Parms UnHideEffect_Parms;

	this->ProcessEvent ( pFnUnHideEffect, &UnHideEffect_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawnUnHideAnimation.InitEffect
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAi*       NewOwner                       ( CPF_Parm )

void ANowAiEffectSpawnUnHideAnimation::InitEffect ( class ANowAtlasAvatarAi* NewOwner )
{
	static UFunction* pFnInitEffect = NULL;

	if ( ! pFnInitEffect )
		pFnInitEffect = (UFunction*) UObject::GObjObjects()->Data[ 48803 ];

	ANowAiEffectSpawnUnHideAnimation_execInitEffect_Parms InitEffect_Parms;
	InitEffect_Parms.NewOwner = NewOwner;

	this->ProcessEvent ( pFnInitEffect, &InitEffect_Parms, NULL );
};

// Function NowGame.VectorQueue.IsEmpty
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UVectorQueue::IsEmpty ( )
{
	static UFunction* pFnIsEmpty = NULL;

	if ( ! pFnIsEmpty )
		pFnIsEmpty = (UFunction*) UObject::GObjObjects()->Data[ 49100 ];

	UVectorQueue_execIsEmpty_Parms IsEmpty_Parms;

	this->ProcessEvent ( pFnIsEmpty, &IsEmpty_Parms, NULL );

	return IsEmpty_Parms.ReturnValue;
};

// Function NowGame.VectorQueue.Length
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UVectorQueue::Length ( )
{
	static UFunction* pFnLength = NULL;

	if ( ! pFnLength )
		pFnLength = (UFunction*) UObject::GObjObjects()->Data[ 60940 ];

	UVectorQueue_execLength_Parms Length_Parms;

	this->ProcessEvent ( pFnLength, &Length_Parms, NULL );

	return Length_Parms.ReturnValue;
};

// Function NowGame.VectorQueue.Size
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UVectorQueue::Size ( )
{
	static UFunction* pFnSize = NULL;

	if ( ! pFnSize )
		pFnSize = (UFunction*) UObject::GObjObjects()->Data[ 49106 ];

	UVectorQueue_execSize_Parms Size_Parms;

	this->ProcessEvent ( pFnSize, &Size_Parms, NULL );

	return Size_Parms.ReturnValue;
};

// Function NowGame.VectorQueue.Clear
// [0x00020002] 
// Parameters infos:

void UVectorQueue::Clear ( )
{
	static UFunction* pFnClear = NULL;

	if ( ! pFnClear )
		pFnClear = (UFunction*) UObject::GObjObjects()->Data[ 60939 ];

	UVectorQueue_execClear_Parms Clear_Parms;

	this->ProcessEvent ( pFnClear, &Clear_Parms, NULL );
};

// Function NowGame.VectorQueue.Pop
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UVectorQueue::Pop ( )
{
	static UFunction* pFnPop = NULL;

	if ( ! pFnPop )
		pFnPop = (UFunction*) UObject::GObjObjects()->Data[ 49104 ];

	UVectorQueue_execPop_Parms Pop_Parms;

	this->ProcessEvent ( pFnPop, &Pop_Parms, NULL );

	return Pop_Parms.ReturnValue;
};

// Function NowGame.VectorQueue.Peek
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UVectorQueue::Peek ( )
{
	static UFunction* pFnPeek = NULL;

	if ( ! pFnPeek )
		pFnPeek = (UFunction*) UObject::GObjObjects()->Data[ 49102 ];

	UVectorQueue_execPeek_Parms Peek_Parms;

	this->ProcessEvent ( pFnPeek, &Peek_Parms, NULL );

	return Peek_Parms.ReturnValue;
};

// Function NowGame.VectorQueue.Push
// [0x00020002] 
// Parameters infos:
// struct FVector                 V                              ( CPF_Parm )

void UVectorQueue::Push ( struct FVector V )
{
	static UFunction* pFnPush = NULL;

	if ( ! pFnPush )
		pFnPush = (UFunction*) UObject::GObjObjects()->Data[ 60936 ];

	UVectorQueue_execPush_Parms Push_Parms;
	memcpy ( &Push_Parms.V, &V, 0xC );

	this->ProcessEvent ( pFnPush, &Push_Parms, NULL );
};

// Function NowGame.NowCorpseDynamic.GrabMaterials
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatar*         WhatActor                      ( CPF_Parm )

void ANowCorpseDynamic::GrabMaterials ( class ANowAtlasAvatar* WhatActor )
{
	static UFunction* pFnGrabMaterials = NULL;

	if ( ! pFnGrabMaterials )
		pFnGrabMaterials = (UFunction*) UObject::GObjObjects()->Data[ 52540 ];

	ANowCorpseDynamic_execGrabMaterials_Parms GrabMaterials_Parms;
	GrabMaterials_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnGrabMaterials, &GrabMaterials_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAnimatedDoor.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAnimatedDoor::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 50102 ];

	ANowAtlasAvatarAnimatedDoor_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAnimatedDoor.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowAtlasAvatarAnimatedDoor::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 50100 ];

	ANowAtlasAvatarAnimatedDoor_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAnimatedDoor.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAnimatedDoor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50096 ];

	ANowAtlasAvatarAnimatedDoor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventAnim.UnTriggerMe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEventAnim::eventUnTriggerMe ( )
{
	static UFunction* pFnUnTriggerMe = NULL;

	if ( ! pFnUnTriggerMe )
		pFnUnTriggerMe = (UFunction*) UObject::GObjObjects()->Data[ 50157 ];

	ANowAtlasAvatarEventAnim_eventUnTriggerMe_Parms UnTriggerMe_Parms;

	this->ProcessEvent ( pFnUnTriggerMe, &UnTriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventAnim.TriggerMe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEventAnim::eventTriggerMe ( )
{
	static UFunction* pFnTriggerMe = NULL;

	if ( ! pFnTriggerMe )
		pFnTriggerMe = (UFunction*) UObject::GObjObjects()->Data[ 50155 ];

	ANowAtlasAvatarEventAnim_eventTriggerMe_Parms TriggerMe_Parms;

	this->ProcessEvent ( pFnTriggerMe, &TriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventAnim.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarEventAnim::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50154 ];

	ANowAtlasAvatarEventAnim_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventAnimVisible.UnTriggerMe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEventAnimVisible::eventUnTriggerMe ( )
{
	static UFunction* pFnUnTriggerMe = NULL;

	if ( ! pFnUnTriggerMe )
		pFnUnTriggerMe = (UFunction*) UObject::GObjObjects()->Data[ 50167 ];

	ANowAtlasAvatarEventAnimVisible_eventUnTriggerMe_Parms UnTriggerMe_Parms;

	this->ProcessEvent ( pFnUnTriggerMe, &UnTriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventAnimVisible.TriggerMe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEventAnimVisible::eventTriggerMe ( )
{
	static UFunction* pFnTriggerMe = NULL;

	if ( ! pFnTriggerMe )
		pFnTriggerMe = (UFunction*) UObject::GObjObjects()->Data[ 50165 ];

	ANowAtlasAvatarEventAnimVisible_eventTriggerMe_Parms TriggerMe_Parms;

	this->ProcessEvent ( pFnTriggerMe, &TriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventDoor.UnTriggerMe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEventDoor::eventUnTriggerMe ( )
{
	static UFunction* pFnUnTriggerMe = NULL;

	if ( ! pFnUnTriggerMe )
		pFnUnTriggerMe = (UFunction*) UObject::GObjObjects()->Data[ 50179 ];

	ANowAtlasAvatarEventDoor_eventUnTriggerMe_Parms UnTriggerMe_Parms;

	this->ProcessEvent ( pFnUnTriggerMe, &UnTriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventDoor.TriggerMe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEventDoor::eventTriggerMe ( )
{
	static UFunction* pFnTriggerMe = NULL;

	if ( ! pFnTriggerMe )
		pFnTriggerMe = (UFunction*) UObject::GObjObjects()->Data[ 50178 ];

	ANowAtlasAvatarEventDoor_eventTriggerMe_Parms TriggerMe_Parms;

	this->ProcessEvent ( pFnTriggerMe, &TriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventDoor.SetActivateCrossNodeAvatarList
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarEventDoor::SetActivateCrossNodeAvatarList ( )
{
	static UFunction* pFnSetActivateCrossNodeAvatarList = NULL;

	if ( ! pFnSetActivateCrossNodeAvatarList )
		pFnSetActivateCrossNodeAvatarList = (UFunction*) UObject::GObjObjects()->Data[ 50177 ];

	ANowAtlasAvatarEventDoor_execSetActivateCrossNodeAvatarList_Parms SetActivateCrossNodeAvatarList_Parms;

	this->ProcessEvent ( pFnSetActivateCrossNodeAvatarList, &SetActivateCrossNodeAvatarList_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventDoor.Destroyed
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarEventDoor::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 50176 ];

	ANowAtlasAvatarEventDoor_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventDoor.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarEventDoor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50175 ];

	ANowAtlasAvatarEventDoor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowBlockingVolume.setVolumeCollision
// [0x00020002] 
// Parameters infos:
// unsigned long                  isCollision                    ( CPF_Parm )

void ANowBlockingVolume::setVolumeCollision ( unsigned long isCollision )
{
	static UFunction* pFnsetVolumeCollision = NULL;

	if ( ! pFnsetVolumeCollision )
		pFnsetVolumeCollision = (UFunction*) UObject::GObjObjects()->Data[ 51812 ];

	ANowBlockingVolume_execsetVolumeCollision_Parms setVolumeCollision_Parms;
	setVolumeCollision_Parms.isCollision = isCollision;

	this->ProcessEvent ( pFnsetVolumeCollision, &setVolumeCollision_Parms, NULL );
};

// Function NowGame.NowStaticMeshcomponentDoor.TurnOnCollisionOnDoor
// [0x00020002] 
// Parameters infos:

void UNowStaticMeshcomponentDoor::TurnOnCollisionOnDoor ( )
{
	static UFunction* pFnTurnOnCollisionOnDoor = NULL;

	if ( ! pFnTurnOnCollisionOnDoor )
		pFnTurnOnCollisionOnDoor = (UFunction*) UObject::GObjObjects()->Data[ 59621 ];

	UNowStaticMeshcomponentDoor_execTurnOnCollisionOnDoor_Parms TurnOnCollisionOnDoor_Parms;

	this->ProcessEvent ( pFnTurnOnCollisionOnDoor, &TurnOnCollisionOnDoor_Parms, NULL );
};

// Function NowGame.NowStaticMeshcomponentDoor.TurnOffCollisionOnDoor
// [0x00020002] 
// Parameters infos:

void UNowStaticMeshcomponentDoor::TurnOffCollisionOnDoor ( )
{
	static UFunction* pFnTurnOffCollisionOnDoor = NULL;

	if ( ! pFnTurnOffCollisionOnDoor )
		pFnTurnOffCollisionOnDoor = (UFunction*) UObject::GObjObjects()->Data[ 59620 ];

	UNowStaticMeshcomponentDoor_execTurnOffCollisionOnDoor_Parms TurnOffCollisionOnDoor_Parms;

	this->ProcessEvent ( pFnTurnOffCollisionOnDoor, &TurnOffCollisionOnDoor_Parms, NULL );
};

// Function NowGame.NowStaticMeshcomponentDoor.EncroachingOn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool UNowStaticMeshcomponentDoor::eventEncroachingOn ( class AActor* Other )
{
	static UFunction* pFnEncroachingOn = NULL;

	if ( ! pFnEncroachingOn )
		pFnEncroachingOn = (UFunction*) UObject::GObjObjects()->Data[ 59617 ];

	UNowStaticMeshcomponentDoor_eventEncroachingOn_Parms EncroachingOn_Parms;
	EncroachingOn_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachingOn, &EncroachingOn_Parms, NULL );

	return EncroachingOn_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshcomponentDoor.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void UNowStaticMeshcomponentDoor::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 59615 ];

	UNowStaticMeshcomponentDoor_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function NowGame.NowStaticMeshcomponentDoor.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void UNowStaticMeshcomponentDoor::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 59610 ];

	UNowStaticMeshcomponentDoor_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.NowStaticMeshcomponentDoor.isPlayerInHouse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Player                         ( CPF_Parm )

bool UNowStaticMeshcomponentDoor::isPlayerInHouse ( class AActor* Player )
{
	static UFunction* pFnisPlayerInHouse = NULL;

	if ( ! pFnisPlayerInHouse )
		pFnisPlayerInHouse = (UFunction*) UObject::GObjObjects()->Data[ 50774 ];

	UNowStaticMeshcomponentDoor_execisPlayerInHouse_Parms isPlayerInHouse_Parms;
	isPlayerInHouse_Parms.Player = Player;

	this->ProcessEvent ( pFnisPlayerInHouse, &isPlayerInHouse_Parms, NULL );

	return isPlayerInHouse_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshcomponentDoor.getClientActor
// [0x00020002] 
// Parameters infos:

void UNowStaticMeshcomponentDoor::getClientActor ( )
{
	static UFunction* pFngetClientActor = NULL;

	if ( ! pFngetClientActor )
		pFngetClientActor = (UFunction*) UObject::GObjObjects()->Data[ 59608 ];

	UNowStaticMeshcomponentDoor_execgetClientActor_Parms getClientActor_Parms;

	this->ProcessEvent ( pFngetClientActor, &getClientActor_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.GetNowPC
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowStaticMeshActorKeepMap::GetNowPC ( )
{
	static UFunction* pFnGetNowPC = NULL;

	if ( ! pFnGetNowPC )
		pFnGetNowPC = (UFunction*) UObject::GObjObjects()->Data[ 59469 ];

	ANowStaticMeshActorKeepMap_execGetNowPC_Parms GetNowPC_Parms;

	this->ProcessEvent ( pFnGetNowPC, &GetNowPC_Parms, NULL );

	return GetNowPC_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorKeepMap.DrawPylons
// [0x00820002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::DrawPylons ( )
{
	static UFunction* pFnDrawPylons = NULL;

	if ( ! pFnDrawPylons )
		pFnDrawPylons = (UFunction*) UObject::GObjObjects()->Data[ 59462 ];

	ANowStaticMeshActorKeepMap_execDrawPylons_Parms DrawPylons_Parms;

	this->ProcessEvent ( pFnDrawPylons, &DrawPylons_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.ClearPylonMeshs
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::ClearPylonMeshs ( )
{
	static UFunction* pFnClearPylonMeshs = NULL;

	if ( ! pFnClearPylonMeshs )
		pFnClearPylonMeshs = (UFunction*) UObject::GObjObjects()->Data[ 59460 ];

	ANowStaticMeshActorKeepMap_execClearPylonMeshs_Parms ClearPylonMeshs_Parms;

	this->ProcessEvent ( pFnClearPylonMeshs, &ClearPylonMeshs_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.InitPylons
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::InitPylons ( )
{
	static UFunction* pFnInitPylons = NULL;

	if ( ! pFnInitPylons )
		pFnInitPylons = (UFunction*) UObject::GObjObjects()->Data[ 59459 ];

	ANowStaticMeshActorKeepMap_execInitPylons_Parms InitPylons_Parms;

	this->ProcessEvent ( pFnInitPylons, &InitPylons_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.UpdatePylons
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::UpdatePylons ( )
{
	static UFunction* pFnUpdatePylons = NULL;

	if ( ! pFnUpdatePylons )
		pFnUpdatePylons = (UFunction*) UObject::GObjObjects()->Data[ 59458 ];

	ANowStaticMeshActorKeepMap_execUpdatePylons_Parms UpdatePylons_Parms;

	this->ProcessEvent ( pFnUpdatePylons, &UpdatePylons_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.Destroyed
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 59457 ];

	ANowStaticMeshActorKeepMap_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.CheckPlayerDist
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::CheckPlayerDist ( )
{
	static UFunction* pFnCheckPlayerDist = NULL;

	if ( ! pFnCheckPlayerDist )
		pFnCheckPlayerDist = (UFunction*) UObject::GObjObjects()->Data[ 59456 ];

	ANowStaticMeshActorKeepMap_execCheckPlayerDist_Parms CheckPlayerDist_Parms;

	this->ProcessEvent ( pFnCheckPlayerDist, &CheckPlayerDist_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 59455 ];

	ANowStaticMeshActorKeepMap_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowFractureStaticMeshActor.PartExplosion
// [0x00820002] 
// Parameters infos:

void ANowFractureStaticMeshActor::PartExplosion ( )
{
	static UFunction* pFnPartExplosion = NULL;

	if ( ! pFnPartExplosion )
		pFnPartExplosion = (UFunction*) UObject::GObjObjects()->Data[ 52625 ];

	ANowFractureStaticMeshActor_execPartExplosion_Parms PartExplosion_Parms;

	this->ProcessEvent ( pFnPartExplosion, &PartExplosion_Parms, NULL );
};

// Function NowGame.NowFractureStaticMeshActor.TierExplosion
// [0x00820002] 
// Parameters infos:

void ANowFractureStaticMeshActor::TierExplosion ( )
{
	static UFunction* pFnTierExplosion = NULL;

	if ( ! pFnTierExplosion )
		pFnTierExplosion = (UFunction*) UObject::GObjObjects()->Data[ 52623 ];

	ANowFractureStaticMeshActor_execTierExplosion_Parms TierExplosion_Parms;

	this->ProcessEvent ( pFnTierExplosion, &TierExplosion_Parms, NULL );
};

// Function NowGame.NowFractureStaticMeshActor.Tick
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowFractureStaticMeshActor::Tick ( float DT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 52621 ];

	ANowFractureStaticMeshActor_execTick_Parms Tick_Parms;
	Tick_Parms.DT = DT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowFractureStaticMeshActor.SetStaticMesh
// [0x00020002] 
// Parameters infos:
// class UStaticMesh*             NewStaticMesh                  ( CPF_Parm )

void ANowFractureStaticMeshActor::SetStaticMesh ( class UStaticMesh* NewStaticMesh )
{
	static UFunction* pFnSetStaticMesh = NULL;

	if ( ! pFnSetStaticMesh )
		pFnSetStaticMesh = (UFunction*) UObject::GObjObjects()->Data[ 52619 ];

	ANowFractureStaticMeshActor_execSetStaticMesh_Parms SetStaticMesh_Parms;
	SetStaticMesh_Parms.NewStaticMesh = NewStaticMesh;

	this->ProcessEvent ( pFnSetStaticMesh, &SetStaticMesh_Parms, NULL );
};

// Function NowGame.NowFractureStaticMeshActor.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowFractureStaticMeshActor::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 52618 ];

	ANowFractureStaticMeshActor_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectileGeneric::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 59070 ];

	ANowProjectileGeneric_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.RemoveMyComponents
// [0x00020000] 
// Parameters infos:

void ANowProjectileGeneric::RemoveMyComponents ( )
{
	static UFunction* pFnRemoveMyComponents = NULL;

	if ( ! pFnRemoveMyComponents )
		pFnRemoveMyComponents = (UFunction*) UObject::GObjObjects()->Data[ 59069 ];

	ANowProjectileGeneric_execRemoveMyComponents_Parms RemoveMyComponents_Parms;

	this->ProcessEvent ( pFnRemoveMyComponents, &RemoveMyComponents_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.TickTargetPos
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectileGeneric::TickTargetPos ( float DeltaTime )
{
	static UFunction* pFnTickTargetPos = NULL;

	if ( ! pFnTickTargetPos )
		pFnTickTargetPos = (UFunction*) UObject::GObjObjects()->Data[ 59066 ];

	ANowProjectileGeneric_execTickTargetPos_Parms TickTargetPos_Parms;
	TickTargetPos_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickTargetPos, &TickTargetPos_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetVelRotaion
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ANowProjectileGeneric::SetVelRotaion ( struct FVector Direction )
{
	static UFunction* pFnSetVelRotaion = NULL;

	if ( ! pFnSetVelRotaion )
		pFnSetVelRotaion = (UFunction*) UObject::GObjObjects()->Data[ 59064 ];

	ANowProjectileGeneric_execSetVelRotaion_Parms SetVelRotaion_Parms;
	memcpy ( &SetVelRotaion_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnSetVelRotaion, &SetVelRotaion_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetTargetPosArray
// [0x00020002] 
// Parameters infos:
// TArray< struct FVector >       OutPos                         ( CPF_Parm | CPF_NeedCtorLink )

void ANowProjectileGeneric::SetTargetPosArray ( TArray< struct FVector > OutPos )
{
	static UFunction* pFnSetTargetPosArray = NULL;

	if ( ! pFnSetTargetPosArray )
		pFnSetTargetPosArray = (UFunction*) UObject::GObjObjects()->Data[ 59061 ];

	ANowProjectileGeneric_execSetTargetPosArray_Parms SetTargetPosArray_Parms;
	memcpy ( &SetTargetPosArray_Parms.OutPos, &OutPos, 0xC );

	this->ProcessEvent ( pFnSetTargetPosArray, &SetTargetPosArray_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetNextTargetPos
// [0x00020002] 
// Parameters infos:

void ANowProjectileGeneric::SetNextTargetPos ( )
{
	static UFunction* pFnSetNextTargetPos = NULL;

	if ( ! pFnSetNextTargetPos )
		pFnSetNextTargetPos = (UFunction*) UObject::GObjObjects()->Data[ 59060 ];

	ANowProjectileGeneric_execSetNextTargetPos_Parms SetNextTargetPos_Parms;

	this->ProcessEvent ( pFnSetNextTargetPos, &SetNextTargetPos_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.Landed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

void ANowProjectileGeneric::eventLanded ( struct FVector HitNormal, class AActor* HitActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 59057 ];

	ANowProjectileGeneric_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.CalcSpeedMulti
// [0x00820002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowProjectileGeneric::CalcSpeedMulti ( )
{
	static UFunction* pFnCalcSpeedMulti = NULL;

	if ( ! pFnCalcSpeedMulti )
		pFnCalcSpeedMulti = (UFunction*) UObject::GObjObjects()->Data[ 59049 ];

	ANowProjectileGeneric_execCalcSpeedMulti_Parms CalcSpeedMulti_Parms;

	this->ProcessEvent ( pFnCalcSpeedMulti, &CalcSpeedMulti_Parms, NULL );

	return CalcSpeedMulti_Parms.ReturnValue;
};

// Function NowGame.NowProjectileGeneric.Init
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ANowProjectileGeneric::Init ( struct FVector Direction )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 59047 ];

	ANowProjectileGeneric_execInit_Parms Init_Parms;
	memcpy ( &Init_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetImpactSoundFromString
// [0x00020002] 
// Parameters infos:
// struct FString                 BaseString                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowProjectileGeneric::SetImpactSoundFromString ( struct FString BaseString )
{
	static UFunction* pFnSetImpactSoundFromString = NULL;

	if ( ! pFnSetImpactSoundFromString )
		pFnSetImpactSoundFromString = (UFunction*) UObject::GObjObjects()->Data[ 59045 ];

	ANowProjectileGeneric_execSetImpactSoundFromString_Parms SetImpactSoundFromString_Parms;
	memcpy ( &SetImpactSoundFromString_Parms.BaseString, &BaseString, 0xC );

	this->ProcessEvent ( pFnSetImpactSoundFromString, &SetImpactSoundFromString_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetFlySoundFromString
// [0x00020002] 
// Parameters infos:
// struct FString                 BaseString                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowProjectileGeneric::SetFlySoundFromString ( struct FString BaseString )
{
	static UFunction* pFnSetFlySoundFromString = NULL;

	if ( ! pFnSetFlySoundFromString )
		pFnSetFlySoundFromString = (UFunction*) UObject::GObjObjects()->Data[ 59043 ];

	ANowProjectileGeneric_execSetFlySoundFromString_Parms SetFlySoundFromString_Parms;
	memcpy ( &SetFlySoundFromString_Parms.BaseString, &BaseString, 0xC );

	this->ProcessEvent ( pFnSetFlySoundFromString, &SetFlySoundFromString_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetImpactParticleFromString
// [0x00020002] 
// Parameters infos:
// struct FString                 BaseString                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowProjectileGeneric::SetImpactParticleFromString ( struct FString BaseString )
{
	static UFunction* pFnSetImpactParticleFromString = NULL;

	if ( ! pFnSetImpactParticleFromString )
		pFnSetImpactParticleFromString = (UFunction*) UObject::GObjObjects()->Data[ 59041 ];

	ANowProjectileGeneric_execSetImpactParticleFromString_Parms SetImpactParticleFromString_Parms;
	memcpy ( &SetImpactParticleFromString_Parms.BaseString, &BaseString, 0xC );

	this->ProcessEvent ( pFnSetImpactParticleFromString, &SetImpactParticleFromString_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetTrailParticleFromString
// [0x00020002] 
// Parameters infos:
// struct FString                 BaseString                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowProjectileGeneric::SetTrailParticleFromString ( struct FString BaseString )
{
	static UFunction* pFnSetTrailParticleFromString = NULL;

	if ( ! pFnSetTrailParticleFromString )
		pFnSetTrailParticleFromString = (UFunction*) UObject::GObjObjects()->Data[ 59039 ];

	ANowProjectileGeneric_execSetTrailParticleFromString_Parms SetTrailParticleFromString_Parms;
	memcpy ( &SetTrailParticleFromString_Parms.BaseString, &BaseString, 0xC );

	this->ProcessEvent ( pFnSetTrailParticleFromString, &SetTrailParticleFromString_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetStaticMeshFromString
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 BaseString                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowProjectileGeneric::eventSetStaticMeshFromString ( struct FString BaseString )
{
	static UFunction* pFnSetStaticMeshFromString = NULL;

	if ( ! pFnSetStaticMeshFromString )
		pFnSetStaticMeshFromString = (UFunction*) UObject::GObjObjects()->Data[ 59036 ];

	ANowProjectileGeneric_eventSetStaticMeshFromString_Parms SetStaticMeshFromString_Parms;
	memcpy ( &SetStaticMeshFromString_Parms.BaseString, &BaseString, 0xC );

	this->ProcessEvent ( pFnSetStaticMeshFromString, &SetStaticMeshFromString_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.RHoldTab
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::RHoldTab ( )
{
	static UFunction* pFnRHoldTab = NULL;

	if ( ! pFnRHoldTab )
		pFnRHoldTab = (UFunction*) UObject::GObjObjects()->Data[ 51921 ];

	UNowChildHudCreate_execRHoldTab_Parms RHoldTab_Parms;

	this->ProcessEvent ( pFnRHoldTab, &RHoldTab_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.ToggleCombatMode
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::ToggleCombatMode ( )
{
	static UFunction* pFnToggleCombatMode = NULL;

	if ( ! pFnToggleCombatMode )
		pFnToggleCombatMode = (UFunction*) UObject::GObjObjects()->Data[ 51920 ];

	UNowChildHudCreate_execToggleCombatMode_Parms ToggleCombatMode_Parms;

	this->ProcessEvent ( pFnToggleCombatMode, &ToggleCombatMode_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.SprintOn
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::SprintOn ( )
{
	static UFunction* pFnSprintOn = NULL;

	if ( ! pFnSprintOn )
		pFnSprintOn = (UFunction*) UObject::GObjObjects()->Data[ 51919 ];

	UNowChildHudCreate_execSprintOn_Parms SprintOn_Parms;

	this->ProcessEvent ( pFnSprintOn, &SprintOn_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.StopAltFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::StopAltFire ( )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = (UFunction*) UObject::GObjObjects()->Data[ 51918 ];

	UNowChildHudCreate_execStopAltFire_Parms StopAltFire_Parms;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.StartAltFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::StartAltFire ( )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = (UFunction*) UObject::GObjObjects()->Data[ 51917 ];

	UNowChildHudCreate_execStartAltFire_Parms StartAltFire_Parms;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.StopFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::StopFire ( )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 51916 ];

	UNowChildHudCreate_execStopFire_Parms StopFire_Parms;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.StartFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 51915 ];

	UNowChildHudCreate_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.UpdateMouseMove
// [0x00020000] 
// Parameters infos:
// float                          newTurn                        ( CPF_Parm )
// float                          newUp                          ( CPF_Parm )

void UNowChildHudCreate::UpdateMouseMove ( float newTurn, float newUp )
{
	static UFunction* pFnUpdateMouseMove = NULL;

	if ( ! pFnUpdateMouseMove )
		pFnUpdateMouseMove = (UFunction*) UObject::GObjObjects()->Data[ 51912 ];

	UNowChildHudCreate_execUpdateMouseMove_Parms UpdateMouseMove_Parms;
	UpdateMouseMove_Parms.newTurn = newTurn;
	UpdateMouseMove_Parms.newUp = newUp;

	this->ProcessEvent ( pFnUpdateMouseMove, &UpdateMouseMove_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.AddToActiveBtn
// [0x00020002] 
// Parameters infos:
// int                            Add                            ( CPF_Parm )

void UNowChildHudCreate::AddToActiveBtn ( int Add )
{
	static UFunction* pFnAddToActiveBtn = NULL;

	if ( ! pFnAddToActiveBtn )
		pFnAddToActiveBtn = (UFunction*) UObject::GObjObjects()->Data[ 51910 ];

	UNowChildHudCreate_execAddToActiveBtn_Parms AddToActiveBtn_Parms;
	AddToActiveBtn_Parms.Add = Add;

	this->ProcessEvent ( pFnAddToActiveBtn, &AddToActiveBtn_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.AddToValue
// [0x00020002] 
// Parameters infos:
// int                            Add                            ( CPF_Parm )

void UNowChildHudCreate::AddToValue ( int Add )
{
	static UFunction* pFnAddToValue = NULL;

	if ( ! pFnAddToValue )
		pFnAddToValue = (UFunction*) UObject::GObjObjects()->Data[ 51908 ];

	UNowChildHudCreate_execAddToValue_Parms AddToValue_Parms;
	AddToValue_Parms.Add = Add;

	this->ProcessEvent ( pFnAddToValue, &AddToValue_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.InputTimer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowChildHudCreate::InputTimer ( )
{
	static UFunction* pFnInputTimer = NULL;

	if ( ! pFnInputTimer )
		pFnInputTimer = (UFunction*) UObject::GObjObjects()->Data[ 51905 ];

	UNowChildHudCreate_execInputTimer_Parms InputTimer_Parms;

	this->ProcessEvent ( pFnInputTimer, &InputTimer_Parms, NULL );

	return InputTimer_Parms.ReturnValue;
};

// Function NowGame.NowChildHudCreate.DrawParamBox
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

void UNowChildHudCreate::DrawParamBox ( class UCanvas* C, int Index )
{
	static UFunction* pFnDrawParamBox = NULL;

	if ( ! pFnDrawParamBox )
		pFnDrawParamBox = (UFunction*) UObject::GObjObjects()->Data[ 51902 ];

	UNowChildHudCreate_execDrawParamBox_Parms DrawParamBox_Parms;
	DrawParamBox_Parms.C = C;
	DrawParamBox_Parms.Index = Index;

	this->ProcessEvent ( pFnDrawParamBox, &DrawParamBox_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.ActionBarSlot
// [0x00020000] 
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UNowChildHudCreate::ActionBarSlot ( int iSlot )
{
	static UFunction* pFnActionBarSlot = NULL;

	if ( ! pFnActionBarSlot )
		pFnActionBarSlot = (UFunction*) UObject::GObjObjects()->Data[ 51900 ];

	UNowChildHudCreate_execActionBarSlot_Parms ActionBarSlot_Parms;
	ActionBarSlot_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnActionBarSlot, &ActionBarSlot_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudCreate::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = (UFunction*) UObject::GObjObjects()->Data[ 51896 ];

	UNowChildHudCreate_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.InitChildHud
// [0x00020002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHudCreate::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = (UFunction*) UObject::GObjObjects()->Data[ 51893 ];

	UNowChildHudCreate_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.DrawMessages
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudCreate::DrawMessages ( class UCanvas* C )
{
	static UFunction* pFnDrawMessages = NULL;

	if ( ! pFnDrawMessages )
		pFnDrawMessages = (UFunction*) UObject::GObjObjects()->Data[ 51891 ];

	UNowChildHudCreate_execDrawMessages_Parms DrawMessages_Parms;
	DrawMessages_Parms.C = C;

	this->ProcessEvent ( pFnDrawMessages, &DrawMessages_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.AddMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudCreate::AddMessage ( struct FString msg )
{
	static UFunction* pFnAddMessage = NULL;

	if ( ! pFnAddMessage )
		pFnAddMessage = (UFunction*) UObject::GObjObjects()->Data[ 51887 ];

	UNowChildHudCreate_execAddMessage_Parms AddMessage_Parms;
	memcpy ( &AddMessage_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnAddMessage, &AddMessage_Parms, NULL );
};

// Function NowGame.NowChildHudDebugCount.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebugCount::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = (UFunction*) UObject::GObjObjects()->Data[ 51980 ];

	UNowChildHudDebugCount_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDebugCount.LogEmitterBase
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugCount::LogEmitterBase ( )
{
	static UFunction* pFnLogEmitterBase = NULL;

	if ( ! pFnLogEmitterBase )
		pFnLogEmitterBase = (UFunction*) UObject::GObjObjects()->Data[ 51975 ];

	UNowChildHudDebugCount_execLogEmitterBase_Parms LogEmitterBase_Parms;

	this->ProcessEvent ( pFnLogEmitterBase, &LogEmitterBase_Parms, NULL );
};

// Function NowGame.NowChildHudDebugCount.LogEmitterPool
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugCount::LogEmitterPool ( )
{
	static UFunction* pFnLogEmitterPool = NULL;

	if ( ! pFnLogEmitterPool )
		pFnLogEmitterPool = (UFunction*) UObject::GObjObjects()->Data[ 51973 ];

	UNowChildHudDebugCount_execLogEmitterPool_Parms LogEmitterPool_Parms;

	this->ProcessEvent ( pFnLogEmitterPool, &LogEmitterPool_Parms, NULL );
};

// Function NowGame.NowEmitter.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowEmitter::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 52602 ];

	ANowEmitter_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.SaveCollisionToFile
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::SaveCollisionToFile ( )
{
	static UFunction* pFnSaveCollisionToFile = NULL;

	if ( ! pFnSaveCollisionToFile )
		pFnSaveCollisionToFile = (UFunction*) UObject::GObjObjects()->Data[ 52030 ];

	UNowChildHudDebugHouseCollision_execSaveCollisionToFile_Parms SaveCollisionToFile_Parms;

	this->ProcessEvent ( pFnSaveCollisionToFile, &SaveCollisionToFile_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.DumpDebugHudInfo
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::DumpDebugHudInfo ( )
{
	static UFunction* pFnDumpDebugHudInfo = NULL;

	if ( ! pFnDumpDebugHudInfo )
		pFnDumpDebugHudInfo = (UFunction*) UObject::GObjObjects()->Data[ 52028 ];

	UNowChildHudDebugHouseCollision_execDumpDebugHudInfo_Parms DumpDebugHudInfo_Parms;

	this->ProcessEvent ( pFnDumpDebugHudInfo, &DumpDebugHudInfo_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebugHouseCollision::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = (UFunction*) UObject::GObjObjects()->Data[ 52024 ];

	UNowChildHudDebugHouseCollision_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.FindClosePoints
// [0x00420002] 
// Parameters infos:
// struct FVector                 PlayerVect                     ( CPF_Parm )
// int                            IndexA                         ( CPF_Parm | CPF_OutParm )
// int                            IndexB                         ( CPF_Parm | CPF_OutParm )
// int                            IndexC                         ( CPF_Parm | CPF_OutParm )

void UNowChildHudDebugHouseCollision::FindClosePoints ( struct FVector PlayerVect, int* IndexA, int* IndexB, int* IndexC )
{
	static UFunction* pFnFindClosePoints = NULL;

	if ( ! pFnFindClosePoints )
		pFnFindClosePoints = (UFunction*) UObject::GObjObjects()->Data[ 52017 ];

	UNowChildHudDebugHouseCollision_execFindClosePoints_Parms FindClosePoints_Parms;
	memcpy ( &FindClosePoints_Parms.PlayerVect, &PlayerVect, 0xC );

	this->ProcessEvent ( pFnFindClosePoints, &FindClosePoints_Parms, NULL );

	if ( IndexA )
		*IndexA = FindClosePoints_Parms.IndexA;

	if ( IndexB )
		*IndexB = FindClosePoints_Parms.IndexB;

	if ( IndexC )
		*IndexC = FindClosePoints_Parms.IndexC;
};

// Function NowGame.NowChildHudDebugHouseCollision.TestInside
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 PlayerVect                     ( CPF_Parm )
// unsigned long                  bDrawLines                     ( CPF_OptionalParm | CPF_Parm )

bool UNowChildHudDebugHouseCollision::TestInside ( struct FVector PlayerVect, unsigned long bDrawLines )
{
	static UFunction* pFnTestInside = NULL;

	if ( ! pFnTestInside )
		pFnTestInside = (UFunction*) UObject::GObjObjects()->Data[ 52007 ];

	UNowChildHudDebugHouseCollision_execTestInside_Parms TestInside_Parms;
	memcpy ( &TestInside_Parms.PlayerVect, &PlayerVect, 0xC );
	TestInside_Parms.bDrawLines = bDrawLines;

	this->ProcessEvent ( pFnTestInside, &TestInside_Parms, NULL );

	return TestInside_Parms.ReturnValue;
};

// Function NowGame.NowChildHudDebugHouseCollision.CheckThisPoint
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::CheckThisPoint ( )
{
	static UFunction* pFnCheckThisPoint = NULL;

	if ( ! pFnCheckThisPoint )
		pFnCheckThisPoint = (UFunction*) UObject::GObjObjects()->Data[ 52006 ];

	UNowChildHudDebugHouseCollision_execCheckThisPoint_Parms CheckThisPoint_Parms;

	this->ProcessEvent ( pFnCheckThisPoint, &CheckThisPoint_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.DoTestInside
// [0x00820002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::DoTestInside ( )
{
	static UFunction* pFnDoTestInside = NULL;

	if ( ! pFnDoTestInside )
		pFnDoTestInside = (UFunction*) UObject::GObjObjects()->Data[ 52002 ];

	UNowChildHudDebugHouseCollision_execDoTestInside_Parms DoTestInside_Parms;

	this->ProcessEvent ( pFnDoTestInside, &DoTestInside_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.RefinePoints
// [0x00820002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::RefinePoints ( )
{
	static UFunction* pFnRefinePoints = NULL;

	if ( ! pFnRefinePoints )
		pFnRefinePoints = (UFunction*) UObject::GObjObjects()->Data[ 51997 ];

	UNowChildHudDebugHouseCollision_execRefinePoints_Parms RefinePoints_Parms;

	this->ProcessEvent ( pFnRefinePoints, &RefinePoints_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.UseDebugHudB
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::UseDebugHudB ( )
{
	static UFunction* pFnUseDebugHudB = NULL;

	if ( ! pFnUseDebugHudB )
		pFnUseDebugHudB = (UFunction*) UObject::GObjObjects()->Data[ 51996 ];

	UNowChildHudDebugHouseCollision_execUseDebugHudB_Parms UseDebugHudB_Parms;

	this->ProcessEvent ( pFnUseDebugHudB, &UseDebugHudB_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.UseDebugHud
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::UseDebugHud ( )
{
	static UFunction* pFnUseDebugHud = NULL;

	if ( ! pFnUseDebugHud )
		pFnUseDebugHud = (UFunction*) UObject::GObjObjects()->Data[ 51995 ];

	UNowChildHudDebugHouseCollision_execUseDebugHud_Parms UseDebugHud_Parms;

	this->ProcessEvent ( pFnUseDebugHud, &UseDebugHud_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.InitChildHud
// [0x00020002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHudDebugHouseCollision::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = (UFunction*) UObject::GObjObjects()->Data[ 51993 ];

	UNowChildHudDebugHouseCollision_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.RHoldTab
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::RHoldTab ( )
{
	static UFunction* pFnRHoldTab = NULL;

	if ( ! pFnRHoldTab )
		pFnRHoldTab = (UFunction*) UObject::GObjObjects()->Data[ 52110 ];

	UNowChildHudDynamicCreature_execRHoldTab_Parms RHoldTab_Parms;

	this->ProcessEvent ( pFnRHoldTab, &RHoldTab_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.FetchDataFromHorse
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::FetchDataFromHorse ( )
{
	static UFunction* pFnFetchDataFromHorse = NULL;

	if ( ! pFnFetchDataFromHorse )
		pFnFetchDataFromHorse = (UFunction*) UObject::GObjObjects()->Data[ 52107 ];

	UNowChildHudDynamicCreature_execFetchDataFromHorse_Parms FetchDataFromHorse_Parms;

	this->ProcessEvent ( pFnFetchDataFromHorse, &FetchDataFromHorse_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.ToggleCombatMode
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::ToggleCombatMode ( )
{
	static UFunction* pFnToggleCombatMode = NULL;

	if ( ! pFnToggleCombatMode )
		pFnToggleCombatMode = (UFunction*) UObject::GObjObjects()->Data[ 52105 ];

	UNowChildHudDynamicCreature_execToggleCombatMode_Parms ToggleCombatMode_Parms;

	this->ProcessEvent ( pFnToggleCombatMode, &ToggleCombatMode_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.SprintOn
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::SprintOn ( )
{
	static UFunction* pFnSprintOn = NULL;

	if ( ! pFnSprintOn )
		pFnSprintOn = (UFunction*) UObject::GObjObjects()->Data[ 52104 ];

	UNowChildHudDynamicCreature_execSprintOn_Parms SprintOn_Parms;

	this->ProcessEvent ( pFnSprintOn, &SprintOn_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.StopAltFire
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::StopAltFire ( )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = (UFunction*) UObject::GObjObjects()->Data[ 52103 ];

	UNowChildHudDynamicCreature_execStopAltFire_Parms StopAltFire_Parms;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.StartAltFire
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::StartAltFire ( )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = (UFunction*) UObject::GObjObjects()->Data[ 52102 ];

	UNowChildHudDynamicCreature_execStartAltFire_Parms StartAltFire_Parms;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.StopFire
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::StopFire ( )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 52101 ];

	UNowChildHudDynamicCreature_execStopFire_Parms StopFire_Parms;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.StartFire
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 52100 ];

	UNowChildHudDynamicCreature_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.UpdateMouseMove
// [0x00820002] 
// Parameters infos:
// float                          newTurn                        ( CPF_Parm )
// float                          newUp                          ( CPF_Parm )

void UNowChildHudDynamicCreature::UpdateMouseMove ( float newTurn, float newUp )
{
	static UFunction* pFnUpdateMouseMove = NULL;

	if ( ! pFnUpdateMouseMove )
		pFnUpdateMouseMove = (UFunction*) UObject::GObjObjects()->Data[ 52093 ];

	UNowChildHudDynamicCreature_execUpdateMouseMove_Parms UpdateMouseMove_Parms;
	UpdateMouseMove_Parms.newTurn = newTurn;
	UpdateMouseMove_Parms.newUp = newUp;

	this->ProcessEvent ( pFnUpdateMouseMove, &UpdateMouseMove_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.AddToActiveBtn
// [0x00020002] 
// Parameters infos:
// int                            Add                            ( CPF_Parm )

void UNowChildHudDynamicCreature::AddToActiveBtn ( int Add )
{
	static UFunction* pFnAddToActiveBtn = NULL;

	if ( ! pFnAddToActiveBtn )
		pFnAddToActiveBtn = (UFunction*) UObject::GObjObjects()->Data[ 52091 ];

	UNowChildHudDynamicCreature_execAddToActiveBtn_Parms AddToActiveBtn_Parms;
	AddToActiveBtn_Parms.Add = Add;

	this->ProcessEvent ( pFnAddToActiveBtn, &AddToActiveBtn_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.AddToValue
// [0x00020002] 
// Parameters infos:
// int                            Add                            ( CPF_Parm )

void UNowChildHudDynamicCreature::AddToValue ( int Add )
{
	static UFunction* pFnAddToValue = NULL;

	if ( ! pFnAddToValue )
		pFnAddToValue = (UFunction*) UObject::GObjObjects()->Data[ 52089 ];

	UNowChildHudDynamicCreature_execAddToValue_Parms AddToValue_Parms;
	AddToValue_Parms.Add = Add;

	this->ProcessEvent ( pFnAddToValue, &AddToValue_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.InputTimer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowChildHudDynamicCreature::InputTimer ( )
{
	static UFunction* pFnInputTimer = NULL;

	if ( ! pFnInputTimer )
		pFnInputTimer = (UFunction*) UObject::GObjObjects()->Data[ 52087 ];

	UNowChildHudDynamicCreature_execInputTimer_Parms InputTimer_Parms;

	this->ProcessEvent ( pFnInputTimer, &InputTimer_Parms, NULL );

	return InputTimer_Parms.ReturnValue;
};

// Function NowGame.NowChildHudDynamicCreature.DrawParamBox
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

void UNowChildHudDynamicCreature::DrawParamBox ( class UCanvas* C, int Index )
{
	static UFunction* pFnDrawParamBox = NULL;

	if ( ! pFnDrawParamBox )
		pFnDrawParamBox = (UFunction*) UObject::GObjObjects()->Data[ 52084 ];

	UNowChildHudDynamicCreature_execDrawParamBox_Parms DrawParamBox_Parms;
	DrawParamBox_Parms.C = C;
	DrawParamBox_Parms.Index = Index;

	this->ProcessEvent ( pFnDrawParamBox, &DrawParamBox_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.DrawCollisionCylinder
// [0x00820002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDynamicCreature::DrawCollisionCylinder ( class UCanvas* C )
{
	static UFunction* pFnDrawCollisionCylinder = NULL;

	if ( ! pFnDrawCollisionCylinder )
		pFnDrawCollisionCylinder = (UFunction*) UObject::GObjObjects()->Data[ 52080 ];

	UNowChildHudDynamicCreature_execDrawCollisionCylinder_Parms DrawCollisionCylinder_Parms;
	DrawCollisionCylinder_Parms.C = C;

	this->ProcessEvent ( pFnDrawCollisionCylinder, &DrawCollisionCylinder_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.ActionBarSlot
// [0x00820002] 
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UNowChildHudDynamicCreature::ActionBarSlot ( int iSlot )
{
	static UFunction* pFnActionBarSlot = NULL;

	if ( ! pFnActionBarSlot )
		pFnActionBarSlot = (UFunction*) UObject::GObjObjects()->Data[ 52077 ];

	UNowChildHudDynamicCreature_execActionBarSlot_Parms ActionBarSlot_Parms;
	ActionBarSlot_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnActionBarSlot, &ActionBarSlot_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.DrawChildHud
// [0x00820002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDynamicCreature::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = (UFunction*) UObject::GObjObjects()->Data[ 52072 ];

	UNowChildHudDynamicCreature_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.InitChildHud
// [0x00820002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHudDynamicCreature::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = (UFunction*) UObject::GObjObjects()->Data[ 52068 ];

	UNowChildHudDynamicCreature_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.DrawMessages
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDynamicCreature::DrawMessages ( class UCanvas* C )
{
	static UFunction* pFnDrawMessages = NULL;

	if ( ! pFnDrawMessages )
		pFnDrawMessages = (UFunction*) UObject::GObjObjects()->Data[ 52066 ];

	UNowChildHudDynamicCreature_execDrawMessages_Parms DrawMessages_Parms;
	DrawMessages_Parms.C = C;

	this->ProcessEvent ( pFnDrawMessages, &DrawMessages_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.AddMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudDynamicCreature::AddMessage ( struct FString msg )
{
	static UFunction* pFnAddMessage = NULL;

	if ( ! pFnAddMessage )
		pFnAddMessage = (UFunction*) UObject::GObjObjects()->Data[ 52064 ];

	UNowChildHudDynamicCreature_execAddMessage_Parms AddMessage_Parms;
	memcpy ( &AddMessage_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnAddMessage, &AddMessage_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.FancyShot
// [0x00820002] 
// Parameters infos:

void UNowChildHudDynamicCreature::FancyShot ( )
{
	static UFunction* pFnFancyShot = NULL;

	if ( ! pFnFancyShot )
		pFnFancyShot = (UFunction*) UObject::GObjObjects()->Data[ 52062 ];

	UNowChildHudDynamicCreature_execFancyShot_Parms FancyShot_Parms;

	this->ProcessEvent ( pFnFancyShot, &FancyShot_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.DoFancyStuff
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::DoFancyStuff ( )
{
	static UFunction* pFnDoFancyStuff = NULL;

	if ( ! pFnDoFancyStuff )
		pFnDoFancyStuff = (UFunction*) UObject::GObjObjects()->Data[ 52061 ];

	UNowChildHudDynamicCreature_execDoFancyStuff_Parms DoFancyStuff_Parms;

	this->ProcessEvent ( pFnDoFancyStuff, &DoFancyStuff_Parms, NULL );
};

// Function NowGame.NowChildHudMath.DrawCircle
// [0x00820002] 
// Parameters infos:
// struct FVector                 pos                            ( CPF_Parm )
// float                          area                           ( CPF_Parm )
// int                            R                              ( CPF_Parm )
// int                            G                              ( CPF_Parm )
// int                            B                              ( CPF_Parm )
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudMath::DrawCircle ( struct FVector pos, float area, int R, int G, int B, class UCanvas* C )
{
	static UFunction* pFnDrawCircle = NULL;

	if ( ! pFnDrawCircle )
		pFnDrawCircle = (UFunction*) UObject::GObjObjects()->Data[ 52325 ];

	UNowChildHudMath_execDrawCircle_Parms DrawCircle_Parms;
	memcpy ( &DrawCircle_Parms.pos, &pos, 0xC );
	DrawCircle_Parms.area = area;
	DrawCircle_Parms.R = R;
	DrawCircle_Parms.G = G;
	DrawCircle_Parms.B = B;
	DrawCircle_Parms.C = C;

	this->ProcessEvent ( pFnDrawCircle, &DrawCircle_Parms, NULL );
};

// Function NowGame.NowChildHudMath.CalcArea
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UCanvas*                 C                              ( CPF_Parm )

float UNowChildHudMath::CalcArea ( class UCanvas* C )
{
	static UFunction* pFnCalcArea = NULL;

	if ( ! pFnCalcArea )
		pFnCalcArea = (UFunction*) UObject::GObjObjects()->Data[ 52318 ];

	UNowChildHudMath_execCalcArea_Parms CalcArea_Parms;
	CalcArea_Parms.C = C;

	this->ProcessEvent ( pFnCalcArea, &CalcArea_Parms, NULL );

	return CalcArea_Parms.ReturnValue;
};

// Function NowGame.NowChildHudMath.MonteCarloCalc
// [0x00820002] 
// Parameters infos:

void UNowChildHudMath::MonteCarloCalc ( )
{
	static UFunction* pFnMonteCarloCalc = NULL;

	if ( ! pFnMonteCarloCalc )
		pFnMonteCarloCalc = (UFunction*) UObject::GObjObjects()->Data[ 52309 ];

	UNowChildHudMath_execMonteCarloCalc_Parms MonteCarloCalc_Parms;

	this->ProcessEvent ( pFnMonteCarloCalc, &MonteCarloCalc_Parms, NULL );
};

// Function NowGame.NowChildHudMath.ResetMonteCarloCalc
// [0x00020002] 
// Parameters infos:
// int                            NrTest                         ( CPF_Parm )

void UNowChildHudMath::ResetMonteCarloCalc ( int NrTest )
{
	static UFunction* pFnResetMonteCarloCalc = NULL;

	if ( ! pFnResetMonteCarloCalc )
		pFnResetMonteCarloCalc = (UFunction*) UObject::GObjObjects()->Data[ 52307 ];

	UNowChildHudMath_execResetMonteCarloCalc_Parms ResetMonteCarloCalc_Parms;
	ResetMonteCarloCalc_Parms.NrTest = NrTest;

	this->ProcessEvent ( pFnResetMonteCarloCalc, &ResetMonteCarloCalc_Parms, NULL );
};

// Function NowGame.NowChildHudMath.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudMath::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = (UFunction*) UObject::GObjObjects()->Data[ 52305 ];

	UNowChildHudMath_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.RHoldTab
// [0x00020000] 
// Parameters infos:

void UNowChildHudProjectile::RHoldTab ( )
{
	static UFunction* pFnRHoldTab = NULL;

	if ( ! pFnRHoldTab )
		pFnRHoldTab = (UFunction*) UObject::GObjObjects()->Data[ 52376 ];

	UNowChildHudProjectile_execRHoldTab_Parms RHoldTab_Parms;

	this->ProcessEvent ( pFnRHoldTab, &RHoldTab_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.ToggleCombatMode
// [0x00020002] 
// Parameters infos:

void UNowChildHudProjectile::ToggleCombatMode ( )
{
	static UFunction* pFnToggleCombatMode = NULL;

	if ( ! pFnToggleCombatMode )
		pFnToggleCombatMode = (UFunction*) UObject::GObjObjects()->Data[ 52375 ];

	UNowChildHudProjectile_execToggleCombatMode_Parms ToggleCombatMode_Parms;

	this->ProcessEvent ( pFnToggleCombatMode, &ToggleCombatMode_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.SprintOn
// [0x00020000] 
// Parameters infos:

void UNowChildHudProjectile::SprintOn ( )
{
	static UFunction* pFnSprintOn = NULL;

	if ( ! pFnSprintOn )
		pFnSprintOn = (UFunction*) UObject::GObjObjects()->Data[ 52374 ];

	UNowChildHudProjectile_execSprintOn_Parms SprintOn_Parms;

	this->ProcessEvent ( pFnSprintOn, &SprintOn_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.StopAltFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudProjectile::StopAltFire ( )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = (UFunction*) UObject::GObjObjects()->Data[ 52373 ];

	UNowChildHudProjectile_execStopAltFire_Parms StopAltFire_Parms;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.StartAltFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudProjectile::StartAltFire ( )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = (UFunction*) UObject::GObjObjects()->Data[ 52372 ];

	UNowChildHudProjectile_execStartAltFire_Parms StartAltFire_Parms;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.StopFire
// [0x00020002] 
// Parameters infos:

void UNowChildHudProjectile::StopFire ( )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 52371 ];

	UNowChildHudProjectile_execStopFire_Parms StopFire_Parms;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.StartFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudProjectile::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 52370 ];

	UNowChildHudProjectile_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.UpdateMouseMove
// [0x00820002] 
// Parameters infos:
// float                          newTurn                        ( CPF_Parm )
// float                          newUp                          ( CPF_Parm )

void UNowChildHudProjectile::UpdateMouseMove ( float newTurn, float newUp )
{
	static UFunction* pFnUpdateMouseMove = NULL;

	if ( ! pFnUpdateMouseMove )
		pFnUpdateMouseMove = (UFunction*) UObject::GObjObjects()->Data[ 52363 ];

	UNowChildHudProjectile_execUpdateMouseMove_Parms UpdateMouseMove_Parms;
	UpdateMouseMove_Parms.newTurn = newTurn;
	UpdateMouseMove_Parms.newUp = newUp;

	this->ProcessEvent ( pFnUpdateMouseMove, &UpdateMouseMove_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.AddToActiveBtn
// [0x00020002] 
// Parameters infos:
// int                            Add                            ( CPF_Parm )

void UNowChildHudProjectile::AddToActiveBtn ( int Add )
{
	static UFunction* pFnAddToActiveBtn = NULL;

	if ( ! pFnAddToActiveBtn )
		pFnAddToActiveBtn = (UFunction*) UObject::GObjObjects()->Data[ 52361 ];

	UNowChildHudProjectile_execAddToActiveBtn_Parms AddToActiveBtn_Parms;
	AddToActiveBtn_Parms.Add = Add;

	this->ProcessEvent ( pFnAddToActiveBtn, &AddToActiveBtn_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.AddToValue
// [0x00020002] 
// Parameters infos:
// int                            Add                            ( CPF_Parm )

void UNowChildHudProjectile::AddToValue ( int Add )
{
	static UFunction* pFnAddToValue = NULL;

	if ( ! pFnAddToValue )
		pFnAddToValue = (UFunction*) UObject::GObjObjects()->Data[ 52359 ];

	UNowChildHudProjectile_execAddToValue_Parms AddToValue_Parms;
	AddToValue_Parms.Add = Add;

	this->ProcessEvent ( pFnAddToValue, &AddToValue_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.InputTimer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowChildHudProjectile::InputTimer ( )
{
	static UFunction* pFnInputTimer = NULL;

	if ( ! pFnInputTimer )
		pFnInputTimer = (UFunction*) UObject::GObjObjects()->Data[ 52357 ];

	UNowChildHudProjectile_execInputTimer_Parms InputTimer_Parms;

	this->ProcessEvent ( pFnInputTimer, &InputTimer_Parms, NULL );

	return InputTimer_Parms.ReturnValue;
};

// Function NowGame.NowChildHudProjectile.DrawParamBox
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

void UNowChildHudProjectile::DrawParamBox ( class UCanvas* C, int Index )
{
	static UFunction* pFnDrawParamBox = NULL;

	if ( ! pFnDrawParamBox )
		pFnDrawParamBox = (UFunction*) UObject::GObjObjects()->Data[ 52354 ];

	UNowChildHudProjectile_execDrawParamBox_Parms DrawParamBox_Parms;
	DrawParamBox_Parms.C = C;
	DrawParamBox_Parms.Index = Index;

	this->ProcessEvent ( pFnDrawParamBox, &DrawParamBox_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.ActionBarSlot
// [0x00020002] 
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UNowChildHudProjectile::ActionBarSlot ( int iSlot )
{
	static UFunction* pFnActionBarSlot = NULL;

	if ( ! pFnActionBarSlot )
		pFnActionBarSlot = (UFunction*) UObject::GObjObjects()->Data[ 52352 ];

	UNowChildHudProjectile_execActionBarSlot_Parms ActionBarSlot_Parms;
	ActionBarSlot_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnActionBarSlot, &ActionBarSlot_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudProjectile::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = (UFunction*) UObject::GObjObjects()->Data[ 52349 ];

	UNowChildHudProjectile_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.SpawnProjectile
// [0x00020002] 
// Parameters infos:

void UNowChildHudProjectile::SpawnProjectile ( )
{
	static UFunction* pFnSpawnProjectile = NULL;

	if ( ! pFnSpawnProjectile )
		pFnSpawnProjectile = (UFunction*) UObject::GObjObjects()->Data[ 52343 ];

	UNowChildHudProjectile_execSpawnProjectile_Parms SpawnProjectile_Parms;

	this->ProcessEvent ( pFnSpawnProjectile, &SpawnProjectile_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.InitChildHud
// [0x00020002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHudProjectile::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = (UFunction*) UObject::GObjObjects()->Data[ 52341 ];

	UNowChildHudProjectile_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.NowProjectileBase.DidImpact
// [0x00020002] 
// Parameters infos:

void ANowProjectileBase::DidImpact ( )
{
	static UFunction* pFnDidImpact = NULL;

	if ( ! pFnDidImpact )
		pFnDidImpact = (UFunction*) UObject::GObjObjects()->Data[ 58899 ];

	ANowProjectileBase_execDidImpact_Parms DidImpact_Parms;

	this->ProcessEvent ( pFnDidImpact, &DidImpact_Parms, NULL );
};

// Function NowGame.NowProjectileBase.TickMainParticles
// [0x00020000] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowProjectileBase::TickMainParticles ( float DT )
{
	static UFunction* pFnTickMainParticles = NULL;

	if ( ! pFnTickMainParticles )
		pFnTickMainParticles = (UFunction*) UObject::GObjObjects()->Data[ 58897 ];

	ANowProjectileBase_execTickMainParticles_Parms TickMainParticles_Parms;
	TickMainParticles_Parms.DT = DT;

	this->ProcessEvent ( pFnTickMainParticles, &TickMainParticles_Parms, NULL );
};

// Function NowGame.NowProjectileBase.TickInitParticles
// [0x00020000] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowProjectileBase::TickInitParticles ( float DT )
{
	static UFunction* pFnTickInitParticles = NULL;

	if ( ! pFnTickInitParticles )
		pFnTickInitParticles = (UFunction*) UObject::GObjObjects()->Data[ 58895 ];

	ANowProjectileBase_execTickInitParticles_Parms TickInitParticles_Parms;
	TickInitParticles_Parms.DT = DT;

	this->ProcessEvent ( pFnTickInitParticles, &TickInitParticles_Parms, NULL );
};

// Function NowGame.NowProjectileBase.TickTrails
// [0x00020000] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowProjectileBase::TickTrails ( float DT )
{
	static UFunction* pFnTickTrails = NULL;

	if ( ! pFnTickTrails )
		pFnTickTrails = (UFunction*) UObject::GObjObjects()->Data[ 58893 ];

	ANowProjectileBase_execTickTrails_Parms TickTrails_Parms;
	TickTrails_Parms.DT = DT;

	this->ProcessEvent ( pFnTickTrails, &TickTrails_Parms, NULL );
};

// Function NowGame.NowProjectileBase.TickRot
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowProjectileBase::TickRot ( float DT )
{
	static UFunction* pFnTickRot = NULL;

	if ( ! pFnTickRot )
		pFnTickRot = (UFunction*) UObject::GObjObjects()->Data[ 58891 ];

	ANowProjectileBase_execTickRot_Parms TickRot_Parms;
	TickRot_Parms.DT = DT;

	this->ProcessEvent ( pFnTickRot, &TickRot_Parms, NULL );
};

// Function NowGame.NowProjectileBase.TickVel
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowProjectileBase::TickVel ( float DT )
{
	static UFunction* pFnTickVel = NULL;

	if ( ! pFnTickVel )
		pFnTickVel = (UFunction*) UObject::GObjObjects()->Data[ 58888 ];

	ANowProjectileBase_execTickVel_Parms TickVel_Parms;
	TickVel_Parms.DT = DT;

	this->ProcessEvent ( pFnTickVel, &TickVel_Parms, NULL );
};

// Function NowGame.NowProjectileBase.GetDist
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowProjectileBase::GetDist ( )
{
	static UFunction* pFnGetDist = NULL;

	if ( ! pFnGetDist )
		pFnGetDist = (UFunction*) UObject::GObjObjects()->Data[ 58886 ];

	ANowProjectileBase_execGetDist_Parms GetDist_Parms;

	this->ProcessEvent ( pFnGetDist, &GetDist_Parms, NULL );

	return GetDist_Parms.ReturnValue;
};

// Function NowGame.NowProjectileBase.Tick
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowProjectileBase::Tick ( float DT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 58884 ];

	ANowProjectileBase_execTick_Parms Tick_Parms;
	Tick_Parms.DT = DT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowProjectileBase.InitProjectile
// [0x00020002] 
// Parameters infos:
// float                          FlySpeed                       ( CPF_Parm )

void ANowProjectileBase::InitProjectile ( float FlySpeed )
{
	static UFunction* pFnInitProjectile = NULL;

	if ( ! pFnInitProjectile )
		pFnInitProjectile = (UFunction*) UObject::GObjObjects()->Data[ 58881 ];

	ANowProjectileBase_execInitProjectile_Parms InitProjectile_Parms;
	InitProjectile_Parms.FlySpeed = FlySpeed;

	this->ProcessEvent ( pFnInitProjectile, &InitProjectile_Parms, NULL );
};

// Function NowGame.NowClientDoor.closeDoor
// [0x00020002] 
// Parameters infos:

void ANowClientDoor::closeDoor ( )
{
	static UFunction* pFncloseDoor = NULL;

	if ( ! pFncloseDoor )
		pFncloseDoor = (UFunction*) UObject::GObjObjects()->Data[ 52382 ];

	ANowClientDoor_execcloseDoor_Parms closeDoor_Parms;

	this->ProcessEvent ( pFncloseDoor, &closeDoor_Parms, NULL );
};

// Function NowGame.NowClientDoor.openDoor
// [0x00020002] 
// Parameters infos:

void ANowClientDoor::openDoor ( )
{
	static UFunction* pFnopenDoor = NULL;

	if ( ! pFnopenDoor )
		pFnopenDoor = (UFunction*) UObject::GObjObjects()->Data[ 52381 ];

	ANowClientDoor_execopenDoor_Parms openDoor_Parms;

	this->ProcessEvent ( pFnopenDoor, &openDoor_Parms, NULL );
};

// Function NowGame.NowClientDoor.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowClientDoor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 52380 ];

	ANowClientDoor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowEffectMeatChunk.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowEffectMeatChunk::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 52598 ];

	ANowEffectMeatChunk_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowEffectMeatChunk.HitWall
// [0x00020922] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ANowEffectMeatChunk::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 52594 ];

	ANowEffectMeatChunk_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function NowGame.NowEffectMeatChunk.RandSpin
// [0x00020103] ( FUNC_Final )
// Parameters infos:
// float                          spinRate                       ( CPF_Parm )

void ANowEffectMeatChunk::RandSpin ( float spinRate )
{
	static UFunction* pFnRandSpin = NULL;

	if ( ! pFnRandSpin )
		pFnRandSpin = (UFunction*) UObject::GObjObjects()->Data[ 52592 ];

	ANowEffectMeatChunk_execRandSpin_Parms RandSpin_Parms;
	RandSpin_Parms.spinRate = spinRate;

	this->ProcessEvent ( pFnRandSpin, &RandSpin_Parms, NULL );
};

// Function NowGame.NowEffectMeatChunk.Init
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ANowEffectMeatChunk::Init ( struct FVector Direction )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 52590 ];

	ANowEffectMeatChunk_execInit_Parms Init_Parms;
	memcpy ( &Init_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.UIInfoTalkerGuildSentinel.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerGuildSentinel::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60860 ];

	UUIInfoTalkerGuildSentinel_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerStoneCutter.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerStoneCutter::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60898 ];

	UUIInfoTalkerStoneCutter_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerMiner.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerMiner::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60864 ];

	UUIInfoTalkerMiner_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerTerritoryVendor.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerTerritoryVendor::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60932 ];

	UUIInfoTalkerTerritoryVendor_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerTerritoryLibrary.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerTerritoryLibrary::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = (UFunction*) UObject::GObjObjects()->Data[ 60929 ];

	UUIInfoTalkerTerritoryLibrary_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.NowLoginDecorationActor.DeSelect
// [0x00020002] 
// Parameters infos:

void ANowLoginDecorationActor::DeSelect ( )
{
	static UFunction* pFnDeSelect = NULL;

	if ( ! pFnDeSelect )
		pFnDeSelect = (UFunction*) UObject::GObjObjects()->Data[ 56616 ];

	ANowLoginDecorationActor_execDeSelect_Parms DeSelect_Parms;

	this->ProcessEvent ( pFnDeSelect, &DeSelect_Parms, NULL );
};

// Function NowGame.NowLoginDecorationActor.Select
// [0x00020002] 
// Parameters infos:

void ANowLoginDecorationActor::Select ( )
{
	static UFunction* pFnSelect = NULL;

	if ( ! pFnSelect )
		pFnSelect = (UFunction*) UObject::GObjObjects()->Data[ 56615 ];

	ANowLoginDecorationActor_execSelect_Parms Select_Parms;

	this->ProcessEvent ( pFnSelect, &Select_Parms, NULL );
};

// Function NowGame.NowLoginDecorationActor.SetFlag
// [0x00020002] 
// Parameters infos:
// int                            iFlag                          ( CPF_Parm )

void ANowLoginDecorationActor::SetFlag ( int iFlag )
{
	static UFunction* pFnSetFlag = NULL;

	if ( ! pFnSetFlag )
		pFnSetFlag = (UFunction*) UObject::GObjObjects()->Data[ 56613 ];

	ANowLoginDecorationActor_execSetFlag_Parms SetFlag_Parms;
	SetFlag_Parms.iFlag = iFlag;

	this->ProcessEvent ( pFnSetFlag, &SetFlag_Parms, NULL );
};

// Function NowGame.NowMusicBank.FindMusicManager
// [0x00020002] 
// Parameters infos:

void ANowMusicBank::FindMusicManager ( )
{
	static UFunction* pFnFindMusicManager = NULL;

	if ( ! pFnFindMusicManager )
		pFnFindMusicManager = (UFunction*) UObject::GObjObjects()->Data[ 56681 ];

	ANowMusicBank_execFindMusicManager_Parms FindMusicManager_Parms;

	this->ProcessEvent ( pFnFindMusicManager, &FindMusicManager_Parms, NULL );
};

// Function NowGame.NowMusicBank.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowMusicBank::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56680 ];

	ANowMusicBank_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowPhysManager.AddToManager
// [0x00020002] 
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )

void UNowPhysManager::AddToManager ( class AActor* WhatActor )
{
	static UFunction* pFnAddToManager = NULL;

	if ( ! pFnAddToManager )
		pFnAddToManager = (UFunction*) UObject::GObjObjects()->Data[ 57444 ];

	UNowPhysManager_execAddToManager_Parms AddToManager_Parms;
	AddToManager_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnAddToManager, &AddToManager_Parms, NULL );
};

// Function NowGame.NowPhysManager.SortDel
// [0x00920002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )
// class AActor*                  B                              ( CPF_Parm )

int UNowPhysManager::SortDel ( class AActor* A, class AActor* B )
{
	static UFunction* pFnSortDel = NULL;

	if ( ! pFnSortDel )
		pFnSortDel = (UFunction*) UObject::GObjObjects()->Data[ 57434 ];

	UNowPhysManager_execSortDel_Parms SortDel_Parms;
	SortDel_Parms.A = A;
	SortDel_Parms.B = B;

	this->ProcessEvent ( pFnSortDel, &SortDel_Parms, NULL );

	return SortDel_Parms.ReturnValue;
};

// Function NowGame.NowPhysManager.TickManager
// [0x00020002] 
// Parameters infos:

void UNowPhysManager::TickManager ( )
{
	static UFunction* pFnTickManager = NULL;

	if ( ! pFnTickManager )
		pFnTickManager = (UFunction*) UObject::GObjObjects()->Data[ 57437 ];

	UNowPhysManager_execTickManager_Parms TickManager_Parms;

	this->ProcessEvent ( pFnTickManager, &TickManager_Parms, NULL );
};

// Function NowGame.NowPhysManager.InitManager
// [0x00020002] 
// Parameters infos:

void UNowPhysManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = (UFunction*) UObject::GObjObjects()->Data[ 57436 ];

	UNowPhysManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorRelicBeaconImpact.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowStaticMeshActorRelicBeaconImpact::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 59540 ];

	ANowStaticMeshActorRelicBeaconImpact_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowTempleSpot.ReturnPosition
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowTempleSpot::ReturnPosition ( )
{
	static UFunction* pFnReturnPosition = NULL;

	if ( ! pFnReturnPosition )
		pFnReturnPosition = (UFunction*) UObject::GObjObjects()->Data[ 59688 ];

	ANowTempleSpot_execReturnPosition_Parms ReturnPosition_Parms;

	this->ProcessEvent ( pFnReturnPosition, &ReturnPosition_Parms, NULL );

	return ReturnPosition_Parms.ReturnValue;
};

// Function NowGame.NowUFO.Timer
// [0x00020102] 
// Parameters infos:

void ANowUFO::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 59706 ];

	ANowUFO_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function NowGame.NowUFO.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowUFO::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 59705 ];

	ANowUFO_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowUFO.setUFOLocation
// [0x00020000] 
// Parameters infos:
// struct FVector                 UFOLoc                         ( CPF_Parm )

void ANowUFO::setUFOLocation ( struct FVector UFOLoc )
{
	static UFunction* pFnsetUFOLocation = NULL;

	if ( ! pFnsetUFOLocation )
		pFnsetUFOLocation = (UFunction*) UObject::GObjObjects()->Data[ 59703 ];

	ANowUFO_execsetUFOLocation_Parms setUFOLocation_Parms;
	memcpy ( &setUFOLocation_Parms.UFOLoc, &UFOLoc, 0xC );

	this->ProcessEvent ( pFnsetUFOLocation, &setUFOLocation_Parms, NULL );
};

// Function NowGame.NowUFO.HitWall
// [0x00020922] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ANowUFO::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 59699 ];

	ANowUFO_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function NowGame.NowUFO.SetTossVelocity
// [0x00020002] 
// Parameters infos:
// struct FVector                 TossVelocity                   ( CPF_Parm )

void ANowUFO::SetTossVelocity ( struct FVector TossVelocity )
{
	static UFunction* pFnSetTossVelocity = NULL;

	if ( ! pFnSetTossVelocity )
		pFnSetTossVelocity = (UFunction*) UObject::GObjObjects()->Data[ 59697 ];

	ANowUFO_execSetTossVelocity_Parms SetTossVelocity_Parms;
	memcpy ( &SetTossVelocity_Parms.TossVelocity, &TossVelocity, 0xC );

	this->ProcessEvent ( pFnSetTossVelocity, &SetTossVelocity_Parms, NULL );
};

// Function NowGame.NowUFO.SpawnTrailFX
// [0x00020002] 
// Parameters infos:

void ANowUFO::SpawnTrailFX ( )
{
	static UFunction* pFnSpawnTrailFX = NULL;

	if ( ! pFnSpawnTrailFX )
		pFnSpawnTrailFX = (UFunction*) UObject::GObjObjects()->Data[ 59696 ];

	ANowUFO_execSpawnTrailFX_Parms SpawnTrailFX_Parms;

	this->ProcessEvent ( pFnSpawnTrailFX, &SpawnTrailFX_Parms, NULL );
};

// Function NowGame.NowUFO.SetInitialState
// [0x00020102] 
// Parameters infos:

void ANowUFO::SetInitialState ( )
{
	static UFunction* pFnSetInitialState = NULL;

	if ( ! pFnSetInitialState )
		pFnSetInitialState = (UFunction*) UObject::GObjObjects()->Data[ 59695 ];

	ANowUFO_execSetInitialState_Parms SetInitialState_Parms;

	this->ProcessEvent ( pFnSetInitialState, &SetInitialState_Parms, NULL );
};

// Function NowGame.NowUnCoolSpotVolume.MoveToSafeSpot
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )

void ANowUnCoolSpotVolume::eventMoveToSafeSpot ( class AActor* WhatActor )
{
	static UFunction* pFnMoveToSafeSpot = NULL;

	if ( ! pFnMoveToSafeSpot )
		pFnMoveToSafeSpot = (UFunction*) UObject::GObjObjects()->Data[ 59721 ];

	ANowUnCoolSpotVolume_eventMoveToSafeSpot_Parms MoveToSafeSpot_Parms;
	MoveToSafeSpot_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnMoveToSafeSpot, &MoveToSafeSpot_Parms, NULL );
};

// Function NowGame.NowUnCoolSpotVolume.PawnEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ANowUnCoolSpotVolume::eventPawnEnteredVolume ( class APawn* Other )
{
	static UFunction* pFnPawnEnteredVolume = NULL;

	if ( ! pFnPawnEnteredVolume )
		pFnPawnEnteredVolume = (UFunction*) UObject::GObjObjects()->Data[ 59719 ];

	ANowUnCoolSpotVolume_eventPawnEnteredVolume_Parms PawnEnteredVolume_Parms;
	PawnEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnEnteredVolume, &PawnEnteredVolume_Parms, NULL );
};

// Function NowGame.NowUnCoolSpotVolume.ActorEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowUnCoolSpotVolume::eventActorEnteredVolume ( class AActor* Other )
{
	static UFunction* pFnActorEnteredVolume = NULL;

	if ( ! pFnActorEnteredVolume )
		pFnActorEnteredVolume = (UFunction*) UObject::GObjObjects()->Data[ 59717 ];

	ANowUnCoolSpotVolume_eventActorEnteredVolume_Parms ActorEnteredVolume_Parms;
	ActorEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorEnteredVolume, &ActorEnteredVolume_Parms, NULL );
};

// Function NowGame.NowUnCoolSpotVolume.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowUnCoolSpotVolume::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 59712 ];

	ANowUnCoolSpotVolume_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.NowVolumeContinentTeleport.ActorEnteredVolume
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumeContinentTeleport::eventActorEnteredVolume ( class AActor* Other )
{
	static UFunction* pFnActorEnteredVolume = NULL;

	if ( ! pFnActorEnteredVolume )
		pFnActorEnteredVolume = (UFunction*) UObject::GObjObjects()->Data[ 59735 ];

	ANowVolumeContinentTeleport_eventActorEnteredVolume_Parms ActorEnteredVolume_Parms;
	ActorEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorEnteredVolume, &ActorEnteredVolume_Parms, NULL );
};

// Function NowGame.NowVolumeContinentTeleport.PawnEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ANowVolumeContinentTeleport::eventPawnEnteredVolume ( class APawn* Other )
{
	static UFunction* pFnPawnEnteredVolume = NULL;

	if ( ! pFnPawnEnteredVolume )
		pFnPawnEnteredVolume = (UFunction*) UObject::GObjObjects()->Data[ 59733 ];

	ANowVolumeContinentTeleport_eventPawnEnteredVolume_Parms PawnEnteredVolume_Parms;
	PawnEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnEnteredVolume, &PawnEnteredVolume_Parms, NULL );
};

// Function NowGame.NowVolumeDamage.DealDamage
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    DamageTaker                    ( CPF_Parm )

void ANowVolumeDamage::DealDamage ( class ANowPlayerController* DamageTaker )
{
	static UFunction* pFnDealDamage = NULL;

	if ( ! pFnDealDamage )
		pFnDealDamage = (UFunction*) UObject::GObjObjects()->Data[ 59758 ];

	ANowVolumeDamage_execDealDamage_Parms DealDamage_Parms;
	DealDamage_Parms.DamageTaker = DamageTaker;

	this->ProcessEvent ( pFnDealDamage, &DealDamage_Parms, NULL );
};

// Function NowGame.NowVolumeDamage.MovePlayer
// [0x00820002] 
// Parameters infos:

void ANowVolumeDamage::MovePlayer ( )
{
	static UFunction* pFnMovePlayer = NULL;

	if ( ! pFnMovePlayer )
		pFnMovePlayer = (UFunction*) UObject::GObjObjects()->Data[ 59756 ];

	ANowVolumeDamage_execMovePlayer_Parms MovePlayer_Parms;

	this->ProcessEvent ( pFnMovePlayer, &MovePlayer_Parms, NULL );
};

// Function NowGame.NowVolumeDamage.ActorEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumeDamage::eventActorEnteredVolume ( class AActor* Other )
{
	static UFunction* pFnActorEnteredVolume = NULL;

	if ( ! pFnActorEnteredVolume )
		pFnActorEnteredVolume = (UFunction*) UObject::GObjObjects()->Data[ 59754 ];

	ANowVolumeDamage_eventActorEnteredVolume_Parms ActorEnteredVolume_Parms;
	ActorEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorEnteredVolume, &ActorEnteredVolume_Parms, NULL );
};

// Function NowGame.NowVolumeDamage.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowVolumeDamage::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 59749 ];

	ANowVolumeDamage_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.NowVolumePostProcess.ActorLeavingVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumePostProcess::eventActorLeavingVolume ( class AActor* Other )
{
	static UFunction* pFnActorLeavingVolume = NULL;

	if ( ! pFnActorLeavingVolume )
		pFnActorLeavingVolume = (UFunction*) UObject::GObjObjects()->Data[ 59780 ];

	ANowVolumePostProcess_eventActorLeavingVolume_Parms ActorLeavingVolume_Parms;
	ActorLeavingVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorLeavingVolume, &ActorLeavingVolume_Parms, NULL );
};

// Function NowGame.NowVolumePostProcess.ActorEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumePostProcess::eventActorEnteredVolume ( class AActor* Other )
{
	static UFunction* pFnActorEnteredVolume = NULL;

	if ( ! pFnActorEnteredVolume )
		pFnActorEnteredVolume = (UFunction*) UObject::GObjObjects()->Data[ 59778 ];

	ANowVolumePostProcess_eventActorEnteredVolume_Parms ActorEnteredVolume_Parms;
	ActorEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorEnteredVolume, &ActorEnteredVolume_Parms, NULL );
};

// Function NowGame.NowVolumePostProcess.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowVolumePostProcess::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 59773 ];

	ANowVolumePostProcess_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.PathNodePoop.LogMe
// [0x00020000] 
// Parameters infos:
// int                            MyNumber                       ( CPF_Parm )

void APathNodePoop::LogMe ( int MyNumber )
{
	static UFunction* pFnLogMe = NULL;

	if ( ! pFnLogMe )
		pFnLogMe = (UFunction*) UObject::GObjObjects()->Data[ 60669 ];

	APathNodePoop_execLogMe_Parms LogMe_Parms;
	LogMe_Parms.MyNumber = MyNumber;

	this->ProcessEvent ( pFnLogMe, &LogMe_Parms, NULL );
};

// Function NowGame.PathNodePoop.MoveToGround
// [0x00824002] 
// Parameters infos:
// struct FName                   WhatMeshName                   ( CPF_OptionalParm | CPF_Parm )

void APathNodePoop::MoveToGround ( struct FName WhatMeshName )
{
	static UFunction* pFnMoveToGround = NULL;

	if ( ! pFnMoveToGround )
		pFnMoveToGround = (UFunction*) UObject::GObjObjects()->Data[ 60661 ];

	APathNodePoop_execMoveToGround_Parms MoveToGround_Parms;
	memcpy ( &MoveToGround_Parms.WhatMeshName, &WhatMeshName, 0x8 );

	this->ProcessEvent ( pFnMoveToGround, &MoveToGround_Parms, NULL );
};


#ifdef _MSC_VER
	#pragma pack ( pop )
#endif