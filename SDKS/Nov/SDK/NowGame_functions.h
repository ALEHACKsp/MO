/*
#############################################################################################
# Mortal Online (1.71.00.04) SDK
# Generated with TheFeckless UE3 SDK Generator v1.4_Beta-Rev.51
# ========================================================================================= #
# File: NowGame_functions.h
# ========================================================================================= #
# Credits: uNrEaL, Tamimego, SystemFiles, R00T88, _silencer, the1domo, K@N@VEL
# Thanks: HOOAH07, lowHertz
# Forums: www.uc-forum.com, www.gamedeception.net
#############################################################################################
*/

#ifdef _MSC_VER
	#pragma pack ( push, 0x4 )
#endif

/*
# ========================================================================================= #
# Functions
# ========================================================================================= #
*/

// Function NowGame.AnimNodeBlendByMountRotation.GetPlayerController
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* UAnimNodeBlendByMountRotation::GetPlayerController ( )
{
	static UFunction* pFnGetPlayerController = NULL;

	if ( ! pFnGetPlayerController )
		pFnGetPlayerController = UObject::FindObject< UFunction > ( "Function NowGame.AnimNodeBlendByMountRotation.GetPlayerController" );

	UAnimNodeBlendByMountRotation_execGetPlayerController_Parms GetPlayerController_Parms;

	pFnGetPlayerController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerController, &GetPlayerController_Parms, NULL );

	pFnGetPlayerController->FunctionFlags |= 0x400;

	return GetPlayerController_Parms.ReturnValue;
};

// Function NowGame.AnimNodeBlendByMountRotation.GetPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* UAnimNodeBlendByMountRotation::GetPawn ( )
{
	static UFunction* pFnGetPawn = NULL;

	if ( ! pFnGetPawn )
		pFnGetPawn = UObject::FindObject< UFunction > ( "Function NowGame.AnimNodeBlendByMountRotation.GetPawn" );

	UAnimNodeBlendByMountRotation_execGetPawn_Parms GetPawn_Parms;

	pFnGetPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPawn, &GetPawn_Parms, NULL );

	pFnGetPawn->FunctionFlags |= 0x400;

	return GetPawn_Parms.ReturnValue;
};

// Function NowGame.AnimNodeBlendByMountRotation.GetAtlasAvatar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarAiDynamicMount* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarAiDynamicMount* UAnimNodeBlendByMountRotation::GetAtlasAvatar ( )
{
	static UFunction* pFnGetAtlasAvatar = NULL;

	if ( ! pFnGetAtlasAvatar )
		pFnGetAtlasAvatar = UObject::FindObject< UFunction > ( "Function NowGame.AnimNodeBlendByMountRotation.GetAtlasAvatar" );

	UAnimNodeBlendByMountRotation_execGetAtlasAvatar_Parms GetAtlasAvatar_Parms;

	pFnGetAtlasAvatar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasAvatar, &GetAtlasAvatar_Parms, NULL );

	pFnGetAtlasAvatar->FunctionFlags |= 0x400;

	return GetAtlasAvatar_Parms.ReturnValue;
};

// Function NowGame.AnimNodeBlendByMountRotation.SetActiveChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ChildIndex                     ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )

void UAnimNodeBlendByMountRotation::SetActiveChild ( int ChildIndex, float BlendTime )
{
	static UFunction* pFnSetActiveChild = NULL;

	if ( ! pFnSetActiveChild )
		pFnSetActiveChild = UObject::FindObject< UFunction > ( "Function NowGame.AnimNodeBlendByMountRotation.SetActiveChild" );

	UAnimNodeBlendByMountRotation_execSetActiveChild_Parms SetActiveChild_Parms;
	SetActiveChild_Parms.ChildIndex = ChildIndex;
	SetActiveChild_Parms.BlendTime = BlendTime;

	pFnSetActiveChild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveChild, &SetActiveChild_Parms, NULL );

	pFnSetActiveChild->FunctionFlags |= 0x400;
};

// Function NowGame.AnimNodeBlendBySpeedMount.GetPlayerController
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* UAnimNodeBlendBySpeedMount::GetPlayerController ( )
{
	static UFunction* pFnGetPlayerController = NULL;

	if ( ! pFnGetPlayerController )
		pFnGetPlayerController = UObject::FindObject< UFunction > ( "Function NowGame.AnimNodeBlendBySpeedMount.GetPlayerController" );

	UAnimNodeBlendBySpeedMount_execGetPlayerController_Parms GetPlayerController_Parms;

	pFnGetPlayerController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerController, &GetPlayerController_Parms, NULL );

	pFnGetPlayerController->FunctionFlags |= 0x400;

	return GetPlayerController_Parms.ReturnValue;
};

// Function NowGame.AnimNodeBlendBySpeedMount.GetPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* UAnimNodeBlendBySpeedMount::GetPawn ( )
{
	static UFunction* pFnGetPawn = NULL;

	if ( ! pFnGetPawn )
		pFnGetPawn = UObject::FindObject< UFunction > ( "Function NowGame.AnimNodeBlendBySpeedMount.GetPawn" );

	UAnimNodeBlendBySpeedMount_execGetPawn_Parms GetPawn_Parms;

	pFnGetPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPawn, &GetPawn_Parms, NULL );

	pFnGetPawn->FunctionFlags |= 0x400;

	return GetPawn_Parms.ReturnValue;
};

// Function NowGame.AnimNodeBlendBySpeedMount.GetAtlasAvatar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarAiDynamicMount* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarAiDynamicMount* UAnimNodeBlendBySpeedMount::GetAtlasAvatar ( )
{
	static UFunction* pFnGetAtlasAvatar = NULL;

	if ( ! pFnGetAtlasAvatar )
		pFnGetAtlasAvatar = UObject::FindObject< UFunction > ( "Function NowGame.AnimNodeBlendBySpeedMount.GetAtlasAvatar" );

	UAnimNodeBlendBySpeedMount_execGetAtlasAvatar_Parms GetAtlasAvatar_Parms;

	pFnGetAtlasAvatar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasAvatar, &GetAtlasAvatar_Parms, NULL );

	pFnGetAtlasAvatar->FunctionFlags |= 0x400;

	return GetAtlasAvatar_Parms.ReturnValue;
};

// Function NowGame.AnimNodeBlendBySpeedMount.SetActiveChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ChildIndex                     ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )

void UAnimNodeBlendBySpeedMount::SetActiveChild ( int ChildIndex, float BlendTime )
{
	static UFunction* pFnSetActiveChild = NULL;

	if ( ! pFnSetActiveChild )
		pFnSetActiveChild = UObject::FindObject< UFunction > ( "Function NowGame.AnimNodeBlendBySpeedMount.SetActiveChild" );

	UAnimNodeBlendBySpeedMount_execSetActiveChild_Parms SetActiveChild_Parms;
	SetActiveChild_Parms.ChildIndex = ChildIndex;
	SetActiveChild_Parms.BlendTime = BlendTime;

	pFnSetActiveChild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveChild, &SetActiveChild_Parms, NULL );

	pFnSetActiveChild->FunctionFlags |= 0x400;
};

// Function NowGame.AnimNodeBlendListInteractionAi.SetActiveChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ChildIndex                     ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )

void UAnimNodeBlendListInteractionAi::SetActiveChild ( int ChildIndex, float BlendTime )
{
	static UFunction* pFnSetActiveChild = NULL;

	if ( ! pFnSetActiveChild )
		pFnSetActiveChild = UObject::FindObject< UFunction > ( "Function NowGame.AnimNodeBlendListInteractionAi.SetActiveChild" );

	UAnimNodeBlendListInteractionAi_execSetActiveChild_Parms SetActiveChild_Parms;
	SetActiveChild_Parms.ChildIndex = ChildIndex;
	SetActiveChild_Parms.BlendTime = BlendTime;

	pFnSetActiveChild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveChild, &SetActiveChild_Parms, NULL );

	pFnSetActiveChild->FunctionFlags |= 0x400;
};

// Function NowGame.AnimNodeBlendListMountAdditive.SetIndexAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FName                   NewAnimName                    ( CPF_Parm )

void UAnimNodeBlendListMountAdditive::SetIndexAnim ( int Index, struct FName NewAnimName )
{
	static UFunction* pFnSetIndexAnim = NULL;

	if ( ! pFnSetIndexAnim )
		pFnSetIndexAnim = UObject::FindObject< UFunction > ( "Function NowGame.AnimNodeBlendListMountAdditive.SetIndexAnim" );

	UAnimNodeBlendListMountAdditive_execSetIndexAnim_Parms SetIndexAnim_Parms;
	SetIndexAnim_Parms.Index = Index;
	memcpy ( &SetIndexAnim_Parms.NewAnimName, &NewAnimName, 0x8 );

	pFnSetIndexAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetIndexAnim, &SetIndexAnim_Parms, NULL );

	pFnSetIndexAnim->FunctionFlags |= 0x400;
};

// Function NowGame.AnimNodeBlendListMountSpeed.SetActiveChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ChildIndex                     ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )

void UAnimNodeBlendListMountSpeed::SetActiveChild ( int ChildIndex, float BlendTime )
{
	static UFunction* pFnSetActiveChild = NULL;

	if ( ! pFnSetActiveChild )
		pFnSetActiveChild = UObject::FindObject< UFunction > ( "Function NowGame.AnimNodeBlendListMountSpeed.SetActiveChild" );

	UAnimNodeBlendListMountSpeed_execSetActiveChild_Parms SetActiveChild_Parms;
	SetActiveChild_Parms.ChildIndex = ChildIndex;
	SetActiveChild_Parms.BlendTime = BlendTime;

	pFnSetActiveChild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveChild, &SetActiveChild_Parms, NULL );

	pFnSetActiveChild->FunctionFlags |= 0x400;
};

// Function NowGame.AnimNodeBlendListPlayOnce.SetActiveChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ChildIndex                     ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )

void UAnimNodeBlendListPlayOnce::SetActiveChild ( int ChildIndex, float BlendTime )
{
	static UFunction* pFnSetActiveChild = NULL;

	if ( ! pFnSetActiveChild )
		pFnSetActiveChild = UObject::FindObject< UFunction > ( "Function NowGame.AnimNodeBlendListPlayOnce.SetActiveChild" );

	UAnimNodeBlendListPlayOnce_execSetActiveChild_Parms SetActiveChild_Parms;
	SetActiveChild_Parms.ChildIndex = ChildIndex;
	SetActiveChild_Parms.BlendTime = BlendTime;

	pFnSetActiveChild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveChild, &SetActiveChild_Parms, NULL );

	pFnSetActiveChild->FunctionFlags |= 0x400;
};

// Function NowGame.ChatManager.IsValidName
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::IsValidName ( struct FString sName )
{
	static UFunction* pFnIsValidName = NULL;

	if ( ! pFnIsValidName )
		pFnIsValidName = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.IsValidName" );

	UChatManager_execIsValidName_Parms IsValidName_Parms;
	memcpy ( &IsValidName_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnIsValidName, &IsValidName_Parms, NULL );

	return IsValidName_Parms.ReturnValue;
};

// Function NowGame.ChatManager.GetWorldInfo
// [0x00020002] 
// Parameters infos:
// class AWorldInfo*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AWorldInfo* UChatManager::GetWorldInfo ( )
{
	static UFunction* pFnGetWorldInfo = NULL;

	if ( ! pFnGetWorldInfo )
		pFnGetWorldInfo = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.GetWorldInfo" );

	UChatManager_execGetWorldInfo_Parms GetWorldInfo_Parms;

	this->ProcessEvent ( pFnGetWorldInfo, &GetWorldInfo_Parms, NULL );

	return GetWorldInfo_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CmdMurderCount
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdMurderCount ( )
{
	static UFunction* pFnCmdMurderCount = NULL;

	if ( ! pFnCmdMurderCount )
		pFnCmdMurderCount = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CmdMurderCount" );

	UChatManager_execCmdMurderCount_Parms CmdMurderCount_Parms;

	this->ProcessEvent ( pFnCmdMurderCount, &CmdMurderCount_Parms, NULL );
};

// Function NowGame.ChatManager.CmdEndTutorial
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdEndTutorial ( )
{
	static UFunction* pFnCmdEndTutorial = NULL;

	if ( ! pFnCmdEndTutorial )
		pFnCmdEndTutorial = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CmdEndTutorial" );

	UChatManager_execCmdEndTutorial_Parms CmdEndTutorial_Parms;

	this->ProcessEvent ( pFnCmdEndTutorial, &CmdEndTutorial_Parms, NULL );
};

// Function NowGame.ChatManager.CmdStatLossCount
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdStatLossCount ( )
{
	static UFunction* pFnCmdStatLossCount = NULL;

	if ( ! pFnCmdStatLossCount )
		pFnCmdStatLossCount = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CmdStatLossCount" );

	UChatManager_execCmdStatLossCount_Parms CmdStatLossCount_Parms;

	this->ProcessEvent ( pFnCmdStatLossCount, &CmdStatLossCount_Parms, NULL );
};

// Function NowGame.ChatManager.CmdCallGuards
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdCallGuards ( )
{
	static UFunction* pFnCmdCallGuards = NULL;

	if ( ! pFnCmdCallGuards )
		pFnCmdCallGuards = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CmdCallGuards" );

	UChatManager_execCmdCallGuards_Parms CmdCallGuards_Parms;

	this->ProcessEvent ( pFnCmdCallGuards, &CmdCallGuards_Parms, NULL );
};

// Function NowGame.ChatManager.CmdWhoMe
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdWhoMe ( )
{
	static UFunction* pFnCmdWhoMe = NULL;

	if ( ! pFnCmdWhoMe )
		pFnCmdWhoMe = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CmdWhoMe" );

	UChatManager_execCmdWhoMe_Parms CmdWhoMe_Parms;

	this->ProcessEvent ( pFnCmdWhoMe, &CmdWhoMe_Parms, NULL );
};

// Function NowGame.ChatManager.CmdWho
// [0x00020002] 
// Parameters infos:

void UChatManager::CmdWho ( )
{
	static UFunction* pFnCmdWho = NULL;

	if ( ! pFnCmdWho )
		pFnCmdWho = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CmdWho" );

	UChatManager_execCmdWho_Parms CmdWho_Parms;

	this->ProcessEvent ( pFnCmdWho, &CmdWho_Parms, NULL );
};

// Function NowGame.ChatManager.CmdFriendCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 sInput                         ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::CmdFriendCommand ( struct FString sInput )
{
	static UFunction* pFnCmdFriendCommand = NULL;

	if ( ! pFnCmdFriendCommand )
		pFnCmdFriendCommand = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CmdFriendCommand" );

	UChatManager_execCmdFriendCommand_Parms CmdFriendCommand_Parms;
	memcpy ( &CmdFriendCommand_Parms.sInput, &sInput, 0xC );

	this->ProcessEvent ( pFnCmdFriendCommand, &CmdFriendCommand_Parms, NULL );
};

// Function NowGame.ChatManager.CmdPet
// [0x00020002] 
// Parameters infos:
// struct FString                 sInput                         ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::CmdPet ( struct FString sInput )
{
	static UFunction* pFnCmdPet = NULL;

	if ( ! pFnCmdPet )
		pFnCmdPet = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CmdPet" );

	UChatManager_execCmdPet_Parms CmdPet_Parms;
	memcpy ( &CmdPet_Parms.sInput, &sInput, 0xC );

	this->ProcessEvent ( pFnCmdPet, &CmdPet_Parms, NULL );
};

// Function NowGame.ChatManager.CmdTrade
// [0x00024002] 
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_OptionalParm | CPF_Parm )

void UChatManager::CmdTrade ( class ANowAtlasAvatar* aActor )
{
	static UFunction* pFnCmdTrade = NULL;

	if ( ! pFnCmdTrade )
		pFnCmdTrade = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CmdTrade" );

	UChatManager_execCmdTrade_Parms CmdTrade_Parms;
	CmdTrade_Parms.aActor = aActor;

	this->ProcessEvent ( pFnCmdTrade, &CmdTrade_Parms, NULL );
};

// Function NowGame.ChatManager.CheckCommandOk
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WhatCommand                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::CheckCommandOk ( struct FString WhatCommand )
{
	static UFunction* pFnCheckCommandOk = NULL;

	if ( ! pFnCheckCommandOk )
		pFnCheckCommandOk = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CheckCommandOk" );

	UChatManager_execCheckCommandOk_Parms CheckCommandOk_Parms;
	memcpy ( &CheckCommandOk_Parms.WhatCommand, &WhatCommand, 0xC );

	this->ProcessEvent ( pFnCheckCommandOk, &CheckCommandOk_Parms, NULL );

	return CheckCommandOk_Parms.ReturnValue;
};

// Function NowGame.ChatManager.HandleAiCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )
// TArray< struct FString >       messageparts                   ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::HandleAiCommand ( struct FString sCommand, TArray< struct FString > messageparts )
{
	static UFunction* pFnHandleAiCommand = NULL;

	if ( ! pFnHandleAiCommand )
		pFnHandleAiCommand = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.HandleAiCommand" );

	UChatManager_execHandleAiCommand_Parms HandleAiCommand_Parms;
	memcpy ( &HandleAiCommand_Parms.sCommand, &sCommand, 0xC );
	memcpy ( &HandleAiCommand_Parms.messageparts, &messageparts, 0xC );

	this->ProcessEvent ( pFnHandleAiCommand, &HandleAiCommand_Parms, NULL );

	return HandleAiCommand_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CmdMod
// [0x00020002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::CmdMod ( struct FString sCommand, struct FString sMessage )
{
	static UFunction* pFnCmdMod = NULL;

	if ( ! pFnCmdMod )
		pFnCmdMod = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CmdMod" );

	UChatManager_execCmdMod_Parms CmdMod_Parms;
	memcpy ( &CmdMod_Parms.sCommand, &sCommand, 0xC );
	memcpy ( &CmdMod_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnCmdMod, &CmdMod_Parms, NULL );
};

// Function NowGame.ChatManager.CmdCast
// [0x00020002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::CmdCast ( struct FString sCommand )
{
	static UFunction* pFnCmdCast = NULL;

	if ( ! pFnCmdCast )
		pFnCmdCast = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CmdCast" );

	UChatManager_execCmdCast_Parms CmdCast_Parms;
	memcpy ( &CmdCast_Parms.sCommand, &sCommand, 0xC );

	this->ProcessEvent ( pFnCmdCast, &CmdCast_Parms, NULL );
};

// Function NowGame.ChatManager.CmdSkill
// [0x00020002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::CmdSkill ( struct FString sCommand )
{
	static UFunction* pFnCmdSkill = NULL;

	if ( ! pFnCmdSkill )
		pFnCmdSkill = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CmdSkill" );

	UChatManager_execCmdSkill_Parms CmdSkill_Parms;
	memcpy ( &CmdSkill_Parms.sCommand, &sCommand, 0xC );

	this->ProcessEvent ( pFnCmdSkill, &CmdSkill_Parms, NULL );
};

// Function NowGame.ChatManager.CmdEmote
// [0x00020002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::CmdEmote ( struct FString sCommand )
{
	static UFunction* pFnCmdEmote = NULL;

	if ( ! pFnCmdEmote )
		pFnCmdEmote = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CmdEmote" );

	UChatManager_execCmdEmote_Parms CmdEmote_Parms;
	memcpy ( &CmdEmote_Parms.sCommand, &sCommand, 0xC );

	this->ProcessEvent ( pFnCmdEmote, &CmdEmote_Parms, NULL );
};

// Function NowGame.ChatManager.HandleOutgoingCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::HandleOutgoingCommand ( struct FString sMessage )
{
	static UFunction* pFnHandleOutgoingCommand = NULL;

	if ( ! pFnHandleOutgoingCommand )
		pFnHandleOutgoingCommand = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.HandleOutgoingCommand" );

	UChatManager_execHandleOutgoingCommand_Parms HandleOutgoingCommand_Parms;
	memcpy ( &HandleOutgoingCommand_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnHandleOutgoingCommand, &HandleOutgoingCommand_Parms, NULL );
};

// Function NowGame.ChatManager.CheckMyPawn
// [0x00020002] 
// Parameters infos:

void UChatManager::CheckMyPawn ( )
{
	static UFunction* pFnCheckMyPawn = NULL;

	if ( ! pFnCheckMyPawn )
		pFnCheckMyPawn = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CheckMyPawn" );

	UChatManager_execCheckMyPawn_Parms CheckMyPawn_Parms;

	this->ProcessEvent ( pFnCheckMyPawn, &CheckMyPawn_Parms, NULL );
};

// Function NowGame.ChatManager.ChanGuild
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::ChanGuild ( struct FString sMessage )
{
	static UFunction* pFnChanGuild = NULL;

	if ( ! pFnChanGuild )
		pFnChanGuild = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.ChanGuild" );

	UChatManager_execChanGuild_Parms ChanGuild_Parms;
	memcpy ( &ChanGuild_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnChanGuild, &ChanGuild_Parms, NULL );

	return ChanGuild_Parms.ReturnValue;
};

// Function NowGame.ChatManager.GetSubSystem
// [0x00020002] 
// Parameters infos:
// class UOnlineSubsystemNowGame* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UOnlineSubsystemNowGame* UChatManager::GetSubSystem ( )
{
	static UFunction* pFnGetSubSystem = NULL;

	if ( ! pFnGetSubSystem )
		pFnGetSubSystem = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.GetSubSystem" );

	UChatManager_execGetSubSystem_Parms GetSubSystem_Parms;

	this->ProcessEvent ( pFnGetSubSystem, &GetSubSystem_Parms, NULL );

	return GetSubSystem_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CheckForChannelCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::CheckForChannelCommand ( struct FString sMessage )
{
	static UFunction* pFnCheckForChannelCommand = NULL;

	if ( ! pFnCheckForChannelCommand )
		pFnCheckForChannelCommand = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CheckForChannelCommand" );

	UChatManager_execCheckForChannelCommand_Parms CheckForChannelCommand_Parms;
	memcpy ( &CheckForChannelCommand_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnCheckForChannelCommand, &CheckForChannelCommand_Parms, NULL );

	return CheckForChannelCommand_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CheckForTalkCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::CheckForTalkCommand ( struct FString sMessage )
{
	static UFunction* pFnCheckForTalkCommand = NULL;

	if ( ! pFnCheckForTalkCommand )
		pFnCheckForTalkCommand = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CheckForTalkCommand" );

	UChatManager_execCheckForTalkCommand_Parms CheckForTalkCommand_Parms;
	memcpy ( &CheckForTalkCommand_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnCheckForTalkCommand, &CheckForTalkCommand_Parms, NULL );

	return CheckForTalkCommand_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CheckChatText
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 InText                         ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::CheckChatText ( struct FString InText )
{
	static UFunction* pFnCheckChatText = NULL;

	if ( ! pFnCheckChatText )
		pFnCheckChatText = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CheckChatText" );

	UChatManager_execCheckChatText_Parms CheckChatText_Parms;
	memcpy ( &CheckChatText_Parms.InText, &InText, 0xC );

	this->ProcessEvent ( pFnCheckChatText, &CheckChatText_Parms, NULL );

	return CheckChatText_Parms.ReturnValue;
};

// Function NowGame.ChatManager.CheckOkChar
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 InText                         ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::CheckOkChar ( struct FString InText )
{
	static UFunction* pFnCheckOkChar = NULL;

	if ( ! pFnCheckOkChar )
		pFnCheckOkChar = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.CheckOkChar" );

	UChatManager_execCheckOkChar_Parms CheckOkChar_Parms;
	memcpy ( &CheckOkChar_Parms.InText, &InText, 0xC );

	this->ProcessEvent ( pFnCheckOkChar, &CheckOkChar_Parms, NULL );

	return CheckOkChar_Parms.ReturnValue;
};

// Function NowGame.ChatManager.HandleOutgoingChat
// [0x00020002] 
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::HandleOutgoingChat ( struct FString sMessage )
{
	static UFunction* pFnHandleOutgoingChat = NULL;

	if ( ! pFnHandleOutgoingChat )
		pFnHandleOutgoingChat = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.HandleOutgoingChat" );

	UChatManager_execHandleOutgoingChat_Parms HandleOutgoingChat_Parms;
	memcpy ( &HandleOutgoingChat_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnHandleOutgoingChat, &HandleOutgoingChat_Parms, NULL );
};

// Function NowGame.ChatManager.HandleOutgoingMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::HandleOutgoingMessage ( struct FString sMessage )
{
	static UFunction* pFnHandleOutgoingMessage = NULL;

	if ( ! pFnHandleOutgoingMessage )
		pFnHandleOutgoingMessage = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.HandleOutgoingMessage" );

	UChatManager_execHandleOutgoingMessage_Parms HandleOutgoingMessage_Parms;
	memcpy ( &HandleOutgoingMessage_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnHandleOutgoingMessage, &HandleOutgoingMessage_Parms, NULL );
};

// Function NowGame.ChatManager.GetGFXHud
// [0x00020002] 
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* UChatManager::GetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.GetGFXHud" );

	UChatManager_execGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.ChatManager.IsNumber
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Number                         ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::IsNumber ( struct FString Number )
{
	static UFunction* pFnIsNumber = NULL;

	if ( ! pFnIsNumber )
		pFnIsNumber = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.IsNumber" );

	UChatManager_execIsNumber_Parms IsNumber_Parms;
	memcpy ( &IsNumber_Parms.Number, &Number, 0xC );

	this->ProcessEvent ( pFnIsNumber, &IsNumber_Parms, NULL );

	return IsNumber_Parms.ReturnValue;
};

// Function NowGame.ChatManager.GetActorFromNameOrId
// [0x00420002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 whatName                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class AActor* UChatManager::GetActorFromNameOrId ( struct FString* whatName )
{
	static UFunction* pFnGetActorFromNameOrId = NULL;

	if ( ! pFnGetActorFromNameOrId )
		pFnGetActorFromNameOrId = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.GetActorFromNameOrId" );

	UChatManager_execGetActorFromNameOrId_Parms GetActorFromNameOrId_Parms;

	this->ProcessEvent ( pFnGetActorFromNameOrId, &GetActorFromNameOrId_Parms, NULL );

	if ( whatName )
		memcpy ( whatName, &GetActorFromNameOrId_Parms.whatName, 0xC );

	return GetActorFromNameOrId_Parms.ReturnValue;
};

// Function NowGame.ChatManager.GetChannelFromString
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

int UChatManager::GetChannelFromString ( struct FString sString )
{
	static UFunction* pFnGetChannelFromString = NULL;

	if ( ! pFnGetChannelFromString )
		pFnGetChannelFromString = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.GetChannelFromString" );

	UChatManager_execGetChannelFromString_Parms GetChannelFromString_Parms;
	memcpy ( &GetChannelFromString_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnGetChannelFromString, &GetChannelFromString_Parms, NULL );

	return GetChannelFromString_Parms.ReturnValue;
};

// Function NowGame.ChatManager.ShowMessage
// [0x00024002] 
// Parameters infos:
// int                            iChannel                       ( CPF_Parm )
// struct FString                 sMsg                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTalker                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UChatManager::ShowMessage ( int iChannel, struct FString sMsg, struct FString sTalker )
{
	static UFunction* pFnShowMessage = NULL;

	if ( ! pFnShowMessage )
		pFnShowMessage = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.ShowMessage" );

	UChatManager_execShowMessage_Parms ShowMessage_Parms;
	ShowMessage_Parms.iChannel = iChannel;
	memcpy ( &ShowMessage_Parms.sMsg, &sMsg, 0xC );
	memcpy ( &ShowMessage_Parms.sTalker, &sTalker, 0xC );

	this->ProcessEvent ( pFnShowMessage, &ShowMessage_Parms, NULL );
};

// Function NowGame.ChatManager.HandleIncomingMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

void UChatManager::HandleIncomingMessage ( struct FString sMessage )
{
	static UFunction* pFnHandleIncomingMessage = NULL;

	if ( ! pFnHandleIncomingMessage )
		pFnHandleIncomingMessage = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.HandleIncomingMessage" );

	UChatManager_execHandleIncomingMessage_Parms HandleIncomingMessage_Parms;
	memcpy ( &HandleIncomingMessage_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnHandleIncomingMessage, &HandleIncomingMessage_Parms, NULL );
};

// Function NowGame.ChatManager.InitManager
// [0x00020002] 
// Parameters infos:

void UChatManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.InitManager" );

	UChatManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.ChatManager.IsAvatarId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

bool UChatManager::IsAvatarId ( struct FString sString )
{
	static UFunction* pFnIsAvatarId = NULL;

	if ( ! pFnIsAvatarId )
		pFnIsAvatarId = UObject::FindObject< UFunction > ( "Function NowGame.ChatManager.IsAvatarId" );

	UChatManager_execIsAvatarId_Parms IsAvatarId_Parms;
	memcpy ( &IsAvatarId_Parms.sString, &sString, 0xC );

	pFnIsAvatarId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAvatarId, &IsAvatarId_Parms, NULL );

	pFnIsAvatarId->FunctionFlags |= 0x400;

	return IsAvatarId_Parms.ReturnValue;
};

// Function NowGame.ClientEffect.SetScreenColor
// [0x00020002] 
// Parameters infos:
// struct FColor                  WhatColor                      ( CPF_Parm )

void UClientEffect::SetScreenColor ( struct FColor WhatColor )
{
	static UFunction* pFnSetScreenColor = NULL;

	if ( ! pFnSetScreenColor )
		pFnSetScreenColor = UObject::FindObject< UFunction > ( "Function NowGame.ClientEffect.SetScreenColor" );

	UClientEffect_execSetScreenColor_Parms SetScreenColor_Parms;
	memcpy ( &SetScreenColor_Parms.WhatColor, &WhatColor, 0x4 );

	this->ProcessEvent ( pFnSetScreenColor, &SetScreenColor_Parms, NULL );
};

// Function NowGame.ClientEffect.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientEffect::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.ClientEffect.Tick" );

	UClientEffect_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientEffect.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientEffect::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.ClientEffect.AttachTo" );

	UClientEffect_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.CombatSystemNew.GetNowPawn
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* UCombatSystemNew::GetNowPawn ( )
{
	static UFunction* pFnGetNowPawn = NULL;

	if ( ! pFnGetNowPawn )
		pFnGetNowPawn = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.GetNowPawn" );

	UCombatSystemNew_execGetNowPawn_Parms GetNowPawn_Parms;

	this->ProcessEvent ( pFnGetNowPawn, &GetNowPawn_Parms, NULL );

	return GetNowPawn_Parms.ReturnValue;
};

// Function NowGame.CombatSystemNew.TickCombat
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemNew::TickCombat ( float DeltaTime )
{
	static UFunction* pFnTickCombat = NULL;

	if ( ! pFnTickCombat )
		pFnTickCombat = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.TickCombat" );

	UCombatSystemNew_execTickCombat_Parms TickCombat_Parms;
	TickCombat_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombat, &TickCombat_Parms, NULL );
};

// Function NowGame.CombatSystemNew.IsTimerActive
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

bool UCombatSystemNew::IsTimerActive ( struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnIsTimerActive = NULL;

	if ( ! pFnIsTimerActive )
		pFnIsTimerActive = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.IsTimerActive" );

	UCombatSystemNew_execIsTimerActive_Parms IsTimerActive_Parms;
	memcpy ( &IsTimerActive_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	IsTimerActive_Parms.inObj = inObj;

	this->ProcessEvent ( pFnIsTimerActive, &IsTimerActive_Parms, NULL );

	return IsTimerActive_Parms.ReturnValue;
};

// Function NowGame.CombatSystemNew.ClearTimer
// [0x00024002] 
// Parameters infos:
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemNew::ClearTimer ( struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnClearTimer = NULL;

	if ( ! pFnClearTimer )
		pFnClearTimer = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.ClearTimer" );

	UCombatSystemNew_execClearTimer_Parms ClearTimer_Parms;
	memcpy ( &ClearTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	ClearTimer_Parms.inObj = inObj;

	this->ProcessEvent ( pFnClearTimer, &ClearTimer_Parms, NULL );
};

// Function NowGame.CombatSystemNew.SetTimer
// [0x00024002] 
// Parameters infos:
// float                          InRate                         ( CPF_Parm )
// unsigned long                  inbLoop                        ( CPF_OptionalParm | CPF_Parm )
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemNew::SetTimer ( float InRate, unsigned long inbLoop, struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnSetTimer = NULL;

	if ( ! pFnSetTimer )
		pFnSetTimer = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.SetTimer" );

	UCombatSystemNew_execSetTimer_Parms SetTimer_Parms;
	SetTimer_Parms.InRate = InRate;
	SetTimer_Parms.inbLoop = inbLoop;
	memcpy ( &SetTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	SetTimer_Parms.inObj = inObj;

	this->ProcessEvent ( pFnSetTimer, &SetTimer_Parms, NULL );
};

// Function NowGame.CombatSystemNew.ReturnHitInfo
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPhysicsAsset*           TestPhys                       ( CPF_Parm )
// struct FName                   HitBone                        ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

int UCombatSystemNew::ReturnHitInfo ( class UPhysicsAsset* TestPhys, struct FName HitBone, class AActor* HitActor )
{
	static UFunction* pFnReturnHitInfo = NULL;

	if ( ! pFnReturnHitInfo )
		pFnReturnHitInfo = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.ReturnHitInfo" );

	UCombatSystemNew_execReturnHitInfo_Parms ReturnHitInfo_Parms;
	ReturnHitInfo_Parms.TestPhys = TestPhys;
	memcpy ( &ReturnHitInfo_Parms.HitBone, &HitBone, 0x8 );
	ReturnHitInfo_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnReturnHitInfo, &ReturnHitInfo_Parms, NULL );

	return ReturnHitInfo_Parms.ReturnValue;
};

// Function NowGame.CombatSystemNew.getHitPart
// [0x00C20002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  HitActor                       ( CPF_Parm )
// struct FVector                 StartTrace                     ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// struct FVector                 HitLoc                         ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm | CPF_OutParm )

int UCombatSystemNew::getHitPart ( class AActor* HitActor, struct FVector StartTrace, struct FVector EndTrace, struct FVector HitLoc, struct FTraceHitInfo* HitInfo )
{
	static UFunction* pFngetHitPart = NULL;

	if ( ! pFngetHitPart )
		pFngetHitPart = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.getHitPart" );

	UCombatSystemNew_execgetHitPart_Parms getHitPart_Parms;
	getHitPart_Parms.HitActor = HitActor;
	memcpy ( &getHitPart_Parms.StartTrace, &StartTrace, 0xC );
	memcpy ( &getHitPart_Parms.EndTrace, &EndTrace, 0xC );
	memcpy ( &getHitPart_Parms.HitLoc, &HitLoc, 0xC );

	this->ProcessEvent ( pFngetHitPart, &getHitPart_Parms, NULL );

	if ( HitInfo )
		memcpy ( HitInfo, &getHitPart_Parms.HitInfo, 0x1C );

	return getHitPart_Parms.ReturnValue;
};

// Function NowGame.CombatSystemNew.GetOptions
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowOptionsDatastore*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowOptionsDatastore* UCombatSystemNew::eventGetOptions ( )
{
	static UFunction* pFnGetOptions = NULL;

	if ( ! pFnGetOptions )
		pFnGetOptions = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.GetOptions" );

	UCombatSystemNew_eventGetOptions_Parms GetOptions_Parms;

	this->ProcessEvent ( pFnGetOptions, &GetOptions_Parms, NULL );

	return GetOptions_Parms.ReturnValue;
};

// Function NowGame.CombatSystemNew.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UCombatSystemNew::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.AttachTo" );

	UCombatSystemNew_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.CombatSystemNew.CancelCharge
// [0x00020000] 
// Parameters infos:

void UCombatSystemNew::CancelCharge ( )
{
	static UFunction* pFnCancelCharge = NULL;

	if ( ! pFnCancelCharge )
		pFnCancelCharge = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.CancelCharge" );

	UCombatSystemNew_execCancelCharge_Parms CancelCharge_Parms;

	this->ProcessEvent ( pFnCancelCharge, &CancelCharge_Parms, NULL );
};

// Function NowGame.CombatSystemNew.UpdateWeaponStats
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   MyPawn                         ( CPF_Parm )

void UCombatSystemNew::eventUpdateWeaponStats ( class APawn* MyPawn )
{
	static UFunction* pFnUpdateWeaponStats = NULL;

	if ( ! pFnUpdateWeaponStats )
		pFnUpdateWeaponStats = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.UpdateWeaponStats" );

	UCombatSystemNew_eventUpdateWeaponStats_Parms UpdateWeaponStats_Parms;
	UpdateWeaponStats_Parms.MyPawn = MyPawn;

	this->ProcessEvent ( pFnUpdateWeaponStats, &UpdateWeaponStats_Parms, NULL );
};

// Function NowGame.CombatSystemNew.PlayerWasHit
// [0x00020000] 
// Parameters infos:
// int                            lastBoneID                     ( CPF_Parm )

void UCombatSystemNew::PlayerWasHit ( int lastBoneID )
{
	static UFunction* pFnPlayerWasHit = NULL;

	if ( ! pFnPlayerWasHit )
		pFnPlayerWasHit = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.PlayerWasHit" );

	UCombatSystemNew_execPlayerWasHit_Parms PlayerWasHit_Parms;
	PlayerWasHit_Parms.lastBoneID = lastBoneID;

	this->ProcessEvent ( pFnPlayerWasHit, &PlayerWasHit_Parms, NULL );
};

// Function NowGame.CombatSystemNew.SetIntParam
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// int                            NewParam                       ( CPF_Parm )

void UCombatSystemNew::eventSetIntParam ( int NewParam )
{
	static UFunction* pFnSetIntParam = NULL;

	if ( ! pFnSetIntParam )
		pFnSetIntParam = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.SetIntParam" );

	UCombatSystemNew_eventSetIntParam_Parms SetIntParam_Parms;
	SetIntParam_Parms.NewParam = NewParam;

	this->ProcessEvent ( pFnSetIntParam, &SetIntParam_Parms, NULL );
};

// Function NowGame.CombatSystemNew.ChargeReady
// [0x00020000] 
// Parameters infos:

void UCombatSystemNew::ChargeReady ( )
{
	static UFunction* pFnChargeReady = NULL;

	if ( ! pFnChargeReady )
		pFnChargeReady = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.ChargeReady" );

	UCombatSystemNew_execChargeReady_Parms ChargeReady_Parms;

	this->ProcessEvent ( pFnChargeReady, &ChargeReady_Parms, NULL );
};

// Function NowGame.CombatSystemNew.StopAltFire
// [0x00024000] 
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemNew::StopAltFire ( unsigned long bForce )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.StopAltFire" );

	UCombatSystemNew_execStopAltFire_Parms StopAltFire_Parms;
	StopAltFire_Parms.bForce = bForce;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.CombatSystemNew.StartAltFire
// [0x00020000] 
// Parameters infos:

void UCombatSystemNew::StartAltFire ( )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.StartAltFire" );

	UCombatSystemNew_execStartAltFire_Parms StartAltFire_Parms;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.CombatSystemNew.StopFire
// [0x00024000] 
// Parameters infos:
// unsigned long                  TargetSelf                     ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemNew::StopFire ( unsigned long TargetSelf )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.StopFire" );

	UCombatSystemNew_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.TargetSelf = TargetSelf;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.CombatSystemNew.StartFire
// [0x00020000] 
// Parameters infos:

void UCombatSystemNew::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.StartFire" );

	UCombatSystemNew_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.CombatSystemNew.ExitMode
// [0x00020000] 
// Parameters infos:

void UCombatSystemNew::ExitMode ( )
{
	static UFunction* pFnExitMode = NULL;

	if ( ! pFnExitMode )
		pFnExitMode = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.ExitMode" );

	UCombatSystemNew_execExitMode_Parms ExitMode_Parms;

	this->ProcessEvent ( pFnExitMode, &ExitMode_Parms, NULL );
};

// Function NowGame.CombatSystemNew.InitMode
// [0x00020000] 
// Parameters infos:

void UCombatSystemNew::InitMode ( )
{
	static UFunction* pFnInitMode = NULL;

	if ( ! pFnInitMode )
		pFnInitMode = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.InitMode" );

	UCombatSystemNew_execInitMode_Parms InitMode_Parms;

	this->ProcessEvent ( pFnInitMode, &InitMode_Parms, NULL );
};

// Function NowGame.CombatSystemNew.StartClientAnimations
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 WhatAction                     ( CPF_Parm | CPF_NeedCtorLink )
// float                          AnimRate                       ( CPF_Parm )

void UCombatSystemNew::StartClientAnimations ( struct FString WhatAction, float AnimRate )
{
	static UFunction* pFnStartClientAnimations = NULL;

	if ( ! pFnStartClientAnimations )
		pFnStartClientAnimations = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemNew.StartClientAnimations" );

	UCombatSystemNew_execStartClientAnimations_Parms StartClientAnimations_Parms;
	memcpy ( &StartClientAnimations_Parms.WhatAction, &WhatAction, 0xC );
	StartClientAnimations_Parms.AnimRate = AnimRate;

	pFnStartClientAnimations->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartClientAnimations, &StartClientAnimations_Parms, NULL );

	pFnStartClientAnimations->FunctionFlags |= 0x400;
};

// Function NowGame.CombatSystemFishingNew.ProjectileHitWater
// [0x00020002] 
// Parameters infos:
// class AActor*                  WaterVolume                    ( CPF_Parm )
// float                          Depth                          ( CPF_Parm )

void UCombatSystemFishingNew::ProjectileHitWater ( class AActor* WaterVolume, float Depth )
{
	static UFunction* pFnProjectileHitWater = NULL;

	if ( ! pFnProjectileHitWater )
		pFnProjectileHitWater = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.ProjectileHitWater" );

	UCombatSystemFishingNew_execProjectileHitWater_Parms ProjectileHitWater_Parms;
	ProjectileHitWater_Parms.WaterVolume = WaterVolume;
	ProjectileHitWater_Parms.Depth = Depth;

	this->ProcessEvent ( pFnProjectileHitWater, &ProjectileHitWater_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.ProjectileHit
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FTraceHitInfo           hitInfoTmp                     ( CPF_Parm )
// struct FVector                 StartTrace                     ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// struct FVector                 HitLocTmp                      ( CPF_Parm )

void UCombatSystemFishingNew::ProjectileHit ( class AActor* Target, struct FTraceHitInfo hitInfoTmp, struct FVector StartTrace, struct FVector EndTrace, struct FVector HitLocTmp )
{
	static UFunction* pFnProjectileHit = NULL;

	if ( ! pFnProjectileHit )
		pFnProjectileHit = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.ProjectileHit" );

	UCombatSystemFishingNew_execProjectileHit_Parms ProjectileHit_Parms;
	ProjectileHit_Parms.Target = Target;
	memcpy ( &ProjectileHit_Parms.hitInfoTmp, &hitInfoTmp, 0x1C );
	memcpy ( &ProjectileHit_Parms.StartTrace, &StartTrace, 0xC );
	memcpy ( &ProjectileHit_Parms.EndTrace, &EndTrace, 0xC );
	memcpy ( &ProjectileHit_Parms.HitLocTmp, &HitLocTmp, 0xC );

	this->ProcessEvent ( pFnProjectileHit, &ProjectileHit_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.ProjectileLanded
// [0x00020002] 
// Parameters infos:
// struct FVector                 Loc                            ( CPF_Parm )
// class AActor*                  Volume                         ( CPF_Parm )

void UCombatSystemFishingNew::ProjectileLanded ( struct FVector Loc, class AActor* Volume )
{
	static UFunction* pFnProjectileLanded = NULL;

	if ( ! pFnProjectileLanded )
		pFnProjectileLanded = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.ProjectileLanded" );

	UCombatSystemFishingNew_execProjectileLanded_Parms ProjectileLanded_Parms;
	memcpy ( &ProjectileLanded_Parms.Loc, &Loc, 0xC );
	ProjectileLanded_Parms.Volume = Volume;

	this->ProcessEvent ( pFnProjectileLanded, &ProjectileLanded_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.TellB
// [0x00024002] 
// Parameters infos:
// unsigned char                  I                              ( CPF_Parm )
// struct FString                 Value                          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UCombatSystemFishingNew::TellB ( unsigned char I, struct FString Value )
{
	static UFunction* pFnTellB = NULL;

	if ( ! pFnTellB )
		pFnTellB = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.TellB" );

	UCombatSystemFishingNew_execTellB_Parms TellB_Parms;
	TellB_Parms.I = I;
	memcpy ( &TellB_Parms.Value, &Value, 0xC );

	this->ProcessEvent ( pFnTellB, &TellB_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.AbortFishing
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::AbortFishing ( )
{
	static UFunction* pFnAbortFishing = NULL;

	if ( ! pFnAbortFishing )
		pFnAbortFishing = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.AbortFishing" );

	UCombatSystemFishingNew_execAbortFishing_Parms AbortFishing_Parms;

	this->ProcessEvent ( pFnAbortFishing, &AbortFishing_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.TickCombat
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemFishingNew::TickCombat ( float DeltaTime )
{
	static UFunction* pFnTickCombat = NULL;

	if ( ! pFnTickCombat )
		pFnTickCombat = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.TickCombat" );

	UCombatSystemFishingNew_execTickCombat_Parms TickCombat_Parms;
	TickCombat_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombat, &TickCombat_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.RemoveAllProjectiles
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::RemoveAllProjectiles ( )
{
	static UFunction* pFnRemoveAllProjectiles = NULL;

	if ( ! pFnRemoveAllProjectiles )
		pFnRemoveAllProjectiles = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.RemoveAllProjectiles" );

	UCombatSystemFishingNew_execRemoveAllProjectiles_Parms RemoveAllProjectiles_Parms;

	this->ProcessEvent ( pFnRemoveAllProjectiles, &RemoveAllProjectiles_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.Tug
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::Tug ( )
{
	static UFunction* pFnTug = NULL;

	if ( ! pFnTug )
		pFnTug = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.Tug" );

	UCombatSystemFishingNew_execTug_Parms Tug_Parms;

	this->ProcessEvent ( pFnTug, &Tug_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.Throw
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::Throw ( )
{
	static UFunction* pFnThrow = NULL;

	if ( ! pFnThrow )
		pFnThrow = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.Throw" );

	UCombatSystemFishingNew_execThrow_Parms Throw_Parms;

	this->ProcessEvent ( pFnThrow, &Throw_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.CheckMove
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UCombatSystemFishingNew::CheckMove ( )
{
	static UFunction* pFnCheckMove = NULL;

	if ( ! pFnCheckMove )
		pFnCheckMove = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.CheckMove" );

	UCombatSystemFishingNew_execCheckMove_Parms CheckMove_Parms;

	this->ProcessEvent ( pFnCheckMove, &CheckMove_Parms, NULL );

	return CheckMove_Parms.ReturnValue;
};

// Function NowGame.CombatSystemFishingNew.PlayerFishEvent
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iValue                         ( CPF_Parm )
// float                          fValue                         ( CPF_Parm )

void UCombatSystemFishingNew::eventPlayerFishEvent ( int iValue, float fValue )
{
	static UFunction* pFnPlayerFishEvent = NULL;

	if ( ! pFnPlayerFishEvent )
		pFnPlayerFishEvent = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.PlayerFishEvent" );

	UCombatSystemFishingNew_eventPlayerFishEvent_Parms PlayerFishEvent_Parms;
	PlayerFishEvent_Parms.iValue = iValue;
	PlayerFishEvent_Parms.fValue = fValue;

	this->ProcessEvent ( pFnPlayerFishEvent, &PlayerFishEvent_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.PlayFishEffect
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            WhatEffect                     ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemFishingNew::eventPlayFishEffect ( int WhatEffect )
{
	static UFunction* pFnPlayFishEffect = NULL;

	if ( ! pFnPlayFishEffect )
		pFnPlayFishEffect = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.PlayFishEffect" );

	UCombatSystemFishingNew_eventPlayFishEffect_Parms PlayFishEffect_Parms;
	PlayFishEffect_Parms.WhatEffect = WhatEffect;

	this->ProcessEvent ( pFnPlayFishEffect, &PlayFishEffect_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.StopFire
// [0x00024002] 
// Parameters infos:
// unsigned long                  TargetSelf                     ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemFishingNew::StopFire ( unsigned long TargetSelf )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.StopFire" );

	UCombatSystemFishingNew_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.TargetSelf = TargetSelf;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.StartFire
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.StartFire" );

	UCombatSystemFishingNew_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.ExitMode
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::ExitMode ( )
{
	static UFunction* pFnExitMode = NULL;

	if ( ! pFnExitMode )
		pFnExitMode = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.ExitMode" );

	UCombatSystemFishingNew_execExitMode_Parms ExitMode_Parms;

	this->ProcessEvent ( pFnExitMode, &ExitMode_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.InitMode
// [0x00020002] 
// Parameters infos:

void UCombatSystemFishingNew::InitMode ( )
{
	static UFunction* pFnInitMode = NULL;

	if ( ! pFnInitMode )
		pFnInitMode = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.InitMode" );

	UCombatSystemFishingNew_execInitMode_Parms InitMode_Parms;

	this->ProcessEvent ( pFnInitMode, &InitMode_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.UpdateTugAnimations
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  PlayerPull                     ( CPF_Parm )
// unsigned long                  FishPull                       ( CPF_Parm )

void UCombatSystemFishingNew::eventUpdateTugAnimations ( unsigned long PlayerPull, unsigned long FishPull )
{
	static UFunction* pFnUpdateTugAnimations = NULL;

	if ( ! pFnUpdateTugAnimations )
		pFnUpdateTugAnimations = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.UpdateTugAnimations" );

	UCombatSystemFishingNew_eventUpdateTugAnimations_Parms UpdateTugAnimations_Parms;
	UpdateTugAnimations_Parms.PlayerPull = PlayerPull;
	UpdateTugAnimations_Parms.FishPull = FishPull;

	this->ProcessEvent ( pFnUpdateTugAnimations, &UpdateTugAnimations_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UCombatSystemFishingNew::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.AttachTo" );

	UCombatSystemFishingNew_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.CombatSystemFishingNew.SwitchPlayerTugState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bState                         ( CPF_Parm )
// float                          dTime                          ( CPF_Parm )

void UCombatSystemFishingNew::SwitchPlayerTugState ( unsigned long bState, float dTime )
{
	static UFunction* pFnSwitchPlayerTugState = NULL;

	if ( ! pFnSwitchPlayerTugState )
		pFnSwitchPlayerTugState = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.SwitchPlayerTugState" );

	UCombatSystemFishingNew_execSwitchPlayerTugState_Parms SwitchPlayerTugState_Parms;
	SwitchPlayerTugState_Parms.bState = bState;
	SwitchPlayerTugState_Parms.dTime = dTime;

	pFnSwitchPlayerTugState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSwitchPlayerTugState, &SwitchPlayerTugState_Parms, NULL );

	pFnSwitchPlayerTugState->FunctionFlags |= 0x400;
};

// Function NowGame.CombatSystemFishingNew.GetBlockResult
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UCombatSystemFishingNew::GetBlockResult ( )
{
	static UFunction* pFnGetBlockResult = NULL;

	if ( ! pFnGetBlockResult )
		pFnGetBlockResult = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.GetBlockResult" );

	UCombatSystemFishingNew_execGetBlockResult_Parms GetBlockResult_Parms;

	pFnGetBlockResult->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBlockResult, &GetBlockResult_Parms, NULL );

	pFnGetBlockResult->FunctionFlags |= 0x400;

	return GetBlockResult_Parms.ReturnValue;
};

// Function NowGame.CombatSystemFishingNew.GetSuccessValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UCombatSystemFishingNew::GetSuccessValue ( )
{
	static UFunction* pFnGetSuccessValue = NULL;

	if ( ! pFnGetSuccessValue )
		pFnGetSuccessValue = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.GetSuccessValue" );

	UCombatSystemFishingNew_execGetSuccessValue_Parms GetSuccessValue_Parms;

	pFnGetSuccessValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSuccessValue, &GetSuccessValue_Parms, NULL );

	pFnGetSuccessValue->FunctionFlags |= 0x400;

	return GetSuccessValue_Parms.ReturnValue;
};

// Function NowGame.CombatSystemFishingNew.UpdateTugSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

bool UCombatSystemFishingNew::UpdateTugSession ( float DeltaTime )
{
	static UFunction* pFnUpdateTugSession = NULL;

	if ( ! pFnUpdateTugSession )
		pFnUpdateTugSession = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.UpdateTugSession" );

	UCombatSystemFishingNew_execUpdateTugSession_Parms UpdateTugSession_Parms;
	UpdateTugSession_Parms.DeltaTime = DeltaTime;

	pFnUpdateTugSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateTugSession, &UpdateTugSession_Parms, NULL );

	pFnUpdateTugSession->FunctionFlags |= 0x400;

	return UpdateTugSession_Parms.ReturnValue;
};

// Function NowGame.CombatSystemFishingNew.InitTugwarGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UCombatSystemFishingNew::InitTugwarGame ( )
{
	static UFunction* pFnInitTugwarGame = NULL;

	if ( ! pFnInitTugwarGame )
		pFnInitTugwarGame = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemFishingNew.InitTugwarGame" );

	UCombatSystemFishingNew_execInitTugwarGame_Parms InitTugwarGame_Parms;

	pFnInitTugwarGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitTugwarGame, &InitTugwarGame_Parms, NULL );

	pFnInitTugwarGame->FunctionFlags |= 0x400;
};

// Function NowGame.CombatSystemMagicNew.IsTimerActive
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

bool UCombatSystemMagicNew::IsTimerActive ( struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnIsTimerActive = NULL;

	if ( ! pFnIsTimerActive )
		pFnIsTimerActive = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.IsTimerActive" );

	UCombatSystemMagicNew_execIsTimerActive_Parms IsTimerActive_Parms;
	memcpy ( &IsTimerActive_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	IsTimerActive_Parms.inObj = inObj;

	this->ProcessEvent ( pFnIsTimerActive, &IsTimerActive_Parms, NULL );

	return IsTimerActive_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.ClearTimer
// [0x00024002] 
// Parameters infos:
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemMagicNew::ClearTimer ( struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnClearTimer = NULL;

	if ( ! pFnClearTimer )
		pFnClearTimer = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.ClearTimer" );

	UCombatSystemMagicNew_execClearTimer_Parms ClearTimer_Parms;
	memcpy ( &ClearTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	ClearTimer_Parms.inObj = inObj;

	this->ProcessEvent ( pFnClearTimer, &ClearTimer_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.SetTimer
// [0x00024002] 
// Parameters infos:
// float                          InRate                         ( CPF_Parm )
// unsigned long                  inbLoop                        ( CPF_OptionalParm | CPF_Parm )
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemMagicNew::SetTimer ( float InRate, unsigned long inbLoop, struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnSetTimer = NULL;

	if ( ! pFnSetTimer )
		pFnSetTimer = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.SetTimer" );

	UCombatSystemMagicNew_execSetTimer_Parms SetTimer_Parms;
	SetTimer_Parms.InRate = InRate;
	SetTimer_Parms.inbLoop = inbLoop;
	memcpy ( &SetTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	SetTimer_Parms.inObj = inObj;

	this->ProcessEvent ( pFnSetTimer, &SetTimer_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.GetNowPawn
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* UCombatSystemMagicNew::GetNowPawn ( )
{
	static UFunction* pFnGetNowPawn = NULL;

	if ( ! pFnGetNowPawn )
		pFnGetNowPawn = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.GetNowPawn" );

	UCombatSystemMagicNew_execGetNowPawn_Parms GetNowPawn_Parms;

	this->ProcessEvent ( pFnGetNowPawn, &GetNowPawn_Parms, NULL );

	return GetNowPawn_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.TraceAndGetTarget
// [0x00820002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          SpellRange                     ( CPF_Parm )

class AActor* UCombatSystemMagicNew::TraceAndGetTarget ( float SpellRange )
{
	static UFunction* pFnTraceAndGetTarget = NULL;

	if ( ! pFnTraceAndGetTarget )
		pFnTraceAndGetTarget = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.TraceAndGetTarget" );

	UCombatSystemMagicNew_execTraceAndGetTarget_Parms TraceAndGetTarget_Parms;
	TraceAndGetTarget_Parms.SpellRange = SpellRange;

	this->ProcessEvent ( pFnTraceAndGetTarget, &TraceAndGetTarget_Parms, NULL );

	return TraceAndGetTarget_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.CheckForFXEmitter
// [0x00020002] 
// Parameters infos:

void UCombatSystemMagicNew::CheckForFXEmitter ( )
{
	static UFunction* pFnCheckForFXEmitter = NULL;

	if ( ! pFnCheckForFXEmitter )
		pFnCheckForFXEmitter = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.CheckForFXEmitter" );

	UCombatSystemMagicNew_execCheckForFXEmitter_Parms CheckForFXEmitter_Parms;

	this->ProcessEvent ( pFnCheckForFXEmitter, &CheckForFXEmitter_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.StartChargeFX
// [0x00020002] 
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )

void UCombatSystemMagicNew::StartChargeFX ( int SpellID )
{
	static UFunction* pFnStartChargeFX = NULL;

	if ( ! pFnStartChargeFX )
		pFnStartChargeFX = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.StartChargeFX" );

	UCombatSystemMagicNew_execStartChargeFX_Parms StartChargeFX_Parms;
	StartChargeFX_Parms.SpellID = SpellID;

	this->ProcessEvent ( pFnStartChargeFX, &StartChargeFX_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.StartNewChargeFX
// [0x00024002] 
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )
// class UAnimNotify_PlayIndexedParticleEffect* AnimNotifyData                 ( CPF_Const | CPF_OptionalParm | CPF_Parm )

void UCombatSystemMagicNew::StartNewChargeFX ( int SpellID, class UAnimNotify_PlayIndexedParticleEffect* AnimNotifyData )
{
	static UFunction* pFnStartNewChargeFX = NULL;

	if ( ! pFnStartNewChargeFX )
		pFnStartNewChargeFX = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.StartNewChargeFX" );

	UCombatSystemMagicNew_execStartNewChargeFX_Parms StartNewChargeFX_Parms;
	StartNewChargeFX_Parms.SpellID = SpellID;
	StartNewChargeFX_Parms.AnimNotifyData = AnimNotifyData;

	this->ProcessEvent ( pFnStartNewChargeFX, &StartNewChargeFX_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.spawnLateEffect
// [0x00020002] 
// Parameters infos:

void UCombatSystemMagicNew::spawnLateEffect ( )
{
	static UFunction* pFnspawnLateEffect = NULL;

	if ( ! pFnspawnLateEffect )
		pFnspawnLateEffect = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.spawnLateEffect" );

	UCombatSystemMagicNew_execspawnLateEffect_Parms spawnLateEffect_Parms;

	this->ProcessEvent ( pFnspawnLateEffect, &spawnLateEffect_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.StartReleaseFX
// [0x00824002] 
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )
// unsigned long                  selfPwnage                     ( CPF_OptionalParm | CPF_Parm )
// struct FString                 SocketName                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct FString                 BoneName                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UCombatSystemMagicNew::StartReleaseFX ( int SpellID, unsigned long selfPwnage, struct FString SocketName, struct FString BoneName )
{
	static UFunction* pFnStartReleaseFX = NULL;

	if ( ! pFnStartReleaseFX )
		pFnStartReleaseFX = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.StartReleaseFX" );

	UCombatSystemMagicNew_execStartReleaseFX_Parms StartReleaseFX_Parms;
	StartReleaseFX_Parms.SpellID = SpellID;
	StartReleaseFX_Parms.selfPwnage = selfPwnage;
	memcpy ( &StartReleaseFX_Parms.SocketName, &SocketName, 0xC );
	memcpy ( &StartReleaseFX_Parms.BoneName, &BoneName, 0xC );

	this->ProcessEvent ( pFnStartReleaseFX, &StartReleaseFX_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.StopParticleFX
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UCombatSystemMagicNew::StopParticleFX ( int Index )
{
	static UFunction* pFnStopParticleFX = NULL;

	if ( ! pFnStopParticleFX )
		pFnStopParticleFX = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.StopParticleFX" );

	UCombatSystemMagicNew_execStopParticleFX_Parms StopParticleFX_Parms;
	StopParticleFX_Parms.Index = Index;

	this->ProcessEvent ( pFnStopParticleFX, &StopParticleFX_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.GetNewTraceEndStraight
// [0x00C20002] 
// Parameters infos:
// int                            Speed                          ( CPF_Parm )
// struct FVector                 EndShot                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 StartShot                      ( CPF_Parm | CPF_OutParm )

void UCombatSystemMagicNew::GetNewTraceEndStraight ( int Speed, struct FVector* EndShot, struct FVector* StartShot )
{
	static UFunction* pFnGetNewTraceEndStraight = NULL;

	if ( ! pFnGetNewTraceEndStraight )
		pFnGetNewTraceEndStraight = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.GetNewTraceEndStraight" );

	UCombatSystemMagicNew_execGetNewTraceEndStraight_Parms GetNewTraceEndStraight_Parms;
	GetNewTraceEndStraight_Parms.Speed = Speed;

	this->ProcessEvent ( pFnGetNewTraceEndStraight, &GetNewTraceEndStraight_Parms, NULL );

	if ( EndShot )
		memcpy ( EndShot, &GetNewTraceEndStraight_Parms.EndShot, 0xC );

	if ( StartShot )
		memcpy ( StartShot, &GetNewTraceEndStraight_Parms.StartShot, 0xC );
};

// Function NowGame.CombatSystemMagicNew.GetTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* UCombatSystemMagicNew::GetTarget ( )
{
	static UFunction* pFnGetTarget = NULL;

	if ( ! pFnGetTarget )
		pFnGetTarget = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.GetTarget" );

	UCombatSystemMagicNew_execGetTarget_Parms GetTarget_Parms;

	this->ProcessEvent ( pFnGetTarget, &GetTarget_Parms, NULL );

	return GetTarget_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.CancelSpells
// [0x00020002] 
// Parameters infos:

void UCombatSystemMagicNew::CancelSpells ( )
{
	static UFunction* pFnCancelSpells = NULL;

	if ( ! pFnCancelSpells )
		pFnCancelSpells = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.CancelSpells" );

	UCombatSystemMagicNew_execCancelSpells_Parms CancelSpells_Parms;

	this->ProcessEvent ( pFnCancelSpells, &CancelSpells_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.SetMainEffectEmitter
// [0x00020002] 
// Parameters infos:
// class UParticleSystem*         PS                             ( CPF_Parm )

void UCombatSystemMagicNew::SetMainEffectEmitter ( class UParticleSystem* PS )
{
	static UFunction* pFnSetMainEffectEmitter = NULL;

	if ( ! pFnSetMainEffectEmitter )
		pFnSetMainEffectEmitter = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.SetMainEffectEmitter" );

	UCombatSystemMagicNew_execSetMainEffectEmitter_Parms SetMainEffectEmitter_Parms;
	SetMainEffectEmitter_Parms.PS = PS;

	this->ProcessEvent ( pFnSetMainEffectEmitter, &SetMainEffectEmitter_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.traceLocation
// [0x00824002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 traceMethod                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 TargetLoc                      ( CPF_OptionalParm | CPF_Parm )

struct FVector UCombatSystemMagicNew::traceLocation ( struct FString traceMethod, struct FVector TargetLoc )
{
	static UFunction* pFntraceLocation = NULL;

	if ( ! pFntraceLocation )
		pFntraceLocation = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.traceLocation" );

	UCombatSystemMagicNew_exectraceLocation_Parms traceLocation_Parms;
	memcpy ( &traceLocation_Parms.traceMethod, &traceMethod, 0xC );
	memcpy ( &traceLocation_Parms.TargetLoc, &TargetLoc, 0xC );

	this->ProcessEvent ( pFntraceLocation, &traceLocation_Parms, NULL );

	return traceLocation_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.traceCharacter
// [0x00C24002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 traceMethod                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 TargetLoc                      ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm | CPF_OutParm )

bool UCombatSystemMagicNew::traceCharacter ( struct FString traceMethod, struct FVector TargetLoc, class AActor** HitActor )
{
	static UFunction* pFntraceCharacter = NULL;

	if ( ! pFntraceCharacter )
		pFntraceCharacter = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.traceCharacter" );

	UCombatSystemMagicNew_exectraceCharacter_Parms traceCharacter_Parms;
	memcpy ( &traceCharacter_Parms.traceMethod, &traceMethod, 0xC );
	memcpy ( &traceCharacter_Parms.TargetLoc, &TargetLoc, 0xC );

	this->ProcessEvent ( pFntraceCharacter, &traceCharacter_Parms, NULL );

	if ( HitActor )
		*HitActor = traceCharacter_Parms.HitActor;

	return traceCharacter_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.spellRelease
// [0x00824002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SpellID                        ( CPF_Parm )
// struct FVector                 TargetLoc                      ( CPF_OptionalParm | CPF_Parm )

bool UCombatSystemMagicNew::spellRelease ( int SpellID, struct FVector TargetLoc )
{
	static UFunction* pFnspellRelease = NULL;

	if ( ! pFnspellRelease )
		pFnspellRelease = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.spellRelease" );

	UCombatSystemMagicNew_execspellRelease_Parms spellRelease_Parms;
	spellRelease_Parms.SpellID = SpellID;
	memcpy ( &spellRelease_Parms.TargetLoc, &TargetLoc, 0xC );

	this->ProcessEvent ( pFnspellRelease, &spellRelease_Parms, NULL );

	return spellRelease_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.heldTooLong
// [0x00020002] 
// Parameters infos:

void UCombatSystemMagicNew::heldTooLong ( )
{
	static UFunction* pFnheldTooLong = NULL;

	if ( ! pFnheldTooLong )
		pFnheldTooLong = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.heldTooLong" );

	UCombatSystemMagicNew_execheldTooLong_Parms heldTooLong_Parms;

	this->ProcessEvent ( pFnheldTooLong, &heldTooLong_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.ChargeReady
// [0x00020002] 
// Parameters infos:

void UCombatSystemMagicNew::ChargeReady ( )
{
	static UFunction* pFnChargeReady = NULL;

	if ( ! pFnChargeReady )
		pFnChargeReady = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.ChargeReady" );

	UCombatSystemMagicNew_execChargeReady_Parms ChargeReady_Parms;

	this->ProcessEvent ( pFnChargeReady, &ChargeReady_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.SpellCharge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SpellID                        ( CPF_Parm )

bool UCombatSystemMagicNew::SpellCharge ( int SpellID )
{
	static UFunction* pFnSpellCharge = NULL;

	if ( ! pFnSpellCharge )
		pFnSpellCharge = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.SpellCharge" );

	UCombatSystemMagicNew_execSpellCharge_Parms SpellCharge_Parms;
	SpellCharge_Parms.SpellID = SpellID;

	this->ProcessEvent ( pFnSpellCharge, &SpellCharge_Parms, NULL );

	return SpellCharge_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.checkActionAvailability
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SpellID                        ( CPF_Parm )

bool UCombatSystemMagicNew::checkActionAvailability ( int SpellID )
{
	static UFunction* pFncheckActionAvailability = NULL;

	if ( ! pFncheckActionAvailability )
		pFncheckActionAvailability = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.checkActionAvailability" );

	UCombatSystemMagicNew_execcheckActionAvailability_Parms checkActionAvailability_Parms;
	checkActionAvailability_Parms.SpellID = SpellID;

	this->ProcessEvent ( pFncheckActionAvailability, &checkActionAvailability_Parms, NULL );

	return checkActionAvailability_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.SpellAction
// [0x00020002] 
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )

void UCombatSystemMagicNew::SpellAction ( int SpellID )
{
	static UFunction* pFnSpellAction = NULL;

	if ( ! pFnSpellAction )
		pFnSpellAction = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.SpellAction" );

	UCombatSystemMagicNew_execSpellAction_Parms SpellAction_Parms;
	SpellAction_Parms.SpellID = SpellID;

	this->ProcessEvent ( pFnSpellAction, &SpellAction_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.CheckGCD
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  spellRelease                   ( CPF_Parm )

bool UCombatSystemMagicNew::CheckGCD ( unsigned long spellRelease )
{
	static UFunction* pFnCheckGCD = NULL;

	if ( ! pFnCheckGCD )
		pFnCheckGCD = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.CheckGCD" );

	UCombatSystemMagicNew_execCheckGCD_Parms CheckGCD_Parms;
	CheckGCD_Parms.spellRelease = spellRelease;

	this->ProcessEvent ( pFnCheckGCD, &CheckGCD_Parms, NULL );

	return CheckGCD_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMagicNew.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UCombatSystemMagicNew::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.AttachTo" );

	UCombatSystemMagicNew_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.CombatSystemMagicNew.TickCombat
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemMagicNew::TickCombat ( float DeltaTime )
{
	static UFunction* pFnTickCombat = NULL;

	if ( ! pFnTickCombat )
		pFnTickCombat = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMagicNew.TickCombat" );

	UCombatSystemMagicNew_execTickCombat_Parms TickCombat_Parms;
	TickCombat_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombat, &TickCombat_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.GetHitForce
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UCombatSystemMeleeNew::GetHitForce ( )
{
	static UFunction* pFnGetHitForce = NULL;

	if ( ! pFnGetHitForce )
		pFnGetHitForce = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.GetHitForce" );

	UCombatSystemMeleeNew_execGetHitForce_Parms GetHitForce_Parms;

	this->ProcessEvent ( pFnGetHitForce, &GetHitForce_Parms, NULL );

	return GetHitForce_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.GetMeleeHitPart
// [0x00C24002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StarTrace                      ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_OptionalParm | CPF_Parm )
// int                            HitPart                        ( CPF_Parm | CPF_OutParm )
// struct FVector                 HitLoc                         ( CPF_Parm | CPF_OutParm )

bool UCombatSystemMeleeNew::GetMeleeHitPart ( struct FVector StarTrace, struct FVector EndTrace, class AActor* HitActor, int* HitPart, struct FVector* HitLoc )
{
	static UFunction* pFnGetMeleeHitPart = NULL;

	if ( ! pFnGetMeleeHitPart )
		pFnGetMeleeHitPart = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.GetMeleeHitPart" );

	UCombatSystemMeleeNew_execGetMeleeHitPart_Parms GetMeleeHitPart_Parms;
	memcpy ( &GetMeleeHitPart_Parms.StarTrace, &StarTrace, 0xC );
	memcpy ( &GetMeleeHitPart_Parms.EndTrace, &EndTrace, 0xC );
	GetMeleeHitPart_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnGetMeleeHitPart, &GetMeleeHitPart_Parms, NULL );

	if ( HitPart )
		*HitPart = GetMeleeHitPart_Parms.HitPart;

	if ( HitLoc )
		memcpy ( HitLoc, &GetMeleeHitPart_Parms.HitLoc, 0xC );

	return GetMeleeHitPart_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.GetMeleeBashHit
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UCombatSystemMeleeNew::GetMeleeBashHit ( )
{
	static UFunction* pFnGetMeleeBashHit = NULL;

	if ( ! pFnGetMeleeBashHit )
		pFnGetMeleeBashHit = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.GetMeleeBashHit" );

	UCombatSystemMeleeNew_execGetMeleeBashHit_Parms GetMeleeBashHit_Parms;

	this->ProcessEvent ( pFnGetMeleeBashHit, &GetMeleeBashHit_Parms, NULL );

	return GetMeleeBashHit_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.GetMeleeChargeAnimation
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UCombatSystemMeleeNew::GetMeleeChargeAnimation ( )
{
	static UFunction* pFnGetMeleeChargeAnimation = NULL;

	if ( ! pFnGetMeleeChargeAnimation )
		pFnGetMeleeChargeAnimation = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.GetMeleeChargeAnimation" );

	UCombatSystemMeleeNew_execGetMeleeChargeAnimation_Parms GetMeleeChargeAnimation_Parms;

	this->ProcessEvent ( pFnGetMeleeChargeAnimation, &GetMeleeChargeAnimation_Parms, NULL );

	return GetMeleeChargeAnimation_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.GetMountSwing
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UCombatSystemMeleeNew::GetMountSwing ( )
{
	static UFunction* pFnGetMountSwing = NULL;

	if ( ! pFnGetMountSwing )
		pFnGetMountSwing = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.GetMountSwing" );

	UCombatSystemMeleeNew_execGetMountSwing_Parms GetMountSwing_Parms;

	this->ProcessEvent ( pFnGetMountSwing, &GetMountSwing_Parms, NULL );

	return GetMountSwing_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.ResetTraceFunction
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::ResetTraceFunction ( )
{
	static UFunction* pFnResetTraceFunction = NULL;

	if ( ! pFnResetTraceFunction )
		pFnResetTraceFunction = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.ResetTraceFunction" );

	UCombatSystemMeleeNew_execResetTraceFunction_Parms ResetTraceFunction_Parms;

	this->ProcessEvent ( pFnResetTraceFunction, &ResetTraceFunction_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.HandleTraceHit
// [0x00020002] 
// Parameters infos:
// struct FVector                 outHitLocation                 ( CPF_Parm )
// int                            outHitPart                     ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

void UCombatSystemMeleeNew::HandleTraceHit ( struct FVector outHitLocation, int outHitPart, class AActor* HitActor )
{
	static UFunction* pFnHandleTraceHit = NULL;

	if ( ! pFnHandleTraceHit )
		pFnHandleTraceHit = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.HandleTraceHit" );

	UCombatSystemMeleeNew_execHandleTraceHit_Parms HandleTraceHit_Parms;
	memcpy ( &HandleTraceHit_Parms.outHitLocation, &outHitLocation, 0xC );
	HandleTraceHit_Parms.outHitPart = outHitPart;
	HandleTraceHit_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnHandleTraceHit, &HandleTraceHit_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.DoCostantTrace
// [0x00820002] 
// Parameters infos:

void UCombatSystemMeleeNew::DoCostantTrace ( )
{
	static UFunction* pFnDoCostantTrace = NULL;

	if ( ! pFnDoCostantTrace )
		pFnDoCostantTrace = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.DoCostantTrace" );

	UCombatSystemMeleeNew_execDoCostantTrace_Parms DoCostantTrace_Parms;

	this->ProcessEvent ( pFnDoCostantTrace, &DoCostantTrace_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UCombatSystemMeleeNew::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.AttachTo" );

	UCombatSystemMeleeNew_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.TickCombat
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemMeleeNew::TickCombat ( float DeltaTime )
{
	static UFunction* pFnTickCombat = NULL;

	if ( ! pFnTickCombat )
		pFnTickCombat = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.TickCombat" );

	UCombatSystemMeleeNew_execTickCombat_Parms TickCombat_Parms;
	TickCombat_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombat, &TickCombat_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.IsPointCloserToHandle
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vHitPoint                      ( CPF_Parm )
// struct FVector                 vStarTrace                     ( CPF_Parm )
// struct FVector                 vEndTrace                      ( CPF_Parm )

bool UCombatSystemMeleeNew::IsPointCloserToHandle ( struct FVector vHitPoint, struct FVector vStarTrace, struct FVector vEndTrace )
{
	static UFunction* pFnIsPointCloserToHandle = NULL;

	if ( ! pFnIsPointCloserToHandle )
		pFnIsPointCloserToHandle = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.IsPointCloserToHandle" );

	UCombatSystemMeleeNew_execIsPointCloserToHandle_Parms IsPointCloserToHandle_Parms;
	memcpy ( &IsPointCloserToHandle_Parms.vHitPoint, &vHitPoint, 0xC );
	memcpy ( &IsPointCloserToHandle_Parms.vStarTrace, &vStarTrace, 0xC );
	memcpy ( &IsPointCloserToHandle_Parms.vEndTrace, &vEndTrace, 0xC );

	this->ProcessEvent ( pFnIsPointCloserToHandle, &IsPointCloserToHandle_Parms, NULL );

	return IsPointCloserToHandle_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.CheckWeaponCollision
// [0x00820002] 
// Parameters infos:

void UCombatSystemMeleeNew::CheckWeaponCollision ( )
{
	static UFunction* pFnCheckWeaponCollision = NULL;

	if ( ! pFnCheckWeaponCollision )
		pFnCheckWeaponCollision = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.CheckWeaponCollision" );

	UCombatSystemMeleeNew_execCheckWeaponCollision_Parms CheckWeaponCollision_Parms;

	this->ProcessEvent ( pFnCheckWeaponCollision, &CheckWeaponCollision_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.UpdateArmIK
// [0x00020002] 
// Parameters infos:
// float                          NewStr                         ( CPF_Parm )

void UCombatSystemMeleeNew::UpdateArmIK ( float NewStr )
{
	static UFunction* pFnUpdateArmIK = NULL;

	if ( ! pFnUpdateArmIK )
		pFnUpdateArmIK = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.UpdateArmIK" );

	UCombatSystemMeleeNew_execUpdateArmIK_Parms UpdateArmIK_Parms;
	UpdateArmIK_Parms.NewStr = NewStr;

	this->ProcessEvent ( pFnUpdateArmIK, &UpdateArmIK_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.CheckForStructureTarget
// [0x00820002] 
// Parameters infos:

void UCombatSystemMeleeNew::CheckForStructureTarget ( )
{
	static UFunction* pFnCheckForStructureTarget = NULL;

	if ( ! pFnCheckForStructureTarget )
		pFnCheckForStructureTarget = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.CheckForStructureTarget" );

	UCombatSystemMeleeNew_execCheckForStructureTarget_Parms CheckForStructureTarget_Parms;

	this->ProcessEvent ( pFnCheckForStructureTarget, &CheckForStructureTarget_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.SortDel
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )
// class AActor*                  B                              ( CPF_Parm )

int UCombatSystemMeleeNew::SortDel ( class AActor* A, class AActor* B )
{
	static UFunction* pFnSortDel = NULL;

	if ( ! pFnSortDel )
		pFnSortDel = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.SortDel" );

	UCombatSystemMeleeNew_execSortDel_Parms SortDel_Parms;
	SortDel_Parms.A = A;
	SortDel_Parms.B = B;

	this->ProcessEvent ( pFnSortDel, &SortDel_Parms, NULL );

	return SortDel_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.GetPossibleTargets
// [0x00820002] 
// Parameters infos:

void UCombatSystemMeleeNew::GetPossibleTargets ( )
{
	static UFunction* pFnGetPossibleTargets = NULL;

	if ( ! pFnGetPossibleTargets )
		pFnGetPossibleTargets = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.GetPossibleTargets" );

	UCombatSystemMeleeNew_execGetPossibleTargets_Parms GetPossibleTargets_Parms;

	this->ProcessEvent ( pFnGetPossibleTargets, &GetPossibleTargets_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.ClientHitFeedback
// [0x00020002] 
// Parameters infos:
// unsigned long                  bStructure                     ( CPF_Parm )
// unsigned long                  bBlocked                       ( CPF_Parm )

void UCombatSystemMeleeNew::ClientHitFeedback ( unsigned long bStructure, unsigned long bBlocked )
{
	static UFunction* pFnClientHitFeedback = NULL;

	if ( ! pFnClientHitFeedback )
		pFnClientHitFeedback = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.ClientHitFeedback" );

	UCombatSystemMeleeNew_execClientHitFeedback_Parms ClientHitFeedback_Parms;
	ClientHitFeedback_Parms.bStructure = bStructure;
	ClientHitFeedback_Parms.bBlocked = bBlocked;

	this->ProcessEvent ( pFnClientHitFeedback, &ClientHitFeedback_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.CancelCharge
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::CancelCharge ( )
{
	static UFunction* pFnCancelCharge = NULL;

	if ( ! pFnCancelCharge )
		pFnCancelCharge = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.CancelCharge" );

	UCombatSystemMeleeNew_execCancelCharge_Parms CancelCharge_Parms;

	this->ProcessEvent ( pFnCancelCharge, &CancelCharge_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.StopAltFire
// [0x00024002] 
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemMeleeNew::StopAltFire ( unsigned long bForce )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.StopAltFire" );

	UCombatSystemMeleeNew_execStopAltFire_Parms StopAltFire_Parms;
	StopAltFire_Parms.bForce = bForce;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.StartAltFire
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::StartAltFire ( )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.StartAltFire" );

	UCombatSystemMeleeNew_execStartAltFire_Parms StartAltFire_Parms;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.SendHitToServer
// [0x00020002] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            HitPart                        ( CPF_Parm )
// class AActor*                  HitTarget                      ( CPF_Parm )

	static UFunction* pFnSendHitToServer = NULL;
void UCombatSystemMeleeNew::SendHitToServer ( struct FVector HitLocation, int HitPart, class AActor* HitTarget )
{

	if ( ! pFnSendHitToServer )
		pFnSendHitToServer = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.SendHitToServer" );

	UCombatSystemMeleeNew_execSendHitToServer_Parms SendHitToServer_Parms;
	memcpy ( &SendHitToServer_Parms.HitLocation, &HitLocation, 0xC );
	SendHitToServer_Parms.HitPart = HitPart;
	SendHitToServer_Parms.HitTarget = HitTarget;

	this->ProcessEvent ( pFnSendHitToServer, &SendHitToServer_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.UnTriggerBloodTrail
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::UnTriggerBloodTrail ( )
{
	static UFunction* pFnUnTriggerBloodTrail = NULL;

	if ( ! pFnUnTriggerBloodTrail )
		pFnUnTriggerBloodTrail = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.UnTriggerBloodTrail" );

	UCombatSystemMeleeNew_execUnTriggerBloodTrail_Parms UnTriggerBloodTrail_Parms;

	this->ProcessEvent ( pFnUnTriggerBloodTrail, &UnTriggerBloodTrail_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.TriggerBloodTrail
// [0x00824002] 
// Parameters infos:
// unsigned long                  bBlunt                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bRight                         ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemMeleeNew::TriggerBloodTrail ( unsigned long bBlunt, unsigned long bRight )
{
	static UFunction* pFnTriggerBloodTrail = NULL;

	if ( ! pFnTriggerBloodTrail )
		pFnTriggerBloodTrail = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.TriggerBloodTrail" );

	UCombatSystemMeleeNew_execTriggerBloodTrail_Parms TriggerBloodTrail_Parms;
	TriggerBloodTrail_Parms.bBlunt = bBlunt;
	TriggerBloodTrail_Parms.bRight = bRight;

	this->ProcessEvent ( pFnTriggerBloodTrail, &TriggerBloodTrail_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.ServExecCombatMoveAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            AnimEnum                       ( CPF_Parm )
// float                          AnimRate                       ( CPF_Parm )

void UCombatSystemMeleeNew::ServExecCombatMoveAnim ( int AnimEnum, float AnimRate )
{
	static UFunction* pFnServExecCombatMoveAnim = NULL;

	if ( ! pFnServExecCombatMoveAnim )
		pFnServExecCombatMoveAnim = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.ServExecCombatMoveAnim" );

	UCombatSystemMeleeNew_execServExecCombatMoveAnim_Parms ServExecCombatMoveAnim_Parms;
	ServExecCombatMoveAnim_Parms.AnimEnum = AnimEnum;
	ServExecCombatMoveAnim_Parms.AnimRate = AnimRate;

	pFnServExecCombatMoveAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServExecCombatMoveAnim, &ServExecCombatMoveAnim_Parms, NULL );

	pFnServExecCombatMoveAnim->FunctionFlags |= 0x400;
};

// Function NowGame.CombatSystemMeleeNew.ServExecCombatMove
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            Idx                            ( CPF_Parm )
// class AActor*                  Target                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIsTellB                       ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemMeleeNew::ServExecCombatMove ( int Idx, class AActor* Target, unsigned long bIsTellB )
{
	static UFunction* pFnServExecCombatMove = NULL;

	if ( ! pFnServExecCombatMove )
		pFnServExecCombatMove = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.ServExecCombatMove" );

	UCombatSystemMeleeNew_execServExecCombatMove_Parms ServExecCombatMove_Parms;
	ServExecCombatMove_Parms.Idx = Idx;
	ServExecCombatMove_Parms.Target = Target;
	ServExecCombatMove_Parms.bIsTellB = bIsTellB;

	pFnServExecCombatMove->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServExecCombatMove, &ServExecCombatMove_Parms, NULL );

	pFnServExecCombatMove->FunctionFlags |= 0x400;
};

// Function NowGame.CombatSystemMeleeNew.StopFire
// [0x00024002] 
// Parameters infos:
// unsigned long                  TargetSelf                     ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemMeleeNew::StopFire ( unsigned long TargetSelf )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.StopFire" );

	UCombatSystemMeleeNew_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.TargetSelf = TargetSelf;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.StartFire
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.StartFire" );

	UCombatSystemMeleeNew_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.StartShieldBash
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::StartShieldBash ( )
{
	static UFunction* pFnStartShieldBash = NULL;

	if ( ! pFnStartShieldBash )
		pFnStartShieldBash = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.StartShieldBash" );

	UCombatSystemMeleeNew_execStartShieldBash_Parms StartShieldBash_Parms;

	this->ProcessEvent ( pFnStartShieldBash, &StartShieldBash_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.PlayHitSound
// [0x00020002] 
// Parameters infos:
// unsigned long                  bHandleHitFeedback             ( CPF_Parm )
// unsigned long                  bBlunt                         ( CPF_Parm )

void UCombatSystemMeleeNew::PlayHitSound ( unsigned long bHandleHitFeedback, unsigned long bBlunt )
{
	static UFunction* pFnPlayHitSound = NULL;

	if ( ! pFnPlayHitSound )
		pFnPlayHitSound = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.PlayHitSound" );

	UCombatSystemMeleeNew_execPlayHitSound_Parms PlayHitSound_Parms;
	PlayHitSound_Parms.bHandleHitFeedback = bHandleHitFeedback;
	PlayHitSound_Parms.bBlunt = bBlunt;

	this->ProcessEvent ( pFnPlayHitSound, &PlayHitSound_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.GetTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* UCombatSystemMeleeNew::GetTarget ( )
{
	static UFunction* pFnGetTarget = NULL;

	if ( ! pFnGetTarget )
		pFnGetTarget = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.GetTarget" );

	UCombatSystemMeleeNew_execGetTarget_Parms GetTarget_Parms;

	this->ProcessEvent ( pFnGetTarget, &GetTarget_Parms, NULL );

	return GetTarget_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.CheckStamina
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bLeftWeapon                    ( CPF_Parm )

bool UCombatSystemMeleeNew::CheckStamina ( unsigned long bLeftWeapon )
{
	static UFunction* pFnCheckStamina = NULL;

	if ( ! pFnCheckStamina )
		pFnCheckStamina = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.CheckStamina" );

	UCombatSystemMeleeNew_execCheckStamina_Parms CheckStamina_Parms;
	CheckStamina_Parms.bLeftWeapon = bLeftWeapon;

	this->ProcessEvent ( pFnCheckStamina, &CheckStamina_Parms, NULL );

	return CheckStamina_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.TickStaminaDrain
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::TickStaminaDrain ( )
{
	static UFunction* pFnTickStaminaDrain = NULL;

	if ( ! pFnTickStaminaDrain )
		pFnTickStaminaDrain = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.TickStaminaDrain" );

	UCombatSystemMeleeNew_execTickStaminaDrain_Parms TickStaminaDrain_Parms;

	this->ProcessEvent ( pFnTickStaminaDrain, &TickStaminaDrain_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.TickCombatMoves
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemMeleeNew::TickCombatMoves ( float DeltaTime )
{
	static UFunction* pFnTickCombatMoves = NULL;

	if ( ! pFnTickCombatMoves )
		pFnTickCombatMoves = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.TickCombatMoves" );

	UCombatSystemMeleeNew_execTickCombatMoves_Parms TickCombatMoves_Parms;
	TickCombatMoves_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombatMoves, &TickCombatMoves_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.TriggerCombatMoveHit
// [0x00020002] 
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )

void UCombatSystemMeleeNew::TriggerCombatMoveHit ( class AActor* WhatActor )
{
	static UFunction* pFnTriggerCombatMoveHit = NULL;

	if ( ! pFnTriggerCombatMoveHit )
		pFnTriggerCombatMoveHit = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.TriggerCombatMoveHit" );

	UCombatSystemMeleeNew_execTriggerCombatMoveHit_Parms TriggerCombatMoveHit_Parms;
	TriggerCombatMoveHit_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnTriggerCombatMoveHit, &TriggerCombatMoveHit_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.AddCombatMove
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          newTimer                       ( CPF_Parm )
// struct FString                 newAddB                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  newAddBOnTarget                ( CPF_Parm )
// unsigned long                  newbTrace                      ( CPF_Parm )
// struct FString                 newActionName                  ( CPF_Parm | CPF_NeedCtorLink )
// int                            newActionEnum                  ( CPF_Parm )
// float                          newStamina                     ( CPF_Parm )
// struct FString                 newTellb                       ( CPF_Parm | CPF_NeedCtorLink )
// float                          newTraceStartPct               ( CPF_Parm )
// float                          newStunTimePct                 ( CPF_Parm )
// int                            newCombatReqEnum               ( CPF_Parm )

void UCombatSystemMeleeNew::eventAddCombatMove ( float newTimer, struct FString newAddB, unsigned long newAddBOnTarget, unsigned long newbTrace, struct FString newActionName, int newActionEnum, float newStamina, struct FString newTellb, float newTraceStartPct, float newStunTimePct, int newCombatReqEnum )
{
	static UFunction* pFnAddCombatMove = NULL;

	if ( ! pFnAddCombatMove )
		pFnAddCombatMove = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.AddCombatMove" );

	UCombatSystemMeleeNew_eventAddCombatMove_Parms AddCombatMove_Parms;
	AddCombatMove_Parms.newTimer = newTimer;
	memcpy ( &AddCombatMove_Parms.newAddB, &newAddB, 0xC );
	AddCombatMove_Parms.newAddBOnTarget = newAddBOnTarget;
	AddCombatMove_Parms.newbTrace = newbTrace;
	memcpy ( &AddCombatMove_Parms.newActionName, &newActionName, 0xC );
	AddCombatMove_Parms.newActionEnum = newActionEnum;
	AddCombatMove_Parms.newStamina = newStamina;
	memcpy ( &AddCombatMove_Parms.newTellb, &newTellb, 0xC );
	AddCombatMove_Parms.newTraceStartPct = newTraceStartPct;
	AddCombatMove_Parms.newStunTimePct = newStunTimePct;
	AddCombatMove_Parms.newCombatReqEnum = newCombatReqEnum;

	this->ProcessEvent ( pFnAddCombatMove, &AddCombatMove_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.ClearCombatMoves
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::ClearCombatMoves ( )
{
	static UFunction* pFnClearCombatMoves = NULL;

	if ( ! pFnClearCombatMoves )
		pFnClearCombatMoves = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.ClearCombatMoves" );

	UCombatSystemMeleeNew_execClearCombatMoves_Parms ClearCombatMoves_Parms;

	this->ProcessEvent ( pFnClearCombatMoves, &ClearCombatMoves_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.PlayerWasHit
// [0x00020002] 
// Parameters infos:
// int                            lastBoneID                     ( CPF_Parm )

void UCombatSystemMeleeNew::PlayerWasHit ( int lastBoneID )
{
	static UFunction* pFnPlayerWasHit = NULL;

	if ( ! pFnPlayerWasHit )
		pFnPlayerWasHit = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.PlayerWasHit" );

	UCombatSystemMeleeNew_execPlayerWasHit_Parms PlayerWasHit_Parms;
	PlayerWasHit_Parms.lastBoneID = lastBoneID;

	this->ProcessEvent ( pFnPlayerWasHit, &PlayerWasHit_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.CheckBlockStart
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UCombatSystemMeleeNew::CheckBlockStart ( )
{
	static UFunction* pFnCheckBlockStart = NULL;

	if ( ! pFnCheckBlockStart )
		pFnCheckBlockStart = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.CheckBlockStart" );

	UCombatSystemMeleeNew_execCheckBlockStart_Parms CheckBlockStart_Parms;

	this->ProcessEvent ( pFnCheckBlockStart, &CheckBlockStart_Parms, NULL );

	return CheckBlockStart_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.TriggerHitDetection
// [0x00020002] 
// Parameters infos:
// float                          Time                           ( CPF_Parm )
// float                          NewMiddle                      ( CPF_Parm )
// unsigned long                  bCombatMove                    ( CPF_Parm )

void UCombatSystemMeleeNew::TriggerHitDetection ( float Time, float NewMiddle, unsigned long bCombatMove )
{
	static UFunction* pFnTriggerHitDetection = NULL;

	if ( ! pFnTriggerHitDetection )
		pFnTriggerHitDetection = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.TriggerHitDetection" );

	UCombatSystemMeleeNew_execTriggerHitDetection_Parms TriggerHitDetection_Parms;
	TriggerHitDetection_Parms.Time = Time;
	TriggerHitDetection_Parms.NewMiddle = NewMiddle;
	TriggerHitDetection_Parms.bCombatMove = bCombatMove;

	this->ProcessEvent ( pFnTriggerHitDetection, &TriggerHitDetection_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.UpdateWeaponStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   MyPawn                         ( CPF_Parm )

void UCombatSystemMeleeNew::eventUpdateWeaponStats ( class APawn* MyPawn )
{
	static UFunction* pFnUpdateWeaponStats = NULL;

	if ( ! pFnUpdateWeaponStats )
		pFnUpdateWeaponStats = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.UpdateWeaponStats" );

	UCombatSystemMeleeNew_eventUpdateWeaponStats_Parms UpdateWeaponStats_Parms;
	UpdateWeaponStats_Parms.MyPawn = MyPawn;

	this->ProcessEvent ( pFnUpdateWeaponStats, &UpdateWeaponStats_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.GetCounter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UCombatSystemMeleeNew::GetCounter ( )
{
	static UFunction* pFnGetCounter = NULL;

	if ( ! pFnGetCounter )
		pFnGetCounter = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.GetCounter" );

	UCombatSystemMeleeNew_execGetCounter_Parms GetCounter_Parms;

	this->ProcessEvent ( pFnGetCounter, &GetCounter_Parms, NULL );

	return GetCounter_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.SetCounterTimer
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::SetCounterTimer ( )
{
	static UFunction* pFnSetCounterTimer = NULL;

	if ( ! pFnSetCounterTimer )
		pFnSetCounterTimer = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.SetCounterTimer" );

	UCombatSystemMeleeNew_execSetCounterTimer_Parms SetCounterTimer_Parms;

	this->ProcessEvent ( pFnSetCounterTimer, &SetCounterTimer_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.ResetCounterTimer
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::ResetCounterTimer ( )
{
	static UFunction* pFnResetCounterTimer = NULL;

	if ( ! pFnResetCounterTimer )
		pFnResetCounterTimer = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.ResetCounterTimer" );

	UCombatSystemMeleeNew_execResetCounterTimer_Parms ResetCounterTimer_Parms;

	this->ProcessEvent ( pFnResetCounterTimer, &ResetCounterTimer_Parms, NULL );
};

// Function NowGame.CombatSystemMeleeNew.LastSwing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UCombatSystemMeleeNew::LastSwing ( )
{
	static UFunction* pFnLastSwing = NULL;

	if ( ! pFnLastSwing )
		pFnLastSwing = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.LastSwing" );

	UCombatSystemMeleeNew_execLastSwing_Parms LastSwing_Parms;

	this->ProcessEvent ( pFnLastSwing, &LastSwing_Parms, NULL );

	return LastSwing_Parms.ReturnValue;
};

// Function NowGame.CombatSystemMeleeNew.SetLastSwing
// [0x00020002] 
// Parameters infos:

void UCombatSystemMeleeNew::SetLastSwing ( )
{
	static UFunction* pFnSetLastSwing = NULL;

	if ( ! pFnSetLastSwing )
		pFnSetLastSwing = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemMeleeNew.SetLastSwing" );

	UCombatSystemMeleeNew_execSetLastSwing_Parms SetLastSwing_Parms;

	this->ProcessEvent ( pFnSetLastSwing, &SetLastSwing_Parms, NULL );
};

// Function NowGame.LoginManager.GetGFXHud
// [0x00020002] 
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* ULoginManager::GetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.GetGFXHud" );

	ULoginManager_execGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.LoginManager.CheckConnection
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

bool ULoginManager::CheckConnection ( float DeltaTime )
{
	static UFunction* pFnCheckConnection = NULL;

	if ( ! pFnCheckConnection )
		pFnCheckConnection = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.CheckConnection" );

	ULoginManager_execCheckConnection_Parms CheckConnection_Parms;
	CheckConnection_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnCheckConnection, &CheckConnection_Parms, NULL );

	return CheckConnection_Parms.ReturnValue;
};

// Function NowGame.LoginManager.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ULoginManager::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.Tick" );

	ULoginManager_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.LoginManager.ResetManager
// [0x00020002] 
// Parameters infos:

void ULoginManager::ResetManager ( )
{
	static UFunction* pFnResetManager = NULL;

	if ( ! pFnResetManager )
		pFnResetManager = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.ResetManager" );

	ULoginManager_execResetManager_Parms ResetManager_Parms;

	this->ProcessEvent ( pFnResetManager, &ResetManager_Parms, NULL );
};

// Function NowGame.LoginManager.CloseLoginScreen
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ULoginManager::eventCloseLoginScreen ( )
{
	static UFunction* pFnCloseLoginScreen = NULL;

	if ( ! pFnCloseLoginScreen )
		pFnCloseLoginScreen = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.CloseLoginScreen" );

	ULoginManager_eventCloseLoginScreen_Parms CloseLoginScreen_Parms;

	this->ProcessEvent ( pFnCloseLoginScreen, &CloseLoginScreen_Parms, NULL );
};

// Function NowGame.LoginManager.IsLoaded
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ULoginManager::IsLoaded ( )
{
	static UFunction* pFnIsLoaded = NULL;

	if ( ! pFnIsLoaded )
		pFnIsLoaded = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.IsLoaded" );

	ULoginManager_execIsLoaded_Parms IsLoaded_Parms;

	this->ProcessEvent ( pFnIsLoaded, &IsLoaded_Parms, NULL );

	return IsLoaded_Parms.ReturnValue;
};

// Function NowGame.LoginManager.SendClientOk
// [0x00020002] 
// Parameters infos:

void ULoginManager::SendClientOk ( )
{
	static UFunction* pFnSendClientOk = NULL;

	if ( ! pFnSendClientOk )
		pFnSendClientOk = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.SendClientOk" );

	ULoginManager_execSendClientOk_Parms SendClientOk_Parms;

	this->ProcessEvent ( pFnSendClientOk, &SendClientOk_Parms, NULL );
};

// Function NowGame.LoginManager.ClientReady
// [0x00020002] 
// Parameters infos:

void ULoginManager::ClientReady ( )
{
	static UFunction* pFnClientReady = NULL;

	if ( ! pFnClientReady )
		pFnClientReady = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.ClientReady" );

	ULoginManager_execClientReady_Parms ClientReady_Parms;

	this->ProcessEvent ( pFnClientReady, &ClientReady_Parms, NULL );
};

// Function NowGame.LoginManager.SetLoadingState
// [0x00020002] 
// Parameters infos:
// int                            NewState                       ( CPF_Parm )

void ULoginManager::SetLoadingState ( int NewState )
{
	static UFunction* pFnSetLoadingState = NULL;

	if ( ! pFnSetLoadingState )
		pFnSetLoadingState = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.SetLoadingState" );

	ULoginManager_execSetLoadingState_Parms SetLoadingState_Parms;
	SetLoadingState_Parms.NewState = NewState;

	this->ProcessEvent ( pFnSetLoadingState, &SetLoadingState_Parms, NULL );
};

// Function NowGame.LoginManager.ShowGFXLoading
// [0x00020002] 
// Parameters infos:

void ULoginManager::ShowGFXLoading ( )
{
	static UFunction* pFnShowGFXLoading = NULL;

	if ( ! pFnShowGFXLoading )
		pFnShowGFXLoading = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.ShowGFXLoading" );

	ULoginManager_execShowGFXLoading_Parms ShowGFXLoading_Parms;

	this->ProcessEvent ( pFnShowGFXLoading, &ShowGFXLoading_Parms, NULL );
};

// Function NowGame.LoginManager.InitManager
// [0x00020002] 
// Parameters infos:

void ULoginManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.InitManager" );

	ULoginManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.LoginManager.SendForcedLogin
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ULoginManager::SendForcedLogin ( )
{
	static UFunction* pFnSendForcedLogin = NULL;

	if ( ! pFnSendForcedLogin )
		pFnSendForcedLogin = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.SendForcedLogin" );

	ULoginManager_execSendForcedLogin_Parms SendForcedLogin_Parms;

	pFnSendForcedLogin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendForcedLogin, &SendForcedLogin_Parms, NULL );

	pFnSendForcedLogin->FunctionFlags |= 0x400;
};

// Function NowGame.LoginManager.CheckForClientConnection
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ULoginManager::CheckForClientConnection ( )
{
	static UFunction* pFnCheckForClientConnection = NULL;

	if ( ! pFnCheckForClientConnection )
		pFnCheckForClientConnection = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.CheckForClientConnection" );

	ULoginManager_execCheckForClientConnection_Parms CheckForClientConnection_Parms;

	pFnCheckForClientConnection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckForClientConnection, &CheckForClientConnection_Parms, NULL );

	pFnCheckForClientConnection->FunctionFlags |= 0x400;

	return CheckForClientConnection_Parms.ReturnValue;
};

// Function NowGame.LoginManager.CheckLoginStage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ULoginManager::CheckLoginStage ( )
{
	static UFunction* pFnCheckLoginStage = NULL;

	if ( ! pFnCheckLoginStage )
		pFnCheckLoginStage = UObject::FindObject< UFunction > ( "Function NowGame.LoginManager.CheckLoginStage" );

	ULoginManager_execCheckLoginStage_Parms CheckLoginStage_Parms;

	pFnCheckLoginStage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckLoginStage, &CheckLoginStage_Parms, NULL );

	pFnCheckLoginStage->FunctionFlags |= 0x400;

	return CheckLoginStage_Parms.ReturnValue;
};

// Function NowGame.MortalBossFireEmitterSpawnable.PostBeginPlay
// [0x00820102] 
// Parameters infos:

void AMortalBossFireEmitterSpawnable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalBossFireEmitterSpawnable.PostBeginPlay" );

	AMortalBossFireEmitterSpawnable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalBossPortalEmitterSpawnable.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalBossPortalEmitterSpawnable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalBossPortalEmitterSpawnable.PostBeginPlay" );

	AMortalBossPortalEmitterSpawnable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalCloudEmitter.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalCloudEmitter::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.MortalCloudEmitter.Destroyed" );

	AMortalCloudEmitter_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalCloudEmitter.PostBeginPlay
// [0x00820102] 
// Parameters infos:

void AMortalCloudEmitter::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalCloudEmitter.PostBeginPlay" );

	AMortalCloudEmitter_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalCloudEmitter.Degree
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DG                             ( CPF_Parm )

float AMortalCloudEmitter::Degree ( float DG )
{
	static UFunction* pFnDegree = NULL;

	if ( ! pFnDegree )
		pFnDegree = UObject::FindObject< UFunction > ( "Function NowGame.MortalCloudEmitter.Degree" );

	AMortalCloudEmitter_execDegree_Parms Degree_Parms;
	Degree_Parms.DG = DG;

	this->ProcessEvent ( pFnDegree, &Degree_Parms, NULL );

	return Degree_Parms.ReturnValue;
};

// Function NowGame.MortalCloudEmitter.RelocateTo
// [0x00020002] 
// Parameters infos:
// int                            Nbr                            ( CPF_Parm )

void AMortalCloudEmitter::RelocateTo ( int Nbr )
{
	static UFunction* pFnRelocateTo = NULL;

	if ( ! pFnRelocateTo )
		pFnRelocateTo = UObject::FindObject< UFunction > ( "Function NowGame.MortalCloudEmitter.RelocateTo" );

	AMortalCloudEmitter_execRelocateTo_Parms RelocateTo_Parms;
	RelocateTo_Parms.Nbr = Nbr;

	this->ProcessEvent ( pFnRelocateTo, &RelocateTo_Parms, NULL );
};

// Function NowGame.MortalCloudEmitter.Replace
// [0x00020002] 
// Parameters infos:

void AMortalCloudEmitter::Replace ( )
{
	static UFunction* pFnReplace = NULL;

	if ( ! pFnReplace )
		pFnReplace = UObject::FindObject< UFunction > ( "Function NowGame.MortalCloudEmitter.Replace" );

	AMortalCloudEmitter_execReplace_Parms Replace_Parms;

	this->ProcessEvent ( pFnReplace, &Replace_Parms, NULL );
};

// Function NowGame.MortalCloudEmitter.MoveAndRotate
// [0x00820002] 
// Parameters infos:
// class UWeatherControl*         Src                            ( CPF_Parm | CPF_EditInline )

void AMortalCloudEmitter::MoveAndRotate ( class UWeatherControl* Src )
{
	static UFunction* pFnMoveAndRotate = NULL;

	if ( ! pFnMoveAndRotate )
		pFnMoveAndRotate = UObject::FindObject< UFunction > ( "Function NowGame.MortalCloudEmitter.MoveAndRotate" );

	AMortalCloudEmitter_execMoveAndRotate_Parms MoveAndRotate_Parms;
	MoveAndRotate_Parms.Src = Src;

	this->ProcessEvent ( pFnMoveAndRotate, &MoveAndRotate_Parms, NULL );
};

// Function NowGame.MortalCloudEmitter.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalCloudEmitter::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.MortalCloudEmitter.Notify" );

	AMortalCloudEmitter_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MortalExponentialHeightFog.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalExponentialHeightFog::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.MortalExponentialHeightFog.Destroyed" );

	AMortalExponentialHeightFog_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalExponentialHeightFog.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalExponentialHeightFog::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalExponentialHeightFog.PostBeginPlay" );

	AMortalExponentialHeightFog_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalExponentialHeightFog.PostponedBase
// [0x00020002] 
// Parameters infos:

void AMortalExponentialHeightFog::PostponedBase ( )
{
	static UFunction* pFnPostponedBase = NULL;

	if ( ! pFnPostponedBase )
		pFnPostponedBase = UObject::FindObject< UFunction > ( "Function NowGame.MortalExponentialHeightFog.PostponedBase" );

	AMortalExponentialHeightFog_execPostponedBase_Parms PostponedBase_Parms;

	this->ProcessEvent ( pFnPostponedBase, &PostponedBase_Parms, NULL );
};

// Function NowGame.MortalExponentialHeightFog.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalExponentialHeightFog::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.MortalExponentialHeightFog.Notify" );

	AMortalExponentialHeightFog_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MortalExponentialHeightFog.Update
// [0x00020002] 
// Parameters infos:
// float                          PartOfDay                      ( CPF_Parm )
// float                          SunRiseAt                      ( CPF_Parm )

void AMortalExponentialHeightFog::Update ( float PartOfDay, float SunRiseAt )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = UObject::FindObject< UFunction > ( "Function NowGame.MortalExponentialHeightFog.Update" );

	AMortalExponentialHeightFog_execUpdate_Parms Update_Parms;
	Update_Parms.PartOfDay = PartOfDay;
	Update_Parms.SunRiseAt = SunRiseAt;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function NowGame.MortalGibEmitterSpawnable.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalGibEmitterSpawnable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalGibEmitterSpawnable.PostBeginPlay" );

	AMortalGibEmitterSpawnable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalGolemDeathEffectSpawner.PostBeginPlay
// [0x00820102] 
// Parameters infos:

void AMortalGolemDeathEffectSpawner::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalGolemDeathEffectSpawner.PostBeginPlay" );

	AMortalGolemDeathEffectSpawner_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalLightning.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalLightning::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.MortalLightning.Destroyed" );

	AMortalLightning_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalLightning.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalLightning::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalLightning.PostBeginPlay" );

	AMortalLightning_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalLightning.TurnOff
// [0x00020002] 
// Parameters infos:

void AMortalLightning::TurnOff ( )
{
	static UFunction* pFnTurnOff = NULL;

	if ( ! pFnTurnOff )
		pFnTurnOff = UObject::FindObject< UFunction > ( "Function NowGame.MortalLightning.TurnOff" );

	AMortalLightning_execTurnOff_Parms TurnOff_Parms;

	this->ProcessEvent ( pFnTurnOff, &TurnOff_Parms, NULL );
};

// Function NowGame.MortalLightning.SoundPlay
// [0x00020002] 
// Parameters infos:

void AMortalLightning::SoundPlay ( )
{
	static UFunction* pFnSoundPlay = NULL;

	if ( ! pFnSoundPlay )
		pFnSoundPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalLightning.SoundPlay" );

	AMortalLightning_execSoundPlay_Parms SoundPlay_Parms;

	this->ProcessEvent ( pFnSoundPlay, &SoundPlay_Parms, NULL );
};

// Function NowGame.MortalLightning.TurnOn
// [0x00020002] 
// Parameters infos:

void AMortalLightning::TurnOn ( )
{
	static UFunction* pFnTurnOn = NULL;

	if ( ! pFnTurnOn )
		pFnTurnOn = UObject::FindObject< UFunction > ( "Function NowGame.MortalLightning.TurnOn" );

	AMortalLightning_execTurnOn_Parms TurnOn_Parms;

	this->ProcessEvent ( pFnTurnOn, &TurnOn_Parms, NULL );
};

// Function NowGame.MortalLightning.Play
// [0x00020002] 
// Parameters infos:

void AMortalLightning::Play ( )
{
	static UFunction* pFnPlay = NULL;

	if ( ! pFnPlay )
		pFnPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalLightning.Play" );

	AMortalLightning_execPlay_Parms Play_Parms;

	this->ProcessEvent ( pFnPlay, &Play_Parms, NULL );
};

// Function NowGame.MortalLightning.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalLightning::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.MortalLightning.Notify" );

	AMortalLightning_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MortalRainSnowEmitterSpawnable.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalRainSnowEmitterSpawnable::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.MortalRainSnowEmitterSpawnable.Destroyed" );

	AMortalRainSnowEmitterSpawnable_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalRainSnowEmitterSpawnable.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalRainSnowEmitterSpawnable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalRainSnowEmitterSpawnable.PostBeginPlay" );

	AMortalRainSnowEmitterSpawnable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalRainSnowEmitterSpawnable.Deactivate
// [0x00020002] 
// Parameters infos:

void AMortalRainSnowEmitterSpawnable::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = UObject::FindObject< UFunction > ( "Function NowGame.MortalRainSnowEmitterSpawnable.Deactivate" );

	AMortalRainSnowEmitterSpawnable_execDeactivate_Parms Deactivate_Parms;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );
};

// Function NowGame.MortalRainSnowEmitterSpawnable.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalRainSnowEmitterSpawnable::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.MortalRainSnowEmitterSpawnable.Notify" );

	AMortalRainSnowEmitterSpawnable_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MortalSceneCaptureCubeMapActor.Destroyed
// [0x00020100] 
// Parameters infos:

void AMortalSceneCaptureCubeMapActor::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.MortalSceneCaptureCubeMapActor.Destroyed" );

	AMortalSceneCaptureCubeMapActor_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalSceneCaptureCubeMapActor.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalSceneCaptureCubeMapActor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalSceneCaptureCubeMapActor.PostBeginPlay" );

	AMortalSceneCaptureCubeMapActor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalSceneCaptureCubeMapActor.PostponedBase
// [0x00020002] 
// Parameters infos:

void AMortalSceneCaptureCubeMapActor::PostponedBase ( )
{
	static UFunction* pFnPostponedBase = NULL;

	if ( ! pFnPostponedBase )
		pFnPostponedBase = UObject::FindObject< UFunction > ( "Function NowGame.MortalSceneCaptureCubeMapActor.PostponedBase" );

	AMortalSceneCaptureCubeMapActor_execPostponedBase_Parms PostponedBase_Parms;

	this->ProcessEvent ( pFnPostponedBase, &PostponedBase_Parms, NULL );
};

// Function NowGame.MortalSceneCaptureCubeMapActor.BaseAndLocateOnActor
// [0x00820002] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AMortalSceneCaptureCubeMapActor::BaseAndLocateOnActor ( class AActor* Other )
{
	static UFunction* pFnBaseAndLocateOnActor = NULL;

	if ( ! pFnBaseAndLocateOnActor )
		pFnBaseAndLocateOnActor = UObject::FindObject< UFunction > ( "Function NowGame.MortalSceneCaptureCubeMapActor.BaseAndLocateOnActor" );

	AMortalSceneCaptureCubeMapActor_execBaseAndLocateOnActor_Parms BaseAndLocateOnActor_Parms;
	BaseAndLocateOnActor_Parms.Other = Other;

	this->ProcessEvent ( pFnBaseAndLocateOnActor, &BaseAndLocateOnActor_Parms, NULL );
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalSunDominantDirectionalLightMovable::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.MortalSunDominantDirectionalLightMovable.Destroyed" );

	AMortalSunDominantDirectionalLightMovable_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalSunDominantDirectionalLightMovable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalSunDominantDirectionalLightMovable.PostBeginPlay" );

	AMortalSunDominantDirectionalLightMovable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalSunDominantDirectionalLightMovable::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.MortalSunDominantDirectionalLightMovable.Notify" );

	AMortalSunDominantDirectionalLightMovable_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.Degree
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DG                             ( CPF_Parm )

float AMortalSunDominantDirectionalLightMovable::Degree ( float DG )
{
	static UFunction* pFnDegree = NULL;

	if ( ! pFnDegree )
		pFnDegree = UObject::FindObject< UFunction > ( "Function NowGame.MortalSunDominantDirectionalLightMovable.Degree" );

	AMortalSunDominantDirectionalLightMovable_execDegree_Parms Degree_Parms;
	Degree_Parms.DG = DG;

	this->ProcessEvent ( pFnDegree, &Degree_Parms, NULL );

	return Degree_Parms.ReturnValue;
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.CalcRotation
// [0x00820002] 
// Parameters infos:
// float                          PartOfDay                      ( CPF_Parm )
// float                          PartOfYear                     ( CPF_Parm )
// float                          SunRiseAt                      ( CPF_Parm )

void AMortalSunDominantDirectionalLightMovable::CalcRotation ( float PartOfDay, float PartOfYear, float SunRiseAt )
{
	static UFunction* pFnCalcRotation = NULL;

	if ( ! pFnCalcRotation )
		pFnCalcRotation = UObject::FindObject< UFunction > ( "Function NowGame.MortalSunDominantDirectionalLightMovable.CalcRotation" );

	AMortalSunDominantDirectionalLightMovable_execCalcRotation_Parms CalcRotation_Parms;
	CalcRotation_Parms.PartOfDay = PartOfDay;
	CalcRotation_Parms.PartOfYear = PartOfYear;
	CalcRotation_Parms.SunRiseAt = SunRiseAt;

	this->ProcessEvent ( pFnCalcRotation, &CalcRotation_Parms, NULL );
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.CalcIntensity
// [0x00020002] 
// Parameters infos:
// float                          PartOfDay                      ( CPF_Parm )
// float                          PartOfYear                     ( CPF_Parm )
// float                          SunRiseAt                      ( CPF_Parm )

void AMortalSunDominantDirectionalLightMovable::CalcIntensity ( float PartOfDay, float PartOfYear, float SunRiseAt )
{
	static UFunction* pFnCalcIntensity = NULL;

	if ( ! pFnCalcIntensity )
		pFnCalcIntensity = UObject::FindObject< UFunction > ( "Function NowGame.MortalSunDominantDirectionalLightMovable.CalcIntensity" );

	AMortalSunDominantDirectionalLightMovable_execCalcIntensity_Parms CalcIntensity_Parms;
	CalcIntensity_Parms.PartOfDay = PartOfDay;
	CalcIntensity_Parms.PartOfYear = PartOfYear;
	CalcIntensity_Parms.SunRiseAt = SunRiseAt;

	this->ProcessEvent ( pFnCalcIntensity, &CalcIntensity_Parms, NULL );
};

// Function NowGame.MortalSunDominantDirectionalLightMovable.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          PartOfDay                      ( CPF_Parm )
// float                          PartOfYear                     ( CPF_Parm )
// float                          SunRiseAt                      ( CPF_Parm )

void AMortalSunDominantDirectionalLightMovable::eventUpdate ( float PartOfDay, float PartOfYear, float SunRiseAt )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = UObject::FindObject< UFunction > ( "Function NowGame.MortalSunDominantDirectionalLightMovable.Update" );

	AMortalSunDominantDirectionalLightMovable_eventUpdate_Parms Update_Parms;
	Update_Parms.PartOfDay = PartOfDay;
	Update_Parms.PartOfYear = PartOfYear;
	Update_Parms.SunRiseAt = SunRiseAt;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function NowGame.MortalWeatherFogVolumeSphericalDensityInfo.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalWeatherFogVolumeSphericalDensityInfo::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.MortalWeatherFogVolumeSphericalDensityInfo.Destroyed" );

	AMortalWeatherFogVolumeSphericalDensityInfo_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalWeatherFogVolumeSphericalDensityInfo.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalWeatherFogVolumeSphericalDensityInfo::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalWeatherFogVolumeSphericalDensityInfo.PostBeginPlay" );

	AMortalWeatherFogVolumeSphericalDensityInfo_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalWeatherFogVolumeSphericalDensityInfo.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalWeatherFogVolumeSphericalDensityInfo::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.MortalWeatherFogVolumeSphericalDensityInfo.Notify" );

	AMortalWeatherFogVolumeSphericalDensityInfo_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MortalWeatherPostProcessVolume.Destroyed
// [0x00020102] 
// Parameters infos:

void AMortalWeatherPostProcessVolume::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.MortalWeatherPostProcessVolume.Destroyed" );

	AMortalWeatherPostProcessVolume_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.MortalWeatherPostProcessVolume.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AMortalWeatherPostProcessVolume::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.MortalWeatherPostProcessVolume.PostBeginPlay" );

	AMortalWeatherPostProcessVolume_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.MortalWeatherPostProcessVolume.SetSetting
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AMortalWeatherPostProcessVolume::SetSetting ( )
{
	static UFunction* pFnSetSetting = NULL;

	if ( ! pFnSetSetting )
		pFnSetSetting = UObject::FindObject< UFunction > ( "Function NowGame.MortalWeatherPostProcessVolume.SetSetting" );

	AMortalWeatherPostProcessVolume_execSetSetting_Parms SetSetting_Parms;

	pFnSetSetting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSetting, &SetSetting_Parms, NULL );

	pFnSetSetting->FunctionFlags |= 0x400;
};

// Function NowGame.MortalWeatherPostProcessVolume.ReplaceClouds
// [0x00020002] 
// Parameters infos:

void AMortalWeatherPostProcessVolume::ReplaceClouds ( )
{
	static UFunction* pFnReplaceClouds = NULL;

	if ( ! pFnReplaceClouds )
		pFnReplaceClouds = UObject::FindObject< UFunction > ( "Function NowGame.MortalWeatherPostProcessVolume.ReplaceClouds" );

	AMortalWeatherPostProcessVolume_execReplaceClouds_Parms ReplaceClouds_Parms;

	this->ProcessEvent ( pFnReplaceClouds, &ReplaceClouds_Parms, NULL );
};

// Function NowGame.MortalWeatherPostProcessVolume.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AMortalWeatherPostProcessVolume::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = UObject::FindObject< UFunction > ( "Function NowGame.MortalWeatherPostProcessVolume.UnTouch" );

	AMortalWeatherPostProcessVolume_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function NowGame.MortalWeatherPostProcessVolume.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AMortalWeatherPostProcessVolume::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = UObject::FindObject< UFunction > ( "Function NowGame.MortalWeatherPostProcessVolume.Touch" );

	AMortalWeatherPostProcessVolume_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.MortalWeatherPostProcessVolume.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void AMortalWeatherPostProcessVolume::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.MortalWeatherPostProcessVolume.Notify" );

	AMortalWeatherPostProcessVolume_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.MountBrain.GetSubSystem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystemNowGame* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UOnlineSubsystemNowGame* UMountBrain::eventGetSubSystem ( )
{
	static UFunction* pFnGetSubSystem = NULL;

	if ( ! pFnGetSubSystem )
		pFnGetSubSystem = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GetSubSystem" );

	UMountBrain_eventGetSubSystem_Parms GetSubSystem_Parms;

	this->ProcessEvent ( pFnGetSubSystem, &GetSubSystem_Parms, NULL );

	return GetSubSystem_Parms.ReturnValue;
};

// Function NowGame.MountBrain.CheckForPanic
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          PanicValue                     ( CPF_Parm )

bool UMountBrain::CheckForPanic ( float PanicValue )
{
	static UFunction* pFnCheckForPanic = NULL;

	if ( ! pFnCheckForPanic )
		pFnCheckForPanic = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.CheckForPanic" );

	UMountBrain_execCheckForPanic_Parms CheckForPanic_Parms;
	CheckForPanic_Parms.PanicValue = PanicValue;

	this->ProcessEvent ( pFnCheckForPanic, &CheckForPanic_Parms, NULL );

	return CheckForPanic_Parms.ReturnValue;
};

// Function NowGame.MountBrain.CalcStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UMountBrain::eventCalcStats ( )
{
	static UFunction* pFnCalcStats = NULL;

	if ( ! pFnCalcStats )
		pFnCalcStats = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.CalcStats" );

	UMountBrain_eventCalcStats_Parms CalcStats_Parms;

	this->ProcessEvent ( pFnCalcStats, &CalcStats_Parms, NULL );
};

// Function NowGame.MountBrain.debugLog
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 whatLog                        ( CPF_Parm | CPF_NeedCtorLink )

void UMountBrain::eventdebugLog ( struct FString whatLog )
{
	static UFunction* pFndebugLog = NULL;

	if ( ! pFndebugLog )
		pFndebugLog = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.debugLog" );

	UMountBrain_eventdebugLog_Parms debugLog_Parms;
	memcpy ( &debugLog_Parms.whatLog, &whatLog, 0xC );

	this->ProcessEvent ( pFndebugLog, &debugLog_Parms, NULL );
};

// Function NowGame.MountBrain.DrawMoDebugLine
// [0x00024002] 
// Parameters infos:
// struct FVector                 LineStart                      ( CPF_Parm )
// struct FVector                 LineEnd                        ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UMountBrain::DrawMoDebugLine ( struct FVector LineStart, struct FVector LineEnd, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawMoDebugLine = NULL;

	if ( ! pFnDrawMoDebugLine )
		pFnDrawMoDebugLine = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.DrawMoDebugLine" );

	UMountBrain_execDrawMoDebugLine_Parms DrawMoDebugLine_Parms;
	memcpy ( &DrawMoDebugLine_Parms.LineStart, &LineStart, 0xC );
	memcpy ( &DrawMoDebugLine_Parms.LineEnd, &LineEnd, 0xC );
	DrawMoDebugLine_Parms.R = R;
	DrawMoDebugLine_Parms.G = G;
	DrawMoDebugLine_Parms.B = B;
	DrawMoDebugLine_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawMoDebugLine, &DrawMoDebugLine_Parms, NULL );
};

// Function NowGame.MountBrain.DrawHudDebug
// [0x00020002] 
// Parameters infos:

void UMountBrain::DrawHudDebug ( )
{
	static UFunction* pFnDrawHudDebug = NULL;

	if ( ! pFnDrawHudDebug )
		pFnDrawHudDebug = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.DrawHudDebug" );

	UMountBrain_execDrawHudDebug_Parms DrawHudDebug_Parms;

	this->ProcessEvent ( pFnDrawHudDebug, &DrawHudDebug_Parms, NULL );
};

// Function NowGame.MountBrain.GetPitchDiff
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UMountBrain::GetPitchDiff ( )
{
	static UFunction* pFnGetPitchDiff = NULL;

	if ( ! pFnGetPitchDiff )
		pFnGetPitchDiff = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GetPitchDiff" );

	UMountBrain_execGetPitchDiff_Parms GetPitchDiff_Parms;

	this->ProcessEvent ( pFnGetPitchDiff, &GetPitchDiff_Parms, NULL );

	return GetPitchDiff_Parms.ReturnValue;
};

// Function NowGame.MountBrain.TickDebug
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickDebug ( float DT )
{
	static UFunction* pFnTickDebug = NULL;

	if ( ! pFnTickDebug )
		pFnTickDebug = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TickDebug" );

	UMountBrain_execTickDebug_Parms TickDebug_Parms;
	TickDebug_Parms.DT = DT;

	this->ProcessEvent ( pFnTickDebug, &TickDebug_Parms, NULL );
};

// Function NowGame.MountBrain.GetDir
// [0x00824002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AddYaw                         ( CPF_OptionalParm | CPF_Parm )

struct FVector UMountBrain::GetDir ( int AddYaw )
{
	static UFunction* pFnGetDir = NULL;

	if ( ! pFnGetDir )
		pFnGetDir = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GetDir" );

	UMountBrain_execGetDir_Parms GetDir_Parms;
	GetDir_Parms.AddYaw = AddYaw;

	this->ProcessEvent ( pFnGetDir, &GetDir_Parms, NULL );

	return GetDir_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GetStartTrace
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UMountBrain::GetStartTrace ( )
{
	static UFunction* pFnGetStartTrace = NULL;

	if ( ! pFnGetStartTrace )
		pFnGetStartTrace = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GetStartTrace" );

	UMountBrain_execGetStartTrace_Parms GetStartTrace_Parms;

	this->ProcessEvent ( pFnGetStartTrace, &GetStartTrace_Parms, NULL );

	return GetStartTrace_Parms.ReturnValue;
};

// Function NowGame.MountBrain.UpdateToRotation
// [0x00820002] 
// Parameters infos:
// float                          FloatDiff                      ( CPF_Parm )

void UMountBrain::UpdateToRotation ( float FloatDiff )
{
	static UFunction* pFnUpdateToRotation = NULL;

	if ( ! pFnUpdateToRotation )
		pFnUpdateToRotation = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.UpdateToRotation" );

	UMountBrain_execUpdateToRotation_Parms UpdateToRotation_Parms;
	UpdateToRotation_Parms.FloatDiff = FloatDiff;

	this->ProcessEvent ( pFnUpdateToRotation, &UpdateToRotation_Parms, NULL );
};

// Function NowGame.MountBrain.AddDamageTaken
// [0x00020002] 
// Parameters infos:
// float                          Value                          ( CPF_Parm )

void UMountBrain::AddDamageTaken ( float Value )
{
	static UFunction* pFnAddDamageTaken = NULL;

	if ( ! pFnAddDamageTaken )
		pFnAddDamageTaken = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.AddDamageTaken" );

	UMountBrain_execAddDamageTaken_Parms AddDamageTaken_Parms;
	AddDamageTaken_Parms.Value = Value;

	this->ProcessEvent ( pFnAddDamageTaken, &AddDamageTaken_Parms, NULL );
};

// Function NowGame.MountBrain.CheckKnockSpeed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UMountBrain::CheckKnockSpeed ( )
{
	static UFunction* pFnCheckKnockSpeed = NULL;

	if ( ! pFnCheckKnockSpeed )
		pFnCheckKnockSpeed = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.CheckKnockSpeed" );

	UMountBrain_execCheckKnockSpeed_Parms CheckKnockSpeed_Parms;

	this->ProcessEvent ( pFnCheckKnockSpeed, &CheckKnockSpeed_Parms, NULL );

	return CheckKnockSpeed_Parms.ReturnValue;
};

// Function NowGame.MountBrain.CheckHeadUnderWater
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 AddVect                        ( CPF_Parm )

bool UMountBrain::CheckHeadUnderWater ( struct FVector AddVect )
{
	static UFunction* pFnCheckHeadUnderWater = NULL;

	if ( ! pFnCheckHeadUnderWater )
		pFnCheckHeadUnderWater = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.CheckHeadUnderWater" );

	UMountBrain_execCheckHeadUnderWater_Parms CheckHeadUnderWater_Parms;
	memcpy ( &CheckHeadUnderWater_Parms.AddVect, &AddVect, 0xC );

	this->ProcessEvent ( pFnCheckHeadUnderWater, &CheckHeadUnderWater_Parms, NULL );

	return CheckHeadUnderWater_Parms.ReturnValue;
};

// Function NowGame.MountBrain.DoFearTest
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  TestActor                      ( CPF_Parm )

bool UMountBrain::DoFearTest ( class AActor* TestActor )
{
	static UFunction* pFnDoFearTest = NULL;

	if ( ! pFnDoFearTest )
		pFnDoFearTest = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.DoFearTest" );

	UMountBrain_execDoFearTest_Parms DoFearTest_Parms;
	DoFearTest_Parms.TestActor = TestActor;

	this->ProcessEvent ( pFnDoFearTest, &DoFearTest_Parms, NULL );

	return DoFearTest_Parms.ReturnValue;
};

// Function NowGame.MountBrain.LeaveMountOk
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UMountBrain::LeaveMountOk ( )
{
	static UFunction* pFnLeaveMountOk = NULL;

	if ( ! pFnLeaveMountOk )
		pFnLeaveMountOk = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.LeaveMountOk" );

	UMountBrain_execLeaveMountOk_Parms LeaveMountOk_Parms;

	this->ProcessEvent ( pFnLeaveMountOk, &LeaveMountOk_Parms, NULL );

	return LeaveMountOk_Parms.ReturnValue;
};

// Function NowGame.MountBrain.SwimmingCorrect
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 ATrace                         ( CPF_Parm )

struct FVector UMountBrain::SwimmingCorrect ( struct FVector ATrace )
{
	static UFunction* pFnSwimmingCorrect = NULL;

	if ( ! pFnSwimmingCorrect )
		pFnSwimmingCorrect = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.SwimmingCorrect" );

	UMountBrain_execSwimmingCorrect_Parms SwimmingCorrect_Parms;
	memcpy ( &SwimmingCorrect_Parms.ATrace, &ATrace, 0xC );

	this->ProcessEvent ( pFnSwimmingCorrect, &SwimmingCorrect_Parms, NULL );

	return SwimmingCorrect_Parms.ReturnValue;
};

// Function NowGame.MountBrain.HandlePathBlocked
// [0x00820002] 
// Parameters infos:
// struct FVector                 StartTrace                     ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 CrossProduct                   ( CPF_Parm )

void UMountBrain::HandlePathBlocked ( struct FVector StartTrace, struct FVector EndTrace, struct FVector HitLocation, struct FVector CrossProduct )
{
	static UFunction* pFnHandlePathBlocked = NULL;

	if ( ! pFnHandlePathBlocked )
		pFnHandlePathBlocked = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.HandlePathBlocked" );

	UMountBrain_execHandlePathBlocked_Parms HandlePathBlocked_Parms;
	memcpy ( &HandlePathBlocked_Parms.StartTrace, &StartTrace, 0xC );
	memcpy ( &HandlePathBlocked_Parms.EndTrace, &EndTrace, 0xC );
	memcpy ( &HandlePathBlocked_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &HandlePathBlocked_Parms.CrossProduct, &CrossProduct, 0xC );

	this->ProcessEvent ( pFnHandlePathBlocked, &HandlePathBlocked_Parms, NULL );
};

// Function NowGame.MountBrain.TickEyes
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickEyes ( float DT )
{
	static UFunction* pFnTickEyes = NULL;

	if ( ! pFnTickEyes )
		pFnTickEyes = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TickEyes" );

	UMountBrain_execTickEyes_Parms TickEyes_Parms;
	TickEyes_Parms.DT = DT;

	this->ProcessEvent ( pFnTickEyes, &TickEyes_Parms, NULL );
};

// Function NowGame.MountBrain.ClearBrain
// [0x00020002] 
// Parameters infos:

void UMountBrain::ClearBrain ( )
{
	static UFunction* pFnClearBrain = NULL;

	if ( ! pFnClearBrain )
		pFnClearBrain = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.ClearBrain" );

	UMountBrain_execClearBrain_Parms ClearBrain_Parms;

	this->ProcessEvent ( pFnClearBrain, &ClearBrain_Parms, NULL );
};

// Function NowGame.MountBrain.FullStop
// [0x00020002] 
// Parameters infos:

void UMountBrain::FullStop ( )
{
	static UFunction* pFnFullStop = NULL;

	if ( ! pFnFullStop )
		pFnFullStop = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.FullStop" );

	UMountBrain_execFullStop_Parms FullStop_Parms;

	this->ProcessEvent ( pFnFullStop, &FullStop_Parms, NULL );
};

// Function NowGame.MountBrain.PanicStop
// [0x00020002] 
// Parameters infos:

void UMountBrain::PanicStop ( )
{
	static UFunction* pFnPanicStop = NULL;

	if ( ! pFnPanicStop )
		pFnPanicStop = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.PanicStop" );

	UMountBrain_execPanicStop_Parms PanicStop_Parms;

	this->ProcessEvent ( pFnPanicStop, &PanicStop_Parms, NULL );
};

// Function NowGame.MountBrain.GetMaxSpeed
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UMountBrain::GetMaxSpeed ( )
{
	static UFunction* pFnGetMaxSpeed = NULL;

	if ( ! pFnGetMaxSpeed )
		pFnGetMaxSpeed = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GetMaxSpeed" );

	UMountBrain_execGetMaxSpeed_Parms GetMaxSpeed_Parms;

	this->ProcessEvent ( pFnGetMaxSpeed, &GetMaxSpeed_Parms, NULL );

	return GetMaxSpeed_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GetSpeed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UMountBrain::GetSpeed ( )
{
	static UFunction* pFnGetSpeed = NULL;

	if ( ! pFnGetSpeed )
		pFnGetSpeed = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GetSpeed" );

	UMountBrain_execGetSpeed_Parms GetSpeed_Parms;

	this->ProcessEvent ( pFnGetSpeed, &GetSpeed_Parms, NULL );

	return GetSpeed_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GetRotationSpeed
// [0x00024002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bSharp                         ( CPF_OptionalParm | CPF_Parm )

float UMountBrain::GetRotationSpeed ( unsigned long bSharp )
{
	static UFunction* pFnGetRotationSpeed = NULL;

	if ( ! pFnGetRotationSpeed )
		pFnGetRotationSpeed = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GetRotationSpeed" );

	UMountBrain_execGetRotationSpeed_Parms GetRotationSpeed_Parms;
	GetRotationSpeed_Parms.bSharp = bSharp;

	this->ProcessEvent ( pFnGetRotationSpeed, &GetRotationSpeed_Parms, NULL );

	return GetRotationSpeed_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GetDeltaRot
// [0x00020002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator UMountBrain::GetDeltaRot ( )
{
	static UFunction* pFnGetDeltaRot = NULL;

	if ( ! pFnGetDeltaRot )
		pFnGetDeltaRot = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GetDeltaRot" );

	UMountBrain_execGetDeltaRot_Parms GetDeltaRot_Parms;

	this->ProcessEvent ( pFnGetDeltaRot, &GetDeltaRot_Parms, NULL );

	return GetDeltaRot_Parms.ReturnValue;
};

// Function NowGame.MountBrain.TickHitSomeone
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UMountBrain::TickHitSomeone ( )
{
	static UFunction* pFnTickHitSomeone = NULL;

	if ( ! pFnTickHitSomeone )
		pFnTickHitSomeone = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TickHitSomeone" );

	UMountBrain_execTickHitSomeone_Parms TickHitSomeone_Parms;

	this->ProcessEvent ( pFnTickHitSomeone, &TickHitSomeone_Parms, NULL );

	return TickHitSomeone_Parms.ReturnValue;
};

// Function NowGame.MountBrain.TickPitch
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickPitch ( float DT )
{
	static UFunction* pFnTickPitch = NULL;

	if ( ! pFnTickPitch )
		pFnTickPitch = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TickPitch" );

	UMountBrain_execTickPitch_Parms TickPitch_Parms;
	TickPitch_Parms.DT = DT;

	this->ProcessEvent ( pFnTickPitch, &TickPitch_Parms, NULL );
};

// Function NowGame.MountBrain.TryThrottleDown
// [0x00020002] 
// Parameters infos:

void UMountBrain::TryThrottleDown ( )
{
	static UFunction* pFnTryThrottleDown = NULL;

	if ( ! pFnTryThrottleDown )
		pFnTryThrottleDown = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TryThrottleDown" );

	UMountBrain_execTryThrottleDown_Parms TryThrottleDown_Parms;

	this->ProcessEvent ( pFnTryThrottleDown, &TryThrottleDown_Parms, NULL );
};

// Function NowGame.MountBrain.TickCheckStamina
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickCheckStamina ( float DT )
{
	static UFunction* pFnTickCheckStamina = NULL;

	if ( ! pFnTickCheckStamina )
		pFnTickCheckStamina = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TickCheckStamina" );

	UMountBrain_execTickCheckStamina_Parms TickCheckStamina_Parms;
	TickCheckStamina_Parms.DT = DT;

	this->ProcessEvent ( pFnTickCheckStamina, &TickCheckStamina_Parms, NULL );
};

// Function NowGame.MountBrain.TickTurboTimer
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickTurboTimer ( float DT )
{
	static UFunction* pFnTickTurboTimer = NULL;

	if ( ! pFnTickTurboTimer )
		pFnTickTurboTimer = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TickTurboTimer" );

	UMountBrain_execTickTurboTimer_Parms TickTurboTimer_Parms;
	TickTurboTimer_Parms.DT = DT;

	this->ProcessEvent ( pFnTickTurboTimer, &TickTurboTimer_Parms, NULL );
};

// Function NowGame.MountBrain.TickKnockTimer
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickKnockTimer ( float DT )
{
	static UFunction* pFnTickKnockTimer = NULL;

	if ( ! pFnTickKnockTimer )
		pFnTickKnockTimer = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TickKnockTimer" );

	UMountBrain_execTickKnockTimer_Parms TickKnockTimer_Parms;
	TickKnockTimer_Parms.DT = DT;

	this->ProcessEvent ( pFnTickKnockTimer, &TickKnockTimer_Parms, NULL );
};

// Function NowGame.MountBrain.TickDamageTimer
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickDamageTimer ( float DT )
{
	static UFunction* pFnTickDamageTimer = NULL;

	if ( ! pFnTickDamageTimer )
		pFnTickDamageTimer = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TickDamageTimer" );

	UMountBrain_execTickDamageTimer_Parms TickDamageTimer_Parms;
	TickDamageTimer_Parms.DT = DT;

	this->ProcessEvent ( pFnTickDamageTimer, &TickDamageTimer_Parms, NULL );
};

// Function NowGame.MountBrain.TickBody
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickBody ( float DT )
{
	static UFunction* pFnTickBody = NULL;

	if ( ! pFnTickBody )
		pFnTickBody = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TickBody" );

	UMountBrain_execTickBody_Parms TickBody_Parms;
	TickBody_Parms.DT = DT;

	this->ProcessEvent ( pFnTickBody, &TickBody_Parms, NULL );
};

// Function NowGame.MountBrain.TickInputTimers
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickInputTimers ( float DT )
{
	static UFunction* pFnTickInputTimers = NULL;

	if ( ! pFnTickInputTimers )
		pFnTickInputTimers = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TickInputTimers" );

	UMountBrain_execTickInputTimers_Parms TickInputTimers_Parms;
	TickInputTimers_Parms.DT = DT;

	this->ProcessEvent ( pFnTickInputTimers, &TickInputTimers_Parms, NULL );
};

// Function NowGame.MountBrain.CheckSpeedInput
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            NewSpeedStyle                  ( CPF_Parm )

bool UMountBrain::CheckSpeedInput ( int NewSpeedStyle )
{
	static UFunction* pFnCheckSpeedInput = NULL;

	if ( ! pFnCheckSpeedInput )
		pFnCheckSpeedInput = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.CheckSpeedInput" );

	UMountBrain_execCheckSpeedInput_Parms CheckSpeedInput_Parms;
	CheckSpeedInput_Parms.NewSpeedStyle = NewSpeedStyle;

	this->ProcessEvent ( pFnCheckSpeedInput, &CheckSpeedInput_Parms, NULL );

	return CheckSpeedInput_Parms.ReturnValue;
};

// Function NowGame.MountBrain.CheckTurnInput
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            NewTurnStyle                   ( CPF_Parm )

bool UMountBrain::CheckTurnInput ( int NewTurnStyle )
{
	static UFunction* pFnCheckTurnInput = NULL;

	if ( ! pFnCheckTurnInput )
		pFnCheckTurnInput = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.CheckTurnInput" );

	UMountBrain_execCheckTurnInput_Parms CheckTurnInput_Parms;
	CheckTurnInput_Parms.NewTurnStyle = NewTurnStyle;

	this->ProcessEvent ( pFnCheckTurnInput, &CheckTurnInput_Parms, NULL );

	return CheckTurnInput_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GetTurnAmount
// [0x00024002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bSharp                         ( CPF_OptionalParm | CPF_Parm )

int UMountBrain::GetTurnAmount ( unsigned long bSharp )
{
	static UFunction* pFnGetTurnAmount = NULL;

	if ( ! pFnGetTurnAmount )
		pFnGetTurnAmount = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GetTurnAmount" );

	UMountBrain_execGetTurnAmount_Parms GetTurnAmount_Parms;
	GetTurnAmount_Parms.bSharp = bSharp;

	this->ProcessEvent ( pFnGetTurnAmount, &GetTurnAmount_Parms, NULL );

	return GetTurnAmount_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GoLeftSharp
// [0x00020002] 
// Parameters infos:

void UMountBrain::GoLeftSharp ( )
{
	static UFunction* pFnGoLeftSharp = NULL;

	if ( ! pFnGoLeftSharp )
		pFnGoLeftSharp = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GoLeftSharp" );

	UMountBrain_execGoLeftSharp_Parms GoLeftSharp_Parms;

	this->ProcessEvent ( pFnGoLeftSharp, &GoLeftSharp_Parms, NULL );
};

// Function NowGame.MountBrain.GoRightSharp
// [0x00020002] 
// Parameters infos:

void UMountBrain::GoRightSharp ( )
{
	static UFunction* pFnGoRightSharp = NULL;

	if ( ! pFnGoRightSharp )
		pFnGoRightSharp = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GoRightSharp" );

	UMountBrain_execGoRightSharp_Parms GoRightSharp_Parms;

	this->ProcessEvent ( pFnGoRightSharp, &GoRightSharp_Parms, NULL );
};

// Function NowGame.MountBrain.CheckNewSpeed
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          SpeedAdd                       ( CPF_Parm )

float UMountBrain::CheckNewSpeed ( float SpeedAdd )
{
	static UFunction* pFnCheckNewSpeed = NULL;

	if ( ! pFnCheckNewSpeed )
		pFnCheckNewSpeed = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.CheckNewSpeed" );

	UMountBrain_execCheckNewSpeed_Parms CheckNewSpeed_Parms;
	CheckNewSpeed_Parms.SpeedAdd = SpeedAdd;

	this->ProcessEvent ( pFnCheckNewSpeed, &CheckNewSpeed_Parms, NULL );

	return CheckNewSpeed_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GoLeft
// [0x00024002] 
// Parameters infos:
// float                          MountTurn                      ( CPF_OptionalParm | CPF_Parm )

void UMountBrain::GoLeft ( float MountTurn )
{
	static UFunction* pFnGoLeft = NULL;

	if ( ! pFnGoLeft )
		pFnGoLeft = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GoLeft" );

	UMountBrain_execGoLeft_Parms GoLeft_Parms;
	GoLeft_Parms.MountTurn = MountTurn;

	this->ProcessEvent ( pFnGoLeft, &GoLeft_Parms, NULL );
};

// Function NowGame.MountBrain.GoRight
// [0x00024002] 
// Parameters infos:
// float                          MountTurn                      ( CPF_OptionalParm | CPF_Parm )

void UMountBrain::GoRight ( float MountTurn )
{
	static UFunction* pFnGoRight = NULL;

	if ( ! pFnGoRight )
		pFnGoRight = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GoRight" );

	UMountBrain_execGoRight_Parms GoRight_Parms;
	GoRight_Parms.MountTurn = MountTurn;

	this->ProcessEvent ( pFnGoRight, &GoRight_Parms, NULL );
};

// Function NowGame.MountBrain.GoSlowerSharp
// [0x00020002] 
// Parameters infos:

void UMountBrain::GoSlowerSharp ( )
{
	static UFunction* pFnGoSlowerSharp = NULL;

	if ( ! pFnGoSlowerSharp )
		pFnGoSlowerSharp = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GoSlowerSharp" );

	UMountBrain_execGoSlowerSharp_Parms GoSlowerSharp_Parms;

	this->ProcessEvent ( pFnGoSlowerSharp, &GoSlowerSharp_Parms, NULL );
};

// Function NowGame.MountBrain.GoFasterSharp
// [0x00020002] 
// Parameters infos:

void UMountBrain::GoFasterSharp ( )
{
	static UFunction* pFnGoFasterSharp = NULL;

	if ( ! pFnGoFasterSharp )
		pFnGoFasterSharp = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GoFasterSharp" );

	UMountBrain_execGoFasterSharp_Parms GoFasterSharp_Parms;

	this->ProcessEvent ( pFnGoFasterSharp, &GoFasterSharp_Parms, NULL );
};

// Function NowGame.MountBrain.GoSlower
// [0x00020002] 
// Parameters infos:

void UMountBrain::GoSlower ( )
{
	static UFunction* pFnGoSlower = NULL;

	if ( ! pFnGoSlower )
		pFnGoSlower = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GoSlower" );

	UMountBrain_execGoSlower_Parms GoSlower_Parms;

	this->ProcessEvent ( pFnGoSlower, &GoSlower_Parms, NULL );
};

// Function NowGame.MountBrain.GoFaster
// [0x00020002] 
// Parameters infos:

void UMountBrain::GoFaster ( )
{
	static UFunction* pFnGoFaster = NULL;

	if ( ! pFnGoFaster )
		pFnGoFaster = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GoFaster" );

	UMountBrain_execGoFaster_Parms GoFaster_Parms;

	this->ProcessEvent ( pFnGoFaster, &GoFaster_Parms, NULL );
};

// Function NowGame.MountBrain.AddMove
// [0x00824002] 
// Parameters infos:
// float                          Time                           ( CPF_Parm )
// float                          newValue                       ( CPF_Parm )
// float                          TriggerTime                    ( CPF_Parm )
// unsigned char                  MoveType                       ( CPF_OptionalParm | CPF_Parm )
// unsigned char                  MoveFlag                       ( CPF_OptionalParm | CPF_Parm )

void UMountBrain::AddMove ( float Time, float newValue, float TriggerTime, unsigned char MoveType, unsigned char MoveFlag )
{
	static UFunction* pFnAddMove = NULL;

	if ( ! pFnAddMove )
		pFnAddMove = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.AddMove" );

	UMountBrain_execAddMove_Parms AddMove_Parms;
	AddMove_Parms.Time = Time;
	AddMove_Parms.newValue = newValue;
	AddMove_Parms.TriggerTime = TriggerTime;
	AddMove_Parms.MoveType = MoveType;
	AddMove_Parms.MoveFlag = MoveFlag;

	this->ProcessEvent ( pFnAddMove, &AddMove_Parms, NULL );
};

// Function NowGame.MountBrain.FillBrain
// [0x00020002] 
// Parameters infos:
// float                          Time                           ( CPF_Parm )
// float                          TriggerTime                    ( CPF_Parm )

void UMountBrain::FillBrain ( float Time, float TriggerTime )
{
	static UFunction* pFnFillBrain = NULL;

	if ( ! pFnFillBrain )
		pFnFillBrain = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.FillBrain" );

	UMountBrain_execFillBrain_Parms FillBrain_Parms;
	FillBrain_Parms.Time = Time;
	FillBrain_Parms.TriggerTime = TriggerTime;

	this->ProcessEvent ( pFnFillBrain, &FillBrain_Parms, NULL );
};

// Function NowGame.MountBrain.RemoveMove
// [0x00820002] 
// Parameters infos:
// int                            WhatMove                       ( CPF_Parm )

void UMountBrain::RemoveMove ( int WhatMove )
{
	static UFunction* pFnRemoveMove = NULL;

	if ( ! pFnRemoveMove )
		pFnRemoveMove = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.RemoveMove" );

	UMountBrain_execRemoveMove_Parms RemoveMove_Parms;
	RemoveMove_Parms.WhatMove = WhatMove;

	this->ProcessEvent ( pFnRemoveMove, &RemoveMove_Parms, NULL );
};

// Function NowGame.MountBrain.UpdateToNewCurSpeed
// [0x00020002] 
// Parameters infos:
// float                          AddSpeed                       ( CPF_Parm )

void UMountBrain::UpdateToNewCurSpeed ( float AddSpeed )
{
	static UFunction* pFnUpdateToNewCurSpeed = NULL;

	if ( ! pFnUpdateToNewCurSpeed )
		pFnUpdateToNewCurSpeed = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.UpdateToNewCurSpeed" );

	UMountBrain_execUpdateToNewCurSpeed_Parms UpdateToNewCurSpeed_Parms;
	UpdateToNewCurSpeed_Parms.AddSpeed = AddSpeed;

	this->ProcessEvent ( pFnUpdateToNewCurSpeed, &UpdateToNewCurSpeed_Parms, NULL );
};

// Function NowGame.MountBrain.TriggerMove
// [0x00020002] 
// Parameters infos:
// int                            WhatMove                       ( CPF_Parm )
// float                          DT                             ( CPF_Parm )

void UMountBrain::TriggerMove ( int WhatMove, float DT )
{
	static UFunction* pFnTriggerMove = NULL;

	if ( ! pFnTriggerMove )
		pFnTriggerMove = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TriggerMove" );

	UMountBrain_execTriggerMove_Parms TriggerMove_Parms;
	TriggerMove_Parms.WhatMove = WhatMove;
	TriggerMove_Parms.DT = DT;

	this->ProcessEvent ( pFnTriggerMove, &TriggerMove_Parms, NULL );
};

// Function NowGame.MountBrain.TickBrain
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickBrain ( float DT )
{
	static UFunction* pFnTickBrain = NULL;

	if ( ! pFnTickBrain )
		pFnTickBrain = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TickBrain" );

	UMountBrain_execTickBrain_Parms TickBrain_Parms;
	TickBrain_Parms.DT = DT;

	this->ProcessEvent ( pFnTickBrain, &TickBrain_Parms, NULL );
};

// Function NowGame.MountBrain.TickDrowningTimer
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::TickDrowningTimer ( float DT )
{
	static UFunction* pFnTickDrowningTimer = NULL;

	if ( ! pFnTickDrowningTimer )
		pFnTickDrowningTimer = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.TickDrowningTimer" );

	UMountBrain_execTickDrowningTimer_Parms TickDrowningTimer_Parms;
	TickDrowningTimer_Parms.DT = DT;

	this->ProcessEvent ( pFnTickDrowningTimer, &TickDrowningTimer_Parms, NULL );
};

// Function NowGame.MountBrain.GetStaminaReGain
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UMountBrain::GetStaminaReGain ( )
{
	static UFunction* pFnGetStaminaReGain = NULL;

	if ( ! pFnGetStaminaReGain )
		pFnGetStaminaReGain = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GetStaminaReGain" );

	UMountBrain_execGetStaminaReGain_Parms GetStaminaReGain_Parms;

	this->ProcessEvent ( pFnGetStaminaReGain, &GetStaminaReGain_Parms, NULL );

	return GetStaminaReGain_Parms.ReturnValue;
};

// Function NowGame.MountBrain.GetStaminaDrain
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UMountBrain::GetStaminaDrain ( )
{
	static UFunction* pFnGetStaminaDrain = NULL;

	if ( ! pFnGetStaminaDrain )
		pFnGetStaminaDrain = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GetStaminaDrain" );

	UMountBrain_execGetStaminaDrain_Parms GetStaminaDrain_Parms;

	this->ProcessEvent ( pFnGetStaminaDrain, &GetStaminaDrain_Parms, NULL );

	return GetStaminaDrain_Parms.ReturnValue;
};

// Function NowGame.MountBrain.Tick
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void UMountBrain::Tick ( float DT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.Tick" );

	UMountBrain_execTick_Parms Tick_Parms;
	Tick_Parms.DT = DT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.MountBrain.GetDriver
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* UMountBrain::GetDriver ( )
{
	static UFunction* pFnGetDriver = NULL;

	if ( ! pFnGetDriver )
		pFnGetDriver = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.GetDriver" );

	UMountBrain_execGetDriver_Parms GetDriver_Parms;

	this->ProcessEvent ( pFnGetDriver, &GetDriver_Parms, NULL );

	return GetDriver_Parms.ReturnValue;
};

// Function NowGame.MountBrain.InitBrain
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAiDynamicMount* NewMount                       ( CPF_Parm )

void UMountBrain::InitBrain ( class ANowAtlasAvatarAiDynamicMount* NewMount )
{
	static UFunction* pFnInitBrain = NULL;

	if ( ! pFnInitBrain )
		pFnInitBrain = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.InitBrain" );

	UMountBrain_execInitBrain_Parms InitBrain_Parms;
	InitBrain_Parms.NewMount = NewMount;

	this->ProcessEvent ( pFnInitBrain, &InitBrain_Parms, NULL );
};

// Function NowGame.MountBrain.CalcEnc
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMountBrain::CalcEnc ( )
{
	static UFunction* pFnCalcEnc = NULL;

	if ( ! pFnCalcEnc )
		pFnCalcEnc = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.CalcEnc" );

	UMountBrain_execCalcEnc_Parms CalcEnc_Parms;

	pFnCalcEnc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcEnc, &CalcEnc_Parms, NULL );

	pFnCalcEnc->FunctionFlags |= 0x400;
};

// Function NowGame.MountBrain.SendDamageTaken
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMountBrain::SendDamageTaken ( )
{
	static UFunction* pFnSendDamageTaken = NULL;

	if ( ! pFnSendDamageTaken )
		pFnSendDamageTaken = UObject::FindObject< UFunction > ( "Function NowGame.MountBrain.SendDamageTaken" );

	UMountBrain_execSendDamageTaken_Parms SendDamageTaken_Parms;

	pFnSendDamageTaken->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendDamageTaken, &SendDamageTaken_Parms, NULL );

	pFnSendDamageTaken->FunctionFlags |= 0x400;
};

// Function NowGame.NewTugSession.AddPlayerAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bPull                          ( CPF_Parm )
// float                          fLength                        ( CPF_Parm )

void UNewTugSession::AddPlayerAction ( unsigned long bPull, float fLength )
{
	static UFunction* pFnAddPlayerAction = NULL;

	if ( ! pFnAddPlayerAction )
		pFnAddPlayerAction = UObject::FindObject< UFunction > ( "Function NowGame.NewTugSession.AddPlayerAction" );

	UNewTugSession_execAddPlayerAction_Parms AddPlayerAction_Parms;
	AddPlayerAction_Parms.bPull = bPull;
	AddPlayerAction_Parms.fLength = fLength;

	pFnAddPlayerAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPlayerAction, &AddPlayerAction_Parms, NULL );

	pFnAddPlayerAction->FunctionFlags |= 0x400;
};

// Function NowGame.NewTugSession.FishUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

bool UNewTugSession::FishUpdate ( float DeltaTime )
{
	static UFunction* pFnFishUpdate = NULL;

	if ( ! pFnFishUpdate )
		pFnFishUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NewTugSession.FishUpdate" );

	UNewTugSession_execFishUpdate_Parms FishUpdate_Parms;
	FishUpdate_Parms.DeltaTime = DeltaTime;

	pFnFishUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFishUpdate, &FishUpdate_Parms, NULL );

	pFnFishUpdate->FunctionFlags |= 0x400;

	return FishUpdate_Parms.ReturnValue;
};

// Function NowGame.NewTugSession.InitFish
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNewTugSession::InitFish ( )
{
	static UFunction* pFnInitFish = NULL;

	if ( ! pFnInitFish )
		pFnInitFish = UObject::FindObject< UFunction > ( "Function NowGame.NewTugSession.InitFish" );

	UNewTugSession_execInitFish_Parms InitFish_Parms;

	pFnInitFish->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitFish, &InitFish_Parms, NULL );

	pFnInitFish->FunctionFlags |= 0x400;
};

// Function NowGame.NewTugSession.CalculateSectionSuccess
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UNewTugSession::CalculateSectionSuccess ( )
{
	static UFunction* pFnCalculateSectionSuccess = NULL;

	if ( ! pFnCalculateSectionSuccess )
		pFnCalculateSectionSuccess = UObject::FindObject< UFunction > ( "Function NowGame.NewTugSession.CalculateSectionSuccess" );

	UNewTugSession_execCalculateSectionSuccess_Parms CalculateSectionSuccess_Parms;

	pFnCalculateSectionSuccess->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalculateSectionSuccess, &CalculateSectionSuccess_Parms, NULL );

	pFnCalculateSectionSuccess->FunctionFlags |= 0x400;

	return CalculateSectionSuccess_Parms.ReturnValue;
};

// Function NowGame.NewTugSession.GetBlockResult
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNewTugSession::GetBlockResult ( )
{
	static UFunction* pFnGetBlockResult = NULL;

	if ( ! pFnGetBlockResult )
		pFnGetBlockResult = UObject::FindObject< UFunction > ( "Function NowGame.NewTugSession.GetBlockResult" );

	UNewTugSession_execGetBlockResult_Parms GetBlockResult_Parms;

	pFnGetBlockResult->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBlockResult, &GetBlockResult_Parms, NULL );

	pFnGetBlockResult->FunctionFlags |= 0x400;

	return GetBlockResult_Parms.ReturnValue;
};

// Function NowGame.NewTugSession.GenerateFishData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fSessionTime                   ( CPF_Parm )

void UNewTugSession::GenerateFishData ( float fSessionTime )
{
	static UFunction* pFnGenerateFishData = NULL;

	if ( ! pFnGenerateFishData )
		pFnGenerateFishData = UObject::FindObject< UFunction > ( "Function NowGame.NewTugSession.GenerateFishData" );

	UNewTugSession_execGenerateFishData_Parms GenerateFishData_Parms;
	GenerateFishData_Parms.fSessionTime = fSessionTime;

	pFnGenerateFishData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateFishData, &GenerateFishData_Parms, NULL );

	pFnGenerateFishData->FunctionFlags |= 0x400;
};

// Function NowGame.NewTugSession.GenerateNewSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNewTugSession::GenerateNewSession ( )
{
	static UFunction* pFnGenerateNewSession = NULL;

	if ( ! pFnGenerateNewSession )
		pFnGenerateNewSession = UObject::FindObject< UFunction > ( "Function NowGame.NewTugSession.GenerateNewSession" );

	UNewTugSession_execGenerateNewSession_Parms GenerateNewSession_Parms;

	pFnGenerateNewSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateNewSession, &GenerateNewSession_Parms, NULL );

	pFnGenerateNewSession->FunctionFlags |= 0x400;
};

// Function NowGame.NoobHelpManager.TookDamageHelp
// [0x00020002] 
// Parameters infos:

void UNoobHelpManager::TookDamageHelp ( )
{
	static UFunction* pFnTookDamageHelp = NULL;

	if ( ! pFnTookDamageHelp )
		pFnTookDamageHelp = UObject::FindObject< UFunction > ( "Function NowGame.NoobHelpManager.TookDamageHelp" );

	UNoobHelpManager_execTookDamageHelp_Parms TookDamageHelp_Parms;

	this->ProcessEvent ( pFnTookDamageHelp, &TookDamageHelp_Parms, NULL );
};

// Function NowGame.NoobHelpManager.DeathHelp
// [0x00020002] 
// Parameters infos:

void UNoobHelpManager::DeathHelp ( )
{
	static UFunction* pFnDeathHelp = NULL;

	if ( ! pFnDeathHelp )
		pFnDeathHelp = UObject::FindObject< UFunction > ( "Function NowGame.NoobHelpManager.DeathHelp" );

	UNoobHelpManager_execDeathHelp_Parms DeathHelp_Parms;

	this->ProcessEvent ( pFnDeathHelp, &DeathHelp_Parms, NULL );
};

// Function NowGame.NoobHelpManager.GreyHelp
// [0x00020002] 
// Parameters infos:

void UNoobHelpManager::GreyHelp ( )
{
	static UFunction* pFnGreyHelp = NULL;

	if ( ! pFnGreyHelp )
		pFnGreyHelp = UObject::FindObject< UFunction > ( "Function NowGame.NoobHelpManager.GreyHelp" );

	UNoobHelpManager_execGreyHelp_Parms GreyHelp_Parms;

	this->ProcessEvent ( pFnGreyHelp, &GreyHelp_Parms, NULL );
};

// Function NowGame.NoobHelpManager.UpdateDirectionHelper
// [0x00820002] 
// Parameters infos:

void UNoobHelpManager::UpdateDirectionHelper ( )
{
	static UFunction* pFnUpdateDirectionHelper = NULL;

	if ( ! pFnUpdateDirectionHelper )
		pFnUpdateDirectionHelper = UObject::FindObject< UFunction > ( "Function NowGame.NoobHelpManager.UpdateDirectionHelper" );

	UNoobHelpManager_execUpdateDirectionHelper_Parms UpdateDirectionHelper_Parms;

	this->ProcessEvent ( pFnUpdateDirectionHelper, &UpdateDirectionHelper_Parms, NULL );
};

// Function NowGame.NoobHelpManager.UpdateNoobHelp
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNoobHelpManager::eventUpdateNoobHelp ( )
{
	static UFunction* pFnUpdateNoobHelp = NULL;

	if ( ! pFnUpdateNoobHelp )
		pFnUpdateNoobHelp = UObject::FindObject< UFunction > ( "Function NowGame.NoobHelpManager.UpdateNoobHelp" );

	UNoobHelpManager_eventUpdateNoobHelp_Parms UpdateNoobHelp_Parms;

	this->ProcessEvent ( pFnUpdateNoobHelp, &UpdateNoobHelp_Parms, NULL );
};

// Function NowGame.NoobHelpManager.InitManager
// [0x00020000] 
// Parameters infos:

void UNoobHelpManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = UObject::FindObject< UFunction > ( "Function NowGame.NoobHelpManager.InitManager" );

	UNoobHelpManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.NoobHelpManager.HasRobe
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNoobHelpManager::HasRobe ( )
{
	static UFunction* pFnHasRobe = NULL;

	if ( ! pFnHasRobe )
		pFnHasRobe = UObject::FindObject< UFunction > ( "Function NowGame.NoobHelpManager.HasRobe" );

	UNoobHelpManager_execHasRobe_Parms HasRobe_Parms;

	pFnHasRobe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasRobe, &HasRobe_Parms, NULL );

	pFnHasRobe->FunctionFlags |= 0x400;

	return HasRobe_Parms.ReturnValue;
};

// Function NowGame.NoobHelpManager.HasLeather
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNoobHelpManager::HasLeather ( )
{
	static UFunction* pFnHasLeather = NULL;

	if ( ! pFnHasLeather )
		pFnHasLeather = UObject::FindObject< UFunction > ( "Function NowGame.NoobHelpManager.HasLeather" );

	UNoobHelpManager_execHasLeather_Parms HasLeather_Parms;

	pFnHasLeather->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasLeather, &HasLeather_Parms, NULL );

	pFnHasLeather->FunctionFlags |= 0x400;

	return HasLeather_Parms.ReturnValue;
};

// Function NowGame.NoobHelpManager.GetNPCD
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNoobHelpManager::GetNPCD ( )
{
	static UFunction* pFnGetNPCD = NULL;

	if ( ! pFnGetNPCD )
		pFnGetNPCD = UObject::FindObject< UFunction > ( "Function NowGame.NoobHelpManager.GetNPCD" );

	UNoobHelpManager_execGetNPCD_Parms GetNPCD_Parms;

	pFnGetNPCD->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNPCD, &GetNPCD_Parms, NULL );

	pFnGetNPCD->FunctionFlags |= 0x400;

	return GetNPCD_Parms.ReturnValue;
};

// Function NowGame.NoobHelpManager.GetNPCC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNoobHelpManager::GetNPCC ( )
{
	static UFunction* pFnGetNPCC = NULL;

	if ( ! pFnGetNPCC )
		pFnGetNPCC = UObject::FindObject< UFunction > ( "Function NowGame.NoobHelpManager.GetNPCC" );

	UNoobHelpManager_execGetNPCC_Parms GetNPCC_Parms;

	pFnGetNPCC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNPCC, &GetNPCC_Parms, NULL );

	pFnGetNPCC->FunctionFlags |= 0x400;

	return GetNPCC_Parms.ReturnValue;
};

// Function NowGame.NoobHelpManager.GetNPCB
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNoobHelpManager::GetNPCB ( )
{
	static UFunction* pFnGetNPCB = NULL;

	if ( ! pFnGetNPCB )
		pFnGetNPCB = UObject::FindObject< UFunction > ( "Function NowGame.NoobHelpManager.GetNPCB" );

	UNoobHelpManager_execGetNPCB_Parms GetNPCB_Parms;

	pFnGetNPCB->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNPCB, &GetNPCB_Parms, NULL );

	pFnGetNPCB->FunctionFlags |= 0x400;

	return GetNPCB_Parms.ReturnValue;
};

// Function NowGame.NoobHelpManager.GetNPCA
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNoobHelpManager::GetNPCA ( )
{
	static UFunction* pFnGetNPCA = NULL;

	if ( ! pFnGetNPCA )
		pFnGetNPCA = UObject::FindObject< UFunction > ( "Function NowGame.NoobHelpManager.GetNPCA" );

	UNoobHelpManager_execGetNPCA_Parms GetNPCA_Parms;

	pFnGetNPCA->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNPCA, &GetNPCA_Parms, NULL );

	pFnGetNPCA->FunctionFlags |= 0x400;

	return GetNPCA_Parms.ReturnValue;
};

// Function NowGame.NowAiIdleSpot.UpdateHelpers
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAiIdleSpot::UpdateHelpers ( )
{
	static UFunction* pFnUpdateHelpers = NULL;

	if ( ! pFnUpdateHelpers )
		pFnUpdateHelpers = UObject::FindObject< UFunction > ( "Function NowGame.NowAiIdleSpot.UpdateHelpers" );

	ANowAiIdleSpot_execUpdateHelpers_Parms UpdateHelpers_Parms;

	pFnUpdateHelpers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateHelpers, &UpdateHelpers_Parms, NULL );

	pFnUpdateHelpers->FunctionFlags |= 0x400;
};

// Function NowGame.NowAmbientSoundMovableDayNight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowAmbientSoundMovableDayNight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowAmbientSoundMovableDayNight.Destroyed" );

	ANowAmbientSoundMovableDayNight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAmbientSoundMovableDayNight.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowAmbientSoundMovableDayNight::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAmbientSoundMovableDayNight.PostBeginPlay" );

	ANowAmbientSoundMovableDayNight_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAmbientSoundMovableDayNight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowAmbientSoundMovableDayNight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.NowAmbientSoundMovableDayNight.Notify" );

	ANowAmbientSoundMovableDayNight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowAmbientSoundMovableDayNight.SetDayTime
// [0x00020002] 
// Parameters infos:

void ANowAmbientSoundMovableDayNight::SetDayTime ( )
{
	static UFunction* pFnSetDayTime = NULL;

	if ( ! pFnSetDayTime )
		pFnSetDayTime = UObject::FindObject< UFunction > ( "Function NowGame.NowAmbientSoundMovableDayNight.SetDayTime" );

	ANowAmbientSoundMovableDayNight_execSetDayTime_Parms SetDayTime_Parms;

	this->ProcessEvent ( pFnSetDayTime, &SetDayTime_Parms, NULL );
};

// Function NowGame.NowAmbientSoundSimpleToggleableDayNight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowAmbientSoundSimpleToggleableDayNight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowAmbientSoundSimpleToggleableDayNight.Destroyed" );

	ANowAmbientSoundSimpleToggleableDayNight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAmbientSoundSimpleToggleableDayNight.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowAmbientSoundSimpleToggleableDayNight::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAmbientSoundSimpleToggleableDayNight.PostBeginPlay" );

	ANowAmbientSoundSimpleToggleableDayNight_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAmbientSoundSimpleToggleableDayNight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowAmbientSoundSimpleToggleableDayNight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.NowAmbientSoundSimpleToggleableDayNight.Notify" );

	ANowAmbientSoundSimpleToggleableDayNight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowAmbientSoundSimpleToggleableDayNight.SetDay
// [0x00020002] 
// Parameters infos:

void ANowAmbientSoundSimpleToggleableDayNight::SetDay ( )
{
	static UFunction* pFnSetDay = NULL;

	if ( ! pFnSetDay )
		pFnSetDay = UObject::FindObject< UFunction > ( "Function NowGame.NowAmbientSoundSimpleToggleableDayNight.SetDay" );

	ANowAmbientSoundSimpleToggleableDayNight_execSetDay_Parms SetDay_Parms;

	this->ProcessEvent ( pFnSetDay, &SetDay_Parms, NULL );
};

// Function NowGame.NowAmbientSunLight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowAmbientSunLight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowAmbientSunLight.Destroyed" );

	ANowAmbientSunLight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAmbientSunLight.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowAmbientSunLight::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAmbientSunLight.PostBeginPlay" );

	ANowAmbientSunLight_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAmbientSunLight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowAmbientSunLight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.NowAmbientSunLight.Notify" );

	ANowAmbientSunLight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowAmbientSunLight.UpdateBrightness
// [0x00020002] 
// Parameters infos:

	static UFunction* pFnUpdateBrightness = NULL;
void ANowAmbientSunLight::UpdateBrightness ( )
{

	if ( ! pFnUpdateBrightness )
		pFnUpdateBrightness = UObject::FindObject< UFunction > ( "Function NowGame.NowAmbientSunLight.UpdateBrightness" );

	ANowAmbientSunLight_execUpdateBrightness_Parms UpdateBrightness_Parms;

	this->ProcessEvent ( pFnUpdateBrightness, &UpdateBrightness_Parms, NULL );
};

// Function NowGame.NowAmbientSunLight.Update
// [0x00820002] 
// Parameters infos:
// float                          PartOfDay                      ( CPF_Parm )
// float                          PartOfNyxPos                   ( CPF_Parm )
// float                          PartOfYear                     ( CPF_Parm )
// float                          SunRiseAt                      ( CPF_Parm )

void ANowAmbientSunLight::Update ( float PartOfDay, float PartOfNyxPos, float PartOfYear, float SunRiseAt )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowAmbientSunLight.Update" );

	ANowAmbientSunLight_execUpdate_Parms Update_Parms;
	Update_Parms.PartOfDay = PartOfDay;
	Update_Parms.PartOfNyxPos = PartOfNyxPos;
	Update_Parms.PartOfYear = PartOfYear;
	Update_Parms.SunRiseAt = SunRiseAt;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.TriggerProjectileEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  ProjClass                      ( CPF_Parm )
// struct FName                   BoneName                       ( CPF_Parm )

void ANowAtlasAvatar::eventTriggerProjectileEffect ( class UClass* ProjClass, struct FName BoneName )
{
	static UFunction* pFnTriggerProjectileEffect = NULL;

	if ( ! pFnTriggerProjectileEffect )
		pFnTriggerProjectileEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.TriggerProjectileEffect" );

	ANowAtlasAvatar_eventTriggerProjectileEffect_Parms TriggerProjectileEffect_Parms;
	TriggerProjectileEffect_Parms.ProjClass = ProjClass;
	memcpy ( &TriggerProjectileEffect_Parms.BoneName, &BoneName, 0x8 );

	this->ProcessEvent ( pFnTriggerProjectileEffect, &TriggerProjectileEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.AnimEffectTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void ANowAtlasAvatar::eventAnimEffectTarget ( class AActor* Target )
{
	static UFunction* pFnAnimEffectTarget = NULL;

	if ( ! pFnAnimEffectTarget )
		pFnAnimEffectTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.AnimEffectTarget" );

	ANowAtlasAvatar_eventAnimEffectTarget_Parms AnimEffectTarget_Parms;
	AnimEffectTarget_Parms.Target = Target;

	this->ProcessEvent ( pFnAnimEffectTarget, &AnimEffectTarget_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.AnimEffectVector
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 Loc                            ( CPF_Parm )

void ANowAtlasAvatar::eventAnimEffectVector ( struct FVector Loc )
{
	static UFunction* pFnAnimEffectVector = NULL;

	if ( ! pFnAnimEffectVector )
		pFnAnimEffectVector = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.AnimEffectVector" );

	ANowAtlasAvatar_eventAnimEffectVector_Parms AnimEffectVector_Parms;
	memcpy ( &AnimEffectVector_Parms.Loc, &Loc, 0xC );

	this->ProcessEvent ( pFnAnimEffectVector, &AnimEffectVector_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.SetTurn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FRotator                NewRot                         ( CPF_Parm )

void ANowAtlasAvatar::eventSetTurn ( struct FRotator NewRot )
{
	static UFunction* pFnSetTurn = NULL;

	if ( ! pFnSetTurn )
		pFnSetTurn = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.SetTurn" );

	ANowAtlasAvatar_eventSetTurn_Parms SetTurn_Parms;
	memcpy ( &SetTurn_Parms.NewRot, &NewRot, 0xC );

	this->ProcessEvent ( pFnSetTurn, &SetTurn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.GetOptions
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowOptionsDatastore*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowOptionsDatastore* ANowAtlasAvatar::eventGetOptions ( )
{
	static UFunction* pFnGetOptions = NULL;

	if ( ! pFnGetOptions )
		pFnGetOptions = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.GetOptions" );

	ANowAtlasAvatar_eventGetOptions_Parms GetOptions_Parms;

	this->ProcessEvent ( pFnGetOptions, &GetOptions_Parms, NULL );

	return GetOptions_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.GetCollisionExtent
// [0x00820103] ( FUNC_Final )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowAtlasAvatar::GetCollisionExtent ( )
{
	static UFunction* pFnGetCollisionExtent = NULL;

	if ( ! pFnGetCollisionExtent )
		pFnGetCollisionExtent = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.GetCollisionExtent" );

	ANowAtlasAvatar_execGetCollisionExtent_Parms GetCollisionExtent_Parms;

	this->ProcessEvent ( pFnGetCollisionExtent, &GetCollisionExtent_Parms, NULL );

	return GetCollisionExtent_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.GetHeight
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatar::GetHeight ( )
{
	static UFunction* pFnGetHeight = NULL;

	if ( ! pFnGetHeight )
		pFnGetHeight = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.GetHeight" );

	ANowAtlasAvatar_execGetHeight_Parms GetHeight_Parms;

	this->ProcessEvent ( pFnGetHeight, &GetHeight_Parms, NULL );

	return GetHeight_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.GetCollisionHeight
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatar::eventGetCollisionHeight ( )
{
	static UFunction* pFnGetCollisionHeight = NULL;

	if ( ! pFnGetCollisionHeight )
		pFnGetCollisionHeight = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.GetCollisionHeight" );

	ANowAtlasAvatar_eventGetCollisionHeight_Parms GetCollisionHeight_Parms;

	this->ProcessEvent ( pFnGetCollisionHeight, &GetCollisionHeight_Parms, NULL );

	return GetCollisionHeight_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.GetCollisionRadius
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatar::eventGetCollisionRadius ( )
{
	static UFunction* pFnGetCollisionRadius = NULL;

	if ( ! pFnGetCollisionRadius )
		pFnGetCollisionRadius = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.GetCollisionRadius" );

	ANowAtlasAvatar_eventGetCollisionRadius_Parms GetCollisionRadius_Parms;

	this->ProcessEvent ( pFnGetCollisionRadius, &GetCollisionRadius_Parms, NULL );

	return GetCollisionRadius_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.Resurrect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatar::eventResurrect ( )
{
	static UFunction* pFnResurrect = NULL;

	if ( ! pFnResurrect )
		pFnResurrect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.Resurrect" );

	ANowAtlasAvatar_eventResurrect_Parms Resurrect_Parms;

	this->ProcessEvent ( pFnResurrect, &Resurrect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FName                   LastHitBoneName                ( CPF_OptionalParm | CPF_Parm )
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatar::eventSpawnCorpse ( struct FName LastHitBoneName, float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.SpawnCorpse" );

	ANowAtlasAvatar_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	memcpy ( &SpawnCorpse_Parms.LastHitBoneName, &LastHitBoneName, 0x8 );
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.PlayFootStepSound
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            FootDown                       ( CPF_Parm )

void ANowAtlasAvatar::eventPlayFootStepSound ( int FootDown )
{
	static UFunction* pFnPlayFootStepSound = NULL;

	if ( ! pFnPlayFootStepSound )
		pFnPlayFootStepSound = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.PlayFootStepSound" );

	ANowAtlasAvatar_eventPlayFootStepSound_Parms PlayFootStepSound_Parms;
	PlayFootStepSound_Parms.FootDown = FootDown;

	this->ProcessEvent ( pFnPlayFootStepSound, &PlayFootStepSound_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.CheckForDecalSpawn
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DmgTaken                       ( CPF_Parm )

void ANowAtlasAvatar::eventCheckForDecalSpawn ( float DmgTaken )
{
	static UFunction* pFnCheckForDecalSpawn = NULL;

	if ( ! pFnCheckForDecalSpawn )
		pFnCheckForDecalSpawn = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.CheckForDecalSpawn" );

	ANowAtlasAvatar_eventCheckForDecalSpawn_Parms CheckForDecalSpawn_Parms;
	CheckForDecalSpawn_Parms.DmgTaken = DmgTaken;

	this->ProcessEvent ( pFnCheckForDecalSpawn, &CheckForDecalSpawn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.SpawnHitFx
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// unsigned long                  ClientFeedBack                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIgnoreParticles               ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatar::eventSpawnHitFx ( struct FVector HitLocation, unsigned long ClientFeedBack, unsigned long bIgnoreParticles )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.SpawnHitFx" );

	ANowAtlasAvatar_eventSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.HitLocation, &HitLocation, 0xC );
	SpawnHitFx_Parms.ClientFeedBack = ClientFeedBack;
	SpawnHitFx_Parms.bIgnoreParticles = bIgnoreParticles;

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.Degree
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DG                             ( CPF_Parm )

int ANowAtlasAvatar::Degree ( float DG )
{
	static UFunction* pFnDegree = NULL;

	if ( ! pFnDegree )
		pFnDegree = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.Degree" );

	ANowAtlasAvatar_execDegree_Parms Degree_Parms;
	Degree_Parms.DG = DG;

	this->ProcessEvent ( pFnDegree, &Degree_Parms, NULL );

	return Degree_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.Tick
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowAtlasAvatar::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.Tick" );

	ANowAtlasAvatar_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.GetFloatVal
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 crc                            ( CPF_Parm | CPF_NeedCtorLink )

float ANowAtlasAvatar::GetFloatVal ( struct FString crc )
{
	static UFunction* pFnGetFloatVal = NULL;

	if ( ! pFnGetFloatVal )
		pFnGetFloatVal = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.GetFloatVal" );

	ANowAtlasAvatar_execGetFloatVal_Parms GetFloatVal_Parms;
	memcpy ( &GetFloatVal_Parms.crc, &crc, 0xC );

	pFnGetFloatVal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFloatVal, &GetFloatVal_Parms, NULL );

	pFnGetFloatVal->FunctionFlags |= 0x400;

	return GetFloatVal_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatar::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.PostBeginPlay" );

	ANowAtlasAvatar_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.SetLocalFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewFlag                        ( CPF_Parm )

void ANowAtlasAvatar::eventSetLocalFlag ( int NewFlag )
{
	static UFunction* pFnSetLocalFlag = NULL;

	if ( ! pFnSetLocalFlag )
		pFnSetLocalFlag = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.SetLocalFlag" );

	ANowAtlasAvatar_eventSetLocalFlag_Parms SetLocalFlag_Parms;
	SetLocalFlag_Parms.NewFlag = NewFlag;

	this->ProcessEvent ( pFnSetLocalFlag, &SetLocalFlag_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.GetGuildFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatar::eventGetGuildFlag ( )
{
	static UFunction* pFnGetGuildFlag = NULL;

	if ( ! pFnGetGuildFlag )
		pFnGetGuildFlag = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.GetGuildFlag" );

	ANowAtlasAvatar_eventGetGuildFlag_Parms GetGuildFlag_Parms;

	this->ProcessEvent ( pFnGetGuildFlag, &GetGuildFlag_Parms, NULL );

	return GetGuildFlag_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.SetPendingGetAndCreateBody
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatar::eventSetPendingGetAndCreateBody ( )
{
	static UFunction* pFnSetPendingGetAndCreateBody = NULL;

	if ( ! pFnSetPendingGetAndCreateBody )
		pFnSetPendingGetAndCreateBody = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.SetPendingGetAndCreateBody" );

	ANowAtlasAvatar_eventSetPendingGetAndCreateBody_Parms SetPendingGetAndCreateBody_Parms;

	this->ProcessEvent ( pFnSetPendingGetAndCreateBody, &SetPendingGetAndCreateBody_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.OpenGFXScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iGfxScene                      ( CPF_Parm )

void ANowAtlasAvatar::eventOpenGFXScene ( int iGfxScene )
{
	static UFunction* pFnOpenGFXScene = NULL;

	if ( ! pFnOpenGFXScene )
		pFnOpenGFXScene = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.OpenGFXScene" );

	ANowAtlasAvatar_eventOpenGFXScene_Parms OpenGFXScene_Parms;
	OpenGFXScene_Parms.iGfxScene = iGfxScene;

	this->ProcessEvent ( pFnOpenGFXScene, &OpenGFXScene_Parms, NULL );
};

// Function NowGame.NowAtlasAvatar.GetInteractionString
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatar::GetInteractionString ( )
{
	static UFunction* pFnGetInteractionString = NULL;

	if ( ! pFnGetInteractionString )
		pFnGetInteractionString = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.GetInteractionString" );

	ANowAtlasAvatar_execGetInteractionString_Parms GetInteractionString_Parms;

	pFnGetInteractionString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInteractionString, &GetInteractionString_Parms, NULL );

	pFnGetInteractionString->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.GetAiIdentification
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatar::GetAiIdentification ( )
{
	static UFunction* pFnGetAiIdentification = NULL;

	if ( ! pFnGetAiIdentification )
		pFnGetAiIdentification = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.GetAiIdentification" );

	ANowAtlasAvatar_execGetAiIdentification_Parms GetAiIdentification_Parms;

	pFnGetAiIdentification->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAiIdentification, &GetAiIdentification_Parms, NULL );

	pFnGetAiIdentification->FunctionFlags |= 0x400;

	return GetAiIdentification_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatar::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.SetContentInfo" );

	ANowAtlasAvatar_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.GetAndCreateBody
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatar::GetAndCreateBody ( unsigned long bReInit )
{
	static UFunction* pFnGetAndCreateBody = NULL;

	if ( ! pFnGetAndCreateBody )
		pFnGetAndCreateBody = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.GetAndCreateBody" );

	ANowAtlasAvatar_execGetAndCreateBody_Parms GetAndCreateBody_Parms;
	GetAndCreateBody_Parms.bReInit = bReInit;

	pFnGetAndCreateBody->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateBody, &GetAndCreateBody_Parms, NULL );

	pFnGetAndCreateBody->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.CorrectMyPos
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatar::CorrectMyPos ( )
{
	static UFunction* pFnCorrectMyPos = NULL;

	if ( ! pFnCorrectMyPos )
		pFnCorrectMyPos = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.CorrectMyPos" );

	ANowAtlasAvatar_execCorrectMyPos_Parms CorrectMyPos_Parms;

	pFnCorrectMyPos->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCorrectMyPos, &CorrectMyPos_Parms, NULL );

	pFnCorrectMyPos->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.GetFlag
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatar::GetFlag ( )
{
	static UFunction* pFnGetFlag = NULL;

	if ( ! pFnGetFlag )
		pFnGetFlag = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.GetFlag" );

	ANowAtlasAvatar_execGetFlag_Parms GetFlag_Parms;

	pFnGetFlag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFlag, &GetFlag_Parms, NULL );

	pFnGetFlag->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.NewRotation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatar::NewRotation ( )
{
	static UFunction* pFnNewRotation = NULL;

	if ( ! pFnNewRotation )
		pFnNewRotation = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.NewRotation" );

	ANowAtlasAvatar_execNewRotation_Parms NewRotation_Parms;

	pFnNewRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNewRotation, &NewRotation_Parms, NULL );

	pFnNewRotation->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.GetAtlasType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatar::GetAtlasType ( )
{
	static UFunction* pFnGetAtlasType = NULL;

	if ( ! pFnGetAtlasType )
		pFnGetAtlasType = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.GetAtlasType" );

	ANowAtlasAvatar_execGetAtlasType_Parms GetAtlasType_Parms;

	pFnGetAtlasType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasType, &GetAtlasType_Parms, NULL );

	pFnGetAtlasType->FunctionFlags |= 0x400;

	return GetAtlasType_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.TeleportPosUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatar::TeleportPosUpdate ( )
{
	static UFunction* pFnTeleportPosUpdate = NULL;

	if ( ! pFnTeleportPosUpdate )
		pFnTeleportPosUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.TeleportPosUpdate" );

	ANowAtlasAvatar_execTeleportPosUpdate_Parms TeleportPosUpdate_Parms;

	pFnTeleportPosUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTeleportPosUpdate, &TeleportPosUpdate_Parms, NULL );

	pFnTeleportPosUpdate->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.GetAtlasComponent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UComponent*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )

class UComponent* ANowAtlasAvatar::GetAtlasComponent ( )
{
	static UFunction* pFnGetAtlasComponent = NULL;

	if ( ! pFnGetAtlasComponent )
		pFnGetAtlasComponent = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.GetAtlasComponent" );

	ANowAtlasAvatar_execGetAtlasComponent_Parms GetAtlasComponent_Parms;

	pFnGetAtlasComponent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasComponent, &GetAtlasComponent_Parms, NULL );

	pFnGetAtlasComponent->FunctionFlags |= 0x400;

	return GetAtlasComponent_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatar.Use
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatar::Use ( )
{
	static UFunction* pFnUse = NULL;

	if ( ! pFnUse )
		pFnUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.Use" );

	ANowAtlasAvatar_execUse_Parms Use_Parms;

	pFnUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUse, &Use_Parms, NULL );

	pFnUse->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatar.StartPhysDeath
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            lastHitBoneID                  ( CPF_Parm )

void ANowAtlasAvatar::StartPhysDeath ( int lastHitBoneID )
{
	static UFunction* pFnStartPhysDeath = NULL;

	if ( ! pFnStartPhysDeath )
		pFnStartPhysDeath = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatar.StartPhysDeath" );

	ANowAtlasAvatar_execStartPhysDeath_Parms StartPhysDeath_Parms;
	StartPhysDeath_Parms.lastHitBoneID = lastHitBoneID;

	pFnStartPhysDeath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartPhysDeath, &StartPhysDeath_Parms, NULL );

	pFnStartPhysDeath->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiSpawner.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowAtlasAvatarAiSpawner::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiSpawner.PostBeginPlay" );

	ANowAtlasAvatarAiSpawner_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEditorOnly.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowAtlasAvatarEditorOnly::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarEditorOnly.PostBeginPlay" );

	ANowAtlasAvatarEditorOnly_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEvent.DrawDebug
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          fRange                         ( CPF_Parm )

void ANowAtlasAvatarEvent::eventDrawDebug ( float fRange )
{
	static UFunction* pFnDrawDebug = NULL;

	if ( ! pFnDrawDebug )
		pFnDrawDebug = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarEvent.DrawDebug" );

	ANowAtlasAvatarEvent_eventDrawDebug_Parms DrawDebug_Parms;
	DrawDebug_Parms.fRange = fRange;

	this->ProcessEvent ( pFnDrawDebug, &DrawDebug_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEvent.UnTriggerMe
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEvent::eventUnTriggerMe ( )
{
	static UFunction* pFnUnTriggerMe = NULL;

	if ( ! pFnUnTriggerMe )
		pFnUnTriggerMe = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarEvent.UnTriggerMe" );

	ANowAtlasAvatarEvent_eventUnTriggerMe_Parms UnTriggerMe_Parms;

	this->ProcessEvent ( pFnUnTriggerMe, &UnTriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEvent.TriggerMe
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEvent::eventTriggerMe ( )
{
	static UFunction* pFnTriggerMe = NULL;

	if ( ! pFnTriggerMe )
		pFnTriggerMe = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarEvent.TriggerMe" );

	ANowAtlasAvatarEvent_eventTriggerMe_Parms TriggerMe_Parms;

	this->ProcessEvent ( pFnTriggerMe, &TriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEvent.PostBeginPlay
// [0x00020000] 
// Parameters infos:

void ANowAtlasAvatarEvent::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarEvent.PostBeginPlay" );

	ANowAtlasAvatarEvent_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEvent.ShowDebug
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarEvent::ShowDebug ( )
{
	static UFunction* pFnShowDebug = NULL;

	if ( ! pFnShowDebug )
		pFnShowDebug = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarEvent.ShowDebug" );

	ANowAtlasAvatarEvent_execShowDebug_Parms ShowDebug_Parms;

	pFnShowDebug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowDebug, &ShowDebug_Parms, NULL );

	pFnShowDebug->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarGuildStone.ToggleGuildMainMenu
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarGuildStone::ToggleGuildMainMenu ( )
{
	static UFunction* pFnToggleGuildMainMenu = NULL;

	if ( ! pFnToggleGuildMainMenu )
		pFnToggleGuildMainMenu = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGuildStone.ToggleGuildMainMenu" );

	ANowAtlasAvatarGuildStone_execToggleGuildMainMenu_Parms ToggleGuildMainMenu_Parms;

	this->ProcessEvent ( pFnToggleGuildMainMenu, &ToggleGuildMainMenu_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGuildStone.UseGuildStone
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarGuildStone::eventUseGuildStone ( )
{
	static UFunction* pFnUseGuildStone = NULL;

	if ( ! pFnUseGuildStone )
		pFnUseGuildStone = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGuildStone.UseGuildStone" );

	ANowAtlasAvatarGuildStone_eventUseGuildStone_Parms UseGuildStone_Parms;

	this->ProcessEvent ( pFnUseGuildStone, &UseGuildStone_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGuildStone.PostBeginPlay
// [0x00020000] 
// Parameters infos:

void ANowAtlasAvatarGuildStone::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGuildStone.PostBeginPlay" );

	ANowAtlasAvatarGuildStone_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGuildStone.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarGuildStone::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGuildStone.AtlasUse" );

	ANowAtlasAvatarGuildStone_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerStructure.PlayKeySound
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerStructure::eventPlayKeySound ( )
{
	static UFunction* pFnPlayKeySound = NULL;

	if ( ! pFnPlayKeySound )
		pFnPlayKeySound = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerStructure.PlayKeySound" );

	ANowAtlasAvatarPlayerStructure_eventPlayKeySound_Parms PlayKeySound_Parms;

	this->ProcessEvent ( pFnPlayKeySound, &PlayKeySound_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerStructure.useKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerStructure::useKey ( struct FString ItemGuid )
{
	static UFunction* pFnuseKey = NULL;

	if ( ! pFnuseKey )
		pFnuseKey = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerStructure.useKey" );

	ANowAtlasAvatarPlayerStructure_execuseKey_Parms useKey_Parms;
	memcpy ( &useKey_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnuseKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnuseKey, &useKey_Parms, NULL );

	pFnuseKey->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerStructure.getHouseParamFloat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ParamName                      ( CPF_Parm | CPF_NeedCtorLink )

float ANowAtlasAvatarPlayerStructure::getHouseParamFloat ( struct FString ParamName )
{
	static UFunction* pFngetHouseParamFloat = NULL;

	if ( ! pFngetHouseParamFloat )
		pFngetHouseParamFloat = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerStructure.getHouseParamFloat" );

	ANowAtlasAvatarPlayerStructure_execgetHouseParamFloat_Parms getHouseParamFloat_Parms;
	memcpy ( &getHouseParamFloat_Parms.ParamName, &ParamName, 0xC );

	pFngetHouseParamFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseParamFloat, &getHouseParamFloat_Parms, NULL );

	pFngetHouseParamFloat->FunctionFlags |= 0x400;

	return getHouseParamFloat_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerStructure.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatarPlayerStructure::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerStructure.SetContentInfo" );

	ANowAtlasAvatarPlayerStructure_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarKeySwitchObject::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.PostBeginPlay" );

	ANowAtlasAvatarKeySwitchObject_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.initMeshes
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarKeySwitchObject::initMeshes ( )
{
	static UFunction* pFninitMeshes = NULL;

	if ( ! pFninitMeshes )
		pFninitMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.initMeshes" );

	ANowAtlasAvatarKeySwitchObject_execinitMeshes_Parms initMeshes_Parms;

	this->ProcessEvent ( pFninitMeshes, &initMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.Init
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarKeySwitchObject::Init ( )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.Init" );

	ANowAtlasAvatarKeySwitchObject_execInit_Parms Init_Parms;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.isTargetingMesh
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UStaticMeshComponent*    Mesh                           ( CPF_Parm | CPF_EditInline )

bool ANowAtlasAvatarKeySwitchObject::isTargetingMesh ( class UStaticMeshComponent* Mesh )
{
	static UFunction* pFnisTargetingMesh = NULL;

	if ( ! pFnisTargetingMesh )
		pFnisTargetingMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.isTargetingMesh" );

	ANowAtlasAvatarKeySwitchObject_execisTargetingMesh_Parms isTargetingMesh_Parms;
	isTargetingMesh_Parms.Mesh = Mesh;

	this->ProcessEvent ( pFnisTargetingMesh, &isTargetingMesh_Parms, NULL );

	return isTargetingMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.setBlocking
// [0x00020002] 
// Parameters infos:
// unsigned long                  blocking                       ( CPF_Parm )

void ANowAtlasAvatarKeySwitchObject::setBlocking ( unsigned long blocking )
{
	static UFunction* pFnsetBlocking = NULL;

	if ( ! pFnsetBlocking )
		pFnsetBlocking = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.setBlocking" );

	ANowAtlasAvatarKeySwitchObject_execsetBlocking_Parms setBlocking_Parms;
	setBlocking_Parms.blocking = blocking;

	this->ProcessEvent ( pFnsetBlocking, &setBlocking_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.GameMessage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  msg                            ( CPF_Parm )

void ANowAtlasAvatarKeySwitchObject::eventGameMessage ( unsigned char msg )
{
	static UFunction* pFnGameMessage = NULL;

	if ( ! pFnGameMessage )
		pFnGameMessage = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.GameMessage" );

	ANowAtlasAvatarKeySwitchObject_eventGameMessage_Parms GameMessage_Parms;
	GameMessage_Parms.msg = msg;

	this->ProcessEvent ( pFnGameMessage, &GameMessage_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.isTargetingBaseMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObject::eventisTargetingBaseMesh ( )
{
	static UFunction* pFnisTargetingBaseMesh = NULL;

	if ( ! pFnisTargetingBaseMesh )
		pFnisTargetingBaseMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.isTargetingBaseMesh" );

	ANowAtlasAvatarKeySwitchObject_eventisTargetingBaseMesh_Parms isTargetingBaseMesh_Parms;

	this->ProcessEvent ( pFnisTargetingBaseMesh, &isTargetingBaseMesh_Parms, NULL );

	return isTargetingBaseMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.isTargetingInteractionMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObject::eventisTargetingInteractionMesh ( )
{
	static UFunction* pFnisTargetingInteractionMesh = NULL;

	if ( ! pFnisTargetingInteractionMesh )
		pFnisTargetingInteractionMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.isTargetingInteractionMesh" );

	ANowAtlasAvatarKeySwitchObject_eventisTargetingInteractionMesh_Parms isTargetingInteractionMesh_Parms;

	this->ProcessEvent ( pFnisTargetingInteractionMesh, &isTargetingInteractionMesh_Parms, NULL );

	return isTargetingInteractionMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.setMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bObjectState                   ( CPF_Parm )

void ANowAtlasAvatarKeySwitchObject::eventsetMesh ( unsigned long bObjectState )
{
	static UFunction* pFnsetMesh = NULL;

	if ( ! pFnsetMesh )
		pFnsetMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.setMesh" );

	ANowAtlasAvatarKeySwitchObject_eventsetMesh_Parms setMesh_Parms;
	setMesh_Parms.bObjectState = bObjectState;

	this->ProcessEvent ( pFnsetMesh, &setMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.useKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarKeySwitchObject::useKey ( struct FString ItemGuid )
{
	static UFunction* pFnuseKey = NULL;

	if ( ! pFnuseKey )
		pFnuseKey = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.useKey" );

	ANowAtlasAvatarKeySwitchObject_execuseKey_Parms useKey_Parms;
	memcpy ( &useKey_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnuseKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnuseKey, &useKey_Parms, NULL );

	pFnuseKey->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.getContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarKeySwitchObject::getContentInfo ( )
{
	static UFunction* pFngetContentInfo = NULL;

	if ( ! pFngetContentInfo )
		pFngetContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.getContentInfo" );

	ANowAtlasAvatarKeySwitchObject_execgetContentInfo_Parms getContentInfo_Parms;

	pFngetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetContentInfo, &getContentInfo_Parms, NULL );

	pFngetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.isKeyMatching
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarKeySwitchObject::isKeyMatching ( struct FString ItemGuid )
{
	static UFunction* pFnisKeyMatching = NULL;

	if ( ! pFnisKeyMatching )
		pFnisKeyMatching = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.isKeyMatching" );

	ANowAtlasAvatarKeySwitchObject_execisKeyMatching_Parms isKeyMatching_Parms;
	memcpy ( &isKeyMatching_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnisKeyMatching->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisKeyMatching, &isKeyMatching_Parms, NULL );

	pFnisKeyMatching->FunctionFlags |= 0x400;

	return isKeyMatching_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.isObjectLocked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObject::isObjectLocked ( )
{
	static UFunction* pFnisObjectLocked = NULL;

	if ( ! pFnisObjectLocked )
		pFnisObjectLocked = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.isObjectLocked" );

	ANowAtlasAvatarKeySwitchObject_execisObjectLocked_Parms isObjectLocked_Parms;

	pFnisObjectLocked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisObjectLocked, &isObjectLocked_Parms, NULL );

	pFnisObjectLocked->FunctionFlags |= 0x400;

	return isObjectLocked_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.DestroyKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObject::DestroyKey ( )
{
	static UFunction* pFnDestroyKey = NULL;

	if ( ! pFnDestroyKey )
		pFnDestroyKey = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.DestroyKey" );

	ANowAtlasAvatarKeySwitchObject_execDestroyKey_Parms DestroyKey_Parms;

	pFnDestroyKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDestroyKey, &DestroyKey_Parms, NULL );

	pFnDestroyKey->FunctionFlags |= 0x400;

	return DestroyKey_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.Update
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObject::Update ( )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.Update" );

	ANowAtlasAvatarKeySwitchObject_execUpdate_Parms Update_Parms;

	pFnUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );

	pFnUpdate->FunctionFlags |= 0x400;

	return Update_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObject.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarKeySwitchObject::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObject.AtlasUse" );

	ANowAtlasAvatarKeySwitchObject_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectChest.isTargetingInteractionMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObjectChest::eventisTargetingInteractionMesh ( )
{
	static UFunction* pFnisTargetingInteractionMesh = NULL;

	if ( ! pFnisTargetingInteractionMesh )
		pFnisTargetingInteractionMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObjectChest.isTargetingInteractionMesh" );

	ANowAtlasAvatarKeySwitchObjectChest_eventisTargetingInteractionMesh_Parms isTargetingInteractionMesh_Parms;

	this->ProcessEvent ( pFnisTargetingInteractionMesh, &isTargetingInteractionMesh_Parms, NULL );

	return isTargetingInteractionMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectChest.useKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarKeySwitchObjectChest::useKey ( struct FString ItemGuid )
{
	static UFunction* pFnuseKey = NULL;

	if ( ! pFnuseKey )
		pFnuseKey = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObjectChest.useKey" );

	ANowAtlasAvatarKeySwitchObjectChest_execuseKey_Parms useKey_Parms;
	memcpy ( &useKey_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnuseKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnuseKey, &useKey_Parms, NULL );

	pFnuseKey->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectChest.Update
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObjectChest::Update ( )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObjectChest.Update" );

	ANowAtlasAvatarKeySwitchObjectChest_execUpdate_Parms Update_Parms;

	pFnUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );

	pFnUpdate->FunctionFlags |= 0x400;

	return Update_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectChest.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarKeySwitchObjectChest::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObjectChest.AtlasUse" );

	ANowAtlasAvatarKeySwitchObjectChest_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectDoor.useKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarKeySwitchObjectDoor::useKey ( struct FString ItemGuid )
{
	static UFunction* pFnuseKey = NULL;

	if ( ! pFnuseKey )
		pFnuseKey = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObjectDoor.useKey" );

	ANowAtlasAvatarKeySwitchObjectDoor_execuseKey_Parms useKey_Parms;
	memcpy ( &useKey_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnuseKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnuseKey, &useKey_Parms, NULL );

	pFnuseKey->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectDoor.Update
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarKeySwitchObjectDoor::Update ( )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObjectDoor.Update" );

	ANowAtlasAvatarKeySwitchObjectDoor_execUpdate_Parms Update_Parms;

	pFnUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );

	pFnUpdate->FunctionFlags |= 0x400;

	return Update_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarKeySwitchObjectDoor.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarKeySwitchObjectDoor::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarKeySwitchObjectDoor.AtlasUse" );

	ANowAtlasAvatarKeySwitchObjectDoor_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetGFX
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowGFXHud*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHud* ANowAtlasAvatarPlayerHouse::eventGetGFX ( )
{
	static UFunction* pFnGetGFX = NULL;

	if ( ! pFnGetGFX )
		pFnGetGFX = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetGFX" );

	ANowAtlasAvatarPlayerHouse_eventGetGFX_Parms GetGFX_Parms;

	this->ProcessEvent ( pFnGetGFX, &GetGFX_Parms, NULL );

	return GetGFX_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.importMeshStrings
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventimportMeshStrings ( )
{
	static UFunction* pFnimportMeshStrings = NULL;

	if ( ! pFnimportMeshStrings )
		pFnimportMeshStrings = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.importMeshStrings" );

	ANowAtlasAvatarPlayerHouse_eventimportMeshStrings_Parms importMeshStrings_Parms;

	this->ProcessEvent ( pFnimportMeshStrings, &importMeshStrings_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setDoorCollisionFalse
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setDoorCollisionFalse ( )
{
	static UFunction* pFnsetDoorCollisionFalse = NULL;

	if ( ! pFnsetDoorCollisionFalse )
		pFnsetDoorCollisionFalse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setDoorCollisionFalse" );

	ANowAtlasAvatarPlayerHouse_execsetDoorCollisionFalse_Parms setDoorCollisionFalse_Parms;

	this->ProcessEvent ( pFnsetDoorCollisionFalse, &setDoorCollisionFalse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setDoorCollisionTrue
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setDoorCollisionTrue ( )
{
	static UFunction* pFnsetDoorCollisionTrue = NULL;

	if ( ! pFnsetDoorCollisionTrue )
		pFnsetDoorCollisionTrue = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setDoorCollisionTrue" );

	ANowAtlasAvatarPlayerHouse_execsetDoorCollisionTrue_Parms setDoorCollisionTrue_Parms;

	this->ProcessEvent ( pFnsetDoorCollisionTrue, &setDoorCollisionTrue_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.PendingHouseBuildingStatus
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::PendingHouseBuildingStatus ( )
{
	static UFunction* pFnPendingHouseBuildingStatus = NULL;

	if ( ! pFnPendingHouseBuildingStatus )
		pFnPendingHouseBuildingStatus = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.PendingHouseBuildingStatus" );

	ANowAtlasAvatarPlayerHouse_execPendingHouseBuildingStatus_Parms PendingHouseBuildingStatus_Parms;

	this->ProcessEvent ( pFnPendingHouseBuildingStatus, &PendingHouseBuildingStatus_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.initMovePlayersUpFromGround
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::initMovePlayersUpFromGround ( )
{
	static UFunction* pFninitMovePlayersUpFromGround = NULL;

	if ( ! pFninitMovePlayersUpFromGround )
		pFninitMovePlayersUpFromGround = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.initMovePlayersUpFromGround" );

	ANowAtlasAvatarPlayerHouse_execinitMovePlayersUpFromGround_Parms initMovePlayersUpFromGround_Parms;

	this->ProcessEvent ( pFninitMovePlayersUpFromGround, &initMovePlayersUpFromGround_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.PostBeginPlay" );

	ANowAtlasAvatarPlayerHouse_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setDoorStartMeshes
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setDoorStartMeshes ( )
{
	static UFunction* pFnsetDoorStartMeshes = NULL;

	if ( ! pFnsetDoorStartMeshes )
		pFnsetDoorStartMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setDoorStartMeshes" );

	ANowAtlasAvatarPlayerHouse_execsetDoorStartMeshes_Parms setDoorStartMeshes_Parms;

	this->ProcessEvent ( pFnsetDoorStartMeshes, &setDoorStartMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.addMeshes
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::addMeshes ( )
{
	static UFunction* pFnaddMeshes = NULL;

	if ( ! pFnaddMeshes )
		pFnaddMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.addMeshes" );

	ANowAtlasAvatarPlayerHouse_execaddMeshes_Parms addMeshes_Parms;

	this->ProcessEvent ( pFnaddMeshes, &addMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.CreateHouse
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::CreateHouse ( int _houseType )
{
	static UFunction* pFnCreateHouse = NULL;

	if ( ! pFnCreateHouse )
		pFnCreateHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.CreateHouse" );

	ANowAtlasAvatarPlayerHouse_execCreateHouse_Parms CreateHouse_Parms;
	CreateHouse_Parms._houseType = _houseType;

	this->ProcessEvent ( pFnCreateHouse, &CreateHouse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.CreateSign
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::CreateSign ( )
{
	static UFunction* pFnCreateSign = NULL;

	if ( ! pFnCreateSign )
		pFnCreateSign = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.CreateSign" );

	ANowAtlasAvatarPlayerHouse_execCreateSign_Parms CreateSign_Parms;

	this->ProcessEvent ( pFnCreateSign, &CreateSign_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.CreateDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::CreateDoor ( )
{
	static UFunction* pFnCreateDoor = NULL;

	if ( ! pFnCreateDoor )
		pFnCreateDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.CreateDoor" );

	ANowAtlasAvatarPlayerHouse_execCreateDoor_Parms CreateDoor_Parms;

	this->ProcessEvent ( pFnCreateDoor, &CreateDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.closeDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::closeDoor ( )
{
	static UFunction* pFncloseDoor = NULL;

	if ( ! pFncloseDoor )
		pFncloseDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.closeDoor" );

	ANowAtlasAvatarPlayerHouse_execcloseDoor_Parms closeDoor_Parms;

	this->ProcessEvent ( pFncloseDoor, &closeDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.openDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::openDoor ( )
{
	static UFunction* pFnopenDoor = NULL;

	if ( ! pFnopenDoor )
		pFnopenDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.openDoor" );

	ANowAtlasAvatarPlayerHouse_execopenDoor_Parms openDoor_Parms;

	this->ProcessEvent ( pFnopenDoor, &openDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.targetStables
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// struct FVector                 EndShot                        ( CPF_Parm )
// struct FVector                 StartShot                      ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouse::targetStables ( struct FVector HitLocation, struct FVector HitNormal, struct FVector EndShot, struct FVector StartShot )
{
	static UFunction* pFntargetStables = NULL;

	if ( ! pFntargetStables )
		pFntargetStables = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.targetStables" );

	ANowAtlasAvatarPlayerHouse_exectargetStables_Parms targetStables_Parms;
	memcpy ( &targetStables_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &targetStables_Parms.HitNormal, &HitNormal, 0xC );
	memcpy ( &targetStables_Parms.EndShot, &EndShot, 0xC );
	memcpy ( &targetStables_Parms.StartShot, &StartShot, 0xC );

	this->ProcessEvent ( pFntargetStables, &targetStables_Parms, NULL );

	return targetStables_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.TargetShop
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// struct FVector                 EndShot                        ( CPF_Parm )
// struct FVector                 StartShot                      ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouse::TargetShop ( struct FVector HitLocation, struct FVector HitNormal, struct FVector EndShot, struct FVector StartShot )
{
	static UFunction* pFnTargetShop = NULL;

	if ( ! pFnTargetShop )
		pFnTargetShop = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.TargetShop" );

	ANowAtlasAvatarPlayerHouse_execTargetShop_Parms TargetShop_Parms;
	memcpy ( &TargetShop_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TargetShop_Parms.HitNormal, &HitNormal, 0xC );
	memcpy ( &TargetShop_Parms.EndShot, &EndShot, 0xC );
	memcpy ( &TargetShop_Parms.StartShot, &StartShot, 0xC );

	this->ProcessEvent ( pFnTargetShop, &TargetShop_Parms, NULL );

	return TargetShop_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.hasDeposit
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::hasDeposit ( )
{
	static UFunction* pFnhasDeposit = NULL;

	if ( ! pFnhasDeposit )
		pFnhasDeposit = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.hasDeposit" );

	ANowAtlasAvatarPlayerHouse_exechasDeposit_Parms hasDeposit_Parms;

	this->ProcessEvent ( pFnhasDeposit, &hasDeposit_Parms, NULL );

	return hasDeposit_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.TargetCraftinTable
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::eventTargetCraftinTable ( )
{
	static UFunction* pFnTargetCraftinTable = NULL;

	if ( ! pFnTargetCraftinTable )
		pFnTargetCraftinTable = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.TargetCraftinTable" );

	ANowAtlasAvatarPlayerHouse_eventTargetCraftinTable_Parms TargetCraftinTable_Parms;

	this->ProcessEvent ( pFnTargetCraftinTable, &TargetCraftinTable_Parms, NULL );

	return TargetCraftinTable_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.TargetMesh
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::eventTargetMesh ( )
{
	static UFunction* pFnTargetMesh = NULL;

	if ( ! pFnTargetMesh )
		pFnTargetMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.TargetMesh" );

	ANowAtlasAvatarPlayerHouse_eventTargetMesh_Parms TargetMesh_Parms;

	this->ProcessEvent ( pFnTargetMesh, &TargetMesh_Parms, NULL );

	return TargetMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.toCloseToTheDoor
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::eventtoCloseToTheDoor ( )
{
	static UFunction* pFntoCloseToTheDoor = NULL;

	if ( ! pFntoCloseToTheDoor )
		pFntoCloseToTheDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.toCloseToTheDoor" );

	ANowAtlasAvatarPlayerHouse_eventtoCloseToTheDoor_Parms toCloseToTheDoor_Parms;

	this->ProcessEvent ( pFntoCloseToTheDoor, &toCloseToTheDoor_Parms, NULL );

	return toCloseToTheDoor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getMesh
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ANowAtlasAvatarPlayerHouse::eventgetMesh ( )
{
	static UFunction* pFngetMesh = NULL;

	if ( ! pFngetMesh )
		pFngetMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getMesh" );

	ANowAtlasAvatarPlayerHouse_eventgetMesh_Parms getMesh_Parms;

	this->ProcessEvent ( pFngetMesh, &getMesh_Parms, NULL );

	return getMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.sendMessageToHouse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 messageTwo                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarPlayerHouse::eventsendMessageToHouse ( struct FString Message, struct FString messageTwo )
{
	static UFunction* pFnsendMessageToHouse = NULL;

	if ( ! pFnsendMessageToHouse )
		pFnsendMessageToHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.sendMessageToHouse" );

	ANowAtlasAvatarPlayerHouse_eventsendMessageToHouse_Parms sendMessageToHouse_Parms;
	memcpy ( &sendMessageToHouse_Parms.Message, &Message, 0xC );
	memcpy ( &sendMessageToHouse_Parms.messageTwo, &messageTwo, 0xC );

	this->ProcessEvent ( pFnsendMessageToHouse, &sendMessageToHouse_Parms, NULL );

	return sendMessageToHouse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.sendReqBToHouse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarPlayerHouse::eventsendReqBToHouse ( struct FString Message )
{
	static UFunction* pFnsendReqBToHouse = NULL;

	if ( ! pFnsendReqBToHouse )
		pFnsendReqBToHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.sendReqBToHouse" );

	ANowAtlasAvatarPlayerHouse_eventsendReqBToHouse_Parms sendReqBToHouse_Parms;
	memcpy ( &sendReqBToHouse_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnsendReqBToHouse, &sendReqBToHouse_Parms, NULL );

	return sendReqBToHouse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setnonGhostMode
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setnonGhostMode ( )
{
	static UFunction* pFnsetnonGhostMode = NULL;

	if ( ! pFnsetnonGhostMode )
		pFnsetnonGhostMode = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setnonGhostMode" );

	ANowAtlasAvatarPlayerHouse_execsetnonGhostMode_Parms setnonGhostMode_Parms;

	this->ProcessEvent ( pFnsetnonGhostMode, &setnonGhostMode_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setOldMaterial
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setOldMaterial ( )
{
	static UFunction* pFnsetOldMaterial = NULL;

	if ( ! pFnsetOldMaterial )
		pFnsetOldMaterial = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setOldMaterial" );

	ANowAtlasAvatarPlayerHouse_execsetOldMaterial_Parms setOldMaterial_Parms;

	this->ProcessEvent ( pFnsetOldMaterial, &setOldMaterial_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setGhostMode
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setGhostMode ( )
{
	static UFunction* pFnsetGhostMode = NULL;

	if ( ! pFnsetGhostMode )
		pFnsetGhostMode = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setGhostMode" );

	ANowAtlasAvatarPlayerHouse_execsetGhostMode_Parms setGhostMode_Parms;

	this->ProcessEvent ( pFnsetGhostMode, &setGhostMode_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.destroyHousePlan
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::eventdestroyHousePlan ( )
{
	static UFunction* pFndestroyHousePlan = NULL;

	if ( ! pFndestroyHousePlan )
		pFndestroyHousePlan = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.destroyHousePlan" );

	ANowAtlasAvatarPlayerHouse_eventdestroyHousePlan_Parms destroyHousePlan_Parms;

	this->ProcessEvent ( pFndestroyHousePlan, &destroyHousePlan_Parms, NULL );

	return destroyHousePlan_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setHouseMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventsetHouseMesh ( )
{
	static UFunction* pFnsetHouseMesh = NULL;

	if ( ! pFnsetHouseMesh )
		pFnsetHouseMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setHouseMesh" );

	ANowAtlasAvatarPlayerHouse_eventsetHouseMesh_Parms setHouseMesh_Parms;

	this->ProcessEvent ( pFnsetHouseMesh, &setHouseMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getDoorUsed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::getDoorUsed ( )
{
	static UFunction* pFngetDoorUsed = NULL;

	if ( ! pFngetDoorUsed )
		pFngetDoorUsed = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getDoorUsed" );

	ANowAtlasAvatarPlayerHouse_execgetDoorUsed_Parms getDoorUsed_Parms;

	this->ProcessEvent ( pFngetDoorUsed, &getDoorUsed_Parms, NULL );

	return getDoorUsed_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleOpenDoor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  doorIsOpen                     ( CPF_Parm )
// int                            door                           ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::eventToggleOpenDoor ( unsigned long doorIsOpen, int door )
{
	static UFunction* pFnToggleOpenDoor = NULL;

	if ( ! pFnToggleOpenDoor )
		pFnToggleOpenDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.ToggleOpenDoor" );

	ANowAtlasAvatarPlayerHouse_eventToggleOpenDoor_Parms ToggleOpenDoor_Parms;
	ToggleOpenDoor_Parms.doorIsOpen = doorIsOpen;
	ToggleOpenDoor_Parms.door = door;

	this->ProcessEvent ( pFnToggleOpenDoor, &ToggleOpenDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isTargetingDoor
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            door                           ( CPF_Parm | CPF_OutParm )

bool ANowAtlasAvatarPlayerHouse::isTargetingDoor ( int* door )
{
	static UFunction* pFnisTargetingDoor = NULL;

	if ( ! pFnisTargetingDoor )
		pFnisTargetingDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.isTargetingDoor" );

	ANowAtlasAvatarPlayerHouse_execisTargetingDoor_Parms isTargetingDoor_Parms;

	this->ProcessEvent ( pFnisTargetingDoor, &isTargetingDoor_Parms, NULL );

	if ( door )
		*door = isTargetingDoor_Parms.door;

	return isTargetingDoor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.HelpConstruction
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::eventHelpConstruction ( )
{
	static UFunction* pFnHelpConstruction = NULL;

	if ( ! pFnHelpConstruction )
		pFnHelpConstruction = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.HelpConstruction" );

	ANowAtlasAvatarPlayerHouse_eventHelpConstruction_Parms HelpConstruction_Parms;

	this->ProcessEvent ( pFnHelpConstruction, &HelpConstruction_Parms, NULL );

	return HelpConstruction_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.stopWorking
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::stopWorking ( )
{
	static UFunction* pFnstopWorking = NULL;

	if ( ! pFnstopWorking )
		pFnstopWorking = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.stopWorking" );

	ANowAtlasAvatarPlayerHouse_execstopWorking_Parms stopWorking_Parms;

	this->ProcessEvent ( pFnstopWorking, &stopWorking_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isTargetingChest
// [0x00C20802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Chest                          ( CPF_Parm | CPF_OutParm )

bool ANowAtlasAvatarPlayerHouse::eventisTargetingChest ( int* Chest )
{
	static UFunction* pFnisTargetingChest = NULL;

	if ( ! pFnisTargetingChest )
		pFnisTargetingChest = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.isTargetingChest" );

	ANowAtlasAvatarPlayerHouse_eventisTargetingChest_Parms isTargetingChest_Parms;

	this->ProcessEvent ( pFnisTargetingChest, &isTargetingChest_Parms, NULL );

	if ( Chest )
		*Chest = isTargetingChest_Parms.Chest;

	return isTargetingChest_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleConstructionUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleConstructionUI ( )
{
	static UFunction* pFnToggleConstructionUI = NULL;

	if ( ! pFnToggleConstructionUI )
		pFnToggleConstructionUI = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.ToggleConstructionUI" );

	ANowAtlasAvatarPlayerHouse_eventToggleConstructionUI_Parms ToggleConstructionUI_Parms;

	this->ProcessEvent ( pFnToggleConstructionUI, &ToggleConstructionUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleSignUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleSignUI ( )
{
	static UFunction* pFnToggleSignUI = NULL;

	if ( ! pFnToggleSignUI )
		pFnToggleSignUI = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.ToggleSignUI" );

	ANowAtlasAvatarPlayerHouse_eventToggleSignUI_Parms ToggleSignUI_Parms;

	this->ProcessEvent ( pFnToggleSignUI, &ToggleSignUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleStartConstructionUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleStartConstructionUI ( )
{
	static UFunction* pFnToggleStartConstructionUI = NULL;

	if ( ! pFnToggleStartConstructionUI )
		pFnToggleStartConstructionUI = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.ToggleStartConstructionUI" );

	ANowAtlasAvatarPlayerHouse_eventToggleStartConstructionUI_Parms ToggleStartConstructionUI_Parms;

	this->ProcessEvent ( pFnToggleStartConstructionUI, &ToggleStartConstructionUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.SetHouseRotation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FRotator                Rot                            ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::eventSetHouseRotation ( struct FRotator Rot )
{
	static UFunction* pFnSetHouseRotation = NULL;

	if ( ! pFnSetHouseRotation )
		pFnSetHouseRotation = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.SetHouseRotation" );

	ANowAtlasAvatarPlayerHouse_eventSetHouseRotation_Parms SetHouseRotation_Parms;
	memcpy ( &SetHouseRotation_Parms.Rot, &Rot, 0xC );

	this->ProcessEvent ( pFnSetHouseRotation, &SetHouseRotation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleHouseTradeUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleHouseTradeUI ( )
{
	static UFunction* pFnToggleHouseTradeUI = NULL;

	if ( ! pFnToggleHouseTradeUI )
		pFnToggleHouseTradeUI = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.ToggleHouseTradeUI" );

	ANowAtlasAvatarPlayerHouse_eventToggleHouseTradeUI_Parms ToggleHouseTradeUI_Parms;

	this->ProcessEvent ( pFnToggleHouseTradeUI, &ToggleHouseTradeUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleeCreateNewGuildUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleeCreateNewGuildUI ( )
{
	static UFunction* pFnToggleeCreateNewGuildUI = NULL;

	if ( ! pFnToggleeCreateNewGuildUI )
		pFnToggleeCreateNewGuildUI = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.ToggleeCreateNewGuildUI" );

	ANowAtlasAvatarPlayerHouse_eventToggleeCreateNewGuildUI_Parms ToggleeCreateNewGuildUI_Parms;

	this->ProcessEvent ( pFnToggleeCreateNewGuildUI, &ToggleeCreateNewGuildUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleShopOptionsUI
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleShopOptionsUI ( )
{
	static UFunction* pFnToggleShopOptionsUI = NULL;

	if ( ! pFnToggleShopOptionsUI )
		pFnToggleShopOptionsUI = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.ToggleShopOptionsUI" );

	ANowAtlasAvatarPlayerHouse_eventToggleShopOptionsUI_Parms ToggleShopOptionsUI_Parms;

	this->ProcessEvent ( pFnToggleShopOptionsUI, &ToggleShopOptionsUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleShopMainUI
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleShopMainUI ( )
{
	static UFunction* pFnToggleShopMainUI = NULL;

	if ( ! pFnToggleShopMainUI )
		pFnToggleShopMainUI = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.ToggleShopMainUI" );

	ANowAtlasAvatarPlayerHouse_eventToggleShopMainUI_Parms ToggleShopMainUI_Parms;

	this->ProcessEvent ( pFnToggleShopMainUI, &ToggleShopMainUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleStableUI
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleStableUI ( )
{
	static UFunction* pFnToggleStableUI = NULL;

	if ( ! pFnToggleStableUI )
		pFnToggleStableUI = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.ToggleStableUI" );

	ANowAtlasAvatarPlayerHouse_eventToggleStableUI_Parms ToggleStableUI_Parms;

	this->ProcessEvent ( pFnToggleStableUI, &ToggleStableUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleGuildStoneUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventToggleGuildStoneUI ( )
{
	static UFunction* pFnToggleGuildStoneUI = NULL;

	if ( ! pFnToggleGuildStoneUI )
		pFnToggleGuildStoneUI = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.ToggleGuildStoneUI" );

	ANowAtlasAvatarPlayerHouse_eventToggleGuildStoneUI_Parms ToggleGuildStoneUI_Parms;

	this->ProcessEvent ( pFnToggleGuildStoneUI, &ToggleGuildStoneUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleCraftingUI
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// int                            craftingType                   ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::eventToggleCraftingUI ( int craftingType )
{
	static UFunction* pFnToggleCraftingUI = NULL;

	if ( ! pFnToggleCraftingUI )
		pFnToggleCraftingUI = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.ToggleCraftingUI" );

	ANowAtlasAvatarPlayerHouse_eventToggleCraftingUI_Parms ToggleCraftingUI_Parms;
	ToggleCraftingUI_Parms.craftingType = craftingType;

	this->ProcessEvent ( pFnToggleCraftingUI, &ToggleCraftingUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse._useKey
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Target                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            TargetIndex                    ( CPF_Parm | CPF_OutParm )

bool ANowAtlasAvatarPlayerHouse::event_useKey ( struct FString* Target, int* TargetIndex )
{
	static UFunction* pFn_useKey = NULL;

	if ( ! pFn_useKey )
		pFn_useKey = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse._useKey" );

	ANowAtlasAvatarPlayerHouse_event_useKey_Parms _useKey_Parms;

	this->ProcessEvent ( pFn_useKey, &_useKey_Parms, NULL );

	if ( Target )
		memcpy ( Target, &_useKey_Parms.Target, 0xC );

	if ( TargetIndex )
		*TargetIndex = _useKey_Parms.TargetIndex;

	return _useKey_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse._sendMessageToPlayer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 messsage                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerHouse::event_sendMessageToPlayer ( struct FString messsage )
{
	static UFunction* pFn_sendMessageToPlayer = NULL;

	if ( ! pFn_sendMessageToPlayer )
		pFn_sendMessageToPlayer = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse._sendMessageToPlayer" );

	ANowAtlasAvatarPlayerHouse_event_sendMessageToPlayer_Parms _sendMessageToPlayer_Parms;
	memcpy ( &_sendMessageToPlayer_Parms.messsage, &messsage, 0xC );

	this->ProcessEvent ( pFn_sendMessageToPlayer, &_sendMessageToPlayer_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setDoorMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )
// int                            _nrOfDoors                     ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setDoorMeshes ( int _houseType, int _tier, int _nrOfDoors )
{
	static UFunction* pFnsetDoorMeshes = NULL;

	if ( ! pFnsetDoorMeshes )
		pFnsetDoorMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setDoorMeshes" );

	ANowAtlasAvatarPlayerHouse_execsetDoorMeshes_Parms setDoorMeshes_Parms;
	setDoorMeshes_Parms._houseType = _houseType;
	setDoorMeshes_Parms._tier = _tier;
	setDoorMeshes_Parms._nrOfDoors = _nrOfDoors;

	this->ProcessEvent ( pFnsetDoorMeshes, &setDoorMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setStairsMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )
// int                            _nrOfStairs                    ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setStairsMeshes ( int _houseType, int _tier, int _nrOfStairs )
{
	static UFunction* pFnsetStairsMeshes = NULL;

	if ( ! pFnsetStairsMeshes )
		pFnsetStairsMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setStairsMeshes" );

	ANowAtlasAvatarPlayerHouse_execsetStairsMeshes_Parms setStairsMeshes_Parms;
	setStairsMeshes_Parms._houseType = _houseType;
	setStairsMeshes_Parms._tier = _tier;
	setStairsMeshes_Parms._nrOfStairs = _nrOfStairs;

	this->ProcessEvent ( pFnsetStairsMeshes, &setStairsMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setChestMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setChestMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetChestMesh = NULL;

	if ( ! pFnsetChestMesh )
		pFnsetChestMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setChestMesh" );

	ANowAtlasAvatarPlayerHouse_execsetChestMesh_Parms setChestMesh_Parms;
	setChestMesh_Parms._houseType = _houseType;
	setChestMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetChestMesh, &setChestMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setSignMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setSignMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetSignMesh = NULL;

	if ( ! pFnsetSignMesh )
		pFnsetSignMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setSignMesh" );

	ANowAtlasAvatarPlayerHouse_execsetSignMesh_Parms setSignMesh_Parms;
	setSignMesh_Parms._houseType = _houseType;
	setSignMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetSignMesh, &setSignMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isPlayersInRange
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Distance                       ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouse::eventisPlayersInRange ( float Distance )
{
	static UFunction* pFnisPlayersInRange = NULL;

	if ( ! pFnisPlayersInRange )
		pFnisPlayersInRange = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.isPlayersInRange" );

	ANowAtlasAvatarPlayerHouse_eventisPlayersInRange_Parms isPlayersInRange_Parms;
	isPlayersInRange_Parms.Distance = Distance;

	this->ProcessEvent ( pFnisPlayersInRange, &isPlayersInRange_Parms, NULL );

	return isPlayersInRange_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setHouseVolumeMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setHouseVolumeMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseVolumeMesh = NULL;

	if ( ! pFnsetHouseVolumeMesh )
		pFnsetHouseVolumeMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setHouseVolumeMesh" );

	ANowAtlasAvatarPlayerHouse_execsetHouseVolumeMesh_Parms setHouseVolumeMesh_Parms;
	setHouseVolumeMesh_Parms._houseType = _houseType;
	setHouseVolumeMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseVolumeMesh, &setHouseVolumeMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse._setModuleMeshes
// [0x00020002] 
// Parameters infos:
// int                            N                              ( CPF_Parm )
// struct FString                 houseType                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            Tier                           ( CPF_Parm )
// int                            moduleType                     ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::_setModuleMeshes ( int N, struct FString houseType, int Tier, int moduleType )
{
	static UFunction* pFn_setModuleMeshes = NULL;

	if ( ! pFn_setModuleMeshes )
		pFn_setModuleMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse._setModuleMeshes" );

	ANowAtlasAvatarPlayerHouse_exec_setModuleMeshes_Parms _setModuleMeshes_Parms;
	_setModuleMeshes_Parms.N = N;
	memcpy ( &_setModuleMeshes_Parms.houseType, &houseType, 0xC );
	_setModuleMeshes_Parms.Tier = Tier;
	_setModuleMeshes_Parms.moduleType = moduleType;

	this->ProcessEvent ( pFn_setModuleMeshes, &_setModuleMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setModuleStairs
// [0x00020000] 
// Parameters infos:
// int                            N                              ( CPF_Parm )
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )
// int                            _nrOfStairs                    ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setModuleStairs ( int N, int _houseType, int _tier, int _nrOfStairs )
{
	static UFunction* pFnsetModuleStairs = NULL;

	if ( ! pFnsetModuleStairs )
		pFnsetModuleStairs = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setModuleStairs" );

	ANowAtlasAvatarPlayerHouse_execsetModuleStairs_Parms setModuleStairs_Parms;
	setModuleStairs_Parms.N = N;
	setModuleStairs_Parms._houseType = _houseType;
	setModuleStairs_Parms._tier = _tier;
	setModuleStairs_Parms._nrOfStairs = _nrOfStairs;

	this->ProcessEvent ( pFnsetModuleStairs, &setModuleStairs_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setModuleDoors
// [0x00020000] 
// Parameters infos:
// int                            N                              ( CPF_Parm )
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )
// int                            _nrOfDoors                     ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setModuleDoors ( int N, int _houseType, int _tier, int _nrOfDoors )
{
	static UFunction* pFnsetModuleDoors = NULL;

	if ( ! pFnsetModuleDoors )
		pFnsetModuleDoors = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setModuleDoors" );

	ANowAtlasAvatarPlayerHouse_execsetModuleDoors_Parms setModuleDoors_Parms;
	setModuleDoors_Parms.N = N;
	setModuleDoors_Parms._houseType = _houseType;
	setModuleDoors_Parms._tier = _tier;
	setModuleDoors_Parms._nrOfDoors = _nrOfDoors;

	this->ProcessEvent ( pFnsetModuleDoors, &setModuleDoors_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setModuleMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setModuleMeshes ( int _houseType, int _tier )
{
	static UFunction* pFnsetModuleMeshes = NULL;

	if ( ! pFnsetModuleMeshes )
		pFnsetModuleMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setModuleMeshes" );

	ANowAtlasAvatarPlayerHouse_execsetModuleMeshes_Parms setModuleMeshes_Parms;
	setModuleMeshes_Parms._houseType = _houseType;
	setModuleMeshes_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetModuleMeshes, &setModuleMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.DoHouseTrade
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::eventDoHouseTrade ( )
{
	static UFunction* pFnDoHouseTrade = NULL;

	if ( ! pFnDoHouseTrade )
		pFnDoHouseTrade = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.DoHouseTrade" );

	ANowAtlasAvatarPlayerHouse_eventDoHouseTrade_Parms DoHouseTrade_Parms;

	this->ProcessEvent ( pFnDoHouseTrade, &DoHouseTrade_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setHouseMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setHouseMeshes ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseMeshes = NULL;

	if ( ! pFnsetHouseMeshes )
		pFnsetHouseMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setHouseMeshes" );

	ANowAtlasAvatarPlayerHouse_execsetHouseMeshes_Parms setHouseMeshes_Parms;
	setHouseMeshes_Parms._houseType = _houseType;
	setHouseMeshes_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseMeshes, &setHouseMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.RemoveHouseMeshes
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::RemoveHouseMeshes ( )
{
	static UFunction* pFnRemoveHouseMeshes = NULL;

	if ( ! pFnRemoveHouseMeshes )
		pFnRemoveHouseMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.RemoveHouseMeshes" );

	ANowAtlasAvatarPlayerHouse_execRemoveHouseMeshes_Parms RemoveHouseMeshes_Parms;

	this->ProcessEvent ( pFnRemoveHouseMeshes, &RemoveHouseMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setHouseProps
// [0x00020000] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setHouseProps ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseProps = NULL;

	if ( ! pFnsetHouseProps )
		pFnsetHouseProps = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setHouseProps" );

	ANowAtlasAvatarPlayerHouse_execsetHouseProps_Parms setHouseProps_Parms;
	setHouseProps_Parms._houseType = _houseType;
	setHouseProps_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseProps, &setHouseProps_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setDemolishedMesh
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setDemolishedMesh ( )
{
	static UFunction* pFnsetDemolishedMesh = NULL;

	if ( ! pFnsetDemolishedMesh )
		pFnsetDemolishedMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setDemolishedMesh" );

	ANowAtlasAvatarPlayerHouse_execsetDemolishedMesh_Parms setDemolishedMesh_Parms;

	this->ProcessEvent ( pFnsetDemolishedMesh, &setDemolishedMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.playHouseDestruction
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::playHouseDestruction ( )
{
	static UFunction* pFnplayHouseDestruction = NULL;

	if ( ! pFnplayHouseDestruction )
		pFnplayHouseDestruction = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.playHouseDestruction" );

	ANowAtlasAvatarPlayerHouse_execplayHouseDestruction_Parms playHouseDestruction_Parms;

	this->ProcessEvent ( pFnplayHouseDestruction, &playHouseDestruction_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setGuildStoneMesh
// [0x00020002] 
// Parameters infos:
// int                            houseTier                      ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::setGuildStoneMesh ( int houseTier )
{
	static UFunction* pFnsetGuildStoneMesh = NULL;

	if ( ! pFnsetGuildStoneMesh )
		pFnsetGuildStoneMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setGuildStoneMesh" );

	ANowAtlasAvatarPlayerHouse_execsetGuildStoneMesh_Parms setGuildStoneMesh_Parms;
	setGuildStoneMesh_Parms.houseTier = houseTier;

	this->ProcessEvent ( pFnsetGuildStoneMesh, &setGuildStoneMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse._getHouseMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::event_getHouseMesh ( )
{
	static UFunction* pFn_getHouseMesh = NULL;

	if ( ! pFn_getHouseMesh )
		pFn_getHouseMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse._getHouseMesh" );

	ANowAtlasAvatarPlayerHouse_event_getHouseMesh_Parms _getHouseMesh_Parms;

	this->ProcessEvent ( pFn_getHouseMesh, &_getHouseMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.sendMessageToClient
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerHouse::eventsendMessageToClient ( struct FString Message )
{
	static UFunction* pFnsendMessageToClient = NULL;

	if ( ! pFnsendMessageToClient )
		pFnsendMessageToClient = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.sendMessageToClient" );

	ANowAtlasAvatarPlayerHouse_eventsendMessageToClient_Parms sendMessageToClient_Parms;
	memcpy ( &sendMessageToClient_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnsendMessageToClient, &sendMessageToClient_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerHouseOwner
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::eventisPlayerHouseOwner ( )
{
	static UFunction* pFnisPlayerHouseOwner = NULL;

	if ( ! pFnisPlayerHouseOwner )
		pFnisPlayerHouseOwner = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerHouseOwner" );

	ANowAtlasAvatarPlayerHouse_eventisPlayerHouseOwner_Parms isPlayerHouseOwner_Parms;

	this->ProcessEvent ( pFnisPlayerHouseOwner, &isPlayerHouseOwner_Parms, NULL );

	return isPlayerHouseOwner_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.SpawnHitFx
// [0x00024800] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// unsigned long                  ClientFeedBack                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIgnoreParticles               ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarPlayerHouse::eventSpawnHitFx ( struct FVector HitLocation, unsigned long ClientFeedBack, unsigned long bIgnoreParticles )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.SpawnHitFx" );

	ANowAtlasAvatarPlayerHouse_eventSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.HitLocation, &HitLocation, 0xC );
	SpawnHitFx_Parms.ClientFeedBack = ClientFeedBack;
	SpawnHitFx_Parms.bIgnoreParticles = bIgnoreParticles;

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setModWorkBench
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 StaticMesh                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 module                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            mod                            ( CPF_Parm )
// struct FString                 workBenchType                  ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerHouse::eventsetModWorkBench ( struct FString StaticMesh, struct FString module, int mod, struct FString workBenchType )
{
	static UFunction* pFnsetModWorkBench = NULL;

	if ( ! pFnsetModWorkBench )
		pFnsetModWorkBench = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setModWorkBench" );

	ANowAtlasAvatarPlayerHouse_eventsetModWorkBench_Parms setModWorkBench_Parms;
	memcpy ( &setModWorkBench_Parms.StaticMesh, &StaticMesh, 0xC );
	memcpy ( &setModWorkBench_Parms.module, &module, 0xC );
	setModWorkBench_Parms.mod = mod;
	memcpy ( &setModWorkBench_Parms.workBenchType, &workBenchType, 0xC );

	this->ProcessEvent ( pFnsetModWorkBench, &setModWorkBench_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.clearWorkBench
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            module                         ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::eventclearWorkBench ( int module )
{
	static UFunction* pFnclearWorkBench = NULL;

	if ( ! pFnclearWorkBench )
		pFnclearWorkBench = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.clearWorkBench" );

	ANowAtlasAvatarPlayerHouse_eventclearWorkBench_Parms clearWorkBench_Parms;
	clearWorkBench_Parms.module = module;

	this->ProcessEvent ( pFnclearWorkBench, &clearWorkBench_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerInDoor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::eventisPlayerInDoor ( )
{
	static UFunction* pFnisPlayerInDoor = NULL;

	if ( ! pFnisPlayerInDoor )
		pFnisPlayerInDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerInDoor" );

	ANowAtlasAvatarPlayerHouse_eventisPlayerInDoor_Parms isPlayerInDoor_Parms;

	this->ProcessEvent ( pFnisPlayerInDoor, &isPlayerInDoor_Parms, NULL );

	return isPlayerInDoor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetGuildTaxName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::GetGuildTaxName ( )
{
	static UFunction* pFnGetGuildTaxName = NULL;

	if ( ! pFnGetGuildTaxName )
		pFnGetGuildTaxName = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetGuildTaxName" );

	ANowAtlasAvatarPlayerHouse_execGetGuildTaxName_Parms GetGuildTaxName_Parms;

	pFnGetGuildTaxName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuildTaxName, &GetGuildTaxName_Parms, NULL );

	pFnGetGuildTaxName->FunctionFlags |= 0x400;

	return GetGuildTaxName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetGuildTax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetGuildTax ( )
{
	static UFunction* pFnGetGuildTax = NULL;

	if ( ! pFnGetGuildTax )
		pFnGetGuildTax = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetGuildTax" );

	ANowAtlasAvatarPlayerHouse_execGetGuildTax_Parms GetGuildTax_Parms;

	pFnGetGuildTax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuildTax, &GetGuildTax_Parms, NULL );

	pFnGetGuildTax->FunctionFlags |= 0x400;

	return GetGuildTax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.IsMyHouse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::IsMyHouse ( )
{
	static UFunction* pFnIsMyHouse = NULL;

	if ( ! pFnIsMyHouse )
		pFnIsMyHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.IsMyHouse" );

	ANowAtlasAvatarPlayerHouse_execIsMyHouse_Parms IsMyHouse_Parms;

	pFnIsMyHouse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsMyHouse, &IsMyHouse_Parms, NULL );

	pFnIsMyHouse->FunctionFlags |= 0x400;

	return IsMyHouse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetHealthMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetHealthMax ( )
{
	static UFunction* pFnGetHealthMax = NULL;

	if ( ! pFnGetHealthMax )
		pFnGetHealthMax = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetHealthMax" );

	ANowAtlasAvatarPlayerHouse_execGetHealthMax_Parms GetHealthMax_Parms;

	pFnGetHealthMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealthMax, &GetHealthMax_Parms, NULL );

	pFnGetHealthMax->FunctionFlags |= 0x400;

	return GetHealthMax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetHealth ( )
{
	static UFunction* pFnGetHealth = NULL;

	if ( ! pFnGetHealth )
		pFnGetHealth = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetHealth" );

	ANowAtlasAvatarPlayerHouse_execGetHealth_Parms GetHealth_Parms;

	pFnGetHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealth, &GetHealth_Parms, NULL );

	pFnGetHealth->FunctionFlags |= 0x400;

	return GetHealth_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetMaxPayment
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetMaxPayment ( )
{
	static UFunction* pFnGetMaxPayment = NULL;

	if ( ! pFnGetMaxPayment )
		pFnGetMaxPayment = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetMaxPayment" );

	ANowAtlasAvatarPlayerHouse_execGetMaxPayment_Parms GetMaxPayment_Parms;

	pFnGetMaxPayment->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxPayment, &GetMaxPayment_Parms, NULL );

	pFnGetMaxPayment->FunctionFlags |= 0x400;

	return GetMaxPayment_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetUpkeepPaidTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetUpkeepPaidTime ( )
{
	static UFunction* pFnGetUpkeepPaidTime = NULL;

	if ( ! pFnGetUpkeepPaidTime )
		pFnGetUpkeepPaidTime = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetUpkeepPaidTime" );

	ANowAtlasAvatarPlayerHouse_execGetUpkeepPaidTime_Parms GetUpkeepPaidTime_Parms;

	pFnGetUpkeepPaidTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUpkeepPaidTime, &GetUpkeepPaidTime_Parms, NULL );

	pFnGetUpkeepPaidTime->FunctionFlags |= 0x400;

	return GetUpkeepPaidTime_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetUpkeepPaid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetUpkeepPaid ( )
{
	static UFunction* pFnGetUpkeepPaid = NULL;

	if ( ! pFnGetUpkeepPaid )
		pFnGetUpkeepPaid = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetUpkeepPaid" );

	ANowAtlasAvatarPlayerHouse_execGetUpkeepPaid_Parms GetUpkeepPaid_Parms;

	pFnGetUpkeepPaid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUpkeepPaid, &GetUpkeepPaid_Parms, NULL );

	pFnGetUpkeepPaid->FunctionFlags |= 0x400;

	return GetUpkeepPaid_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetUpkeep
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetUpkeep ( )
{
	static UFunction* pFnGetUpkeep = NULL;

	if ( ! pFnGetUpkeep )
		pFnGetUpkeep = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetUpkeep" );

	ANowAtlasAvatarPlayerHouse_execGetUpkeep_Parms GetUpkeep_Parms;

	pFnGetUpkeep->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUpkeep, &GetUpkeep_Parms, NULL );

	pFnGetUpkeep->FunctionFlags |= 0x400;

	return GetUpkeep_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetHouseID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::GetHouseID ( )
{
	static UFunction* pFnGetHouseID = NULL;

	if ( ! pFnGetHouseID )
		pFnGetHouseID = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetHouseID" );

	ANowAtlasAvatarPlayerHouse_execGetHouseID_Parms GetHouseID_Parms;

	pFnGetHouseID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHouseID, &GetHouseID_Parms, NULL );

	pFnGetHouseID->FunctionFlags |= 0x400;

	return GetHouseID_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetCollisionName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::GetCollisionName ( )
{
	static UFunction* pFnGetCollisionName = NULL;

	if ( ! pFnGetCollisionName )
		pFnGetCollisionName = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetCollisionName" );

	ANowAtlasAvatarPlayerHouse_execGetCollisionName_Parms GetCollisionName_Parms;

	pFnGetCollisionName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCollisionName, &GetCollisionName_Parms, NULL );

	pFnGetCollisionName->FunctionFlags |= 0x400;

	return GetCollisionName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isDepositSharedWithGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::isDepositSharedWithGuild ( )
{
	static UFunction* pFnisDepositSharedWithGuild = NULL;

	if ( ! pFnisDepositSharedWithGuild )
		pFnisDepositSharedWithGuild = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.isDepositSharedWithGuild" );

	ANowAtlasAvatarPlayerHouse_execisDepositSharedWithGuild_Parms isDepositSharedWithGuild_Parms;

	pFnisDepositSharedWithGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisDepositSharedWithGuild, &isDepositSharedWithGuild_Parms, NULL );

	pFnisDepositSharedWithGuild->FunctionFlags |= 0x400;

	return isDepositSharedWithGuild_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHouseTax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::getHouseTax ( )
{
	static UFunction* pFngetHouseTax = NULL;

	if ( ! pFngetHouseTax )
		pFngetHouseTax = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getHouseTax" );

	ANowAtlasAvatarPlayerHouse_execgetHouseTax_Parms getHouseTax_Parms;

	pFngetHouseTax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseTax, &getHouseTax_Parms, NULL );

	pFngetHouseTax->FunctionFlags |= 0x400;

	return getHouseTax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getSupportGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::getSupportGuild ( )
{
	static UFunction* pFngetSupportGuild = NULL;

	if ( ! pFngetSupportGuild )
		pFngetSupportGuild = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getSupportGuild" );

	ANowAtlasAvatarPlayerHouse_execgetSupportGuild_Parms getSupportGuild_Parms;

	pFngetSupportGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetSupportGuild, &getSupportGuild_Parms, NULL );

	pFngetSupportGuild->FunctionFlags |= 0x400;

	return getSupportGuild_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::getGuild ( )
{
	static UFunction* pFngetGuild = NULL;

	if ( ! pFngetGuild )
		pFngetGuild = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getGuild" );

	ANowAtlasAvatarPlayerHouse_execgetGuild_Parms getGuild_Parms;

	pFngetGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetGuild, &getGuild_Parms, NULL );

	pFngetGuild->FunctionFlags |= 0x400;

	return getGuild_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.hasVendor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::hasVendor ( )
{
	static UFunction* pFnhasVendor = NULL;

	if ( ! pFnhasVendor )
		pFnhasVendor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.hasVendor" );

	ANowAtlasAvatarPlayerHouse_exechasVendor_Parms hasVendor_Parms;

	pFnhasVendor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnhasVendor, &hasVendor_Parms, NULL );

	pFnhasVendor->FunctionFlags |= 0x400;

	return hasVendor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.SendHouseCommand
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Cmd                            ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerHouse::SendHouseCommand ( struct FString Cmd )
{
	static UFunction* pFnSendHouseCommand = NULL;

	if ( ! pFnSendHouseCommand )
		pFnSendHouseCommand = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.SendHouseCommand" );

	ANowAtlasAvatarPlayerHouse_execSendHouseCommand_Parms SendHouseCommand_Parms;
	memcpy ( &SendHouseCommand_Parms.Cmd, &Cmd, 0xC );

	pFnSendHouseCommand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendHouseCommand, &SendHouseCommand_Parms, NULL );

	pFnSendHouseCommand->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getPlanSetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPlayerHouse_ContentInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPlayerHouse_ContentInfo* ANowAtlasAvatarPlayerHouse::getPlanSetContentInfo ( )
{
	static UFunction* pFngetPlanSetContentInfo = NULL;

	if ( ! pFngetPlanSetContentInfo )
		pFngetPlanSetContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getPlanSetContentInfo" );

	ANowAtlasAvatarPlayerHouse_execgetPlanSetContentInfo_Parms getPlanSetContentInfo_Parms;

	pFngetPlanSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetPlanSetContentInfo, &getPlanSetContentInfo_Parms, NULL );

	pFngetPlanSetContentInfo->FunctionFlags |= 0x400;

	return getPlanSetContentInfo_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPlayerHouse_ContentInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPlayerHouse_ContentInfo* ANowAtlasAvatarPlayerHouse::getContentInfo ( )
{
	static UFunction* pFngetContentInfo = NULL;

	if ( ! pFngetContentInfo )
		pFngetContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getContentInfo" );

	ANowAtlasAvatarPlayerHouse_execgetContentInfo_Parms getContentInfo_Parms;

	pFngetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetContentInfo, &getContentInfo_Parms, NULL );

	pFngetContentInfo->FunctionFlags |= 0x400;

	return getContentInfo_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.setModuleWorkBenches
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::setModuleWorkBenches ( )
{
	static UFunction* pFnsetModuleWorkBenches = NULL;

	if ( ! pFnsetModuleWorkBenches )
		pFnsetModuleWorkBenches = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.setModuleWorkBenches" );

	ANowAtlasAvatarPlayerHouse_execsetModuleWorkBenches_Parms setModuleWorkBenches_Parms;

	pFnsetModuleWorkBenches->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnsetModuleWorkBenches, &setModuleWorkBenches_Parms, NULL );

	pFnsetModuleWorkBenches->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHouseParamInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ParamName                      ( CPF_Parm | CPF_NeedCtorLink )

int ANowAtlasAvatarPlayerHouse::getHouseParamInt ( struct FString ParamName )
{
	static UFunction* pFngetHouseParamInt = NULL;

	if ( ! pFngetHouseParamInt )
		pFngetHouseParamInt = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getHouseParamInt" );

	ANowAtlasAvatarPlayerHouse_execgetHouseParamInt_Parms getHouseParamInt_Parms;
	memcpy ( &getHouseParamInt_Parms.ParamName, &ParamName, 0xC );

	pFngetHouseParamInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseParamInt, &getHouseParamInt_Parms, NULL );

	pFngetHouseParamInt->FunctionFlags |= 0x400;

	return getHouseParamInt_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHouseParamStr
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 ParamName                      ( CPF_Parm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::getHouseParamStr ( struct FString ParamName )
{
	static UFunction* pFngetHouseParamStr = NULL;

	if ( ! pFngetHouseParamStr )
		pFngetHouseParamStr = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getHouseParamStr" );

	ANowAtlasAvatarPlayerHouse_execgetHouseParamStr_Parms getHouseParamStr_Parms;
	memcpy ( &getHouseParamStr_Parms.ParamName, &ParamName, 0xC );

	pFngetHouseParamStr->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseParamStr, &getHouseParamStr_Parms, NULL );

	pFngetHouseParamStr->FunctionFlags |= 0x400;

	return getHouseParamStr_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHouseUpKeep
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::getHouseUpKeep ( )
{
	static UFunction* pFngetHouseUpKeep = NULL;

	if ( ! pFngetHouseUpKeep )
		pFngetHouseUpKeep = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getHouseUpKeep" );

	ANowAtlasAvatarPlayerHouse_execgetHouseUpKeep_Parms getHouseUpKeep_Parms;

	pFngetHouseUpKeep->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseUpKeep, &getHouseUpKeep_Parms, NULL );

	pFngetHouseUpKeep->FunctionFlags |= 0x400;

	return getHouseUpKeep_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerMemberOfHouseGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::isPlayerMemberOfHouseGuild ( )
{
	static UFunction* pFnisPlayerMemberOfHouseGuild = NULL;

	if ( ! pFnisPlayerMemberOfHouseGuild )
		pFnisPlayerMemberOfHouseGuild = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerMemberOfHouseGuild" );

	ANowAtlasAvatarPlayerHouse_execisPlayerMemberOfHouseGuild_Parms isPlayerMemberOfHouseGuild_Parms;

	pFnisPlayerMemberOfHouseGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisPlayerMemberOfHouseGuild, &isPlayerMemberOfHouseGuild_Parms, NULL );

	pFnisPlayerMemberOfHouseGuild->FunctionFlags |= 0x400;

	return isPlayerMemberOfHouseGuild_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerGuildMember
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::isPlayerGuildMember ( )
{
	static UFunction* pFnisPlayerGuildMember = NULL;

	if ( ! pFnisPlayerGuildMember )
		pFnisPlayerGuildMember = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerGuildMember" );

	ANowAtlasAvatarPlayerHouse_execisPlayerGuildMember_Parms isPlayerGuildMember_Parms;

	pFnisPlayerGuildMember->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisPlayerGuildMember, &isPlayerGuildMember_Parms, NULL );

	pFnisPlayerGuildMember->FunctionFlags |= 0x400;

	return isPlayerGuildMember_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerInGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::isPlayerInGuild ( )
{
	static UFunction* pFnisPlayerInGuild = NULL;

	if ( ! pFnisPlayerInGuild )
		pFnisPlayerInGuild = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.isPlayerInGuild" );

	ANowAtlasAvatarPlayerHouse_execisPlayerInGuild_Parms isPlayerInGuild_Parms;

	pFnisPlayerInGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisPlayerInGuild, &isPlayerInGuild_Parms, NULL );

	pFnisPlayerInGuild->FunctionFlags |= 0x400;

	return isPlayerInGuild_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHitPoints
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerHouse::getHitPoints ( )
{
	static UFunction* pFngetHitPoints = NULL;

	if ( ! pFngetHitPoints )
		pFngetHitPoints = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getHitPoints" );

	ANowAtlasAvatarPlayerHouse_execgetHitPoints_Parms getHitPoints_Parms;

	pFngetHitPoints->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHitPoints, &getHitPoints_Parms, NULL );

	pFngetHitPoints->FunctionFlags |= 0x400;

	return getHitPoints_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isHouseAtMaxHP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::isHouseAtMaxHP ( )
{
	static UFunction* pFnisHouseAtMaxHP = NULL;

	if ( ! pFnisHouseAtMaxHP )
		pFnisHouseAtMaxHP = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.isHouseAtMaxHP" );

	ANowAtlasAvatarPlayerHouse_execisHouseAtMaxHP_Parms isHouseAtMaxHP_Parms;

	pFnisHouseAtMaxHP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisHouseAtMaxHP, &isHouseAtMaxHP_Parms, NULL );

	pFnisHouseAtMaxHP->FunctionFlags |= 0x400;

	return isHouseAtMaxHP_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isChestClosed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::isChestClosed ( )
{
	static UFunction* pFnisChestClosed = NULL;

	if ( ! pFnisChestClosed )
		pFnisChestClosed = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.isChestClosed" );

	ANowAtlasAvatarPlayerHouse_execisChestClosed_Parms isChestClosed_Parms;

	pFnisChestClosed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisChestClosed, &isChestClosed_Parms, NULL );

	pFnisChestClosed->FunctionFlags |= 0x400;

	return isChestClosed_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getItemNameFromGuid
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       constructionMaterials          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerHouse::getItemNameFromGuid ( TArray< struct FString >* constructionMaterials )
{
	static UFunction* pFngetItemNameFromGuid = NULL;

	if ( ! pFngetItemNameFromGuid )
		pFngetItemNameFromGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getItemNameFromGuid" );

	ANowAtlasAvatarPlayerHouse_execgetItemNameFromGuid_Parms getItemNameFromGuid_Parms;

	pFngetItemNameFromGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetItemNameFromGuid, &getItemNameFromGuid_Parms, NULL );

	pFngetItemNameFromGuid->FunctionFlags |= 0x400;

	if ( constructionMaterials )
		memcpy ( constructionMaterials, &getItemNameFromGuid_Parms.constructionMaterials, 0xC );
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getResourceFromName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Resource                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            Resources                      ( CPF_Parm | CPF_OutParm )
// int                            Max                            ( CPF_Parm | CPF_OutParm )

void ANowAtlasAvatarPlayerHouse::getResourceFromName ( struct FString Resource, int* Resources, int* Max )
{
	static UFunction* pFngetResourceFromName = NULL;

	if ( ! pFngetResourceFromName )
		pFngetResourceFromName = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getResourceFromName" );

	ANowAtlasAvatarPlayerHouse_execgetResourceFromName_Parms getResourceFromName_Parms;
	memcpy ( &getResourceFromName_Parms.Resource, &Resource, 0xC );

	pFngetResourceFromName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetResourceFromName, &getResourceFromName_Parms, NULL );

	pFngetResourceFromName->FunctionFlags |= 0x400;

	if ( Resources )
		*Resources = getResourceFromName_Parms.Resources;

	if ( Max )
		*Max = getResourceFromName_Parms.Max;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getLeatherResources
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Resources                      ( CPF_Parm | CPF_OutParm )
// int                            Max                            ( CPF_Parm | CPF_OutParm )

int ANowAtlasAvatarPlayerHouse::getLeatherResources ( int* Resources, int* Max )
{
	static UFunction* pFngetLeatherResources = NULL;

	if ( ! pFngetLeatherResources )
		pFngetLeatherResources = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getLeatherResources" );

	ANowAtlasAvatarPlayerHouse_execgetLeatherResources_Parms getLeatherResources_Parms;

	pFngetLeatherResources->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetLeatherResources, &getLeatherResources_Parms, NULL );

	pFngetLeatherResources->FunctionFlags |= 0x400;

	if ( Resources )
		*Resources = getLeatherResources_Parms.Resources;

	if ( Max )
		*Max = getLeatherResources_Parms.Max;

	return getLeatherResources_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getStoneResources
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Resources                      ( CPF_Parm | CPF_OutParm )
// int                            Max                            ( CPF_Parm | CPF_OutParm )

int ANowAtlasAvatarPlayerHouse::getStoneResources ( int* Resources, int* Max )
{
	static UFunction* pFngetStoneResources = NULL;

	if ( ! pFngetStoneResources )
		pFngetStoneResources = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getStoneResources" );

	ANowAtlasAvatarPlayerHouse_execgetStoneResources_Parms getStoneResources_Parms;

	pFngetStoneResources->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetStoneResources, &getStoneResources_Parms, NULL );

	pFngetStoneResources->FunctionFlags |= 0x400;

	if ( Resources )
		*Resources = getStoneResources_Parms.Resources;

	if ( Max )
		*Max = getStoneResources_Parms.Max;

	return getStoneResources_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getWoodResources
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Resources                      ( CPF_Parm | CPF_OutParm )
// int                            Max                            ( CPF_Parm | CPF_OutParm )
// TArray< struct FString >       constructionMaterials          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

int ANowAtlasAvatarPlayerHouse::getWoodResources ( int* Resources, int* Max, TArray< struct FString >* constructionMaterials )
{
	static UFunction* pFngetWoodResources = NULL;

	if ( ! pFngetWoodResources )
		pFngetWoodResources = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getWoodResources" );

	ANowAtlasAvatarPlayerHouse_execgetWoodResources_Parms getWoodResources_Parms;

	pFngetWoodResources->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetWoodResources, &getWoodResources_Parms, NULL );

	pFngetWoodResources->FunctionFlags |= 0x400;

	if ( Resources )
		*Resources = getWoodResources_Parms.Resources;

	if ( Max )
		*Max = getWoodResources_Parms.Max;

	if ( constructionMaterials )
		memcpy ( constructionMaterials, &getWoodResources_Parms.constructionMaterials, 0xC );

	return getWoodResources_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetBankContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// int                            itemQuantity                   ( CPF_Parm | CPF_OutParm )

void ANowAtlasAvatarPlayerHouse::GetBankContentInfo ( int iSlot, class UContentInfo** Info, int* itemQuantity )
{
	static UFunction* pFnGetBankContentInfo = NULL;

	if ( ! pFnGetBankContentInfo )
		pFnGetBankContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetBankContentInfo" );

	ANowAtlasAvatarPlayerHouse_execGetBankContentInfo_Parms GetBankContentInfo_Parms;
	GetBankContentInfo_Parms.iSlot = iSlot;

	pFnGetBankContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBankContentInfo, &GetBankContentInfo_Parms, NULL );

	pFnGetBankContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetBankContentInfo_Parms.Info;

	if ( itemQuantity )
		*itemQuantity = GetBankContentInfo_Parms.itemQuantity;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHouseMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::getHouseMesh ( )
{
	static UFunction* pFngetHouseMesh = NULL;

	if ( ! pFngetHouseMesh )
		pFngetHouseMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getHouseMesh" );

	ANowAtlasAvatarPlayerHouse_execgetHouseMesh_Parms getHouseMesh_Parms;

	pFngetHouseMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseMesh, &getHouseMesh_Parms, NULL );

	pFngetHouseMesh->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.startHouseConstruction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarPlayerHouse::startHouseConstruction ( )
{
	static UFunction* pFnstartHouseConstruction = NULL;

	if ( ! pFnstartHouseConstruction )
		pFnstartHouseConstruction = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.startHouseConstruction" );

	ANowAtlasAvatarPlayerHouse_execstartHouseConstruction_Parms startHouseConstruction_Parms;

	pFnstartHouseConstruction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnstartHouseConstruction, &startHouseConstruction_Parms, NULL );

	pFnstartHouseConstruction->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.useKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerHouse::useKey ( struct FString ItemGuid )
{
	static UFunction* pFnuseKey = NULL;

	if ( ! pFnuseKey )
		pFnuseKey = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.useKey" );

	ANowAtlasAvatarPlayerHouse_execuseKey_Parms useKey_Parms;
	memcpy ( &useKey_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnuseKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnuseKey, &useKey_Parms, NULL );

	pFnuseKey->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isDoorLocked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            door                           ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouse::isDoorLocked ( int door )
{
	static UFunction* pFnisDoorLocked = NULL;

	if ( ! pFnisDoorLocked )
		pFnisDoorLocked = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.isDoorLocked" );

	ANowAtlasAvatarPlayerHouse_execisDoorLocked_Parms isDoorLocked_Parms;
	isDoorLocked_Parms.door = door;

	pFnisDoorLocked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisDoorLocked, &isDoorLocked_Parms, NULL );

	pFnisDoorLocked->FunctionFlags |= 0x400;

	return isDoorLocked_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.isDoorOpen
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            door                           ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouse::isDoorOpen ( int door )
{
	static UFunction* pFnisDoorOpen = NULL;

	if ( ! pFnisDoorOpen )
		pFnisDoorOpen = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.isDoorOpen" );

	ANowAtlasAvatarPlayerHouse_execisDoorOpen_Parms isDoorOpen_Parms;
	isDoorOpen_Parms.door = door;

	pFnisDoorOpen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisDoorOpen, &isDoorOpen_Parms, NULL );

	pFnisDoorOpen->FunctionFlags |= 0x400;

	return isDoorOpen_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.getHouseBuildingStatus
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::getHouseBuildingStatus ( )
{
	static UFunction* pFngetHouseBuildingStatus = NULL;

	if ( ! pFngetHouseBuildingStatus )
		pFngetHouseBuildingStatus = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.getHouseBuildingStatus" );

	ANowAtlasAvatarPlayerHouse_execgetHouseBuildingStatus_Parms getHouseBuildingStatus_Parms;

	pFngetHouseBuildingStatus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseBuildingStatus, &getHouseBuildingStatus_Parms, NULL );

	pFngetHouseBuildingStatus->FunctionFlags |= 0x400;

	return getHouseBuildingStatus_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.ToggleDoor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            doorIsOpen                     ( CPF_Parm )
// int                            door                           ( CPF_Parm )

void ANowAtlasAvatarPlayerHouse::ToggleDoor ( int doorIsOpen, int door )
{
	static UFunction* pFnToggleDoor = NULL;

	if ( ! pFnToggleDoor )
		pFnToggleDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.ToggleDoor" );

	ANowAtlasAvatarPlayerHouse_execToggleDoor_Parms ToggleDoor_Parms;
	ToggleDoor_Parms.doorIsOpen = doorIsOpen;
	ToggleDoor_Parms.door = door;

	pFnToggleDoor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleDoor, &ToggleDoor_Parms, NULL );

	pFnToggleDoor->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetOwner
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::GetOwner ( )
{
	static UFunction* pFnGetOwner = NULL;

	if ( ! pFnGetOwner )
		pFnGetOwner = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetOwner" );

	ANowAtlasAvatarPlayerHouse_execGetOwner_Parms GetOwner_Parms;

	pFnGetOwner->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetOwner, &GetOwner_Parms, NULL );

	pFnGetOwner->FunctionFlags |= 0x400;

	return GetOwner_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouse::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.IsTarget" );

	ANowAtlasAvatarPlayerHouse_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarPlayerHouse::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.AtlasUse" );

	ANowAtlasAvatarPlayerHouse_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouse.GetDisplayName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerHouse::GetDisplayName ( )
{
	static UFunction* pFnGetDisplayName = NULL;

	if ( ! pFnGetDisplayName )
		pFnGetDisplayName = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouse.GetDisplayName" );

	ANowAtlasAvatarPlayerHouse_execGetDisplayName_Parms GetDisplayName_Parms;

	pFnGetDisplayName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayName, &GetDisplayName_Parms, NULL );

	pFnGetDisplayName->FunctionFlags |= 0x400;

	return GetDisplayName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.TargetMesh
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerKeep::eventTargetMesh ( )
{
	static UFunction* pFnTargetMesh = NULL;

	if ( ! pFnTargetMesh )
		pFnTargetMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.TargetMesh" );

	ANowAtlasAvatarPlayerKeep_eventTargetMesh_Parms TargetMesh_Parms;

	this->ProcessEvent ( pFnTargetMesh, &TargetMesh_Parms, NULL );

	return TargetMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.importMeshStrings
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::importMeshStrings ( )
{
	static UFunction* pFnimportMeshStrings = NULL;

	if ( ! pFnimportMeshStrings )
		pFnimportMeshStrings = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.importMeshStrings" );

	ANowAtlasAvatarPlayerKeep_execimportMeshStrings_Parms importMeshStrings_Parms;

	this->ProcessEvent ( pFnimportMeshStrings, &importMeshStrings_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setHouseVolumeMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::setHouseVolumeMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseVolumeMesh = NULL;

	if ( ! pFnsetHouseVolumeMesh )
		pFnsetHouseVolumeMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.setHouseVolumeMesh" );

	ANowAtlasAvatarPlayerKeep_execsetHouseVolumeMesh_Parms setHouseVolumeMesh_Parms;
	setHouseVolumeMesh_Parms._houseType = _houseType;
	setHouseVolumeMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseVolumeMesh, &setHouseVolumeMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setGuildStoneMesh
// [0x00020002] 
// Parameters infos:
// int                            houseTier                      ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::setGuildStoneMesh ( int houseTier )
{
	static UFunction* pFnsetGuildStoneMesh = NULL;

	if ( ! pFnsetGuildStoneMesh )
		pFnsetGuildStoneMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.setGuildStoneMesh" );

	ANowAtlasAvatarPlayerKeep_execsetGuildStoneMesh_Parms setGuildStoneMesh_Parms;
	setGuildStoneMesh_Parms.houseTier = houseTier;

	this->ProcessEvent ( pFnsetGuildStoneMesh, &setGuildStoneMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setHouseMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::setHouseMeshes ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseMeshes = NULL;

	if ( ! pFnsetHouseMeshes )
		pFnsetHouseMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.setHouseMeshes" );

	ANowAtlasAvatarPlayerKeep_execsetHouseMeshes_Parms setHouseMeshes_Parms;
	setHouseMeshes_Parms._houseType = _houseType;
	setHouseMeshes_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseMeshes, &setHouseMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.closeDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::closeDoor ( )
{
	static UFunction* pFncloseDoor = NULL;

	if ( ! pFncloseDoor )
		pFncloseDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.closeDoor" );

	ANowAtlasAvatarPlayerKeep_execcloseDoor_Parms closeDoor_Parms;

	this->ProcessEvent ( pFncloseDoor, &closeDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.openDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::openDoor ( )
{
	static UFunction* pFnopenDoor = NULL;

	if ( ! pFnopenDoor )
		pFnopenDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.openDoor" );

	ANowAtlasAvatarPlayerKeep_execopenDoor_Parms openDoor_Parms;

	this->ProcessEvent ( pFnopenDoor, &openDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setDoorMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )
// int                            _nrOfDoors                     ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::setDoorMeshes ( int _houseType, int _tier, int _nrOfDoors )
{
	static UFunction* pFnsetDoorMeshes = NULL;

	if ( ! pFnsetDoorMeshes )
		pFnsetDoorMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.setDoorMeshes" );

	ANowAtlasAvatarPlayerKeep_execsetDoorMeshes_Parms setDoorMeshes_Parms;
	setDoorMeshes_Parms._houseType = _houseType;
	setDoorMeshes_Parms._tier = _tier;
	setDoorMeshes_Parms._nrOfDoors = _nrOfDoors;

	this->ProcessEvent ( pFnsetDoorMeshes, &setDoorMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setChestMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::setChestMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetChestMesh = NULL;

	if ( ! pFnsetChestMesh )
		pFnsetChestMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.setChestMesh" );

	ANowAtlasAvatarPlayerKeep_execsetChestMesh_Parms setChestMesh_Parms;
	setChestMesh_Parms._houseType = _houseType;
	setChestMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetChestMesh, &setChestMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setSignMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::setSignMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetSignMesh = NULL;

	if ( ! pFnsetSignMesh )
		pFnsetSignMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.setSignMesh" );

	ANowAtlasAvatarPlayerKeep_execsetSignMesh_Parms setSignMesh_Parms;
	setSignMesh_Parms._houseType = _houseType;
	setSignMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetSignMesh, &setSignMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.removeWarTable
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::removeWarTable ( )
{
	static UFunction* pFnremoveWarTable = NULL;

	if ( ! pFnremoveWarTable )
		pFnremoveWarTable = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.removeWarTable" );

	ANowAtlasAvatarPlayerKeep_execremoveWarTable_Parms removeWarTable_Parms;

	this->ProcessEvent ( pFnremoveWarTable, &removeWarTable_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.Destroyed
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.Destroyed" );

	ANowAtlasAvatarPlayerKeep_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.RemoveHouseMeshes
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::RemoveHouseMeshes ( )
{
	static UFunction* pFnRemoveHouseMeshes = NULL;

	if ( ! pFnRemoveHouseMeshes )
		pFnRemoveHouseMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.RemoveHouseMeshes" );

	ANowAtlasAvatarPlayerKeep_execRemoveHouseMeshes_Parms RemoveHouseMeshes_Parms;

	this->ProcessEvent ( pFnRemoveHouseMeshes, &RemoveHouseMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setWarTable
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::setWarTable ( )
{
	static UFunction* pFnsetWarTable = NULL;

	if ( ! pFnsetWarTable )
		pFnsetWarTable = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.setWarTable" );

	ANowAtlasAvatarPlayerKeep_execsetWarTable_Parms setWarTable_Parms;

	this->ProcessEvent ( pFnsetWarTable, &setWarTable_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.CreateHouse
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )

void ANowAtlasAvatarPlayerKeep::CreateHouse ( int _houseType )
{
	static UFunction* pFnCreateHouse = NULL;

	if ( ! pFnCreateHouse )
		pFnCreateHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.CreateHouse" );

	ANowAtlasAvatarPlayerKeep_execCreateHouse_Parms CreateHouse_Parms;
	CreateHouse_Parms._houseType = _houseType;

	this->ProcessEvent ( pFnCreateHouse, &CreateHouse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.setGhostMode
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerKeep::setGhostMode ( )
{
	static UFunction* pFnsetGhostMode = NULL;

	if ( ! pFnsetGhostMode )
		pFnsetGhostMode = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.setGhostMode" );

	ANowAtlasAvatarPlayerKeep_execsetGhostMode_Parms setGhostMode_Parms;

	this->ProcessEvent ( pFnsetGhostMode, &setGhostMode_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetLastRoundInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerKeep::GetLastRoundInfo ( )
{
	static UFunction* pFnGetLastRoundInfo = NULL;

	if ( ! pFnGetLastRoundInfo )
		pFnGetLastRoundInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.GetLastRoundInfo" );

	ANowAtlasAvatarPlayerKeep_execGetLastRoundInfo_Parms GetLastRoundInfo_Parms;

	pFnGetLastRoundInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLastRoundInfo, &GetLastRoundInfo_Parms, NULL );

	pFnGetLastRoundInfo->FunctionFlags |= 0x400;

	return GetLastRoundInfo_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetNumberOfNPC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerKeep::GetNumberOfNPC ( )
{
	static UFunction* pFnGetNumberOfNPC = NULL;

	if ( ! pFnGetNumberOfNPC )
		pFnGetNumberOfNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.GetNumberOfNPC" );

	ANowAtlasAvatarPlayerKeep_execGetNumberOfNPC_Parms GetNumberOfNPC_Parms;

	pFnGetNumberOfNPC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumberOfNPC, &GetNumberOfNPC_Parms, NULL );

	pFnGetNumberOfNPC->FunctionFlags |= 0x400;

	return GetNumberOfNPC_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetCPUpkeep
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarPlayerKeep::GetCPUpkeep ( )
{
	static UFunction* pFnGetCPUpkeep = NULL;

	if ( ! pFnGetCPUpkeep )
		pFnGetCPUpkeep = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.GetCPUpkeep" );

	ANowAtlasAvatarPlayerKeep_execGetCPUpkeep_Parms GetCPUpkeep_Parms;

	pFnGetCPUpkeep->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCPUpkeep, &GetCPUpkeep_Parms, NULL );

	pFnGetCPUpkeep->FunctionFlags |= 0x400;

	return GetCPUpkeep_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetPylonGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPlayerKeep::GetPylonGuid ( )
{
	static UFunction* pFnGetPylonGuid = NULL;

	if ( ! pFnGetPylonGuid )
		pFnGetPylonGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.GetPylonGuid" );

	ANowAtlasAvatarPlayerKeep_execGetPylonGuid_Parms GetPylonGuid_Parms;

	pFnGetPylonGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPylonGuid, &GetPylonGuid_Parms, NULL );

	pFnGetPylonGuid->FunctionFlags |= 0x400;

	return GetPylonGuid_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetSlotInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            slotId                         ( CPF_Parm )
// struct FString                 sDisplayName                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool ANowAtlasAvatarPlayerKeep::GetSlotInfo ( int slotId, struct FString* sDisplayName )
{
	static UFunction* pFnGetSlotInfo = NULL;

	if ( ! pFnGetSlotInfo )
		pFnGetSlotInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.GetSlotInfo" );

	ANowAtlasAvatarPlayerKeep_execGetSlotInfo_Parms GetSlotInfo_Parms;
	GetSlotInfo_Parms.slotId = slotId;

	pFnGetSlotInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSlotInfo, &GetSlotInfo_Parms, NULL );

	pFnGetSlotInfo->FunctionFlags |= 0x400;

	if ( sDisplayName )
		memcpy ( sDisplayName, &GetSlotInfo_Parms.sDisplayName, 0xC );

	return GetSlotInfo_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetKeepSlotOffsetPct
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            slotId                         ( CPF_Parm )

struct FVector ANowAtlasAvatarPlayerKeep::GetKeepSlotOffsetPct ( int slotId )
{
	static UFunction* pFnGetKeepSlotOffsetPct = NULL;

	if ( ! pFnGetKeepSlotOffsetPct )
		pFnGetKeepSlotOffsetPct = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.GetKeepSlotOffsetPct" );

	ANowAtlasAvatarPlayerKeep_execGetKeepSlotOffsetPct_Parms GetKeepSlotOffsetPct_Parms;
	GetKeepSlotOffsetPct_Parms.slotId = slotId;

	pFnGetKeepSlotOffsetPct->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetKeepSlotOffsetPct, &GetKeepSlotOffsetPct_Parms, NULL );

	pFnGetKeepSlotOffsetPct->FunctionFlags |= 0x400;

	return GetKeepSlotOffsetPct_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerKeep.GetKeepSlotOffset
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            slotId                         ( CPF_Parm )

struct FVector ANowAtlasAvatarPlayerKeep::GetKeepSlotOffset ( int slotId )
{
	static UFunction* pFnGetKeepSlotOffset = NULL;

	if ( ! pFnGetKeepSlotOffset )
		pFnGetKeepSlotOffset = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerKeep.GetKeepSlotOffset" );

	ANowAtlasAvatarPlayerKeep_execGetKeepSlotOffset_Parms GetKeepSlotOffset_Parms;
	GetKeepSlotOffset_Parms.slotId = slotId;

	pFnGetKeepSlotOffset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetKeepSlotOffset, &GetKeepSlotOffset_Parms, NULL );

	pFnGetKeepSlotOffset->FunctionFlags |= 0x400;

	return GetKeepSlotOffset_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.importMeshStrings
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerPalisadeGate::importMeshStrings ( )
{
	static UFunction* pFnimportMeshStrings = NULL;

	if ( ! pFnimportMeshStrings )
		pFnimportMeshStrings = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerPalisadeGate.importMeshStrings" );

	ANowAtlasAvatarPlayerPalisadeGate_execimportMeshStrings_Parms importMeshStrings_Parms;

	this->ProcessEvent ( pFnimportMeshStrings, &importMeshStrings_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setHouseVolumeMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerPalisadeGate::setHouseVolumeMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseVolumeMesh = NULL;

	if ( ! pFnsetHouseVolumeMesh )
		pFnsetHouseVolumeMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setHouseVolumeMesh" );

	ANowAtlasAvatarPlayerPalisadeGate_execsetHouseVolumeMesh_Parms setHouseVolumeMesh_Parms;
	setHouseVolumeMesh_Parms._houseType = _houseType;
	setHouseVolumeMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseVolumeMesh, &setHouseVolumeMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setHouseMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerPalisadeGate::setHouseMeshes ( int _houseType, int _tier )
{
	static UFunction* pFnsetHouseMeshes = NULL;

	if ( ! pFnsetHouseMeshes )
		pFnsetHouseMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setHouseMeshes" );

	ANowAtlasAvatarPlayerPalisadeGate_execsetHouseMeshes_Parms setHouseMeshes_Parms;
	setHouseMeshes_Parms._houseType = _houseType;
	setHouseMeshes_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetHouseMeshes, &setHouseMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.closeDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerPalisadeGate::closeDoor ( )
{
	static UFunction* pFncloseDoor = NULL;

	if ( ! pFncloseDoor )
		pFncloseDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerPalisadeGate.closeDoor" );

	ANowAtlasAvatarPlayerPalisadeGate_execcloseDoor_Parms closeDoor_Parms;

	this->ProcessEvent ( pFncloseDoor, &closeDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.openDoor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerPalisadeGate::openDoor ( )
{
	static UFunction* pFnopenDoor = NULL;

	if ( ! pFnopenDoor )
		pFnopenDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerPalisadeGate.openDoor" );

	ANowAtlasAvatarPlayerPalisadeGate_execopenDoor_Parms openDoor_Parms;

	this->ProcessEvent ( pFnopenDoor, &openDoor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setDoorMeshes
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )
// int                            _nrOfDoors                     ( CPF_Parm )

void ANowAtlasAvatarPlayerPalisadeGate::setDoorMeshes ( int _houseType, int _tier, int _nrOfDoors )
{
	static UFunction* pFnsetDoorMeshes = NULL;

	if ( ! pFnsetDoorMeshes )
		pFnsetDoorMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setDoorMeshes" );

	ANowAtlasAvatarPlayerPalisadeGate_execsetDoorMeshes_Parms setDoorMeshes_Parms;
	setDoorMeshes_Parms._houseType = _houseType;
	setDoorMeshes_Parms._tier = _tier;
	setDoorMeshes_Parms._nrOfDoors = _nrOfDoors;

	this->ProcessEvent ( pFnsetDoorMeshes, &setDoorMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setChestMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerPalisadeGate::setChestMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetChestMesh = NULL;

	if ( ! pFnsetChestMesh )
		pFnsetChestMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setChestMesh" );

	ANowAtlasAvatarPlayerPalisadeGate_execsetChestMesh_Parms setChestMesh_Parms;
	setChestMesh_Parms._houseType = _houseType;
	setChestMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetChestMesh, &setChestMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setSignMesh
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )
// int                            _tier                          ( CPF_Parm )

void ANowAtlasAvatarPlayerPalisadeGate::setSignMesh ( int _houseType, int _tier )
{
	static UFunction* pFnsetSignMesh = NULL;

	if ( ! pFnsetSignMesh )
		pFnsetSignMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setSignMesh" );

	ANowAtlasAvatarPlayerPalisadeGate_execsetSignMesh_Parms setSignMesh_Parms;
	setSignMesh_Parms._houseType = _houseType;
	setSignMesh_Parms._tier = _tier;

	this->ProcessEvent ( pFnsetSignMesh, &setSignMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.CreateHouse
// [0x00020002] 
// Parameters infos:
// int                            _houseType                     ( CPF_Parm )

void ANowAtlasAvatarPlayerPalisadeGate::CreateHouse ( int _houseType )
{
	static UFunction* pFnCreateHouse = NULL;

	if ( ! pFnCreateHouse )
		pFnCreateHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerPalisadeGate.CreateHouse" );

	ANowAtlasAvatarPlayerPalisadeGate_execCreateHouse_Parms CreateHouse_Parms;
	CreateHouse_Parms._houseType = _houseType;

	this->ProcessEvent ( pFnCreateHouse, &CreateHouse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setGhostMode
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerPalisadeGate::setGhostMode ( )
{
	static UFunction* pFnsetGhostMode = NULL;

	if ( ! pFnsetGhostMode )
		pFnsetGhostMode = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerPalisadeGate.setGhostMode" );

	ANowAtlasAvatarPlayerPalisadeGate_execsetGhostMode_Parms setGhostMode_Parms;

	this->ProcessEvent ( pFnsetGhostMode, &setGhostMode_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.PendingHouseBuildingStatus
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarWorldBridge::PendingHouseBuildingStatus ( )
{
	static UFunction* pFnPendingHouseBuildingStatus = NULL;

	if ( ! pFnPendingHouseBuildingStatus )
		pFnPendingHouseBuildingStatus = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.PendingHouseBuildingStatus" );

	ANowAtlasAvatarWorldBridge_execPendingHouseBuildingStatus_Parms PendingHouseBuildingStatus_Parms;

	this->ProcessEvent ( pFnPendingHouseBuildingStatus, &PendingHouseBuildingStatus_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.initMovePlayersUpFromGround
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarWorldBridge::initMovePlayersUpFromGround ( )
{
	static UFunction* pFninitMovePlayersUpFromGround = NULL;

	if ( ! pFninitMovePlayersUpFromGround )
		pFninitMovePlayersUpFromGround = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.initMovePlayersUpFromGround" );

	ANowAtlasAvatarWorldBridge_execinitMovePlayersUpFromGround_Parms initMovePlayersUpFromGround_Parms;

	this->ProcessEvent ( pFninitMovePlayersUpFromGround, &initMovePlayersUpFromGround_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarWorldBridge::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.PostBeginPlay" );

	ANowAtlasAvatarWorldBridge_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.sendMessageToBridge
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 messageTwo                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarWorldBridge::eventsendMessageToBridge ( struct FString Message, struct FString messageTwo )
{
	static UFunction* pFnsendMessageToBridge = NULL;

	if ( ! pFnsendMessageToBridge )
		pFnsendMessageToBridge = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.sendMessageToBridge" );

	ANowAtlasAvatarWorldBridge_eventsendMessageToBridge_Parms sendMessageToBridge_Parms;
	memcpy ( &sendMessageToBridge_Parms.Message, &Message, 0xC );
	memcpy ( &sendMessageToBridge_Parms.messageTwo, &messageTwo, 0xC );

	this->ProcessEvent ( pFnsendMessageToBridge, &sendMessageToBridge_Parms, NULL );

	return sendMessageToBridge_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.stopWorking
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarWorldBridge::stopWorking ( )
{
	static UFunction* pFnstopWorking = NULL;

	if ( ! pFnstopWorking )
		pFnstopWorking = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.stopWorking" );

	ANowAtlasAvatarWorldBridge_execstopWorking_Parms stopWorking_Parms;

	this->ProcessEvent ( pFnstopWorking, &stopWorking_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.HelpConstruction
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarWorldBridge::eventHelpConstruction ( )
{
	static UFunction* pFnHelpConstruction = NULL;

	if ( ! pFnHelpConstruction )
		pFnHelpConstruction = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.HelpConstruction" );

	ANowAtlasAvatarWorldBridge_eventHelpConstruction_Parms HelpConstruction_Parms;

	this->ProcessEvent ( pFnHelpConstruction, &HelpConstruction_Parms, NULL );

	return HelpConstruction_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.isTargetingInventoryMesh
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarWorldBridge::eventisTargetingInventoryMesh ( )
{
	static UFunction* pFnisTargetingInventoryMesh = NULL;

	if ( ! pFnisTargetingInventoryMesh )
		pFnisTargetingInventoryMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.isTargetingInventoryMesh" );

	ANowAtlasAvatarWorldBridge_eventisTargetingInventoryMesh_Parms isTargetingInventoryMesh_Parms;

	this->ProcessEvent ( pFnisTargetingInventoryMesh, &isTargetingInventoryMesh_Parms, NULL );

	return isTargetingInventoryMesh_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge._sendMessageToPlayer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 messsage                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarWorldBridge::event_sendMessageToPlayer ( struct FString messsage )
{
	static UFunction* pFn_sendMessageToPlayer = NULL;

	if ( ! pFn_sendMessageToPlayer )
		pFn_sendMessageToPlayer = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge._sendMessageToPlayer" );

	ANowAtlasAvatarWorldBridge_event_sendMessageToPlayer_Parms _sendMessageToPlayer_Parms;
	memcpy ( &_sendMessageToPlayer_Parms.messsage, &messsage, 0xC );

	this->ProcessEvent ( pFn_sendMessageToPlayer, &_sendMessageToPlayer_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.isPlayersInRange
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Distance                       ( CPF_Parm )

bool ANowAtlasAvatarWorldBridge::eventisPlayersInRange ( float Distance )
{
	static UFunction* pFnisPlayersInRange = NULL;

	if ( ! pFnisPlayersInRange )
		pFnisPlayersInRange = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.isPlayersInRange" );

	ANowAtlasAvatarWorldBridge_eventisPlayersInRange_Parms isPlayersInRange_Parms;
	isPlayersInRange_Parms.Distance = Distance;

	this->ProcessEvent ( pFnisPlayersInRange, &isPlayersInRange_Parms, NULL );

	return isPlayersInRange_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.DoHouseTrade
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarWorldBridge::eventDoHouseTrade ( )
{
	static UFunction* pFnDoHouseTrade = NULL;

	if ( ! pFnDoHouseTrade )
		pFnDoHouseTrade = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.DoHouseTrade" );

	ANowAtlasAvatarWorldBridge_eventDoHouseTrade_Parms DoHouseTrade_Parms;

	this->ProcessEvent ( pFnDoHouseTrade, &DoHouseTrade_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.setBridgeMeshes
// [0x00020002] 
// Parameters infos:
// int                            _BridgeStatus                  ( CPF_Parm )

void ANowAtlasAvatarWorldBridge::setBridgeMeshes ( int _BridgeStatus )
{
	static UFunction* pFnsetBridgeMeshes = NULL;

	if ( ! pFnsetBridgeMeshes )
		pFnsetBridgeMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.setBridgeMeshes" );

	ANowAtlasAvatarWorldBridge_execsetBridgeMeshes_Parms setBridgeMeshes_Parms;
	setBridgeMeshes_Parms._BridgeStatus = _BridgeStatus;

	this->ProcessEvent ( pFnsetBridgeMeshes, &setBridgeMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge._getBridgeMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarWorldBridge::event_getBridgeMesh ( )
{
	static UFunction* pFn_getBridgeMesh = NULL;

	if ( ! pFn_getBridgeMesh )
		pFn_getBridgeMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge._getBridgeMesh" );

	ANowAtlasAvatarWorldBridge_event_getBridgeMesh_Parms _getBridgeMesh_Parms;

	this->ProcessEvent ( pFn_getBridgeMesh, &_getBridgeMesh_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.sendMessageToClient
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarWorldBridge::eventsendMessageToClient ( struct FString Message )
{
	static UFunction* pFnsendMessageToClient = NULL;

	if ( ! pFnsendMessageToClient )
		pFnsendMessageToClient = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.sendMessageToClient" );

	ANowAtlasAvatarWorldBridge_eventsendMessageToClient_Parms sendMessageToClient_Parms;
	memcpy ( &sendMessageToClient_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnsendMessageToClient, &sendMessageToClient_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldBridge.GetCI
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UWorldConstructable_ContentInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UWorldConstructable_ContentInfo* ANowAtlasAvatarWorldBridge::GetCI ( )
{
	static UFunction* pFnGetCI = NULL;

	if ( ! pFnGetCI )
		pFnGetCI = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.GetCI" );

	ANowAtlasAvatarWorldBridge_execGetCI_Parms GetCI_Parms;

	pFnGetCI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCI, &GetCI_Parms, NULL );

	pFnGetCI->FunctionFlags |= 0x400;

	return GetCI_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.GetObejctContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarWorldBridge::GetObejctContentInfo ( )
{
	static UFunction* pFnGetObejctContentInfo = NULL;

	if ( ! pFnGetObejctContentInfo )
		pFnGetObejctContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.GetObejctContentInfo" );

	ANowAtlasAvatarWorldBridge_execGetObejctContentInfo_Parms GetObejctContentInfo_Parms;

	pFnGetObejctContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetObejctContentInfo, &GetObejctContentInfo_Parms, NULL );

	pFnGetObejctContentInfo->FunctionFlags |= 0x400;

	return GetObejctContentInfo_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.getBridgeBuildingStatus
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarWorldBridge::getBridgeBuildingStatus ( )
{
	static UFunction* pFngetBridgeBuildingStatus = NULL;

	if ( ! pFngetBridgeBuildingStatus )
		pFngetBridgeBuildingStatus = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.getBridgeBuildingStatus" );

	ANowAtlasAvatarWorldBridge_execgetBridgeBuildingStatus_Parms getBridgeBuildingStatus_Parms;

	pFngetBridgeBuildingStatus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetBridgeBuildingStatus, &getBridgeBuildingStatus_Parms, NULL );

	pFngetBridgeBuildingStatus->FunctionFlags |= 0x400;

	return getBridgeBuildingStatus_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.getHitPoints
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarWorldBridge::getHitPoints ( )
{
	static UFunction* pFngetHitPoints = NULL;

	if ( ! pFngetHitPoints )
		pFngetHitPoints = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.getHitPoints" );

	ANowAtlasAvatarWorldBridge_execgetHitPoints_Parms getHitPoints_Parms;

	pFngetHitPoints->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHitPoints, &getHitPoints_Parms, NULL );

	pFngetHitPoints->FunctionFlags |= 0x400;

	return getHitPoints_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.isHouseAtMaxHP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarWorldBridge::isHouseAtMaxHP ( )
{
	static UFunction* pFnisHouseAtMaxHP = NULL;

	if ( ! pFnisHouseAtMaxHP )
		pFnisHouseAtMaxHP = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.isHouseAtMaxHP" );

	ANowAtlasAvatarWorldBridge_execisHouseAtMaxHP_Parms isHouseAtMaxHP_Parms;

	pFnisHouseAtMaxHP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisHouseAtMaxHP, &isHouseAtMaxHP_Parms, NULL );

	pFnisHouseAtMaxHP->FunctionFlags |= 0x400;

	return isHouseAtMaxHP_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.getResourceFromName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Resource                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            Resources                      ( CPF_Parm | CPF_OutParm )
// int                            Max                            ( CPF_Parm | CPF_OutParm )

void ANowAtlasAvatarWorldBridge::getResourceFromName ( struct FString Resource, int* Resources, int* Max )
{
	static UFunction* pFngetResourceFromName = NULL;

	if ( ! pFngetResourceFromName )
		pFngetResourceFromName = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.getResourceFromName" );

	ANowAtlasAvatarWorldBridge_execgetResourceFromName_Parms getResourceFromName_Parms;
	memcpy ( &getResourceFromName_Parms.Resource, &Resource, 0xC );

	pFngetResourceFromName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetResourceFromName, &getResourceFromName_Parms, NULL );

	pFngetResourceFromName->FunctionFlags |= 0x400;

	if ( Resources )
		*Resources = getResourceFromName_Parms.Resources;

	if ( Max )
		*Max = getResourceFromName_Parms.Max;
};

// Function NowGame.NowAtlasAvatarWorldBridge.getHouseMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarWorldBridge::getHouseMesh ( )
{
	static UFunction* pFngetHouseMesh = NULL;

	if ( ! pFngetHouseMesh )
		pFngetHouseMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.getHouseMesh" );

	ANowAtlasAvatarWorldBridge_execgetHouseMesh_Parms getHouseMesh_Parms;

	pFngetHouseMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseMesh, &getHouseMesh_Parms, NULL );

	pFngetHouseMesh->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarWorldBridge.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarWorldBridge::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.IsTarget" );

	ANowAtlasAvatarWorldBridge_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldBridge.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarWorldBridge::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldBridge.AtlasUse" );

	ANowAtlasAvatarWorldBridge_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPalisad.setBridgeMeshes
// [0x00020002] 
// Parameters infos:
// int                            _BridgeStatus                  ( CPF_Parm )

void ANowAtlasAvatarPalisad::setBridgeMeshes ( int _BridgeStatus )
{
	static UFunction* pFnsetBridgeMeshes = NULL;

	if ( ! pFnsetBridgeMeshes )
		pFnsetBridgeMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPalisad.setBridgeMeshes" );

	ANowAtlasAvatarPalisad_execsetBridgeMeshes_Parms setBridgeMeshes_Parms;
	setBridgeMeshes_Parms._BridgeStatus = _BridgeStatus;

	this->ProcessEvent ( pFnsetBridgeMeshes, &setBridgeMeshes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPalisad.PendingHouseBuildingStatus
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPalisad::PendingHouseBuildingStatus ( )
{
	static UFunction* pFnPendingHouseBuildingStatus = NULL;

	if ( ! pFnPendingHouseBuildingStatus )
		pFnPendingHouseBuildingStatus = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPalisad.PendingHouseBuildingStatus" );

	ANowAtlasAvatarPalisad_execPendingHouseBuildingStatus_Parms PendingHouseBuildingStatus_Parms;

	this->ProcessEvent ( pFnPendingHouseBuildingStatus, &PendingHouseBuildingStatus_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldDestructableObject.playDestruction
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarWorldDestructableObject::eventplayDestruction ( )
{
	static UFunction* pFnplayDestruction = NULL;

	if ( ! pFnplayDestruction )
		pFnplayDestruction = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldDestructableObject.playDestruction" );

	ANowAtlasAvatarWorldDestructableObject_eventplayDestruction_Parms playDestruction_Parms;

	this->ProcessEvent ( pFnplayDestruction, &playDestruction_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarWorldDestructableObject.getHouseMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarWorldDestructableObject::getHouseMesh ( )
{
	static UFunction* pFngetHouseMesh = NULL;

	if ( ! pFngetHouseMesh )
		pFngetHouseMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldDestructableObject.getHouseMesh" );

	ANowAtlasAvatarWorldDestructableObject_execgetHouseMesh_Parms getHouseMesh_Parms;

	pFngetHouseMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHouseMesh, &getHouseMesh_Parms, NULL );

	pFngetHouseMesh->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarWorldDestructableObject.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarWorldDestructableObject::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldDestructableObject.AtlasUse" );

	ANowAtlasAvatarWorldDestructableObject_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarWorldDestructableObject.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarWorldDestructableObject::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarWorldDestructableObject.IsTarget" );

	ANowAtlasAvatarWorldDestructableObject_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiege.ResetAnims
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiege::eventResetAnims ( )
{
	static UFunction* pFnResetAnims = NULL;

	if ( ! pFnResetAnims )
		pFnResetAnims = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiege.ResetAnims" );

	ANowAtlasAvatarSiege_eventResetAnims_Parms ResetAnims_Parms;

	this->ProcessEvent ( pFnResetAnims, &ResetAnims_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiege.HideBone
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiege::eventHideBone ( )
{
	static UFunction* pFnHideBone = NULL;

	if ( ! pFnHideBone )
		pFnHideBone = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiege.HideBone" );

	ANowAtlasAvatarSiege_eventHideBone_Parms HideBone_Parms;

	this->ProcessEvent ( pFnHideBone, &HideBone_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiege.ShowBone
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiege::eventShowBone ( )
{
	static UFunction* pFnShowBone = NULL;

	if ( ! pFnShowBone )
		pFnShowBone = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiege.ShowBone" );

	ANowAtlasAvatarSiege_eventShowBone_Parms ShowBone_Parms;

	this->ProcessEvent ( pFnShowBone, &ShowBone_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiege.TraceBoneHit
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiege::eventTraceBoneHit ( )
{
	static UFunction* pFnTraceBoneHit = NULL;

	if ( ! pFnTraceBoneHit )
		pFnTraceBoneHit = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiege.TraceBoneHit" );

	ANowAtlasAvatarSiege_eventTraceBoneHit_Parms TraceBoneHit_Parms;

	this->ProcessEvent ( pFnTraceBoneHit, &TraceBoneHit_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiege.Fire
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiege::eventFire ( )
{
	static UFunction* pFnFire = NULL;

	if ( ! pFnFire )
		pFnFire = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiege.Fire" );

	ANowAtlasAvatarSiege_eventFire_Parms Fire_Parms;

	this->ProcessEvent ( pFnFire, &Fire_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiege.PostBeginPlay
// [0x00020000] 
// Parameters infos:

void ANowAtlasAvatarSiege::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiege.PostBeginPlay" );

	ANowAtlasAvatarSiege_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiege.DealDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ActorsToDamage                 ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarSiege::DealDamage ( struct FString ActorsToDamage )
{
	static UFunction* pFnDealDamage = NULL;

	if ( ! pFnDealDamage )
		pFnDealDamage = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiege.DealDamage" );

	ANowAtlasAvatarSiege_execDealDamage_Parms DealDamage_Parms;
	memcpy ( &DealDamage_Parms.ActorsToDamage, &ActorsToDamage, 0xC );

	pFnDealDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDealDamage, &DealDamage_Parms, NULL );

	pFnDealDamage->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiege.SiegeUse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Letter                         ( CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarSiege::SiegeUse ( struct FString Letter )
{
	static UFunction* pFnSiegeUse = NULL;

	if ( ! pFnSiegeUse )
		pFnSiegeUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiege.SiegeUse" );

	ANowAtlasAvatarSiege_execSiegeUse_Parms SiegeUse_Parms;
	memcpy ( &SiegeUse_Parms.Letter, &Letter, 0xC );

	pFnSiegeUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSiegeUse, &SiegeUse_Parms, NULL );

	pFnSiegeUse->FunctionFlags |= 0x400;

	return SiegeUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiege.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarSiege::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiege.AtlasUse" );

	ANowAtlasAvatarSiege_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiegeHailCaster.ResetAnims
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeHailCaster::eventResetAnims ( )
{
	static UFunction* pFnResetAnims = NULL;

	if ( ! pFnResetAnims )
		pFnResetAnims = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeHailCaster.ResetAnims" );

	ANowAtlasAvatarSiegeHailCaster_eventResetAnims_Parms ResetAnims_Parms;

	this->ProcessEvent ( pFnResetAnims, &ResetAnims_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeHailCaster.HideBone
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeHailCaster::eventHideBone ( )
{
	static UFunction* pFnHideBone = NULL;

	if ( ! pFnHideBone )
		pFnHideBone = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeHailCaster.HideBone" );

	ANowAtlasAvatarSiegeHailCaster_eventHideBone_Parms HideBone_Parms;

	this->ProcessEvent ( pFnHideBone, &HideBone_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeHailCaster.ShowBone
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeHailCaster::eventShowBone ( )
{
	static UFunction* pFnShowBone = NULL;

	if ( ! pFnShowBone )
		pFnShowBone = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeHailCaster.ShowBone" );

	ANowAtlasAvatarSiegeHailCaster_eventShowBone_Parms ShowBone_Parms;

	this->ProcessEvent ( pFnShowBone, &ShowBone_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeHailCaster.TraceBoneHit
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeHailCaster::eventTraceBoneHit ( )
{
	static UFunction* pFnTraceBoneHit = NULL;

	if ( ! pFnTraceBoneHit )
		pFnTraceBoneHit = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeHailCaster.TraceBoneHit" );

	ANowAtlasAvatarSiegeHailCaster_eventTraceBoneHit_Parms TraceBoneHit_Parms;

	this->ProcessEvent ( pFnTraceBoneHit, &TraceBoneHit_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeHailCaster.Fire
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeHailCaster::eventFire ( )
{
	static UFunction* pFnFire = NULL;

	if ( ! pFnFire )
		pFnFire = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeHailCaster.Fire" );

	ANowAtlasAvatarSiegeHailCaster_eventFire_Parms Fire_Parms;

	this->ProcessEvent ( pFnFire, &Fire_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeHailCaster.PostBeginPlay
// [0x00020000] 
// Parameters infos:

void ANowAtlasAvatarSiegeHailCaster::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeHailCaster.PostBeginPlay" );

	ANowAtlasAvatarSiegeHailCaster_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeHailCaster.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarSiegeHailCaster::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeHailCaster.AtlasUse" );

	ANowAtlasAvatarSiegeHailCaster_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSkM.RecalcTimeToDestSync
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarSkM::RecalcTimeToDestSync ( )
{
	static UFunction* pFnRecalcTimeToDestSync = NULL;

	if ( ! pFnRecalcTimeToDestSync )
		pFnRecalcTimeToDestSync = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.RecalcTimeToDestSync" );

	ANowAtlasAvatarSkM_execRecalcTimeToDestSync_Parms RecalcTimeToDestSync_Parms;

	this->ProcessEvent ( pFnRecalcTimeToDestSync, &RecalcTimeToDestSync_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.SetLocationWithGroundCheck
// [0x00820002] 
// Parameters infos:
// struct FVector                 NewPos                         ( CPF_Parm )

void ANowAtlasAvatarSkM::SetLocationWithGroundCheck ( struct FVector NewPos )
{
	static UFunction* pFnSetLocationWithGroundCheck = NULL;

	if ( ! pFnSetLocationWithGroundCheck )
		pFnSetLocationWithGroundCheck = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.SetLocationWithGroundCheck" );

	ANowAtlasAvatarSkM_execSetLocationWithGroundCheck_Parms SetLocationWithGroundCheck_Parms;
	memcpy ( &SetLocationWithGroundCheck_Parms.NewPos, &NewPos, 0xC );

	this->ProcessEvent ( pFnSetLocationWithGroundCheck, &SetLocationWithGroundCheck_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.SyncToPos
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 syncPos                        ( CPF_Parm )

void ANowAtlasAvatarSkM::eventSyncToPos ( struct FVector syncPos )
{
	static UFunction* pFnSyncToPos = NULL;

	if ( ! pFnSyncToPos )
		pFnSyncToPos = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.SyncToPos" );

	ANowAtlasAvatarSkM_eventSyncToPos_Parms SyncToPos_Parms;
	memcpy ( &SyncToPos_Parms.syncPos, &syncPos, 0xC );

	this->ProcessEvent ( pFnSyncToPos, &SyncToPos_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.DrawDebugInfo
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowAtlasAvatarSkM::DrawDebugInfo ( float DeltaTime )
{
	static UFunction* pFnDrawDebugInfo = NULL;

	if ( ! pFnDrawDebugInfo )
		pFnDrawDebugInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.DrawDebugInfo" );

	ANowAtlasAvatarSkM_execDrawDebugInfo_Parms DrawDebugInfo_Parms;
	DrawDebugInfo_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnDrawDebugInfo, &DrawDebugInfo_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.DrawSelfRadius
// [0x00020002] 
// Parameters infos:
// float                          SelfRadius                     ( CPF_Parm )

void ANowAtlasAvatarSkM::DrawSelfRadius ( float SelfRadius )
{
	static UFunction* pFnDrawSelfRadius = NULL;

	if ( ! pFnDrawSelfRadius )
		pFnDrawSelfRadius = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.DrawSelfRadius" );

	ANowAtlasAvatarSkM_execDrawSelfRadius_Parms DrawSelfRadius_Parms;
	DrawSelfRadius_Parms.SelfRadius = SelfRadius;

	this->ProcessEvent ( pFnDrawSelfRadius, &DrawSelfRadius_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.SetNewMoveSpeed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          NewMoveSpeed                   ( CPF_Parm )

void ANowAtlasAvatarSkM::eventSetNewMoveSpeed ( float NewMoveSpeed )
{
	static UFunction* pFnSetNewMoveSpeed = NULL;

	if ( ! pFnSetNewMoveSpeed )
		pFnSetNewMoveSpeed = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.SetNewMoveSpeed" );

	ANowAtlasAvatarSkM_eventSetNewMoveSpeed_Parms SetNewMoveSpeed_Parms;
	SetNewMoveSpeed_Parms.NewMoveSpeed = NewMoveSpeed;

	this->ProcessEvent ( pFnSetNewMoveSpeed, &SetNewMoveSpeed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.SetNewDestPos
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 NewPos                         ( CPF_Parm )
// unsigned long                  bDrawDebug                     ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSkM::eventSetNewDestPos ( struct FVector NewPos, unsigned long bDrawDebug )
{
	static UFunction* pFnSetNewDestPos = NULL;

	if ( ! pFnSetNewDestPos )
		pFnSetNewDestPos = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.SetNewDestPos" );

	ANowAtlasAvatarSkM_eventSetNewDestPos_Parms SetNewDestPos_Parms;
	memcpy ( &SetNewDestPos_Parms.NewPos, &NewPos, 0xC );
	SetNewDestPos_Parms.bDrawDebug = bDrawDebug;

	this->ProcessEvent ( pFnSetNewDestPos, &SetNewDestPos_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.GetBlockingNode
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeBlendList*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UAnimNodeBlendList* ANowAtlasAvatarSkM::eventGetBlockingNode ( )
{
	static UFunction* pFnGetBlockingNode = NULL;

	if ( ! pFnGetBlockingNode )
		pFnGetBlockingNode = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.GetBlockingNode" );

	ANowAtlasAvatarSkM_eventGetBlockingNode_Parms GetBlockingNode_Parms;

	this->ProcessEvent ( pFnGetBlockingNode, &GetBlockingNode_Parms, NULL );

	return GetBlockingNode_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSkM.JumpOffAvatar
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarSkM::JumpOffAvatar ( )
{
	static UFunction* pFnJumpOffAvatar = NULL;

	if ( ! pFnJumpOffAvatar )
		pFnJumpOffAvatar = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.JumpOffAvatar" );

	ANowAtlasAvatarSkM_execJumpOffAvatar_Parms JumpOffAvatar_Parms;

	this->ProcessEvent ( pFnJumpOffAvatar, &JumpOffAvatar_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.BaseChange
// [0x00020822] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSkM::eventBaseChange ( )
{
	static UFunction* pFnBaseChange = NULL;

	if ( ! pFnBaseChange )
		pFnBaseChange = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.BaseChange" );

	ANowAtlasAvatarSkM_eventBaseChange_Parms BaseChange_Parms;

	this->ProcessEvent ( pFnBaseChange, &BaseChange_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.bIsStatic
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarSkM::eventbIsStatic ( )
{
	static UFunction* pFnbIsStatic = NULL;

	if ( ! pFnbIsStatic )
		pFnbIsStatic = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.bIsStatic" );

	ANowAtlasAvatarSkM_eventbIsStatic_Parms bIsStatic_Parms;

	this->ProcessEvent ( pFnbIsStatic, &bIsStatic_Parms, NULL );

	return bIsStatic_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSkM.TestPos
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 ExitPos                        ( CPF_Parm )
// class ANowAtlasAvatarSkM*      Other                          ( CPF_Parm )

struct FVector ANowAtlasAvatarSkM::TestPos ( struct FVector ExitPos, class ANowAtlasAvatarSkM* Other )
{
	static UFunction* pFnTestPos = NULL;

	if ( ! pFnTestPos )
		pFnTestPos = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.TestPos" );

	ANowAtlasAvatarSkM_execTestPos_Parms TestPos_Parms;
	memcpy ( &TestPos_Parms.ExitPos, &ExitPos, 0xC );
	TestPos_Parms.Other = Other;

	this->ProcessEvent ( pFnTestPos, &TestPos_Parms, NULL );

	return TestPos_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSkM.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowAtlasAvatarSkM::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.Tick" );

	ANowAtlasAvatarSkM_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.SetLocalFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewFlag                        ( CPF_Parm )

void ANowAtlasAvatarSkM::eventSetLocalFlag ( int NewFlag )
{
	static UFunction* pFnSetLocalFlag = NULL;

	if ( ! pFnSetLocalFlag )
		pFnSetLocalFlag = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.SetLocalFlag" );

	ANowAtlasAvatarSkM_eventSetLocalFlag_Parms SetLocalFlag_Parms;
	SetLocalFlag_Parms.NewFlag = NewFlag;

	this->ProcessEvent ( pFnSetLocalFlag, &SetLocalFlag_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarSkM::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.PostBeginPlay" );

	ANowAtlasAvatarSkM_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSkM.IsClientOwner
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarSkM::IsClientOwner ( )
{
	static UFunction* pFnIsClientOwner = NULL;

	if ( ! pFnIsClientOwner )
		pFnIsClientOwner = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.IsClientOwner" );

	ANowAtlasAvatarSkM_execIsClientOwner_Parms IsClientOwner_Parms;

	pFnIsClientOwner->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsClientOwner, &IsClientOwner_Parms, NULL );

	pFnIsClientOwner->FunctionFlags |= 0x400;

	return IsClientOwner_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSkM.TriggerFootNotify
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            FootIndex                      ( CPF_Parm )
// float                          FootForce                      ( CPF_Parm )

void ANowAtlasAvatarSkM::TriggerFootNotify ( int FootIndex, float FootForce )
{
	static UFunction* pFnTriggerFootNotify = NULL;

	if ( ! pFnTriggerFootNotify )
		pFnTriggerFootNotify = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.TriggerFootNotify" );

	ANowAtlasAvatarSkM_execTriggerFootNotify_Parms TriggerFootNotify_Parms;
	TriggerFootNotify_Parms.FootIndex = FootIndex;
	TriggerFootNotify_Parms.FootForce = FootForce;

	pFnTriggerFootNotify->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerFootNotify, &TriggerFootNotify_Parms, NULL );

	pFnTriggerFootNotify->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSkM.GetTargetPos
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowAtlasAvatarSkM::GetTargetPos ( )
{
	static UFunction* pFnGetTargetPos = NULL;

	if ( ! pFnGetTargetPos )
		pFnGetTargetPos = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.GetTargetPos" );

	ANowAtlasAvatarSkM_execGetTargetPos_Parms GetTargetPos_Parms;

	pFnGetTargetPos->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetPos, &GetTargetPos_Parms, NULL );

	pFnGetTargetPos->FunctionFlags |= 0x400;

	return GetTargetPos_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSkM.GetTargetDir
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator ANowAtlasAvatarSkM::GetTargetDir ( )
{
	static UFunction* pFnGetTargetDir = NULL;

	if ( ! pFnGetTargetDir )
		pFnGetTargetDir = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.GetTargetDir" );

	ANowAtlasAvatarSkM_execGetTargetDir_Parms GetTargetDir_Parms;

	pFnGetTargetDir->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetDir, &GetTargetDir_Parms, NULL );

	pFnGetTargetDir->FunctionFlags |= 0x400;

	return GetTargetDir_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSkM.HasRotationTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarSkM::HasRotationTarget ( )
{
	static UFunction* pFnHasRotationTarget = NULL;

	if ( ! pFnHasRotationTarget )
		pFnHasRotationTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.HasRotationTarget" );

	ANowAtlasAvatarSkM_execHasRotationTarget_Parms HasRotationTarget_Parms;

	pFnHasRotationTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasRotationTarget, &HasRotationTarget_Parms, NULL );

	pFnHasRotationTarget->FunctionFlags |= 0x400;

	return HasRotationTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSkM.GetInitMove
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarSkM::GetInitMove ( )
{
	static UFunction* pFnGetInitMove = NULL;

	if ( ! pFnGetInitMove )
		pFnGetInitMove = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSkM.GetInitMove" );

	ANowAtlasAvatarSkM_execGetInitMove_Parms GetInitMove_Parms;

	pFnGetInitMove->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInitMove, &GetInitMove_Parms, NULL );

	pFnGetInitMove->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.PlayEquip
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEquip                         ( CPF_Parm )

void ANowAtlasAvatarAi::PlayEquip ( unsigned long bEquip )
{
	static UFunction* pFnPlayEquip = NULL;

	if ( ! pFnPlayEquip )
		pFnPlayEquip = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.PlayEquip" );

	ANowAtlasAvatarAi_execPlayEquip_Parms PlayEquip_Parms;
	PlayEquip_Parms.bEquip = bEquip;

	this->ProcessEvent ( pFnPlayEquip, &PlayEquip_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.CheckForIdleSpot
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventCheckForIdleSpot ( )
{
	static UFunction* pFnCheckForIdleSpot = NULL;

	if ( ! pFnCheckForIdleSpot )
		pFnCheckForIdleSpot = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.CheckForIdleSpot" );

	ANowAtlasAvatarAi_eventCheckForIdleSpot_Parms CheckForIdleSpot_Parms;

	this->ProcessEvent ( pFnCheckForIdleSpot, &CheckForIdleSpot_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.CreateSyncMove
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventCreateSyncMove ( )
{
	static UFunction* pFnCreateSyncMove = NULL;

	if ( ! pFnCreateSyncMove )
		pFnCreateSyncMove = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.CreateSyncMove" );

	ANowAtlasAvatarAi_eventCreateSyncMove_Parms CreateSyncMove_Parms;

	this->ProcessEvent ( pFnCreateSyncMove, &CreateSyncMove_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.GetANowPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowAtlasAvatarAi::eventGetANowPC ( )
{
	static UFunction* pFnGetANowPC = NULL;

	if ( ! pFnGetANowPC )
		pFnGetANowPC = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetANowPC" );

	ANowAtlasAvatarAi_eventGetANowPC_Parms GetANowPC_Parms;

	this->ProcessEvent ( pFnGetANowPC, &GetANowPC_Parms, NULL );

	return GetANowPC_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetExtent
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowAtlasAvatarAi::GetExtent ( )
{
	static UFunction* pFnGetExtent = NULL;

	if ( ! pFnGetExtent )
		pFnGetExtent = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetExtent" );

	ANowAtlasAvatarAi_execGetExtent_Parms GetExtent_Parms;

	this->ProcessEvent ( pFnGetExtent, &GetExtent_Parms, NULL );

	return GetExtent_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.Landed
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void ANowAtlasAvatarAi::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.Landed" );

	ANowAtlasAvatarAi_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.GetDetourValue
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatarAi::GetDetourValue ( )
{
	static UFunction* pFnGetDetourValue = NULL;

	if ( ! pFnGetDetourValue )
		pFnGetDetourValue = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetDetourValue" );

	ANowAtlasAvatarAi_execGetDetourValue_Parms GetDetourValue_Parms;

	this->ProcessEvent ( pFnGetDetourValue, &GetDetourValue_Parms, NULL );

	return GetDetourValue_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.SpawnCorpse
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// struct FName                   LastHitBoneName                ( CPF_OptionalParm | CPF_Parm )
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAi::eventSpawnCorpse ( struct FName LastHitBoneName, float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.SpawnCorpse" );

	ANowAtlasAvatarAi_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	memcpy ( &SpawnCorpse_Parms.LastHitBoneName, &LastHitBoneName, 0x8 );
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.CheckForBleed
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAi::CheckForBleed ( float fDeltaTime )
{
	static UFunction* pFnCheckForBleed = NULL;

	if ( ! pFnCheckForBleed )
		pFnCheckForBleed = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.CheckForBleed" );

	ANowAtlasAvatarAi_execCheckForBleed_Parms CheckForBleed_Parms;
	CheckForBleed_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCheckForBleed, &CheckForBleed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.InitSpawnEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 SpawnEffectName                ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarAi::eventInitSpawnEffect ( struct FString SpawnEffectName )
{
	static UFunction* pFnInitSpawnEffect = NULL;

	if ( ! pFnInitSpawnEffect )
		pFnInitSpawnEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.InitSpawnEffect" );

	ANowAtlasAvatarAi_eventInitSpawnEffect_Parms InitSpawnEffect_Parms;
	memcpy ( &InitSpawnEffect_Parms.SpawnEffectName, &SpawnEffectName, 0xC );

	this->ProcessEvent ( pFnInitSpawnEffect, &InitSpawnEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.SetHiddenSpawn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bHiddenSpawn                   ( CPF_Parm )

void ANowAtlasAvatarAi::eventSetHiddenSpawn ( unsigned long bHiddenSpawn )
{
	static UFunction* pFnSetHiddenSpawn = NULL;

	if ( ! pFnSetHiddenSpawn )
		pFnSetHiddenSpawn = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.SetHiddenSpawn" );

	ANowAtlasAvatarAi_eventSetHiddenSpawn_Parms SetHiddenSpawn_Parms;
	SetHiddenSpawn_Parms.bHiddenSpawn = bHiddenSpawn;

	this->ProcessEvent ( pFnSetHiddenSpawn, &SetHiddenSpawn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.SetMoveType
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iNewMoveType                   ( CPF_Parm )

void ANowAtlasAvatarAi::eventSetMoveType ( int iNewMoveType )
{
	static UFunction* pFnSetMoveType = NULL;

	if ( ! pFnSetMoveType )
		pFnSetMoveType = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.SetMoveType" );

	ANowAtlasAvatarAi_eventSetMoveType_Parms SetMoveType_Parms;
	SetMoveType_Parms.iNewMoveType = iNewMoveType;

	this->ProcessEvent ( pFnSetMoveType, &SetMoveType_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.AiProjectileEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sEffectName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 vVector                        ( CPF_Parm )
// class AActor*                  pTarget                        ( CPF_Parm )
// unsigned long                  bOnlyMesh                      ( CPF_Parm )

void ANowAtlasAvatarAi::eventAiProjectileEffect ( struct FString sEffectName, struct FVector vVector, class AActor* pTarget, unsigned long bOnlyMesh )
{
	static UFunction* pFnAiProjectileEffect = NULL;

	if ( ! pFnAiProjectileEffect )
		pFnAiProjectileEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.AiProjectileEffect" );

	ANowAtlasAvatarAi_eventAiProjectileEffect_Parms AiProjectileEffect_Parms;
	memcpy ( &AiProjectileEffect_Parms.sEffectName, &sEffectName, 0xC );
	memcpy ( &AiProjectileEffect_Parms.vVector, &vVector, 0xC );
	AiProjectileEffect_Parms.pTarget = pTarget;
	AiProjectileEffect_Parms.bOnlyMesh = bOnlyMesh;

	this->ProcessEvent ( pFnAiProjectileEffect, &AiProjectileEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.AiAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iAnim                          ( CPF_Parm )
// struct FVector                 vVector                        ( CPF_Parm )
// class AActor*                  pTarget                        ( CPF_Parm )
// float                          fNewAnimLength                 ( CPF_Parm )

void ANowAtlasAvatarAi::eventAiAnim ( int iAnim, struct FVector vVector, class AActor* pTarget, float fNewAnimLength )
{
	static UFunction* pFnAiAnim = NULL;

	if ( ! pFnAiAnim )
		pFnAiAnim = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.AiAnim" );

	ANowAtlasAvatarAi_eventAiAnim_Parms AiAnim_Parms;
	AiAnim_Parms.iAnim = iAnim;
	memcpy ( &AiAnim_Parms.vVector, &vVector, 0xC );
	AiAnim_Parms.pTarget = pTarget;
	AiAnim_Parms.fNewAnimLength = fNewAnimLength;

	this->ProcessEvent ( pFnAiAnim, &AiAnim_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.TickDebug
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAi::TickDebug ( float fDeltaTime )
{
	static UFunction* pFnTickDebug = NULL;

	if ( ! pFnTickDebug )
		pFnTickDebug = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.TickDebug" );

	ANowAtlasAvatarAi_execTickDebug_Parms TickDebug_Parms;
	TickDebug_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickDebug, &TickDebug_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.Destroyed" );

	ANowAtlasAvatarAi_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.TriggerMove
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventTriggerMove ( )
{
	static UFunction* pFnTriggerMove = NULL;

	if ( ! pFnTriggerMove )
		pFnTriggerMove = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.TriggerMove" );

	ANowAtlasAvatarAi_eventTriggerMove_Parms TriggerMove_Parms;

	this->ProcessEvent ( pFnTriggerMove, &TriggerMove_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.CreatePendingMove
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FsPendingMove           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 vPos                           ( CPF_Parm )
// float                          fMoveTime                      ( CPF_Parm )
// float                          fTriggerTimer                  ( CPF_Parm )
// unsigned long                  bNewDetour                     ( CPF_Parm )
// unsigned long                  bTriggerd                      ( CPF_Parm )

struct FsPendingMove ANowAtlasAvatarAi::eventCreatePendingMove ( struct FVector vPos, float fMoveTime, float fTriggerTimer, unsigned long bNewDetour, unsigned long bTriggerd )
{
	static UFunction* pFnCreatePendingMove = NULL;

	if ( ! pFnCreatePendingMove )
		pFnCreatePendingMove = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.CreatePendingMove" );

	ANowAtlasAvatarAi_eventCreatePendingMove_Parms CreatePendingMove_Parms;
	memcpy ( &CreatePendingMove_Parms.vPos, &vPos, 0xC );
	CreatePendingMove_Parms.fMoveTime = fMoveTime;
	CreatePendingMove_Parms.fTriggerTimer = fTriggerTimer;
	CreatePendingMove_Parms.bNewDetour = bNewDetour;
	CreatePendingMove_Parms.bTriggerd = bTriggerd;

	this->ProcessEvent ( pFnCreatePendingMove, &CreatePendingMove_Parms, NULL );

	return CreatePendingMove_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.SyncPosition
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventSyncPosition ( )
{
	static UFunction* pFnSyncPosition = NULL;

	if ( ! pFnSyncPosition )
		pFnSyncPosition = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.SyncPosition" );

	ANowAtlasAvatarAi_eventSyncPosition_Parms SyncPosition_Parms;

	this->ProcessEvent ( pFnSyncPosition, &SyncPosition_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.SetAiCollision
// [0x00020002] 
// Parameters infos:
// float                          NewDrawScale                   ( CPF_Parm )

void ANowAtlasAvatarAi::SetAiCollision ( float NewDrawScale )
{
	static UFunction* pFnSetAiCollision = NULL;

	if ( ! pFnSetAiCollision )
		pFnSetAiCollision = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.SetAiCollision" );

	ANowAtlasAvatarAi_execSetAiCollision_Parms SetAiCollision_Parms;
	SetAiCollision_Parms.NewDrawScale = NewDrawScale;

	this->ProcessEvent ( pFnSetAiCollision, &SetAiCollision_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.SetLevel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewLevel                       ( CPF_Parm )

void ANowAtlasAvatarAi::eventSetLevel ( int NewLevel )
{
	static UFunction* pFnSetLevel = NULL;

	if ( ! pFnSetLevel )
		pFnSetLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.SetLevel" );

	ANowAtlasAvatarAi_eventSetLevel_Parms SetLevel_Parms;
	SetLevel_Parms.NewLevel = NewLevel;

	this->ProcessEvent ( pFnSetLevel, &SetLevel_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.GetInfo
// [0x00420002] 
// Parameters infos:
// TArray< struct FString >       sLogArray                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ANowAtlasAvatarAi::GetInfo ( TArray< struct FString >* sLogArray )
{
	static UFunction* pFnGetInfo = NULL;

	if ( ! pFnGetInfo )
		pFnGetInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetInfo" );

	ANowAtlasAvatarAi_execGetInfo_Parms GetInfo_Parms;

	this->ProcessEvent ( pFnGetInfo, &GetInfo_Parms, NULL );

	if ( sLogArray )
		memcpy ( sLogArray, &GetInfo_Parms.sLogArray, 0xC );
};

// Function NowGame.NowAtlasAvatarAi.SetLocationWithGroundCheck
// [0x00020002] 
// Parameters infos:
// struct FVector                 NewPos                         ( CPF_Parm )

void ANowAtlasAvatarAi::SetLocationWithGroundCheck ( struct FVector NewPos )
{
	static UFunction* pFnSetLocationWithGroundCheck = NULL;

	if ( ! pFnSetLocationWithGroundCheck )
		pFnSetLocationWithGroundCheck = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.SetLocationWithGroundCheck" );

	ANowAtlasAvatarAi_execSetLocationWithGroundCheck_Parms SetLocationWithGroundCheck_Parms;
	memcpy ( &SetLocationWithGroundCheck_Parms.NewPos, &NewPos, 0xC );

	this->ProcessEvent ( pFnSetLocationWithGroundCheck, &SetLocationWithGroundCheck_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.UpdateDamageMaterial
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventUpdateDamageMaterial ( )
{
	static UFunction* pFnUpdateDamageMaterial = NULL;

	if ( ! pFnUpdateDamageMaterial )
		pFnUpdateDamageMaterial = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.UpdateDamageMaterial" );

	ANowAtlasAvatarAi_eventUpdateDamageMaterial_Parms UpdateDamageMaterial_Parms;

	this->ProcessEvent ( pFnUpdateDamageMaterial, &UpdateDamageMaterial_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.AiTookDamage
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Attacker                       ( CPF_Parm )
// float                          Amount                         ( CPF_Parm )

	static UFunction* pFnAiTookDamage = NULL;
void ANowAtlasAvatarAi::eventAiTookDamage ( class AActor* Attacker, float Amount )
{

	if ( ! pFnAiTookDamage )
		pFnAiTookDamage = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.AiTookDamage" );

	ANowAtlasAvatarAi_eventAiTookDamage_Parms AiTookDamage_Parms;
	AiTookDamage_Parms.Attacker = Attacker;
	AiTookDamage_Parms.Amount = Amount;

	this->ProcessEvent ( pFnAiTookDamage, &AiTookDamage_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.GetLookAt
// [0x00020002] 
// Parameters infos:
// class USkelControlLookAt*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USkelControlLookAt* ANowAtlasAvatarAi::GetLookAt ( )
{
	static UFunction* pFnGetLookAt = NULL;

	if ( ! pFnGetLookAt )
		pFnGetLookAt = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetLookAt" );

	ANowAtlasAvatarAi_execGetLookAt_Parms GetLookAt_Parms;

	this->ProcessEvent ( pFnGetLookAt, &GetLookAt_Parms, NULL );

	return GetLookAt_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.TickLookAt
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAi::TickLookAt ( float fDeltaTime )
{
	static UFunction* pFnTickLookAt = NULL;

	if ( ! pFnTickLookAt )
		pFnTickLookAt = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.TickLookAt" );

	ANowAtlasAvatarAi_execTickLookAt_Parms TickLookAt_Parms;
	TickLookAt_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickLookAt, &TickLookAt_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.TickTurnTo
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAi::TickTurnTo ( float fDeltaTime )
{
	static UFunction* pFnTickTurnTo = NULL;

	if ( ! pFnTickTurnTo )
		pFnTickTurnTo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.TickTurnTo" );

	ANowAtlasAvatarAi_execTickTurnTo_Parms TickTurnTo_Parms;
	TickTurnTo_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickTurnTo, &TickTurnTo_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.Tick
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAi::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.Tick" );

	ANowAtlasAvatarAi_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.cacheNodes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventcacheNodes ( )
{
	static UFunction* pFncacheNodes = NULL;

	if ( ! pFncacheNodes )
		pFncacheNodes = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.cacheNodes" );

	ANowAtlasAvatarAi_eventcacheNodes_Parms cacheNodes_Parms;

	this->ProcessEvent ( pFncacheNodes, &cacheNodes_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.SetAiState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  NewState                       ( CPF_Parm )

void ANowAtlasAvatarAi::eventSetAiState ( unsigned char NewState )
{
	static UFunction* pFnSetAiState = NULL;

	if ( ! pFnSetAiState )
		pFnSetAiState = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.SetAiState" );

	ANowAtlasAvatarAi_eventSetAiState_Parms SetAiState_Parms;
	SetAiState_Parms.NewState = NewState;

	this->ProcessEvent ( pFnSetAiState, &SetAiState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.CreateAiAttackType
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FsAiAttackTypes         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iDps                           ( CPF_Parm )

struct FsAiAttackTypes ANowAtlasAvatarAi::eventCreateAiAttackType ( struct FString sName, int iDps )
{
	static UFunction* pFnCreateAiAttackType = NULL;

	if ( ! pFnCreateAiAttackType )
		pFnCreateAiAttackType = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.CreateAiAttackType" );

	ANowAtlasAvatarAi_eventCreateAiAttackType_Parms CreateAiAttackType_Parms;
	memcpy ( &CreateAiAttackType_Parms.sName, &sName, 0xC );
	CreateAiAttackType_Parms.iDps = iDps;

	this->ProcessEvent ( pFnCreateAiAttackType, &CreateAiAttackType_Parms, NULL );

	return CreateAiAttackType_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.SetLocalFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewFlag                        ( CPF_Parm )

void ANowAtlasAvatarAi::eventSetLocalFlag ( int NewFlag )
{
	static UFunction* pFnSetLocalFlag = NULL;

	if ( ! pFnSetLocalFlag )
		pFnSetLocalFlag = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.SetLocalFlag" );

	ANowAtlasAvatarAi_eventSetLocalFlag_Parms SetLocalFlag_Parms;
	SetLocalFlag_Parms.NewFlag = NewFlag;

	this->ProcessEvent ( pFnSetLocalFlag, &SetLocalFlag_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.ChangedDisplayName
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventChangedDisplayName ( )
{
	static UFunction* pFnChangedDisplayName = NULL;

	if ( ! pFnChangedDisplayName )
		pFnChangedDisplayName = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.ChangedDisplayName" );

	ANowAtlasAvatarAi_eventChangedDisplayName_Parms ChangedDisplayName_Parms;

	this->ProcessEvent ( pFnChangedDisplayName, &ChangedDisplayName_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.StartMaterialDamage
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventStartMaterialDamage ( )
{
	static UFunction* pFnStartMaterialDamage = NULL;

	if ( ! pFnStartMaterialDamage )
		pFnStartMaterialDamage = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.StartMaterialDamage" );

	ANowAtlasAvatarAi_eventStartMaterialDamage_Parms StartMaterialDamage_Parms;

	this->ProcessEvent ( pFnStartMaterialDamage, &StartMaterialDamage_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.PendingUpdateAiTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAi::eventPendingUpdateAiTarget ( )
{
	static UFunction* pFnPendingUpdateAiTarget = NULL;

	if ( ! pFnPendingUpdateAiTarget )
		pFnPendingUpdateAiTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.PendingUpdateAiTarget" );

	ANowAtlasAvatarAi_eventPendingUpdateAiTarget_Parms PendingUpdateAiTarget_Parms;

	this->ProcessEvent ( pFnPendingUpdateAiTarget, &PendingUpdateAiTarget_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAi::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.PostBeginPlay" );

	ANowAtlasAvatarAi_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAi.GetMoveSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatarAi::GetMoveSpeed ( )
{
	static UFunction* pFnGetMoveSpeed = NULL;

	if ( ! pFnGetMoveSpeed )
		pFnGetMoveSpeed = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetMoveSpeed" );

	ANowAtlasAvatarAi_execGetMoveSpeed_Parms GetMoveSpeed_Parms;

	pFnGetMoveSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMoveSpeed, &GetMoveSpeed_Parms, NULL );

	pFnGetMoveSpeed->FunctionFlags |= 0x400;

	return GetMoveSpeed_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.AddNewMove
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          newTimer                       ( CPF_Parm )
// struct FVector                 NewTarget                      ( CPF_Parm )

void ANowAtlasAvatarAi::AddNewMove ( float newTimer, struct FVector NewTarget )
{
	static UFunction* pFnAddNewMove = NULL;

	if ( ! pFnAddNewMove )
		pFnAddNewMove = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.AddNewMove" );

	ANowAtlasAvatarAi_execAddNewMove_Parms AddNewMove_Parms;
	AddNewMove_Parms.newTimer = newTimer;
	memcpy ( &AddNewMove_Parms.NewTarget, &NewTarget, 0xC );

	pFnAddNewMove->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddNewMove, &AddNewMove_Parms, NULL );

	pFnAddNewMove->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.HasItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAi::HasItems ( )
{
	static UFunction* pFnHasItems = NULL;

	if ( ! pFnHasItems )
		pFnHasItems = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.HasItems" );

	ANowAtlasAvatarAi_execHasItems_Parms HasItems_Parms;

	pFnHasItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasItems, &HasItems_Parms, NULL );

	pFnHasItems->FunctionFlags |= 0x400;

	return HasItems_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetInitalRotation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAi::GetInitalRotation ( )
{
	static UFunction* pFnGetInitalRotation = NULL;

	if ( ! pFnGetInitalRotation )
		pFnGetInitalRotation = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetInitalRotation" );

	ANowAtlasAvatarAi_execGetInitalRotation_Parms GetInitalRotation_Parms;

	pFnGetInitalRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInitalRotation, &GetInitalRotation_Parms, NULL );

	pFnGetInitalRotation->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.IsAi
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAi::IsAi ( )
{
	static UFunction* pFnIsAi = NULL;

	if ( ! pFnIsAi )
		pFnIsAi = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.IsAi" );

	ANowAtlasAvatarAi_execIsAi_Parms IsAi_Parms;

	pFnIsAi->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAi, &IsAi_Parms, NULL );

	pFnIsAi->FunctionFlags |= 0x400;

	return IsAi_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.UpdateLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAi::UpdateLevel ( )
{
	static UFunction* pFnUpdateLevel = NULL;

	if ( ! pFnUpdateLevel )
		pFnUpdateLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.UpdateLevel" );

	ANowAtlasAvatarAi_execUpdateLevel_Parms UpdateLevel_Parms;

	pFnUpdateLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateLevel, &UpdateLevel_Parms, NULL );

	pFnUpdateLevel->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatarAi::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.SetContentInfo" );

	ANowAtlasAvatarAi_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.GetPointCost
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetPointCost ( )
{
	static UFunction* pFnGetPointCost = NULL;

	if ( ! pFnGetPointCost )
		pFnGetPointCost = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetPointCost" );

	ANowAtlasAvatarAi_execGetPointCost_Parms GetPointCost_Parms;

	pFnGetPointCost->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPointCost, &GetPointCost_Parms, NULL );

	pFnGetPointCost->FunctionFlags |= 0x400;

	return GetPointCost_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetLevelLock
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetLevelLock ( )
{
	static UFunction* pFnGetLevelLock = NULL;

	if ( ! pFnGetLevelLock )
		pFnGetLevelLock = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetLevelLock" );

	ANowAtlasAvatarAi_execGetLevelLock_Parms GetLevelLock_Parms;

	pFnGetLevelLock->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLevelLock, &GetLevelLock_Parms, NULL );

	pFnGetLevelLock->FunctionFlags |= 0x400;

	return GetLevelLock_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetWei
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetWei ( )
{
	static UFunction* pFnGetWei = NULL;

	if ( ! pFnGetWei )
		pFnGetWei = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetWei" );

	ANowAtlasAvatarAi_execGetWei_Parms GetWei_Parms;

	pFnGetWei->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWei, &GetWei_Parms, NULL );

	pFnGetWei->FunctionFlags |= 0x400;

	return GetWei_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetSiz
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetSiz ( )
{
	static UFunction* pFnGetSiz = NULL;

	if ( ! pFnGetSiz )
		pFnGetSiz = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetSiz" );

	ANowAtlasAvatarAi_execGetSiz_Parms GetSiz_Parms;

	pFnGetSiz->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSiz, &GetSiz_Parms, NULL );

	pFnGetSiz->FunctionFlags |= 0x400;

	return GetSiz_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetSpe
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetSpe ( )
{
	static UFunction* pFnGetSpe = NULL;

	if ( ! pFnGetSpe )
		pFnGetSpe = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetSpe" );

	ANowAtlasAvatarAi_execGetSpe_Parms GetSpe_Parms;

	pFnGetSpe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpe, &GetSpe_Parms, NULL );

	pFnGetSpe->FunctionFlags |= 0x400;

	return GetSpe_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetInt ( )
{
	static UFunction* pFnGetInt = NULL;

	if ( ! pFnGetInt )
		pFnGetInt = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetInt" );

	ANowAtlasAvatarAi_execGetInt_Parms GetInt_Parms;

	pFnGetInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInt, &GetInt_Parms, NULL );

	pFnGetInt->FunctionFlags |= 0x400;

	return GetInt_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetPsy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetPsy ( )
{
	static UFunction* pFnGetPsy = NULL;

	if ( ! pFnGetPsy )
		pFnGetPsy = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetPsy" );

	ANowAtlasAvatarAi_execGetPsy_Parms GetPsy_Parms;

	pFnGetPsy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPsy, &GetPsy_Parms, NULL );

	pFnGetPsy->FunctionFlags |= 0x400;

	return GetPsy_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetCon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetCon ( )
{
	static UFunction* pFnGetCon = NULL;

	if ( ! pFnGetCon )
		pFnGetCon = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetCon" );

	ANowAtlasAvatarAi_execGetCon_Parms GetCon_Parms;

	pFnGetCon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCon, &GetCon_Parms, NULL );

	pFnGetCon->FunctionFlags |= 0x400;

	return GetCon_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetDex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetDex ( )
{
	static UFunction* pFnGetDex = NULL;

	if ( ! pFnGetDex )
		pFnGetDex = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetDex" );

	ANowAtlasAvatarAi_execGetDex_Parms GetDex_Parms;

	pFnGetDex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDex, &GetDex_Parms, NULL );

	pFnGetDex->FunctionFlags |= 0x400;

	return GetDex_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetStr
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetStr ( )
{
	static UFunction* pFnGetStr = NULL;

	if ( ! pFnGetStr )
		pFnGetStr = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetStr" );

	ANowAtlasAvatarAi_execGetStr_Parms GetStr_Parms;

	pFnGetStr->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStr, &GetStr_Parms, NULL );

	pFnGetStr->FunctionFlags |= 0x400;

	return GetStr_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetHealthMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetHealthMax ( )
{
	static UFunction* pFnGetHealthMax = NULL;

	if ( ! pFnGetHealthMax )
		pFnGetHealthMax = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetHealthMax" );

	ANowAtlasAvatarAi_execGetHealthMax_Parms GetHealthMax_Parms;

	pFnGetHealthMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealthMax, &GetHealthMax_Parms, NULL );

	pFnGetHealthMax->FunctionFlags |= 0x400;

	return GetHealthMax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetHealth ( )
{
	static UFunction* pFnGetHealth = NULL;

	if ( ! pFnGetHealth )
		pFnGetHealth = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetHealth" );

	ANowAtlasAvatarAi_execGetHealth_Parms GetHealth_Parms;

	pFnGetHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealth, &GetHealth_Parms, NULL );

	pFnGetHealth->FunctionFlags |= 0x400;

	return GetHealth_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

	static UFunction* pFnGetLevel = NULL;
int ANowAtlasAvatarAi::GetLevel ( )
{

	if ( ! pFnGetLevel )
		pFnGetLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetLevel" );

	ANowAtlasAvatarAi_execGetLevel_Parms GetLevel_Parms;

	pFnGetLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLevel, &GetLevel_Parms, NULL );

	pFnGetLevel->FunctionFlags |= 0x400;

	return GetLevel_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetSkillName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAi::GetSkillName ( )
{
	static UFunction* pFnGetSkillName = NULL;

	if ( ! pFnGetSkillName )
		pFnGetSkillName = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetSkillName" );

	ANowAtlasAvatarAi_execGetSkillName_Parms GetSkillName_Parms;

	pFnGetSkillName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillName, &GetSkillName_Parms, NULL );

	pFnGetSkillName->FunctionFlags |= 0x400;

	return GetSkillName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetHunger
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetHunger ( )
{
	static UFunction* pFnGetHunger = NULL;

	if ( ! pFnGetHunger )
		pFnGetHunger = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetHunger" );

	ANowAtlasAvatarAi_execGetHunger_Parms GetHunger_Parms;

	pFnGetHunger->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHunger, &GetHunger_Parms, NULL );

	pFnGetHunger->FunctionFlags |= 0x400;

	return GetHunger_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetAttackInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FsAiAttackTypes > vAiAttacks                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ANowAtlasAvatarAi::GetAttackInfo ( TArray< struct FsAiAttackTypes >* vAiAttacks )
{
	static UFunction* pFnGetAttackInfo = NULL;

	if ( ! pFnGetAttackInfo )
		pFnGetAttackInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetAttackInfo" );

	ANowAtlasAvatarAi_execGetAttackInfo_Parms GetAttackInfo_Parms;

	pFnGetAttackInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAttackInfo, &GetAttackInfo_Parms, NULL );

	pFnGetAttackInfo->FunctionFlags |= 0x400;

	if ( vAiAttacks )
		memcpy ( vAiAttacks, &GetAttackInfo_Parms.vAiAttacks, 0xC );
};

// Function NowGame.NowAtlasAvatarAi.GetLoyalty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAi::GetLoyalty ( )
{
	static UFunction* pFnGetLoyalty = NULL;

	if ( ! pFnGetLoyalty )
		pFnGetLoyalty = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetLoyalty" );

	ANowAtlasAvatarAi_execGetLoyalty_Parms GetLoyalty_Parms;

	pFnGetLoyalty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLoyalty, &GetLoyalty_Parms, NULL );

	pFnGetLoyalty->FunctionFlags |= 0x400;

	return GetLoyalty_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.SetIdleLook
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAi::SetIdleLook ( )
{
	static UFunction* pFnSetIdleLook = NULL;

	if ( ! pFnSetIdleLook )
		pFnSetIdleLook = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.SetIdleLook" );

	ANowAtlasAvatarAi_execSetIdleLook_Parms SetIdleLook_Parms;

	pFnSetIdleLook->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetIdleLook, &SetIdleLook_Parms, NULL );

	pFnSetIdleLook->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.GetCubicSize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatarAi::GetCubicSize ( )
{
	static UFunction* pFnGetCubicSize = NULL;

	if ( ! pFnGetCubicSize )
		pFnGetCubicSize = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetCubicSize" );

	ANowAtlasAvatarAi_execGetCubicSize_Parms GetCubicSize_Parms;

	pFnGetCubicSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCubicSize, &GetCubicSize_Parms, NULL );

	pFnGetCubicSize->FunctionFlags |= 0x400;

	return GetCubicSize_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GroundCheck
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 NewPos                         ( CPF_Parm )

struct FVector ANowAtlasAvatarAi::GroundCheck ( struct FVector NewPos )
{
	static UFunction* pFnGroundCheck = NULL;

	if ( ! pFnGroundCheck )
		pFnGroundCheck = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GroundCheck" );

	ANowAtlasAvatarAi_execGroundCheck_Parms GroundCheck_Parms;
	memcpy ( &GroundCheck_Parms.NewPos, &NewPos, 0xC );

	pFnGroundCheck->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGroundCheck, &GroundCheck_Parms, NULL );

	pFnGroundCheck->FunctionFlags |= 0x400;

	return GroundCheck_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.GetMoveLength
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatarAi::GetMoveLength ( )
{
	static UFunction* pFnGetMoveLength = NULL;

	if ( ! pFnGetMoveLength )
		pFnGetMoveLength = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetMoveLength" );

	ANowAtlasAvatarAi_execGetMoveLength_Parms GetMoveLength_Parms;

	pFnGetMoveLength->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMoveLength, &GetMoveLength_Parms, NULL );

	pFnGetMoveLength->FunctionFlags |= 0x400;

	return GetMoveLength_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.ResetMoveType
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAi::ResetMoveType ( )
{
	static UFunction* pFnResetMoveType = NULL;

	if ( ! pFnResetMoveType )
		pFnResetMoveType = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.ResetMoveType" );

	ANowAtlasAvatarAi_execResetMoveType_Parms ResetMoveType_Parms;

	pFnResetMoveType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetMoveType, &ResetMoveType_Parms, NULL );

	pFnResetMoveType->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.GetAiGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAi::GetAiGuid ( )
{
	static UFunction* pFnGetAiGuid = NULL;

	if ( ! pFnGetAiGuid )
		pFnGetAiGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetAiGuid" );

	ANowAtlasAvatarAi_execGetAiGuid_Parms GetAiGuid_Parms;

	pFnGetAiGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAiGuid, &GetAiGuid_Parms, NULL );

	pFnGetAiGuid->FunctionFlags |= 0x400;

	return GetAiGuid_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAi.StartSpawnEffect
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAi::StartSpawnEffect ( )
{
	static UFunction* pFnStartSpawnEffect = NULL;

	if ( ! pFnStartSpawnEffect )
		pFnStartSpawnEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.StartSpawnEffect" );

	ANowAtlasAvatarAi_execStartSpawnEffect_Parms StartSpawnEffect_Parms;

	pFnStartSpawnEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartSpawnEffect, &StartSpawnEffect_Parms, NULL );

	pFnStartSpawnEffect->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.UpdateAiTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAi::UpdateAiTarget ( )
{
	static UFunction* pFnUpdateAiTarget = NULL;

	if ( ! pFnUpdateAiTarget )
		pFnUpdateAiTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.UpdateAiTarget" );

	ANowAtlasAvatarAi_execUpdateAiTarget_Parms UpdateAiTarget_Parms;

	pFnUpdateAiTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAiTarget, &UpdateAiTarget_Parms, NULL );

	pFnUpdateAiTarget->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.GetAndCreateBody
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAi::GetAndCreateBody ( unsigned long bReInit )
{
	static UFunction* pFnGetAndCreateBody = NULL;

	if ( ! pFnGetAndCreateBody )
		pFnGetAndCreateBody = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetAndCreateBody" );

	ANowAtlasAvatarAi_execGetAndCreateBody_Parms GetAndCreateBody_Parms;
	GetAndCreateBody_Parms.bReInit = bReInit;

	pFnGetAndCreateBody->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateBody, &GetAndCreateBody_Parms, NULL );

	pFnGetAndCreateBody->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAi.GetServerPos
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowAtlasAvatarAi::GetServerPos ( )
{
	static UFunction* pFnGetServerPos = NULL;

	if ( ! pFnGetServerPos )
		pFnGetServerPos = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAi.GetServerPos" );

	ANowAtlasAvatarAi_execGetServerPos_Parms GetServerPos_Parms;

	pFnGetServerPos->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetServerPos, &GetServerPos_Parms, NULL );

	pFnGetServerPos->FunctionFlags |= 0x400;

	return GetServerPos_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetNowPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowAtlasAvatarAiDynamic::eventGetNowPC ( )
{
	static UFunction* pFnGetNowPC = NULL;

	if ( ! pFnGetNowPC )
		pFnGetNowPC = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetNowPC" );

	ANowAtlasAvatarAiDynamic_eventGetNowPC_Parms GetNowPC_Parms;

	this->ProcessEvent ( pFnGetNowPC, &GetNowPC_Parms, NULL );

	return GetNowPC_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.SetDynamicDrawScale
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewDrawScale                   ( CPF_Parm )

void ANowAtlasAvatarAiDynamic::eventSetDynamicDrawScale ( int NewDrawScale )
{
	static UFunction* pFnSetDynamicDrawScale = NULL;

	if ( ! pFnSetDynamicDrawScale )
		pFnSetDynamicDrawScale = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.SetDynamicDrawScale" );

	ANowAtlasAvatarAiDynamic_eventSetDynamicDrawScale_Parms SetDynamicDrawScale_Parms;
	SetDynamicDrawScale_Parms.NewDrawScale = NewDrawScale;

	this->ProcessEvent ( pFnSetDynamicDrawScale, &SetDynamicDrawScale_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamic.StopPhatSim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamic::eventStopPhatSim ( )
{
	static UFunction* pFnStopPhatSim = NULL;

	if ( ! pFnStopPhatSim )
		pFnStopPhatSim = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.StopPhatSim" );

	ANowAtlasAvatarAiDynamic_eventStopPhatSim_Parms StopPhatSim_Parms;

	this->ProcessEvent ( pFnStopPhatSim, &StopPhatSim_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamic.StartPhatSim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamic::eventStartPhatSim ( )
{
	static UFunction* pFnStartPhatSim = NULL;

	if ( ! pFnStartPhatSim )
		pFnStartPhatSim = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.StartPhatSim" );

	ANowAtlasAvatarAiDynamic_eventStartPhatSim_Parms StartPhatSim_Parms;

	this->ProcessEvent ( pFnStartPhatSim, &StartPhatSim_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamic.SetFeatureParam
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// int                            FeatureIndex                   ( CPF_Parm )
// int                            ByteValue                      ( CPF_Parm )
// float                          Strength                       ( CPF_Parm )
// unsigned long                  bHair                          ( CPF_Parm )
// class UTexture*                NewTexture                     ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 NewColor                       ( CPF_OptionalParm | CPF_Parm )
// class UMaterialInstance*       NewMaterial                    ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiDynamic::eventSetFeatureParam ( int FeatureIndex, int ByteValue, float Strength, unsigned long bHair, class UTexture* NewTexture, struct FVector NewColor, class UMaterialInstance* NewMaterial )
{
	static UFunction* pFnSetFeatureParam = NULL;

	if ( ! pFnSetFeatureParam )
		pFnSetFeatureParam = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.SetFeatureParam" );

	ANowAtlasAvatarAiDynamic_eventSetFeatureParam_Parms SetFeatureParam_Parms;
	SetFeatureParam_Parms.FeatureIndex = FeatureIndex;
	SetFeatureParam_Parms.ByteValue = ByteValue;
	SetFeatureParam_Parms.Strength = Strength;
	SetFeatureParam_Parms.bHair = bHair;
	SetFeatureParam_Parms.NewTexture = NewTexture;
	memcpy ( &SetFeatureParam_Parms.NewColor, &NewColor, 0xC );
	SetFeatureParam_Parms.NewMaterial = NewMaterial;

	this->ProcessEvent ( pFnSetFeatureParam, &SetFeatureParam_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamic.SetBoneParam
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            FeatureIndex                   ( CPF_Parm )
// int                            ByteValue                      ( CPF_Parm )

void ANowAtlasAvatarAiDynamic::eventSetBoneParam ( int FeatureIndex, int ByteValue )
{
	static UFunction* pFnSetBoneParam = NULL;

	if ( ! pFnSetBoneParam )
		pFnSetBoneParam = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.SetBoneParam" );

	ANowAtlasAvatarAiDynamic_eventSetBoneParam_Parms SetBoneParam_Parms;
	SetBoneParam_Parms.FeatureIndex = FeatureIndex;
	SetBoneParam_Parms.ByteValue = ByteValue;

	this->ProcessEvent ( pFnSetBoneParam, &SetBoneParam_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamic.CacheDynamicFeatureBones
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamic::eventCacheDynamicFeatureBones ( )
{
	static UFunction* pFnCacheDynamicFeatureBones = NULL;

	if ( ! pFnCacheDynamicFeatureBones )
		pFnCacheDynamicFeatureBones = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.CacheDynamicFeatureBones" );

	ANowAtlasAvatarAiDynamic_eventCacheDynamicFeatureBones_Parms CacheDynamicFeatureBones_Parms;

	this->ProcessEvent ( pFnCacheDynamicFeatureBones, &CacheDynamicFeatureBones_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamic.Tick
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAiDynamic::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.Tick" );

	ANowAtlasAvatarAiDynamic_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetInfo
// [0x00420002] 
// Parameters infos:
// TArray< struct FString >       sLogArray                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ANowAtlasAvatarAiDynamic::GetInfo ( TArray< struct FString >* sLogArray )
{
	static UFunction* pFnGetInfo = NULL;

	if ( ! pFnGetInfo )
		pFnGetInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetInfo" );

	ANowAtlasAvatarAiDynamic_execGetInfo_Parms GetInfo_Parms;

	this->ProcessEvent ( pFnGetInfo, &GetInfo_Parms, NULL );

	if ( sLogArray )
		memcpy ( sLogArray, &GetInfo_Parms.sLogArray, 0xC );
};

// Function NowGame.NowAtlasAvatarAiDynamic.AddMeToManager
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bForceGenerate                 ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiDynamic::eventAddMeToManager ( unsigned long bForceGenerate )
{
	static UFunction* pFnAddMeToManager = NULL;

	if ( ! pFnAddMeToManager )
		pFnAddMeToManager = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.AddMeToManager" );

	ANowAtlasAvatarAiDynamic_eventAddMeToManager_Parms AddMeToManager_Parms;
	AddMeToManager_Parms.bForceGenerate = bForceGenerate;

	this->ProcessEvent ( pFnAddMeToManager, &AddMeToManager_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamic.CreateAndSetMountBrain
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamic::eventCreateAndSetMountBrain ( )
{
	static UFunction* pFnCreateAndSetMountBrain = NULL;

	if ( ! pFnCreateAndSetMountBrain )
		pFnCreateAndSetMountBrain = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.CreateAndSetMountBrain" );

	ANowAtlasAvatarAiDynamic_eventCreateAndSetMountBrain_Parms CreateAndSetMountBrain_Parms;

	this->ProcessEvent ( pFnCreateAndSetMountBrain, &CreateAndSetMountBrain_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetWei
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiDynamic::GetWei ( )
{
	static UFunction* pFnGetWei = NULL;

	if ( ! pFnGetWei )
		pFnGetWei = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetWei" );

	ANowAtlasAvatarAiDynamic_execGetWei_Parms GetWei_Parms;

	pFnGetWei->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWei, &GetWei_Parms, NULL );

	pFnGetWei->FunctionFlags |= 0x400;

	return GetWei_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetSiz
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiDynamic::GetSiz ( )
{
	static UFunction* pFnGetSiz = NULL;

	if ( ! pFnGetSiz )
		pFnGetSiz = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetSiz" );

	ANowAtlasAvatarAiDynamic_execGetSiz_Parms GetSiz_Parms;

	pFnGetSiz->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSiz, &GetSiz_Parms, NULL );

	pFnGetSiz->FunctionFlags |= 0x400;

	return GetSiz_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetSpe
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiDynamic::GetSpe ( )
{
	static UFunction* pFnGetSpe = NULL;

	if ( ! pFnGetSpe )
		pFnGetSpe = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetSpe" );

	ANowAtlasAvatarAiDynamic_execGetSpe_Parms GetSpe_Parms;

	pFnGetSpe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpe, &GetSpe_Parms, NULL );

	pFnGetSpe->FunctionFlags |= 0x400;

	return GetSpe_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiDynamic::GetInt ( )
{
	static UFunction* pFnGetInt = NULL;

	if ( ! pFnGetInt )
		pFnGetInt = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetInt" );

	ANowAtlasAvatarAiDynamic_execGetInt_Parms GetInt_Parms;

	pFnGetInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInt, &GetInt_Parms, NULL );

	pFnGetInt->FunctionFlags |= 0x400;

	return GetInt_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetPsy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiDynamic::GetPsy ( )
{
	static UFunction* pFnGetPsy = NULL;

	if ( ! pFnGetPsy )
		pFnGetPsy = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetPsy" );

	ANowAtlasAvatarAiDynamic_execGetPsy_Parms GetPsy_Parms;

	pFnGetPsy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPsy, &GetPsy_Parms, NULL );

	pFnGetPsy->FunctionFlags |= 0x400;

	return GetPsy_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetCon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiDynamic::GetCon ( )
{
	static UFunction* pFnGetCon = NULL;

	if ( ! pFnGetCon )
		pFnGetCon = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetCon" );

	ANowAtlasAvatarAiDynamic_execGetCon_Parms GetCon_Parms;

	pFnGetCon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCon, &GetCon_Parms, NULL );

	pFnGetCon->FunctionFlags |= 0x400;

	return GetCon_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetDex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiDynamic::GetDex ( )
{
	static UFunction* pFnGetDex = NULL;

	if ( ! pFnGetDex )
		pFnGetDex = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetDex" );

	ANowAtlasAvatarAiDynamic_execGetDex_Parms GetDex_Parms;

	pFnGetDex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDex, &GetDex_Parms, NULL );

	pFnGetDex->FunctionFlags |= 0x400;

	return GetDex_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetStr
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiDynamic::GetStr ( )
{
	static UFunction* pFnGetStr = NULL;

	if ( ! pFnGetStr )
		pFnGetStr = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetStr" );

	ANowAtlasAvatarAiDynamic_execGetStr_Parms GetStr_Parms;

	pFnGetStr->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStr, &GetStr_Parms, NULL );

	pFnGetStr->FunctionFlags |= 0x400;

	return GetStr_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetItemMods
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiDynamic::GetItemMods ( )
{
	static UFunction* pFnGetItemMods = NULL;

	if ( ! pFnGetItemMods )
		pFnGetItemMods = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetItemMods" );

	ANowAtlasAvatarAiDynamic_execGetItemMods_Parms GetItemMods_Parms;

	pFnGetItemMods->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemMods, &GetItemMods_Parms, NULL );

	pFnGetItemMods->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamic.UpdateStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiDynamic::UpdateStats ( )
{
	static UFunction* pFnUpdateStats = NULL;

	if ( ! pFnUpdateStats )
		pFnUpdateStats = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.UpdateStats" );

	ANowAtlasAvatarAiDynamic_execUpdateStats_Parms UpdateStats_Parms;

	pFnUpdateStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateStats, &UpdateStats_Parms, NULL );

	pFnUpdateStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamic.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatarAiDynamic::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.SetContentInfo" );

	ANowAtlasAvatarAiDynamic_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamic.SetBodyParam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            I                              ( CPF_Parm )
// int                            newValue                       ( CPF_Parm )

void ANowAtlasAvatarAiDynamic::SetBodyParam ( int I, int newValue )
{
	static UFunction* pFnSetBodyParam = NULL;

	if ( ! pFnSetBodyParam )
		pFnSetBodyParam = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.SetBodyParam" );

	ANowAtlasAvatarAiDynamic_execSetBodyParam_Parms SetBodyParam_Parms;
	SetBodyParam_Parms.I = I;
	SetBodyParam_Parms.newValue = newValue;

	pFnSetBodyParam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBodyParam, &SetBodyParam_Parms, NULL );

	pFnSetBodyParam->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UMaterialInstance*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TxtGroup                       ( CPF_Parm )
// int                            TxtIndex                       ( CPF_Parm )

class UMaterialInstance* ANowAtlasAvatarAiDynamic::GetMaterial ( int TxtGroup, int TxtIndex )
{
	static UFunction* pFnGetMaterial = NULL;

	if ( ! pFnGetMaterial )
		pFnGetMaterial = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetMaterial" );

	ANowAtlasAvatarAiDynamic_execGetMaterial_Parms GetMaterial_Parms;
	GetMaterial_Parms.TxtGroup = TxtGroup;
	GetMaterial_Parms.TxtIndex = TxtIndex;

	pFnGetMaterial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterial, &GetMaterial_Parms, NULL );

	pFnGetMaterial->FunctionFlags |= 0x400;

	return GetMaterial_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetTexture
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UTexture*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TxtGroup                       ( CPF_Parm )
// int                            TxtIndex                       ( CPF_Parm )

class UTexture* ANowAtlasAvatarAiDynamic::GetTexture ( int TxtGroup, int TxtIndex )
{
	static UFunction* pFnGetTexture = NULL;

	if ( ! pFnGetTexture )
		pFnGetTexture = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetTexture" );

	ANowAtlasAvatarAiDynamic_execGetTexture_Parms GetTexture_Parms;
	GetTexture_Parms.TxtGroup = TxtGroup;
	GetTexture_Parms.TxtIndex = TxtIndex;

	pFnGetTexture->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTexture, &GetTexture_Parms, NULL );

	pFnGetTexture->FunctionFlags |= 0x400;

	return GetTexture_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetLinearColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ColorGroup                     ( CPF_Parm )
// int                            ColorIndex                     ( CPF_Parm )

struct FVector ANowAtlasAvatarAiDynamic::GetLinearColor ( int ColorGroup, int ColorIndex )
{
	static UFunction* pFnGetLinearColor = NULL;

	if ( ! pFnGetLinearColor )
		pFnGetLinearColor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetLinearColor" );

	ANowAtlasAvatarAiDynamic_execGetLinearColor_Parms GetLinearColor_Parms;
	GetLinearColor_Parms.ColorGroup = ColorGroup;
	GetLinearColor_Parms.ColorIndex = ColorIndex;

	pFnGetLinearColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLinearColor, &GetLinearColor_Parms, NULL );

	pFnGetLinearColor->FunctionFlags |= 0x400;

	return GetLinearColor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetBodyStringAsBinary
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiDynamic::GetBodyStringAsBinary ( )
{
	static UFunction* pFnGetBodyStringAsBinary = NULL;

	if ( ! pFnGetBodyStringAsBinary )
		pFnGetBodyStringAsBinary = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetBodyStringAsBinary" );

	ANowAtlasAvatarAiDynamic_execGetBodyStringAsBinary_Parms GetBodyStringAsBinary_Parms;

	pFnGetBodyStringAsBinary->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBodyStringAsBinary, &GetBodyStringAsBinary_Parms, NULL );

	pFnGetBodyStringAsBinary->FunctionFlags |= 0x400;

	return GetBodyStringAsBinary_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.RecalcStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiDynamic::RecalcStats ( )
{
	static UFunction* pFnRecalcStats = NULL;

	if ( ! pFnRecalcStats )
		pFnRecalcStats = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.RecalcStats" );

	ANowAtlasAvatarAiDynamic_execRecalcStats_Parms RecalcStats_Parms;

	pFnRecalcStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRecalcStats, &RecalcStats_Parms, NULL );

	pFnRecalcStats->FunctionFlags |= 0x400;

	return RecalcStats_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetStatString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiDynamic::GetStatString ( )
{
	static UFunction* pFnGetStatString = NULL;

	if ( ! pFnGetStatString )
		pFnGetStatString = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetStatString" );

	ANowAtlasAvatarAiDynamic_execGetStatString_Parms GetStatString_Parms;

	pFnGetStatString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatString, &GetStatString_Parms, NULL );

	pFnGetStatString->FunctionFlags |= 0x400;

	return GetStatString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetArmorString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiDynamic::GetArmorString ( )
{
	static UFunction* pFnGetArmorString = NULL;

	if ( ! pFnGetArmorString )
		pFnGetArmorString = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetArmorString" );

	ANowAtlasAvatarAiDynamic_execGetArmorString_Parms GetArmorString_Parms;

	pFnGetArmorString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetArmorString, &GetArmorString_Parms, NULL );

	pFnGetArmorString->FunctionFlags |= 0x400;

	return GetArmorString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetBodyString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiDynamic::GetBodyString ( )
{
	static UFunction* pFnGetBodyString = NULL;

	if ( ! pFnGetBodyString )
		pFnGetBodyString = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetBodyString" );

	ANowAtlasAvatarAiDynamic_execGetBodyString_Parms GetBodyString_Parms;

	pFnGetBodyString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBodyString, &GetBodyString_Parms, NULL );

	pFnGetBodyString->FunctionFlags |= 0x400;

	return GetBodyString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetAndSetStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiDynamic::GetAndSetStats ( )
{
	static UFunction* pFnGetAndSetStats = NULL;

	if ( ! pFnGetAndSetStats )
		pFnGetAndSetStats = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetAndSetStats" );

	ANowAtlasAvatarAiDynamic_execGetAndSetStats_Parms GetAndSetStats_Parms;

	pFnGetAndSetStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetStats, &GetAndSetStats_Parms, NULL );

	pFnGetAndSetStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetAndCreateArmor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiDynamic::GetAndCreateArmor ( )
{
	static UFunction* pFnGetAndCreateArmor = NULL;

	if ( ! pFnGetAndCreateArmor )
		pFnGetAndCreateArmor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetAndCreateArmor" );

	ANowAtlasAvatarAiDynamic_execGetAndCreateArmor_Parms GetAndCreateArmor_Parms;

	pFnGetAndCreateArmor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateArmor, &GetAndCreateArmor_Parms, NULL );

	pFnGetAndCreateArmor->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamic.GetAndCreateBody
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bReInit                        ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiDynamic::GetAndCreateBody ( unsigned long bReInit )
{
	static UFunction* pFnGetAndCreateBody = NULL;

	if ( ! pFnGetAndCreateBody )
		pFnGetAndCreateBody = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamic.GetAndCreateBody" );

	ANowAtlasAvatarAiDynamic_execGetAndCreateBody_Parms GetAndCreateBody_Parms;
	GetAndCreateBody_Parms.bReInit = bReInit;

	pFnGetAndCreateBody->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateBody, &GetAndCreateBody_Parms, NULL );

	pFnGetAndCreateBody->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.SetHasPhysAnimation
// [0x00020002] 
// Parameters infos:
// unsigned long                  newValue                       ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::SetHasPhysAnimation ( unsigned long newValue )
{
	static UFunction* pFnSetHasPhysAnimation = NULL;

	if ( ! pFnSetHasPhysAnimation )
		pFnSetHasPhysAnimation = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.SetHasPhysAnimation" );

	ANowAtlasAvatarAiDynamicMount_execSetHasPhysAnimation_Parms SetHasPhysAnimation_Parms;
	SetHasPhysAnimation_Parms.newValue = newValue;

	this->ProcessEvent ( pFnSetHasPhysAnimation, &SetHasPhysAnimation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetNowPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowAtlasAvatarAiDynamicMount::eventGetNowPC ( )
{
	static UFunction* pFnGetNowPC = NULL;

	if ( ! pFnGetNowPC )
		pFnGetNowPC = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetNowPC" );

	ANowAtlasAvatarAiDynamicMount_eventGetNowPC_Parms GetNowPC_Parms;

	this->ProcessEvent ( pFnGetNowPC, &GetNowPC_Parms, NULL );

	return GetNowPC_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.StopsProjectile
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AProjectile*             P                              ( CPF_Parm )

bool ANowAtlasAvatarAiDynamicMount::StopsProjectile ( class AProjectile* P )
{
	static UFunction* pFnStopsProjectile = NULL;

	if ( ! pFnStopsProjectile )
		pFnStopsProjectile = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.StopsProjectile" );

	ANowAtlasAvatarAiDynamicMount_execStopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;

	this->ProcessEvent ( pFnStopsProjectile, &StopsProjectile_Parms, NULL );

	return StopsProjectile_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.IsCombatTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiDynamicMount::IsCombatTarget ( )
{
	static UFunction* pFnIsCombatTarget = NULL;

	if ( ! pFnIsCombatTarget )
		pFnIsCombatTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.IsCombatTarget" );

	ANowAtlasAvatarAiDynamicMount_execIsCombatTarget_Parms IsCombatTarget_Parms;

	this->ProcessEvent ( pFnIsCombatTarget, &IsCombatTarget_Parms, NULL );

	return IsCombatTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetAnimNodePointers
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// int                            WhatType                       ( CPF_Parm )
// class UAnimNodePlayCustomAnim* AnimNode                       ( CPF_Parm | CPF_OutParm )
// class UAnimNodeSequence*       AnimSeq                        ( CPF_Parm | CPF_OutParm )

void ANowAtlasAvatarAiDynamicMount::eventGetAnimNodePointers ( int WhatType, class UAnimNodePlayCustomAnim** AnimNode, class UAnimNodeSequence** AnimSeq )
{
	static UFunction* pFnGetAnimNodePointers = NULL;

	if ( ! pFnGetAnimNodePointers )
		pFnGetAnimNodePointers = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetAnimNodePointers" );

	ANowAtlasAvatarAiDynamicMount_eventGetAnimNodePointers_Parms GetAnimNodePointers_Parms;
	GetAnimNodePointers_Parms.WhatType = WhatType;

	this->ProcessEvent ( pFnGetAnimNodePointers, &GetAnimNodePointers_Parms, NULL );

	if ( AnimNode )
		*AnimNode = GetAnimNodePointers_Parms.AnimNode;

	if ( AnimSeq )
		*AnimSeq = GetAnimNodePointers_Parms.AnimSeq;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.SetDynamicDrawScale
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewDrawScale                   ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::eventSetDynamicDrawScale ( int NewDrawScale )
{
	static UFunction* pFnSetDynamicDrawScale = NULL;

	if ( ! pFnSetDynamicDrawScale )
		pFnSetDynamicDrawScale = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.SetDynamicDrawScale" );

	ANowAtlasAvatarAiDynamicMount_eventSetDynamicDrawScale_Parms SetDynamicDrawScale_Parms;
	SetDynamicDrawScale_Parms.NewDrawScale = NewDrawScale;

	this->ProcessEvent ( pFnSetDynamicDrawScale, &SetDynamicDrawScale_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.ResetMinorAddAnimation
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::ResetMinorAddAnimation ( )
{
	static UFunction* pFnResetMinorAddAnimation = NULL;

	if ( ! pFnResetMinorAddAnimation )
		pFnResetMinorAddAnimation = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.ResetMinorAddAnimation" );

	ANowAtlasAvatarAiDynamicMount_execResetMinorAddAnimation_Parms ResetMinorAddAnimation_Parms;

	this->ProcessEvent ( pFnResetMinorAddAnimation, &ResetMinorAddAnimation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.PlayMinorAddAnimation
// [0x00020002] 
// Parameters infos:
// struct FName                   WhatAnim                       ( CPF_Parm )
// unsigned long                  bOverride                      ( CPF_Parm )
// float                          Time                           ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::PlayMinorAddAnimation ( struct FName WhatAnim, unsigned long bOverride, float Time )
{
	static UFunction* pFnPlayMinorAddAnimation = NULL;

	if ( ! pFnPlayMinorAddAnimation )
		pFnPlayMinorAddAnimation = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.PlayMinorAddAnimation" );

	ANowAtlasAvatarAiDynamicMount_execPlayMinorAddAnimation_Parms PlayMinorAddAnimation_Parms;
	memcpy ( &PlayMinorAddAnimation_Parms.WhatAnim, &WhatAnim, 0x8 );
	PlayMinorAddAnimation_Parms.bOverride = bOverride;
	PlayMinorAddAnimation_Parms.Time = Time;

	this->ProcessEvent ( pFnPlayMinorAddAnimation, &PlayMinorAddAnimation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.Rear
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::Rear ( )
{
	static UFunction* pFnRear = NULL;

	if ( ! pFnRear )
		pFnRear = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.Rear" );

	ANowAtlasAvatarAiDynamicMount_execRear_Parms Rear_Parms;

	this->ProcessEvent ( pFnRear, &Rear_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetMountJumpZ
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatarAiDynamicMount::GetMountJumpZ ( )
{
	static UFunction* pFnGetMountJumpZ = NULL;

	if ( ! pFnGetMountJumpZ )
		pFnGetMountJumpZ = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetMountJumpZ" );

	ANowAtlasAvatarAiDynamicMount_execGetMountJumpZ_Parms GetMountJumpZ_Parms;

	this->ProcessEvent ( pFnGetMountJumpZ, &GetMountJumpZ_Parms, NULL );

	return GetMountJumpZ_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetMinSpeed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatarAiDynamicMount::eventGetMinSpeed ( )
{
	static UFunction* pFnGetMinSpeed = NULL;

	if ( ! pFnGetMinSpeed )
		pFnGetMinSpeed = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetMinSpeed" );

	ANowAtlasAvatarAiDynamicMount_eventGetMinSpeed_Parms GetMinSpeed_Parms;

	this->ProcessEvent ( pFnGetMinSpeed, &GetMinSpeed_Parms, NULL );

	return GetMinSpeed_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetMaxSpeed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowAtlasAvatarAiDynamicMount::eventGetMaxSpeed ( )
{
	static UFunction* pFnGetMaxSpeed = NULL;

	if ( ! pFnGetMaxSpeed )
		pFnGetMaxSpeed = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetMaxSpeed" );

	ANowAtlasAvatarAiDynamicMount_eventGetMaxSpeed_Parms GetMaxSpeed_Parms;

	this->ProcessEvent ( pFnGetMaxSpeed, &GetMaxSpeed_Parms, NULL );

	return GetMaxSpeed_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.SpawnProjectileEffect
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventSpawnProjectileEffect ( )
{
	static UFunction* pFnSpawnProjectileEffect = NULL;

	if ( ! pFnSpawnProjectileEffect )
		pFnSpawnProjectileEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.SpawnProjectileEffect" );

	ANowAtlasAvatarAiDynamicMount_eventSpawnProjectileEffect_Parms SpawnProjectileEffect_Parms;

	this->ProcessEvent ( pFnSpawnProjectileEffect, &SpawnProjectileEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.RemoveSpellEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventRemoveSpellEffect ( )
{
	static UFunction* pFnRemoveSpellEffect = NULL;

	if ( ! pFnRemoveSpellEffect )
		pFnRemoveSpellEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.RemoveSpellEffect" );

	ANowAtlasAvatarAiDynamicMount_eventRemoveSpellEffect_Parms RemoveSpellEffect_Parms;

	this->ProcessEvent ( pFnRemoveSpellEffect, &RemoveSpellEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.SpawnReleaseSpellEffect
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  selfTarget                     ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::eventSpawnReleaseSpellEffect ( unsigned long selfTarget )
{
	static UFunction* pFnSpawnReleaseSpellEffect = NULL;

	if ( ! pFnSpawnReleaseSpellEffect )
		pFnSpawnReleaseSpellEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.SpawnReleaseSpellEffect" );

	ANowAtlasAvatarAiDynamicMount_eventSpawnReleaseSpellEffect_Parms SpawnReleaseSpellEffect_Parms;
	SpawnReleaseSpellEffect_Parms.selfTarget = selfTarget;

	this->ProcessEvent ( pFnSpawnReleaseSpellEffect, &SpawnReleaseSpellEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.MagicFizzle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventMagicFizzle ( )
{
	static UFunction* pFnMagicFizzle = NULL;

	if ( ! pFnMagicFizzle )
		pFnMagicFizzle = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.MagicFizzle" );

	ANowAtlasAvatarAiDynamicMount_eventMagicFizzle_Parms MagicFizzle_Parms;

	this->ProcessEvent ( pFnMagicFizzle, &MagicFizzle_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.MagicSelfRelease
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventMagicSelfRelease ( )
{
	static UFunction* pFnMagicSelfRelease = NULL;

	if ( ! pFnMagicSelfRelease )
		pFnMagicSelfRelease = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.MagicSelfRelease" );

	ANowAtlasAvatarAiDynamicMount_eventMagicSelfRelease_Parms MagicSelfRelease_Parms;

	this->ProcessEvent ( pFnMagicSelfRelease, &MagicSelfRelease_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.MagicRelease
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventMagicRelease ( )
{
	static UFunction* pFnMagicRelease = NULL;

	if ( ! pFnMagicRelease )
		pFnMagicRelease = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.MagicRelease" );

	ANowAtlasAvatarAiDynamicMount_eventMagicRelease_Parms MagicRelease_Parms;

	this->ProcessEvent ( pFnMagicRelease, &MagicRelease_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.PlayIndexedParticleEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UAnimNotify_PlayIndexedParticleEffect* AnimNotifyData                 ( CPF_Const | CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::eventPlayIndexedParticleEffect ( class UAnimNotify_PlayIndexedParticleEffect* AnimNotifyData )
{
	static UFunction* pFnPlayIndexedParticleEffect = NULL;

	if ( ! pFnPlayIndexedParticleEffect )
		pFnPlayIndexedParticleEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.PlayIndexedParticleEffect" );

	ANowAtlasAvatarAiDynamicMount_eventPlayIndexedParticleEffect_Parms PlayIndexedParticleEffect_Parms;
	PlayIndexedParticleEffect_Parms.AnimNotifyData = AnimNotifyData;

	this->ProcessEvent ( pFnPlayIndexedParticleEffect, &PlayIndexedParticleEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.DriverFellOff
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPawn*                OldDriver                      ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::eventDriverFellOff ( class ANowPawn* OldDriver )
{
	static UFunction* pFnDriverFellOff = NULL;

	if ( ! pFnDriverFellOff )
		pFnDriverFellOff = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.DriverFellOff" );

	ANowAtlasAvatarAiDynamicMount_eventDriverFellOff_Parms DriverFellOff_Parms;
	DriverFellOff_Parms.OldDriver = OldDriver;

	this->ProcessEvent ( pFnDriverFellOff, &DriverFellOff_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.RemoveMe
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  Timer                          ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::eventRemoveMe ( unsigned long Timer )
{
	static UFunction* pFnRemoveMe = NULL;

	if ( ! pFnRemoveMe )
		pFnRemoveMe = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.RemoveMe" );

	ANowAtlasAvatarAiDynamicMount_eventRemoveMe_Parms RemoveMe_Parms;
	RemoveMe_Parms.Timer = Timer;

	this->ProcessEvent ( pFnRemoveMe, &RemoveMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FName                   LastHitBoneName                ( CPF_OptionalParm | CPF_Parm )
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::eventSpawnCorpse ( struct FName LastHitBoneName, float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.SpawnCorpse" );

	ANowAtlasAvatarAiDynamicMount_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	memcpy ( &SpawnCorpse_Parms.LastHitBoneName, &LastHitBoneName, 0x8 );
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.CreateReins
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventCreateReins ( )
{
	static UFunction* pFnCreateReins = NULL;

	if ( ! pFnCreateReins )
		pFnCreateReins = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.CreateReins" );

	ANowAtlasAvatarAiDynamicMount_eventCreateReins_Parms CreateReins_Parms;

	this->ProcessEvent ( pFnCreateReins, &CreateReins_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.InitFemaleAdditive
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventInitFemaleAdditive ( )
{
	static UFunction* pFnInitFemaleAdditive = NULL;

	if ( ! pFnInitFemaleAdditive )
		pFnInitFemaleAdditive = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.InitFemaleAdditive" );

	ANowAtlasAvatarAiDynamicMount_eventInitFemaleAdditive_Parms InitFemaleAdditive_Parms;

	this->ProcessEvent ( pFnInitFemaleAdditive, &InitFemaleAdditive_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.SyncAnimSet
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventSyncAnimSet ( )
{
	static UFunction* pFnSyncAnimSet = NULL;

	if ( ! pFnSyncAnimSet )
		pFnSyncAnimSet = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.SyncAnimSet" );

	ANowAtlasAvatarAiDynamicMount_eventSyncAnimSet_Parms SyncAnimSet_Parms;

	this->ProcessEvent ( pFnSyncAnimSet, &SyncAnimSet_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.SyncAnimTree
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventSyncAnimTree ( )
{
	static UFunction* pFnSyncAnimTree = NULL;

	if ( ! pFnSyncAnimTree )
		pFnSyncAnimTree = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.SyncAnimTree" );

	ANowAtlasAvatarAiDynamicMount_eventSyncAnimTree_Parms SyncAnimTree_Parms;

	this->ProcessEvent ( pFnSyncAnimTree, &SyncAnimTree_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetDriver
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ANowAtlasAvatarAiDynamicMount::eventGetDriver ( )
{
	static UFunction* pFnGetDriver = NULL;

	if ( ! pFnGetDriver )
		pFnGetDriver = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetDriver" );

	ANowAtlasAvatarAiDynamicMount_eventGetDriver_Parms GetDriver_Parms;

	this->ProcessEvent ( pFnGetDriver, &GetDriver_Parms, NULL );

	return GetDriver_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.Bump
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::eventBump ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitNormal )
{
	static UFunction* pFnBump = NULL;

	if ( ! pFnBump )
		pFnBump = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.Bump" );

	ANowAtlasAvatarAiDynamicMount_eventBump_Parms Bump_Parms;
	Bump_Parms.Other = Other;
	Bump_Parms.OtherComp = OtherComp;
	memcpy ( &Bump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnBump, &Bump_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.HitSomeoneTest
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                Other                          ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::HitSomeoneTest ( class ANowPawn* Other )
{
	static UFunction* pFnHitSomeoneTest = NULL;

	if ( ! pFnHitSomeoneTest )
		pFnHitSomeoneTest = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.HitSomeoneTest" );

	ANowAtlasAvatarAiDynamicMount_execHitSomeoneTest_Parms HitSomeoneTest_Parms;
	HitSomeoneTest_Parms.Other = Other;

	this->ProcessEvent ( pFnHitSomeoneTest, &HitSomeoneTest_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.TookDamage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          HowMuchDamage                  ( CPF_Parm )
// float                          Total                          ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::eventTookDamage ( float HowMuchDamage, float Total )
{
	static UFunction* pFnTookDamage = NULL;

	if ( ! pFnTookDamage )
		pFnTookDamage = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.TookDamage" );

	ANowAtlasAvatarAiDynamicMount_eventTookDamage_Parms TookDamage_Parms;
	TookDamage_Parms.HowMuchDamage = HowMuchDamage;
	TookDamage_Parms.Total = Total;

	this->ProcessEvent ( pFnTookDamage, &TookDamage_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.CheckLastUseTime
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiDynamicMount::eventCheckLastUseTime ( )
{
	static UFunction* pFnCheckLastUseTime = NULL;

	if ( ! pFnCheckLastUseTime )
		pFnCheckLastUseTime = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.CheckLastUseTime" );

	ANowAtlasAvatarAiDynamicMount_eventCheckLastUseTime_Parms CheckLastUseTime_Parms;

	this->ProcessEvent ( pFnCheckLastUseTime, &CheckLastUseTime_Parms, NULL );

	return CheckLastUseTime_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.WaitForRemount
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventWaitForRemount ( )
{
	static UFunction* pFnWaitForRemount = NULL;

	if ( ! pFnWaitForRemount )
		pFnWaitForRemount = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.WaitForRemount" );

	ANowAtlasAvatarAiDynamicMount_eventWaitForRemount_Parms WaitForRemount_Parms;

	this->ProcessEvent ( pFnWaitForRemount, &WaitForRemount_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.PlayClientThrowOffAnimation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventPlayClientThrowOffAnimation ( )
{
	static UFunction* pFnPlayClientThrowOffAnimation = NULL;

	if ( ! pFnPlayClientThrowOffAnimation )
		pFnPlayClientThrowOffAnimation = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.PlayClientThrowOffAnimation" );

	ANowAtlasAvatarAiDynamicMount_eventPlayClientThrowOffAnimation_Parms PlayClientThrowOffAnimation_Parms;

	this->ProcessEvent ( pFnPlayClientThrowOffAnimation, &PlayClientThrowOffAnimation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetSpeed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiDynamicMount::GetSpeed ( )
{
	static UFunction* pFnGetSpeed = NULL;

	if ( ! pFnGetSpeed )
		pFnGetSpeed = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetSpeed" );

	ANowAtlasAvatarAiDynamicMount_execGetSpeed_Parms GetSpeed_Parms;

	this->ProcessEvent ( pFnGetSpeed, &GetSpeed_Parms, NULL );

	return GetSpeed_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.AddFullLTurn
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::AddFullLTurn ( )
{
	static UFunction* pFnAddFullLTurn = NULL;

	if ( ! pFnAddFullLTurn )
		pFnAddFullLTurn = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.AddFullLTurn" );

	ANowAtlasAvatarAiDynamicMount_execAddFullLTurn_Parms AddFullLTurn_Parms;

	this->ProcessEvent ( pFnAddFullLTurn, &AddFullLTurn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.AddFullRTurn
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::AddFullRTurn ( )
{
	static UFunction* pFnAddFullRTurn = NULL;

	if ( ! pFnAddFullRTurn )
		pFnAddFullRTurn = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.AddFullRTurn" );

	ANowAtlasAvatarAiDynamicMount_execAddFullRTurn_Parms AddFullRTurn_Parms;

	this->ProcessEvent ( pFnAddFullRTurn, &AddFullRTurn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.AddLTurn
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::AddLTurn ( )
{
	static UFunction* pFnAddLTurn = NULL;

	if ( ! pFnAddLTurn )
		pFnAddLTurn = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.AddLTurn" );

	ANowAtlasAvatarAiDynamicMount_execAddLTurn_Parms AddLTurn_Parms;

	this->ProcessEvent ( pFnAddLTurn, &AddLTurn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.AddRTurn
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::AddRTurn ( )
{
	static UFunction* pFnAddRTurn = NULL;

	if ( ! pFnAddRTurn )
		pFnAddRTurn = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.AddRTurn" );

	ANowAtlasAvatarAiDynamicMount_execAddRTurn_Parms AddRTurn_Parms;

	this->ProcessEvent ( pFnAddRTurn, &AddRTurn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.DoBreak
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::DoBreak ( )
{
	static UFunction* pFnDoBreak = NULL;

	if ( ! pFnDoBreak )
		pFnDoBreak = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.DoBreak" );

	ANowAtlasAvatarAiDynamicMount_execDoBreak_Parms DoBreak_Parms;

	this->ProcessEvent ( pFnDoBreak, &DoBreak_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.MaxThrottle
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::MaxThrottle ( )
{
	static UFunction* pFnMaxThrottle = NULL;

	if ( ! pFnMaxThrottle )
		pFnMaxThrottle = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.MaxThrottle" );

	ANowAtlasAvatarAiDynamicMount_execMaxThrottle_Parms MaxThrottle_Parms;

	this->ProcessEvent ( pFnMaxThrottle, &MaxThrottle_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.RemoveThrottle
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::RemoveThrottle ( )
{
	static UFunction* pFnRemoveThrottle = NULL;

	if ( ! pFnRemoveThrottle )
		pFnRemoveThrottle = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.RemoveThrottle" );

	ANowAtlasAvatarAiDynamicMount_execRemoveThrottle_Parms RemoveThrottle_Parms;

	this->ProcessEvent ( pFnRemoveThrottle, &RemoveThrottle_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.AddThrottle
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::AddThrottle ( )
{
	static UFunction* pFnAddThrottle = NULL;

	if ( ! pFnAddThrottle )
		pFnAddThrottle = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.AddThrottle" );

	ANowAtlasAvatarAiDynamicMount_execAddThrottle_Parms AddThrottle_Parms;

	this->ProcessEvent ( pFnAddThrottle, &AddThrottle_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.FailedMove
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::FailedMove ( )
{
	static UFunction* pFnFailedMove = NULL;

	if ( ! pFnFailedMove )
		pFnFailedMove = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.FailedMove" );

	ANowAtlasAvatarAiDynamicMount_execFailedMove_Parms FailedMove_Parms;

	this->ProcessEvent ( pFnFailedMove, &FailedMove_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.debugLog
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 whatLog                        ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarAiDynamicMount::eventdebugLog ( struct FString whatLog )
{
	static UFunction* pFndebugLog = NULL;

	if ( ! pFndebugLog )
		pFndebugLog = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.debugLog" );

	ANowAtlasAvatarAiDynamicMount_eventdebugLog_Parms debugLog_Parms;
	memcpy ( &debugLog_Parms.whatLog, &whatLog, 0xC );

	this->ProcessEvent ( pFndebugLog, &debugLog_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.MountDied
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventMountDied ( )
{
	static UFunction* pFnMountDied = NULL;

	if ( ! pFnMountDied )
		pFnMountDied = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.MountDied" );

	ANowAtlasAvatarAiDynamicMount_eventMountDied_Parms MountDied_Parms;

	this->ProcessEvent ( pFnMountDied, &MountDied_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.CheckPlayerOverweight
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowPawn*                WhatPawn                       ( CPF_Parm )

bool ANowAtlasAvatarAiDynamicMount::eventCheckPlayerOverweight ( class ANowPawn* WhatPawn )
{
	static UFunction* pFnCheckPlayerOverweight = NULL;

	if ( ! pFnCheckPlayerOverweight )
		pFnCheckPlayerOverweight = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.CheckPlayerOverweight" );

	ANowAtlasAvatarAiDynamicMount_eventCheckPlayerOverweight_Parms CheckPlayerOverweight_Parms;
	CheckPlayerOverweight_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnCheckPlayerOverweight, &CheckPlayerOverweight_Parms, NULL );

	return CheckPlayerOverweight_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.DoMountAnimations
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bMountOn                       ( CPF_Parm )
// unsigned long                  bIgnoreAnim                    ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::eventDoMountAnimations ( unsigned long bMountOn, unsigned long bIgnoreAnim )
{
	static UFunction* pFnDoMountAnimations = NULL;

	if ( ! pFnDoMountAnimations )
		pFnDoMountAnimations = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.DoMountAnimations" );

	ANowAtlasAvatarAiDynamicMount_eventDoMountAnimations_Parms DoMountAnimations_Parms;
	DoMountAnimations_Parms.bMountOn = bMountOn;
	DoMountAnimations_Parms.bIgnoreAnim = bIgnoreAnim;

	this->ProcessEvent ( pFnDoMountAnimations, &DoMountAnimations_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.TestDriverFallOffRears
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiDynamicMount::eventTestDriverFallOffRears ( )
{
	static UFunction* pFnTestDriverFallOffRears = NULL;

	if ( ! pFnTestDriverFallOffRears )
		pFnTestDriverFallOffRears = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.TestDriverFallOffRears" );

	ANowAtlasAvatarAiDynamicMount_eventTestDriverFallOffRears_Parms TestDriverFallOffRears_Parms;

	this->ProcessEvent ( pFnTestDriverFallOffRears, &TestDriverFallOffRears_Parms, NULL );

	return TestDriverFallOffRears_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.TestDriverFallOffBasic
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          SkillCheckVs                   ( CPF_Parm )

bool ANowAtlasAvatarAiDynamicMount::eventTestDriverFallOffBasic ( float SkillCheckVs )
{
	static UFunction* pFnTestDriverFallOffBasic = NULL;

	if ( ! pFnTestDriverFallOffBasic )
		pFnTestDriverFallOffBasic = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.TestDriverFallOffBasic" );

	ANowAtlasAvatarAiDynamicMount_eventTestDriverFallOffBasic_Parms TestDriverFallOffBasic_Parms;
	TestDriverFallOffBasic_Parms.SkillCheckVs = SkillCheckVs;

	this->ProcessEvent ( pFnTestDriverFallOffBasic, &TestDriverFallOffBasic_Parms, NULL );

	return TestDriverFallOffBasic_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.UpdateAimOffset
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventUpdateAimOffset ( )
{
	static UFunction* pFnUpdateAimOffset = NULL;

	if ( ! pFnUpdateAimOffset )
		pFnUpdateAimOffset = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.UpdateAimOffset" );

	ANowAtlasAvatarAiDynamicMount_eventUpdateAimOffset_Parms UpdateAimOffset_Parms;

	this->ProcessEvent ( pFnUpdateAimOffset, &UpdateAimOffset_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.UpdateSpeeds
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventUpdateSpeeds ( )
{
	static UFunction* pFnUpdateSpeeds = NULL;

	if ( ! pFnUpdateSpeeds )
		pFnUpdateSpeeds = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.UpdateSpeeds" );

	ANowAtlasAvatarAiDynamicMount_eventUpdateSpeeds_Parms UpdateSpeeds_Parms;

	this->ProcessEvent ( pFnUpdateSpeeds, &UpdateSpeeds_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.Tick
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.Tick" );

	ANowAtlasAvatarAiDynamicMount_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.SetThrottle
// [0x00020002] 
// Parameters infos:
// int                            NewThrottle                    ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::SetThrottle ( int NewThrottle )
{
	static UFunction* pFnSetThrottle = NULL;

	if ( ! pFnSetThrottle )
		pFnSetThrottle = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.SetThrottle" );

	ANowAtlasAvatarAiDynamicMount_execSetThrottle_Parms SetThrottle_Parms;
	SetThrottle_Parms.NewThrottle = NewThrottle;

	this->ProcessEvent ( pFnSetThrottle, &SetThrottle_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.ForceUnHide
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::ForceUnHide ( )
{
	static UFunction* pFnForceUnHide = NULL;

	if ( ! pFnForceUnHide )
		pFnForceUnHide = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.ForceUnHide" );

	ANowAtlasAvatarAiDynamicMount_execForceUnHide_Parms ForceUnHide_Parms;

	this->ProcessEvent ( pFnForceUnHide, &ForceUnHide_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.CheckForShow
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::CheckForShow ( )
{
	static UFunction* pFnCheckForShow = NULL;

	if ( ! pFnCheckForShow )
		pFnCheckForShow = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.CheckForShow" );

	ANowAtlasAvatarAiDynamicMount_execCheckForShow_Parms CheckForShow_Parms;

	this->ProcessEvent ( pFnCheckForShow, &CheckForShow_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.CheckForceRemove
// [0x00020000] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::CheckForceRemove ( )
{
	static UFunction* pFnCheckForceRemove = NULL;

	if ( ! pFnCheckForceRemove )
		pFnCheckForceRemove = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.CheckForceRemove" );

	ANowAtlasAvatarAiDynamicMount_execCheckForceRemove_Parms CheckForceRemove_Parms;

	this->ProcessEvent ( pFnCheckForceRemove, &CheckForceRemove_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.MoveToGround
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventMoveToGround ( )
{
	static UFunction* pFnMoveToGround = NULL;

	if ( ! pFnMoveToGround )
		pFnMoveToGround = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.MoveToGround" );

	ANowAtlasAvatarAiDynamicMount_eventMoveToGround_Parms MoveToGround_Parms;

	this->ProcessEvent ( pFnMoveToGround, &MoveToGround_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.CreateAndSetMountBrain
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventCreateAndSetMountBrain ( )
{
	static UFunction* pFnCreateAndSetMountBrain = NULL;

	if ( ! pFnCreateAndSetMountBrain )
		pFnCreateAndSetMountBrain = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.CreateAndSetMountBrain" );

	ANowAtlasAvatarAiDynamicMount_eventCreateAndSetMountBrain_Parms CreateAndSetMountBrain_Parms;

	this->ProcessEvent ( pFnCreateAndSetMountBrain, &CreateAndSetMountBrain_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.DoPlayExtraSound
// [0x00020002] 
// Parameters infos:
// class USoundCue*               WhatSound                      ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::DoPlayExtraSound ( class USoundCue* WhatSound )
{
	static UFunction* pFnDoPlayExtraSound = NULL;

	if ( ! pFnDoPlayExtraSound )
		pFnDoPlayExtraSound = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.DoPlayExtraSound" );

	ANowAtlasAvatarAiDynamicMount_execDoPlayExtraSound_Parms DoPlayExtraSound_Parms;
	DoPlayExtraSound_Parms.WhatSound = WhatSound;

	this->ProcessEvent ( pFnDoPlayExtraSound, &DoPlayExtraSound_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.EquipmentMove
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventEquipmentMove ( )
{
	static UFunction* pFnEquipmentMove = NULL;

	if ( ! pFnEquipmentMove )
		pFnEquipmentMove = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.EquipmentMove" );

	ANowAtlasAvatarAiDynamicMount_eventEquipmentMove_Parms EquipmentMove_Parms;

	this->ProcessEvent ( pFnEquipmentMove, &EquipmentMove_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.EquipmentIdle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventEquipmentIdle ( )
{
	static UFunction* pFnEquipmentIdle = NULL;

	if ( ! pFnEquipmentIdle )
		pFnEquipmentIdle = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.EquipmentIdle" );

	ANowAtlasAvatarAiDynamicMount_eventEquipmentIdle_Parms EquipmentIdle_Parms;

	this->ProcessEvent ( pFnEquipmentIdle, &EquipmentIdle_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.EquipmentSaddle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventEquipmentSaddle ( )
{
	static UFunction* pFnEquipmentSaddle = NULL;

	if ( ! pFnEquipmentSaddle )
		pFnEquipmentSaddle = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.EquipmentSaddle" );

	ANowAtlasAvatarAiDynamicMount_eventEquipmentSaddle_Parms EquipmentSaddle_Parms;

	this->ProcessEvent ( pFnEquipmentSaddle, &EquipmentSaddle_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.EquipmentMount2
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventEquipmentMount2 ( )
{
	static UFunction* pFnEquipmentMount2 = NULL;

	if ( ! pFnEquipmentMount2 )
		pFnEquipmentMount2 = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.EquipmentMount2" );

	ANowAtlasAvatarAiDynamicMount_eventEquipmentMount2_Parms EquipmentMount2_Parms;

	this->ProcessEvent ( pFnEquipmentMount2, &EquipmentMount2_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.EquipmentMount1
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventEquipmentMount1 ( )
{
	static UFunction* pFnEquipmentMount1 = NULL;

	if ( ! pFnEquipmentMount1 )
		pFnEquipmentMount1 = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.EquipmentMount1" );

	ANowAtlasAvatarAiDynamicMount_eventEquipmentMount1_Parms EquipmentMount1_Parms;

	this->ProcessEvent ( pFnEquipmentMount1, &EquipmentMount1_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.DoFootNotify
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            Foot                           ( CPF_Parm )
// float                          FootForce                      ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::eventDoFootNotify ( int Foot, float FootForce )
{
	static UFunction* pFnDoFootNotify = NULL;

	if ( ! pFnDoFootNotify )
		pFnDoFootNotify = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.DoFootNotify" );

	ANowAtlasAvatarAiDynamicMount_eventDoFootNotify_Parms DoFootNotify_Parms;
	DoFootNotify_Parms.Foot = Foot;
	DoFootNotify_Parms.FootForce = FootForce;

	this->ProcessEvent ( pFnDoFootNotify, &DoFootNotify_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.ReInitSockets
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::eventReInitSockets ( )
{
	static UFunction* pFnReInitSockets = NULL;

	if ( ! pFnReInitSockets )
		pFnReInitSockets = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.ReInitSockets" );

	ANowAtlasAvatarAiDynamicMount_eventReInitSockets_Parms ReInitSockets_Parms;

	this->ProcessEvent ( pFnReInitSockets, &ReInitSockets_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.SetTraceTime
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          NewLength                      ( CPF_Parm )
// float                          NewMiddle                      ( CPF_Parm )
// unsigned long                  bCombatMove                    ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::eventSetTraceTime ( float NewLength, float NewMiddle, unsigned long bCombatMove )
{
	static UFunction* pFnSetTraceTime = NULL;

	if ( ! pFnSetTraceTime )
		pFnSetTraceTime = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.SetTraceTime" );

	ANowAtlasAvatarAiDynamicMount_eventSetTraceTime_Parms SetTraceTime_Parms;
	SetTraceTime_Parms.NewLength = NewLength;
	SetTraceTime_Parms.NewMiddle = NewMiddle;
	SetTraceTime_Parms.bCombatMove = bCombatMove;

	this->ProcessEvent ( pFnSetTraceTime, &SetTraceTime_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.CheckConnection
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::CheckConnection ( )
{
	static UFunction* pFnCheckConnection = NULL;

	if ( ! pFnCheckConnection )
		pFnCheckConnection = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.CheckConnection" );

	ANowAtlasAvatarAiDynamicMount_execCheckConnection_Parms CheckConnection_Parms;

	this->ProcessEvent ( pFnCheckConnection, &CheckConnection_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.DoFallPrediction
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::DoFallPrediction ( float DeltaTime )
{
	static UFunction* pFnDoFallPrediction = NULL;

	if ( ! pFnDoFallPrediction )
		pFnDoFallPrediction = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.DoFallPrediction" );

	ANowAtlasAvatarAiDynamicMount_execDoFallPrediction_Parms DoFallPrediction_Parms;
	DoFallPrediction_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnDoFallPrediction, &DoFallPrediction_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.PostBeginPlay" );

	ANowAtlasAvatarAiDynamicMount_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.HasItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiDynamicMount::HasItems ( )
{
	static UFunction* pFnHasItems = NULL;

	if ( ! pFnHasItems )
		pFnHasItems = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.HasItems" );

	ANowAtlasAvatarAiDynamicMount_execHasItems_Parms HasItems_Parms;

	pFnHasItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasItems, &HasItems_Parms, NULL );

	pFnHasItems->FunctionFlags |= 0x400;

	return HasItems_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetAndSetStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::GetAndSetStats ( )
{
	static UFunction* pFnGetAndSetStats = NULL;

	if ( ! pFnGetAndSetStats )
		pFnGetAndSetStats = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetAndSetStats" );

	ANowAtlasAvatarAiDynamicMount_execGetAndSetStats_Parms GetAndSetStats_Parms;

	pFnGetAndSetStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetStats, &GetAndSetStats_Parms, NULL );

	pFnGetAndSetStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetHealthMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiDynamicMount::GetHealthMax ( )
{
	static UFunction* pFnGetHealthMax = NULL;

	if ( ! pFnGetHealthMax )
		pFnGetHealthMax = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetHealthMax" );

	ANowAtlasAvatarAiDynamicMount_execGetHealthMax_Parms GetHealthMax_Parms;

	pFnGetHealthMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealthMax, &GetHealthMax_Parms, NULL );

	pFnGetHealthMax->FunctionFlags |= 0x400;

	return GetHealthMax_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiDynamicMount::GetHealth ( )
{
	static UFunction* pFnGetHealth = NULL;

	if ( ! pFnGetHealth )
		pFnGetHealth = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetHealth" );

	ANowAtlasAvatarAiDynamicMount_execGetHealth_Parms GetHealth_Parms;

	pFnGetHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHealth, &GetHealth_Parms, NULL );

	pFnGetHealth->FunctionFlags |= 0x400;

	return GetHealth_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiDynamicMount::GetLevel ( )
{
	static UFunction* pFnGetLevel = NULL;

	if ( ! pFnGetLevel )
		pFnGetLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetLevel" );

	ANowAtlasAvatarAiDynamicMount_execGetLevel_Parms GetLevel_Parms;

	pFnGetLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLevel, &GetLevel_Parms, NULL );

	pFnGetLevel->FunctionFlags |= 0x400;

	return GetLevel_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.CreateRidingInstance
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::CreateRidingInstance ( )
{
	static UFunction* pFnCreateRidingInstance = NULL;

	if ( ! pFnCreateRidingInstance )
		pFnCreateRidingInstance = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.CreateRidingInstance" );

	ANowAtlasAvatarAiDynamicMount_execCreateRidingInstance_Parms CreateRidingInstance_Parms;

	pFnCreateRidingInstance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateRidingInstance, &CreateRidingInstance_Parms, NULL );

	pFnCreateRidingInstance->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.CreateRidingInstanceFromString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sContentInfo                   ( CPF_Parm | CPF_NeedCtorLink )
// class ANowPawn*                pNewDriver                     ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::CreateRidingInstanceFromString ( struct FString sContentInfo, class ANowPawn* pNewDriver )
{
	static UFunction* pFnCreateRidingInstanceFromString = NULL;

	if ( ! pFnCreateRidingInstanceFromString )
		pFnCreateRidingInstanceFromString = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.CreateRidingInstanceFromString" );

	ANowAtlasAvatarAiDynamicMount_execCreateRidingInstanceFromString_Parms CreateRidingInstanceFromString_Parms;
	memcpy ( &CreateRidingInstanceFromString_Parms.sContentInfo, &sContentInfo, 0xC );
	CreateRidingInstanceFromString_Parms.pNewDriver = pNewDriver;

	pFnCreateRidingInstanceFromString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateRidingInstanceFromString, &CreateRidingInstanceFromString_Parms, NULL );

	pFnCreateRidingInstanceFromString->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.TriggerFootNotify
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            FootIndex                      ( CPF_Parm )
// float                          FootForce                      ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::TriggerFootNotify ( int FootIndex, float FootForce )
{
	static UFunction* pFnTriggerFootNotify = NULL;

	if ( ! pFnTriggerFootNotify )
		pFnTriggerFootNotify = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.TriggerFootNotify" );

	ANowAtlasAvatarAiDynamicMount_execTriggerFootNotify_Parms TriggerFootNotify_Parms;
	TriggerFootNotify_Parms.FootIndex = FootIndex;
	TriggerFootNotify_Parms.FootForce = FootForce;

	pFnTriggerFootNotify->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerFootNotify, &TriggerFootNotify_Parms, NULL );

	pFnTriggerFootNotify->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetStatString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiDynamicMount::GetStatString ( )
{
	static UFunction* pFnGetStatString = NULL;

	if ( ! pFnGetStatString )
		pFnGetStatString = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetStatString" );

	ANowAtlasAvatarAiDynamicMount_execGetStatString_Parms GetStatString_Parms;

	pFnGetStatString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatString, &GetStatString_Parms, NULL );

	pFnGetStatString->FunctionFlags |= 0x400;

	return GetStatString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetArmorString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiDynamicMount::GetArmorString ( )
{
	static UFunction* pFnGetArmorString = NULL;

	if ( ! pFnGetArmorString )
		pFnGetArmorString = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetArmorString" );

	ANowAtlasAvatarAiDynamicMount_execGetArmorString_Parms GetArmorString_Parms;

	pFnGetArmorString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetArmorString, &GetArmorString_Parms, NULL );

	pFnGetArmorString->FunctionFlags |= 0x400;

	return GetArmorString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetBodyString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiDynamicMount::GetBodyString ( )
{
	static UFunction* pFnGetBodyString = NULL;

	if ( ! pFnGetBodyString )
		pFnGetBodyString = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetBodyString" );

	ANowAtlasAvatarAiDynamicMount_execGetBodyString_Parms GetBodyString_Parms;

	pFnGetBodyString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBodyString, &GetBodyString_Parms, NULL );

	pFnGetBodyString->FunctionFlags |= 0x400;

	return GetBodyString_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GotServerConnection
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiDynamicMount::GotServerConnection ( )
{
	static UFunction* pFnGotServerConnection = NULL;

	if ( ! pFnGotServerConnection )
		pFnGotServerConnection = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GotServerConnection" );

	ANowAtlasAvatarAiDynamicMount_execGotServerConnection_Parms GotServerConnection_Parms;

	pFnGotServerConnection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGotServerConnection, &GotServerConnection_Parms, NULL );

	pFnGotServerConnection->FunctionFlags |= 0x400;

	return GotServerConnection_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatarAiDynamicMount::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.SetContentInfo" );

	ANowAtlasAvatarAiDynamicMount_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.SetContentInfoFromString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ContentClassString             ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarAiDynamicMount::SetContentInfoFromString ( struct FString ContentClassString )
{
	static UFunction* pFnSetContentInfoFromString = NULL;

	if ( ! pFnSetContentInfoFromString )
		pFnSetContentInfoFromString = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.SetContentInfoFromString" );

	ANowAtlasAvatarAiDynamicMount_execSetContentInfoFromString_Parms SetContentInfoFromString_Parms;
	memcpy ( &SetContentInfoFromString_Parms.ContentClassString, &ContentClassString, 0xC );

	pFnSetContentInfoFromString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfoFromString, &SetContentInfoFromString_Parms, NULL );

	pFnSetContentInfoFromString->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.RemoveDriver
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiDynamicMount::RemoveDriver ( )
{
	static UFunction* pFnRemoveDriver = NULL;

	if ( ! pFnRemoveDriver )
		pFnRemoveDriver = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.RemoveDriver" );

	ANowAtlasAvatarAiDynamicMount_execRemoveDriver_Parms RemoveDriver_Parms;

	pFnRemoveDriver->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveDriver, &RemoveDriver_Parms, NULL );

	pFnRemoveDriver->FunctionFlags |= 0x400;

	return RemoveDriver_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.UpdateCurrentSkillLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiDynamicMount::UpdateCurrentSkillLevel ( )
{
	static UFunction* pFnUpdateCurrentSkillLevel = NULL;

	if ( ! pFnUpdateCurrentSkillLevel )
		pFnUpdateCurrentSkillLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.UpdateCurrentSkillLevel" );

	ANowAtlasAvatarAiDynamicMount_execUpdateCurrentSkillLevel_Parms UpdateCurrentSkillLevel_Parms;

	pFnUpdateCurrentSkillLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCurrentSkillLevel, &UpdateCurrentSkillLevel_Parms, NULL );

	pFnUpdateCurrentSkillLevel->FunctionFlags |= 0x400;

	return UpdateCurrentSkillLevel_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.TeleportPosUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::TeleportPosUpdate ( )
{
	static UFunction* pFnTeleportPosUpdate = NULL;

	if ( ! pFnTeleportPosUpdate )
		pFnTeleportPosUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.TeleportPosUpdate" );

	ANowAtlasAvatarAiDynamicMount_execTeleportPosUpdate_Parms TeleportPosUpdate_Parms;

	pFnTeleportPosUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTeleportPosUpdate, &TeleportPosUpdate_Parms, NULL );

	pFnTeleportPosUpdate->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.DriverIsKnockedDown
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiDynamicMount::DriverIsKnockedDown ( )
{
	static UFunction* pFnDriverIsKnockedDown = NULL;

	if ( ! pFnDriverIsKnockedDown )
		pFnDriverIsKnockedDown = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.DriverIsKnockedDown" );

	ANowAtlasAvatarAiDynamicMount_execDriverIsKnockedDown_Parms DriverIsKnockedDown_Parms;

	pFnDriverIsKnockedDown->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDriverIsKnockedDown, &DriverIsKnockedDown_Parms, NULL );

	pFnDriverIsKnockedDown->FunctionFlags |= 0x400;

	return DriverIsKnockedDown_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiDynamicMount::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.IsTarget" );

	ANowAtlasAvatarAiDynamicMount_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiDynamicMount::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.AtlasUse" );

	ANowAtlasAvatarAiDynamicMount_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetItemMods
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::GetItemMods ( )
{
	static UFunction* pFnGetItemMods = NULL;

	if ( ! pFnGetItemMods )
		pFnGetItemMods = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetItemMods" );

	ANowAtlasAvatarAiDynamicMount_execGetItemMods_Parms GetItemMods_Parms;

	pFnGetItemMods->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemMods, &GetItemMods_Parms, NULL );

	pFnGetItemMods->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.UpdateStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::UpdateStats ( )
{
	static UFunction* pFnUpdateStats = NULL;

	if ( ! pFnUpdateStats )
		pFnUpdateStats = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.UpdateStats" );

	ANowAtlasAvatarAiDynamicMount_execUpdateStats_Parms UpdateStats_Parms;

	pFnUpdateStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateStats, &UpdateStats_Parms, NULL );

	pFnUpdateStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetNowPlayerController
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowAtlasAvatarAiDynamicMount::GetNowPlayerController ( )
{
	static UFunction* pFnGetNowPlayerController = NULL;

	if ( ! pFnGetNowPlayerController )
		pFnGetNowPlayerController = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetNowPlayerController" );

	ANowAtlasAvatarAiDynamicMount_execGetNowPlayerController_Parms GetNowPlayerController_Parms;

	pFnGetNowPlayerController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNowPlayerController, &GetNowPlayerController_Parms, NULL );

	pFnGetNowPlayerController->FunctionFlags |= 0x400;

	return GetNowPlayerController_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.ResetThrottle
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::ResetThrottle ( )
{
	static UFunction* pFnResetThrottle = NULL;

	if ( ! pFnResetThrottle )
		pFnResetThrottle = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.ResetThrottle" );

	ANowAtlasAvatarAiDynamicMount_execResetThrottle_Parms ResetThrottle_Parms;

	pFnResetThrottle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetThrottle, &ResetThrottle_Parms, NULL );

	pFnResetThrottle->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.ResetAi
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiDynamicMount::ResetAi ( )
{
	static UFunction* pFnResetAi = NULL;

	if ( ! pFnResetAi )
		pFnResetAi = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.ResetAi" );

	ANowAtlasAvatarAiDynamicMount_execResetAi_Parms ResetAi_Parms;

	pFnResetAi->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetAi, &ResetAi_Parms, NULL );

	pFnResetAi->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.DetachDriver
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarAiDynamicMount::DetachDriver ( )
{
	static UFunction* pFnDetachDriver = NULL;

	if ( ! pFnDetachDriver )
		pFnDetachDriver = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.DetachDriver" );

	ANowAtlasAvatarAiDynamicMount_execDetachDriver_Parms DetachDriver_Parms;

	pFnDetachDriver->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDetachDriver, &DetachDriver_Parms, NULL );

	pFnDetachDriver->FunctionFlags |= 0x400;

	return DetachDriver_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.AttachDriver
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  WhatDriver                     ( CPF_Parm )
// unsigned long                  bInit                          ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiDynamicMount::AttachDriver ( class AActor* WhatDriver, unsigned long bInit )
{
	static UFunction* pFnAttachDriver = NULL;

	if ( ! pFnAttachDriver )
		pFnAttachDriver = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.AttachDriver" );

	ANowAtlasAvatarAiDynamicMount_execAttachDriver_Parms AttachDriver_Parms;
	AttachDriver_Parms.WhatDriver = WhatDriver;
	AttachDriver_Parms.bInit = bInit;

	pFnAttachDriver->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAttachDriver, &AttachDriver_Parms, NULL );

	pFnAttachDriver->FunctionFlags |= 0x400;

	return AttachDriver_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiDynamicMount.GetDisplayName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarAiDynamicMount::GetDisplayName ( )
{
	static UFunction* pFnGetDisplayName = NULL;

	if ( ! pFnGetDisplayName )
		pFnGetDisplayName = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiDynamicMount.GetDisplayName" );

	ANowAtlasAvatarAiDynamicMount_execGetDisplayName_Parms GetDisplayName_Parms;

	pFnGetDisplayName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayName, &GetDisplayName_Parms, NULL );

	pFnGetDisplayName->FunctionFlags |= 0x400;

	return GetDisplayName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiNPC.Resurrect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAiNPC::eventResurrect ( )
{
	static UFunction* pFnResurrect = NULL;

	if ( ! pFnResurrect )
		pFnResurrect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.Resurrect" );

	ANowAtlasAvatarAiNPC_eventResurrect_Parms Resurrect_Parms;

	this->ProcessEvent ( pFnResurrect, &Resurrect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.tcpReceive
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarAiNPC::tcpReceive ( struct FString Text )
{
	static UFunction* pFntcpReceive = NULL;

	if ( ! pFntcpReceive )
		pFntcpReceive = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.tcpReceive" );

	ANowAtlasAvatarAiNPC_exectcpReceive_Parms tcpReceive_Parms;
	memcpy ( &tcpReceive_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFntcpReceive, &tcpReceive_Parms, NULL );

	return tcpReceive_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiNPC.TurnTo
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   WhatPawn                       ( CPF_Parm )

void ANowAtlasAvatarAiNPC::eventTurnTo ( class APawn* WhatPawn )
{
	static UFunction* pFnTurnTo = NULL;

	if ( ! pFnTurnTo )
		pFnTurnTo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.TurnTo" );

	ANowAtlasAvatarAiNPC_eventTurnTo_Parms TurnTo_Parms;
	TurnTo_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnTurnTo, &TurnTo_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.TweenTurn
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAtlasAvatarAiNPC::TweenTurn ( float DT )
{
	static UFunction* pFnTweenTurn = NULL;

	if ( ! pFnTweenTurn )
		pFnTweenTurn = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.TweenTurn" );

	ANowAtlasAvatarAiNPC_execTweenTurn_Parms TweenTurn_Parms;
	TweenTurn_Parms.DT = DT;

	this->ProcessEvent ( pFnTweenTurn, &TweenTurn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.ResetRotation
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarAiNPC::ResetRotation ( )
{
	static UFunction* pFnResetRotation = NULL;

	if ( ! pFnResetRotation )
		pFnResetRotation = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.ResetRotation" );

	ANowAtlasAvatarAiNPC_execResetRotation_Parms ResetRotation_Parms;

	this->ProcessEvent ( pFnResetRotation, &ResetRotation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.SetInEtherWorlds
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  newValue                       ( CPF_Parm )

void ANowAtlasAvatarAiNPC::eventSetInEtherWorlds ( unsigned long newValue )
{
	static UFunction* pFnSetInEtherWorlds = NULL;

	if ( ! pFnSetInEtherWorlds )
		pFnSetInEtherWorlds = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.SetInEtherWorlds" );

	ANowAtlasAvatarAiNPC_eventSetInEtherWorlds_Parms SetInEtherWorlds_Parms;
	SetInEtherWorlds_Parms.newValue = newValue;

	this->ProcessEvent ( pFnSetInEtherWorlds, &SetInEtherWorlds_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.TickNpcLookAt
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAtlasAvatarAiNPC::TickNpcLookAt ( float DT )
{
	static UFunction* pFnTickNpcLookAt = NULL;

	if ( ! pFnTickNpcLookAt )
		pFnTickNpcLookAt = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.TickNpcLookAt" );

	ANowAtlasAvatarAiNPC_execTickNpcLookAt_Parms TickNpcLookAt_Parms;
	TickNpcLookAt_Parms.DT = DT;

	this->ProcessEvent ( pFnTickNpcLookAt, &TickNpcLookAt_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.Tick
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowAtlasAvatarAiNPC::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.Tick" );

	ANowAtlasAvatarAiNPC_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.SetAiState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  NewState                       ( CPF_Parm )

void ANowAtlasAvatarAiNPC::eventSetAiState ( unsigned char NewState )
{
	static UFunction* pFnSetAiState = NULL;

	if ( ! pFnSetAiState )
		pFnSetAiState = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.SetAiState" );

	ANowAtlasAvatarAiNPC_eventSetAiState_Parms SetAiState_Parms;
	SetAiState_Parms.NewState = NewState;

	this->ProcessEvent ( pFnSetAiState, &SetAiState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.CheckForLookAtTarget
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowPawn*                ForPawn                        ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiNPC::CheckForLookAtTarget ( class ANowPawn* ForPawn )
{
	static UFunction* pFnCheckForLookAtTarget = NULL;

	if ( ! pFnCheckForLookAtTarget )
		pFnCheckForLookAtTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.CheckForLookAtTarget" );

	ANowAtlasAvatarAiNPC_execCheckForLookAtTarget_Parms CheckForLookAtTarget_Parms;
	CheckForLookAtTarget_Parms.ForPawn = ForPawn;

	this->ProcessEvent ( pFnCheckForLookAtTarget, &CheckForLookAtTarget_Parms, NULL );

	return CheckForLookAtTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiNPC.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiNPC::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.PostBeginPlay" );

	ANowAtlasAvatarAiNPC_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPC.GetAiIdentification
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarAiNPC::GetAiIdentification ( )
{
	static UFunction* pFnGetAiIdentification = NULL;

	if ( ! pFnGetAiIdentification )
		pFnGetAiIdentification = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.GetAiIdentification" );

	ANowAtlasAvatarAiNPC_execGetAiIdentification_Parms GetAiIdentification_Parms;

	pFnGetAiIdentification->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAiIdentification, &GetAiIdentification_Parms, NULL );

	pFnGetAiIdentification->FunctionFlags |= 0x400;

	return GetAiIdentification_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiNPC.GetInteractionString
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarAiNPC::GetInteractionString ( )
{
	static UFunction* pFnGetInteractionString = NULL;

	if ( ! pFnGetInteractionString )
		pFnGetInteractionString = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.GetInteractionString" );

	ANowAtlasAvatarAiNPC_execGetInteractionString_Parms GetInteractionString_Parms;

	pFnGetInteractionString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInteractionString, &GetInteractionString_Parms, NULL );

	pFnGetInteractionString->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarAiNPC.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiNPC::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPC.AtlasUse" );

	ANowAtlasAvatarAiNPC_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiNPCTownCrier.Talk
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiNPCTownCrier::Talk ( )
{
	static UFunction* pFnTalk = NULL;

	if ( ! pFnTalk )
		pFnTalk = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPCTownCrier.Talk" );

	ANowAtlasAvatarAiNPCTownCrier_execTalk_Parms Talk_Parms;

	this->ProcessEvent ( pFnTalk, &Talk_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPCTownCrier.tcpReceive
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarAiNPCTownCrier::tcpReceive ( struct FString sString )
{
	static UFunction* pFntcpReceive = NULL;

	if ( ! pFntcpReceive )
		pFntcpReceive = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPCTownCrier.tcpReceive" );

	ANowAtlasAvatarAiNPCTownCrier_exectcpReceive_Parms tcpReceive_Parms;
	memcpy ( &tcpReceive_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFntcpReceive, &tcpReceive_Parms, NULL );

	return tcpReceive_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarAiNPCTownCrier.InitTownCrier
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiNPCTownCrier::InitTownCrier ( )
{
	static UFunction* pFnInitTownCrier = NULL;

	if ( ! pFnInitTownCrier )
		pFnInitTownCrier = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPCTownCrier.InitTownCrier" );

	ANowAtlasAvatarAiNPCTownCrier_execInitTownCrier_Parms InitTownCrier_Parms;

	this->ProcessEvent ( pFnInitTownCrier, &InitTownCrier_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPCTownCrier.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAiNPCTownCrier::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPCTownCrier.PostBeginPlay" );

	ANowAtlasAvatarAiNPCTownCrier_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAiNPCTownCrier.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarAiNPCTownCrier::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAiNPCTownCrier.AtlasUse" );

	ANowAtlasAvatarAiNPCTownCrier_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarGolem.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FName                   LastHitBoneName                ( CPF_OptionalParm | CPF_Parm )
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarGolem::eventSpawnCorpse ( struct FName LastHitBoneName, float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGolem.SpawnCorpse" );

	ANowAtlasAvatarGolem_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	memcpy ( &SpawnCorpse_Parms.LastHitBoneName, &LastHitBoneName, 0x8 );
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGolem.SetLightLevel
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            iNewLevel                      ( CPF_Parm )

void ANowAtlasAvatarGolem::eventSetLightLevel ( int iNewLevel )
{
	static UFunction* pFnSetLightLevel = NULL;

	if ( ! pFnSetLightLevel )
		pFnSetLightLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGolem.SetLightLevel" );

	ANowAtlasAvatarGolem_eventSetLightLevel_Parms SetLightLevel_Parms;
	SetLightLevel_Parms.iNewLevel = iNewLevel;

	this->ProcessEvent ( pFnSetLightLevel, &SetLightLevel_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGolem.FaceRotationTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarGolem::eventFaceRotationTarget ( )
{
	static UFunction* pFnFaceRotationTarget = NULL;

	if ( ! pFnFaceRotationTarget )
		pFnFaceRotationTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGolem.FaceRotationTarget" );

	ANowAtlasAvatarGolem_eventFaceRotationTarget_Parms FaceRotationTarget_Parms;

	this->ProcessEvent ( pFnFaceRotationTarget, &FaceRotationTarget_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGolem.GetDynMat
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UMaterialInstanceConstant* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UMaterialInstanceConstant* ANowAtlasAvatarGolem::eventGetDynMat ( )
{
	static UFunction* pFnGetDynMat = NULL;

	if ( ! pFnGetDynMat )
		pFnGetDynMat = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGolem.GetDynMat" );

	ANowAtlasAvatarGolem_eventGetDynMat_Parms GetDynMat_Parms;

	this->ProcessEvent ( pFnGetDynMat, &GetDynMat_Parms, NULL );

	return GetDynMat_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarGolem.SetGolemLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iNewLevel                      ( CPF_Parm )

void ANowAtlasAvatarGolem::SetGolemLevel ( int iNewLevel )
{
	static UFunction* pFnSetGolemLevel = NULL;

	if ( ! pFnSetGolemLevel )
		pFnSetGolemLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGolem.SetGolemLevel" );

	ANowAtlasAvatarGolem_execSetGolemLevel_Parms SetGolemLevel_Parms;
	SetGolemLevel_Parms.iNewLevel = iNewLevel;

	pFnSetGolemLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGolemLevel, &SetGolemLevel_Parms, NULL );

	pFnSetGolemLevel->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarGolem.Bump
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowAtlasAvatarGolem::eventBump ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitNormal )
{
	static UFunction* pFnBump = NULL;

	if ( ! pFnBump )
		pFnBump = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGolem.Bump" );

	ANowAtlasAvatarGolem_eventBump_Parms Bump_Parms;
	Bump_Parms.Other = Other;
	Bump_Parms.OtherComp = OtherComp;
	memcpy ( &Bump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnBump, &Bump_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGolem.SmallSweepEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarGolem::eventSmallSweepEffect ( )
{
	static UFunction* pFnSmallSweepEffect = NULL;

	if ( ! pFnSmallSweepEffect )
		pFnSmallSweepEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGolem.SmallSweepEffect" );

	ANowAtlasAvatarGolem_eventSmallSweepEffect_Parms SmallSweepEffect_Parms;

	this->ProcessEvent ( pFnSmallSweepEffect, &SmallSweepEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGolem.SweepEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarGolem::eventSweepEffect ( )
{
	static UFunction* pFnSweepEffect = NULL;

	if ( ! pFnSweepEffect )
		pFnSweepEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGolem.SweepEffect" );

	ANowAtlasAvatarGolem_eventSweepEffect_Parms SweepEffect_Parms;

	this->ProcessEvent ( pFnSweepEffect, &SweepEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGolem.StompEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarGolem::eventStompEffect ( )
{
	static UFunction* pFnStompEffect = NULL;

	if ( ! pFnStompEffect )
		pFnStompEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGolem.StompEffect" );

	ANowAtlasAvatarGolem_eventStompEffect_Parms StompEffect_Parms;

	this->ProcessEvent ( pFnStompEffect, &StompEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGolem.GroundShakeEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarGolem::eventGroundShakeEffect ( )
{
	static UFunction* pFnGroundShakeEffect = NULL;

	if ( ! pFnGroundShakeEffect )
		pFnGroundShakeEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGolem.GroundShakeEffect" );

	ANowAtlasAvatarGolem_eventGroundShakeEffect_Parms GroundShakeEffect_Parms;

	this->ProcessEvent ( pFnGroundShakeEffect, &GroundShakeEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGolem.DrawDebugRadii
// [0x00820002] 
// Parameters infos:
// struct FVector                 vPos                           ( CPF_Parm )
// float                          fRadii                         ( CPF_Parm )
// int                            Red                            ( CPF_Parm )
// int                            Green                          ( CPF_Parm )
// int                            Blue                           ( CPF_Parm )

void ANowAtlasAvatarGolem::DrawDebugRadii ( struct FVector vPos, float fRadii, int Red, int Green, int Blue )
{
	static UFunction* pFnDrawDebugRadii = NULL;

	if ( ! pFnDrawDebugRadii )
		pFnDrawDebugRadii = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGolem.DrawDebugRadii" );

	ANowAtlasAvatarGolem_execDrawDebugRadii_Parms DrawDebugRadii_Parms;
	memcpy ( &DrawDebugRadii_Parms.vPos, &vPos, 0xC );
	DrawDebugRadii_Parms.fRadii = fRadii;
	DrawDebugRadii_Parms.Red = Red;
	DrawDebugRadii_Parms.Green = Green;
	DrawDebugRadii_Parms.Blue = Blue;

	this->ProcessEvent ( pFnDrawDebugRadii, &DrawDebugRadii_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGolem.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarGolem::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGolem.PostBeginPlay" );

	ANowAtlasAvatarGolem_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.OpenUserInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarNpc::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.OpenUserInterface" );

	ANowAtlasAvatarNpc_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpc::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.AtlasUse" );

	ANowAtlasAvatarNpc_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpc.SpawnHitFx
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// unsigned long                  ClientFeedBack                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIgnoreParticles               ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarNpc::eventSpawnHitFx ( struct FVector HitLocation, unsigned long ClientFeedBack, unsigned long bIgnoreParticles )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.SpawnHitFx" );

	ANowAtlasAvatarNpc_eventSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.HitLocation, &HitLocation, 0xC );
	SpawnHitFx_Parms.ClientFeedBack = ClientFeedBack;
	SpawnHitFx_Parms.bIgnoreParticles = bIgnoreParticles;

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.TurnTo
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   WhatPawn                       ( CPF_Parm )

void ANowAtlasAvatarNpc::eventTurnTo ( class APawn* WhatPawn )
{
	static UFunction* pFnTurnTo = NULL;

	if ( ! pFnTurnTo )
		pFnTurnTo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.TurnTo" );

	ANowAtlasAvatarNpc_eventTurnTo_Parms TurnTo_Parms;
	TurnTo_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnTurnTo, &TurnTo_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.TweenTurn
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAtlasAvatarNpc::TweenTurn ( float DT )
{
	static UFunction* pFnTweenTurn = NULL;

	if ( ! pFnTweenTurn )
		pFnTweenTurn = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.TweenTurn" );

	ANowAtlasAvatarNpc_execTweenTurn_Parms TweenTurn_Parms;
	TweenTurn_Parms.DT = DT;

	this->ProcessEvent ( pFnTweenTurn, &TweenTurn_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.FindLookAtPoint
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarNpc::FindLookAtPoint ( )
{
	static UFunction* pFnFindLookAtPoint = NULL;

	if ( ! pFnFindLookAtPoint )
		pFnFindLookAtPoint = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.FindLookAtPoint" );

	ANowAtlasAvatarNpc_execFindLookAtPoint_Parms FindLookAtPoint_Parms;

	this->ProcessEvent ( pFnFindLookAtPoint, &FindLookAtPoint_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.CanOpenScene
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowPlayerController*    NPC                            ( CPF_Parm )

bool ANowAtlasAvatarNpc::CanOpenScene ( class ANowPlayerController* NPC )
{
	static UFunction* pFnCanOpenScene = NULL;

	if ( ! pFnCanOpenScene )
		pFnCanOpenScene = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.CanOpenScene" );

	ANowAtlasAvatarNpc_execCanOpenScene_Parms CanOpenScene_Parms;
	CanOpenScene_Parms.NPC = NPC;

	this->ProcessEvent ( pFnCanOpenScene, &CanOpenScene_Parms, NULL );

	return CanOpenScene_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpc.OpenUserGFXInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            OpenSceneIndex                 ( CPF_Parm )

void ANowAtlasAvatarNpc::eventOpenUserGFXInterface ( int OpenSceneIndex )
{
	static UFunction* pFnOpenUserGFXInterface = NULL;

	if ( ! pFnOpenUserGFXInterface )
		pFnOpenUserGFXInterface = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.OpenUserGFXInterface" );

	ANowAtlasAvatarNpc_eventOpenUserGFXInterface_Parms OpenUserGFXInterface_Parms;
	OpenUserGFXInterface_Parms.OpenSceneIndex = OpenSceneIndex;

	this->ProcessEvent ( pFnOpenUserGFXInterface, &OpenUserGFXInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowAtlasAvatarNpc::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.Tick" );

	ANowAtlasAvatarNpc_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarNpc::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.PostBeginPlay" );

	ANowAtlasAvatarNpc_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.SetTurnTo
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  newValue                       ( CPF_Parm )

void ANowAtlasAvatarNpc::eventSetTurnTo ( unsigned long newValue )
{
	static UFunction* pFnSetTurnTo = NULL;

	if ( ! pFnSetTurnTo )
		pFnSetTurnTo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.SetTurnTo" );

	ANowAtlasAvatarNpc_eventSetTurnTo_Parms SetTurnTo_Parms;
	SetTurnTo_Parms.newValue = newValue;

	this->ProcessEvent ( pFnSetTurnTo, &SetTurnTo_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FName                   LastHitBoneName                ( CPF_OptionalParm | CPF_Parm )
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarNpc::eventSpawnCorpse ( struct FName LastHitBoneName, float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.SpawnCorpse" );

	ANowAtlasAvatarNpc_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	memcpy ( &SpawnCorpse_Parms.LastHitBoneName, &LastHitBoneName, 0x8 );
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.AddStaticMeshObject
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UStaticMesh*             STM                            ( CPF_Parm )
// struct FName                   SocketName                     ( CPF_Parm )

void ANowAtlasAvatarNpc::eventAddStaticMeshObject ( class UStaticMesh* STM, struct FName SocketName )
{
	static UFunction* pFnAddStaticMeshObject = NULL;

	if ( ! pFnAddStaticMeshObject )
		pFnAddStaticMeshObject = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.AddStaticMeshObject" );

	ANowAtlasAvatarNpc_eventAddStaticMeshObject_Parms AddStaticMeshObject_Parms;
	AddStaticMeshObject_Parms.STM = STM;
	memcpy ( &AddStaticMeshObject_Parms.SocketName, &SocketName, 0x8 );

	this->ProcessEvent ( pFnAddStaticMeshObject, &AddStaticMeshObject_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.SetInEtherWorlds
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  newValue                       ( CPF_Parm )

void ANowAtlasAvatarNpc::eventSetInEtherWorlds ( unsigned long newValue )
{
	static UFunction* pFnSetInEtherWorlds = NULL;

	if ( ! pFnSetInEtherWorlds )
		pFnSetInEtherWorlds = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.SetInEtherWorlds" );

	ANowAtlasAvatarNpc_eventSetInEtherWorlds_Parms SetInEtherWorlds_Parms;
	SetInEtherWorlds_Parms.newValue = newValue;

	this->ProcessEvent ( pFnSetInEtherWorlds, &SetInEtherWorlds_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.TickLookAt
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAtlasAvatarNpc::TickLookAt ( float DT )
{
	static UFunction* pFnTickLookAt = NULL;

	if ( ! pFnTickLookAt )
		pFnTickLookAt = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.TickLookAt" );

	ANowAtlasAvatarNpc_execTickLookAt_Parms TickLookAt_Parms;
	TickLookAt_Parms.DT = DT;

	this->ProcessEvent ( pFnTickLookAt, &TickLookAt_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpc.CheckForLookAtTarget
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   ForPawn                        ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpc::CheckForLookAtTarget ( class APawn* ForPawn )
{
	static UFunction* pFnCheckForLookAtTarget = NULL;

	if ( ! pFnCheckForLookAtTarget )
		pFnCheckForLookAtTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpc.CheckForLookAtTarget" );

	ANowAtlasAvatarNpc_execCheckForLookAtTarget_Parms CheckForLookAtTarget_Parms;
	CheckForLookAtTarget_Parms.ForPawn = ForPawn;

	this->ProcessEvent ( pFnCheckForLookAtTarget, &CheckForLookAtTarget_Parms, NULL );

	return CheckForLookAtTarget_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarHouseBankerNpc.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarHouseBankerNpc::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarHouseBankerNpc.PostBeginPlay" );

	ANowAtlasAvatarHouseBankerNpc_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarHouseBankerNpc.setHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* house                          ( CPF_Parm )

void ANowAtlasAvatarHouseBankerNpc::setHouse ( class ANowAtlasAvatarPlayerHouse* house )
{
	static UFunction* pFnsetHouse = NULL;

	if ( ! pFnsetHouse )
		pFnsetHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarHouseBankerNpc.setHouse" );

	ANowAtlasAvatarHouseBankerNpc_execsetHouse_Parms setHouse_Parms;
	setHouse_Parms.house = house;

	this->ProcessEvent ( pFnsetHouse, &setHouse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarHouseBankerNpc.findHouse
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarHouseBankerNpc::findHouse ( )
{
	static UFunction* pFnfindHouse = NULL;

	if ( ! pFnfindHouse )
		pFnfindHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarHouseBankerNpc.findHouse" );

	ANowAtlasAvatarHouseBankerNpc_execfindHouse_Parms findHouse_Parms;

	this->ProcessEvent ( pFnfindHouse, &findHouse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarHouseBankerNpc.IsMyHouse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowAtlasAvatarPlayerHouse* house                          ( CPF_Parm )

bool ANowAtlasAvatarHouseBankerNpc::IsMyHouse ( class ANowAtlasAvatarPlayerHouse* house )
{
	static UFunction* pFnIsMyHouse = NULL;

	if ( ! pFnIsMyHouse )
		pFnIsMyHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarHouseBankerNpc.IsMyHouse" );

	ANowAtlasAvatarHouseBankerNpc_execIsMyHouse_Parms IsMyHouse_Parms;
	IsMyHouse_Parms.house = house;

	pFnIsMyHouse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsMyHouse, &IsMyHouse_Parms, NULL );

	pFnIsMyHouse->FunctionFlags |= 0x400;

	return IsMyHouse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarHouseBankerNpc.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarHouseBankerNpc::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarHouseBankerNpc.AtlasUse" );

	ANowAtlasAvatarHouseBankerNpc_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcLibrary.OpenUserInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarNpcLibrary::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcLibrary.OpenUserInterface" );

	ANowAtlasAvatarNpcLibrary_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpcLibrary.AssignSceneStr
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarNpcLibrary::AssignSceneStr ( )
{
	static UFunction* pFnAssignSceneStr = NULL;

	if ( ! pFnAssignSceneStr )
		pFnAssignSceneStr = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcLibrary.AssignSceneStr" );

	ANowAtlasAvatarNpcLibrary_execAssignSceneStr_Parms AssignSceneStr_Parms;

	pFnAssignSceneStr->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAssignSceneStr, &AssignSceneStr_Parms, NULL );

	pFnAssignSceneStr->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarNpcMailRecive.OpenMail
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarNpcMailRecive::eventOpenMail ( )
{
	static UFunction* pFnOpenMail = NULL;

	if ( ! pFnOpenMail )
		pFnOpenMail = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcMailRecive.OpenMail" );

	ANowAtlasAvatarNpcMailRecive_eventOpenMail_Parms OpenMail_Parms;

	this->ProcessEvent ( pFnOpenMail, &OpenMail_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpcMailRecive.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcMailRecive::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcMailRecive.AtlasUse" );

	ANowAtlasAvatarNpcMailRecive_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcMailRecive.GetMailIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarNpcMailRecive::GetMailIndex ( )
{
	static UFunction* pFnGetMailIndex = NULL;

	if ( ! pFnGetMailIndex )
		pFnGetMailIndex = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcMailRecive.GetMailIndex" );

	ANowAtlasAvatarNpcMailRecive_execGetMailIndex_Parms GetMailIndex_Parms;

	pFnGetMailIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMailIndex, &GetMailIndex_Parms, NULL );

	pFnGetMailIndex->FunctionFlags |= 0x400;

	return GetMailIndex_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcNoMove.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcNoMove::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcNoMove.AtlasUse" );

	ANowAtlasAvatarNpcNoMove_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcQuestGiver.OpenUserInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarNpcQuestGiver::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcQuestGiver.OpenUserInterface" );

	ANowAtlasAvatarNpcQuestGiver_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpcQuestGiver.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcQuestGiver::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcQuestGiver.AtlasUse" );

	ANowAtlasAvatarNpcQuestGiver_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcTalker.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcTalker::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcTalker.AtlasUse" );

	ANowAtlasAvatarNpcTalker_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcVendor.CheckUseDist
// [0x00020000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarNpcVendor::CheckUseDist ( )
{
	static UFunction* pFnCheckUseDist = NULL;

	if ( ! pFnCheckUseDist )
		pFnCheckUseDist = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcVendor.CheckUseDist" );

	ANowAtlasAvatarNpcVendor_execCheckUseDist_Parms CheckUseDist_Parms;

	this->ProcessEvent ( pFnCheckUseDist, &CheckUseDist_Parms, NULL );

	return CheckUseDist_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcVendor.OpenScene
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarNpcVendor::OpenScene ( )
{
	static UFunction* pFnOpenScene = NULL;

	if ( ! pFnOpenScene )
		pFnOpenScene = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcVendor.OpenScene" );

	ANowAtlasAvatarNpcVendor_execOpenScene_Parms OpenScene_Parms;

	pFnOpenScene->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenScene, &OpenScene_Parms, NULL );

	pFnOpenScene->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarNpcVendor.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcVendor::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcVendor.AtlasUse" );

	ANowAtlasAvatarNpcVendor_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcTutorialTrade.openVendorGUI
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarNpcTutorialTrade::openVendorGUI ( )
{
	static UFunction* pFnopenVendorGUI = NULL;

	if ( ! pFnopenVendorGUI )
		pFnopenVendorGUI = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcTutorialTrade.openVendorGUI" );

	ANowAtlasAvatarNpcTutorialTrade_execopenVendorGUI_Parms openVendorGUI_Parms;

	pFnopenVendorGUI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnopenVendorGUI, &openVendorGUI_Parms, NULL );

	pFnopenVendorGUI->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarNpcTutorialTrade.OpenScene
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarNpcTutorialTrade::OpenScene ( )
{
	static UFunction* pFnOpenScene = NULL;

	if ( ! pFnOpenScene )
		pFnOpenScene = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcTutorialTrade.OpenScene" );

	ANowAtlasAvatarNpcTutorialTrade_execOpenScene_Parms OpenScene_Parms;

	pFnOpenScene->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenScene, &OpenScene_Parms, NULL );

	pFnOpenScene->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarNpcTutorialTrade.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcTutorialTrade::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcTutorialTrade.AtlasUse" );

	ANowAtlasAvatarNpcTutorialTrade_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerVendor.FixMyPosition
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarPlayerVendor::FixMyPosition ( )
{
	static UFunction* pFnFixMyPosition = NULL;

	if ( ! pFnFixMyPosition )
		pFnFixMyPosition = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerVendor.FixMyPosition" );

	ANowAtlasAvatarPlayerVendor_execFixMyPosition_Parms FixMyPosition_Parms;

	this->ProcessEvent ( pFnFixMyPosition, &FixMyPosition_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerVendor.getVendor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatar*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatar* ANowAtlasAvatarPlayerVendor::eventgetVendor ( )
{
	static UFunction* pFngetVendor = NULL;

	if ( ! pFngetVendor )
		pFngetVendor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerVendor.getVendor" );

	ANowAtlasAvatarPlayerVendor_eventgetVendor_Parms getVendor_Parms;

	this->ProcessEvent ( pFngetVendor, &getVendor_Parms, NULL );

	return getVendor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerVendor.sendMessageToVendor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarPlayerVendor::eventsendMessageToVendor ( struct FString Message )
{
	static UFunction* pFnsendMessageToVendor = NULL;

	if ( ! pFnsendMessageToVendor )
		pFnsendMessageToVendor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerVendor.sendMessageToVendor" );

	ANowAtlasAvatarPlayerVendor_eventsendMessageToVendor_Parms sendMessageToVendor_Parms;
	memcpy ( &sendMessageToVendor_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnsendMessageToVendor, &sendMessageToVendor_Parms, NULL );

	return sendMessageToVendor_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerVendor.OpenUserInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarPlayerVendor::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerVendor.OpenUserInterface" );

	ANowAtlasAvatarPlayerVendor_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerVendor.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerVendor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerVendor.PostBeginPlay" );

	ANowAtlasAvatarPlayerVendor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerVendor.Use
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarPlayerVendor::Use ( )
{
	static UFunction* pFnUse = NULL;

	if ( ! pFnUse )
		pFnUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerVendor.Use" );

	ANowAtlasAvatarPlayerVendor_execUse_Parms Use_Parms;

	pFnUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUse, &Use_Parms, NULL );

	pFnUse->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarTellUse.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarTellUse::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarTellUse.AtlasUse" );

	ANowAtlasAvatarTellUse_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarTellUseNpc.SpawnHitFx
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// unsigned long                  ClientFeedBack                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIgnoreParticles               ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarTellUseNpc::eventSpawnHitFx ( struct FVector HitLocation, unsigned long ClientFeedBack, unsigned long bIgnoreParticles )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarTellUseNpc.SpawnHitFx" );

	ANowAtlasAvatarTellUseNpc_eventSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.HitLocation, &HitLocation, 0xC );
	SpawnHitFx_Parms.ClientFeedBack = ClientFeedBack;
	SpawnHitFx_Parms.bIgnoreParticles = bIgnoreParticles;

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarStable.ToggleStableUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarStable::eventToggleStableUI ( )
{
	static UFunction* pFnToggleStableUI = NULL;

	if ( ! pFnToggleStableUI )
		pFnToggleStableUI = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarStable.ToggleStableUI" );

	ANowAtlasAvatarStable_eventToggleStableUI_Parms ToggleStableUI_Parms;

	this->ProcessEvent ( pFnToggleStableUI, &ToggleStableUI_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarStable.targetStables
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarStable::eventtargetStables ( )
{
	static UFunction* pFntargetStables = NULL;

	if ( ! pFntargetStables )
		pFntargetStables = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarStable.targetStables" );

	ANowAtlasAvatarStable_eventtargetStables_Parms targetStables_Parms;

	this->ProcessEvent ( pFntargetStables, &targetStables_Parms, NULL );

	return targetStables_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarStable.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarStable::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarStable.AtlasUse" );

	ANowAtlasAvatarStable_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarStM.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FName                   LastHitBoneName                ( CPF_OptionalParm | CPF_Parm )
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarStM::eventSpawnCorpse ( struct FName LastHitBoneName, float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarStM.SpawnCorpse" );

	ANowAtlasAvatarStM_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	memcpy ( &SpawnCorpse_Parms.LastHitBoneName, &LastHitBoneName, 0x8 );
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarStM.bIsStatic
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarStM::eventbIsStatic ( )
{
	static UFunction* pFnbIsStatic = NULL;

	if ( ! pFnbIsStatic )
		pFnbIsStatic = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarStM.bIsStatic" );

	ANowAtlasAvatarStM_eventbIsStatic_Parms bIsStatic_Parms;

	this->ProcessEvent ( pFnbIsStatic, &bIsStatic_Parms, NULL );

	return bIsStatic_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarBuildAvatar.bIsStatic
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarBuildAvatar::eventbIsStatic ( )
{
	static UFunction* pFnbIsStatic = NULL;

	if ( ! pFnbIsStatic )
		pFnbIsStatic = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarBuildAvatar.bIsStatic" );

	ANowAtlasAvatarBuildAvatar_eventbIsStatic_Parms bIsStatic_Parms;

	this->ProcessEvent ( pFnbIsStatic, &bIsStatic_Parms, NULL );

	return bIsStatic_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarBuildAvatar.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarBuildAvatar::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarBuildAvatar.PostBeginPlay" );

	ANowAtlasAvatarBuildAvatar_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarBuildAvatar.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarBuildAvatar::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarBuildAvatar.AtlasUse" );

	ANowAtlasAvatarBuildAvatar_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPylon::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.Destroyed" );

	ANowAtlasAvatarPylon_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.DustEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPylon::eventDustEffect ( )
{
	static UFunction* pFnDustEffect = NULL;

	if ( ! pFnDustEffect )
		pFnDustEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.DustEffect" );

	ANowAtlasAvatarPylon_eventDustEffect_Parms DustEffect_Parms;

	this->ProcessEvent ( pFnDustEffect, &DustEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.SpawnFracture
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPylon::eventSpawnFracture ( )
{
	static UFunction* pFnSpawnFracture = NULL;

	if ( ! pFnSpawnFracture )
		pFnSpawnFracture = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.SpawnFracture" );

	ANowAtlasAvatarPylon_eventSpawnFracture_Parms SpawnFracture_Parms;

	this->ProcessEvent ( pFnSpawnFracture, &SpawnFracture_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.SetTier
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            NewTier                        ( CPF_Parm )
// unsigned long                  bIgnoreEffects                 ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarPylon::eventSetTier ( int NewTier, unsigned long bIgnoreEffects )
{
	static UFunction* pFnSetTier = NULL;

	if ( ! pFnSetTier )
		pFnSetTier = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.SetTier" );

	ANowAtlasAvatarPylon_eventSetTier_Parms SetTier_Parms;
	SetTier_Parms.NewTier = NewTier;
	SetTier_Parms.bIgnoreEffects = bIgnoreEffects;

	this->ProcessEvent ( pFnSetTier, &SetTier_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.TowerDestroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPylon::eventTowerDestroyed ( )
{
	static UFunction* pFnTowerDestroyed = NULL;

	if ( ! pFnTowerDestroyed )
		pFnTowerDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.TowerDestroyed" );

	ANowAtlasAvatarPylon_eventTowerDestroyed_Parms TowerDestroyed_Parms;

	this->ProcessEvent ( pFnTowerDestroyed, &TowerDestroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.ChangedAoe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarPylon::eventChangedAoe ( )
{
	static UFunction* pFnChangedAoe = NULL;

	if ( ! pFnChangedAoe )
		pFnChangedAoe = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.ChangedAoe" );

	ANowAtlasAvatarPylon_eventChangedAoe_Parms ChangedAoe_Parms;

	this->ProcessEvent ( pFnChangedAoe, &ChangedAoe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.SetMaterialShow
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Slot                           ( CPF_Parm )
// unsigned long                  bOn                            ( CPF_Parm )

void ANowAtlasAvatarPylon::eventSetMaterialShow ( int Slot, unsigned long bOn )
{
	static UFunction* pFnSetMaterialShow = NULL;

	if ( ! pFnSetMaterialShow )
		pFnSetMaterialShow = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.SetMaterialShow" );

	ANowAtlasAvatarPylon_eventSetMaterialShow_Parms SetMaterialShow_Parms;
	SetMaterialShow_Parms.Slot = Slot;
	SetMaterialShow_Parms.bOn = bOn;

	this->ProcessEvent ( pFnSetMaterialShow, &SetMaterialShow_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.CreateLadders
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarPylon::CreateLadders ( )
{
	static UFunction* pFnCreateLadders = NULL;

	if ( ! pFnCreateLadders )
		pFnCreateLadders = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.CreateLadders" );

	ANowAtlasAvatarPylon_execCreateLadders_Parms CreateLadders_Parms;

	this->ProcessEvent ( pFnCreateLadders, &CreateLadders_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.PlayHitEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          HpChange                       ( CPF_Parm )

void ANowAtlasAvatarPylon::eventPlayHitEffect ( float HpChange )
{
	static UFunction* pFnPlayHitEffect = NULL;

	if ( ! pFnPlayHitEffect )
		pFnPlayHitEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.PlayHitEffect" );

	ANowAtlasAvatarPylon_eventPlayHitEffect_Parms PlayHitEffect_Parms;
	PlayHitEffect_Parms.HpChange = HpChange;

	this->ProcessEvent ( pFnPlayHitEffect, &PlayHitEffect_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPylon::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.PostBeginPlay" );

	ANowAtlasAvatarPylon_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPylon.WasJustCreated
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPylon::WasJustCreated ( )
{
	static UFunction* pFnWasJustCreated = NULL;

	if ( ! pFnWasJustCreated )
		pFnWasJustCreated = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.WasJustCreated" );

	ANowAtlasAvatarPylon_execWasJustCreated_Parms WasJustCreated_Parms;

	this->ProcessEvent ( pFnWasJustCreated, &WasJustCreated_Parms, NULL );

	return WasJustCreated_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.UsedSign
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )

bool ANowAtlasAvatarPylon::eventUsedSign ( class APlayerController* PC )
{
	static UFunction* pFnUsedSign = NULL;

	if ( ! pFnUsedSign )
		pFnUsedSign = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.UsedSign" );

	ANowAtlasAvatarPylon_eventUsedSign_Parms UsedSign_Parms;
	UsedSign_Parms.PC = PC;

	this->ProcessEvent ( pFnUsedSign, &UsedSign_Parms, NULL );

	return UsedSign_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.GetLastRoundInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPylon::GetLastRoundInfo ( )
{
	static UFunction* pFnGetLastRoundInfo = NULL;

	if ( ! pFnGetLastRoundInfo )
		pFnGetLastRoundInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.GetLastRoundInfo" );

	ANowAtlasAvatarPylon_execGetLastRoundInfo_Parms GetLastRoundInfo_Parms;

	pFnGetLastRoundInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLastRoundInfo, &GetLastRoundInfo_Parms, NULL );

	pFnGetLastRoundInfo->FunctionFlags |= 0x400;

	return GetLastRoundInfo_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.GetGuildName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPylon::GetGuildName ( )
{
	static UFunction* pFnGetGuildName = NULL;

	if ( ! pFnGetGuildName )
		pFnGetGuildName = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.GetGuildName" );

	ANowAtlasAvatarPylon_execGetGuildName_Parms GetGuildName_Parms;

	pFnGetGuildName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuildName, &GetGuildName_Parms, NULL );

	pFnGetGuildName->FunctionFlags |= 0x400;

	return GetGuildName_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.GetPylonGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowAtlasAvatarPylon::GetPylonGuid ( )
{
	static UFunction* pFnGetPylonGuid = NULL;

	if ( ! pFnGetPylonGuid )
		pFnGetPylonGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.GetPylonGuid" );

	ANowAtlasAvatarPylon_execGetPylonGuid_Parms GetPylonGuid_Parms;

	pFnGetPylonGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPylonGuid, &GetPylonGuid_Parms, NULL );

	pFnGetPylonGuid->FunctionFlags |= 0x400;

	return GetPylonGuid_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarPylon::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.AtlasUse" );

	ANowAtlasAvatarPylon_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPylon.InitPylon
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarPylon::InitPylon ( )
{
	static UFunction* pFnInitPylon = NULL;

	if ( ! pFnInitPylon )
		pFnInitPylon = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPylon.InitPylon" );

	ANowAtlasAvatarPylon_execInitPylon_Parms InitPylon_Parms;

	pFnInitPylon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitPylon, &InitPylon_Parms, NULL );

	pFnInitPylon->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarDebugBox.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarDebugBox::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarDebugBox.PostBeginPlay" );

	ANowAtlasAvatarDebugBox_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGameBoard.OpenUserInterface
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarGameBoard::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGameBoard.OpenUserInterface" );

	ANowAtlasAvatarGameBoard_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarGameBoard.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarGameBoard::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarGameBoard.AtlasUse" );

	ANowAtlasAvatarGameBoard_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcStatic.OpenUserInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarNpcStatic::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcStatic.OpenUserInterface" );

	ANowAtlasAvatarNpcStatic_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpcStatic.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarNpcStatic::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcStatic.AtlasUse" );

	ANowAtlasAvatarNpcStatic_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarNpcMailSend.OpenUserInterface
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FString                 OpenScene                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowAtlasAvatarNpcMailSend::eventOpenUserInterface ( struct FString OpenScene )
{
	static UFunction* pFnOpenUserInterface = NULL;

	if ( ! pFnOpenUserInterface )
		pFnOpenUserInterface = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcMailSend.OpenUserInterface" );

	ANowAtlasAvatarNpcMailSend_eventOpenUserInterface_Parms OpenUserInterface_Parms;
	memcpy ( &OpenUserInterface_Parms.OpenScene, &OpenScene, 0xC );

	this->ProcessEvent ( pFnOpenUserInterface, &OpenUserInterface_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarNpcMailSend.GetMailIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowAtlasAvatarNpcMailSend::GetMailIndex ( )
{
	static UFunction* pFnGetMailIndex = NULL;

	if ( ! pFnGetMailIndex )
		pFnGetMailIndex = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarNpcMailSend.GetMailIndex" );

	ANowAtlasAvatarNpcMailSend_execGetMailIndex_Parms GetMailIndex_Parms;

	pFnGetMailIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMailIndex, &GetMailIndex_Parms, NULL );

	pFnGetMailIndex->FunctionFlags |= 0x400;

	return GetMailIndex_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPhysicalSpawner.SetAliveState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bAlive                         ( CPF_Parm )

void ANowAtlasAvatarPhysicalSpawner::eventSetAliveState ( unsigned long bAlive )
{
	static UFunction* pFnSetAliveState = NULL;

	if ( ! pFnSetAliveState )
		pFnSetAliveState = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPhysicalSpawner.SetAliveState" );

	ANowAtlasAvatarPhysicalSpawner_eventSetAliveState_Parms SetAliveState_Parms;
	SetAliveState_Parms.bAlive = bAlive;

	this->ProcessEvent ( pFnSetAliveState, &SetAliveState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPhysicalSpawner.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowAtlasAvatarPhysicalSpawner::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPhysicalSpawner.SetContentInfo" );

	ANowAtlasAvatarPhysicalSpawner_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPickable.Gather
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

	static UFunction* pFnGather = NULL;
bool ANowAtlasAvatarPickable::Gather ( class APlayerController* PC )
{

	if ( ! pFnGather )
		pFnGather = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPickable.Gather" );

	ANowAtlasAvatarPickable_execGather_Parms Gather_Parms;
	Gather_Parms.PC = PC;

	pFnGather->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGather, &Gather_Parms, NULL );

	pFnGather->FunctionFlags |= 0x400;

	return Gather_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FName                   LastHitBoneName                ( CPF_OptionalParm | CPF_Parm )
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFullGib                       ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::eventSpawnCorpse ( struct FName LastHitBoneName, float InDmg, unsigned long bFromMercyMode, unsigned long bFullGib )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.SpawnCorpse" );

	ANowAtlasAvatarSiegeWeapon_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	memcpy ( &SpawnCorpse_Parms.LastHitBoneName, &LastHitBoneName, 0x8 );
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;
	SpawnCorpse_Parms.bFullGib = bFullGib;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.TraceBoneHit
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeWeapon::eventTraceBoneHit ( )
{
	static UFunction* pFnTraceBoneHit = NULL;

	if ( ! pFnTraceBoneHit )
		pFnTraceBoneHit = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.TraceBoneHit" );

	ANowAtlasAvatarSiegeWeapon_eventTraceBoneHit_Parms TraceBoneHit_Parms;

	this->ProcessEvent ( pFnTraceBoneHit, &TraceBoneHit_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.Fire
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLoc                         ( CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::eventFire ( struct FVector HitLoc )
{
	static UFunction* pFnFire = NULL;

	if ( ! pFnFire )
		pFnFire = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.Fire" );

	ANowAtlasAvatarSiegeWeapon_eventFire_Parms Fire_Parms;
	memcpy ( &Fire_Parms.HitLoc, &HitLoc, 0xC );

	this->ProcessEvent ( pFnFire, &Fire_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.FindClosestSocket
// [0x00820002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLoc                         ( CPF_Parm )

int ANowAtlasAvatarSiegeWeapon::FindClosestSocket ( struct FVector HitLoc )
{
	static UFunction* pFnFindClosestSocket = NULL;

	if ( ! pFnFindClosestSocket )
		pFnFindClosestSocket = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.FindClosestSocket" );

	ANowAtlasAvatarSiegeWeapon_execFindClosestSocket_Parms FindClosestSocket_Parms;
	memcpy ( &FindClosestSocket_Parms.HitLoc, &HitLoc, 0xC );

	this->ProcessEvent ( pFnFindClosestSocket, &FindClosestSocket_Parms, NULL );

	return FindClosestSocket_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.DoFireTrace
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarSiegeWeapon::DoFireTrace ( )
{
	static UFunction* pFnDoFireTrace = NULL;

	if ( ! pFnDoFireTrace )
		pFnDoFireTrace = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.DoFireTrace" );

	ANowAtlasAvatarSiegeWeapon_execDoFireTrace_Parms DoFireTrace_Parms;

	this->ProcessEvent ( pFnDoFireTrace, &DoFireTrace_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.FindAndSetSockets
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarSiegeWeapon::eventFindAndSetSockets ( )
{
	static UFunction* pFnFindAndSetSockets = NULL;

	if ( ! pFnFindAndSetSockets )
		pFnFindAndSetSockets = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.FindAndSetSockets" );

	ANowAtlasAvatarSiegeWeapon_eventFindAndSetSockets_Parms FindAndSetSockets_Parms;

	this->ProcessEvent ( pFnFindAndSetSockets, &FindAndSetSockets_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.bIsStatic
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarSiegeWeapon::eventbIsStatic ( )
{
	static UFunction* pFnbIsStatic = NULL;

	if ( ! pFnbIsStatic )
		pFnbIsStatic = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.bIsStatic" );

	ANowAtlasAvatarSiegeWeapon_eventbIsStatic_Parms bIsStatic_Parms;

	this->ProcessEvent ( pFnbIsStatic, &bIsStatic_Parms, NULL );

	return bIsStatic_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.SetNewState
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            NewState                       ( CPF_Parm )
// unsigned long                  IsInit                         ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::eventSetNewState ( int NewState, unsigned long IsInit )
{
	static UFunction* pFnSetNewState = NULL;

	if ( ! pFnSetNewState )
		pFnSetNewState = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.SetNewState" );

	ANowAtlasAvatarSiegeWeapon_eventSetNewState_Parms SetNewState_Parms;
	SetNewState_Parms.NewState = NewState;
	SetNewState_Parms.IsInit = IsInit;

	this->ProcessEvent ( pFnSetNewState, &SetNewState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.Tick
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::Tick ( float DT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.Tick" );

	ANowAtlasAvatarSiegeWeapon_execTick_Parms Tick_Parms;
	Tick_Parms.DT = DT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.RotateState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewRotState                    ( CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::eventRotateState ( int NewRotState )
{
	static UFunction* pFnRotateState = NULL;

	if ( ! pFnRotateState )
		pFnRotateState = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.RotateState" );

	ANowAtlasAvatarSiegeWeapon_eventRotateState_Parms RotateState_Parms;
	RotateState_Parms.NewRotState = NewRotState;

	this->ProcessEvent ( pFnRotateState, &RotateState_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.FixupLocation
// [0x00820002] 
// Parameters infos:

void ANowAtlasAvatarSiegeWeapon::FixupLocation ( )
{
	static UFunction* pFnFixupLocation = NULL;

	if ( ! pFnFixupLocation )
		pFnFixupLocation = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.FixupLocation" );

	ANowAtlasAvatarSiegeWeapon_execFixupLocation_Parms FixupLocation_Parms;

	this->ProcessEvent ( pFnFixupLocation, &FixupLocation_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarSiegeWeapon::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.PostBeginPlay" );

	ANowAtlasAvatarSiegeWeapon_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.DoFire
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 Hit                            ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::DoFire ( struct FVector Hit, class APlayerController* PC )
{
	static UFunction* pFnDoFire = NULL;

	if ( ! pFnDoFire )
		pFnDoFire = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.DoFire" );

	ANowAtlasAvatarSiegeWeapon_execDoFire_Parms DoFire_Parms;
	memcpy ( &DoFire_Parms.Hit, &Hit, 0xC );
	DoFire_Parms.PC = PC;

	pFnDoFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoFire, &DoFire_Parms, NULL );

	pFnDoFire->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.GetState
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowAtlasAvatarSiegeWeapon::GetState ( )
{
	static UFunction* pFnGetState = NULL;

	if ( ! pFnGetState )
		pFnGetState = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.GetState" );

	ANowAtlasAvatarSiegeWeapon_execGetState_Parms GetState_Parms;

	pFnGetState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetState, &GetState_Parms, NULL );

	pFnGetState->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.Load
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::Load ( class APlayerController* PC )
{
	static UFunction* pFnLoad = NULL;

	if ( ! pFnLoad )
		pFnLoad = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.Load" );

	ANowAtlasAvatarSiegeWeapon_execLoad_Parms Load_Parms;
	Load_Parms.PC = PC;

	pFnLoad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoad, &Load_Parms, NULL );

	pFnLoad->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.ChangeState
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            NewState                       ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::ChangeState ( int NewState, class APlayerController* PC )
{
	static UFunction* pFnChangeState = NULL;

	if ( ! pFnChangeState )
		pFnChangeState = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.ChangeState" );

	ANowAtlasAvatarSiegeWeapon_execChangeState_Parms ChangeState_Parms;
	ChangeState_Parms.NewState = NewState;
	ChangeState_Parms.PC = PC;

	pFnChangeState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeState, &ChangeState_Parms, NULL );

	pFnChangeState->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.TurnLeft
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::TurnLeft ( class APlayerController* PC )
{
	static UFunction* pFnTurnLeft = NULL;

	if ( ! pFnTurnLeft )
		pFnTurnLeft = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.TurnLeft" );

	ANowAtlasAvatarSiegeWeapon_execTurnLeft_Parms TurnLeft_Parms;
	TurnLeft_Parms.PC = PC;

	pFnTurnLeft->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTurnLeft, &TurnLeft_Parms, NULL );

	pFnTurnLeft->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.TurnRight
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

void ANowAtlasAvatarSiegeWeapon::TurnRight ( class APlayerController* PC )
{
	static UFunction* pFnTurnRight = NULL;

	if ( ! pFnTurnRight )
		pFnTurnRight = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.TurnRight" );

	ANowAtlasAvatarSiegeWeapon_execTurnRight_Parms TurnRight_Parms;
	TurnRight_Parms.PC = PC;

	pFnTurnRight->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTurnRight, &TurnRight_Parms, NULL );

	pFnTurnRight->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarSiegeWeapon.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowAtlasAvatarSiegeWeapon::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarSiegeWeapon.AtlasUse" );

	ANowAtlasAvatarSiegeWeapon_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowLootObject.SetLocalFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewFlag                        ( CPF_Parm )

void ANowLootObject::eventSetLocalFlag ( int NewFlag )
{
	static UFunction* pFnSetLocalFlag = NULL;

	if ( ! pFnSetLocalFlag )
		pFnSetLocalFlag = UObject::FindObject< UFunction > ( "Function NowGame.NowLootObject.SetLocalFlag" );

	ANowLootObject_eventSetLocalFlag_Parms SetLocalFlag_Parms;
	SetLocalFlag_Parms.NewFlag = NewFlag;

	this->ProcessEvent ( pFnSetLocalFlag, &SetLocalFlag_Parms, NULL );
};

// Function NowGame.NowLootObject.FindGoodSpot
// [0x00820002] 
// Parameters infos:
// struct FVector                 StartLoc                       ( CPF_Parm )
// int                            iter                           ( CPF_Parm )

void ANowLootObject::FindGoodSpot ( struct FVector StartLoc, int iter )
{
	static UFunction* pFnFindGoodSpot = NULL;

	if ( ! pFnFindGoodSpot )
		pFnFindGoodSpot = UObject::FindObject< UFunction > ( "Function NowGame.NowLootObject.FindGoodSpot" );

	ANowLootObject_execFindGoodSpot_Parms FindGoodSpot_Parms;
	memcpy ( &FindGoodSpot_Parms.StartLoc, &StartLoc, 0xC );
	FindGoodSpot_Parms.iter = iter;

	this->ProcessEvent ( pFnFindGoodSpot, &FindGoodSpot_Parms, NULL );
};

// Function NowGame.NowLootObject.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowLootObject::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowLootObject.PostBeginPlay" );

	ANowLootObject_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowLootObject.IsClientOwner
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowLootObject::IsClientOwner ( )
{
	static UFunction* pFnIsClientOwner = NULL;

	if ( ! pFnIsClientOwner )
		pFnIsClientOwner = UObject::FindObject< UFunction > ( "Function NowGame.NowLootObject.IsClientOwner" );

	ANowLootObject_execIsClientOwner_Parms IsClientOwner_Parms;

	pFnIsClientOwner->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsClientOwner, &IsClientOwner_Parms, NULL );

	pFnIsClientOwner->FunctionFlags |= 0x400;

	return IsClientOwner_Parms.ReturnValue;
};

// Function NowGame.NowLootObject.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

	static UFunction* pFnAtlasUse = NULL;
bool ANowLootObject::AtlasUse ( class APlayerController* PC )
{

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowLootObject.AtlasUse" );

	ANowLootObject_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowLootObject.AtlasUnSelect
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowLootObject::AtlasUnSelect ( )
{
	static UFunction* pFnAtlasUnSelect = NULL;

	if ( ! pFnAtlasUnSelect )
		pFnAtlasUnSelect = UObject::FindObject< UFunction > ( "Function NowGame.NowLootObject.AtlasUnSelect" );

	ANowLootObject_execAtlasUnSelect_Parms AtlasUnSelect_Parms;

	pFnAtlasUnSelect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUnSelect, &AtlasUnSelect_Parms, NULL );

	pFnAtlasUnSelect->FunctionFlags |= 0x400;

	return AtlasUnSelect_Parms.ReturnValue;
};

// Function NowGame.NowLootObject.AtlasSelect
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowLootObject::AtlasSelect ( )
{
	static UFunction* pFnAtlasSelect = NULL;

	if ( ! pFnAtlasSelect )
		pFnAtlasSelect = UObject::FindObject< UFunction > ( "Function NowGame.NowLootObject.AtlasSelect" );

	ANowLootObject_execAtlasSelect_Parms AtlasSelect_Parms;

	pFnAtlasSelect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasSelect, &AtlasSelect_Parms, NULL );

	pFnAtlasSelect->FunctionFlags |= 0x400;

	return AtlasSelect_Parms.ReturnValue;
};

// Function NowGame.NowLootObject.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowLootObject::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowLootObject.IsTarget" );

	ANowLootObject_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorEmitter.CreateEmitter
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowStaticMeshActorEmitter::eventCreateEmitter ( )
{
	static UFunction* pFnCreateEmitter = NULL;

	if ( ! pFnCreateEmitter )
		pFnCreateEmitter = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorEmitter.CreateEmitter" );

	ANowStaticMeshActorEmitter_eventCreateEmitter_Parms CreateEmitter_Parms;

	this->ProcessEvent ( pFnCreateEmitter, &CreateEmitter_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorEmitter.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowStaticMeshActorEmitter::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorEmitter.AtlasUse" );

	ANowStaticMeshActorEmitter_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorEmitter.SetContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            Info                           ( CPF_Parm )

void ANowStaticMeshActorEmitter::SetContentInfo ( class UContentInfo* Info )
{
	static UFunction* pFnSetContentInfo = NULL;

	if ( ! pFnSetContentInfo )
		pFnSetContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorEmitter.SetContentInfo" );

	ANowStaticMeshActorEmitter_execSetContentInfo_Parms SetContentInfo_Parms;
	SetContentInfo_Parms.Info = Info;

	pFnSetContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetContentInfo, &SetContentInfo_Parms, NULL );

	pFnSetContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowStaticMeshActorEmitter.NowSetStaticMeshes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UStaticMesh*             A                              ( CPF_Parm )

void ANowStaticMeshActorEmitter::NowSetStaticMeshes ( class UStaticMesh* A )
{
	static UFunction* pFnNowSetStaticMeshes = NULL;

	if ( ! pFnNowSetStaticMeshes )
		pFnNowSetStaticMeshes = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorEmitter.NowSetStaticMeshes" );

	ANowStaticMeshActorEmitter_execNowSetStaticMeshes_Parms NowSetStaticMeshes_Parms;
	NowSetStaticMeshes_Parms.A = A;

	pFnNowSetStaticMeshes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNowSetStaticMeshes, &NowSetStaticMeshes_Parms, NULL );

	pFnNowSetStaticMeshes->FunctionFlags |= 0x400;
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.setMyPowner
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* pwnder                         ( CPF_Parm )

void ANowAtlasAvatarPlayerHouseCollisionDoor::setMyPowner ( class ANowAtlasAvatarPlayerHouse* pwnder )
{
	static UFunction* pFnsetMyPowner = NULL;

	if ( ! pFnsetMyPowner )
		pFnsetMyPowner = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.setMyPowner" );

	ANowAtlasAvatarPlayerHouseCollisionDoor_execsetMyPowner_Parms setMyPowner_Parms;
	setMyPowner_Parms.pwnder = pwnder;

	this->ProcessEvent ( pFnsetMyPowner, &setMyPowner_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.UnTouch
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouseCollisionDoor::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.UnTouch" );

	ANowAtlasAvatarPlayerHouseCollisionDoor_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.enterHouse
// [0x00020000] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouseCollisionDoor::enterHouse ( )
{
	static UFunction* pFnenterHouse = NULL;

	if ( ! pFnenterHouse )
		pFnenterHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.enterHouse" );

	ANowAtlasAvatarPlayerHouseCollisionDoor_execenterHouse_Parms enterHouse_Parms;

	this->ProcessEvent ( pFnenterHouse, &enterHouse_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.enterVolume
// [0x00020000] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowAtlasAvatarPlayerHouseCollisionDoor::enterVolume ( class AActor* Other )
{
	static UFunction* pFnenterVolume = NULL;

	if ( ! pFnenterVolume )
		pFnenterVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.enterVolume" );

	ANowAtlasAvatarPlayerHouseCollisionDoor_execenterVolume_Parms enterVolume_Parms;
	enterVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnenterVolume, &enterVolume_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.Touch
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowAtlasAvatarPlayerHouseCollisionDoor::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.Touch" );

	ANowAtlasAvatarPlayerHouseCollisionDoor_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.sendMessageToHouse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 messageTwo                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool ANowAtlasAvatarPlayerHouseCollisionDoor::eventsendMessageToHouse ( struct FString Message, struct FString messageTwo )
{
	static UFunction* pFnsendMessageToHouse = NULL;

	if ( ! pFnsendMessageToHouse )
		pFnsendMessageToHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.sendMessageToHouse" );

	ANowAtlasAvatarPlayerHouseCollisionDoor_eventsendMessageToHouse_Parms sendMessageToHouse_Parms;
	memcpy ( &sendMessageToHouse_Parms.Message, &Message, 0xC );
	memcpy ( &sendMessageToHouse_Parms.messageTwo, &messageTwo, 0xC );

	this->ProcessEvent ( pFnsendMessageToHouse, &sendMessageToHouse_Parms, NULL );

	return sendMessageToHouse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.isPlayerInHouse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Player                         ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouseCollisionDoor::isPlayerInHouse ( class AActor* Player )
{
	static UFunction* pFnisPlayerInHouse = NULL;

	if ( ! pFnisPlayerInHouse )
		pFnisPlayerInHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.isPlayerInHouse" );

	ANowAtlasAvatarPlayerHouseCollisionDoor_execisPlayerInHouse_Parms isPlayerInHouse_Parms;
	isPlayerInHouse_Parms.Player = Player;

	this->ProcessEvent ( pFnisPlayerInHouse, &isPlayerInHouse_Parms, NULL );

	return isPlayerInHouse_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.getClientActor
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarPlayerHouseCollisionDoor::getClientActor ( )
{
	static UFunction* pFngetClientActor = NULL;

	if ( ! pFngetClientActor )
		pFngetClientActor = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.getClientActor" );

	ANowAtlasAvatarPlayerHouseCollisionDoor_execgetClientActor_Parms getClientActor_Parms;

	this->ProcessEvent ( pFngetClientActor, &getClientActor_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.isHouseLocked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowAtlasAvatarPlayerHouseCollisionDoor::isHouseLocked ( )
{
	static UFunction* pFnisHouseLocked = NULL;

	if ( ! pFnisHouseLocked )
		pFnisHouseLocked = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.isHouseLocked" );

	ANowAtlasAvatarPlayerHouseCollisionDoor_execisHouseLocked_Parms isHouseLocked_Parms;

	pFnisHouseLocked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisHouseLocked, &isHouseLocked_Parms, NULL );

	pFnisHouseLocked->FunctionFlags |= 0x400;

	return isHouseLocked_Parms.ReturnValue;
};

// Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.isPlayerFriend
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Player                         ( CPF_Parm )

bool ANowAtlasAvatarPlayerHouseCollisionDoor::isPlayerFriend ( class AActor* Player )
{
	static UFunction* pFnisPlayerFriend = NULL;

	if ( ! pFnisPlayerFriend )
		pFnisPlayerFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarPlayerHouseCollisionDoor.isPlayerFriend" );

	ANowAtlasAvatarPlayerHouseCollisionDoor_execisPlayerFriend_Parms isPlayerFriend_Parms;
	isPlayerFriend_Parms.Player = Player;

	pFnisPlayerFriend->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisPlayerFriend, &isPlayerFriend_Parms, NULL );

	pFnisPlayerFriend->FunctionFlags |= 0x400;

	return isPlayerFriend_Parms.ReturnValue;
};

// Function NowGame.NowAvatarManager.SortDel
// [0x00920002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )
// class AActor*                  B                              ( CPF_Parm )

int UNowAvatarManager::SortDel ( class AActor* A, class AActor* B )
{
	static UFunction* pFnSortDel = NULL;

	if ( ! pFnSortDel )
		pFnSortDel = UObject::FindObject< UFunction > ( "Function NowGame.NowAvatarManager.SortDel" );

	UNowAvatarManager_execSortDel_Parms SortDel_Parms;
	SortDel_Parms.A = A;
	SortDel_Parms.B = B;

	this->ProcessEvent ( pFnSortDel, &SortDel_Parms, NULL );

	return SortDel_Parms.ReturnValue;
};

// Function NowGame.NowAvatarManager.TickDetail
// [0x00020000] 
// Parameters infos:

void UNowAvatarManager::TickDetail ( )
{
	static UFunction* pFnTickDetail = NULL;

	if ( ! pFnTickDetail )
		pFnTickDetail = UObject::FindObject< UFunction > ( "Function NowGame.NowAvatarManager.TickDetail" );

	UNowAvatarManager_execTickDetail_Parms TickDetail_Parms;

	this->ProcessEvent ( pFnTickDetail, &TickDetail_Parms, NULL );
};

// Function NowGame.NowAvatarManager.OneSecTick
// [0x00020002] 
// Parameters infos:

void UNowAvatarManager::OneSecTick ( )
{
	static UFunction* pFnOneSecTick = NULL;

	if ( ! pFnOneSecTick )
		pFnOneSecTick = UObject::FindObject< UFunction > ( "Function NowGame.NowAvatarManager.OneSecTick" );

	UNowAvatarManager_execOneSecTick_Parms OneSecTick_Parms;

	this->ProcessEvent ( pFnOneSecTick, &OneSecTick_Parms, NULL );
};

// Function NowGame.NowAvatarManager.TickManager
// [0x00020002] 
// Parameters infos:

void UNowAvatarManager::TickManager ( )
{
	static UFunction* pFnTickManager = NULL;

	if ( ! pFnTickManager )
		pFnTickManager = UObject::FindObject< UFunction > ( "Function NowGame.NowAvatarManager.TickManager" );

	UNowAvatarManager_execTickManager_Parms TickManager_Parms;

	this->ProcessEvent ( pFnTickManager, &TickManager_Parms, NULL );
};

// Function NowGame.NowAvatarManager.AddToManager
// [0x00024002] 
// Parameters infos:
// class ANowAtlasAvatar*         NewActor                       ( CPF_Parm )
// unsigned long                  bForceGenerate                 ( CPF_OptionalParm | CPF_Parm )

void UNowAvatarManager::AddToManager ( class ANowAtlasAvatar* NewActor, unsigned long bForceGenerate )
{
	static UFunction* pFnAddToManager = NULL;

	if ( ! pFnAddToManager )
		pFnAddToManager = UObject::FindObject< UFunction > ( "Function NowGame.NowAvatarManager.AddToManager" );

	UNowAvatarManager_execAddToManager_Parms AddToManager_Parms;
	AddToManager_Parms.NewActor = NewActor;
	AddToManager_Parms.bForceGenerate = bForceGenerate;

	this->ProcessEvent ( pFnAddToManager, &AddToManager_Parms, NULL );
};

// Function NowGame.NowAvatarManager.SetDetailLevel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewLevel                       ( CPF_Parm )

void UNowAvatarManager::eventSetDetailLevel ( int NewLevel )
{
	static UFunction* pFnSetDetailLevel = NULL;

	if ( ! pFnSetDetailLevel )
		pFnSetDetailLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowAvatarManager.SetDetailLevel" );

	UNowAvatarManager_eventSetDetailLevel_Parms SetDetailLevel_Parms;
	SetDetailLevel_Parms.NewLevel = NewLevel;

	this->ProcessEvent ( pFnSetDetailLevel, &SetDetailLevel_Parms, NULL );
};

// Function NowGame.NowAvatarManager.UpdateDetailLevel
// [0x00020000] 
// Parameters infos:
// class ANowAtlasAvatar*         pActor                         ( CPF_Parm )
// int                            NewLevel                       ( CPF_Parm )

void UNowAvatarManager::UpdateDetailLevel ( class ANowAtlasAvatar* pActor, int NewLevel )
{
	static UFunction* pFnUpdateDetailLevel = NULL;

	if ( ! pFnUpdateDetailLevel )
		pFnUpdateDetailLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowAvatarManager.UpdateDetailLevel" );

	UNowAvatarManager_execUpdateDetailLevel_Parms UpdateDetailLevel_Parms;
	UpdateDetailLevel_Parms.pActor = pActor;
	UpdateDetailLevel_Parms.NewLevel = NewLevel;

	this->ProcessEvent ( pFnUpdateDetailLevel, &UpdateDetailLevel_Parms, NULL );
};

// Function NowGame.NowAvatarManager.InitManager
// [0x00020002] 
// Parameters infos:

void UNowAvatarManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = UObject::FindObject< UFunction > ( "Function NowGame.NowAvatarManager.InitManager" );

	UNowAvatarManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.NowAvatarManager.GetIniInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowAvatarManager::GetIniInfo ( )
{
	static UFunction* pFnGetIniInfo = NULL;

	if ( ! pFnGetIniInfo )
		pFnGetIniInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowAvatarManager.GetIniInfo" );

	UNowAvatarManager_execGetIniInfo_Parms GetIniInfo_Parms;

	pFnGetIniInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIniInfo, &GetIniInfo_Parms, NULL );

	pFnGetIniInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowDirectionalSunLight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowDirectionalSunLight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowDirectionalSunLight.Destroyed" );

	ANowDirectionalSunLight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowDirectionalSunLight.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowDirectionalSunLight::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowDirectionalSunLight.PostBeginPlay" );

	ANowDirectionalSunLight_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowDirectionalSunLight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowDirectionalSunLight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.NowDirectionalSunLight.Notify" );

	ANowDirectionalSunLight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowDirectionalSunLight.Degree
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DG                             ( CPF_Parm )

float ANowDirectionalSunLight::Degree ( float DG )
{
	static UFunction* pFnDegree = NULL;

	if ( ! pFnDegree )
		pFnDegree = UObject::FindObject< UFunction > ( "Function NowGame.NowDirectionalSunLight.Degree" );

	ANowDirectionalSunLight_execDegree_Parms Degree_Parms;
	Degree_Parms.DG = DG;

	this->ProcessEvent ( pFnDegree, &Degree_Parms, NULL );

	return Degree_Parms.ReturnValue;
};

// Function NowGame.NowDirectionalSunLight.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          PartOfDay                      ( CPF_Parm )
// float                          PartOfNyxMonth                 ( CPF_Parm )
// float                          PartOfYear                     ( CPF_Parm )
// float                          SunRiseAt                      ( CPF_Parm )

void ANowDirectionalSunLight::eventUpdate ( float PartOfDay, float PartOfNyxMonth, float PartOfYear, float SunRiseAt )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowDirectionalSunLight.Update" );

	ANowDirectionalSunLight_eventUpdate_Parms Update_Parms;
	Update_Parms.PartOfDay = PartOfDay;
	Update_Parms.PartOfNyxMonth = PartOfNyxMonth;
	Update_Parms.PartOfYear = PartOfYear;
	Update_Parms.SunRiseAt = SunRiseAt;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function NowGame.NowEmitterDayNight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowEmitterDayNight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowEmitterDayNight.Destroyed" );

	ANowEmitterDayNight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowEmitterDayNight.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowEmitterDayNight::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowEmitterDayNight.PostBeginPlay" );

	ANowEmitterDayNight_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowEmitterDayNight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowEmitterDayNight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.NowEmitterDayNight.Notify" );

	ANowEmitterDayNight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowEmitterDayNight.TurnOnEmitter
// [0x00020002] 
// Parameters infos:

void ANowEmitterDayNight::TurnOnEmitter ( )
{
	static UFunction* pFnTurnOnEmitter = NULL;

	if ( ! pFnTurnOnEmitter )
		pFnTurnOnEmitter = UObject::FindObject< UFunction > ( "Function NowGame.NowEmitterDayNight.TurnOnEmitter" );

	ANowEmitterDayNight_execTurnOnEmitter_Parms TurnOnEmitter_Parms;

	this->ProcessEvent ( pFnTurnOnEmitter, &TurnOnEmitter_Parms, NULL );
};

// Function NowGame.NowEntryDatastore.GetSize
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UNowEntryDatastore::eventGetSize ( )
{
	static UFunction* pFnGetSize = NULL;

	if ( ! pFnGetSize )
		pFnGetSize = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.GetSize" );

	UNowEntryDatastore_eventGetSize_Parms GetSize_Parms;

	this->ProcessEvent ( pFnGetSize, &GetSize_Parms, NULL );

	return GetSize_Parms.ReturnValue;
};

// Function NowGame.NowEntryDatastore.GetFieldValue
// [0x00424802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 FieldName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            ArrayIndex                     ( CPF_OptionalParm | CPF_Parm )
// struct FUIProviderScriptFieldValue FieldValue                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UNowEntryDatastore::eventGetFieldValue ( struct FString FieldName, int ArrayIndex, struct FUIProviderScriptFieldValue* FieldValue )
{
	static UFunction* pFnGetFieldValue = NULL;

	if ( ! pFnGetFieldValue )
		pFnGetFieldValue = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.GetFieldValue" );

	UNowEntryDatastore_eventGetFieldValue_Parms GetFieldValue_Parms;
	memcpy ( &GetFieldValue_Parms.FieldName, &FieldName, 0xC );
	GetFieldValue_Parms.ArrayIndex = ArrayIndex;

	this->ProcessEvent ( pFnGetFieldValue, &GetFieldValue_Parms, NULL );

	if ( FieldValue )
		memcpy ( FieldValue, &GetFieldValue_Parms.FieldValue, 0x58 );

	return GetFieldValue_Parms.ReturnValue;
};

// Function NowGame.NowEntryDatastore.SetBlood
// [0x00020002] 
// Parameters infos:
// int                            Value                          ( CPF_Parm )

void UNowEntryDatastore::SetBlood ( int Value )
{
	static UFunction* pFnSetBlood = NULL;

	if ( ! pFnSetBlood )
		pFnSetBlood = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.SetBlood" );

	UNowEntryDatastore_execSetBlood_Parms SetBlood_Parms;
	SetBlood_Parms.Value = Value;

	this->ProcessEvent ( pFnSetBlood, &SetBlood_Parms, NULL );
};

// Function NowGame.NowEntryDatastore.ClearAttributes
// [0x00020002] 
// Parameters infos:

void UNowEntryDatastore::ClearAttributes ( )
{
	static UFunction* pFnClearAttributes = NULL;

	if ( ! pFnClearAttributes )
		pFnClearAttributes = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.ClearAttributes" );

	UNowEntryDatastore_execClearAttributes_Parms ClearAttributes_Parms;

	this->ProcessEvent ( pFnClearAttributes, &ClearAttributes_Parms, NULL );
};

// Function NowGame.NowEntryDatastore.ClearFeatures
// [0x00020002] 
// Parameters infos:

void UNowEntryDatastore::ClearFeatures ( )
{
	static UFunction* pFnClearFeatures = NULL;

	if ( ! pFnClearFeatures )
		pFnClearFeatures = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.ClearFeatures" );

	UNowEntryDatastore_execClearFeatures_Parms ClearFeatures_Parms;

	this->ProcessEvent ( pFnClearFeatures, &ClearFeatures_Parms, NULL );
};

// Function NowGame.NowEntryDatastore.ClearRaceValues
// [0x00020002] 
// Parameters infos:

void UNowEntryDatastore::ClearRaceValues ( )
{
	static UFunction* pFnClearRaceValues = NULL;

	if ( ! pFnClearRaceValues )
		pFnClearRaceValues = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.ClearRaceValues" );

	UNowEntryDatastore_execClearRaceValues_Parms ClearRaceValues_Parms;

	this->ProcessEvent ( pFnClearRaceValues, &ClearRaceValues_Parms, NULL );
};

// Function NowGame.NowEntryDatastore.ClearCreation
// [0x00020002] 
// Parameters infos:

void UNowEntryDatastore::ClearCreation ( )
{
	static UFunction* pFnClearCreation = NULL;

	if ( ! pFnClearCreation )
		pFnClearCreation = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.ClearCreation" );

	UNowEntryDatastore_execClearCreation_Parms ClearCreation_Parms;

	this->ProcessEvent ( pFnClearCreation, &ClearCreation_Parms, NULL );
};

// Function NowGame.NowEntryDatastore.IsBloodDone
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowEntryDatastore::eventIsBloodDone ( )
{
	static UFunction* pFnIsBloodDone = NULL;

	if ( ! pFnIsBloodDone )
		pFnIsBloodDone = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.IsBloodDone" );

	UNowEntryDatastore_eventIsBloodDone_Parms IsBloodDone_Parms;

	this->ProcessEvent ( pFnIsBloodDone, &IsBloodDone_Parms, NULL );

	return IsBloodDone_Parms.ReturnValue;
};

// Function NowGame.NowEntryDatastore.GetClientValue
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowEntryDatastore::eventGetClientValue ( )
{
	static UFunction* pFnGetClientValue = NULL;

	if ( ! pFnGetClientValue )
		pFnGetClientValue = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.GetClientValue" );

	UNowEntryDatastore_eventGetClientValue_Parms GetClientValue_Parms;

	this->ProcessEvent ( pFnGetClientValue, &GetClientValue_Parms, NULL );

	return GetClientValue_Parms.ReturnValue;
};

// Function NowGame.NowEntryDatastore.ModifyStat
// [0x00020002] 
// Parameters infos:
// int                            stat                           ( CPF_Parm )
// int                            Value                          ( CPF_Parm )

void UNowEntryDatastore::ModifyStat ( int stat, int Value )
{
	static UFunction* pFnModifyStat = NULL;

	if ( ! pFnModifyStat )
		pFnModifyStat = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.ModifyStat" );

	UNowEntryDatastore_execModifyStat_Parms ModifyStat_Parms;
	ModifyStat_Parms.stat = stat;
	ModifyStat_Parms.Value = Value;

	this->ProcessEvent ( pFnModifyStat, &ModifyStat_Parms, NULL );
};

// Function NowGame.NowEntryDatastore.CalcMaxWeight
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowEntryDatastore::CalcMaxWeight ( )
{
	static UFunction* pFnCalcMaxWeight = NULL;

	if ( ! pFnCalcMaxWeight )
		pFnCalcMaxWeight = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.CalcMaxWeight" );

	UNowEntryDatastore_execCalcMaxWeight_Parms CalcMaxWeight_Parms;

	pFnCalcMaxWeight->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcMaxWeight, &CalcMaxWeight_Parms, NULL );

	pFnCalcMaxWeight->FunctionFlags |= 0x400;

	return CalcMaxWeight_Parms.ReturnValue;
};

// Function NowGame.NowEntryDatastore.CalcMaxSP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowEntryDatastore::CalcMaxSP ( )
{
	static UFunction* pFnCalcMaxSP = NULL;

	if ( ! pFnCalcMaxSP )
		pFnCalcMaxSP = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.CalcMaxSP" );

	UNowEntryDatastore_execCalcMaxSP_Parms CalcMaxSP_Parms;

	pFnCalcMaxSP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcMaxSP, &CalcMaxSP_Parms, NULL );

	pFnCalcMaxSP->FunctionFlags |= 0x400;

	return CalcMaxSP_Parms.ReturnValue;
};

// Function NowGame.NowEntryDatastore.CalcMaxMP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowEntryDatastore::CalcMaxMP ( )
{
	static UFunction* pFnCalcMaxMP = NULL;

	if ( ! pFnCalcMaxMP )
		pFnCalcMaxMP = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.CalcMaxMP" );

	UNowEntryDatastore_execCalcMaxMP_Parms CalcMaxMP_Parms;

	pFnCalcMaxMP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcMaxMP, &CalcMaxMP_Parms, NULL );

	pFnCalcMaxMP->FunctionFlags |= 0x400;

	return CalcMaxMP_Parms.ReturnValue;
};

// Function NowGame.NowEntryDatastore.CalcMaxHP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowEntryDatastore::CalcMaxHP ( )
{
	static UFunction* pFnCalcMaxHP = NULL;

	if ( ! pFnCalcMaxHP )
		pFnCalcMaxHP = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.CalcMaxHP" );

	UNowEntryDatastore_execCalcMaxHP_Parms CalcMaxHP_Parms;

	pFnCalcMaxHP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcMaxHP, &CalcMaxHP_Parms, NULL );

	pFnCalcMaxHP->FunctionFlags |= 0x400;

	return CalcMaxHP_Parms.ReturnValue;
};

// Function NowGame.NowEntryDatastore.CalcDamageBonusPct
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UNowEntryDatastore::CalcDamageBonusPct ( )
{
	static UFunction* pFnCalcDamageBonusPct = NULL;

	if ( ! pFnCalcDamageBonusPct )
		pFnCalcDamageBonusPct = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.CalcDamageBonusPct" );

	UNowEntryDatastore_execCalcDamageBonusPct_Parms CalcDamageBonusPct_Parms;

	pFnCalcDamageBonusPct->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcDamageBonusPct, &CalcDamageBonusPct_Parms, NULL );

	pFnCalcDamageBonusPct->FunctionFlags |= 0x400;

	return CalcDamageBonusPct_Parms.ReturnValue;
};

// Function NowGame.NowEntryDatastore.CalcDamageBonus
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UNowEntryDatastore::CalcDamageBonus ( )
{
	static UFunction* pFnCalcDamageBonus = NULL;

	if ( ! pFnCalcDamageBonus )
		pFnCalcDamageBonus = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.CalcDamageBonus" );

	UNowEntryDatastore_execCalcDamageBonus_Parms CalcDamageBonus_Parms;

	pFnCalcDamageBonus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcDamageBonus, &CalcDamageBonus_Parms, NULL );

	pFnCalcDamageBonus->FunctionFlags |= 0x400;

	return CalcDamageBonus_Parms.ReturnValue;
};

// Function NowGame.NowEntryDatastore.ClearRelations
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowEntryDatastore::ClearRelations ( )
{
	static UFunction* pFnClearRelations = NULL;

	if ( ! pFnClearRelations )
		pFnClearRelations = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.ClearRelations" );

	UNowEntryDatastore_execClearRelations_Parms ClearRelations_Parms;

	pFnClearRelations->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearRelations, &ClearRelations_Parms, NULL );

	pFnClearRelations->FunctionFlags |= 0x400;
};

// Function NowGame.NowEntryDatastore.MeshMerge
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowSkeletalMeshActor*   MeshActor                      ( CPF_Parm )

void UNowEntryDatastore::MeshMerge ( class ANowSkeletalMeshActor* MeshActor )
{
	static UFunction* pFnMeshMerge = NULL;

	if ( ! pFnMeshMerge )
		pFnMeshMerge = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.MeshMerge" );

	UNowEntryDatastore_execMeshMerge_Parms MeshMerge_Parms;
	MeshMerge_Parms.MeshActor = MeshActor;

	pFnMeshMerge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeshMerge, &MeshMerge_Parms, NULL );

	pFnMeshMerge->FunctionFlags |= 0x400;
};

// Function NowGame.NowEntryDatastore.UpdateCharacterData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowEntryDatastore::UpdateCharacterData ( )
{
	static UFunction* pFnUpdateCharacterData = NULL;

	if ( ! pFnUpdateCharacterData )
		pFnUpdateCharacterData = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.UpdateCharacterData" );

	UNowEntryDatastore_execUpdateCharacterData_Parms UpdateCharacterData_Parms;

	pFnUpdateCharacterData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCharacterData, &UpdateCharacterData_Parms, NULL );

	pFnUpdateCharacterData->FunctionFlags |= 0x400;
};

// Function NowGame.NowEntryDatastore.CalculateTree
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Slot                           ( CPF_Parm )

void UNowEntryDatastore::CalculateTree ( int Slot )
{
	static UFunction* pFnCalculateTree = NULL;

	if ( ! pFnCalculateTree )
		pFnCalculateTree = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.CalculateTree" );

	UNowEntryDatastore_execCalculateTree_Parms CalculateTree_Parms;
	CalculateTree_Parms.Slot = Slot;

	pFnCalculateTree->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalculateTree, &CalculateTree_Parms, NULL );

	pFnCalculateTree->FunctionFlags |= 0x400;
};

// Function NowGame.NowEntryDatastore.NowClamp
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Value                          ( CPF_Parm )
// int                            Min                            ( CPF_Parm )
// int                            Max                            ( CPF_Parm )

int UNowEntryDatastore::NowClamp ( int Value, int Min, int Max )
{
	static UFunction* pFnNowClamp = NULL;

	if ( ! pFnNowClamp )
		pFnNowClamp = UObject::FindObject< UFunction > ( "Function NowGame.NowEntryDatastore.NowClamp" );

	UNowEntryDatastore_execNowClamp_Parms NowClamp_Parms;
	NowClamp_Parms.Value = Value;
	NowClamp_Parms.Min = Min;
	NowClamp_Parms.Max = Max;

	pFnNowClamp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNowClamp, &NowClamp_Parms, NULL );

	pFnNowClamp->FunctionFlags |= 0x400;

	return NowClamp_Parms.ReturnValue;
};

// Function NowGame.NowGFXHud.CloseStuff
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHud::CloseStuff ( )
{
	static UFunction* pFnCloseStuff = NULL;

	if ( ! pFnCloseStuff )
		pFnCloseStuff = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.CloseStuff" );

	UNowGFXHud_execCloseStuff_Parms CloseStuff_Parms;

	this->ProcessEvent ( pFnCloseStuff, &CloseStuff_Parms, NULL );

	return CloseStuff_Parms.ReturnValue;
};

// Function NowGame.NowGFXHud.NumberPressed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iNr                            ( CPF_Parm )

bool UNowGFXHud::NumberPressed ( int iNr )
{
	static UFunction* pFnNumberPressed = NULL;

	if ( ! pFnNumberPressed )
		pFnNumberPressed = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.NumberPressed" );

	UNowGFXHud_execNumberPressed_Parms NumberPressed_Parms;
	NumberPressed_Parms.iNr = iNr;

	this->ProcessEvent ( pFnNumberPressed, &NumberPressed_Parms, NULL );

	return NumberPressed_Parms.ReturnValue;
};

// Function NowGame.NowGFXHud.GFXHudTick
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowGFXHud::GFXHudTick ( class UCanvas* C )
{
	static UFunction* pFnGFXHudTick = NULL;

	if ( ! pFnGFXHudTick )
		pFnGFXHudTick = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.GFXHudTick" );

	UNowGFXHud_execGFXHudTick_Parms GFXHudTick_Parms;
	GFXHudTick_Parms.C = C;

	this->ProcessEvent ( pFnGFXHudTick, &GFXHudTick_Parms, NULL );
};

// Function NowGame.NowGFXHud.OpenGuildMenu
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UNowGFXHud::OpenGuildMenu ( )
{
	static UFunction* pFnOpenGuildMenu = NULL;

	if ( ! pFnOpenGuildMenu )
		pFnOpenGuildMenu = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.OpenGuildMenu" );

	UNowGFXHud_execOpenGuildMenu_Parms OpenGuildMenu_Parms;

	this->ProcessEvent ( pFnOpenGuildMenu, &OpenGuildMenu_Parms, NULL );
};

// Function NowGame.NowGFXHud.openFriendList
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UNowGFXHud::openFriendList ( )
{
	static UFunction* pFnopenFriendList = NULL;

	if ( ! pFnopenFriendList )
		pFnopenFriendList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.openFriendList" );

	UNowGFXHud_execopenFriendList_Parms openFriendList_Parms;

	this->ProcessEvent ( pFnopenFriendList, &openFriendList_Parms, NULL );
};

// Function NowGame.NowGFXHud.ToggleCompass
// [0x00020002] 
// Parameters infos:

void UNowGFXHud::ToggleCompass ( )
{
	static UFunction* pFnToggleCompass = NULL;

	if ( ! pFnToggleCompass )
		pFnToggleCompass = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.ToggleCompass" );

	UNowGFXHud_execToggleCompass_Parms ToggleCompass_Parms;

	this->ProcessEvent ( pFnToggleCompass, &ToggleCompass_Parms, NULL );
};

// Function NowGame.NowGFXHud.ToggleTutorials
// [0x00020002] 
// Parameters infos:

void UNowGFXHud::ToggleTutorials ( )
{
	static UFunction* pFnToggleTutorials = NULL;

	if ( ! pFnToggleTutorials )
		pFnToggleTutorials = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.ToggleTutorials" );

	UNowGFXHud_execToggleTutorials_Parms ToggleTutorials_Parms;

	this->ProcessEvent ( pFnToggleTutorials, &ToggleTutorials_Parms, NULL );
};

// Function NowGame.NowGFXHud.Tick
// [0x00020002] 
// Parameters infos:

void UNowGFXHud::Tick ( )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.Tick" );

	UNowGFXHud_execTick_Parms Tick_Parms;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowGFXHud.ShowFlashMouse
// [0x00020002] 
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void UNowGFXHud::ShowFlashMouse ( unsigned long bShow )
{
	static UFunction* pFnShowFlashMouse = NULL;

	if ( ! pFnShowFlashMouse )
		pFnShowFlashMouse = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.ShowFlashMouse" );

	UNowGFXHud_execShowFlashMouse_Parms ShowFlashMouse_Parms;
	ShowFlashMouse_Parms.bShow = bShow;

	this->ProcessEvent ( pFnShowFlashMouse, &ShowFlashMouse_Parms, NULL );
};

// Function NowGame.NowGFXHud.SetAllScenesFocus
// [0x00020002] 
// Parameters infos:
// unsigned long                  NewFocus                       ( CPF_Parm )

void UNowGFXHud::SetAllScenesFocus ( unsigned long NewFocus )
{
	static UFunction* pFnSetAllScenesFocus = NULL;

	if ( ! pFnSetAllScenesFocus )
		pFnSetAllScenesFocus = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.SetAllScenesFocus" );

	UNowGFXHud_execSetAllScenesFocus_Parms SetAllScenesFocus_Parms;
	SetAllScenesFocus_Parms.NewFocus = NewFocus;

	this->ProcessEvent ( pFnSetAllScenesFocus, &SetAllScenesFocus_Parms, NULL );
};

// Function NowGame.NowGFXHud.IsASceneOpen
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHud::IsASceneOpen ( )
{
	static UFunction* pFnIsASceneOpen = NULL;

	if ( ! pFnIsASceneOpen )
		pFnIsASceneOpen = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.IsASceneOpen" );

	UNowGFXHud_execIsASceneOpen_Parms IsASceneOpen_Parms;

	this->ProcessEvent ( pFnIsASceneOpen, &IsASceneOpen_Parms, NULL );

	return IsASceneOpen_Parms.ReturnValue;
};

// Function NowGame.NowGFXHud.GFXClose
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            WhatIndex                      ( CPF_Parm )

void UNowGFXHud::eventGFXClose ( int WhatIndex )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.GFXClose" );

	UNowGFXHud_eventGFXClose_Parms GFXClose_Parms;
	GFXClose_Parms.WhatIndex = WhatIndex;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXHud.GFXOpen
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            WhatIndex                      ( CPF_Parm )
// int                            Param                          ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHud::eventGFXOpen ( int WhatIndex, int Param )
{
	static UFunction* pFnGFXOpen = NULL;

	if ( ! pFnGFXOpen )
		pFnGFXOpen = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.GFXOpen" );

	UNowGFXHud_eventGFXOpen_Parms GFXOpen_Parms;
	GFXOpen_Parms.WhatIndex = WhatIndex;
	GFXOpen_Parms.Param = Param;

	this->ProcessEvent ( pFnGFXOpen, &GFXOpen_Parms, NULL );
};

// Function NowGame.NowGFXHud.setTrackedUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  WhatIndex                      ( CPF_Parm )

void UNowGFXHud::eventsetTrackedUI ( unsigned char WhatIndex )
{
	static UFunction* pFnsetTrackedUI = NULL;

	if ( ! pFnsetTrackedUI )
		pFnsetTrackedUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.setTrackedUI" );

	UNowGFXHud_eventsetTrackedUI_Parms setTrackedUI_Parms;
	setTrackedUI_Parms.WhatIndex = WhatIndex;

	this->ProcessEvent ( pFnsetTrackedUI, &setTrackedUI_Parms, NULL );
};

// Function NowGame.NowGFXHud.OpenGFXHudScene
// [0x00020002] 
// Parameters infos:

void UNowGFXHud::OpenGFXHudScene ( )
{
	static UFunction* pFnOpenGFXHudScene = NULL;

	if ( ! pFnOpenGFXHudScene )
		pFnOpenGFXHudScene = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.OpenGFXHudScene" );

	UNowGFXHud_execOpenGFXHudScene_Parms OpenGFXHudScene_Parms;

	this->ProcessEvent ( pFnOpenGFXHudScene, &OpenGFXHudScene_Parms, NULL );
};

// Function NowGame.NowGFXHud.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )

void UNowGFXHud::Init ( class APlayerController* Player )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.Init" );

	UNowGFXHud_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXHud.RecieveGameEvent
// [0x00024002] 
// Parameters infos:
// int                            eEvent                         ( CPF_Parm )
// int                            pieceType                      ( CPF_Parm )
// int                            pieceID                        ( CPF_OptionalParm | CPF_Parm )
// int                            XPos                           ( CPF_OptionalParm | CPF_Parm )
// int                            YPos                           ( CPF_OptionalParm | CPF_Parm )
// struct FString                 avatarName                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHud::RecieveGameEvent ( int eEvent, int pieceType, int pieceID, int XPos, int YPos, struct FString avatarName )
{
	static UFunction* pFnRecieveGameEvent = NULL;

	if ( ! pFnRecieveGameEvent )
		pFnRecieveGameEvent = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.RecieveGameEvent" );

	UNowGFXHud_execRecieveGameEvent_Parms RecieveGameEvent_Parms;
	RecieveGameEvent_Parms.eEvent = eEvent;
	RecieveGameEvent_Parms.pieceType = pieceType;
	RecieveGameEvent_Parms.pieceID = pieceID;
	RecieveGameEvent_Parms.XPos = XPos;
	RecieveGameEvent_Parms.YPos = YPos;
	memcpy ( &RecieveGameEvent_Parms.avatarName, &avatarName, 0xC );

	this->ProcessEvent ( pFnRecieveGameEvent, &RecieveGameEvent_Parms, NULL );
};

// Function NowGame.NowGFXHud.updatePetitionToGUI
// [0x00020002] 
// Parameters infos:
// struct FString                 petitionUser                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 entirePetition                 ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHud::updatePetitionToGUI ( struct FString petitionUser, struct FString entirePetition )
{
	static UFunction* pFnupdatePetitionToGUI = NULL;

	if ( ! pFnupdatePetitionToGUI )
		pFnupdatePetitionToGUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.updatePetitionToGUI" );

	UNowGFXHud_execupdatePetitionToGUI_Parms updatePetitionToGUI_Parms;
	memcpy ( &updatePetitionToGUI_Parms.petitionUser, &petitionUser, 0xC );
	memcpy ( &updatePetitionToGUI_Parms.entirePetition, &entirePetition, 0xC );

	this->ProcessEvent ( pFnupdatePetitionToGUI, &updatePetitionToGUI_Parms, NULL );
};

// Function NowGame.NowGFXHud.addPetitionToGUI
// [0x00020002] 
// Parameters infos:
// struct FString                 petition                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHud::addPetitionToGUI ( struct FString petition )
{
	static UFunction* pFnaddPetitionToGUI = NULL;

	if ( ! pFnaddPetitionToGUI )
		pFnaddPetitionToGUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.addPetitionToGUI" );

	UNowGFXHud_execaddPetitionToGUI_Parms addPetitionToGUI_Parms;
	memcpy ( &addPetitionToGUI_Parms.petition, &petition, 0xC );

	this->ProcessEvent ( pFnaddPetitionToGUI, &addPetitionToGUI_Parms, NULL );
};

// Function NowGame.NowGFXHud.removePetitionFromGUI
// [0x00020002] 
// Parameters infos:
// struct FString                 petitionToRemove               ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHud::removePetitionFromGUI ( struct FString petitionToRemove )
{
	static UFunction* pFnremovePetitionFromGUI = NULL;

	if ( ! pFnremovePetitionFromGUI )
		pFnremovePetitionFromGUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.removePetitionFromGUI" );

	UNowGFXHud_execremovePetitionFromGUI_Parms removePetitionFromGUI_Parms;
	memcpy ( &removePetitionFromGUI_Parms.petitionToRemove, &petitionToRemove, 0xC );

	this->ProcessEvent ( pFnremovePetitionFromGUI, &removePetitionFromGUI_Parms, NULL );
};

// Function NowGame.NowGFXHud.toggleGMGUI
// [0x00020002] 
// Parameters infos:

void UNowGFXHud::toggleGMGUI ( )
{
	static UFunction* pFntoggleGMGUI = NULL;

	if ( ! pFntoggleGMGUI )
		pFntoggleGMGUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.toggleGMGUI" );

	UNowGFXHud_exectoggleGMGUI_Parms toggleGMGUI_Parms;

	this->ProcessEvent ( pFntoggleGMGUI, &toggleGMGUI_Parms, NULL );
};

// Function NowGame.NowGFXHud.initGMGUI
// [0x00020002] 
// Parameters infos:

void UNowGFXHud::initGMGUI ( )
{
	static UFunction* pFninitGMGUI = NULL;

	if ( ! pFninitGMGUI )
		pFninitGMGUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.initGMGUI" );

	UNowGFXHud_execinitGMGUI_Parms initGMGUI_Parms;

	this->ProcessEvent ( pFninitGMGUI, &initGMGUI_Parms, NULL );
};

// Function NowGame.NowGFXHud.rightClickUse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            bag                            ( CPF_Parm )
// int                            Slot                           ( CPF_Parm )

bool UNowGFXHud::eventrightClickUse ( int bag, int Slot )
{
	static UFunction* pFnrightClickUse = NULL;

	if ( ! pFnrightClickUse )
		pFnrightClickUse = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHud.rightClickUse" );

	UNowGFXHud_eventrightClickUse_Parms rightClickUse_Parms;
	rightClickUse_Parms.bag = bag;
	rightClickUse_Parms.Slot = Slot;

	this->ProcessEvent ( pFnrightClickUse, &rightClickUse_Parms, NULL );

	return rightClickUse_Parms.ReturnValue;
};

// Function NowGame.NowGFXScene.gfxTick
// [0x00020000] 
// Parameters infos:
// float                          dTime                          ( CPF_Parm )

void UNowGFXScene::gfxTick ( float dTime )
{
	static UFunction* pFngfxTick = NULL;

	if ( ! pFngfxTick )
		pFngfxTick = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScene.gfxTick" );

	UNowGFXScene_execgfxTick_Parms gfxTick_Parms;
	gfxTick_Parms.dTime = dTime;

	this->ProcessEvent ( pFngfxTick, &gfxTick_Parms, NULL );
};

// Function NowGame.NowGFXScene.MODebug
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXScene::MODebug ( struct FString msg )
{
	static UFunction* pFnMODebug = NULL;

	if ( ! pFnMODebug )
		pFnMODebug = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScene.MODebug" );

	UNowGFXScene_execMODebug_Parms MODebug_Parms;
	memcpy ( &MODebug_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnMODebug, &MODebug_Parms, NULL );
};

// Function NowGame.NowGFXScene.rightClickUse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            bag                            ( CPF_Parm )
// int                            Slot                           ( CPF_Parm )

bool UNowGFXScene::eventrightClickUse ( int bag, int Slot )
{
	static UFunction* pFnrightClickUse = NULL;

	if ( ! pFnrightClickUse )
		pFnrightClickUse = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScene.rightClickUse" );

	UNowGFXScene_eventrightClickUse_Parms rightClickUse_Parms;
	rightClickUse_Parms.bag = bag;
	rightClickUse_Parms.Slot = Slot;

	this->ProcessEvent ( pFnrightClickUse, &rightClickUse_Parms, NULL );

	return rightClickUse_Parms.ReturnValue;
};

// Function NowGame.NowGFXScene.EscapePressed
// [0x00020000] 
// Parameters infos:

void UNowGFXScene::EscapePressed ( )
{
	static UFunction* pFnEscapePressed = NULL;

	if ( ! pFnEscapePressed )
		pFnEscapePressed = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScene.EscapePressed" );

	UNowGFXScene_execEscapePressed_Parms EscapePressed_Parms;

	this->ProcessEvent ( pFnEscapePressed, &EscapePressed_Parms, NULL );
};

// Function NowGame.NowGFXScene.NumberPressed
// [0x00020000] 
// Parameters infos:
// int                            iNr                            ( CPF_Parm )

void UNowGFXScene::NumberPressed ( int iNr )
{
	static UFunction* pFnNumberPressed = NULL;

	if ( ! pFnNumberPressed )
		pFnNumberPressed = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScene.NumberPressed" );

	UNowGFXScene_execNumberPressed_Parms NumberPressed_Parms;
	NumberPressed_Parms.iNr = iNr;

	this->ProcessEvent ( pFnNumberPressed, &NumberPressed_Parms, NULL );
};

// Function NowGame.NowGFXScene.GFXClose
// [0x00020002] 
// Parameters infos:

void UNowGFXScene::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScene.GFXClose" );

	UNowGFXScene_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXScene.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXScene::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScene.Init" );

	UNowGFXScene_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXScene.getTradeItems
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FItemOption >   vItems                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UNowGFXScene::getTradeItems ( TArray< struct FItemOption >* vItems )
{
	static UFunction* pFngetTradeItems = NULL;

	if ( ! pFngetTradeItems )
		pFngetTradeItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScene.getTradeItems" );

	UNowGFXScene_execgetTradeItems_Parms getTradeItems_Parms;

	pFngetTradeItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetTradeItems, &getTradeItems_Parms, NULL );

	pFngetTradeItems->FunctionFlags |= 0x400;

	if ( vItems )
		memcpy ( vItems, &getTradeItems_Parms.vItems, 0xC );
};

// Function NowGame.NowGFXHudScene.showNotice
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventshowNotice ( struct FString sMessage )
{
	static UFunction* pFnshowNotice = NULL;

	if ( ! pFnshowNotice )
		pFnshowNotice = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showNotice" );

	UNowGFXHudScene_eventshowNotice_Parms showNotice_Parms;
	memcpy ( &showNotice_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnshowNotice, &showNotice_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showChatInput
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showChatInput ( )
{
	static UFunction* pFnshowChatInput = NULL;

	if ( ! pFnshowChatInput )
		pFnshowChatInput = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showChatInput" );

	UNowGFXHudScene_execshowChatInput_Parms showChatInput_Parms;

	this->ProcessEvent ( pFnshowChatInput, &showChatInput_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.tcpReceive
// [0x00020002] 
// Parameters infos:
// struct FString                 jsonData                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::tcpReceive ( struct FString jsonData )
{
	static UFunction* pFntcpReceive = NULL;

	if ( ! pFntcpReceive )
		pFntcpReceive = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.tcpReceive" );

	UNowGFXHudScene_exectcpReceive_Parms tcpReceive_Parms;
	memcpy ( &tcpReceive_Parms.jsonData, &jsonData, 0xC );

	this->ProcessEvent ( pFntcpReceive, &tcpReceive_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addChatMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Author                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            Channel                        ( CPF_Parm )

void UNowGFXHudScene::addChatMessage ( struct FString Message, struct FString Author, int Channel )
{
	static UFunction* pFnaddChatMessage = NULL;

	if ( ! pFnaddChatMessage )
		pFnaddChatMessage = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addChatMessage" );

	UNowGFXHudScene_execaddChatMessage_Parms addChatMessage_Parms;
	memcpy ( &addChatMessage_Parms.Message, &Message, 0xC );
	memcpy ( &addChatMessage_Parms.Author, &Author, 0xC );
	addChatMessage_Parms.Channel = Channel;

	this->ProcessEvent ( pFnaddChatMessage, &addChatMessage_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setChatInput
// [0x00020002] 
// Parameters infos:
// struct FString                 sInput                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setChatInput ( struct FString sInput )
{
	static UFunction* pFnsetChatInput = NULL;

	if ( ! pFnsetChatInput )
		pFnsetChatInput = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setChatInput" );

	UNowGFXHudScene_execsetChatInput_Parms setChatInput_Parms;
	memcpy ( &setChatInput_Parms.sInput, &sInput, 0xC );

	this->ProcessEvent ( pFnsetChatInput, &setChatInput_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.tcpSaveConfigJson
// [0x00020002] 
// Parameters infos:
// struct FString                 jsonData                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::tcpSaveConfigJson ( struct FString jsonData )
{
	static UFunction* pFntcpSaveConfigJson = NULL;

	if ( ! pFntcpSaveConfigJson )
		pFntcpSaveConfigJson = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.tcpSaveConfigJson" );

	UNowGFXHudScene_exectcpSaveConfigJson_Parms tcpSaveConfigJson_Parms;
	memcpy ( &tcpSaveConfigJson_Parms.jsonData, &jsonData, 0xC );

	this->ProcessEvent ( pFntcpSaveConfigJson, &tcpSaveConfigJson_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.sendChatMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 sMsg                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::sendChatMessage ( struct FString sMsg )
{
	static UFunction* pFnsendChatMessage = NULL;

	if ( ! pFnsendChatMessage )
		pFnsendChatMessage = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.sendChatMessage" );

	UNowGFXHudScene_execsendChatMessage_Parms sendChatMessage_Parms;
	memcpy ( &sendChatMessage_Parms.sMsg, &sMsg, 0xC );

	this->ProcessEvent ( pFnsendChatMessage, &sendChatMessage_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetTcpLink
// [0x00020002] 
// Parameters infos:
// class ANowTCPLink*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowTCPLink* UNowGFXHudScene::GetTcpLink ( )
{
	static UFunction* pFnGetTcpLink = NULL;

	if ( ! pFnGetTcpLink )
		pFnGetTcpLink = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetTcpLink" );

	UNowGFXHudScene_execGetTcpLink_Parms GetTcpLink_Parms;

	this->ProcessEvent ( pFnGetTcpLink, &GetTcpLink_Parms, NULL );

	return GetTcpLink_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitChat
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::InitChat ( )
{
	static UFunction* pFnInitChat = NULL;

	if ( ! pFnInitChat )
		pFnInitChat = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitChat" );

	UNowGFXHudScene_execInitChat_Parms InitChat_Parms;

	this->ProcessEvent ( pFnInitChat, &InitChat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setAreaName
// [0x00020002] 
// Parameters infos:
// struct FString                 sAreaName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setAreaName ( struct FString sAreaName )
{
	static UFunction* pFnsetAreaName = NULL;

	if ( ! pFnsetAreaName )
		pFnsetAreaName = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setAreaName" );

	UNowGFXHudScene_execsetAreaName_Parms setAreaName_Parms;
	memcpy ( &setAreaName_Parms.sAreaName, &sAreaName, 0xC );

	this->ProcessEvent ( pFnsetAreaName, &setAreaName_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCompassDirection
// [0x00020002] 
// Parameters infos:
// int                            degrees                        ( CPF_Parm )

void UNowGFXHudScene::setCompassDirection ( int degrees )
{
	static UFunction* pFnsetCompassDirection = NULL;

	if ( ! pFnsetCompassDirection )
		pFnsetCompassDirection = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setCompassDirection" );

	UNowGFXHudScene_execsetCompassDirection_Parms setCompassDirection_Parms;
	setCompassDirection_Parms.degrees = degrees;

	this->ProcessEvent ( pFnsetCompassDirection, &setCompassDirection_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCompassPosition
// [0x00020002] 
// Parameters infos:
// struct FString                 Element                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )

void UNowGFXHudScene::setCompassPosition ( struct FString Element, int X, int Y )
{
	static UFunction* pFnsetCompassPosition = NULL;

	if ( ! pFnsetCompassPosition )
		pFnsetCompassPosition = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setCompassPosition" );

	UNowGFXHudScene_execsetCompassPosition_Parms setCompassPosition_Parms;
	memcpy ( &setCompassPosition_Parms.Element, &Element, 0xC );
	setCompassPosition_Parms.X = X;
	setCompassPosition_Parms.Y = Y;

	this->ProcessEvent ( pFnsetCompassPosition, &setCompassPosition_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.loadCompassContent
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::loadCompassContent ( )
{
	static UFunction* pFnloadCompassContent = NULL;

	if ( ! pFnloadCompassContent )
		pFnloadCompassContent = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.loadCompassContent" );

	UNowGFXHudScene_execloadCompassContent_Parms loadCompassContent_Parms;

	this->ProcessEvent ( pFnloadCompassContent, &loadCompassContent_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ToggleCompass
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ToggleCompass ( )
{
	static UFunction* pFnToggleCompass = NULL;

	if ( ! pFnToggleCompass )
		pFnToggleCompass = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ToggleCompass" );

	UNowGFXHudScene_execToggleCompass_Parms ToggleCompass_Parms;

	this->ProcessEvent ( pFnToggleCompass, &ToggleCompass_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateCompass
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::updateCompass ( )
{
	static UFunction* pFnupdateCompass = NULL;

	if ( ! pFnupdateCompass )
		pFnupdateCompass = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updateCompass" );

	UNowGFXHudScene_execupdateCompass_Parms updateCompass_Parms;

	this->ProcessEvent ( pFnupdateCompass, &updateCompass_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.startUpdateCompass
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::startUpdateCompass ( )
{
	static UFunction* pFnstartUpdateCompass = NULL;

	if ( ! pFnstartUpdateCompass )
		pFnstartUpdateCompass = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.startUpdateCompass" );

	UNowGFXHudScene_execstartUpdateCompass_Parms startUpdateCompass_Parms;

	this->ProcessEvent ( pFnstartUpdateCompass, &startUpdateCompass_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitCompass
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXHudScene::InitCompass ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInitCompass = NULL;

	if ( ! pFnInitCompass )
		pFnInitCompass = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitCompass" );

	UNowGFXHudScene_execInitCompass_Parms InitCompass_Parms;
	InitCompass_Parms.Player = Player;
	InitCompass_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInitCompass, &InitCompass_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setDirectionLabel
// [0x00020002] 
// Parameters infos:
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setDirectionLabel ( struct FString sLabel )
{
	static UFunction* pFnsetDirectionLabel = NULL;

	if ( ! pFnsetDirectionLabel )
		pFnsetDirectionLabel = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setDirectionLabel" );

	UNowGFXHudScene_execsetDirectionLabel_Parms setDirectionLabel_Parms;
	memcpy ( &setDirectionLabel_Parms.sLabel, &sLabel, 0xC );

	this->ProcessEvent ( pFnsetDirectionLabel, &setDirectionLabel_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setDirectionDegrees
// [0x00020002] 
// Parameters infos:
// int                            iDegrees                       ( CPF_Parm )

void UNowGFXHudScene::setDirectionDegrees ( int iDegrees )
{
	static UFunction* pFnsetDirectionDegrees = NULL;

	if ( ! pFnsetDirectionDegrees )
		pFnsetDirectionDegrees = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setDirectionDegrees" );

	UNowGFXHudScene_execsetDirectionDegrees_Parms setDirectionDegrees_Parms;
	setDirectionDegrees_Parms.iDegrees = iDegrees;

	this->ProcessEvent ( pFnsetDirectionDegrees, &setDirectionDegrees_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleDirectionHelper
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXHudScene::toggleDirectionHelper ( unsigned long bVisible )
{
	static UFunction* pFntoggleDirectionHelper = NULL;

	if ( ! pFntoggleDirectionHelper )
		pFntoggleDirectionHelper = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleDirectionHelper" );

	UNowGFXHudScene_exectoggleDirectionHelper_Parms toggleDirectionHelper_Parms;
	toggleDirectionHelper_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFntoggleDirectionHelper, &toggleDirectionHelper_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleShift
// [0x00020002] 
// Parameters infos:
// unsigned long                  bShift                         ( CPF_Parm )

void UNowGFXHudScene::toggleShift ( unsigned long bShift )
{
	static UFunction* pFntoggleShift = NULL;

	if ( ! pFntoggleShift )
		pFntoggleShift = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleShift" );

	UNowGFXHudScene_exectoggleShift_Parms toggleShift_Parms;
	toggleShift_Parms.bShift = bShift;

	this->ProcessEvent ( pFntoggleShift, &toggleShift_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeStatusSymbol
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeStatusSymbol ( struct FString Id )
{
	static UFunction* pFnremoveStatusSymbol = NULL;

	if ( ! pFnremoveStatusSymbol )
		pFnremoveStatusSymbol = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeStatusSymbol" );

	UNowGFXHudScene_execremoveStatusSymbol_Parms removeStatusSymbol_Parms;
	memcpy ( &removeStatusSymbol_Parms.Id, &Id, 0xC );

	this->ProcessEvent ( pFnremoveStatusSymbol, &removeStatusSymbol_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setStatusColor
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sColor                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setStatusColor ( struct FString Id, struct FString sColor )
{
	static UFunction* pFnsetStatusColor = NULL;

	if ( ! pFnsetStatusColor )
		pFnsetStatusColor = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setStatusColor" );

	UNowGFXHudScene_execsetStatusColor_Parms setStatusColor_Parms;
	memcpy ( &setStatusColor_Parms.Id, &Id, 0xC );
	memcpy ( &setStatusColor_Parms.sColor, &sColor, 0xC );

	this->ProcessEvent ( pFnsetStatusColor, &setStatusColor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addStatusSymbol
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Icon                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sColor                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addStatusSymbol ( struct FString Id, struct FString Icon, struct FString sColor )
{
	static UFunction* pFnaddStatusSymbol = NULL;

	if ( ! pFnaddStatusSymbol )
		pFnaddStatusSymbol = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addStatusSymbol" );

	UNowGFXHudScene_execaddStatusSymbol_Parms addStatusSymbol_Parms;
	memcpy ( &addStatusSymbol_Parms.Id, &Id, 0xC );
	memcpy ( &addStatusSymbol_Parms.Icon, &Icon, 0xC );
	memcpy ( &addStatusSymbol_Parms.sColor, &sColor, 0xC );

	this->ProcessEvent ( pFnaddStatusSymbol, &addStatusSymbol_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InputBox
// [0x00020002] 
// Parameters infos:
// struct FString                 sID                            ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRestricted                    ( CPF_Parm )

void UNowGFXHudScene::InputBox ( struct FString sID, struct FString sMessage, struct FString sTitle, unsigned long bRestricted )
{
	static UFunction* pFnInputBox = NULL;

	if ( ! pFnInputBox )
		pFnInputBox = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InputBox" );

	UNowGFXHudScene_execInputBox_Parms InputBox_Parms;
	memcpy ( &InputBox_Parms.sID, &sID, 0xC );
	memcpy ( &InputBox_Parms.sMessage, &sMessage, 0xC );
	memcpy ( &InputBox_Parms.sTitle, &sTitle, 0xC );
	InputBox_Parms.bRestricted = bRestricted;

	this->ProcessEvent ( pFnInputBox, &InputBox_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.msgBox
// [0x00020002] 
// Parameters infos:
// struct FString                 sID                            ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bResponse                      ( CPF_Parm )

void UNowGFXHudScene::msgBox ( struct FString sID, struct FString sMessage, struct FString sTitle, unsigned long bResponse )
{
	static UFunction* pFnmsgBox = NULL;

	if ( ! pFnmsgBox )
		pFnmsgBox = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.msgBox" );

	UNowGFXHudScene_execmsgBox_Parms msgBox_Parms;
	memcpy ( &msgBox_Parms.sID, &sID, 0xC );
	memcpy ( &msgBox_Parms.sMessage, &sMessage, 0xC );
	memcpy ( &msgBox_Parms.sTitle, &sTitle, 0xC );
	msgBox_Parms.bResponse = bResponse;

	this->ProcessEvent ( pFnmsgBox, &msgBox_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCrosshair
// [0x00020002] 
// Parameters infos:
// struct FString                 IconName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ObjectName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 nameColor                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 useVerb                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bUsable                        ( CPF_Parm )

void UNowGFXHudScene::setCrosshair ( struct FString IconName, struct FString ObjectName, struct FString nameColor, struct FString useVerb, unsigned long bUsable )
{
	static UFunction* pFnsetCrosshair = NULL;

	if ( ! pFnsetCrosshair )
		pFnsetCrosshair = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setCrosshair" );

	UNowGFXHudScene_execsetCrosshair_Parms setCrosshair_Parms;
	memcpy ( &setCrosshair_Parms.IconName, &IconName, 0xC );
	memcpy ( &setCrosshair_Parms.ObjectName, &ObjectName, 0xC );
	memcpy ( &setCrosshair_Parms.nameColor, &nameColor, 0xC );
	memcpy ( &setCrosshair_Parms.useVerb, &useVerb, 0xC );
	setCrosshair_Parms.bUsable = bUsable;

	this->ProcessEvent ( pFnsetCrosshair, &setCrosshair_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TriggerGuildVerify
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TriggerGuildVerify ( )
{
	static UFunction* pFnTriggerGuildVerify = NULL;

	if ( ! pFnTriggerGuildVerify )
		pFnTriggerGuildVerify = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TriggerGuildVerify" );

	UNowGFXHudScene_execTriggerGuildVerify_Parms TriggerGuildVerify_Parms;

	this->ProcessEvent ( pFnTriggerGuildVerify, &TriggerGuildVerify_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.inputBoxResponse
// [0x00020002] 
// Parameters infos:
// struct FString                 msgBoxId                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sResponse                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::inputBoxResponse ( struct FString msgBoxId, struct FString sResponse )
{
	static UFunction* pFninputBoxResponse = NULL;

	if ( ! pFninputBoxResponse )
		pFninputBoxResponse = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.inputBoxResponse" );

	UNowGFXHudScene_execinputBoxResponse_Parms inputBoxResponse_Parms;
	memcpy ( &inputBoxResponse_Parms.msgBoxId, &msgBoxId, 0xC );
	memcpy ( &inputBoxResponse_Parms.sResponse, &sResponse, 0xC );

	this->ProcessEvent ( pFninputBoxResponse, &inputBoxResponse_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.msgBoxResponse
// [0x00020002] 
// Parameters infos:
// struct FString                 msgBoxId                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bResponse                      ( CPF_Parm )

void UNowGFXHudScene::msgBoxResponse ( struct FString msgBoxId, unsigned long bResponse )
{
	static UFunction* pFnmsgBoxResponse = NULL;

	if ( ! pFnmsgBoxResponse )
		pFnmsgBoxResponse = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.msgBoxResponse" );

	UNowGFXHudScene_execmsgBoxResponse_Parms msgBoxResponse_Parms;
	memcpy ( &msgBoxResponse_Parms.msgBoxId, &msgBoxId, 0xC );
	msgBoxResponse_Parms.bResponse = bResponse;

	this->ProcessEvent ( pFnmsgBoxResponse, &msgBoxResponse_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetCrosshairTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  NewTarget                      ( CPF_Parm )

void UNowGFXHudScene::SetCrosshairTarget ( class AActor* NewTarget )
{
	static UFunction* pFnSetCrosshairTarget = NULL;

	if ( ! pFnSetCrosshairTarget )
		pFnSetCrosshairTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetCrosshairTarget" );

	UNowGFXHudScene_execSetCrosshairTarget_Parms SetCrosshairTarget_Parms;
	SetCrosshairTarget_Parms.NewTarget = NewTarget;

	this->ProcessEvent ( pFnSetCrosshairTarget, &SetCrosshairTarget_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ResetCrosshairTarget
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ResetCrosshairTarget ( )
{
	static UFunction* pFnResetCrosshairTarget = NULL;

	if ( ! pFnResetCrosshairTarget )
		pFnResetCrosshairTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ResetCrosshairTarget" );

	UNowGFXHudScene_execResetCrosshairTarget_Parms ResetCrosshairTarget_Parms;

	this->ProcessEvent ( pFnResetCrosshairTarget, &ResetCrosshairTarget_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.HideCrosshair
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::HideCrosshair ( )
{
	static UFunction* pFnHideCrosshair = NULL;

	if ( ! pFnHideCrosshair )
		pFnHideCrosshair = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.HideCrosshair" );

	UNowGFXHudScene_execHideCrosshair_Parms HideCrosshair_Parms;

	this->ProcessEvent ( pFnHideCrosshair, &HideCrosshair_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetKeyboardInput
// [0x00020002] 
// Parameters infos:
// unsigned long                  bFlashNeedKeyInput             ( CPF_Parm )

void UNowGFXHudScene::GetKeyboardInput ( unsigned long bFlashNeedKeyInput )
{
	static UFunction* pFnGetKeyboardInput = NULL;

	if ( ! pFnGetKeyboardInput )
		pFnGetKeyboardInput = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetKeyboardInput" );

	UNowGFXHudScene_execGetKeyboardInput_Parms GetKeyboardInput_Parms;
	GetKeyboardInput_Parms.bFlashNeedKeyInput = bFlashNeedKeyInput;

	this->ProcessEvent ( pFnGetKeyboardInput, &GetKeyboardInput_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ToggleBlurPP
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void UNowGFXHudScene::ToggleBlurPP ( unsigned long bOn )
{
	static UFunction* pFnToggleBlurPP = NULL;

	if ( ! pFnToggleBlurPP )
		pFnToggleBlurPP = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ToggleBlurPP" );

	UNowGFXHudScene_execToggleBlurPP_Parms ToggleBlurPP_Parms;
	ToggleBlurPP_Parms.bOn = bOn;

	this->ProcessEvent ( pFnToggleBlurPP, &ToggleBlurPP_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPetLoyalty
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            curLoyalty                     ( CPF_Parm )
// int                            maxLoyalty                     ( CPF_Parm )

void UNowGFXHudScene::setPetLoyalty ( struct FString petGUID, int curLoyalty, int maxLoyalty )
{
	static UFunction* pFnsetPetLoyalty = NULL;

	if ( ! pFnsetPetLoyalty )
		pFnsetPetLoyalty = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setPetLoyalty" );

	UNowGFXHudScene_execsetPetLoyalty_Parms setPetLoyalty_Parms;
	memcpy ( &setPetLoyalty_Parms.petGUID, &petGUID, 0xC );
	setPetLoyalty_Parms.curLoyalty = curLoyalty;
	setPetLoyalty_Parms.maxLoyalty = maxLoyalty;

	this->ProcessEvent ( pFnsetPetLoyalty, &setPetLoyalty_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPetName
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setPetName ( struct FString petGUID, struct FString DisplayName )
{
	static UFunction* pFnsetPetName = NULL;

	if ( ! pFnsetPetName )
		pFnsetPetName = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setPetName" );

	UNowGFXHudScene_execsetPetName_Parms setPetName_Parms;
	memcpy ( &setPetName_Parms.petGUID, &petGUID, 0xC );
	memcpy ( &setPetName_Parms.DisplayName, &DisplayName, 0xC );

	this->ProcessEvent ( pFnsetPetName, &setPetName_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showPetWindow
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            curLoyalty                     ( CPF_Parm )
// int                            maxLoyalty                     ( CPF_Parm )
// unsigned long                  bVisible                       ( CPF_Parm )
// unsigned long                  bHasBag                        ( CPF_Parm )

void UNowGFXHudScene::showPetWindow ( struct FString petGUID, struct FString DisplayName, int curLoyalty, int maxLoyalty, unsigned long bVisible, unsigned long bHasBag )
{
	static UFunction* pFnshowPetWindow = NULL;

	if ( ! pFnshowPetWindow )
		pFnshowPetWindow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showPetWindow" );

	UNowGFXHudScene_execshowPetWindow_Parms showPetWindow_Parms;
	memcpy ( &showPetWindow_Parms.petGUID, &petGUID, 0xC );
	memcpy ( &showPetWindow_Parms.DisplayName, &DisplayName, 0xC );
	showPetWindow_Parms.curLoyalty = curLoyalty;
	showPetWindow_Parms.maxLoyalty = maxLoyalty;
	showPetWindow_Parms.bVisible = bVisible;
	showPetWindow_Parms.bHasBag = bHasBag;

	this->ProcessEvent ( pFnshowPetWindow, &showPetWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RequestedPetWindow
// [0x00020002] 
// Parameters infos:
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RequestedPetWindow ( struct FString sPetGuid )
{
	static UFunction* pFnRequestedPetWindow = NULL;

	if ( ! pFnRequestedPetWindow )
		pFnRequestedPetWindow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RequestedPetWindow" );

	UNowGFXHudScene_execRequestedPetWindow_Parms RequestedPetWindow_Parms;
	memcpy ( &RequestedPetWindow_Parms.sPetGuid, &sPetGuid, 0xC );

	this->ProcessEvent ( pFnRequestedPetWindow, &RequestedPetWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdatePets
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::UpdatePets ( )
{
	static UFunction* pFnUpdatePets = NULL;

	if ( ! pFnUpdatePets )
		pFnUpdatePets = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdatePets" );

	UNowGFXHudScene_execUpdatePets_Parms UpdatePets_Parms;

	this->ProcessEvent ( pFnUpdatePets, &UpdatePets_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPets
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::InitPets ( )
{
	static UFunction* pFnInitPets = NULL;

	if ( ! pFnInitPets )
		pFnInitPets = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPets" );

	UNowGFXHudScene_execInitPets_Parms InitPets_Parms;

	this->ProcessEvent ( pFnInitPets, &InitPets_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SkillLockStateChanged
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iLockState                     ( CPF_Parm )

void UNowGFXHudScene::SkillLockStateChanged ( struct FString sGuid, int iLockState )
{
	static UFunction* pFnSkillLockStateChanged = NULL;

	if ( ! pFnSkillLockStateChanged )
		pFnSkillLockStateChanged = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SkillLockStateChanged" );

	UNowGFXHudScene_execSkillLockStateChanged_Parms SkillLockStateChanged_Parms;
	memcpy ( &SkillLockStateChanged_Parms.sGuid, &sGuid, 0xC );
	SkillLockStateChanged_Parms.iLockState = iLockState;

	this->ProcessEvent ( pFnSkillLockStateChanged, &SkillLockStateChanged_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SkillDecreaseLevel
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SkillDecreaseLevel ( struct FString sGuid )
{
	static UFunction* pFnSkillDecreaseLevel = NULL;

	if ( ! pFnSkillDecreaseLevel )
		pFnSkillDecreaseLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SkillDecreaseLevel" );

	UNowGFXHudScene_execSkillDecreaseLevel_Parms SkillDecreaseLevel_Parms;
	memcpy ( &SkillDecreaseLevel_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnSkillDecreaseLevel, &SkillDecreaseLevel_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addSkillGroup
// [0x00020002] 
// Parameters infos:
// struct FString                 GroupName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addSkillGroup ( struct FString GroupName, struct FString sGuid )
{
	static UFunction* pFnaddSkillGroup = NULL;

	if ( ! pFnaddSkillGroup )
		pFnaddSkillGroup = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addSkillGroup" );

	UNowGFXHudScene_execaddSkillGroup_Parms addSkillGroup_Parms;
	memcpy ( &addSkillGroup_Parms.GroupName, &GroupName, 0xC );
	memcpy ( &addSkillGroup_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnaddSkillGroup, &addSkillGroup_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showSkills
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXHudScene::showSkills ( unsigned long bVisible )
{
	static UFunction* pFnshowSkills = NULL;

	if ( ! pFnshowSkills )
		pFnshowSkills = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showSkills" );

	UNowGFXHudScene_execshowSkills_Parms showSkills_Parms;
	showSkills_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnshowSkills, &showSkills_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setskill
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventsetskill ( struct FString sGuid, struct FString sData )
{
	static UFunction* pFnsetskill = NULL;

	if ( ! pFnsetskill )
		pFnsetskill = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setskill" );

	UNowGFXHudScene_eventsetskill_Parms setskill_Parms;
	memcpy ( &setskill_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &setskill_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnsetskill, &setskill_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ToggleSkillBook
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ToggleSkillBook ( )
{
	static UFunction* pFnToggleSkillBook = NULL;

	if ( ! pFnToggleSkillBook )
		pFnToggleSkillBook = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ToggleSkillBook" );

	UNowGFXHudScene_execToggleSkillBook_Parms ToggleSkillBook_Parms;

	this->ProcessEvent ( pFnToggleSkillBook, &ToggleSkillBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendSkillsToFlash
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventSendSkillsToFlash ( )
{
	static UFunction* pFnSendSkillsToFlash = NULL;

	if ( ! pFnSendSkillsToFlash )
		pFnSendSkillsToFlash = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendSkillsToFlash" );

	UNowGFXHudScene_eventSendSkillsToFlash_Parms SendSkillsToFlash_Parms;

	this->ProcessEvent ( pFnSendSkillsToFlash, &SendSkillsToFlash_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddSkillData
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sSkillGuid                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillData                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddSkillData ( struct FString sSkillGuid, struct FString sSkillData )
{
	static UFunction* pFnAddSkillData = NULL;

	if ( ! pFnAddSkillData )
		pFnAddSkillData = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddSkillData" );

	UNowGFXHudScene_eventAddSkillData_Parms AddSkillData_Parms;
	memcpy ( &AddSkillData_Parms.sSkillGuid, &sSkillGuid, 0xC );
	memcpy ( &AddSkillData_Parms.sSkillData, &sSkillData, 0xC );

	this->ProcessEvent ( pFnAddSkillData, &AddSkillData_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendSkillGroupsToFlash
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SendSkillGroupsToFlash ( )
{
	static UFunction* pFnSendSkillGroupsToFlash = NULL;

	if ( ! pFnSendSkillGroupsToFlash )
		pFnSendSkillGroupsToFlash = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendSkillGroupsToFlash" );

	UNowGFXHudScene_execSendSkillGroupsToFlash_Parms SendSkillGroupsToFlash_Parms;

	this->ProcessEvent ( pFnSendSkillGroupsToFlash, &SendSkillGroupsToFlash_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitSkillBook
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitSkillBook ( )
{
	static UFunction* pFnInitSkillBook = NULL;

	if ( ! pFnInitSkillBook )
		pFnInitSkillBook = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitSkillBook" );

	UNowGFXHudScene_execInitSkillBook_Parms InitSkillBook_Parms;

	this->ProcessEvent ( pFnInitSkillBook, &InitSkillBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillMySkillData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillMySkillData ( )
{
	static UFunction* pFnFillMySkillData = NULL;

	if ( ! pFnFillMySkillData )
		pFnFillMySkillData = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillMySkillData" );

	UNowGFXHudScene_execFillMySkillData_Parms FillMySkillData_Parms;

	pFnFillMySkillData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillMySkillData, &FillMySkillData_Parms, NULL );

	pFnFillMySkillData->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.FillSkillData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillSkillData ( )
{
	static UFunction* pFnFillSkillData = NULL;

	if ( ! pFnFillSkillData )
		pFnFillSkillData = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillSkillData" );

	UNowGFXHudScene_execFillSkillData_Parms FillSkillData_Parms;

	pFnFillSkillData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillSkillData, &FillSkillData_Parms, NULL );

	pFnFillSkillData->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.useActionBar
// [0x00020002] 
// Parameters infos:
// int                            barId                          ( CPF_Parm )
// int                            slotId                         ( CPF_Parm )

void UNowGFXHudScene::useActionBar ( int barId, int slotId )
{
	static UFunction* pFnuseActionBar = NULL;

	if ( ! pFnuseActionBar )
		pFnuseActionBar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.useActionBar" );

	UNowGFXHudScene_execuseActionBar_Parms useActionBar_Parms;
	useActionBar_Parms.barId = barId;
	useActionBar_Parms.slotId = slotId;

	this->ProcessEvent ( pFnuseActionBar, &useActionBar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addHotbar
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// int                            numSlots                       ( CPF_Parm )

void UNowGFXHudScene::addHotbar ( int Id, int numSlots )
{
	static UFunction* pFnaddHotbar = NULL;

	if ( ! pFnaddHotbar )
		pFnaddHotbar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addHotbar" );

	UNowGFXHudScene_execaddHotbar_Parms addHotbar_Parms;
	addHotbar_Parms.Id = Id;
	addHotbar_Parms.numSlots = numSlots;

	this->ProcessEvent ( pFnaddHotbar, &addHotbar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitHotbar
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::InitHotbar ( )
{
	static UFunction* pFnInitHotbar = NULL;

	if ( ! pFnInitHotbar )
		pFnInitHotbar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitHotbar" );

	UNowGFXHudScene_execInitHotbar_Parms InitHotbar_Parms;

	this->ProcessEvent ( pFnInitHotbar, &InitHotbar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showMacros
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showMacros ( )
{
	static UFunction* pFnshowMacros = NULL;

	if ( ! pFnshowMacros )
		pFnshowMacros = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showMacros" );

	UNowGFXHudScene_execshowMacros_Parms showMacros_Parms;

	this->ProcessEvent ( pFnshowMacros, &showMacros_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitMacros
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::InitMacros ( )
{
	static UFunction* pFnInitMacros = NULL;

	if ( ! pFnInitMacros )
		pFnInitMacros = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitMacros" );

	UNowGFXHudScene_execInitMacros_Parms InitMacros_Parms;

	this->ProcessEvent ( pFnInitMacros, &InitMacros_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeSpellbook
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeSpellbook ( )
{
	static UFunction* pFncloseSpellbook = NULL;

	if ( ! pFncloseSpellbook )
		pFncloseSpellbook = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeSpellbook" );

	UNowGFXHudScene_execcloseSpellbook_Parms closeSpellbook_Parms;

	this->ProcessEvent ( pFncloseSpellbook, &closeSpellbook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showSpellbook
// [0x00020002] 
// Parameters infos:
// unsigned long                  bGreaterHealing                ( CPF_Parm )
// unsigned long                  bCorrupt                       ( CPF_Parm )
// unsigned long                  bThunderlash                   ( CPF_Parm )
// unsigned long                  bFulmination                   ( CPF_Parm )
// unsigned long                  bSpurt                         ( CPF_Parm )
// unsigned long                  bLesserHealing                 ( CPF_Parm )
// unsigned long                  bPurify                        ( CPF_Parm )
// unsigned long                  bFireball                      ( CPF_Parm )
// unsigned long                  bLightning                     ( CPF_Parm )
// unsigned long                  bMagicReflection               ( CPF_Parm )
// unsigned long                  bMindBlast                     ( CPF_Parm )
// unsigned long                  bFlameStrike                   ( CPF_Parm )
// unsigned long                  bEarthquake                    ( CPF_Parm )
// unsigned long                  bResurrect                     ( CPF_Parm )
// unsigned long                  bTranscendentalAwareness       ( CPF_Parm )

void UNowGFXHudScene::showSpellbook ( unsigned long bGreaterHealing, unsigned long bCorrupt, unsigned long bThunderlash, unsigned long bFulmination, unsigned long bSpurt, unsigned long bLesserHealing, unsigned long bPurify, unsigned long bFireball, unsigned long bLightning, unsigned long bMagicReflection, unsigned long bMindBlast, unsigned long bFlameStrike, unsigned long bEarthquake, unsigned long bResurrect, unsigned long bTranscendentalAwareness )
{
	static UFunction* pFnshowSpellbook = NULL;

	if ( ! pFnshowSpellbook )
		pFnshowSpellbook = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showSpellbook" );

	UNowGFXHudScene_execshowSpellbook_Parms showSpellbook_Parms;
	showSpellbook_Parms.bGreaterHealing = bGreaterHealing;
	showSpellbook_Parms.bCorrupt = bCorrupt;
	showSpellbook_Parms.bThunderlash = bThunderlash;
	showSpellbook_Parms.bFulmination = bFulmination;
	showSpellbook_Parms.bSpurt = bSpurt;
	showSpellbook_Parms.bLesserHealing = bLesserHealing;
	showSpellbook_Parms.bPurify = bPurify;
	showSpellbook_Parms.bFireball = bFireball;
	showSpellbook_Parms.bLightning = bLightning;
	showSpellbook_Parms.bMagicReflection = bMagicReflection;
	showSpellbook_Parms.bMindBlast = bMindBlast;
	showSpellbook_Parms.bFlameStrike = bFlameStrike;
	showSpellbook_Parms.bEarthquake = bEarthquake;
	showSpellbook_Parms.bResurrect = bResurrect;
	showSpellbook_Parms.bTranscendentalAwareness = bTranscendentalAwareness;

	this->ProcessEvent ( pFnshowSpellbook, &showSpellbook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DoShowSpellBook
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::DoShowSpellBook ( )
{
	static UFunction* pFnDoShowSpellBook = NULL;

	if ( ! pFnDoShowSpellBook )
		pFnDoShowSpellBook = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.DoShowSpellBook" );

	UNowGFXHudScene_execDoShowSpellBook_Parms DoShowSpellBook_Parms;

	this->ProcessEvent ( pFnDoShowSpellBook, &DoShowSpellBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitSpellBook
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::InitSpellBook ( )
{
	static UFunction* pFnInitSpellBook = NULL;

	if ( ! pFnInitSpellBook )
		pFnInitSpellBook = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitSpellBook" );

	UNowGFXHudScene_execInitSpellBook_Parms InitSpellBook_Parms;

	this->ProcessEvent ( pFnInitSpellBook, &InitSpellBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeModBar
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeModBar ( struct FString Id )
{
	static UFunction* pFnremoveModBar = NULL;

	if ( ! pFnremoveModBar )
		pFnremoveModBar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeModBar" );

	UNowGFXHudScene_execremoveModBar_Parms removeModBar_Parms;
	memcpy ( &removeModBar_Parms.Id, &Id, 0xC );

	this->ProcessEvent ( pFnremoveModBar, &removeModBar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addModBar
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Icon                           ( CPF_Parm | CPF_NeedCtorLink )
// float                          etaSeconds                     ( CPF_Parm )
// struct FString                 cancelDesc                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addModBar ( struct FString Id, struct FString DisplayName, struct FString Description, struct FString Icon, float etaSeconds, struct FString cancelDesc )
{
	static UFunction* pFnaddModBar = NULL;

	if ( ! pFnaddModBar )
		pFnaddModBar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addModBar" );

	UNowGFXHudScene_execaddModBar_Parms addModBar_Parms;
	memcpy ( &addModBar_Parms.Id, &Id, 0xC );
	memcpy ( &addModBar_Parms.DisplayName, &DisplayName, 0xC );
	memcpy ( &addModBar_Parms.Description, &Description, 0xC );
	memcpy ( &addModBar_Parms.Icon, &Icon, 0xC );
	addModBar_Parms.etaSeconds = etaSeconds;
	memcpy ( &addModBar_Parms.cancelDesc, &cancelDesc, 0xC );

	this->ProcessEvent ( pFnaddModBar, &addModBar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showSocial
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showSocial ( )
{
	static UFunction* pFnshowSocial = NULL;

	if ( ! pFnshowSocial )
		pFnshowSocial = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showSocial" );

	UNowGFXHudScene_execshowSocial_Parms showSocial_Parms;

	this->ProcessEvent ( pFnshowSocial, &showSocial_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestRemoveIgnore
// [0x00020002] 
// Parameters infos:
// struct FString                 req                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestRemoveIgnore ( struct FString req )
{
	static UFunction* pFnrequestRemoveIgnore = NULL;

	if ( ! pFnrequestRemoveIgnore )
		pFnrequestRemoveIgnore = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.requestRemoveIgnore" );

	UNowGFXHudScene_execrequestRemoveIgnore_Parms requestRemoveIgnore_Parms;
	memcpy ( &requestRemoveIgnore_Parms.req, &req, 0xC );

	this->ProcessEvent ( pFnrequestRemoveIgnore, &requestRemoveIgnore_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestAddIgnore
// [0x00020002] 
// Parameters infos:
// struct FString                 req                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestAddIgnore ( struct FString req )
{
	static UFunction* pFnrequestAddIgnore = NULL;

	if ( ! pFnrequestAddIgnore )
		pFnrequestAddIgnore = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.requestAddIgnore" );

	UNowGFXHudScene_execrequestAddIgnore_Parms requestAddIgnore_Parms;
	memcpy ( &requestAddIgnore_Parms.req, &req, 0xC );

	this->ProcessEvent ( pFnrequestAddIgnore, &requestAddIgnore_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestRemoveFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 req                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestRemoveFriend ( struct FString req )
{
	static UFunction* pFnrequestRemoveFriend = NULL;

	if ( ! pFnrequestRemoveFriend )
		pFnrequestRemoveFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.requestRemoveFriend" );

	UNowGFXHudScene_execrequestRemoveFriend_Parms requestRemoveFriend_Parms;
	memcpy ( &requestRemoveFriend_Parms.req, &req, 0xC );

	this->ProcessEvent ( pFnrequestRemoveFriend, &requestRemoveFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestAddFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 req                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestAddFriend ( struct FString req )
{
	static UFunction* pFnrequestAddFriend = NULL;

	if ( ! pFnrequestAddFriend )
		pFnrequestAddFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.requestAddFriend" );

	UNowGFXHudScene_execrequestAddFriend_Parms requestAddFriend_Parms;
	memcpy ( &requestAddFriend_Parms.req, &req, 0xC );

	this->ProcessEvent ( pFnrequestAddFriend, &requestAddFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateIgnore
// [0x00020002] 
// Parameters infos:
// struct FString                 ignore                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  Online                         ( CPF_Parm )

void UNowGFXHudScene::updateIgnore ( struct FString ignore, unsigned long Online )
{
	static UFunction* pFnupdateIgnore = NULL;

	if ( ! pFnupdateIgnore )
		pFnupdateIgnore = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updateIgnore" );

	UNowGFXHudScene_execupdateIgnore_Parms updateIgnore_Parms;
	memcpy ( &updateIgnore_Parms.ignore, &ignore, 0xC );
	updateIgnore_Parms.Online = Online;

	this->ProcessEvent ( pFnupdateIgnore, &updateIgnore_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 Friend                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  Online                         ( CPF_Parm )

void UNowGFXHudScene::updateFriend ( struct FString Friend, unsigned long Online )
{
	static UFunction* pFnupdateFriend = NULL;

	if ( ! pFnupdateFriend )
		pFnupdateFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updateFriend" );

	UNowGFXHudScene_execupdateFriend_Parms updateFriend_Parms;
	memcpy ( &updateFriend_Parms.Friend, &Friend, 0xC );
	updateFriend_Parms.Online = Online;

	this->ProcessEvent ( pFnupdateFriend, &updateFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeIgnore
// [0x00020002] 
// Parameters infos:
// struct FString                 ignore                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeIgnore ( struct FString ignore )
{
	static UFunction* pFnremoveIgnore = NULL;

	if ( ! pFnremoveIgnore )
		pFnremoveIgnore = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeIgnore" );

	UNowGFXHudScene_execremoveIgnore_Parms removeIgnore_Parms;
	memcpy ( &removeIgnore_Parms.ignore, &ignore, 0xC );

	this->ProcessEvent ( pFnremoveIgnore, &removeIgnore_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 Friend                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveFriend ( struct FString Friend )
{
	static UFunction* pFnRemoveFriend = NULL;

	if ( ! pFnRemoveFriend )
		pFnRemoveFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RemoveFriend" );

	UNowGFXHudScene_execRemoveFriend_Parms RemoveFriend_Parms;
	memcpy ( &RemoveFriend_Parms.Friend, &Friend, 0xC );

	this->ProcessEvent ( pFnRemoveFriend, &RemoveFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addGuildMember
// [0x00020002] 
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  memberOnline                   ( CPF_Parm )

void UNowGFXHudScene::addGuildMember ( struct FString memberName, unsigned long memberOnline )
{
	static UFunction* pFnaddGuildMember = NULL;

	if ( ! pFnaddGuildMember )
		pFnaddGuildMember = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addGuildMember" );

	UNowGFXHudScene_execaddGuildMember_Parms addGuildMember_Parms;
	memcpy ( &addGuildMember_Parms.memberName, &memberName, 0xC );
	addGuildMember_Parms.memberOnline = memberOnline;

	this->ProcessEvent ( pFnaddGuildMember, &addGuildMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 Friend                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  Online                         ( CPF_Parm )

void UNowGFXHudScene::AddFriend ( struct FString Friend, unsigned long Online )
{
	static UFunction* pFnAddFriend = NULL;

	if ( ! pFnAddFriend )
		pFnAddFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddFriend" );

	UNowGFXHudScene_execAddFriend_Parms AddFriend_Parms;
	memcpy ( &AddFriend_Parms.Friend, &Friend, 0xC );
	AddFriend_Parms.Online = Online;

	this->ProcessEvent ( pFnAddFriend, &AddFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addIgnore
// [0x00020002] 
// Parameters infos:
// struct FString                 ignore                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  Online                         ( CPF_Parm )

void UNowGFXHudScene::addIgnore ( struct FString ignore, unsigned long Online )
{
	static UFunction* pFnaddIgnore = NULL;

	if ( ! pFnaddIgnore )
		pFnaddIgnore = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addIgnore" );

	UNowGFXHudScene_execaddIgnore_Parms addIgnore_Parms;
	memcpy ( &addIgnore_Parms.ignore, &ignore, 0xC );
	addIgnore_Parms.Online = Online;

	this->ProcessEvent ( pFnaddIgnore, &addIgnore_Parms, NULL );
};

// Function NowGame.NowGFXHudScene._updateFriend
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Friend                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  Online                         ( CPF_Parm )

void UNowGFXHudScene::event_updateFriend ( struct FString Friend, unsigned long Online )
{
	static UFunction* pFn_updateFriend = NULL;

	if ( ! pFn_updateFriend )
		pFn_updateFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene._updateFriend" );

	UNowGFXHudScene_event_updateFriend_Parms _updateFriend_Parms;
	memcpy ( &_updateFriend_Parms.Friend, &Friend, 0xC );
	_updateFriend_Parms.Online = Online;

	this->ProcessEvent ( pFn_updateFriend, &_updateFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestDeclineInvite
// [0x00020002] 
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestDeclineInvite ( struct FString FriendName )
{
	static UFunction* pFnrequestDeclineInvite = NULL;

	if ( ! pFnrequestDeclineInvite )
		pFnrequestDeclineInvite = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.requestDeclineInvite" );

	UNowGFXHudScene_execrequestDeclineInvite_Parms requestDeclineInvite_Parms;
	memcpy ( &requestDeclineInvite_Parms.FriendName, &FriendName, 0xC );

	this->ProcessEvent ( pFnrequestDeclineInvite, &requestDeclineInvite_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestDeclineFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestDeclineFriend ( struct FString FriendName )
{
	static UFunction* pFnrequestDeclineFriend = NULL;

	if ( ! pFnrequestDeclineFriend )
		pFnrequestDeclineFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.requestDeclineFriend" );

	UNowGFXHudScene_execrequestDeclineFriend_Parms requestDeclineFriend_Parms;
	memcpy ( &requestDeclineFriend_Parms.FriendName, &FriendName, 0xC );

	this->ProcessEvent ( pFnrequestDeclineFriend, &requestDeclineFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestAcceptFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestAcceptFriend ( struct FString FriendName )
{
	static UFunction* pFnrequestAcceptFriend = NULL;

	if ( ! pFnrequestAcceptFriend )
		pFnrequestAcceptFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.requestAcceptFriend" );

	UNowGFXHudScene_execrequestAcceptFriend_Parms requestAcceptFriend_Parms;
	memcpy ( &requestAcceptFriend_Parms.FriendName, &FriendName, 0xC );

	this->ProcessEvent ( pFnrequestAcceptFriend, &requestAcceptFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addPendingFriend
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddPendingFriend ( struct FString FriendName )
{
	static UFunction* pFnaddPendingFriend = NULL;

	if ( ! pFnaddPendingFriend )
		pFnaddPendingFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addPendingFriend" );

	UNowGFXHudScene_eventaddPendingFriend_Parms addPendingFriend_Parms;
	memcpy ( &addPendingFriend_Parms.FriendName, &FriendName, 0xC );

	this->ProcessEvent ( pFnaddPendingFriend, &addPendingFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateFriendList
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::updateFriendList ( )
{
	static UFunction* pFnupdateFriendList = NULL;

	if ( ! pFnupdateFriendList )
		pFnupdateFriendList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updateFriendList" );

	UNowGFXHudScene_execupdateFriendList_Parms updateFriendList_Parms;

	this->ProcessEvent ( pFnupdateFriendList, &updateFriendList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getInitFriends
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::getInitFriends ( )
{
	static UFunction* pFngetInitFriends = NULL;

	if ( ! pFngetInitFriends )
		pFngetInitFriends = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.getInitFriends" );

	UNowGFXHudScene_execgetInitFriends_Parms getInitFriends_Parms;

	this->ProcessEvent ( pFngetInitFriends, &getInitFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getPendingFriends
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::getPendingFriends ( )
{
	static UFunction* pFngetPendingFriends = NULL;

	if ( ! pFngetPendingFriends )
		pFngetPendingFriends = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.getPendingFriends" );

	UNowGFXHudScene_execgetPendingFriends_Parms getPendingFriends_Parms;

	this->ProcessEvent ( pFngetPendingFriends, &getPendingFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitDelegate ( )
{
	static UFunction* pFnInitDelegate = NULL;

	if ( ! pFnInitDelegate )
		pFnInitDelegate = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitDelegate" );

	UNowGFXHudScene_eventInitDelegate_Parms InitDelegate_Parms;

	this->ProcessEvent ( pFnInitDelegate, &InitDelegate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGuildMembers
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGuildMembers ( )
{
	static UFunction* pFnInitGuildMembers = NULL;

	if ( ! pFnInitGuildMembers )
		pFnInitGuildMembers = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitGuildMembers" );

	UNowGFXHudScene_execInitGuildMembers_Parms InitGuildMembers_Parms;

	this->ProcessEvent ( pFnInitGuildMembers, &InitGuildMembers_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitSocial
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitSocial ( )
{
	static UFunction* pFnInitSocial = NULL;

	if ( ! pFnInitSocial )
		pFnInitSocial = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitSocial" );

	UNowGFXHudScene_execInitSocial_Parms InitSocial_Parms;

	this->ProcessEvent ( pFnInitSocial, &InitSocial_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CheckAddTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::eventCheckAddTimer ( )
{
	static UFunction* pFnCheckAddTimer = NULL;

	if ( ! pFnCheckAddTimer )
		pFnCheckAddTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CheckAddTimer" );

	UNowGFXHudScene_eventCheckAddTimer_Parms CheckAddTimer_Parms;

	this->ProcessEvent ( pFnCheckAddTimer, &CheckAddTimer_Parms, NULL );

	return CheckAddTimer_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.isPlayerOnline
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UNowGFXHudScene::isPlayerOnline ( int Index )
{
	static UFunction* pFnisPlayerOnline = NULL;

	if ( ! pFnisPlayerOnline )
		pFnisPlayerOnline = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.isPlayerOnline" );

	UNowGFXHudScene_execisPlayerOnline_Parms isPlayerOnline_Parms;
	isPlayerOnline_Parms.Index = Index;

	pFnisPlayerOnline->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisPlayerOnline, &isPlayerOnline_Parms, NULL );

	pFnisPlayerOnline->FunctionFlags |= 0x400;

	return isPlayerOnline_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.enumerateFriendNames
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       vFriendName                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UNowGFXHudScene::enumerateFriendNames ( TArray< struct FString >* vFriendName )
{
	static UFunction* pFnenumerateFriendNames = NULL;

	if ( ! pFnenumerateFriendNames )
		pFnenumerateFriendNames = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.enumerateFriendNames" );

	UNowGFXHudScene_execenumerateFriendNames_Parms enumerateFriendNames_Parms;

	pFnenumerateFriendNames->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnenumerateFriendNames, &enumerateFriendNames_Parms, NULL );

	pFnenumerateFriendNames->FunctionFlags |= 0x400;

	if ( vFriendName )
		memcpy ( vFriendName, &enumerateFriendNames_Parms.vFriendName, 0xC );
};

// Function NowGame.NowGFXHudScene.RefuseFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RefuseFriendNative ( struct FString FriendName )
{
	static UFunction* pFnRefuseFriendNative = NULL;

	if ( ! pFnRefuseFriendNative )
		pFnRefuseFriendNative = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RefuseFriendNative" );

	UNowGFXHudScene_execRefuseFriendNative_Parms RefuseFriendNative_Parms;
	memcpy ( &RefuseFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnRefuseFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRefuseFriendNative, &RefuseFriendNative_Parms, NULL );

	pFnRefuseFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AcceptFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AcceptFriendNative ( struct FString FriendName )
{
	static UFunction* pFnAcceptFriendNative = NULL;

	if ( ! pFnAcceptFriendNative )
		pFnAcceptFriendNative = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AcceptFriendNative" );

	UNowGFXHudScene_execAcceptFriendNative_Parms AcceptFriendNative_Parms;
	memcpy ( &AcceptFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnAcceptFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAcceptFriendNative, &AcceptFriendNative_Parms, NULL );

	pFnAcceptFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.RequestFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RequestFriendNative ( struct FString FriendName )
{
	static UFunction* pFnRequestFriendNative = NULL;

	if ( ! pFnRequestFriendNative )
		pFnRequestFriendNative = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RequestFriendNative" );

	UNowGFXHudScene_execRequestFriendNative_Parms RequestFriendNative_Parms;
	memcpy ( &RequestFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnRequestFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestFriendNative, &RequestFriendNative_Parms, NULL );

	pFnRequestFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.RemoveFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveFriendNative ( struct FString FriendName )
{
	static UFunction* pFnRemoveFriendNative = NULL;

	if ( ! pFnRemoveFriendNative )
		pFnRemoveFriendNative = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RemoveFriendNative" );

	UNowGFXHudScene_execRemoveFriendNative_Parms RemoveFriendNative_Parms;
	memcpy ( &RemoveFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnRemoveFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFriendNative, &RemoveFriendNative_Parms, NULL );

	pFnRemoveFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddFriendNative ( struct FString FriendName )
{
	static UFunction* pFnAddFriendNative = NULL;

	if ( ! pFnAddFriendNative )
		pFnAddFriendNative = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddFriendNative" );

	UNowGFXHudScene_execAddFriendNative_Parms AddFriendNative_Parms;
	memcpy ( &AddFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnAddFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFriendNative, &AddFriendNative_Parms, NULL );

	pFnAddFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.removePet
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removePet ( struct FString petGUID )
{
	static UFunction* pFnremovePet = NULL;

	if ( ! pFnremovePet )
		pFnremovePet = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removePet" );

	UNowGFXHudScene_execremovePet_Parms removePet_Parms;
	memcpy ( &removePet_Parms.petGUID, &petGUID, 0xC );

	this->ProcessEvent ( pFnremovePet, &removePet_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeAllPets
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::removeAllPets ( )
{
	static UFunction* pFnremoveAllPets = NULL;

	if ( ! pFnremoveAllPets )
		pFnremoveAllPets = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeAllPets" );

	UNowGFXHudScene_execremoveAllPets_Parms removeAllPets_Parms;

	this->ProcessEvent ( pFnremoveAllPets, &removeAllPets_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showPetInformation
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showPetInformation ( struct FString petGUID )
{
	static UFunction* pFnshowPetInformation = NULL;

	if ( ! pFnshowPetInformation )
		pFnshowPetInformation = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showPetInformation" );

	UNowGFXHudScene_execshowPetInformation_Parms showPetInformation_Parms;
	memcpy ( &showPetInformation_Parms.petGUID, &petGUID, 0xC );

	this->ProcessEvent ( pFnshowPetInformation, &showPetInformation_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPetAttack
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            ATTACK                         ( CPF_Parm )
// unsigned long                  bEnabled                       ( CPF_Parm )

void UNowGFXHudScene::setPetAttack ( struct FString petGUID, struct FString Label, int ATTACK, unsigned long bEnabled )
{
	static UFunction* pFnsetPetAttack = NULL;

	if ( ! pFnsetPetAttack )
		pFnsetPetAttack = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setPetAttack" );

	UNowGFXHudScene_execsetPetAttack_Parms setPetAttack_Parms;
	memcpy ( &setPetAttack_Parms.petGUID, &petGUID, 0xC );
	memcpy ( &setPetAttack_Parms.Label, &Label, 0xC );
	setPetAttack_Parms.ATTACK = ATTACK;
	setPetAttack_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnsetPetAttack, &setPetAttack_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPetAttribute
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            lockState                      ( CPF_Parm )

void UNowGFXHudScene::setPetAttribute ( struct FString petGUID, struct FString Label, struct FString Value, int lockState )
{
	static UFunction* pFnsetPetAttribute = NULL;

	if ( ! pFnsetPetAttribute )
		pFnsetPetAttribute = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setPetAttribute" );

	UNowGFXHudScene_execsetPetAttribute_Parms setPetAttribute_Parms;
	memcpy ( &setPetAttribute_Parms.petGUID, &petGUID, 0xC );
	memcpy ( &setPetAttribute_Parms.Label, &Label, 0xC );
	memcpy ( &setPetAttribute_Parms.Value, &Value, 0xC );
	setPetAttribute_Parms.lockState = lockState;

	this->ProcessEvent ( pFnsetPetAttribute, &setPetAttribute_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPetStat
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Value                          ( CPF_Parm )

void UNowGFXHudScene::setPetStat ( struct FString petGUID, struct FString Label, int Value )
{
	static UFunction* pFnsetPetStat = NULL;

	if ( ! pFnsetPetStat )
		pFnsetPetStat = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setPetStat" );

	UNowGFXHudScene_execsetPetStat_Parms setPetStat_Parms;
	memcpy ( &setPetStat_Parms.petGUID, &petGUID, 0xC );
	memcpy ( &setPetStat_Parms.Label, &Label, 0xC );
	setPetStat_Parms.Value = Value;

	this->ProcessEvent ( pFnsetPetStat, &setPetStat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addPet
// [0x00020002] 
// Parameters infos:
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 skillName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addPet ( struct FString petGUID, struct FString DisplayName, struct FString skillName )
{
	static UFunction* pFnaddPet = NULL;

	if ( ! pFnaddPet )
		pFnaddPet = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addPet" );

	UNowGFXHudScene_execaddPet_Parms addPet_Parms;
	memcpy ( &addPet_Parms.petGUID, &petGUID, 0xC );
	memcpy ( &addPet_Parms.DisplayName, &DisplayName, 0xC );
	memcpy ( &addPet_Parms.skillName, &skillName, 0xC );

	this->ProcessEvent ( pFnaddPet, &addPet_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FeedPet
// [0x00020002] 
// Parameters infos:
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::FeedPet ( struct FString sPetGuid, struct FString sItemGuid )
{
	static UFunction* pFnFeedPet = NULL;

	if ( ! pFnFeedPet )
		pFnFeedPet = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FeedPet" );

	UNowGFXHudScene_execFeedPet_Parms FeedPet_Parms;
	memcpy ( &FeedPet_Parms.sPetGuid, &sPetGuid, 0xC );
	memcpy ( &FeedPet_Parms.sItemGuid, &sItemGuid, 0xC );

	this->ProcessEvent ( pFnFeedPet, &FeedPet_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetPetLockState
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iLockState                     ( CPF_Parm )

void UNowGFXHudScene::SetPetLockState ( struct FString sGuid, struct FString sLabel, int iLockState )
{
	static UFunction* pFnSetPetLockState = NULL;

	if ( ! pFnSetPetLockState )
		pFnSetPetLockState = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetPetLockState" );

	UNowGFXHudScene_execSetPetLockState_Parms SetPetLockState_Parms;
	memcpy ( &SetPetLockState_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &SetPetLockState_Parms.sLabel, &sLabel, 0xC );
	SetPetLockState_Parms.iLockState = iLockState;

	this->ProcessEvent ( pFnSetPetLockState, &SetPetLockState_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddPetInfo
// [0x00020002] 
// Parameters infos:
// int                            iPetIndex                      ( CPF_Parm )

void UNowGFXHudScene::AddPetInfo ( int iPetIndex )
{
	static UFunction* pFnAddPetInfo = NULL;

	if ( ! pFnAddPetInfo )
		pFnAddPetInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddPetInfo" );

	UNowGFXHudScene_execAddPetInfo_Parms AddPetInfo_Parms;
	AddPetInfo_Parms.iPetIndex = iPetIndex;

	this->ProcessEvent ( pFnAddPetInfo, &AddPetInfo_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearPets
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearPets ( )
{
	static UFunction* pFnclearPets = NULL;

	if ( ! pFnclearPets )
		pFnclearPets = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearPets" );

	UNowGFXHudScene_execclearPets_Parms clearPets_Parms;

	this->ProcessEvent ( pFnclearPets, &clearPets_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updatePetInfo
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::updatePetInfo ( )
{
	static UFunction* pFnupdatePetInfo = NULL;

	if ( ! pFnupdatePetInfo )
		pFnupdatePetInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updatePetInfo" );

	UNowGFXHudScene_execupdatePetInfo_Parms updatePetInfo_Parms;

	this->ProcessEvent ( pFnupdatePetInfo, &updatePetInfo_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkTransferReceipts
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TalkTransferReceipts ( )
{
	static UFunction* pFnTalkTransferReceipts = NULL;

	if ( ! pFnTalkTransferReceipts )
		pFnTalkTransferReceipts = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TalkTransferReceipts" );

	UNowGFXHudScene_execTalkTransferReceipts_Parms TalkTransferReceipts_Parms;

	this->ProcessEvent ( pFnTalkTransferReceipts, &TalkTransferReceipts_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkUnReceipt
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkUnReceipt ( int iIndex )
{
	static UFunction* pFnTalkUnReceipt = NULL;

	if ( ! pFnTalkUnReceipt )
		pFnTalkUnReceipt = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TalkUnReceipt" );

	UNowGFXHudScene_execTalkUnReceipt_Parms TalkUnReceipt_Parms;
	TalkUnReceipt_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkUnReceipt, &TalkUnReceipt_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkReceipt
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkReceipt ( int iIndex )
{
	static UFunction* pFnTalkReceipt = NULL;

	if ( ! pFnTalkReceipt )
		pFnTalkReceipt = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TalkReceipt" );

	UNowGFXHudScene_execTalkReceipt_Parms TalkReceipt_Parms;
	TalkReceipt_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkReceipt, &TalkReceipt_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkUnstable
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkUnstable ( int iIndex )
{
	static UFunction* pFnTalkUnstable = NULL;

	if ( ! pFnTalkUnstable )
		pFnTalkUnstable = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TalkUnstable" );

	UNowGFXHudScene_execTalkUnstable_Parms TalkUnstable_Parms;
	TalkUnstable_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkUnstable, &TalkUnstable_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TalkStable
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkStable ( int iIndex )
{
	static UFunction* pFnTalkStable = NULL;

	if ( ! pFnTalkStable )
		pFnTalkStable = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TalkStable" );

	UNowGFXHudScene_execTalkStable_Parms TalkStable_Parms;
	TalkStable_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkStable, &TalkStable_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TransferReceipts
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::TransferReceipts ( )
{
	static UFunction* pFnTransferReceipts = NULL;

	if ( ! pFnTransferReceipts )
		pFnTransferReceipts = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TransferReceipts" );

	UNowGFXHudScene_execTransferReceipts_Parms TransferReceipts_Parms;

	pFnTransferReceipts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTransferReceipts, &TransferReceipts_Parms, NULL );

	pFnTransferReceipts->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetPetReceipts
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetPetReceipts ( )
{
	static UFunction* pFnGetPetReceipts = NULL;

	if ( ! pFnGetPetReceipts )
		pFnGetPetReceipts = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetPetReceipts" );

	UNowGFXHudScene_execGetPetReceipts_Parms GetPetReceipts_Parms;

	pFnGetPetReceipts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetReceipts, &GetPetReceipts_Parms, NULL );

	pFnGetPetReceipts->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetStabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetStabled ( )
{
	static UFunction* pFnGetStabled = NULL;

	if ( ! pFnGetStabled )
		pFnGetStabled = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetStabled" );

	UNowGFXHudScene_execGetStabled_Parms GetStabled_Parms;

	pFnGetStabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStabled, &GetStabled_Parms, NULL );

	pFnGetStabled->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.UnReceipt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::UnReceipt ( int iIndex )
{
	static UFunction* pFnUnReceipt = NULL;

	if ( ! pFnUnReceipt )
		pFnUnReceipt = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UnReceipt" );

	UNowGFXHudScene_execUnReceipt_Parms UnReceipt_Parms;
	UnReceipt_Parms.iIndex = iIndex;

	pFnUnReceipt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnReceipt, &UnReceipt_Parms, NULL );

	pFnUnReceipt->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.Receipt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::Receipt ( int iIndex )
{
	static UFunction* pFnReceipt = NULL;

	if ( ! pFnReceipt )
		pFnReceipt = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.Receipt" );

	UNowGFXHudScene_execReceipt_Parms Receipt_Parms;
	Receipt_Parms.iIndex = iIndex;

	pFnReceipt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReceipt, &Receipt_Parms, NULL );

	pFnReceipt->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.UnStable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::UnStable ( int iIndex )
{
	static UFunction* pFnUnStable = NULL;

	if ( ! pFnUnStable )
		pFnUnStable = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UnStable" );

	UNowGFXHudScene_execUnStable_Parms UnStable_Parms;
	UnStable_Parms.iIndex = iIndex;

	pFnUnStable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnStable, &UnStable_Parms, NULL );

	pFnUnStable->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.Stable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarAi*       pPet                           ( CPF_Parm )

void UNowGFXHudScene::Stable ( class ANowAtlasAvatarAi* pPet )
{
	static UFunction* pFnStable = NULL;

	if ( ! pFnStable )
		pFnStable = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.Stable" );

	UNowGFXHudScene_execStable_Parms Stable_Parms;
	Stable_Parms.pPet = pPet;

	pFnStable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStable, &Stable_Parms, NULL );

	pFnStable->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddTutorialPickables
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::AddTutorialPickables ( )
{
	static UFunction* pFnAddTutorialPickables = NULL;

	if ( ! pFnAddTutorialPickables )
		pFnAddTutorialPickables = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddTutorialPickables" );

	UNowGFXHudScene_execAddTutorialPickables_Parms AddTutorialPickables_Parms;

	this->ProcessEvent ( pFnAddTutorialPickables, &AddTutorialPickables_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeNpc
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventcloseNpc ( )
{
	static UFunction* pFncloseNpc = NULL;

	if ( ! pFncloseNpc )
		pFncloseNpc = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeNpc" );

	UNowGFXHudScene_eventcloseNpc_Parms closeNpc_Parms;

	this->ProcessEvent ( pFncloseNpc, &closeNpc_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearNpc
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearNpc ( )
{
	static UFunction* pFnclearNpc = NULL;

	if ( ! pFnclearNpc )
		pFnclearNpc = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearNpc" );

	UNowGFXHudScene_execclearNpc_Parms clearNpc_Parms;

	this->ProcessEvent ( pFnclearNpc, &clearNpc_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTalkerResponse
// [0x00020002] 
// Parameters infos:
// int                            ChatID                         ( CPF_Parm )
// int                            TargetID                       ( CPF_Parm )
// struct FString                 uscript                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addTalkerResponse ( int ChatID, int TargetID, struct FString uscript, struct FString msg )
{
	static UFunction* pFnaddTalkerResponse = NULL;

	if ( ! pFnaddTalkerResponse )
		pFnaddTalkerResponse = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addTalkerResponse" );

	UNowGFXHudScene_execaddTalkerResponse_Parms addTalkerResponse_Parms;
	addTalkerResponse_Parms.ChatID = ChatID;
	addTalkerResponse_Parms.TargetID = TargetID;
	memcpy ( &addTalkerResponse_Parms.uscript, &uscript, 0xC );
	memcpy ( &addTalkerResponse_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnaddTalkerResponse, &addTalkerResponse_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTalkerChat
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addTalkerChat ( int Id, struct FString msg )
{
	static UFunction* pFnaddTalkerChat = NULL;

	if ( ! pFnaddTalkerChat )
		pFnaddTalkerChat = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addTalkerChat" );

	UNowGFXHudScene_execaddTalkerChat_Parms addTalkerChat_Parms;
	addTalkerChat_Parms.Id = Id;
	memcpy ( &addTalkerChat_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnaddTalkerChat, &addTalkerChat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showNpc
// [0x00020002] 
// Parameters infos:
// struct FString                 npcName                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 npcExit                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 npcBack                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showNpc ( struct FString npcName, struct FString npcExit, struct FString npcBack )
{
	static UFunction* pFnshowNpc = NULL;

	if ( ! pFnshowNpc )
		pFnshowNpc = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showNpc" );

	UNowGFXHudScene_execshowNpc_Parms showNpc_Parms;
	memcpy ( &showNpc_Parms.npcName, &npcName, 0xC );
	memcpy ( &showNpc_Parms.npcExit, &npcExit, 0xC );
	memcpy ( &showNpc_Parms.npcBack, &npcBack, 0xC );

	this->ProcessEvent ( pFnshowNpc, &showNpc_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.StartTalker
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::StartTalker ( )
{
	static UFunction* pFnStartTalker = NULL;

	if ( ! pFnStartTalker )
		pFnStartTalker = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.StartTalker" );

	UNowGFXHudScene_execStartTalker_Parms StartTalker_Parms;

	this->ProcessEvent ( pFnStartTalker, &StartTalker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.LoadNpcInfo
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::LoadNpcInfo ( )
{
	static UFunction* pFnLoadNpcInfo = NULL;

	if ( ! pFnLoadNpcInfo )
		pFnLoadNpcInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.LoadNpcInfo" );

	UNowGFXHudScene_execLoadNpcInfo_Parms LoadNpcInfo_Parms;

	this->ProcessEvent ( pFnLoadNpcInfo, &LoadNpcInfo_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.LoadUiInfoTalker
// [0x00024002] 
// Parameters infos:
// class UUIInfoTalker*           pInfo                          ( CPF_Parm )
// class ANowAtlasAvatar*         pMyTalker                      ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::LoadUiInfoTalker ( class UUIInfoTalker* pInfo, class ANowAtlasAvatar* pMyTalker )
{
	static UFunction* pFnLoadUiInfoTalker = NULL;

	if ( ! pFnLoadUiInfoTalker )
		pFnLoadUiInfoTalker = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.LoadUiInfoTalker" );

	UNowGFXHudScene_execLoadUiInfoTalker_Parms LoadUiInfoTalker_Parms;
	LoadUiInfoTalker_Parms.pInfo = pInfo;
	LoadUiInfoTalker_Parms.pMyTalker = pMyTalker;

	this->ProcessEvent ( pFnLoadUiInfoTalker, &LoadUiInfoTalker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GiveSkill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            I                              ( CPF_Parm )

void UNowGFXHudScene::GiveSkill ( int I )
{
	static UFunction* pFnGiveSkill = NULL;

	if ( ! pFnGiveSkill )
		pFnGiveSkill = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GiveSkill" );

	UNowGFXHudScene_execGiveSkill_Parms GiveSkill_Parms;
	GiveSkill_Parms.I = I;

	pFnGiveSkill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveSkill, &GiveSkill_Parms, NULL );

	pFnGiveSkill->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.toggleCommandMenu
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXHudScene::toggleCommandMenu ( unsigned long bVisible )
{
	static UFunction* pFntoggleCommandMenu = NULL;

	if ( ! pFntoggleCommandMenu )
		pFntoggleCommandMenu = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleCommandMenu" );

	UNowGFXHudScene_exectoggleCommandMenu_Parms toggleCommandMenu_Parms;
	toggleCommandMenu_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFntoggleCommandMenu, &toggleCommandMenu_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearCommandOptions
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearCommandOptions ( )
{
	static UFunction* pFnclearCommandOptions = NULL;

	if ( ! pFnclearCommandOptions )
		pFnclearCommandOptions = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearCommandOptions" );

	UNowGFXHudScene_execclearCommandOptions_Parms clearCommandOptions_Parms;

	this->ProcessEvent ( pFnclearCommandOptions, &clearCommandOptions_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addCommandOption
// [0x00020002] 
// Parameters infos:
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addCommandOption ( struct FString sString )
{
	static UFunction* pFnaddCommandOption = NULL;

	if ( ! pFnaddCommandOption )
		pFnaddCommandOption = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addCommandOption" );

	UNowGFXHudScene_execaddCommandOption_Parms addCommandOption_Parms;
	memcpy ( &addCommandOption_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnaddCommandOption, &addCommandOption_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCommandTitle
// [0x00020002] 
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setCommandTitle ( struct FString sTitle )
{
	static UFunction* pFnsetCommandTitle = NULL;

	if ( ! pFnsetCommandTitle )
		pFnsetCommandTitle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setCommandTitle" );

	UNowGFXHudScene_execsetCommandTitle_Parms setCommandTitle_Parms;
	memcpy ( &setCommandTitle_Parms.sTitle, &sTitle, 0xC );

	this->ProcessEvent ( pFnsetCommandTitle, &setCommandTitle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetOption
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::SetOption ( int iIndex )
{
	static UFunction* pFnSetOption = NULL;

	if ( ! pFnSetOption )
		pFnSetOption = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetOption" );

	UNowGFXHudScene_execSetOption_Parms SetOption_Parms;
	SetOption_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnSetOption, &SetOption_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendCommand
// [0x00020002] 
// Parameters infos:
// int                            FinalCommand                   ( CPF_Parm )

void UNowGFXHudScene::SendCommand ( int FinalCommand )
{
	static UFunction* pFnSendCommand = NULL;

	if ( ! pFnSendCommand )
		pFnSendCommand = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendCommand" );

	UNowGFXHudScene_execSendCommand_Parms SendCommand_Parms;
	SendCommand_Parms.FinalCommand = FinalCommand;

	this->ProcessEvent ( pFnSendCommand, &SendCommand_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RedrawMenuOptions
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::RedrawMenuOptions ( )
{
	static UFunction* pFnRedrawMenuOptions = NULL;

	if ( ! pFnRedrawMenuOptions )
		pFnRedrawMenuOptions = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RedrawMenuOptions" );

	UNowGFXHudScene_execRedrawMenuOptions_Parms RedrawMenuOptions_Parms;

	this->ProcessEvent ( pFnRedrawMenuOptions, &RedrawMenuOptions_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.NumberPressed
// [0x00020002] 
// Parameters infos:
// int                            iNr                            ( CPF_Parm )

void UNowGFXHudScene::NumberPressed ( int iNr )
{
	static UFunction* pFnNumberPressed = NULL;

	if ( ! pFnNumberPressed )
		pFnNumberPressed = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.NumberPressed" );

	UNowGFXHudScene_execNumberPressed_Parms NumberPressed_Parms;
	NumberPressed_Parms.iNr = iNr;

	this->ProcessEvent ( pFnNumberPressed, &NumberPressed_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ShowCommandMenu
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ShowCommandMenu ( )
{
	static UFunction* pFnShowCommandMenu = NULL;

	if ( ! pFnShowCommandMenu )
		pFnShowCommandMenu = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ShowCommandMenu" );

	UNowGFXHudScene_execShowCommandMenu_Parms ShowCommandMenu_Parms;

	this->ProcessEvent ( pFnShowCommandMenu, &ShowCommandMenu_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setConfigVariable
// [0x00020002] 
// Parameters infos:
// struct FString                 sVariable                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setConfigVariable ( struct FString sVariable, struct FString sValue )
{
	static UFunction* pFnsetConfigVariable = NULL;

	if ( ! pFnsetConfigVariable )
		pFnsetConfigVariable = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setConfigVariable" );

	UNowGFXHudScene_execsetConfigVariable_Parms setConfigVariable_Parms;
	memcpy ( &setConfigVariable_Parms.sVariable, &sVariable, 0xC );
	memcpy ( &setConfigVariable_Parms.sValue, &sValue, 0xC );

	this->ProcessEvent ( pFnsetConfigVariable, &setConfigVariable_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setConfigVariableLite
// [0x00020002] 
// Parameters infos:
// struct FString                 sVariable                      ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bValue                         ( CPF_Parm )

void UNowGFXHudScene::setConfigVariableLite ( struct FString sVariable, unsigned long bValue )
{
	static UFunction* pFnsetConfigVariableLite = NULL;

	if ( ! pFnsetConfigVariableLite )
		pFnsetConfigVariableLite = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setConfigVariableLite" );

	UNowGFXHudScene_execsetConfigVariableLite_Parms setConfigVariableLite_Parms;
	memcpy ( &setConfigVariableLite_Parms.sVariable, &sVariable, 0xC );
	setConfigVariableLite_Parms.bValue = bValue;

	this->ProcessEvent ( pFnsetConfigVariableLite, &setConfigVariableLite_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setBinding
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bCtrl                          ( CPF_Parm )
// unsigned long                  bAlt                           ( CPF_Parm )
// unsigned long                  bShift                         ( CPF_Parm )

void UNowGFXHudScene::setBinding ( struct FString Id, struct FString Category, struct FString Label, struct FString Key, unsigned long bCtrl, unsigned long bAlt, unsigned long bShift )
{
	static UFunction* pFnsetBinding = NULL;

	if ( ! pFnsetBinding )
		pFnsetBinding = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setBinding" );

	UNowGFXHudScene_execsetBinding_Parms setBinding_Parms;
	memcpy ( &setBinding_Parms.Id, &Id, 0xC );
	memcpy ( &setBinding_Parms.Category, &Category, 0xC );
	memcpy ( &setBinding_Parms.Label, &Label, 0xC );
	memcpy ( &setBinding_Parms.Key, &Key, 0xC );
	setBinding_Parms.bCtrl = bCtrl;
	setBinding_Parms.bAlt = bAlt;
	setBinding_Parms.bShift = bShift;

	this->ProcessEvent ( pFnsetBinding, &setBinding_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showOptions
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showOptions ( )
{
	static UFunction* pFnshowOptions = NULL;

	if ( ! pFnshowOptions )
		pFnshowOptions = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showOptions" );

	UNowGFXHudScene_execshowOptions_Parms showOptions_Parms;

	this->ProcessEvent ( pFnshowOptions, &showOptions_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ApplyKeyBinding
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Key                            ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bCtrl                          ( CPF_Parm )
// unsigned long                  bAlt                           ( CPF_Parm )
// unsigned long                  bShift                         ( CPF_Parm )

void UNowGFXHudScene::ApplyKeyBinding ( struct FString Id, struct FString Key, unsigned long bCtrl, unsigned long bAlt, unsigned long bShift )
{
	static UFunction* pFnApplyKeyBinding = NULL;

	if ( ! pFnApplyKeyBinding )
		pFnApplyKeyBinding = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ApplyKeyBinding" );

	UNowGFXHudScene_execApplyKeyBinding_Parms ApplyKeyBinding_Parms;
	memcpy ( &ApplyKeyBinding_Parms.Id, &Id, 0xC );
	memcpy ( &ApplyKeyBinding_Parms.Key, &Key, 0xC );
	ApplyKeyBinding_Parms.bCtrl = bCtrl;
	ApplyKeyBinding_Parms.bAlt = bAlt;
	ApplyKeyBinding_Parms.bShift = bShift;

	this->ProcessEvent ( pFnApplyKeyBinding, &ApplyKeyBinding_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetConfigVariableFloat
// [0x00020002] 
// Parameters infos:
// struct FString                 sVariable                      ( CPF_Parm | CPF_NeedCtorLink )
// float                          fValue                         ( CPF_Parm )

void UNowGFXHudScene::SetConfigVariableFloat ( struct FString sVariable, float fValue )
{
	static UFunction* pFnSetConfigVariableFloat = NULL;

	if ( ! pFnSetConfigVariableFloat )
		pFnSetConfigVariableFloat = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetConfigVariableFloat" );

	UNowGFXHudScene_execSetConfigVariableFloat_Parms SetConfigVariableFloat_Parms;
	memcpy ( &SetConfigVariableFloat_Parms.sVariable, &sVariable, 0xC );
	SetConfigVariableFloat_Parms.fValue = fValue;

	this->ProcessEvent ( pFnSetConfigVariableFloat, &SetConfigVariableFloat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetConfigVariableBool
// [0x00020002] 
// Parameters infos:
// struct FString                 sVariable                      ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bValue                         ( CPF_Parm )

void UNowGFXHudScene::SetConfigVariableBool ( struct FString sVariable, unsigned long bValue )
{
	static UFunction* pFnSetConfigVariableBool = NULL;

	if ( ! pFnSetConfigVariableBool )
		pFnSetConfigVariableBool = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetConfigVariableBool" );

	UNowGFXHudScene_execSetConfigVariableBool_Parms SetConfigVariableBool_Parms;
	memcpy ( &SetConfigVariableBool_Parms.sVariable, &sVariable, 0xC );
	SetConfigVariableBool_Parms.bValue = bValue;

	this->ProcessEvent ( pFnSetConfigVariableBool, &SetConfigVariableBool_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitOptions
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitOptions ( )
{
	static UFunction* pFnInitOptions = NULL;

	if ( ! pFnInitOptions )
		pFnInitOptions = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitOptions" );

	UNowGFXHudScene_execInitOptions_Parms InitOptions_Parms;

	this->ProcessEvent ( pFnInitOptions, &InitOptions_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearBookList
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearBookList ( )
{
	static UFunction* pFnclearBookList = NULL;

	if ( ! pFnclearBookList )
		pFnclearBookList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearBookList" );

	UNowGFXHudScene_execclearBookList_Parms clearBookList_Parms;

	this->ProcessEvent ( pFnclearBookList, &clearBookList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPlayerCurrency
// [0x00020002] 
// Parameters infos:
// int                            coins                          ( CPF_Parm )

void UNowGFXHudScene::setPlayerCurrency ( int coins )
{
	static UFunction* pFnsetPlayerCurrency = NULL;

	if ( ! pFnsetPlayerCurrency )
		pFnsetPlayerCurrency = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setPlayerCurrency" );

	UNowGFXHudScene_execsetPlayerCurrency_Parms setPlayerCurrency_Parms;
	setPlayerCurrency_Parms.coins = coins;

	this->ProcessEvent ( pFnsetPlayerCurrency, &setPlayerCurrency_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.refreshBookList
// [0x00020002] 
// Parameters infos:
// unsigned long                  bFiltered                      ( CPF_Parm )

void UNowGFXHudScene::refreshBookList ( unsigned long bFiltered )
{
	static UFunction* pFnrefreshBookList = NULL;

	if ( ! pFnrefreshBookList )
		pFnrefreshBookList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.refreshBookList" );

	UNowGFXHudScene_execrefreshBookList_Parms refreshBookList_Parms;
	refreshBookList_Parms.bFiltered = bFiltered;

	this->ProcessEvent ( pFnrefreshBookList, &refreshBookList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addBook
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Author                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Skill                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            MinSkill                       ( CPF_Parm )
// int                            MaxSkill                       ( CPF_Parm )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            Cost                           ( CPF_Parm )
// int                            readable                       ( CPF_Parm )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addBook ( int Id, struct FString Title, struct FString Author, struct FString Skill, int MinSkill, int MaxSkill, struct FString Category, int Cost, int readable, struct FString Description )
{
	static UFunction* pFnaddBook = NULL;

	if ( ! pFnaddBook )
		pFnaddBook = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addBook" );

	UNowGFXHudScene_execaddBook_Parms addBook_Parms;
	addBook_Parms.Id = Id;
	memcpy ( &addBook_Parms.Title, &Title, 0xC );
	memcpy ( &addBook_Parms.Author, &Author, 0xC );
	memcpy ( &addBook_Parms.Skill, &Skill, 0xC );
	addBook_Parms.MinSkill = MinSkill;
	addBook_Parms.MaxSkill = MaxSkill;
	memcpy ( &addBook_Parms.Category, &Category, 0xC );
	addBook_Parms.Cost = Cost;
	addBook_Parms.readable = readable;
	memcpy ( &addBook_Parms.Description, &Description, 0xC );

	this->ProcessEvent ( pFnaddBook, &addBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleLibrary
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXHudScene::toggleLibrary ( unsigned long bVisible )
{
	static UFunction* pFntoggleLibrary = NULL;

	if ( ! pFntoggleLibrary )
		pFntoggleLibrary = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleLibrary" );

	UNowGFXHudScene_exectoggleLibrary_Parms toggleLibrary_Parms;
	toggleLibrary_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFntoggleLibrary, &toggleLibrary_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BuySkillBook
// [0x00020002] 
// Parameters infos:
// int                            BookIndex                      ( CPF_Parm )

void UNowGFXHudScene::BuySkillBook ( int BookIndex )
{
	static UFunction* pFnBuySkillBook = NULL;

	if ( ! pFnBuySkillBook )
		pFnBuySkillBook = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.BuySkillBook" );

	UNowGFXHudScene_execBuySkillBook_Parms BuySkillBook_Parms;
	BuySkillBook_Parms.BookIndex = BookIndex;

	this->ProcessEvent ( pFnBuySkillBook, &BuySkillBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddBooksToFlash
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventAddBooksToFlash ( )
{
	static UFunction* pFnAddBooksToFlash = NULL;

	if ( ! pFnAddBooksToFlash )
		pFnAddBooksToFlash = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddBooksToFlash" );

	UNowGFXHudScene_eventAddBooksToFlash_Parms AddBooksToFlash_Parms;

	this->ProcessEvent ( pFnAddBooksToFlash, &AddBooksToFlash_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddBookToArray
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 inContentName                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 inDisplayName                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 inAuthor                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 inSkillName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            inMinSkill                     ( CPF_Parm )
// int                            inMaxSkill                     ( CPF_Parm )
// struct FString                 inBookGroup                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            inBookCost                     ( CPF_Parm )
// int                            inBookStatus                   ( CPF_Parm )
// struct FString                 inBookDesc                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddBookToArray ( struct FString inContentName, struct FString inDisplayName, struct FString inAuthor, struct FString inSkillName, int inMinSkill, int inMaxSkill, struct FString inBookGroup, int inBookCost, int inBookStatus, struct FString inBookDesc )
{
	static UFunction* pFnAddBookToArray = NULL;

	if ( ! pFnAddBookToArray )
		pFnAddBookToArray = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddBookToArray" );

	UNowGFXHudScene_eventAddBookToArray_Parms AddBookToArray_Parms;
	memcpy ( &AddBookToArray_Parms.inContentName, &inContentName, 0xC );
	memcpy ( &AddBookToArray_Parms.inDisplayName, &inDisplayName, 0xC );
	memcpy ( &AddBookToArray_Parms.inAuthor, &inAuthor, 0xC );
	memcpy ( &AddBookToArray_Parms.inSkillName, &inSkillName, 0xC );
	AddBookToArray_Parms.inMinSkill = inMinSkill;
	AddBookToArray_Parms.inMaxSkill = inMaxSkill;
	memcpy ( &AddBookToArray_Parms.inBookGroup, &inBookGroup, 0xC );
	AddBookToArray_Parms.inBookCost = inBookCost;
	AddBookToArray_Parms.inBookStatus = inBookStatus;
	memcpy ( &AddBookToArray_Parms.inBookDesc, &inBookDesc, 0xC );

	this->ProcessEvent ( pFnAddBookToArray, &AddBookToArray_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitLibrary
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitLibrary ( )
{
	static UFunction* pFnInitLibrary = NULL;

	if ( ! pFnInitLibrary )
		pFnInitLibrary = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitLibrary" );

	UNowGFXHudScene_execInitLibrary_Parms InitLibrary_Parms;

	this->ProcessEvent ( pFnInitLibrary, &InitLibrary_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetBooks
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetBooks ( )
{
	static UFunction* pFnGetBooks = NULL;

	if ( ! pFnGetBooks )
		pFnGetBooks = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetBooks" );

	UNowGFXHudScene_execGetBooks_Parms GetBooks_Parms;

	pFnGetBooks->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBooks, &GetBooks_Parms, NULL );

	pFnGetBooks->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.getGuildMembers
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       vMembers                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< int >                  vMemberRanks                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UNowGFXHudScene::getGuildMembers ( TArray< struct FString >* vMembers, TArray< int >* vMemberRanks )
{
	static UFunction* pFngetGuildMembers = NULL;

	if ( ! pFngetGuildMembers )
		pFngetGuildMembers = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.getGuildMembers" );

	UNowGFXHudScene_execgetGuildMembers_Parms getGuildMembers_Parms;

	pFngetGuildMembers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetGuildMembers, &getGuildMembers_Parms, NULL );

	pFngetGuildMembers->FunctionFlags |= 0x400;

	if ( vMembers )
		memcpy ( vMembers, &getGuildMembers_Parms.vMembers, 0xC );

	if ( vMemberRanks )
		memcpy ( vMemberRanks, &getGuildMembers_Parms.vMemberRanks, 0xC );
};

// Function NowGame.NowGFXHudScene.toggleHelp
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::toggleHelp ( )
{
	static UFunction* pFntoggleHelp = NULL;

	if ( ! pFntoggleHelp )
		pFntoggleHelp = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleHelp" );

	UNowGFXHudScene_exectoggleHelp_Parms toggleHelp_Parms;

	this->ProcessEvent ( pFntoggleHelp, &toggleHelp_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.tcpRequestHelp
// [0x00020002] 
// Parameters infos:
// struct FString                 sJsonObject                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::tcpRequestHelp ( struct FString sJsonObject )
{
	static UFunction* pFntcpRequestHelp = NULL;

	if ( ! pFntcpRequestHelp )
		pFntcpRequestHelp = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.tcpRequestHelp" );

	UNowGFXHudScene_exectcpRequestHelp_Parms tcpRequestHelp_Parms;
	memcpy ( &tcpRequestHelp_Parms.sJsonObject, &sJsonObject, 0xC );

	this->ProcessEvent ( pFntcpRequestHelp, &tcpRequestHelp_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddMurderer
// [0x00020002] 
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddMurderer ( struct FString PlayerName )
{
	static UFunction* pFnAddMurderer = NULL;

	if ( ! pFnAddMurderer )
		pFnAddMurderer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddMurderer" );

	UNowGFXHudScene_execAddMurderer_Parms AddMurderer_Parms;
	memcpy ( &AddMurderer_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnAddMurderer, &AddMurderer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearMurderers
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventclearMurderers ( )
{
	static UFunction* pFnclearMurderers = NULL;

	if ( ! pFnclearMurderers )
		pFnclearMurderers = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearMurderers" );

	UNowGFXHudScene_eventclearMurderers_Parms clearMurderers_Parms;

	this->ProcessEvent ( pFnclearMurderers, &clearMurderers_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showReportMurder
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showReportMurder ( )
{
	static UFunction* pFnshowReportMurder = NULL;

	if ( ! pFnshowReportMurder )
		pFnshowReportMurder = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showReportMurder" );

	UNowGFXHudScene_execshowReportMurder_Parms showReportMurder_Parms;

	this->ProcessEvent ( pFnshowReportMurder, &showReportMurder_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitReportMurder
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitReportMurder ( )
{
	static UFunction* pFnInitReportMurder = NULL;

	if ( ! pFnInitReportMurder )
		pFnInitReportMurder = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitReportMurder" );

	UNowGFXHudScene_eventInitReportMurder_Parms InitReportMurder_Parms;

	this->ProcessEvent ( pFnInitReportMurder, &InitReportMurder_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ClosedMurder
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventClosedMurder ( )
{
	static UFunction* pFnClosedMurder = NULL;

	if ( ! pFnClosedMurder )
		pFnClosedMurder = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ClosedMurder" );

	UNowGFXHudScene_eventClosedMurder_Parms ClosedMurder_Parms;

	this->ProcessEvent ( pFnClosedMurder, &ClosedMurder_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReportMurderer
// [0x00820002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ReportMurderer ( struct FString sName )
{
	static UFunction* pFnReportMurderer = NULL;

	if ( ! pFnReportMurderer )
		pFnReportMurderer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ReportMurderer" );

	UNowGFXHudScene_execReportMurderer_Parms ReportMurderer_Parms;
	memcpy ( &ReportMurderer_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnReportMurderer, &ReportMurderer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendMurdererToFlash
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::eventSendMurdererToFlash ( struct FString sName, int iIndex )
{
	static UFunction* pFnSendMurdererToFlash = NULL;

	if ( ! pFnSendMurdererToFlash )
		pFnSendMurdererToFlash = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendMurdererToFlash" );

	UNowGFXHudScene_eventSendMurdererToFlash_Parms SendMurdererToFlash_Parms;
	memcpy ( &SendMurdererToFlash_Parms.sName, &sName, 0xC );
	SendMurdererToFlash_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnSendMurdererToFlash, &SendMurdererToFlash_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendMurdersToServer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendMurdersToServer ( )
{
	static UFunction* pFnSendMurdersToServer = NULL;

	if ( ! pFnSendMurdersToServer )
		pFnSendMurdersToServer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendMurdersToServer" );

	UNowGFXHudScene_execSendMurdersToServer_Parms SendMurdersToServer_Parms;

	pFnSendMurdersToServer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendMurdersToServer, &SendMurdersToServer_Parms, NULL );

	pFnSendMurdersToServer->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearTasks
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearTasks ( )
{
	static UFunction* pFnclearTasks = NULL;

	if ( ! pFnclearTasks )
		pFnclearTasks = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearTasks" );

	UNowGFXHudScene_execclearTasks_Parms clearTasks_Parms;

	this->ProcessEvent ( pFnclearTasks, &clearTasks_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showTasks
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showTasks ( )
{
	static UFunction* pFnshowTasks = NULL;

	if ( ! pFnshowTasks )
		pFnshowTasks = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showTasks" );

	UNowGFXHudScene_execshowTasks_Parms showTasks_Parms;

	this->ProcessEvent ( pFnshowTasks, &showTasks_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeItemOption
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ItemId                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventremoveItemOption ( struct FString ItemId )
{
	static UFunction* pFnremoveItemOption = NULL;

	if ( ! pFnremoveItemOption )
		pFnremoveItemOption = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeItemOption" );

	UNowGFXHudScene_eventremoveItemOption_Parms removeItemOption_Parms;
	memcpy ( &removeItemOption_Parms.ItemId, &ItemId, 0xC );

	this->ProcessEvent ( pFnremoveItemOption, &removeItemOption_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.refreshTaskList
// [0x00020002] 
// Parameters infos:
// unsigned long                  bRefresh                       ( CPF_Parm )

void UNowGFXHudScene::refreshTaskList ( unsigned long bRefresh )
{
	static UFunction* pFnrefreshTaskList = NULL;

	if ( ! pFnrefreshTaskList )
		pFnrefreshTaskList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.refreshTaskList" );

	UNowGFXHudScene_execrefreshTaskList_Parms refreshTaskList_Parms;
	refreshTaskList_Parms.bRefresh = bRefresh;

	this->ProcessEvent ( pFnrefreshTaskList, &refreshTaskList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeTask
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )

void UNowGFXHudScene::removeTask ( int Id )
{
	static UFunction* pFnremoveTask = NULL;

	if ( ! pFnremoveTask )
		pFnremoveTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeTask" );

	UNowGFXHudScene_execremoveTask_Parms removeTask_Parms;
	removeTask_Parms.Id = Id;

	this->ProcessEvent ( pFnremoveTask, &removeTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTask
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 Item                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Recipient                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            reward                         ( CPF_Parm )
// int                            deposit                        ( CPF_Parm )

void UNowGFXHudScene::eventaddTask ( int Id, struct FString Item, int Quantity, struct FString Category, struct FString Recipient, struct FString Destination, int reward, int deposit )
{
	static UFunction* pFnaddTask = NULL;

	if ( ! pFnaddTask )
		pFnaddTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addTask" );

	UNowGFXHudScene_eventaddTask_Parms addTask_Parms;
	addTask_Parms.Id = Id;
	memcpy ( &addTask_Parms.Item, &Item, 0xC );
	addTask_Parms.Quantity = Quantity;
	memcpy ( &addTask_Parms.Category, &Category, 0xC );
	memcpy ( &addTask_Parms.Recipient, &Recipient, 0xC );
	memcpy ( &addTask_Parms.Destination, &Destination, 0xC );
	addTask_Parms.reward = reward;
	addTask_Parms.deposit = deposit;

	this->ProcessEvent ( pFnaddTask, &addTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addDestination
// [0x00020002] 
// Parameters infos:
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addDestination ( struct FString Destination )
{
	static UFunction* pFnaddDestination = NULL;

	if ( ! pFnaddDestination )
		pFnaddDestination = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addDestination" );

	UNowGFXHudScene_execaddDestination_Parms addDestination_Parms;
	memcpy ( &addDestination_Parms.Destination, &Destination, 0xC );

	this->ProcessEvent ( pFnaddDestination, &addDestination_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CreateTask
// [0x00020002] 
// Parameters infos:
// struct FString                 ItemId                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            listingDays                    ( CPF_Parm )
// int                            coinReward                     ( CPF_Parm )
// int                            coinExpense                    ( CPF_Parm )
// int                            coinDeposit                    ( CPF_Parm )

void UNowGFXHudScene::CreateTask ( struct FString ItemId, struct FString Category, struct FString Destination, int listingDays, int coinReward, int coinExpense, int coinDeposit )
{
	static UFunction* pFnCreateTask = NULL;

	if ( ! pFnCreateTask )
		pFnCreateTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CreateTask" );

	UNowGFXHudScene_execCreateTask_Parms CreateTask_Parms;
	memcpy ( &CreateTask_Parms.ItemId, &ItemId, 0xC );
	memcpy ( &CreateTask_Parms.Category, &Category, 0xC );
	memcpy ( &CreateTask_Parms.Destination, &Destination, 0xC );
	CreateTask_Parms.listingDays = listingDays;
	CreateTask_Parms.coinReward = coinReward;
	CreateTask_Parms.coinExpense = coinExpense;
	CreateTask_Parms.coinDeposit = coinDeposit;

	this->ProcessEvent ( pFnCreateTask, &CreateTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setDestionations
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::setDestionations ( )
{
	static UFunction* pFnsetDestionations = NULL;

	if ( ! pFnsetDestionations )
		pFnsetDestionations = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setDestionations" );

	UNowGFXHudScene_execsetDestionations_Parms setDestionations_Parms;

	this->ProcessEvent ( pFnsetDestionations, &setDestionations_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setTradeItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::setTradeItems ( )
{
	static UFunction* pFnsetTradeItems = NULL;

	if ( ! pFnsetTradeItems )
		pFnsetTradeItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setTradeItems" );

	UNowGFXHudScene_execsetTradeItems_Parms setTradeItems_Parms;

	this->ProcessEvent ( pFnsetTradeItems, &setTradeItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getLocation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

struct FString UNowGFXHudScene::eventgetLocation ( int Index )
{
	static UFunction* pFngetLocation = NULL;

	if ( ! pFngetLocation )
		pFngetLocation = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.getLocation" );

	UNowGFXHudScene_eventgetLocation_Parms getLocation_Parms;
	getLocation_Parms.Index = Index;

	this->ProcessEvent ( pFngetLocation, &getLocation_Parms, NULL );

	return getLocation_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.setLocations
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::setLocations ( )
{
	static UFunction* pFnsetLocations = NULL;

	if ( ! pFnsetLocations )
		pFnsetLocations = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setLocations" );

	UNowGFXHudScene_execsetLocations_Parms setLocations_Parms;

	this->ProcessEvent ( pFnsetLocations, &setLocations_Parms, NULL );
};

// Function NowGame.NowGFXHudScene._removeTask
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 _guid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::event_removeTask ( struct FString _guid )
{
	static UFunction* pFn_removeTask = NULL;

	if ( ! pFn_removeTask )
		pFn_removeTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene._removeTask" );

	UNowGFXHudScene_event_removeTask_Parms _removeTask_Parms;
	memcpy ( &_removeTask_Parms._guid, &_guid, 0xC );

	this->ProcessEvent ( pFn_removeTask, &_removeTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTaskIdentifer
// [0x00C20802] ( FUNC_Event )
// Parameters infos:
// struct FString                 _guid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm | CPF_OutParm )

void UNowGFXHudScene::eventaddTaskIdentifer ( struct FString _guid, int* Index )
{
	static UFunction* pFnaddTaskIdentifer = NULL;

	if ( ! pFnaddTaskIdentifer )
		pFnaddTaskIdentifer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addTaskIdentifer" );

	UNowGFXHudScene_eventaddTaskIdentifer_Parms addTaskIdentifer_Parms;
	memcpy ( &addTaskIdentifer_Parms._guid, &_guid, 0xC );

	this->ProcessEvent ( pFnaddTaskIdentifer, &addTaskIdentifer_Parms, NULL );

	if ( Index )
		*Index = addTaskIdentifer_Parms.Index;
};

// Function NowGame.NowGFXHudScene.AcceptTask
// [0x00020002] 
// Parameters infos:
// int                            TaskId                         ( CPF_Parm )

void UNowGFXHudScene::AcceptTask ( int TaskId )
{
	static UFunction* pFnAcceptTask = NULL;

	if ( ! pFnAcceptTask )
		pFnAcceptTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AcceptTask" );

	UNowGFXHudScene_execAcceptTask_Parms AcceptTask_Parms;
	AcceptTask_Parms.TaskId = TaskId;

	this->ProcessEvent ( pFnAcceptTask, &AcceptTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getTaskGuidFromIndex
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

struct FString UNowGFXHudScene::eventgetTaskGuidFromIndex ( int Index )
{
	static UFunction* pFngetTaskGuidFromIndex = NULL;

	if ( ! pFngetTaskGuidFromIndex )
		pFngetTaskGuidFromIndex = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.getTaskGuidFromIndex" );

	UNowGFXHudScene_eventgetTaskGuidFromIndex_Parms getTaskGuidFromIndex_Parms;
	getTaskGuidFromIndex_Parms.Index = Index;

	this->ProcessEvent ( pFngetTaskGuidFromIndex, &getTaskGuidFromIndex_Parms, NULL );

	return getTaskGuidFromIndex_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.getTaskIndexFromGuid
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 _guid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventgetTaskIndexFromGuid ( struct FString _guid )
{
	static UFunction* pFngetTaskIndexFromGuid = NULL;

	if ( ! pFngetTaskIndexFromGuid )
		pFngetTaskIndexFromGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.getTaskIndexFromGuid" );

	UNowGFXHudScene_eventgetTaskIndexFromGuid_Parms getTaskIndexFromGuid_Parms;
	memcpy ( &getTaskIndexFromGuid_Parms._guid, &_guid, 0xC );

	this->ProcessEvent ( pFngetTaskIndexFromGuid, &getTaskIndexFromGuid_Parms, NULL );

	return getTaskIndexFromGuid_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitTasks
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitTasks ( )
{
	static UFunction* pFnInitTasks = NULL;

	if ( ! pFnInitTasks )
		pFnInitTasks = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitTasks" );

	UNowGFXHudScene_execInitTasks_Parms InitTasks_Parms;

	this->ProcessEvent ( pFnInitTasks, &InitTasks_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.isItemTradeType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::isItemTradeType ( struct FString ItemGuid )
{
	static UFunction* pFnisItemTradeType = NULL;

	if ( ! pFnisItemTradeType )
		pFnisItemTradeType = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.isItemTradeType" );

	UNowGFXHudScene_execisItemTradeType_Parms isItemTradeType_Parms;
	memcpy ( &isItemTradeType_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnisItemTradeType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisItemTradeType, &isItemTradeType_Parms, NULL );

	pFnisItemTradeType->FunctionFlags |= 0x400;

	return isItemTradeType_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.getTradeItems
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FItemOption >   vItems                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UNowGFXHudScene::getTradeItems ( TArray< struct FItemOption >* vItems )
{
	static UFunction* pFngetTradeItems = NULL;

	if ( ! pFngetTradeItems )
		pFngetTradeItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.getTradeItems" );

	UNowGFXHudScene_execgetTradeItems_Parms getTradeItems_Parms;

	pFngetTradeItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetTradeItems, &getTradeItems_Parms, NULL );

	pFngetTradeItems->FunctionFlags |= 0x400;

	if ( vItems )
		memcpy ( vItems, &getTradeItems_Parms.vItems, 0xC );
};

// Function NowGame.NowGFXHudScene.nativeDeliverTasks
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::nativeDeliverTasks ( )
{
	static UFunction* pFnnativeDeliverTasks = NULL;

	if ( ! pFnnativeDeliverTasks )
		pFnnativeDeliverTasks = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.nativeDeliverTasks" );

	UNowGFXHudScene_execnativeDeliverTasks_Parms nativeDeliverTasks_Parms;

	pFnnativeDeliverTasks->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnnativeDeliverTasks, &nativeDeliverTasks_Parms, NULL );

	pFnnativeDeliverTasks->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.nativeRequestTasks
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::nativeRequestTasks ( )
{
	static UFunction* pFnnativeRequestTasks = NULL;

	if ( ! pFnnativeRequestTasks )
		pFnnativeRequestTasks = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.nativeRequestTasks" );

	UNowGFXHudScene_execnativeRequestTasks_Parms nativeRequestTasks_Parms;

	pFnnativeRequestTasks->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnnativeRequestTasks, &nativeRequestTasks_Parms, NULL );

	pFnnativeRequestTasks->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.nativeClaimTask
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            _taskIndex                     ( CPF_Parm )

void UNowGFXHudScene::nativeClaimTask ( int _taskIndex )
{
	static UFunction* pFnnativeClaimTask = NULL;

	if ( ! pFnnativeClaimTask )
		pFnnativeClaimTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.nativeClaimTask" );

	UNowGFXHudScene_execnativeClaimTask_Parms nativeClaimTask_Parms;
	nativeClaimTask_Parms._taskIndex = _taskIndex;

	pFnnativeClaimTask->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnnativeClaimTask, &nativeClaimTask_Parms, NULL );

	pFnnativeClaimTask->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.nativeAddTask
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemId                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Recipient                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            listingDays                    ( CPF_Parm )
// int                            coinReward                     ( CPF_Parm )
// int                            coinExpense                    ( CPF_Parm )
// int                            coinDeposit                    ( CPF_Parm )

void UNowGFXHudScene::nativeAddTask ( struct FString ItemId, struct FString Category, struct FString Destination, struct FString Recipient, int listingDays, int coinReward, int coinExpense, int coinDeposit )
{
	static UFunction* pFnnativeAddTask = NULL;

	if ( ! pFnnativeAddTask )
		pFnnativeAddTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.nativeAddTask" );

	UNowGFXHudScene_execnativeAddTask_Parms nativeAddTask_Parms;
	memcpy ( &nativeAddTask_Parms.ItemId, &ItemId, 0xC );
	memcpy ( &nativeAddTask_Parms.Category, &Category, 0xC );
	memcpy ( &nativeAddTask_Parms.Destination, &Destination, 0xC );
	memcpy ( &nativeAddTask_Parms.Recipient, &Recipient, 0xC );
	nativeAddTask_Parms.listingDays = listingDays;
	nativeAddTask_Parms.coinReward = coinReward;
	nativeAddTask_Parms.coinExpense = coinExpense;
	nativeAddTask_Parms.coinDeposit = coinDeposit;

	pFnnativeAddTask->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnnativeAddTask, &nativeAddTask_Parms, NULL );

	pFnnativeAddTask->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.addTitle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddTitle ( int iID, struct FString sTitle )
{
	static UFunction* pFnaddTitle = NULL;

	if ( ! pFnaddTitle )
		pFnaddTitle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addTitle" );

	UNowGFXHudScene_eventaddTitle_Parms addTitle_Parms;
	addTitle_Parms.iID = iID;
	memcpy ( &addTitle_Parms.sTitle, &sTitle, 0xC );

	this->ProcessEvent ( pFnaddTitle, &addTitle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetTitle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventSetTitle ( struct FString sTitle )
{
	static UFunction* pFnSetTitle = NULL;

	if ( ! pFnSetTitle )
		pFnSetTitle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetTitle" );

	UNowGFXHudScene_eventSetTitle_Parms SetTitle_Parms;
	memcpy ( &SetTitle_Parms.sTitle, &sTitle, 0xC );

	this->ProcessEvent ( pFnSetTitle, &SetTitle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearTitles
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventclearTitles ( )
{
	static UFunction* pFnclearTitles = NULL;

	if ( ! pFnclearTitles )
		pFnclearTitles = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearTitles" );

	UNowGFXHudScene_eventclearTitles_Parms clearTitles_Parms;

	this->ProcessEvent ( pFnclearTitles, &clearTitles_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setEquipped
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sSlotName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventsetEquipped ( struct FString sSlotName, struct FString sData )
{
	static UFunction* pFnsetEquipped = NULL;

	if ( ! pFnsetEquipped )
		pFnsetEquipped = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setEquipped" );

	UNowGFXHudScene_eventsetEquipped_Parms setEquipped_Parms;
	memcpy ( &setEquipped_Parms.sSlotName, &sSlotName, 0xC );
	memcpy ( &setEquipped_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnsetEquipped, &setEquipped_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showPaperdoll
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXHudScene::showPaperdoll ( unsigned long bVisible )
{
	static UFunction* pFnshowPaperdoll = NULL;

	if ( ! pFnshowPaperdoll )
		pFnshowPaperdoll = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showPaperdoll" );

	UNowGFXHudScene_execshowPaperdoll_Parms showPaperdoll_Parms;
	showPaperdoll_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnshowPaperdoll, &showPaperdoll_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPaperdollStat
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            lockState                      ( CPF_Parm )
// struct FString                 ToolTip                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setPaperdollStat ( struct FString Id, struct FString Category, struct FString Label, struct FString Value, int lockState, struct FString ToolTip )
{
	static UFunction* pFnsetPaperdollStat = NULL;

	if ( ! pFnsetPaperdollStat )
		pFnsetPaperdollStat = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setPaperdollStat" );

	UNowGFXHudScene_execsetPaperdollStat_Parms setPaperdollStat_Parms;
	memcpy ( &setPaperdollStat_Parms.Id, &Id, 0xC );
	memcpy ( &setPaperdollStat_Parms.Category, &Category, 0xC );
	memcpy ( &setPaperdollStat_Parms.Label, &Label, 0xC );
	memcpy ( &setPaperdollStat_Parms.Value, &Value, 0xC );
	setPaperdollStat_Parms.lockState = lockState;
	memcpy ( &setPaperdollStat_Parms.ToolTip, &ToolTip, 0xC );

	this->ProcessEvent ( pFnsetPaperdollStat, &setPaperdollStat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RequestdSuicide
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::RequestdSuicide ( )
{
	static UFunction* pFnRequestdSuicide = NULL;

	if ( ! pFnRequestdSuicide )
		pFnRequestdSuicide = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RequestdSuicide" );

	UNowGFXHudScene_execRequestdSuicide_Parms RequestdSuicide_Parms;

	this->ProcessEvent ( pFnRequestdSuicide, &RequestdSuicide_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetAttributeState
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SetAttributeState ( struct FString Id )
{
	static UFunction* pFnSetAttributeState = NULL;

	if ( ! pFnSetAttributeState )
		pFnSetAttributeState = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetAttributeState" );

	UNowGFXHudScene_execSetAttributeState_Parms SetAttributeState_Parms;
	memcpy ( &SetAttributeState_Parms.Id, &Id, 0xC );

	this->ProcessEvent ( pFnSetAttributeState, &SetAttributeState_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PaperdollRender
// [0x00020002] 
// Parameters infos:
// unsigned long                  bRender                        ( CPF_Parm )

void UNowGFXHudScene::PaperdollRender ( unsigned long bRender )
{
	static UFunction* pFnPaperdollRender = NULL;

	if ( ! pFnPaperdollRender )
		pFnPaperdollRender = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PaperdollRender" );

	UNowGFXHudScene_execPaperdollRender_Parms PaperdollRender_Parms;
	PaperdollRender_Parms.bRender = bRender;

	this->ProcessEvent ( pFnPaperdollRender, &PaperdollRender_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TogglePaperdoll
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TogglePaperdoll ( )
{
	static UFunction* pFnTogglePaperdoll = NULL;

	if ( ! pFnTogglePaperdoll )
		pFnTogglePaperdoll = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TogglePaperdoll" );

	UNowGFXHudScene_execTogglePaperdoll_Parms TogglePaperdoll_Parms;

	this->ProcessEvent ( pFnTogglePaperdoll, &TogglePaperdoll_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdatePaperDollMesh
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bPending                       ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::eventUpdatePaperDollMesh ( unsigned long bPending )
{
	static UFunction* pFnUpdatePaperDollMesh = NULL;

	if ( ! pFnUpdatePaperDollMesh )
		pFnUpdatePaperDollMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdatePaperDollMesh" );

	UNowGFXHudScene_eventUpdatePaperDollMesh_Parms UpdatePaperDollMesh_Parms;
	UpdatePaperDollMesh_Parms.bPending = bPending;

	this->ProcessEvent ( pFnUpdatePaperDollMesh, &UpdatePaperDollMesh_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PaperdollZoom
// [0x00020002] 
// Parameters infos:
// unsigned long                  bZoom                          ( CPF_Parm )

void UNowGFXHudScene::PaperdollZoom ( unsigned long bZoom )
{
	static UFunction* pFnPaperdollZoom = NULL;

	if ( ! pFnPaperdollZoom )
		pFnPaperdollZoom = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PaperdollZoom" );

	UNowGFXHudScene_execPaperdollZoom_Parms PaperdollZoom_Parms;
	PaperdollZoom_Parms.bZoom = bZoom;

	this->ProcessEvent ( pFnPaperdollZoom, &PaperdollZoom_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PaperdollPan
// [0x00020002] 
// Parameters infos:
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )

void UNowGFXHudScene::PaperdollPan ( int X, int Y )
{
	static UFunction* pFnPaperdollPan = NULL;

	if ( ! pFnPaperdollPan )
		pFnPaperdollPan = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PaperdollPan" );

	UNowGFXHudScene_execPaperdollPan_Parms PaperdollPan_Parms;
	PaperdollPan_Parms.X = X;
	PaperdollPan_Parms.Y = Y;

	this->ProcessEvent ( pFnPaperdollPan, &PaperdollPan_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RotatePaperdoll
// [0x00020002] 
// Parameters infos:
// unsigned long                  bLeft                          ( CPF_Parm )

void UNowGFXHudScene::RotatePaperdoll ( unsigned long bLeft )
{
	static UFunction* pFnRotatePaperdoll = NULL;

	if ( ! pFnRotatePaperdoll )
		pFnRotatePaperdoll = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RotatePaperdoll" );

	UNowGFXHudScene_execRotatePaperdoll_Parms RotatePaperdoll_Parms;
	RotatePaperdoll_Parms.bLeft = bLeft;

	this->ProcessEvent ( pFnRotatePaperdoll, &RotatePaperdoll_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateStatus
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNrCur                         ( CPF_Parm )
// int                            iNrMax                         ( CPF_Parm )

void UNowGFXHudScene::eventUpdateStatus ( struct FString sName, int iNrCur, int iNrMax )
{
	static UFunction* pFnUpdateStatus = NULL;

	if ( ! pFnUpdateStatus )
		pFnUpdateStatus = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateStatus" );

	UNowGFXHudScene_eventUpdateStatus_Parms UpdateStatus_Parms;
	memcpy ( &UpdateStatus_Parms.sName, &sName, 0xC );
	UpdateStatus_Parms.iNrCur = iNrCur;
	UpdateStatus_Parms.iNrMax = iNrMax;

	this->ProcessEvent ( pFnUpdateStatus, &UpdateStatus_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateEquipment
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNrCur                         ( CPF_Parm )
// int                            iNrFree                        ( CPF_Parm )
// int                            iNrMax                         ( CPF_Parm )

void UNowGFXHudScene::eventUpdateEquipment ( struct FString sName, int iNrCur, int iNrFree, int iNrMax )
{
	static UFunction* pFnUpdateEquipment = NULL;

	if ( ! pFnUpdateEquipment )
		pFnUpdateEquipment = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateEquipment" );

	UNowGFXHudScene_eventUpdateEquipment_Parms UpdateEquipment_Parms;
	memcpy ( &UpdateEquipment_Parms.sName, &sName, 0xC );
	UpdateEquipment_Parms.iNrCur = iNrCur;
	UpdateEquipment_Parms.iNrFree = iNrFree;
	UpdateEquipment_Parms.iNrMax = iNrMax;

	this->ProcessEvent ( pFnUpdateEquipment, &UpdateEquipment_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateReserve
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNr                            ( CPF_Parm )
// int                            iNrMax                         ( CPF_Parm )
// int                            iNrThr                         ( CPF_Parm )

void UNowGFXHudScene::eventUpdateReserve ( struct FString sName, int iNr, int iNrMax, int iNrThr )
{
	static UFunction* pFnUpdateReserve = NULL;

	if ( ! pFnUpdateReserve )
		pFnUpdateReserve = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateReserve" );

	UNowGFXHudScene_eventUpdateReserve_Parms UpdateReserve_Parms;
	memcpy ( &UpdateReserve_Parms.sName, &sName, 0xC );
	UpdateReserve_Parms.iNr = iNr;
	UpdateReserve_Parms.iNrMax = iNrMax;
	UpdateReserve_Parms.iNrThr = iNrThr;

	this->ProcessEvent ( pFnUpdateReserve, &UpdateReserve_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateMisc
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGroup                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventUpdateMisc ( struct FString sName, struct FString sGroup, struct FString sValue )
{
	static UFunction* pFnUpdateMisc = NULL;

	if ( ! pFnUpdateMisc )
		pFnUpdateMisc = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateMisc" );

	UNowGFXHudScene_eventUpdateMisc_Parms UpdateMisc_Parms;
	memcpy ( &UpdateMisc_Parms.sName, &sName, 0xC );
	memcpy ( &UpdateMisc_Parms.sGroup, &sGroup, 0xC );
	memcpy ( &UpdateMisc_Parms.sValue, &sValue, 0xC );

	this->ProcessEvent ( pFnUpdateMisc, &UpdateMisc_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateAttribute
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNr                            ( CPF_Parm )
// int                            iNrMod                         ( CPF_Parm )
// int                            iNrMax                         ( CPF_Parm )

void UNowGFXHudScene::eventUpdateAttribute ( struct FString sName, int iNr, int iNrMod, int iNrMax )
{
	static UFunction* pFnUpdateAttribute = NULL;

	if ( ! pFnUpdateAttribute )
		pFnUpdateAttribute = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateAttribute" );

	UNowGFXHudScene_eventUpdateAttribute_Parms UpdateAttribute_Parms;
	memcpy ( &UpdateAttribute_Parms.sName, &sName, 0xC );
	UpdateAttribute_Parms.iNr = iNr;
	UpdateAttribute_Parms.iNrMod = iNrMod;
	UpdateAttribute_Parms.iNrMax = iNrMax;

	this->ProcessEvent ( pFnUpdateAttribute, &UpdateAttribute_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateBody
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sText                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventUpdateBody ( struct FString sName, struct FString sText )
{
	static UFunction* pFnUpdateBody = NULL;

	if ( ! pFnUpdateBody )
		pFnUpdateBody = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateBody" );

	UNowGFXHudScene_eventUpdateBody_Parms UpdateBody_Parms;
	memcpy ( &UpdateBody_Parms.sName, &sName, 0xC );
	memcpy ( &UpdateBody_Parms.sText, &sText, 0xC );

	this->ProcessEvent ( pFnUpdateBody, &UpdateBody_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPaperdoll
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPaperdoll ( )
{
	static UFunction* pFnInitPaperdoll = NULL;

	if ( ! pFnInitPaperdoll )
		pFnInitPaperdoll = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPaperdoll" );

	UNowGFXHudScene_execInitPaperdoll_Parms InitPaperdoll_Parms;

	this->ProcessEvent ( pFnInitPaperdoll, &InitPaperdoll_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateDollTitles
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateDollTitles ( )
{
	static UFunction* pFnUpdateDollTitles = NULL;

	if ( ! pFnUpdateDollTitles )
		pFnUpdateDollTitles = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateDollTitles" );

	UNowGFXHudScene_execUpdateDollTitles_Parms UpdateDollTitles_Parms;

	pFnUpdateDollTitles->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateDollTitles, &UpdateDollTitles_Parms, NULL );

	pFnUpdateDollTitles->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.UpdateEquipped
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateEquipped ( )
{
	static UFunction* pFnUpdateEquipped = NULL;

	if ( ! pFnUpdateEquipped )
		pFnUpdateEquipped = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateEquipped" );

	UNowGFXHudScene_execUpdateEquipped_Parms UpdateEquipped_Parms;

	pFnUpdateEquipped->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateEquipped, &UpdateEquipped_Parms, NULL );

	pFnUpdateEquipped->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearCurrentTasks
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventclearCurrentTasks ( )
{
	static UFunction* pFnclearCurrentTasks = NULL;

	if ( ! pFnclearCurrentTasks )
		pFnclearCurrentTasks = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearCurrentTasks" );

	UNowGFXHudScene_eventclearCurrentTasks_Parms clearCurrentTasks_Parms;

	this->ProcessEvent ( pFnclearCurrentTasks, &clearCurrentTasks_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.abandonTask
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            TaskId                         ( CPF_Parm )

void UNowGFXHudScene::eventabandonTask ( int TaskId )
{
	static UFunction* pFnabandonTask = NULL;

	if ( ! pFnabandonTask )
		pFnabandonTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.abandonTask" );

	UNowGFXHudScene_eventabandonTask_Parms abandonTask_Parms;
	abandonTask_Parms.TaskId = TaskId;

	this->ProcessEvent ( pFnabandonTask, &abandonTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showCurrentTasks
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showCurrentTasks ( )
{
	static UFunction* pFnshowCurrentTasks = NULL;

	if ( ! pFnshowCurrentTasks )
		pFnshowCurrentTasks = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showCurrentTasks" );

	UNowGFXHudScene_execshowCurrentTasks_Parms showCurrentTasks_Parms;

	this->ProcessEvent ( pFnshowCurrentTasks, &showCurrentTasks_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addCurrentTask
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 Item                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Recipient                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            reward                         ( CPF_Parm )
// int                            deposit                        ( CPF_Parm )
// int                            expires                        ( CPF_Parm )

void UNowGFXHudScene::eventaddCurrentTask ( int Id, struct FString Item, int Quantity, struct FString Category, struct FString Recipient, struct FString Destination, int reward, int deposit, int expires )
{
	static UFunction* pFnaddCurrentTask = NULL;

	if ( ! pFnaddCurrentTask )
		pFnaddCurrentTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addCurrentTask" );

	UNowGFXHudScene_eventaddCurrentTask_Parms addCurrentTask_Parms;
	addCurrentTask_Parms.Id = Id;
	memcpy ( &addCurrentTask_Parms.Item, &Item, 0xC );
	addCurrentTask_Parms.Quantity = Quantity;
	memcpy ( &addCurrentTask_Parms.Category, &Category, 0xC );
	memcpy ( &addCurrentTask_Parms.Recipient, &Recipient, 0xC );
	memcpy ( &addCurrentTask_Parms.Destination, &Destination, 0xC );
	addCurrentTask_Parms.reward = reward;
	addCurrentTask_Parms.deposit = deposit;
	addCurrentTask_Parms.expires = expires;

	this->ProcessEvent ( pFnaddCurrentTask, &addCurrentTask_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitCurrentTasks
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitCurrentTasks ( )
{
	static UFunction* pFnInitCurrentTasks = NULL;

	if ( ! pFnInitCurrentTasks )
		pFnInitCurrentTasks = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitCurrentTasks" );

	UNowGFXHudScene_execInitCurrentTasks_Parms InitCurrentTasks_Parms;

	this->ProcessEvent ( pFnInitCurrentTasks, &InitCurrentTasks_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.nativePopulateTasks
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::nativePopulateTasks ( )
{
	static UFunction* pFnnativePopulateTasks = NULL;

	if ( ! pFnnativePopulateTasks )
		pFnnativePopulateTasks = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.nativePopulateTasks" );

	UNowGFXHudScene_execnativePopulateTasks_Parms nativePopulateTasks_Parms;

	pFnnativePopulateTasks->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnnativePopulateTasks, &nativePopulateTasks_Parms, NULL );

	pFnnativePopulateTasks->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.nativeAbondonTask
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            TaskId                         ( CPF_Parm )

void UNowGFXHudScene::nativeAbondonTask ( int TaskId )
{
	static UFunction* pFnnativeAbondonTask = NULL;

	if ( ! pFnnativeAbondonTask )
		pFnnativeAbondonTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.nativeAbondonTask" );

	UNowGFXHudScene_execnativeAbondonTask_Parms nativeAbondonTask_Parms;
	nativeAbondonTask_Parms.TaskId = TaskId;

	pFnnativeAbondonTask->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnnativeAbondonTask, &nativeAbondonTask_Parms, NULL );

	pFnnativeAbondonTask->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearEngineer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearEngineer ( )
{
	static UFunction* pFnclearEngineer = NULL;

	if ( ! pFnclearEngineer )
		pFnclearEngineer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearEngineer" );

	UNowGFXHudScene_execclearEngineer_Parms clearEngineer_Parms;

	this->ProcessEvent ( pFnclearEngineer, &clearEngineer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleEngineer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::toggleEngineer ( )
{
	static UFunction* pFntoggleEngineer = NULL;

	if ( ! pFntoggleEngineer )
		pFntoggleEngineer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleEngineer" );

	UNowGFXHudScene_exectoggleEngineer_Parms toggleEngineer_Parms;

	this->ProcessEvent ( pFntoggleEngineer, &toggleEngineer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addEngineerItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Requirements                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )
// int                            costSilver                     ( CPF_Parm )
// int                            CostPP                         ( CPF_Parm )

void UNowGFXHudScene::addEngineerItem ( struct FString sGuid, struct FString Title, struct FString Description, struct FString Requirements, int Quantity, int costSilver, int CostPP )
{
	static UFunction* pFnaddEngineerItem = NULL;

	if ( ! pFnaddEngineerItem )
		pFnaddEngineerItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addEngineerItem" );

	UNowGFXHudScene_execaddEngineerItem_Parms addEngineerItem_Parms;
	memcpy ( &addEngineerItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &addEngineerItem_Parms.Title, &Title, 0xC );
	memcpy ( &addEngineerItem_Parms.Description, &Description, 0xC );
	memcpy ( &addEngineerItem_Parms.Requirements, &Requirements, 0xC );
	addEngineerItem_Parms.Quantity = Quantity;
	addEngineerItem_Parms.costSilver = costSilver;
	addEngineerItem_Parms.CostPP = CostPP;

	this->ProcessEvent ( pFnaddEngineerItem, &addEngineerItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setBalances
// [0x00020002] 
// Parameters infos:
// int                            fundsCoin                      ( CPF_Parm )
// int                            fundsPP                        ( CPF_Parm )

void UNowGFXHudScene::setBalances ( int fundsCoin, int fundsPP )
{
	static UFunction* pFnsetBalances = NULL;

	if ( ! pFnsetBalances )
		pFnsetBalances = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setBalances" );

	UNowGFXHudScene_execsetBalances_Parms setBalances_Parms;
	setBalances_Parms.fundsCoin = fundsCoin;
	setBalances_Parms.fundsPP = fundsPP;

	this->ProcessEvent ( pFnsetBalances, &setBalances_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SortByBladeSkill
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftWeaponBlade      A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftWeaponBlade      B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByBladeSkill ( struct FsCraftWeaponBlade A, struct FsCraftWeaponBlade B )
{
	static UFunction* pFnSortByBladeSkill = NULL;

	if ( ! pFnSortByBladeSkill )
		pFnSortByBladeSkill = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SortByBladeSkill" );

	UNowGFXHudScene_execSortByBladeSkill_Parms SortByBladeSkill_Parms;
	memcpy ( &SortByBladeSkill_Parms.A, &A, 0x28 );
	memcpy ( &SortByBladeSkill_Parms.B, &B, 0x28 );

	this->ProcessEvent ( pFnSortByBladeSkill, &SortByBladeSkill_Parms, NULL );

	return SortByBladeSkill_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SortByHandleSkill
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftWeaponHandle     A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftWeaponHandle     B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByHandleSkill ( struct FsCraftWeaponHandle A, struct FsCraftWeaponHandle B )
{
	static UFunction* pFnSortByHandleSkill = NULL;

	if ( ! pFnSortByHandleSkill )
		pFnSortByHandleSkill = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SortByHandleSkill" );

	UNowGFXHudScene_execSortByHandleSkill_Parms SortByHandleSkill_Parms;
	memcpy ( &SortByHandleSkill_Parms.A, &A, 0x28 );
	memcpy ( &SortByHandleSkill_Parms.B, &B, 0x28 );

	this->ProcessEvent ( pFnSortByHandleSkill, &SortByHandleSkill_Parms, NULL );

	return SortByHandleSkill_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SortBuyItemByName
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FBuyItems               A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FBuyItems               B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortBuyItemByName ( struct FBuyItems A, struct FBuyItems B )
{
	static UFunction* pFnSortBuyItemByName = NULL;

	if ( ! pFnSortBuyItemByName )
		pFnSortBuyItemByName = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SortBuyItemByName" );

	UNowGFXHudScene_execSortBuyItemByName_Parms SortBuyItemByName_Parms;
	memcpy ( &SortBuyItemByName_Parms.A, &A, 0x20 );
	memcpy ( &SortBuyItemByName_Parms.B, &B, 0x20 );

	this->ProcessEvent ( pFnSortBuyItemByName, &SortBuyItemByName_Parms, NULL );

	return SortBuyItemByName_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.BuyItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BuyItem ( struct FString sGuid )
{
	static UFunction* pFnBuyItem = NULL;

	if ( ! pFnBuyItem )
		pFnBuyItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.BuyItem" );

	UNowGFXHudScene_execBuyItem_Parms BuyItem_Parms;
	memcpy ( &BuyItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnBuyItem, &BuyItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddItemToUI
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            costSilver                     ( CPF_Parm )
// int                            CostPP                         ( CPF_Parm )

void UNowGFXHudScene::eventAddItemToUI ( struct FString sGuid, struct FString DisplayName, int costSilver, int CostPP )
{
	static UFunction* pFnAddItemToUI = NULL;

	if ( ! pFnAddItemToUI )
		pFnAddItemToUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddItemToUI" );

	UNowGFXHudScene_eventAddItemToUI_Parms AddItemToUI_Parms;
	memcpy ( &AddItemToUI_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &AddItemToUI_Parms.DisplayName, &DisplayName, 0xC );
	AddItemToUI_Parms.costSilver = costSilver;
	AddItemToUI_Parms.CostPP = CostPP;

	this->ProcessEvent ( pFnAddItemToUI, &AddItemToUI_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetAKeep
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarPlayerKeep* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerKeep* UNowGFXHudScene::eventGetAKeep ( )
{
	static UFunction* pFnGetAKeep = NULL;

	if ( ! pFnGetAKeep )
		pFnGetAKeep = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetAKeep" );

	UNowGFXHudScene_eventGetAKeep_Parms GetAKeep_Parms;

	this->ProcessEvent ( pFnGetAKeep, &GetAKeep_Parms, NULL );

	return GetAKeep_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.FindItemIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::FindItemIndex ( struct FString sGuid )
{
	static UFunction* pFnFindItemIndex = NULL;

	if ( ! pFnFindItemIndex )
		pFnFindItemIndex = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FindItemIndex" );

	UNowGFXHudScene_execFindItemIndex_Parms FindItemIndex_Parms;
	memcpy ( &FindItemIndex_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnFindItemIndex, &FindItemIndex_Parms, NULL );

	return FindItemIndex_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitEngineer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitEngineer ( )
{
	static UFunction* pFnInitEngineer = NULL;

	if ( ! pFnInitEngineer )
		pFnInitEngineer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitEngineer" );

	UNowGFXHudScene_execInitEngineer_Parms InitEngineer_Parms;

	this->ProcessEvent ( pFnInitEngineer, &InitEngineer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BuyEngineer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BuyEngineer ( struct FString sGuid )
{
	static UFunction* pFnBuyEngineer = NULL;

	if ( ! pFnBuyEngineer )
		pFnBuyEngineer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.BuyEngineer" );

	UNowGFXHudScene_execBuyEngineer_Parms BuyEngineer_Parms;
	memcpy ( &BuyEngineer_Parms.sGuid, &sGuid, 0xC );

	pFnBuyEngineer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBuyEngineer, &BuyEngineer_Parms, NULL );

	pFnBuyEngineer->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetVendorItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetVendorItems ( )
{
	static UFunction* pFnGetVendorItems = NULL;

	if ( ! pFnGetVendorItems )
		pFnGetVendorItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetVendorItems" );

	UNowGFXHudScene_execGetVendorItems_Parms GetVendorItems_Parms;

	pFnGetVendorItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVendorItems, &GetVendorItems_Parms, NULL );

	pFnGetVendorItems->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.requestRemoveHouseFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 req                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestRemoveHouseFriend ( struct FString req )
{
	static UFunction* pFnrequestRemoveHouseFriend = NULL;

	if ( ! pFnrequestRemoveHouseFriend )
		pFnrequestRemoveHouseFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.requestRemoveHouseFriend" );

	UNowGFXHudScene_execrequestRemoveHouseFriend_Parms requestRemoveHouseFriend_Parms;
	memcpy ( &requestRemoveHouseFriend_Parms.req, &req, 0xC );

	this->ProcessEvent ( pFnrequestRemoveHouseFriend, &requestRemoveHouseFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.requestAddHouseFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 req                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::requestAddHouseFriend ( struct FString req )
{
	static UFunction* pFnrequestAddHouseFriend = NULL;

	if ( ! pFnrequestAddHouseFriend )
		pFnrequestAddHouseFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.requestAddHouseFriend" );

	UNowGFXHudScene_execrequestAddHouseFriend_Parms requestAddHouseFriend_Parms;
	memcpy ( &requestAddHouseFriend_Parms.req, &req, 0xC );

	this->ProcessEvent ( pFnrequestAddHouseFriend, &requestAddHouseFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeHouseFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 Friend                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeHouseFriend ( struct FString Friend )
{
	static UFunction* pFnremoveHouseFriend = NULL;

	if ( ! pFnremoveHouseFriend )
		pFnremoveHouseFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeHouseFriend" );

	UNowGFXHudScene_execremoveHouseFriend_Parms removeHouseFriend_Parms;
	memcpy ( &removeHouseFriend_Parms.Friend, &Friend, 0xC );

	this->ProcessEvent ( pFnremoveHouseFriend, &removeHouseFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addHouseFriend
// [0x00020002] 
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addHouseFriend ( struct FString FriendName )
{
	static UFunction* pFnaddHouseFriend = NULL;

	if ( ! pFnaddHouseFriend )
		pFnaddHouseFriend = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addHouseFriend" );

	UNowGFXHudScene_execaddHouseFriend_Parms addHouseFriend_Parms;
	memcpy ( &addHouseFriend_Parms.FriendName, &FriendName, 0xC );

	this->ProcessEvent ( pFnaddHouseFriend, &addHouseFriend_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearHouseFriends
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearHouseFriends ( )
{
	static UFunction* pFnclearHouseFriends = NULL;

	if ( ! pFnclearHouseFriends )
		pFnclearHouseFriends = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearHouseFriends" );

	UNowGFXHudScene_execclearHouseFriends_Parms clearHouseFriends_Parms;

	this->ProcessEvent ( pFnclearHouseFriends, &clearHouseFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleHouseFriends
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::toggleHouseFriends ( )
{
	static UFunction* pFntoggleHouseFriends = NULL;

	if ( ! pFntoggleHouseFriends )
		pFntoggleHouseFriends = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleHouseFriends" );

	UNowGFXHudScene_exectoggleHouseFriends_Parms toggleHouseFriends_Parms;

	this->ProcessEvent ( pFntoggleHouseFriends, &toggleHouseFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateHouseFriendList
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventupdateHouseFriendList ( )
{
	static UFunction* pFnupdateHouseFriendList = NULL;

	if ( ! pFnupdateHouseFriendList )
		pFnupdateHouseFriendList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updateHouseFriendList" );

	UNowGFXHudScene_eventupdateHouseFriendList_Parms updateHouseFriendList_Parms;

	this->ProcessEvent ( pFnupdateHouseFriendList, &updateHouseFriendList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.getInitHouseFriends
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::getInitHouseFriends ( )
{
	static UFunction* pFngetInitHouseFriends = NULL;

	if ( ! pFngetInitHouseFriends )
		pFngetInitHouseFriends = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.getInitHouseFriends" );

	UNowGFXHudScene_execgetInitHouseFriends_Parms getInitHouseFriends_Parms;

	this->ProcessEvent ( pFngetInitHouseFriends, &getInitHouseFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitHouseFriends
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitHouseFriends ( )
{
	static UFunction* pFnInitHouseFriends = NULL;

	if ( ! pFnInitHouseFriends )
		pFnInitHouseFriends = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitHouseFriends" );

	UNowGFXHudScene_eventInitHouseFriends_Parms InitHouseFriends_Parms;

	this->ProcessEvent ( pFnInitHouseFriends, &InitHouseFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.enumerateHouseFriendNames
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       vFriendName                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UNowGFXHudScene::enumerateHouseFriendNames ( TArray< struct FString >* vFriendName )
{
	static UFunction* pFnenumerateHouseFriendNames = NULL;

	if ( ! pFnenumerateHouseFriendNames )
		pFnenumerateHouseFriendNames = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.enumerateHouseFriendNames" );

	UNowGFXHudScene_execenumerateHouseFriendNames_Parms enumerateHouseFriendNames_Parms;

	pFnenumerateHouseFriendNames->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnenumerateHouseFriendNames, &enumerateHouseFriendNames_Parms, NULL );

	pFnenumerateHouseFriendNames->FunctionFlags |= 0x400;

	if ( vFriendName )
		memcpy ( vFriendName, &enumerateHouseFriendNames_Parms.vFriendName, 0xC );
};

// Function NowGame.NowGFXHudScene.RemoveHouseFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveHouseFriendNative ( struct FString FriendName )
{
	static UFunction* pFnRemoveHouseFriendNative = NULL;

	if ( ! pFnRemoveHouseFriendNative )
		pFnRemoveHouseFriendNative = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RemoveHouseFriendNative" );

	UNowGFXHudScene_execRemoveHouseFriendNative_Parms RemoveHouseFriendNative_Parms;
	memcpy ( &RemoveHouseFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnRemoveHouseFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveHouseFriendNative, &RemoveHouseFriendNative_Parms, NULL );

	pFnRemoveHouseFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddHouseFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddHouseFriendNative ( struct FString FriendName )
{
	static UFunction* pFnAddHouseFriendNative = NULL;

	if ( ! pFnAddHouseFriendNative )
		pFnAddHouseFriendNative = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddHouseFriendNative" );

	UNowGFXHudScene_execAddHouseFriendNative_Parms AddHouseFriendNative_Parms;
	memcpy ( &AddHouseFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnAddHouseFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddHouseFriendNative, &AddHouseFriendNative_Parms, NULL );

	pFnAddHouseFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.TalkGuardResponse
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::TalkGuardResponse ( int iIndex )
{
	static UFunction* pFnTalkGuardResponse = NULL;

	if ( ! pFnTalkGuardResponse )
		pFnTalkGuardResponse = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TalkGuardResponse" );

	UNowGFXHudScene_execTalkGuardResponse_Parms TalkGuardResponse_Parms;
	TalkGuardResponse_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnTalkGuardResponse, &TalkGuardResponse_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GuardResponse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iResponse                      ( CPF_Parm )

void UNowGFXHudScene::GuardResponse ( int iResponse )
{
	static UFunction* pFnGuardResponse = NULL;

	if ( ! pFnGuardResponse )
		pFnGuardResponse = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GuardResponse" );

	UNowGFXHudScene_execGuardResponse_Parms GuardResponse_Parms;
	GuardResponse_Parms.iResponse = iResponse;

	pFnGuardResponse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuardResponse, &GuardResponse_Parms, NULL );

	pFnGuardResponse->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearTreasurerItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearTreasurerItems ( )
{
	static UFunction* pFnclearTreasurerItems = NULL;

	if ( ! pFnclearTreasurerItems )
		pFnclearTreasurerItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearTreasurerItems" );

	UNowGFXHudScene_execclearTreasurerItems_Parms clearTreasurerItems_Parms;

	this->ProcessEvent ( pFnclearTreasurerItems, &clearTreasurerItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleTreasurer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::toggleTreasurer ( )
{
	static UFunction* pFntoggleTreasurer = NULL;

	if ( ! pFntoggleTreasurer )
		pFntoggleTreasurer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleTreasurer" );

	UNowGFXHudScene_exectoggleTreasurer_Parms toggleTreasurer_Parms;

	this->ProcessEvent ( pFntoggleTreasurer, &toggleTreasurer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setTreasurerQuantity
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )

void UNowGFXHudScene::setTreasurerQuantity ( struct FString sGuid, int Quantity )
{
	static UFunction* pFnsetTreasurerQuantity = NULL;

	if ( ! pFnsetTreasurerQuantity )
		pFnsetTreasurerQuantity = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setTreasurerQuantity" );

	UNowGFXHudScene_execsetTreasurerQuantity_Parms setTreasurerQuantity_Parms;
	memcpy ( &setTreasurerQuantity_Parms.sGuid, &sGuid, 0xC );
	setTreasurerQuantity_Parms.Quantity = Quantity;

	this->ProcessEvent ( pFnsetTreasurerQuantity, &setTreasurerQuantity_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeTreasurerItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeTreasurerItem ( struct FString sGuid )
{
	static UFunction* pFnremoveTreasurerItem = NULL;

	if ( ! pFnremoveTreasurerItem )
		pFnremoveTreasurerItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeTreasurerItem" );

	UNowGFXHudScene_execremoveTreasurerItem_Parms removeTreasurerItem_Parms;
	memcpy ( &removeTreasurerItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnremoveTreasurerItem, &removeTreasurerItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTreasurerItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            Status                         ( CPF_Parm )
// int                            Quantity                       ( CPF_Parm )
// int                            cp                             ( CPF_Parm )
// int                            PP                             ( CPF_Parm )
// int                            stackSize                      ( CPF_Parm )

void UNowGFXHudScene::addTreasurerItem ( struct FString sGuid, struct FString Title, struct FString Description, int Status, int Quantity, int cp, int PP, int stackSize )
{
	static UFunction* pFnaddTreasurerItem = NULL;

	if ( ! pFnaddTreasurerItem )
		pFnaddTreasurerItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addTreasurerItem" );

	UNowGFXHudScene_execaddTreasurerItem_Parms addTreasurerItem_Parms;
	memcpy ( &addTreasurerItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &addTreasurerItem_Parms.Title, &Title, 0xC );
	memcpy ( &addTreasurerItem_Parms.Description, &Description, 0xC );
	addTreasurerItem_Parms.Status = Status;
	addTreasurerItem_Parms.Quantity = Quantity;
	addTreasurerItem_Parms.cp = cp;
	addTreasurerItem_Parms.PP = PP;
	addTreasurerItem_Parms.stackSize = stackSize;

	this->ProcessEvent ( pFnaddTreasurerItem, &addTreasurerItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TradeTreasurerItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )

void UNowGFXHudScene::TradeTreasurerItem ( struct FString sGuid, int Quantity )
{
	static UFunction* pFnTradeTreasurerItem = NULL;

	if ( ! pFnTradeTreasurerItem )
		pFnTradeTreasurerItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TradeTreasurerItem" );

	UNowGFXHudScene_execTradeTreasurerItem_Parms TradeTreasurerItem_Parms;
	memcpy ( &TradeTreasurerItem_Parms.sGuid, &sGuid, 0xC );
	TradeTreasurerItem_Parms.Quantity = Quantity;

	this->ProcessEvent ( pFnTradeTreasurerItem, &TradeTreasurerItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            RemQuantity                    ( CPF_Parm )

void UNowGFXHudScene::UpdateItem ( struct FString sGuid, int RemQuantity )
{
	static UFunction* pFnUpdateItem = NULL;

	if ( ! pFnUpdateItem )
		pFnUpdateItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateItem" );

	UNowGFXHudScene_execUpdateItem_Parms UpdateItem_Parms;
	memcpy ( &UpdateItem_Parms.sGuid, &sGuid, 0xC );
	UpdateItem_Parms.RemQuantity = RemQuantity;

	this->ProcessEvent ( pFnUpdateItem, &UpdateItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetMinQuantity
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::GetMinQuantity ( struct FString sGuid )
{
	static UFunction* pFnGetMinQuantity = NULL;

	if ( ! pFnGetMinQuantity )
		pFnGetMinQuantity = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetMinQuantity" );

	UNowGFXHudScene_execGetMinQuantity_Parms GetMinQuantity_Parms;
	memcpy ( &GetMinQuantity_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGetMinQuantity, &GetMinQuantity_Parms, NULL );

	return GetMinQuantity_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.FinishAddingTreasurerItems
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinishAddingTreasurerItems ( )
{
	static UFunction* pFnFinishAddingTreasurerItems = NULL;

	if ( ! pFnFinishAddingTreasurerItems )
		pFnFinishAddingTreasurerItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinishAddingTreasurerItems" );

	UNowGFXHudScene_eventFinishAddingTreasurerItems_Parms FinishAddingTreasurerItems_Parms;

	this->ProcessEvent ( pFnFinishAddingTreasurerItems, &FinishAddingTreasurerItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DoAddTreasurerItem
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Desc                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            Status                         ( CPF_Parm )
// int                            Quantity                       ( CPF_Parm )
// int                            cp                             ( CPF_Parm )
// float                          PP                             ( CPF_Parm )
// int                            stackSize                      ( CPF_Parm )

void UNowGFXHudScene::eventDoAddTreasurerItem ( struct FString sGuid, struct FString Title, struct FString Desc, int Status, int Quantity, int cp, float PP, int stackSize )
{
	static UFunction* pFnDoAddTreasurerItem = NULL;

	if ( ! pFnDoAddTreasurerItem )
		pFnDoAddTreasurerItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.DoAddTreasurerItem" );

	UNowGFXHudScene_eventDoAddTreasurerItem_Parms DoAddTreasurerItem_Parms;
	memcpy ( &DoAddTreasurerItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &DoAddTreasurerItem_Parms.Title, &Title, 0xC );
	memcpy ( &DoAddTreasurerItem_Parms.Desc, &Desc, 0xC );
	DoAddTreasurerItem_Parms.Status = Status;
	DoAddTreasurerItem_Parms.Quantity = Quantity;
	DoAddTreasurerItem_Parms.cp = cp;
	DoAddTreasurerItem_Parms.PP = PP;
	DoAddTreasurerItem_Parms.stackSize = stackSize;

	this->ProcessEvent ( pFnDoAddTreasurerItem, &DoAddTreasurerItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitTreasurer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitTreasurer ( )
{
	static UFunction* pFnInitTreasurer = NULL;

	if ( ! pFnInitTreasurer )
		pFnInitTreasurer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitTreasurer" );

	UNowGFXHudScene_execInitTreasurer_Parms InitTreasurer_Parms;

	this->ProcessEvent ( pFnInitTreasurer, &InitTreasurer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.sellTreasurerItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            Amount                         ( CPF_Parm )

void UNowGFXHudScene::sellTreasurerItem ( struct FString ItemGuid, int Amount )
{
	static UFunction* pFnsellTreasurerItem = NULL;

	if ( ! pFnsellTreasurerItem )
		pFnsellTreasurerItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.sellTreasurerItem" );

	UNowGFXHudScene_execsellTreasurerItem_Parms sellTreasurerItem_Parms;
	memcpy ( &sellTreasurerItem_Parms.ItemGuid, &ItemGuid, 0xC );
	sellTreasurerItem_Parms.Amount = Amount;

	pFnsellTreasurerItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnsellTreasurerItem, &sellTreasurerItem_Parms, NULL );

	pFnsellTreasurerItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.getTreasurerTradeItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::getTreasurerTradeItems ( )
{
	static UFunction* pFngetTreasurerTradeItems = NULL;

	if ( ! pFngetTreasurerTradeItems )
		pFngetTreasurerTradeItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.getTreasurerTradeItems" );

	UNowGFXHudScene_execgetTreasurerTradeItems_Parms getTreasurerTradeItems_Parms;

	pFngetTreasurerTradeItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetTreasurerTradeItems, &getTreasurerTradeItems_Parms, NULL );

	pFngetTreasurerTradeItems->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeGuildUI
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeGuildUI ( )
{
	static UFunction* pFncloseGuildUI = NULL;

	if ( ! pFncloseGuildUI )
		pFncloseGuildUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeGuildUI" );

	UNowGFXHudScene_execcloseGuildUI_Parms closeGuildUI_Parms;

	this->ProcessEvent ( pFncloseGuildUI, &closeGuildUI_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateMember
// [0x00020002] 
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            Rank                           ( CPF_Parm )

void UNowGFXHudScene::updateMember ( struct FString memberName, int Rank )
{
	static UFunction* pFnupdateMember = NULL;

	if ( ! pFnupdateMember )
		pFnupdateMember = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updateMember" );

	UNowGFXHudScene_execupdateMember_Parms updateMember_Parms;
	memcpy ( &updateMember_Parms.memberName, &memberName, 0xC );
	updateMember_Parms.Rank = Rank;

	this->ProcessEvent ( pFnupdateMember, &updateMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveMember
// [0x00020002] 
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveMember ( struct FString memberName )
{
	static UFunction* pFnRemoveMember = NULL;

	if ( ! pFnRemoveMember )
		pFnRemoveMember = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RemoveMember" );

	UNowGFXHudScene_execRemoveMember_Parms RemoveMember_Parms;
	memcpy ( &RemoveMember_Parms.memberName, &memberName, 0xC );

	this->ProcessEvent ( pFnRemoveMember, &RemoveMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddMember
// [0x00020002] 
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            memberRank                     ( CPF_Parm )

void UNowGFXHudScene::AddMember ( struct FString memberName, int memberRank )
{
	static UFunction* pFnAddMember = NULL;

	if ( ! pFnAddMember )
		pFnAddMember = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddMember" );

	UNowGFXHudScene_execAddMember_Parms AddMember_Parms;
	memcpy ( &AddMember_Parms.memberName, &memberName, 0xC );
	AddMember_Parms.memberRank = memberRank;

	this->ProcessEvent ( pFnAddMember, &AddMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeWar
// [0x00020002] 
// Parameters infos:
// struct FString                 warName                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeWar ( struct FString warName )
{
	static UFunction* pFnremoveWar = NULL;

	if ( ! pFnremoveWar )
		pFnremoveWar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeWar" );

	UNowGFXHudScene_execremoveWar_Parms removeWar_Parms;
	memcpy ( &removeWar_Parms.warName, &warName, 0xC );

	this->ProcessEvent ( pFnremoveWar, &removeWar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addWar
// [0x00020002] 
// Parameters infos:
// struct FString                 warName                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  warActive                      ( CPF_Parm )
// unsigned long                  warChallenger                  ( CPF_Parm )

void UNowGFXHudScene::addWar ( struct FString warName, unsigned long warActive, unsigned long warChallenger )
{
	static UFunction* pFnaddWar = NULL;

	if ( ! pFnaddWar )
		pFnaddWar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addWar" );

	UNowGFXHudScene_execaddWar_Parms addWar_Parms;
	memcpy ( &addWar_Parms.warName, &warName, 0xC );
	addWar_Parms.warActive = warActive;
	addWar_Parms.warChallenger = warChallenger;

	this->ProcessEvent ( pFnaddWar, &addWar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.initGuildUI
// [0x00020002] 
// Parameters infos:
// struct FString                 guildAbbrev                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bMembers                       ( CPF_Parm )
// unsigned long                  bDiplomacy                     ( CPF_Parm )
// unsigned long                  bOptions                       ( CPF_Parm )
// unsigned long                  bCanInvite                     ( CPF_Parm )
// unsigned long                  bCanKick                       ( CPF_Parm )
// unsigned long                  bCanPromote                    ( CPF_Parm )
// unsigned long                  bCanDemote                     ( CPF_Parm )
// int                            maxRank                        ( CPF_Parm )
// unsigned long                  bManageWars                    ( CPF_Parm )

void UNowGFXHudScene::initGuildUI ( struct FString guildAbbrev, unsigned long bMembers, unsigned long bDiplomacy, unsigned long bOptions, unsigned long bCanInvite, unsigned long bCanKick, unsigned long bCanPromote, unsigned long bCanDemote, int maxRank, unsigned long bManageWars )
{
	static UFunction* pFninitGuildUI = NULL;

	if ( ! pFninitGuildUI )
		pFninitGuildUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.initGuildUI" );

	UNowGFXHudScene_execinitGuildUI_Parms initGuildUI_Parms;
	memcpy ( &initGuildUI_Parms.guildAbbrev, &guildAbbrev, 0xC );
	initGuildUI_Parms.bMembers = bMembers;
	initGuildUI_Parms.bDiplomacy = bDiplomacy;
	initGuildUI_Parms.bOptions = bOptions;
	initGuildUI_Parms.bCanInvite = bCanInvite;
	initGuildUI_Parms.bCanKick = bCanKick;
	initGuildUI_Parms.bCanPromote = bCanPromote;
	initGuildUI_Parms.bCanDemote = bCanDemote;
	initGuildUI_Parms.maxRank = maxRank;
	initGuildUI_Parms.bManageWars = bManageWars;

	this->ProcessEvent ( pFninitGuildUI, &initGuildUI_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildSendChallenge
// [0x00020002] 
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::guildSendChallenge ( struct FString guildName )
{
	static UFunction* pFnguildSendChallenge = NULL;

	if ( ! pFnguildSendChallenge )
		pFnguildSendChallenge = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.guildSendChallenge" );

	UNowGFXHudScene_execguildSendChallenge_Parms guildSendChallenge_Parms;
	memcpy ( &guildSendChallenge_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnguildSendChallenge, &guildSendChallenge_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildCancelWar
// [0x00020002] 
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::guildCancelWar ( struct FString guildName )
{
	static UFunction* pFnguildCancelWar = NULL;

	if ( ! pFnguildCancelWar )
		pFnguildCancelWar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.guildCancelWar" );

	UNowGFXHudScene_execguildCancelWar_Parms guildCancelWar_Parms;
	memcpy ( &guildCancelWar_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnguildCancelWar, &guildCancelWar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildCancelChallenge
// [0x00020002] 
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::guildCancelChallenge ( struct FString guildName )
{
	static UFunction* pFnguildCancelChallenge = NULL;

	if ( ! pFnguildCancelChallenge )
		pFnguildCancelChallenge = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.guildCancelChallenge" );

	UNowGFXHudScene_execguildCancelChallenge_Parms guildCancelChallenge_Parms;
	memcpy ( &guildCancelChallenge_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnguildCancelChallenge, &guildCancelChallenge_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildAcceptedChallenge
// [0x00020002] 
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::guildAcceptedChallenge ( struct FString guildName )
{
	static UFunction* pFnguildAcceptedChallenge = NULL;

	if ( ! pFnguildAcceptedChallenge )
		pFnguildAcceptedChallenge = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.guildAcceptedChallenge" );

	UNowGFXHudScene_execguildAcceptedChallenge_Parms guildAcceptedChallenge_Parms;
	memcpy ( &guildAcceptedChallenge_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnguildAcceptedChallenge, &guildAcceptedChallenge_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildSetAbbrev
// [0x00020002] 
// Parameters infos:
// struct FString                 guildAbbrev                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::guildSetAbbrev ( struct FString guildAbbrev )
{
	static UFunction* pFnguildSetAbbrev = NULL;

	if ( ! pFnguildSetAbbrev )
		pFnguildSetAbbrev = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.guildSetAbbrev" );

	UNowGFXHudScene_execguildSetAbbrev_Parms guildSetAbbrev_Parms;
	memcpy ( &guildSetAbbrev_Parms.guildAbbrev, &guildAbbrev, 0xC );

	this->ProcessEvent ( pFnguildSetAbbrev, &guildSetAbbrev_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildRankMember
// [0x00020002] 
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            memberRank                     ( CPF_Parm )

void UNowGFXHudScene::guildRankMember ( struct FString memberName, int memberRank )
{
	static UFunction* pFnguildRankMember = NULL;

	if ( ! pFnguildRankMember )
		pFnguildRankMember = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.guildRankMember" );

	UNowGFXHudScene_execguildRankMember_Parms guildRankMember_Parms;
	memcpy ( &guildRankMember_Parms.memberName, &memberName, 0xC );
	guildRankMember_Parms.memberRank = memberRank;

	this->ProcessEvent ( pFnguildRankMember, &guildRankMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildKickMember
// [0x00020002] 
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::guildKickMember ( struct FString memberName )
{
	static UFunction* pFnguildKickMember = NULL;

	if ( ! pFnguildKickMember )
		pFnguildKickMember = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.guildKickMember" );

	UNowGFXHudScene_execguildKickMember_Parms guildKickMember_Parms;
	memcpy ( &guildKickMember_Parms.memberName, &memberName, 0xC );

	this->ProcessEvent ( pFnguildKickMember, &guildKickMember_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildSendInvite
// [0x00020002] 
// Parameters infos:
// struct FString                 memberName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::guildSendInvite ( struct FString memberName )
{
	static UFunction* pFnguildSendInvite = NULL;

	if ( ! pFnguildSendInvite )
		pFnguildSendInvite = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.guildSendInvite" );

	UNowGFXHudScene_execguildSendInvite_Parms guildSendInvite_Parms;
	memcpy ( &guildSendInvite_Parms.memberName, &memberName, 0xC );

	this->ProcessEvent ( pFnguildSendInvite, &guildSendInvite_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setGuildMembers
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::setGuildMembers ( )
{
	static UFunction* pFnsetGuildMembers = NULL;

	if ( ! pFnsetGuildMembers )
		pFnsetGuildMembers = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setGuildMembers" );

	UNowGFXHudScene_execsetGuildMembers_Parms setGuildMembers_Parms;

	this->ProcessEvent ( pFnsetGuildMembers, &setGuildMembers_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetInitData
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::SetInitData ( )
{
	static UFunction* pFnSetInitData = NULL;

	if ( ! pFnSetInitData )
		pFnSetInitData = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetInitData" );

	UNowGFXHudScene_execSetInitData_Parms SetInitData_Parms;

	this->ProcessEvent ( pFnSetInitData, &SetInitData_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildWarUpdated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventguildWarUpdated ( )
{
	static UFunction* pFnguildWarUpdated = NULL;

	if ( ! pFnguildWarUpdated )
		pFnguildWarUpdated = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.guildWarUpdated" );

	UNowGFXHudScene_eventguildWarUpdated_Parms guildWarUpdated_Parms;

	this->ProcessEvent ( pFnguildWarUpdated, &guildWarUpdated_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddOutgoingGuildWar
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddOutgoingGuildWar ( struct FString guildName )
{
	static UFunction* pFnAddOutgoingGuildWar = NULL;

	if ( ! pFnAddOutgoingGuildWar )
		pFnAddOutgoingGuildWar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddOutgoingGuildWar" );

	UNowGFXHudScene_eventAddOutgoingGuildWar_Parms AddOutgoingGuildWar_Parms;
	memcpy ( &AddOutgoingGuildWar_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnAddOutgoingGuildWar, &AddOutgoingGuildWar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddInComingGuildWar
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddInComingGuildWar ( struct FString guildName )
{
	static UFunction* pFnAddInComingGuildWar = NULL;

	if ( ! pFnAddInComingGuildWar )
		pFnAddInComingGuildWar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddInComingGuildWar" );

	UNowGFXHudScene_eventAddInComingGuildWar_Parms AddInComingGuildWar_Parms;
	memcpy ( &AddInComingGuildWar_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnAddInComingGuildWar, &AddInComingGuildWar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddGuildWar
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddGuildWar ( struct FString guildName )
{
	static UFunction* pFnAddGuildWar = NULL;

	if ( ! pFnAddGuildWar )
		pFnAddGuildWar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddGuildWar" );

	UNowGFXHudScene_eventAddGuildWar_Parms AddGuildWar_Parms;
	memcpy ( &AddGuildWar_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnAddGuildWar, &AddGuildWar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearWars
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventclearWars ( )
{
	static UFunction* pFnclearWars = NULL;

	if ( ! pFnclearWars )
		pFnclearWars = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearWars" );

	UNowGFXHudScene_eventclearWars_Parms clearWars_Parms;

	this->ProcessEvent ( pFnclearWars, &clearWars_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.guildUpdated
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventguildUpdated ( )
{
	static UFunction* pFnguildUpdated = NULL;

	if ( ! pFnguildUpdated )
		pFnguildUpdated = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.guildUpdated" );

	UNowGFXHudScene_eventguildUpdated_Parms guildUpdated_Parms;

	this->ProcessEvent ( pFnguildUpdated, &guildUpdated_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReinitGuildMembers
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventReinitGuildMembers ( )
{
	static UFunction* pFnReinitGuildMembers = NULL;

	if ( ! pFnReinitGuildMembers )
		pFnReinitGuildMembers = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ReinitGuildMembers" );

	UNowGFXHudScene_eventReinitGuildMembers_Parms ReinitGuildMembers_Parms;

	this->ProcessEvent ( pFnReinitGuildMembers, &ReinitGuildMembers_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGuildStone
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGuildStone ( )
{
	static UFunction* pFnInitGuildStone = NULL;

	if ( ! pFnInitGuildStone )
		pFnInitGuildStone = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitGuildStone" );

	UNowGFXHudScene_execInitGuildStone_Parms InitGuildStone_Parms;

	this->ProcessEvent ( pFnInitGuildStone, &InitGuildStone_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GuildSetAccronym
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 guildAccronym                  ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildSetAccronym ( struct FString guildAccronym )
{
	static UFunction* pFnGuildSetAccronym = NULL;

	if ( ! pFnGuildSetAccronym )
		pFnGuildSetAccronym = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GuildSetAccronym" );

	UNowGFXHudScene_execGuildSetAccronym_Parms GuildSetAccronym_Parms;
	memcpy ( &GuildSetAccronym_Parms.guildAccronym, &guildAccronym, 0xC );

	pFnGuildSetAccronym->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildSetAccronym, &GuildSetAccronym_Parms, NULL );

	pFnGuildSetAccronym->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildAcceptChallenge
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuild                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildAcceptChallenge ( struct FString sGuild )
{
	static UFunction* pFnGuildAcceptChallenge = NULL;

	if ( ! pFnGuildAcceptChallenge )
		pFnGuildAcceptChallenge = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GuildAcceptChallenge" );

	UNowGFXHudScene_execGuildAcceptChallenge_Parms GuildAcceptChallenge_Parms;
	memcpy ( &GuildAcceptChallenge_Parms.sGuild, &sGuild, 0xC );

	pFnGuildAcceptChallenge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildAcceptChallenge, &GuildAcceptChallenge_Parms, NULL );

	pFnGuildAcceptChallenge->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildGuildWarCancel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuild                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildGuildWarCancel ( struct FString sGuild )
{
	static UFunction* pFnGuildGuildWarCancel = NULL;

	if ( ! pFnGuildGuildWarCancel )
		pFnGuildGuildWarCancel = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GuildGuildWarCancel" );

	UNowGFXHudScene_execGuildGuildWarCancel_Parms GuildGuildWarCancel_Parms;
	memcpy ( &GuildGuildWarCancel_Parms.sGuild, &sGuild, 0xC );

	pFnGuildGuildWarCancel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildGuildWarCancel, &GuildGuildWarCancel_Parms, NULL );

	pFnGuildGuildWarCancel->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildChallengeCancel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuild                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildChallengeCancel ( struct FString sGuild )
{
	static UFunction* pFnGuildChallengeCancel = NULL;

	if ( ! pFnGuildChallengeCancel )
		pFnGuildChallengeCancel = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GuildChallengeCancel" );

	UNowGFXHudScene_execGuildChallengeCancel_Parms GuildChallengeCancel_Parms;
	memcpy ( &GuildChallengeCancel_Parms.sGuild, &sGuild, 0xC );

	pFnGuildChallengeCancel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildChallengeCancel, &GuildChallengeCancel_Parms, NULL );

	pFnGuildChallengeCancel->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildChallengeGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuild                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildChallengeGuild ( struct FString sGuild )
{
	static UFunction* pFnGuildChallengeGuild = NULL;

	if ( ! pFnGuildChallengeGuild )
		pFnGuildChallengeGuild = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GuildChallengeGuild" );

	UNowGFXHudScene_execGuildChallengeGuild_Parms GuildChallengeGuild_Parms;
	memcpy ( &GuildChallengeGuild_Parms.sGuild, &sGuild, 0xC );

	pFnGuildChallengeGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildChallengeGuild, &GuildChallengeGuild_Parms, NULL );

	pFnGuildChallengeGuild->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildRequestGuildWars
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GuildRequestGuildWars ( )
{
	static UFunction* pFnGuildRequestGuildWars = NULL;

	if ( ! pFnGuildRequestGuildWars )
		pFnGuildRequestGuildWars = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GuildRequestGuildWars" );

	UNowGFXHudScene_execGuildRequestGuildWars_Parms GuildRequestGuildWars_Parms;

	pFnGuildRequestGuildWars->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildRequestGuildWars, &GuildRequestGuildWars_Parms, NULL );

	pFnGuildRequestGuildWars->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildSetNewMemberRank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sMember                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            newRank                        ( CPF_Parm )

void UNowGFXHudScene::GuildSetNewMemberRank ( struct FString sMember, int newRank )
{
	static UFunction* pFnGuildSetNewMemberRank = NULL;

	if ( ! pFnGuildSetNewMemberRank )
		pFnGuildSetNewMemberRank = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GuildSetNewMemberRank" );

	UNowGFXHudScene_execGuildSetNewMemberRank_Parms GuildSetNewMemberRank_Parms;
	memcpy ( &GuildSetNewMemberRank_Parms.sMember, &sMember, 0xC );
	GuildSetNewMemberRank_Parms.newRank = newRank;

	pFnGuildSetNewMemberRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildSetNewMemberRank, &GuildSetNewMemberRank_Parms, NULL );

	pFnGuildSetNewMemberRank->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildDemote
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sMember                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildDemote ( struct FString sMember )
{
	static UFunction* pFnGuildDemote = NULL;

	if ( ! pFnGuildDemote )
		pFnGuildDemote = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GuildDemote" );

	UNowGFXHudScene_execGuildDemote_Parms GuildDemote_Parms;
	memcpy ( &GuildDemote_Parms.sMember, &sMember, 0xC );

	pFnGuildDemote->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildDemote, &GuildDemote_Parms, NULL );

	pFnGuildDemote->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildPromote
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sMember                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildPromote ( struct FString sMember )
{
	static UFunction* pFnGuildPromote = NULL;

	if ( ! pFnGuildPromote )
		pFnGuildPromote = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GuildPromote" );

	UNowGFXHudScene_execGuildPromote_Parms GuildPromote_Parms;
	memcpy ( &GuildPromote_Parms.sMember, &sMember, 0xC );

	pFnGuildPromote->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildPromote, &GuildPromote_Parms, NULL );

	pFnGuildPromote->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildKickMemberCommand
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sMember                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildKickMemberCommand ( struct FString sMember )
{
	static UFunction* pFnGuildKickMemberCommand = NULL;

	if ( ! pFnGuildKickMemberCommand )
		pFnGuildKickMemberCommand = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GuildKickMemberCommand" );

	UNowGFXHudScene_execGuildKickMemberCommand_Parms GuildKickMemberCommand_Parms;
	memcpy ( &GuildKickMemberCommand_Parms.sMember, &sMember, 0xC );

	pFnGuildKickMemberCommand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildKickMemberCommand, &GuildKickMemberCommand_Parms, NULL );

	pFnGuildKickMemberCommand->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GuildInviteMember
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sMember                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GuildInviteMember ( struct FString sMember )
{
	static UFunction* pFnGuildInviteMember = NULL;

	if ( ! pFnGuildInviteMember )
		pFnGuildInviteMember = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GuildInviteMember" );

	UNowGFXHudScene_execGuildInviteMember_Parms GuildInviteMember_Parms;
	memcpy ( &GuildInviteMember_Parms.sMember, &sMember, 0xC );

	pFnGuildInviteMember->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGuildInviteMember, &GuildInviteMember_Parms, NULL );

	pFnGuildInviteMember->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.CheckForDead
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::CheckForDead ( )
{
	static UFunction* pFnCheckForDead = NULL;

	if ( ! pFnCheckForDead )
		pFnCheckForDead = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CheckForDead" );

	UNowGFXHudScene_execCheckForDead_Parms CheckForDead_Parms;

	this->ProcessEvent ( pFnCheckForDead, &CheckForDead_Parms, NULL );

	return CheckForDead_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.closeContainer
// [0x00020002] 
// Parameters infos:
// int                            iDeposit                       ( CPF_Parm )

void UNowGFXHudScene::closeContainer ( int iDeposit )
{
	static UFunction* pFncloseContainer = NULL;

	if ( ! pFncloseContainer )
		pFncloseContainer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeContainer" );

	UNowGFXHudScene_execcloseContainer_Parms closeContainer_Parms;
	closeContainer_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFncloseContainer, &closeContainer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setContainerLabel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iContainer                     ( CPF_Parm )
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventsetContainerLabel ( int iContainer, struct FString sLabel )
{
	static UFunction* pFnsetContainerLabel = NULL;

	if ( ! pFnsetContainerLabel )
		pFnsetContainerLabel = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setContainerLabel" );

	UNowGFXHudScene_eventsetContainerLabel_Parms setContainerLabel_Parms;
	setContainerLabel_Parms.iContainer = iContainer;
	memcpy ( &setContainerLabel_Parms.sLabel, &sLabel, 0xC );

	this->ProcessEvent ( pFnsetContainerLabel, &setContainerLabel_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showContainer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iDeposit                       ( CPF_Parm )
// int                            iSlotCount                     ( CPF_Parm )
// int                            iSlots                         ( CPF_Parm )
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bLocked                        ( CPF_Parm )
// struct FString                 sInvalidGuids                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sTopLabel                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventshowContainer ( int iDeposit, int iSlotCount, int iSlots, struct FString sTitle, unsigned long bLocked, struct FString sInvalidGuids, struct FString sTopLabel )
{
	static UFunction* pFnshowContainer = NULL;

	if ( ! pFnshowContainer )
		pFnshowContainer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showContainer" );

	UNowGFXHudScene_eventshowContainer_Parms showContainer_Parms;
	showContainer_Parms.iDeposit = iDeposit;
	showContainer_Parms.iSlotCount = iSlotCount;
	showContainer_Parms.iSlots = iSlots;
	memcpy ( &showContainer_Parms.sTitle, &sTitle, 0xC );
	showContainer_Parms.bLocked = bLocked;
	memcpy ( &showContainer_Parms.sInvalidGuids, &sInvalidGuids, 0xC );
	memcpy ( &showContainer_Parms.sTopLabel, &sTopLabel, 0xC );

	this->ProcessEvent ( pFnshowContainer, &showContainer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateItemSlot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iDeposit                       ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventupdateItemSlot ( int iDeposit, int iSlot, struct FString sData )
{
	static UFunction* pFnupdateItemSlot = NULL;

	if ( ! pFnupdateItemSlot )
		pFnupdateItemSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updateItemSlot" );

	UNowGFXHudScene_eventupdateItemSlot_Parms updateItemSlot_Parms;
	updateItemSlot_Parms.iDeposit = iDeposit;
	updateItemSlot_Parms.iSlot = iSlot;
	memcpy ( &updateItemSlot_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnupdateItemSlot, &updateItemSlot_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventRemoveItem ( struct FString sGuid )
{
	static UFunction* pFnRemoveItem = NULL;

	if ( ! pFnRemoveItem )
		pFnRemoveItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RemoveItem" );

	UNowGFXHudScene_eventRemoveItem_Parms RemoveItem_Parms;
	memcpy ( &RemoveItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnRemoveItem, &RemoveItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedSlotSplit
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSplit                         ( CPF_Parm )
// int                            iNewDeposit                    ( CPF_Parm )
// int                            iNewSlot                       ( CPF_Parm )

void UNowGFXHudScene::ChangedSlotSplit ( struct FString sGuid, int iSplit, int iNewDeposit, int iNewSlot )
{
	static UFunction* pFnChangedSlotSplit = NULL;

	if ( ! pFnChangedSlotSplit )
		pFnChangedSlotSplit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ChangedSlotSplit" );

	UNowGFXHudScene_execChangedSlotSplit_Parms ChangedSlotSplit_Parms;
	memcpy ( &ChangedSlotSplit_Parms.sGuid, &sGuid, 0xC );
	ChangedSlotSplit_Parms.iSplit = iSplit;
	ChangedSlotSplit_Parms.iNewDeposit = iNewDeposit;
	ChangedSlotSplit_Parms.iNewSlot = iNewSlot;

	this->ProcessEvent ( pFnChangedSlotSplit, &ChangedSlotSplit_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetBagDepositFromGuid
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetBagDepositFromGuid ( struct FString sGuid )
{
	static UFunction* pFnGetBagDepositFromGuid = NULL;

	if ( ! pFnGetBagDepositFromGuid )
		pFnGetBagDepositFromGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetBagDepositFromGuid" );

	UNowGFXHudScene_eventGetBagDepositFromGuid_Parms GetBagDepositFromGuid_Parms;
	memcpy ( &GetBagDepositFromGuid_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGetBagDepositFromGuid, &GetBagDepositFromGuid_Parms, NULL );

	return GetBagDepositFromGuid_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetBagGuidFromDeposit
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iDeposit                       ( CPF_Parm )

struct FString UNowGFXHudScene::eventGetBagGuidFromDeposit ( int iDeposit )
{
	static UFunction* pFnGetBagGuidFromDeposit = NULL;

	if ( ! pFnGetBagGuidFromDeposit )
		pFnGetBagGuidFromDeposit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetBagGuidFromDeposit" );

	UNowGFXHudScene_eventGetBagGuidFromDeposit_Parms GetBagGuidFromDeposit_Parms;
	GetBagGuidFromDeposit_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFnGetBagGuidFromDeposit, &GetBagGuidFromDeposit_Parms, NULL );

	return GetBagGuidFromDeposit_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.ChangedSlot
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNewDeposit                    ( CPF_Parm )
// int                            iNewSlot                       ( CPF_Parm )

void UNowGFXHudScene::ChangedSlot ( struct FString sGuid, int iNewDeposit, int iNewSlot )
{
	static UFunction* pFnChangedSlot = NULL;

	if ( ! pFnChangedSlot )
		pFnChangedSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ChangedSlot" );

	UNowGFXHudScene_execChangedSlot_Parms ChangedSlot_Parms;
	memcpy ( &ChangedSlot_Parms.sGuid, &sGuid, 0xC );
	ChangedSlot_Parms.iNewDeposit = iNewDeposit;
	ChangedSlot_Parms.iNewSlot = iNewSlot;

	this->ProcessEvent ( pFnChangedSlot, &ChangedSlot_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SwappedSlots
// [0x00020002] 
// Parameters infos:
// struct FString                 sTargetGuid                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPickedGuid                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SwappedSlots ( struct FString sTargetGuid, struct FString sPickedGuid )
{
	static UFunction* pFnSwappedSlots = NULL;

	if ( ! pFnSwappedSlots )
		pFnSwappedSlots = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SwappedSlots" );

	UNowGFXHudScene_execSwappedSlots_Parms SwappedSlots_Parms;
	memcpy ( &SwappedSlots_Parms.sTargetGuid, &sTargetGuid, 0xC );
	memcpy ( &SwappedSlots_Parms.sPickedGuid, &sPickedGuid, 0xC );

	this->ProcessEvent ( pFnSwappedSlots, &SwappedSlots_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UseItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UseItem ( struct FString sGuid )
{
	static UFunction* pFnUseItem = NULL;

	if ( ! pFnUseItem )
		pFnUseItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UseItem" );

	UNowGFXHudScene_execUseItem_Parms UseItem_Parms;
	memcpy ( &UseItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnUseItem, &UseItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.EquippedItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sEquipSlot                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::EquippedItem ( struct FString sGuid, struct FString sEquipSlot )
{
	static UFunction* pFnEquippedItem = NULL;

	if ( ! pFnEquippedItem )
		pFnEquippedItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.EquippedItem" );

	UNowGFXHudScene_execEquippedItem_Parms EquippedItem_Parms;
	memcpy ( &EquippedItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &EquippedItem_Parms.sEquipSlot, &sEquipSlot, 0xC );

	this->ProcessEvent ( pFnEquippedItem, &EquippedItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddPendingSlotUpdate
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// int                            iDeposit                       ( CPF_Parm )

void UNowGFXHudScene::eventAddPendingSlotUpdate ( int iSlot, int iDeposit )
{
	static UFunction* pFnAddPendingSlotUpdate = NULL;

	if ( ! pFnAddPendingSlotUpdate )
		pFnAddPendingSlotUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddPendingSlotUpdate" );

	UNowGFXHudScene_eventAddPendingSlotUpdate_Parms AddPendingSlotUpdate_Parms;
	AddPendingSlotUpdate_Parms.iSlot = iSlot;
	AddPendingSlotUpdate_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFnAddPendingSlotUpdate, &AddPendingSlotUpdate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TickSlotUpdate
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UNowGFXHudScene::TickSlotUpdate ( float fDeltaTime )
{
	static UFunction* pFnTickSlotUpdate = NULL;

	if ( ! pFnTickSlotUpdate )
		pFnTickSlotUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TickSlotUpdate" );

	UNowGFXHudScene_execTickSlotUpdate_Parms TickSlotUpdate_Parms;
	TickSlotUpdate_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickSlotUpdate, &TickSlotUpdate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// int                            iDeposit                       ( CPF_Parm )

void UNowGFXHudScene::UpdateSlot ( int iSlot, int iDeposit )
{
	static UFunction* pFnUpdateSlot = NULL;

	if ( ! pFnUpdateSlot )
		pFnUpdateSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateSlot" );

	UNowGFXHudScene_execUpdateSlot_Parms UpdateSlot_Parms;
	UpdateSlot_Parms.iSlot = iSlot;
	UpdateSlot_Parms.iDeposit = iDeposit;

	pFnUpdateSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSlot, &UpdateSlot_Parms, NULL );

	pFnUpdateSlot->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitInventoryItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitInventoryItems ( )
{
	static UFunction* pFnInitInventoryItems = NULL;

	if ( ! pFnInitInventoryItems )
		pFnInitInventoryItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitInventoryItems" );

	UNowGFXHudScene_execInitInventoryItems_Parms InitInventoryItems_Parms;

	this->ProcessEvent ( pFnInitInventoryItems, &InitInventoryItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.OpenInventory
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::OpenInventory ( )
{
	static UFunction* pFnOpenInventory = NULL;

	if ( ! pFnOpenInventory )
		pFnOpenInventory = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.OpenInventory" );

	UNowGFXHudScene_execOpenInventory_Parms OpenInventory_Parms;

	this->ProcessEvent ( pFnOpenInventory, &OpenInventory_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillInventory ( )
{
	static UFunction* pFnFillInventory = NULL;

	if ( ! pFnFillInventory )
		pFnFillInventory = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillInventory" );

	UNowGFXHudScene_execFillInventory_Parms FillInventory_Parms;

	pFnFillInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillInventory, &FillInventory_Parms, NULL );

	pFnFillInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitBanker
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitBanker ( )
{
	static UFunction* pFnInitBanker = NULL;

	if ( ! pFnInitBanker )
		pFnInitBanker = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitBanker" );

	UNowGFXHudScene_execInitBanker_Parms InitBanker_Parms;

	this->ProcessEvent ( pFnInitBanker, &InitBanker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillBankInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillBankInventory ( )
{
	static UFunction* pFnFillBankInventory = NULL;

	if ( ! pFnFillBankInventory )
		pFnFillBankInventory = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillBankInventory" );

	UNowGFXHudScene_execFillBankInventory_Parms FillBankInventory_Parms;

	pFnFillBankInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillBankInventory, &FillBankInventory_Parms, NULL );

	pFnFillBankInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitLoot
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitLoot ( )
{
	static UFunction* pFnInitLoot = NULL;

	if ( ! pFnInitLoot )
		pFnInitLoot = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitLoot" );

	UNowGFXHudScene_eventInitLoot_Parms InitLoot_Parms;

	this->ProcessEvent ( pFnInitLoot, &InitLoot_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TryParseTradeCommand
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sCmd                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

bool UNowGFXHudScene::TryParseTradeCommand ( struct FString sCmd, int iBag, int iSlot )
{
	static UFunction* pFnTryParseTradeCommand = NULL;

	if ( ! pFnTryParseTradeCommand )
		pFnTryParseTradeCommand = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TryParseTradeCommand" );

	UNowGFXHudScene_execTryParseTradeCommand_Parms TryParseTradeCommand_Parms;
	memcpy ( &TryParseTradeCommand_Parms.sCmd, &sCmd, 0xC );
	TryParseTradeCommand_Parms.iBag = iBag;
	TryParseTradeCommand_Parms.iSlot = iSlot;

	pFnTryParseTradeCommand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTryParseTradeCommand, &TryParseTradeCommand_Parms, NULL );

	pFnTryParseTradeCommand->FunctionFlags |= 0x400;

	return TryParseTradeCommand_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.StaticTradeFrom
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// int                            iToSlot                        ( CPF_Parm )

void UNowGFXHudScene::StaticTradeFrom ( int iBag, int iSlot, int iToSlot )
{
	static UFunction* pFnStaticTradeFrom = NULL;

	if ( ! pFnStaticTradeFrom )
		pFnStaticTradeFrom = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.StaticTradeFrom" );

	UNowGFXHudScene_execStaticTradeFrom_Parms StaticTradeFrom_Parms;
	StaticTradeFrom_Parms.iBag = iBag;
	StaticTradeFrom_Parms.iSlot = iSlot;
	StaticTradeFrom_Parms.iToSlot = iToSlot;

	pFnStaticTradeFrom->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStaticTradeFrom, &StaticTradeFrom_Parms, NULL );

	pFnStaticTradeFrom->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.StaticTradeTo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void UNowGFXHudScene::StaticTradeTo ( struct FString sItemGuid, int iBag, int iSlot )
{
	static UFunction* pFnStaticTradeTo = NULL;

	if ( ! pFnStaticTradeTo )
		pFnStaticTradeTo = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.StaticTradeTo" );

	UNowGFXHudScene_execStaticTradeTo_Parms StaticTradeTo_Parms;
	memcpy ( &StaticTradeTo_Parms.sItemGuid, &sItemGuid, 0xC );
	StaticTradeTo_Parms.iBag = iBag;
	StaticTradeTo_Parms.iSlot = iSlot;

	pFnStaticTradeTo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStaticTradeTo, &StaticTradeTo_Parms, NULL );

	pFnStaticTradeTo->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.StaticTradeCancel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::StaticTradeCancel ( )
{
	static UFunction* pFnStaticTradeCancel = NULL;

	if ( ! pFnStaticTradeCancel )
		pFnStaticTradeCancel = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.StaticTradeCancel" );

	UNowGFXHudScene_execStaticTradeCancel_Parms StaticTradeCancel_Parms;

	pFnStaticTradeCancel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStaticTradeCancel, &StaticTradeCancel_Parms, NULL );

	pFnStaticTradeCancel->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.FillLootInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillLootInventory ( )
{
	static UFunction* pFnFillLootInventory = NULL;

	if ( ! pFnFillLootInventory )
		pFnFillLootInventory = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillLootInventory" );

	UNowGFXHudScene_execFillLootInventory_Parms FillLootInventory_Parms;

	pFnFillLootInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillLootInventory, &FillLootInventory_Parms, NULL );

	pFnFillLootInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitHouseTrade
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitHouseTrade ( )
{
	static UFunction* pFnInitHouseTrade = NULL;

	if ( ! pFnInitHouseTrade )
		pFnInitHouseTrade = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitHouseTrade" );

	UNowGFXHudScene_eventInitHouseTrade_Parms InitHouseTrade_Parms;

	this->ProcessEvent ( pFnInitHouseTrade, &InitHouseTrade_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillHouseInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillHouseInventory ( )
{
	static UFunction* pFnFillHouseInventory = NULL;

	if ( ! pFnFillHouseInventory )
		pFnFillHouseInventory = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillHouseInventory" );

	UNowGFXHudScene_execFillHouseInventory_Parms FillHouseInventory_Parms;

	pFnFillHouseInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillHouseInventory, &FillHouseInventory_Parms, NULL );

	pFnFillHouseInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitGMSpawnNPC
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGMSpawnNPC ( )
{
	static UFunction* pFnInitGMSpawnNPC = NULL;

	if ( ! pFnInitGMSpawnNPC )
		pFnInitGMSpawnNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitGMSpawnNPC" );

	UNowGFXHudScene_execInitGMSpawnNPC_Parms InitGMSpawnNPC_Parms;

	this->ProcessEvent ( pFnInitGMSpawnNPC, &InitGMSpawnNPC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillGMSpawnListNpc
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillGMSpawnListNpc ( )
{
	static UFunction* pFnFillGMSpawnListNpc = NULL;

	if ( ! pFnFillGMSpawnListNpc )
		pFnFillGMSpawnListNpc = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillGMSpawnListNpc" );

	UNowGFXHudScene_execFillGMSpawnListNpc_Parms FillGMSpawnListNpc_Parms;

	pFnFillGMSpawnListNpc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillGMSpawnListNpc, &FillGMSpawnListNpc_Parms, NULL );

	pFnFillGMSpawnListNpc->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GMAddAttack
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GMAddAttack ( struct FString sGuid )
{
	static UFunction* pFnGMAddAttack = NULL;

	if ( ! pFnGMAddAttack )
		pFnGMAddAttack = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GMAddAttack" );

	UNowGFXHudScene_execGMAddAttack_Parms GMAddAttack_Parms;
	memcpy ( &GMAddAttack_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGMAddAttack, &GMAddAttack_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGMSpawnAttack
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGMSpawnAttack ( )
{
	static UFunction* pFnInitGMSpawnAttack = NULL;

	if ( ! pFnInitGMSpawnAttack )
		pFnInitGMSpawnAttack = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitGMSpawnAttack" );

	UNowGFXHudScene_execInitGMSpawnAttack_Parms InitGMSpawnAttack_Parms;

	this->ProcessEvent ( pFnInitGMSpawnAttack, &InitGMSpawnAttack_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillGMSpawnListAttacks
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillGMSpawnListAttacks ( )
{
	static UFunction* pFnFillGMSpawnListAttacks = NULL;

	if ( ! pFnFillGMSpawnListAttacks )
		pFnFillGMSpawnListAttacks = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillGMSpawnListAttacks" );

	UNowGFXHudScene_execFillGMSpawnListAttacks_Parms FillGMSpawnListAttacks_Parms;

	pFnFillGMSpawnListAttacks->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillGMSpawnListAttacks, &FillGMSpawnListAttacks_Parms, NULL );

	pFnFillGMSpawnListAttacks->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddToGMSpawnList
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddToGMSpawnList ( struct FString sName, struct FString sGuid )
{
	static UFunction* pFnAddToGMSpawnList = NULL;

	if ( ! pFnAddToGMSpawnList )
		pFnAddToGMSpawnList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddToGMSpawnList" );

	UNowGFXHudScene_eventAddToGMSpawnList_Parms AddToGMSpawnList_Parms;
	memcpy ( &AddToGMSpawnList_Parms.sName, &sName, 0xC );
	memcpy ( &AddToGMSpawnList_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnAddToGMSpawnList, &AddToGMSpawnList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GMSpawnAi
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GMSpawnAi ( struct FString sGuid )
{
	static UFunction* pFnGMSpawnAi = NULL;

	if ( ! pFnGMSpawnAi )
		pFnGMSpawnAi = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GMSpawnAi" );

	UNowGFXHudScene_execGMSpawnAi_Parms GMSpawnAi_Parms;
	memcpy ( &GMSpawnAi_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGMSpawnAi, &GMSpawnAi_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGMSpawnAi
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGMSpawnAi ( )
{
	static UFunction* pFnInitGMSpawnAi = NULL;

	if ( ! pFnInitGMSpawnAi )
		pFnInitGMSpawnAi = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitGMSpawnAi" );

	UNowGFXHudScene_execInitGMSpawnAi_Parms InitGMSpawnAi_Parms;

	this->ProcessEvent ( pFnInitGMSpawnAi, &InitGMSpawnAi_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillGMSpawnListAi
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillGMSpawnListAi ( )
{
	static UFunction* pFnFillGMSpawnListAi = NULL;

	if ( ! pFnFillGMSpawnListAi )
		pFnFillGMSpawnListAi = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillGMSpawnListAi" );

	UNowGFXHudScene_execFillGMSpawnListAi_Parms FillGMSpawnListAi_Parms;

	pFnFillGMSpawnListAi->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillGMSpawnListAi, &FillGMSpawnListAi_Parms, NULL );

	pFnFillGMSpawnListAi->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearList
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearList ( )
{
	static UFunction* pFnclearList = NULL;

	if ( ! pFnclearList )
		pFnclearList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearList" );

	UNowGFXHudScene_execclearList_Parms clearList_Parms;

	this->ProcessEvent ( pFnclearList, &clearList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeListItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeListItem ( struct FString sGuid )
{
	static UFunction* pFnremoveListItem = NULL;

	if ( ! pFnremoveListItem )
		pFnremoveListItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeListItem" );

	UNowGFXHudScene_execremoveListItem_Parms removeListItem_Parms;
	memcpy ( &removeListItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnremoveListItem, &removeListItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addListItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddListItem ( struct FString sGuid, struct FString Title )
{
	static UFunction* pFnaddListItem = NULL;

	if ( ! pFnaddListItem )
		pFnaddListItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addListItem" );

	UNowGFXHudScene_eventaddListItem_Parms addListItem_Parms;
	memcpy ( &addListItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &addListItem_Parms.Title, &Title, 0xC );

	this->ProcessEvent ( pFnaddListItem, &addListItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleList
// [0x00020002] 
// Parameters infos:
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 buttonLabel                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 callbackFunction               ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXHudScene::toggleList ( struct FString DisplayName, struct FString buttonLabel, struct FString callbackFunction, unsigned long bVisible )
{
	static UFunction* pFntoggleList = NULL;

	if ( ! pFntoggleList )
		pFntoggleList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleList" );

	UNowGFXHudScene_exectoggleList_Parms toggleList_Parms;
	memcpy ( &toggleList_Parms.DisplayName, &DisplayName, 0xC );
	memcpy ( &toggleList_Parms.buttonLabel, &buttonLabel, 0xC );
	memcpy ( &toggleList_Parms.callbackFunction, &callbackFunction, 0xC );
	toggleList_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFntoggleList, &toggleList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeSingleOpenUI
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeSingleOpenUI ( )
{
	static UFunction* pFncloseSingleOpenUI = NULL;

	if ( ! pFncloseSingleOpenUI )
		pFncloseSingleOpenUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeSingleOpenUI" );

	UNowGFXHudScene_execcloseSingleOpenUI_Parms closeSingleOpenUI_Parms;

	this->ProcessEvent ( pFncloseSingleOpenUI, &closeSingleOpenUI_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ClosedContainer
// [0x00020002] 
// Parameters infos:
// int                            iDeposit                       ( CPF_Parm )

void UNowGFXHudScene::ClosedContainer ( int iDeposit )
{
	static UFunction* pFnClosedContainer = NULL;

	if ( ! pFnClosedContainer )
		pFnClosedContainer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ClosedContainer" );

	UNowGFXHudScene_execClosedContainer_Parms ClosedContainer_Parms;
	ClosedContainer_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFnClosedContainer, &ClosedContainer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ClosedWindow
// [0x00020002] 
// Parameters infos:
// struct FString                 sWindowID                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ClosedWindow ( struct FString sWindowID )
{
	static UFunction* pFnClosedWindow = NULL;

	if ( ! pFnClosedWindow )
		pFnClosedWindow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ClosedWindow" );

	UNowGFXHudScene_execClosedWindow_Parms ClosedWindow_Parms;
	memcpy ( &ClosedWindow_Parms.sWindowID, &sWindowID, 0xC );

	this->ProcessEvent ( pFnClosedWindow, &ClosedWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.OpenedWindow
// [0x00820002] 
// Parameters infos:
// struct FString                 sWindowID                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::OpenedWindow ( struct FString sWindowID )
{
	static UFunction* pFnOpenedWindow = NULL;

	if ( ! pFnOpenedWindow )
		pFnOpenedWindow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.OpenedWindow" );

	UNowGFXHudScene_execOpenedWindow_Parms OpenedWindow_Parms;
	memcpy ( &OpenedWindow_Parms.sWindowID, &sWindowID, 0xC );

	this->ProcessEvent ( pFnOpenedWindow, &OpenedWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddWindowToTracker
// [0x00824002] 
// Parameters infos:
// struct FString                 sWindowID                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 vLoc                           ( CPF_OptionalParm | CPF_Parm )
// int                            iDeposit                       ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::AddWindowToTracker ( struct FString sWindowID, struct FVector vLoc, int iDeposit )
{
	static UFunction* pFnAddWindowToTracker = NULL;

	if ( ! pFnAddWindowToTracker )
		pFnAddWindowToTracker = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddWindowToTracker" );

	UNowGFXHudScene_execAddWindowToTracker_Parms AddWindowToTracker_Parms;
	memcpy ( &AddWindowToTracker_Parms.sWindowID, &sWindowID, 0xC );
	memcpy ( &AddWindowToTracker_Parms.vLoc, &vLoc, 0xC );
	AddWindowToTracker_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFnAddWindowToTracker, &AddWindowToTracker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TickOpenWindows
// [0x00020002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void UNowGFXHudScene::TickOpenWindows ( float fDeltaTime )
{
	static UFunction* pFnTickOpenWindows = NULL;

	if ( ! pFnTickOpenWindows )
		pFnTickOpenWindows = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TickOpenWindows" );

	UNowGFXHudScene_execTickOpenWindows_Parms TickOpenWindows_Parms;
	TickOpenWindows_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTickOpenWindows, &TickOpenWindows_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.IsDepositOpen
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iDeposit                       ( CPF_Parm )

bool UNowGFXHudScene::eventIsDepositOpen ( int iDeposit )
{
	static UFunction* pFnIsDepositOpen = NULL;

	if ( ! pFnIsDepositOpen )
		pFnIsDepositOpen = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.IsDepositOpen" );

	UNowGFXHudScene_eventIsDepositOpen_Parms IsDepositOpen_Parms;
	IsDepositOpen_Parms.iDeposit = iDeposit;

	this->ProcessEvent ( pFnIsDepositOpen, &IsDepositOpen_Parms, NULL );

	return IsDepositOpen_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.IsWindowOpen
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sWindowID                      ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::IsWindowOpen ( struct FString sWindowID )
{
	static UFunction* pFnIsWindowOpen = NULL;

	if ( ! pFnIsWindowOpen )
		pFnIsWindowOpen = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.IsWindowOpen" );

	UNowGFXHudScene_execIsWindowOpen_Parms IsWindowOpen_Parms;
	memcpy ( &IsWindowOpen_Parms.sWindowID, &sWindowID, 0xC );

	this->ProcessEvent ( pFnIsWindowOpen, &IsWindowOpen_Parms, NULL );

	return IsWindowOpen_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.TurnOffResCriminals
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TurnOffResCriminals ( )
{
	static UFunction* pFnTurnOffResCriminals = NULL;

	if ( ! pFnTurnOffResCriminals )
		pFnTurnOffResCriminals = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TurnOffResCriminals" );

	UNowGFXHudScene_execTurnOffResCriminals_Parms TurnOffResCriminals_Parms;

	this->ProcessEvent ( pFnTurnOffResCriminals, &TurnOffResCriminals_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TurnOnResCriminals
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TurnOnResCriminals ( )
{
	static UFunction* pFnTurnOnResCriminals = NULL;

	if ( ! pFnTurnOnResCriminals )
		pFnTurnOnResCriminals = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TurnOnResCriminals" );

	UNowGFXHudScene_execTurnOnResCriminals_Parms TurnOnResCriminals_Parms;

	this->ProcessEvent ( pFnTurnOnResCriminals, &TurnOnResCriminals_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TurnOnGuards
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TurnOnGuards ( )
{
	static UFunction* pFnTurnOnGuards = NULL;

	if ( ! pFnTurnOnGuards )
		pFnTurnOnGuards = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TurnOnGuards" );

	UNowGFXHudScene_execTurnOnGuards_Parms TurnOnGuards_Parms;

	this->ProcessEvent ( pFnTurnOnGuards, &TurnOnGuards_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TurnOffGuards
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::TurnOffGuards ( )
{
	static UFunction* pFnTurnOffGuards = NULL;

	if ( ! pFnTurnOffGuards )
		pFnTurnOffGuards = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TurnOffGuards" );

	UNowGFXHudScene_execTurnOffGuards_Parms TurnOffGuards_Parms;

	this->ProcessEvent ( pFnTurnOffGuards, &TurnOffGuards_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            RuleIndex                      ( CPF_Parm )
// int                            newValue                       ( CPF_Parm )

void UNowGFXHudScene::SendUpdate ( int RuleIndex, int newValue )
{
	static UFunction* pFnSendUpdate = NULL;

	if ( ! pFnSendUpdate )
		pFnSendUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendUpdate" );

	UNowGFXHudScene_execSendUpdate_Parms SendUpdate_Parms;
	SendUpdate_Parms.RuleIndex = RuleIndex;
	SendUpdate_Parms.newValue = newValue;

	pFnSendUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendUpdate, &SendUpdate_Parms, NULL );

	pFnSendUpdate->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearTrade
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventclearTrade ( )
{
	static UFunction* pFnclearTrade = NULL;

	if ( ! pFnclearTrade )
		pFnclearTrade = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearTrade" );

	UNowGFXHudScene_eventclearTrade_Parms clearTrade_Parms;

	this->ProcessEvent ( pFnclearTrade, &clearTrade_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeTradeWindow
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventcloseTradeWindow ( )
{
	static UFunction* pFncloseTradeWindow = NULL;

	if ( ! pFncloseTradeWindow )
		pFncloseTradeWindow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeTradeWindow" );

	UNowGFXHudScene_eventcloseTradeWindow_Parms closeTradeWindow_Parms;

	this->ProcessEvent ( pFncloseTradeWindow, &closeTradeWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setTradeAccepted
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bAccepted                      ( CPF_Parm )
// unsigned long                  bRemote                        ( CPF_Parm )

void UNowGFXHudScene::eventsetTradeAccepted ( unsigned long bAccepted, unsigned long bRemote )
{
	static UFunction* pFnsetTradeAccepted = NULL;

	if ( ! pFnsetTradeAccepted )
		pFnsetTradeAccepted = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setTradeAccepted" );

	UNowGFXHudScene_eventsetTradeAccepted_Parms setTradeAccepted_Parms;
	setTradeAccepted_Parms.bAccepted = bAccepted;
	setTradeAccepted_Parms.bRemote = bRemote;

	this->ProcessEvent ( pFnsetTradeAccepted, &setTradeAccepted_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeTradeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  isRemote                       ( CPF_Parm )

void UNowGFXHudScene::eventremoveTradeItem ( struct FString sGuid, unsigned long isRemote )
{
	static UFunction* pFnremoveTradeItem = NULL;

	if ( ! pFnremoveTradeItem )
		pFnremoveTradeItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeTradeItem" );

	UNowGFXHudScene_eventremoveTradeItem_Parms removeTradeItem_Parms;
	memcpy ( &removeTradeItem_Parms.sGuid, &sGuid, 0xC );
	removeTradeItem_Parms.isRemote = isRemote;

	this->ProcessEvent ( pFnremoveTradeItem, &removeTradeItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTradeItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  isRemote                       ( CPF_Parm )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddTradeItem ( unsigned long isRemote, struct FString sData )
{
	static UFunction* pFnaddTradeItem = NULL;

	if ( ! pFnaddTradeItem )
		pFnaddTradeItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addTradeItem" );

	UNowGFXHudScene_eventaddTradeItem_Parms addTradeItem_Parms;
	addTradeItem_Parms.isRemote = isRemote;
	memcpy ( &addTradeItem_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnaddTradeItem, &addTradeItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showTradeWindow
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 traderName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventshowTradeWindow ( struct FString traderName, struct FString sData )
{
	static UFunction* pFnshowTradeWindow = NULL;

	if ( ! pFnshowTradeWindow )
		pFnshowTradeWindow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showTradeWindow" );

	UNowGFXHudScene_eventshowTradeWindow_Parms showTradeWindow_Parms;
	memcpy ( &showTradeWindow_Parms.traderName, &traderName, 0xC );
	memcpy ( &showTradeWindow_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnshowTradeWindow, &showTradeWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CancelTrade
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::CancelTrade ( )
{
	static UFunction* pFnCancelTrade = NULL;

	if ( ! pFnCancelTrade )
		pFnCancelTrade = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CancelTrade" );

	UNowGFXHudScene_execCancelTrade_Parms CancelTrade_Parms;

	this->ProcessEvent ( pFnCancelTrade, &CancelTrade_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TradeAccepted
// [0x00020002] 
// Parameters infos:
// unsigned long                  bAccepted                      ( CPF_Parm )

void UNowGFXHudScene::TradeAccepted ( unsigned long bAccepted )
{
	static UFunction* pFnTradeAccepted = NULL;

	if ( ! pFnTradeAccepted )
		pFnTradeAccepted = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TradeAccepted" );

	UNowGFXHudScene_execTradeAccepted_Parms TradeAccepted_Parms;
	TradeAccepted_Parms.bAccepted = bAccepted;

	this->ProcessEvent ( pFnTradeAccepted, &TradeAccepted_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveFromTrade
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveFromTrade ( struct FString sGuid )
{
	static UFunction* pFnRemoveFromTrade = NULL;

	if ( ! pFnRemoveFromTrade )
		pFnRemoveFromTrade = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RemoveFromTrade" );

	UNowGFXHudScene_execRemoveFromTrade_Parms RemoveFromTrade_Parms;
	memcpy ( &RemoveFromTrade_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnRemoveFromTrade, &RemoveFromTrade_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddToTrade
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddToTrade ( struct FString sGuid )
{
	static UFunction* pFnAddToTrade = NULL;

	if ( ! pFnAddToTrade )
		pFnAddToTrade = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddToTrade" );

	UNowGFXHudScene_execAddToTrade_Parms AddToTrade_Parms;
	memcpy ( &AddToTrade_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnAddToTrade, &AddToTrade_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateTradeSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateTradeSession ( )
{
	static UFunction* pFnUpdateTradeSession = NULL;

	if ( ! pFnUpdateTradeSession )
		pFnUpdateTradeSession = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateTradeSession" );

	UNowGFXHudScene_execUpdateTradeSession_Parms UpdateTradeSession_Parms;

	pFnUpdateTradeSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateTradeSession, &UpdateTradeSession_Parms, NULL );

	pFnUpdateTradeSession->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.RemoveFromTradeSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveFromTradeSession ( struct FString sItemGuid )
{
	static UFunction* pFnRemoveFromTradeSession = NULL;

	if ( ! pFnRemoveFromTradeSession )
		pFnRemoveFromTradeSession = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RemoveFromTradeSession" );

	UNowGFXHudScene_execRemoveFromTradeSession_Parms RemoveFromTradeSession_Parms;
	memcpy ( &RemoveFromTradeSession_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnRemoveFromTradeSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFromTradeSession, &RemoveFromTradeSession_Parms, NULL );

	pFnRemoveFromTradeSession->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddToTradeSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddToTradeSession ( struct FString sItemGuid )
{
	static UFunction* pFnAddToTradeSession = NULL;

	if ( ! pFnAddToTradeSession )
		pFnAddToTradeSession = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddToTradeSession" );

	UNowGFXHudScene_execAddToTradeSession_Parms AddToTradeSession_Parms;
	memcpy ( &AddToTradeSession_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnAddToTradeSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddToTradeSession, &AddToTradeSession_Parms, NULL );

	pFnAddToTradeSession->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.DisApproveTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::DisApproveTrade ( )
{
	static UFunction* pFnDisApproveTrade = NULL;

	if ( ! pFnDisApproveTrade )
		pFnDisApproveTrade = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.DisApproveTrade" );

	UNowGFXHudScene_execDisApproveTrade_Parms DisApproveTrade_Parms;

	pFnDisApproveTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisApproveTrade, &DisApproveTrade_Parms, NULL );

	pFnDisApproveTrade->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.ApproveTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::ApproveTrade ( )
{
	static UFunction* pFnApproveTrade = NULL;

	if ( ! pFnApproveTrade )
		pFnApproveTrade = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ApproveTrade" );

	UNowGFXHudScene_execApproveTrade_Parms ApproveTrade_Parms;

	pFnApproveTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApproveTrade, &ApproveTrade_Parms, NULL );

	pFnApproveTrade->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearVendorSale
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearVendorSale ( )
{
	static UFunction* pFnclearVendorSale = NULL;

	if ( ! pFnclearVendorSale )
		pFnclearVendorSale = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearVendorSale" );

	UNowGFXHudScene_execclearVendorSale_Parms clearVendorSale_Parms;

	this->ProcessEvent ( pFnclearVendorSale, &clearVendorSale_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeVendorSale
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeVendorSale ( struct FString sGuid )
{
	static UFunction* pFnremoveVendorSale = NULL;

	if ( ! pFnremoveVendorSale )
		pFnremoveVendorSale = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeVendorSale" );

	UNowGFXHudScene_execremoveVendorSale_Parms removeVendorSale_Parms;
	memcpy ( &removeVendorSale_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnremoveVendorSale, &removeVendorSale_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeVendorPurchase
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeVendorPurchase ( struct FString sGuid )
{
	static UFunction* pFnremoveVendorPurchase = NULL;

	if ( ! pFnremoveVendorPurchase )
		pFnremoveVendorPurchase = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeVendorPurchase" );

	UNowGFXHudScene_execremoveVendorPurchase_Parms removeVendorPurchase_Parms;
	memcpy ( &removeVendorPurchase_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnremoveVendorPurchase, &removeVendorPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addVendorSale
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddVendorSale ( struct FString sData )
{
	static UFunction* pFnaddVendorSale = NULL;

	if ( ! pFnaddVendorSale )
		pFnaddVendorSale = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addVendorSale" );

	UNowGFXHudScene_eventaddVendorSale_Parms addVendorSale_Parms;
	memcpy ( &addVendorSale_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnaddVendorSale, &addVendorSale_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearVendorSellGuids
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearVendorSellGuids ( )
{
	static UFunction* pFnclearVendorSellGuids = NULL;

	if ( ! pFnclearVendorSellGuids )
		pFnclearVendorSellGuids = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearVendorSellGuids" );

	UNowGFXHudScene_execclearVendorSellGuids_Parms clearVendorSellGuids_Parms;

	this->ProcessEvent ( pFnclearVendorSellGuids, &clearVendorSellGuids_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addVendorSellGuid
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addVendorSellGuid ( struct FString sGuid )
{
	static UFunction* pFnaddVendorSellGuid = NULL;

	if ( ! pFnaddVendorSellGuid )
		pFnaddVendorSellGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addVendorSellGuid" );

	UNowGFXHudScene_execaddVendorSellGuid_Parms addVendorSellGuid_Parms;
	memcpy ( &addVendorSellGuid_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnaddVendorSellGuid, &addVendorSellGuid_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearVendorPurchase
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearVendorPurchase ( )
{
	static UFunction* pFnclearVendorPurchase = NULL;

	if ( ! pFnclearVendorPurchase )
		pFnclearVendorPurchase = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearVendorPurchase" );

	UNowGFXHudScene_execclearVendorPurchase_Parms clearVendorPurchase_Parms;

	this->ProcessEvent ( pFnclearVendorPurchase, &clearVendorPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addVendorPurchase
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddVendorPurchase ( struct FString sData )
{
	static UFunction* pFnaddVendorPurchase = NULL;

	if ( ! pFnaddVendorPurchase )
		pFnaddVendorPurchase = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addVendorPurchase" );

	UNowGFXHudScene_eventaddVendorPurchase_Parms addVendorPurchase_Parms;
	memcpy ( &addVendorPurchase_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnaddVendorPurchase, &addVendorPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearVendorItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearVendorItems ( )
{
	static UFunction* pFnclearVendorItems = NULL;

	if ( ! pFnclearVendorItems )
		pFnclearVendorItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearVendorItems" );

	UNowGFXHudScene_execclearVendorItems_Parms clearVendorItems_Parms;

	this->ProcessEvent ( pFnclearVendorItems, &clearVendorItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeVendorItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeVendorItem ( struct FString sGuid )
{
	static UFunction* pFnremoveVendorItem = NULL;

	if ( ! pFnremoveVendorItem )
		pFnremoveVendorItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeVendorItem" );

	UNowGFXHudScene_execremoveVendorItem_Parms removeVendorItem_Parms;
	memcpy ( &removeVendorItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnremoveVendorItem, &removeVendorItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addVendorItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddVendorItem ( struct FString sData )
{
	static UFunction* pFnaddVendorItem = NULL;

	if ( ! pFnaddVendorItem )
		pFnaddVendorItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addVendorItem" );

	UNowGFXHudScene_eventaddVendorItem_Parms addVendorItem_Parms;
	memcpy ( &addVendorItem_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnaddVendorItem, &addVendorItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeVendorWindow
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventcloseVendorWindow ( )
{
	static UFunction* pFncloseVendorWindow = NULL;

	if ( ! pFncloseVendorWindow )
		pFncloseVendorWindow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeVendorWindow" );

	UNowGFXHudScene_eventcloseVendorWindow_Parms closeVendorWindow_Parms;

	this->ProcessEvent ( pFncloseVendorWindow, &closeVendorWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showVendorWindow
// [0x00020002] 
// Parameters infos:
// struct FString                 sVendorGuid                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sVendorName                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bBuyIllegal                    ( CPF_Parm )
// unsigned long                  bBuyStolen                     ( CPF_Parm )

void UNowGFXHudScene::showVendorWindow ( struct FString sVendorGuid, struct FString sVendorName, unsigned long bBuyIllegal, unsigned long bBuyStolen )
{
	static UFunction* pFnshowVendorWindow = NULL;

	if ( ! pFnshowVendorWindow )
		pFnshowVendorWindow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showVendorWindow" );

	UNowGFXHudScene_execshowVendorWindow_Parms showVendorWindow_Parms;
	memcpy ( &showVendorWindow_Parms.sVendorGuid, &sVendorGuid, 0xC );
	memcpy ( &showVendorWindow_Parms.sVendorName, &sVendorName, 0xC );
	showVendorWindow_Parms.bBuyIllegal = bBuyIllegal;
	showVendorWindow_Parms.bBuyStolen = bBuyStolen;

	this->ProcessEvent ( pFnshowVendorWindow, &showVendorWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeVendorPaymentArray
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeVendorPaymentArray ( )
{
	static UFunction* pFnFinalizeVendorPaymentArray = NULL;

	if ( ! pFnFinalizeVendorPaymentArray )
		pFnFinalizeVendorPaymentArray = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizeVendorPaymentArray" );

	UNowGFXHudScene_eventFinalizeVendorPaymentArray_Parms FinalizeVendorPaymentArray_Parms;

	this->ProcessEvent ( pFnFinalizeVendorPaymentArray, &FinalizeVendorPaymentArray_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.HackClearPurchase
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::HackClearPurchase ( )
{
	static UFunction* pFnHackClearPurchase = NULL;

	if ( ! pFnHackClearPurchase )
		pFnHackClearPurchase = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.HackClearPurchase" );

	UNowGFXHudScene_execHackClearPurchase_Parms HackClearPurchase_Parms;

	this->ProcessEvent ( pFnHackClearPurchase, &HackClearPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveFromPurchase
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveFromPurchase ( struct FString sGuid )
{
	static UFunction* pFnRemoveFromPurchase = NULL;

	if ( ! pFnRemoveFromPurchase )
		pFnRemoveFromPurchase = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RemoveFromPurchase" );

	UNowGFXHudScene_execRemoveFromPurchase_Parms RemoveFromPurchase_Parms;
	memcpy ( &RemoveFromPurchase_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnRemoveFromPurchase, &RemoveFromPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddToPurchase
// [0x00820002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iQuantity                      ( CPF_Parm )

void UNowGFXHudScene::AddToPurchase ( struct FString sGuid, int iQuantity )
{
	static UFunction* pFnAddToPurchase = NULL;

	if ( ! pFnAddToPurchase )
		pFnAddToPurchase = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddToPurchase" );

	UNowGFXHudScene_execAddToPurchase_Parms AddToPurchase_Parms;
	memcpy ( &AddToPurchase_Parms.sGuid, &sGuid, 0xC );
	AddToPurchase_Parms.iQuantity = iQuantity;

	this->ProcessEvent ( pFnAddToPurchase, &AddToPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveFromSale
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveFromSale ( struct FString sGuid )
{
	static UFunction* pFnRemoveFromSale = NULL;

	if ( ! pFnRemoveFromSale )
		pFnRemoveFromSale = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RemoveFromSale" );

	UNowGFXHudScene_execRemoveFromSale_Parms RemoveFromSale_Parms;
	memcpy ( &RemoveFromSale_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnRemoveFromSale, &RemoveFromSale_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddToSale
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddToSale ( struct FString sGuid )
{
	static UFunction* pFnAddToSale = NULL;

	if ( ! pFnAddToSale )
		pFnAddToSale = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddToSale" );

	UNowGFXHudScene_execAddToSale_Parms AddToSale_Parms;
	memcpy ( &AddToSale_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnAddToSale, &AddToSale_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.VendorAccepted
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::VendorAccepted ( )
{
	static UFunction* pFnVendorAccepted = NULL;

	if ( ! pFnVendorAccepted )
		pFnVendorAccepted = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.VendorAccepted" );

	UNowGFXHudScene_execVendorAccepted_Parms VendorAccepted_Parms;

	this->ProcessEvent ( pFnVendorAccepted, &VendorAccepted_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitVendor
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitVendor ( )
{
	static UFunction* pFnInitVendor = NULL;

	if ( ! pFnInitVendor )
		pFnInitVendor = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitVendor" );

	UNowGFXHudScene_execInitVendor_Parms InitVendor_Parms;

	this->ProcessEvent ( pFnInitVendor, &InitVendor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateVendorPayment
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateVendorPayment ( )
{
	static UFunction* pFnUpdateVendorPayment = NULL;

	if ( ! pFnUpdateVendorPayment )
		pFnUpdateVendorPayment = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateVendorPayment" );

	UNowGFXHudScene_execUpdateVendorPayment_Parms UpdateVendorPayment_Parms;

	pFnUpdateVendorPayment->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateVendorPayment, &UpdateVendorPayment_Parms, NULL );

	pFnUpdateVendorPayment->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.UpdateVendorPurchase
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateVendorPurchase ( )
{
	static UFunction* pFnUpdateVendorPurchase = NULL;

	if ( ! pFnUpdateVendorPurchase )
		pFnUpdateVendorPurchase = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateVendorPurchase" );

	UNowGFXHudScene_execUpdateVendorPurchase_Parms UpdateVendorPurchase_Parms;

	pFnUpdateVendorPurchase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateVendorPurchase, &UpdateVendorPurchase_Parms, NULL );

	pFnUpdateVendorPurchase->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.UpdateVendorSale
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateVendorSale ( )
{
	static UFunction* pFnUpdateVendorSale = NULL;

	if ( ! pFnUpdateVendorSale )
		pFnUpdateVendorSale = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateVendorSale" );

	UNowGFXHudScene_execUpdateVendorSale_Parms UpdateVendorSale_Parms;

	pFnUpdateVendorSale->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateVendorSale, &UpdateVendorSale_Parms, NULL );

	pFnUpdateVendorSale->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.UpdateVendorItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdateVendorItems ( )
{
	static UFunction* pFnUpdateVendorItems = NULL;

	if ( ! pFnUpdateVendorItems )
		pFnUpdateVendorItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateVendorItems" );

	UNowGFXHudScene_execUpdateVendorItems_Parms UpdateVendorItems_Parms;

	pFnUpdateVendorItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateVendorItems, &UpdateVendorItems_Parms, NULL );

	pFnUpdateVendorItems->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.DoVendorAccepted
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::DoVendorAccepted ( )
{
	static UFunction* pFnDoVendorAccepted = NULL;

	if ( ! pFnDoVendorAccepted )
		pFnDoVendorAccepted = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.DoVendorAccepted" );

	UNowGFXHudScene_execDoVendorAccepted_Parms DoVendorAccepted_Parms;

	pFnDoVendorAccepted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoVendorAccepted, &DoVendorAccepted_Parms, NULL );

	pFnDoVendorAccepted->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.DoVendorBrowse
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::DoVendorBrowse ( )
{
	static UFunction* pFnDoVendorBrowse = NULL;

	if ( ! pFnDoVendorBrowse )
		pFnDoVendorBrowse = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.DoVendorBrowse" );

	UNowGFXHudScene_execDoVendorBrowse_Parms DoVendorBrowse_Parms;

	pFnDoVendorBrowse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoVendorBrowse, &DoVendorBrowse_Parms, NULL );

	pFnDoVendorBrowse->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.clearSlot
// [0x00020002] 
// Parameters infos:
// struct FString                 sWindow                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

void UNowGFXHudScene::clearSlot ( struct FString sWindow, int iSlot )
{
	static UFunction* pFnclearSlot = NULL;

	if ( ! pFnclearSlot )
		pFnclearSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearSlot" );

	UNowGFXHudScene_execclearSlot_Parms clearSlot_Parms;
	memcpy ( &clearSlot_Parms.sWindow, &sWindow, 0xC );
	clearSlot_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnclearSlot, &clearSlot_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearCraftingSlotGuids
// [0x00020002] 
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UNowGFXHudScene::clearCraftingSlotGuids ( int iSlot )
{
	static UFunction* pFnclearCraftingSlotGuids = NULL;

	if ( ! pFnclearCraftingSlotGuids )
		pFnclearCraftingSlotGuids = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearCraftingSlotGuids" );

	UNowGFXHudScene_execclearCraftingSlotGuids_Parms clearCraftingSlotGuids_Parms;
	clearCraftingSlotGuids_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnclearCraftingSlotGuids, &clearCraftingSlotGuids_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addCraftingSlotGuid
// [0x00020002] 
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addCraftingSlotGuid ( int iSlot, struct FString sGuid )
{
	static UFunction* pFnaddCraftingSlotGuid = NULL;

	if ( ! pFnaddCraftingSlotGuid )
		pFnaddCraftingSlotGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addCraftingSlotGuid" );

	UNowGFXHudScene_execaddCraftingSlotGuid_Parms addCraftingSlotGuid_Parms;
	addCraftingSlotGuid_Parms.iSlot = iSlot;
	memcpy ( &addCraftingSlotGuid_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnaddCraftingSlotGuid, &addCraftingSlotGuid_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearCraftingOptions
// [0x00020002] 
// Parameters infos:
// int                            iSection                       ( CPF_Parm )

void UNowGFXHudScene::clearCraftingOptions ( int iSection )
{
	static UFunction* pFnclearCraftingOptions = NULL;

	if ( ! pFnclearCraftingOptions )
		pFnclearCraftingOptions = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearCraftingOptions" );

	UNowGFXHudScene_execclearCraftingOptions_Parms clearCraftingOptions_Parms;
	clearCraftingOptions_Parms.iSection = iSection;

	this->ProcessEvent ( pFnclearCraftingOptions, &clearCraftingOptions_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addCraftingOption
// [0x00020002] 
// Parameters infos:
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            sSection                       ( CPF_Parm )

void UNowGFXHudScene::addCraftingOption ( struct FString sLabel, int sSection )
{
	static UFunction* pFnaddCraftingOption = NULL;

	if ( ! pFnaddCraftingOption )
		pFnaddCraftingOption = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addCraftingOption" );

	UNowGFXHudScene_execaddCraftingOption_Parms addCraftingOption_Parms;
	memcpy ( &addCraftingOption_Parms.sLabel, &sLabel, 0xC );
	addCraftingOption_Parms.sSection = sSection;

	this->ProcessEvent ( pFnaddCraftingOption, &addCraftingOption_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeCraftingWindows
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeCraftingWindows ( )
{
	static UFunction* pFncloseCraftingWindows = NULL;

	if ( ! pFncloseCraftingWindows )
		pFncloseCraftingWindows = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeCraftingWindows" );

	UNowGFXHudScene_execcloseCraftingWindows_Parms closeCraftingWindows_Parms;

	this->ProcessEvent ( pFncloseCraftingWindows, &closeCraftingWindows_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.startRenderToTexture
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::startRenderToTexture ( )
{
	static UFunction* pFnstartRenderToTexture = NULL;

	if ( ! pFnstartRenderToTexture )
		pFnstartRenderToTexture = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.startRenderToTexture" );

	UNowGFXHudScene_execstartRenderToTexture_Parms startRenderToTexture_Parms;

	this->ProcessEvent ( pFnstartRenderToTexture, &startRenderToTexture_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ResetCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ResetCrafting ( )
{
	static UFunction* pFnResetCrafting = NULL;

	if ( ! pFnResetCrafting )
		pFnResetCrafting = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ResetCrafting" );

	UNowGFXHudScene_execResetCrafting_Parms ResetCrafting_Parms;

	this->ProcessEvent ( pFnResetCrafting, &ResetCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetTargetStaticMesh
// [0x00020002] 
// Parameters infos:
// class ANowStaticMeshActor*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowStaticMeshActor* UNowGFXHudScene::GetTargetStaticMesh ( )
{
	static UFunction* pFnGetTargetStaticMesh = NULL;

	if ( ! pFnGetTargetStaticMesh )
		pFnGetTargetStaticMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetTargetStaticMesh" );

	UNowGFXHudScene_execGetTargetStaticMesh_Parms GetTargetStaticMesh_Parms;

	this->ProcessEvent ( pFnGetTargetStaticMesh, &GetTargetStaticMesh_Parms, NULL );

	return GetTargetStaticMesh_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.StartHouseCrafting
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::StartHouseCrafting ( )
{
	static UFunction* pFnStartHouseCrafting = NULL;

	if ( ! pFnStartHouseCrafting )
		pFnStartHouseCrafting = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.StartHouseCrafting" );

	UNowGFXHudScene_execStartHouseCrafting_Parms StartHouseCrafting_Parms;

	pFnStartHouseCrafting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartHouseCrafting, &StartHouseCrafting_Parms, NULL );

	pFnStartHouseCrafting->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showWeaponCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showWeaponCrafting ( )
{
	static UFunction* pFnshowWeaponCrafting = NULL;

	if ( ! pFnshowWeaponCrafting )
		pFnshowWeaponCrafting = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showWeaponCrafting" );

	UNowGFXHudScene_execshowWeaponCrafting_Parms showWeaponCrafting_Parms;

	this->ProcessEvent ( pFnshowWeaponCrafting, &showWeaponCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetIndexFromHandle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetIndexFromHandle ( struct FString sName )
{
	static UFunction* pFnGetIndexFromHandle = NULL;

	if ( ! pFnGetIndexFromHandle )
		pFnGetIndexFromHandle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetIndexFromHandle" );

	UNowGFXHudScene_eventGetIndexFromHandle_Parms GetIndexFromHandle_Parms;
	memcpy ( &GetIndexFromHandle_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetIndexFromHandle, &GetIndexFromHandle_Parms, NULL );

	return GetIndexFromHandle_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetIndexFromBlade
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetIndexFromBlade ( struct FString sName )
{
	static UFunction* pFnGetIndexFromBlade = NULL;

	if ( ! pFnGetIndexFromBlade )
		pFnGetIndexFromBlade = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetIndexFromBlade" );

	UNowGFXHudScene_eventGetIndexFromBlade_Parms GetIndexFromBlade_Parms;
	memcpy ( &GetIndexFromBlade_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetIndexFromBlade, &GetIndexFromBlade_Parms, NULL );

	return GetIndexFromBlade_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromBlade
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromBlade ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromBlade = NULL;

	if ( ! pFnGetSendNameFromBlade )
		pFnGetSendNameFromBlade = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetSendNameFromBlade" );

	UNowGFXHudScene_eventGetSendNameFromBlade_Parms GetSendNameFromBlade_Parms;
	memcpy ( &GetSendNameFromBlade_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromBlade, &GetSendNameFromBlade_Parms, NULL );

	return GetSendNameFromBlade_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromHandle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromHandle ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromHandle = NULL;

	if ( ! pFnGetSendNameFromHandle )
		pFnGetSendNameFromHandle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetSendNameFromHandle" );

	UNowGFXHudScene_eventGetSendNameFromHandle_Parms GetSendNameFromHandle_Parms;
	memcpy ( &GetSendNameFromHandle_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromHandle, &GetSendNameFromHandle_Parms, NULL );

	return GetSendNameFromHandle_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CraftWeapon
// [0x00020002] 
// Parameters infos:
// struct FString                 sHandle                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHead                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCoreMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHandleMatGuid                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHeadMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCustomName                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRecipe                        ( CPF_Parm )

void UNowGFXHudScene::CraftWeapon ( struct FString sHandle, struct FString sHead, struct FString sCoreMatGuid, struct FString sHandleMatGuid, struct FString sHeadMatGuid, struct FString sCustomName, unsigned long bRecipe )
{
	static UFunction* pFnCraftWeapon = NULL;

	if ( ! pFnCraftWeapon )
		pFnCraftWeapon = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CraftWeapon" );

	UNowGFXHudScene_execCraftWeapon_Parms CraftWeapon_Parms;
	memcpy ( &CraftWeapon_Parms.sHandle, &sHandle, 0xC );
	memcpy ( &CraftWeapon_Parms.sHead, &sHead, 0xC );
	memcpy ( &CraftWeapon_Parms.sCoreMatGuid, &sCoreMatGuid, 0xC );
	memcpy ( &CraftWeapon_Parms.sHandleMatGuid, &sHandleMatGuid, 0xC );
	memcpy ( &CraftWeapon_Parms.sHeadMatGuid, &sHeadMatGuid, 0xC );
	memcpy ( &CraftWeapon_Parms.sCustomName, &sCustomName, 0xC );
	CraftWeapon_Parms.bRecipe = bRecipe;

	this->ProcessEvent ( pFnCraftWeapon, &CraftWeapon_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedCraftWeapon
// [0x00020002] 
// Parameters infos:
// struct FString                 sHandle                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHead                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCoreMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHandleMatGuid                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHeadMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangedCraftWeapon ( struct FString sHandle, struct FString sHead, struct FString sCoreMatGuid, struct FString sHandleMatGuid, struct FString sHeadMatGuid )
{
	static UFunction* pFnChangedCraftWeapon = NULL;

	if ( ! pFnChangedCraftWeapon )
		pFnChangedCraftWeapon = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ChangedCraftWeapon" );

	UNowGFXHudScene_execChangedCraftWeapon_Parms ChangedCraftWeapon_Parms;
	memcpy ( &ChangedCraftWeapon_Parms.sHandle, &sHandle, 0xC );
	memcpy ( &ChangedCraftWeapon_Parms.sHead, &sHead, 0xC );
	memcpy ( &ChangedCraftWeapon_Parms.sCoreMatGuid, &sCoreMatGuid, 0xC );
	memcpy ( &ChangedCraftWeapon_Parms.sHandleMatGuid, &sHandleMatGuid, 0xC );
	memcpy ( &ChangedCraftWeapon_Parms.sHeadMatGuid, &sHeadMatGuid, 0xC );

	this->ProcessEvent ( pFnChangedCraftWeapon, &ChangedCraftWeapon_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeWeaponArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeWeaponArrays ( )
{
	static UFunction* pFnFinalizeWeaponArrays = NULL;

	if ( ! pFnFinalizeWeaponArrays )
		pFnFinalizeWeaponArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizeWeaponArrays" );

	UNowGFXHudScene_eventFinalizeWeaponArrays_Parms FinalizeWeaponArrays_Parms;

	this->ProcessEvent ( pFnFinalizeWeaponArrays, &FinalizeWeaponArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddBlade
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillName                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bBlade                         ( CPF_Parm )

void UNowGFXHudScene::eventAddBlade ( struct FString sLabelName, struct FString sSendName, struct FString sSkillName, unsigned long bBlade )
{
	static UFunction* pFnAddBlade = NULL;

	if ( ! pFnAddBlade )
		pFnAddBlade = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddBlade" );

	UNowGFXHudScene_eventAddBlade_Parms AddBlade_Parms;
	memcpy ( &AddBlade_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddBlade_Parms.sSendName, &sSendName, 0xC );
	memcpy ( &AddBlade_Parms.sSkillName, &sSkillName, 0xC );
	AddBlade_Parms.bBlade = bBlade;

	this->ProcessEvent ( pFnAddBlade, &AddBlade_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddHandle
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillName                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bBladeOnly                     ( CPF_Parm )

void UNowGFXHudScene::eventAddHandle ( struct FString sLabelName, struct FString sSendName, struct FString sSkillName, unsigned long bBladeOnly )
{
	static UFunction* pFnAddHandle = NULL;

	if ( ! pFnAddHandle )
		pFnAddHandle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddHandle" );

	UNowGFXHudScene_eventAddHandle_Parms AddHandle_Parms;
	memcpy ( &AddHandle_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddHandle_Parms.sSendName, &sSendName, 0xC );
	memcpy ( &AddHandle_Parms.sSkillName, &sSkillName, 0xC );
	AddHandle_Parms.bBladeOnly = bBladeOnly;

	this->ProcessEvent ( pFnAddHandle, &AddHandle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitWeaponCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitWeaponCrafting ( )
{
	static UFunction* pFnInitWeaponCrafting = NULL;

	if ( ! pFnInitWeaponCrafting )
		pFnInitWeaponCrafting = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitWeaponCrafting" );

	UNowGFXHudScene_execInitWeaponCrafting_Parms InitWeaponCrafting_Parms;

	this->ProcessEvent ( pFnInitWeaponCrafting, &InitWeaponCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.IsValidWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sHandle                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHead                          ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::IsValidWeapon ( struct FString sHandle, struct FString sHead )
{
	static UFunction* pFnIsValidWeapon = NULL;

	if ( ! pFnIsValidWeapon )
		pFnIsValidWeapon = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.IsValidWeapon" );

	UNowGFXHudScene_execIsValidWeapon_Parms IsValidWeapon_Parms;
	memcpy ( &IsValidWeapon_Parms.sHandle, &sHandle, 0xC );
	memcpy ( &IsValidWeapon_Parms.sHead, &sHead, 0xC );

	pFnIsValidWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidWeapon, &IsValidWeapon_Parms, NULL );

	pFnIsValidWeapon->FunctionFlags |= 0x400;

	return IsValidWeapon_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetPreviewStringWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sHandle                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHead                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCoreMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHandleMatGuid                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHeadMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetPreviewStringWeapon ( struct FString sHandle, struct FString sHead, struct FString sCoreMatGuid, struct FString sHandleMatGuid, struct FString sHeadMatGuid )
{
	static UFunction* pFnGetPreviewStringWeapon = NULL;

	if ( ! pFnGetPreviewStringWeapon )
		pFnGetPreviewStringWeapon = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetPreviewStringWeapon" );

	UNowGFXHudScene_execGetPreviewStringWeapon_Parms GetPreviewStringWeapon_Parms;
	memcpy ( &GetPreviewStringWeapon_Parms.sHandle, &sHandle, 0xC );
	memcpy ( &GetPreviewStringWeapon_Parms.sHead, &sHead, 0xC );
	memcpy ( &GetPreviewStringWeapon_Parms.sCoreMatGuid, &sCoreMatGuid, 0xC );
	memcpy ( &GetPreviewStringWeapon_Parms.sHandleMatGuid, &sHandleMatGuid, 0xC );
	memcpy ( &GetPreviewStringWeapon_Parms.sHeadMatGuid, &sHeadMatGuid, 0xC );

	pFnGetPreviewStringWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreviewStringWeapon, &GetPreviewStringWeapon_Parms, NULL );

	pFnGetPreviewStringWeapon->FunctionFlags |= 0x400;

	return GetPreviewStringWeapon_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitWeaponArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitWeaponArrays ( )
{
	static UFunction* pFnInitWeaponArrays = NULL;

	if ( ! pFnInitWeaponArrays )
		pFnInitWeaponArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitWeaponArrays" );

	UNowGFXHudScene_execInitWeaponArrays_Parms InitWeaponArrays_Parms;

	pFnInitWeaponArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitWeaponArrays, &InitWeaponArrays_Parms, NULL );

	pFnInitWeaponArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showBowCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showBowCrafting ( )
{
	static UFunction* pFnshowBowCrafting = NULL;

	if ( ! pFnshowBowCrafting )
		pFnshowBowCrafting = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showBowCrafting" );

	UNowGFXHudScene_execshowBowCrafting_Parms showBowCrafting_Parms;

	this->ProcessEvent ( pFnshowBowCrafting, &showBowCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetSingleFromComp
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::eventGetSingleFromComp ( struct FString sName )
{
	static UFunction* pFnGetSingleFromComp = NULL;

	if ( ! pFnGetSingleFromComp )
		pFnGetSingleFromComp = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetSingleFromComp" );

	UNowGFXHudScene_eventGetSingleFromComp_Parms GetSingleFromComp_Parms;
	memcpy ( &GetSingleFromComp_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSingleFromComp, &GetSingleFromComp_Parms, NULL );

	return GetSingleFromComp_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromShape
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromShape ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromShape = NULL;

	if ( ! pFnGetSendNameFromShape )
		pFnGetSendNameFromShape = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetSendNameFromShape" );

	UNowGFXHudScene_eventGetSendNameFromShape_Parms GetSendNameFromShape_Parms;
	memcpy ( &GetSendNameFromShape_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromShape, &GetSendNameFromShape_Parms, NULL );

	return GetSendNameFromShape_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromType
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromType ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromType = NULL;

	if ( ! pFnGetSendNameFromType )
		pFnGetSendNameFromType = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetSendNameFromType" );

	UNowGFXHudScene_eventGetSendNameFromType_Parms GetSendNameFromType_Parms;
	memcpy ( &GetSendNameFromType_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromType, &GetSendNameFromType_Parms, NULL );

	return GetSendNameFromType_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CraftBow
// [0x00020002] 
// Parameters infos:
// struct FString                 sConstruction                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFamily                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBellyMatGuid                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBackMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// float                          sBalance                       ( CPF_Parm )
// struct FString                 sCustomName                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRecipe                        ( CPF_Parm )

void UNowGFXHudScene::CraftBow ( struct FString sConstruction, struct FString sStyle, struct FString sFamily, struct FString sBellyMatGuid, struct FString sBackMatGuid, float sBalance, struct FString sCustomName, unsigned long bRecipe )
{
	static UFunction* pFnCraftBow = NULL;

	if ( ! pFnCraftBow )
		pFnCraftBow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CraftBow" );

	UNowGFXHudScene_execCraftBow_Parms CraftBow_Parms;
	memcpy ( &CraftBow_Parms.sConstruction, &sConstruction, 0xC );
	memcpy ( &CraftBow_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &CraftBow_Parms.sFamily, &sFamily, 0xC );
	memcpy ( &CraftBow_Parms.sBellyMatGuid, &sBellyMatGuid, 0xC );
	memcpy ( &CraftBow_Parms.sBackMatGuid, &sBackMatGuid, 0xC );
	CraftBow_Parms.sBalance = sBalance;
	memcpy ( &CraftBow_Parms.sCustomName, &sCustomName, 0xC );
	CraftBow_Parms.bRecipe = bRecipe;

	this->ProcessEvent ( pFnCraftBow, &CraftBow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedCraftBow
// [0x00020002] 
// Parameters infos:
// struct FString                 sConstruction                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFamily                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBellyMatGuid                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBackMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangedCraftBow ( struct FString sConstruction, struct FString sStyle, struct FString sFamily, struct FString sBellyMatGuid, struct FString sBackMatGuid )
{
	static UFunction* pFnChangedCraftBow = NULL;

	if ( ! pFnChangedCraftBow )
		pFnChangedCraftBow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ChangedCraftBow" );

	UNowGFXHudScene_execChangedCraftBow_Parms ChangedCraftBow_Parms;
	memcpy ( &ChangedCraftBow_Parms.sConstruction, &sConstruction, 0xC );
	memcpy ( &ChangedCraftBow_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &ChangedCraftBow_Parms.sFamily, &sFamily, 0xC );
	memcpy ( &ChangedCraftBow_Parms.sBellyMatGuid, &sBellyMatGuid, 0xC );
	memcpy ( &ChangedCraftBow_Parms.sBackMatGuid, &sBackMatGuid, 0xC );

	this->ProcessEvent ( pFnChangedCraftBow, &ChangedCraftBow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SortByTypeSkill
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftRangedType       A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftRangedType       B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByTypeSkill ( struct FsCraftRangedType A, struct FsCraftRangedType B )
{
	static UFunction* pFnSortByTypeSkill = NULL;

	if ( ! pFnSortByTypeSkill )
		pFnSortByTypeSkill = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SortByTypeSkill" );

	UNowGFXHudScene_execSortByTypeSkill_Parms SortByTypeSkill_Parms;
	memcpy ( &SortByTypeSkill_Parms.A, &A, 0x24 );
	memcpy ( &SortByTypeSkill_Parms.B, &B, 0x24 );

	this->ProcessEvent ( pFnSortByTypeSkill, &SortByTypeSkill_Parms, NULL );

	return SortByTypeSkill_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SortByShapeSkill
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftRangedShape      A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftRangedShape      B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByShapeSkill ( struct FsCraftRangedShape A, struct FsCraftRangedShape B )
{
	static UFunction* pFnSortByShapeSkill = NULL;

	if ( ! pFnSortByShapeSkill )
		pFnSortByShapeSkill = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SortByShapeSkill" );

	UNowGFXHudScene_execSortByShapeSkill_Parms SortByShapeSkill_Parms;
	memcpy ( &SortByShapeSkill_Parms.A, &A, 0x28 );
	memcpy ( &SortByShapeSkill_Parms.B, &B, 0x28 );

	this->ProcessEvent ( pFnSortByShapeSkill, &SortByShapeSkill_Parms, NULL );

	return SortByShapeSkill_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SortByCompSkill
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftRangedComp       A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftRangedComp       B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByCompSkill ( struct FsCraftRangedComp A, struct FsCraftRangedComp B )
{
	static UFunction* pFnSortByCompSkill = NULL;

	if ( ! pFnSortByCompSkill )
		pFnSortByCompSkill = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SortByCompSkill" );

	UNowGFXHudScene_execSortByCompSkill_Parms SortByCompSkill_Parms;
	memcpy ( &SortByCompSkill_Parms.A, &A, 0x1C );
	memcpy ( &SortByCompSkill_Parms.B, &B, 0x1C );

	this->ProcessEvent ( pFnSortByCompSkill, &SortByCompSkill_Parms, NULL );

	return SortByCompSkill_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.FinalizeRangedArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeRangedArrays ( )
{
	static UFunction* pFnFinalizeRangedArrays = NULL;

	if ( ! pFnFinalizeRangedArrays )
		pFnFinalizeRangedArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizeRangedArrays" );

	UNowGFXHudScene_eventFinalizeRangedArrays_Parms FinalizeRangedArrays_Parms;

	this->ProcessEvent ( pFnFinalizeRangedArrays, &FinalizeRangedArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddComps
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillName                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bSingle                        ( CPF_Parm )

void UNowGFXHudScene::eventAddComps ( struct FString sLabelName, struct FString sSkillName, unsigned long bSingle )
{
	static UFunction* pFnAddComps = NULL;

	if ( ! pFnAddComps )
		pFnAddComps = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddComps" );

	UNowGFXHudScene_eventAddComps_Parms AddComps_Parms;
	memcpy ( &AddComps_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddComps_Parms.sSkillName, &sSkillName, 0xC );
	AddComps_Parms.bSingle = bSingle;

	this->ProcessEvent ( pFnAddComps, &AddComps_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddType
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddType ( struct FString sLabelName, struct FString sSendName, struct FString sSkillName )
{
	static UFunction* pFnAddType = NULL;

	if ( ! pFnAddType )
		pFnAddType = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddType" );

	UNowGFXHudScene_eventAddType_Parms AddType_Parms;
	memcpy ( &AddType_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddType_Parms.sSendName, &sSendName, 0xC );
	memcpy ( &AddType_Parms.sSkillName, &sSkillName, 0xC );

	this->ProcessEvent ( pFnAddType, &AddType_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddShape
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillName                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bWorksSingle                   ( CPF_Parm )

void UNowGFXHudScene::eventAddShape ( struct FString sLabelName, struct FString sSendName, struct FString sSkillName, unsigned long bWorksSingle )
{
	static UFunction* pFnAddShape = NULL;

	if ( ! pFnAddShape )
		pFnAddShape = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddShape" );

	UNowGFXHudScene_eventAddShape_Parms AddShape_Parms;
	memcpy ( &AddShape_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddShape_Parms.sSendName, &sSendName, 0xC );
	memcpy ( &AddShape_Parms.sSkillName, &sSkillName, 0xC );
	AddShape_Parms.bWorksSingle = bWorksSingle;

	this->ProcessEvent ( pFnAddShape, &AddShape_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitRangedCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitRangedCrafting ( )
{
	static UFunction* pFnInitRangedCrafting = NULL;

	if ( ! pFnInitRangedCrafting )
		pFnInitRangedCrafting = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitRangedCrafting" );

	UNowGFXHudScene_execInitRangedCrafting_Parms InitRangedCrafting_Parms;

	this->ProcessEvent ( pFnInitRangedCrafting, &InitRangedCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetPreviewStringRanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sConstruction                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFamily                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBellyMatGuid                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBackMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetPreviewStringRanged ( struct FString sConstruction, struct FString sStyle, struct FString sFamily, struct FString sBellyMatGuid, struct FString sBackMatGuid )
{
	static UFunction* pFnGetPreviewStringRanged = NULL;

	if ( ! pFnGetPreviewStringRanged )
		pFnGetPreviewStringRanged = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetPreviewStringRanged" );

	UNowGFXHudScene_execGetPreviewStringRanged_Parms GetPreviewStringRanged_Parms;
	memcpy ( &GetPreviewStringRanged_Parms.sConstruction, &sConstruction, 0xC );
	memcpy ( &GetPreviewStringRanged_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &GetPreviewStringRanged_Parms.sFamily, &sFamily, 0xC );
	memcpy ( &GetPreviewStringRanged_Parms.sBellyMatGuid, &sBellyMatGuid, 0xC );
	memcpy ( &GetPreviewStringRanged_Parms.sBackMatGuid, &sBackMatGuid, 0xC );

	pFnGetPreviewStringRanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreviewStringRanged, &GetPreviewStringRanged_Parms, NULL );

	pFnGetPreviewStringRanged->FunctionFlags |= 0x400;

	return GetPreviewStringRanged_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitRangedArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitRangedArrays ( )
{
	static UFunction* pFnInitRangedArrays = NULL;

	if ( ! pFnInitRangedArrays )
		pFnInitRangedArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitRangedArrays" );

	UNowGFXHudScene_execInitRangedArrays_Parms InitRangedArrays_Parms;

	pFnInitRangedArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitRangedArrays, &InitRangedArrays_Parms, NULL );

	pFnInitRangedArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showArmorCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showArmorCrafting ( )
{
	static UFunction* pFnshowArmorCrafting = NULL;

	if ( ! pFnshowArmorCrafting )
		pFnshowArmorCrafting = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showArmorCrafting" );

	UNowGFXHudScene_execshowArmorCrafting_Parms showArmorCrafting_Parms;

	this->ProcessEvent ( pFnshowArmorCrafting, &showArmorCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetPreviewPartIDFromString
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetPreviewPartIDFromString ( struct FString sString )
{
	static UFunction* pFnGetPreviewPartIDFromString = NULL;

	if ( ! pFnGetPreviewPartIDFromString )
		pFnGetPreviewPartIDFromString = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetPreviewPartIDFromString" );

	UNowGFXHudScene_eventGetPreviewPartIDFromString_Parms GetPreviewPartIDFromString_Parms;
	memcpy ( &GetPreviewPartIDFromString_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnGetPreviewPartIDFromString, &GetPreviewPartIDFromString_Parms, NULL );

	return GetPreviewPartIDFromString_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetPartIDFromString
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetPartIDFromString ( struct FString sString )
{
	static UFunction* pFnGetPartIDFromString = NULL;

	if ( ! pFnGetPartIDFromString )
		pFnGetPartIDFromString = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetPartIDFromString" );

	UNowGFXHudScene_eventGetPartIDFromString_Parms GetPartIDFromString_Parms;
	memcpy ( &GetPartIDFromString_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnGetPartIDFromString, &GetPartIDFromString_Parms, NULL );

	return GetPartIDFromString_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetIndexFromArmorStyle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetIndexFromArmorStyle ( struct FString sName )
{
	static UFunction* pFnGetIndexFromArmorStyle = NULL;

	if ( ! pFnGetIndexFromArmorStyle )
		pFnGetIndexFromArmorStyle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetIndexFromArmorStyle" );

	UNowGFXHudScene_eventGetIndexFromArmorStyle_Parms GetIndexFromArmorStyle_Parms;
	memcpy ( &GetIndexFromArmorStyle_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetIndexFromArmorStyle, &GetIndexFromArmorStyle_Parms, NULL );

	return GetIndexFromArmorStyle_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromArmorStyle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromArmorStyle ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromArmorStyle = NULL;

	if ( ! pFnGetSendNameFromArmorStyle )
		pFnGetSendNameFromArmorStyle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetSendNameFromArmorStyle" );

	UNowGFXHudScene_eventGetSendNameFromArmorStyle_Parms GetSendNameFromArmorStyle_Parms;
	memcpy ( &GetSendNameFromArmorStyle_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromArmorStyle, &GetSendNameFromArmorStyle_Parms, NULL );

	return GetSendNameFromArmorStyle_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CalculateSuppAmount
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// float                          fPct                           ( CPF_Parm )

float UNowGFXHudScene::eventCalculateSuppAmount ( struct FString sName, float fPct )
{
	static UFunction* pFnCalculateSuppAmount = NULL;

	if ( ! pFnCalculateSuppAmount )
		pFnCalculateSuppAmount = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CalculateSuppAmount" );

	UNowGFXHudScene_eventCalculateSuppAmount_Parms CalculateSuppAmount_Parms;
	memcpy ( &CalculateSuppAmount_Parms.sName, &sName, 0xC );
	CalculateSuppAmount_Parms.fPct = fPct;

	this->ProcessEvent ( pFnCalculateSuppAmount, &CalculateSuppAmount_Parms, NULL );

	return CalculateSuppAmount_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CalculatePrimAmount
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// float                          fPct                           ( CPF_Parm )

float UNowGFXHudScene::eventCalculatePrimAmount ( struct FString sName, float fPct )
{
	static UFunction* pFnCalculatePrimAmount = NULL;

	if ( ! pFnCalculatePrimAmount )
		pFnCalculatePrimAmount = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CalculatePrimAmount" );

	UNowGFXHudScene_eventCalculatePrimAmount_Parms CalculatePrimAmount_Parms;
	memcpy ( &CalculatePrimAmount_Parms.sName, &sName, 0xC );
	CalculatePrimAmount_Parms.fPct = fPct;

	this->ProcessEvent ( pFnCalculatePrimAmount, &CalculatePrimAmount_Parms, NULL );

	return CalculatePrimAmount_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CraftArmor
// [0x00020002] 
// Parameters infos:
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSlot                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSupportMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// float                          sPrimaryDensity                ( CPF_Parm )
// float                          sSupportDensity                ( CPF_Parm )
// struct FString                 sCustomName                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRecipe                        ( CPF_Parm )

void UNowGFXHudScene::CraftArmor ( struct FString sStyle, struct FString sSlot, struct FString sPrimaryMatGuid, struct FString sSupportMatGuid, float sPrimaryDensity, float sSupportDensity, struct FString sCustomName, unsigned long bRecipe )
{
	static UFunction* pFnCraftArmor = NULL;

	if ( ! pFnCraftArmor )
		pFnCraftArmor = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CraftArmor" );

	UNowGFXHudScene_execCraftArmor_Parms CraftArmor_Parms;
	memcpy ( &CraftArmor_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &CraftArmor_Parms.sSlot, &sSlot, 0xC );
	memcpy ( &CraftArmor_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &CraftArmor_Parms.sSupportMatGuid, &sSupportMatGuid, 0xC );
	CraftArmor_Parms.sPrimaryDensity = sPrimaryDensity;
	CraftArmor_Parms.sSupportDensity = sSupportDensity;
	memcpy ( &CraftArmor_Parms.sCustomName, &sCustomName, 0xC );
	CraftArmor_Parms.bRecipe = bRecipe;

	this->ProcessEvent ( pFnCraftArmor, &CraftArmor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateArmorCamera
// [0x00820002] 
// Parameters infos:
// struct FString                 sSlot                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UpdateArmorCamera ( struct FString sSlot )
{
	static UFunction* pFnUpdateArmorCamera = NULL;

	if ( ! pFnUpdateArmorCamera )
		pFnUpdateArmorCamera = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateArmorCamera" );

	UNowGFXHudScene_execUpdateArmorCamera_Parms UpdateArmorCamera_Parms;
	memcpy ( &UpdateArmorCamera_Parms.sSlot, &sSlot, 0xC );

	this->ProcessEvent ( pFnUpdateArmorCamera, &UpdateArmorCamera_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateArmorSlots
// [0x00020002] 
// Parameters infos:
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sLastStyle                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UpdateArmorSlots ( struct FString sStyle, struct FString sLastStyle )
{
	static UFunction* pFnUpdateArmorSlots = NULL;

	if ( ! pFnUpdateArmorSlots )
		pFnUpdateArmorSlots = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateArmorSlots" );

	UNowGFXHudScene_execUpdateArmorSlots_Parms UpdateArmorSlots_Parms;
	memcpy ( &UpdateArmorSlots_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &UpdateArmorSlots_Parms.sLastStyle, &sLastStyle, 0xC );

	this->ProcessEvent ( pFnUpdateArmorSlots, &UpdateArmorSlots_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateMaterialSlots
// [0x00020002] 
// Parameters infos:
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sLastStyle                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UpdateMaterialSlots ( struct FString sStyle, struct FString sLastStyle )
{
	static UFunction* pFnUpdateMaterialSlots = NULL;

	if ( ! pFnUpdateMaterialSlots )
		pFnUpdateMaterialSlots = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateMaterialSlots" );

	UNowGFXHudScene_execUpdateMaterialSlots_Parms UpdateMaterialSlots_Parms;
	memcpy ( &UpdateMaterialSlots_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &UpdateMaterialSlots_Parms.sLastStyle, &sLastStyle, 0xC );

	this->ProcessEvent ( pFnUpdateMaterialSlots, &UpdateMaterialSlots_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedCraftArmor
// [0x00020002] 
// Parameters infos:
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSlot                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSupportMatGuid                ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangedCraftArmor ( struct FString sStyle, struct FString sSlot, struct FString sPrimaryMatGuid, struct FString sSupportMatGuid )
{
	static UFunction* pFnChangedCraftArmor = NULL;

	if ( ! pFnChangedCraftArmor )
		pFnChangedCraftArmor = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ChangedCraftArmor" );

	UNowGFXHudScene_execChangedCraftArmor_Parms ChangedCraftArmor_Parms;
	memcpy ( &ChangedCraftArmor_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &ChangedCraftArmor_Parms.sSlot, &sSlot, 0xC );
	memcpy ( &ChangedCraftArmor_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &ChangedCraftArmor_Parms.sSupportMatGuid, &sSupportMatGuid, 0xC );

	this->ProcessEvent ( pFnChangedCraftArmor, &ChangedCraftArmor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SortByArmorStyleLabel
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftArmorStyle       A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftArmorStyle       B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByArmorStyleLabel ( struct FsCraftArmorStyle A, struct FsCraftArmorStyle B )
{
	static UFunction* pFnSortByArmorStyleLabel = NULL;

	if ( ! pFnSortByArmorStyleLabel )
		pFnSortByArmorStyleLabel = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SortByArmorStyleLabel" );

	UNowGFXHudScene_execSortByArmorStyleLabel_Parms SortByArmorStyleLabel_Parms;
	memcpy ( &SortByArmorStyleLabel_Parms.A, &A, 0x3C );
	memcpy ( &SortByArmorStyleLabel_Parms.B, &B, 0x3C );

	this->ProcessEvent ( pFnSortByArmorStyleLabel, &SortByArmorStyleLabel_Parms, NULL );

	return SortByArmorStyleLabel_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.FinalizeArmorArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeArmorArrays ( )
{
	static UFunction* pFnFinalizeArmorArrays = NULL;

	if ( ! pFnFinalizeArmorArrays )
		pFnFinalizeArmorArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizeArmorArrays" );

	UNowGFXHudScene_eventFinalizeArmorArrays_Parms FinalizeArmorArrays_Parms;

	this->ProcessEvent ( pFnFinalizeArmorArrays, &FinalizeArmorArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddStyle
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSkillName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iMaterialFlag                  ( CPF_Parm )
// int                            iPieceFlags                    ( CPF_Parm )
// float                          fVisMinValue                   ( CPF_Parm )
// float                          fVisMaxValue                   ( CPF_Parm )
// float                          fnVisMinValue                  ( CPF_Parm )
// float                          fnVisMaxValue                  ( CPF_Parm )

void UNowGFXHudScene::eventAddStyle ( struct FString sLabelName, struct FString sSendName, struct FString sSkillName, int iMaterialFlag, int iPieceFlags, float fVisMinValue, float fVisMaxValue, float fnVisMinValue, float fnVisMaxValue )
{
	static UFunction* pFnAddStyle = NULL;

	if ( ! pFnAddStyle )
		pFnAddStyle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddStyle" );

	UNowGFXHudScene_eventAddStyle_Parms AddStyle_Parms;
	memcpy ( &AddStyle_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddStyle_Parms.sSendName, &sSendName, 0xC );
	memcpy ( &AddStyle_Parms.sSkillName, &sSkillName, 0xC );
	AddStyle_Parms.iMaterialFlag = iMaterialFlag;
	AddStyle_Parms.iPieceFlags = iPieceFlags;
	AddStyle_Parms.fVisMinValue = fVisMinValue;
	AddStyle_Parms.fVisMaxValue = fVisMaxValue;
	AddStyle_Parms.fnVisMinValue = fnVisMinValue;
	AddStyle_Parms.fnVisMaxValue = fnVisMaxValue;

	this->ProcessEvent ( pFnAddStyle, &AddStyle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddPart
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iFlag                          ( CPF_Parm )

void UNowGFXHudScene::eventAddPart ( struct FString sLabelName, int iFlag )
{
	static UFunction* pFnAddPart = NULL;

	if ( ! pFnAddPart )
		pFnAddPart = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddPart" );

	UNowGFXHudScene_eventAddPart_Parms AddPart_Parms;
	memcpy ( &AddPart_Parms.sLabelName, &sLabelName, 0xC );
	AddPart_Parms.iFlag = iFlag;

	this->ProcessEvent ( pFnAddPart, &AddPart_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddArmorMaterial
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iFlag                          ( CPF_Parm )

void UNowGFXHudScene::eventAddArmorMaterial ( struct FString sLabelName, int iFlag )
{
	static UFunction* pFnAddArmorMaterial = NULL;

	if ( ! pFnAddArmorMaterial )
		pFnAddArmorMaterial = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddArmorMaterial" );

	UNowGFXHudScene_eventAddArmorMaterial_Parms AddArmorMaterial_Parms;
	memcpy ( &AddArmorMaterial_Parms.sLabelName, &sLabelName, 0xC );
	AddArmorMaterial_Parms.iFlag = iFlag;

	this->ProcessEvent ( pFnAddArmorMaterial, &AddArmorMaterial_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitArmorCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitArmorCrafting ( )
{
	static UFunction* pFnInitArmorCrafting = NULL;

	if ( ! pFnInitArmorCrafting )
		pFnInitArmorCrafting = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitArmorCrafting" );

	UNowGFXHudScene_execInitArmorCrafting_Parms InitArmorCrafting_Parms;

	this->ProcessEvent ( pFnInitArmorCrafting, &InitArmorCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetPreviewStringArmor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSlot                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSupportMatGuid                ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetPreviewStringArmor ( struct FString sStyle, struct FString sSlot, struct FString sPrimaryMatGuid, struct FString sSupportMatGuid )
{
	static UFunction* pFnGetPreviewStringArmor = NULL;

	if ( ! pFnGetPreviewStringArmor )
		pFnGetPreviewStringArmor = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetPreviewStringArmor" );

	UNowGFXHudScene_execGetPreviewStringArmor_Parms GetPreviewStringArmor_Parms;
	memcpy ( &GetPreviewStringArmor_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &GetPreviewStringArmor_Parms.sSlot, &sSlot, 0xC );
	memcpy ( &GetPreviewStringArmor_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &GetPreviewStringArmor_Parms.sSupportMatGuid, &sSupportMatGuid, 0xC );

	pFnGetPreviewStringArmor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreviewStringArmor, &GetPreviewStringArmor_Parms, NULL );

	pFnGetPreviewStringArmor->FunctionFlags |= 0x400;

	return GetPreviewStringArmor_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitArmorArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitArmorArrays ( )
{
	static UFunction* pFnInitArmorArrays = NULL;

	if ( ! pFnInitArmorArrays )
		pFnInitArmorArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitArmorArrays" );

	UNowGFXHudScene_execInitArmorArrays_Parms InitArmorArrays_Parms;

	pFnInitArmorArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitArmorArrays, &InitArmorArrays_Parms, NULL );

	pFnInitArmorArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showShieldCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showShieldCrafting ( )
{
	static UFunction* pFnshowShieldCrafting = NULL;

	if ( ! pFnshowShieldCrafting )
		pFnshowShieldCrafting = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showShieldCrafting" );

	UNowGFXHudScene_execshowShieldCrafting_Parms showShieldCrafting_Parms;

	this->ProcessEvent ( pFnshowShieldCrafting, &showShieldCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetIDFromShieldType
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetIDFromShieldType ( struct FString sName )
{
	static UFunction* pFnGetIDFromShieldType = NULL;

	if ( ! pFnGetIDFromShieldType )
		pFnGetIDFromShieldType = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetIDFromShieldType" );

	UNowGFXHudScene_eventGetIDFromShieldType_Parms GetIDFromShieldType_Parms;
	memcpy ( &GetIDFromShieldType_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetIDFromShieldType, &GetIDFromShieldType_Parms, NULL );

	return GetIDFromShieldType_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetIDFromShieldFrame
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetIDFromShieldFrame ( struct FString sName )
{
	static UFunction* pFnGetIDFromShieldFrame = NULL;

	if ( ! pFnGetIDFromShieldFrame )
		pFnGetIDFromShieldFrame = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetIDFromShieldFrame" );

	UNowGFXHudScene_eventGetIDFromShieldFrame_Parms GetIDFromShieldFrame_Parms;
	memcpy ( &GetIDFromShieldFrame_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetIDFromShieldFrame, &GetIDFromShieldFrame_Parms, NULL );

	return GetIDFromShieldFrame_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromShieldFrame
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromShieldFrame ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromShieldFrame = NULL;

	if ( ! pFnGetSendNameFromShieldFrame )
		pFnGetSendNameFromShieldFrame = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetSendNameFromShieldFrame" );

	UNowGFXHudScene_eventGetSendNameFromShieldFrame_Parms GetSendNameFromShieldFrame_Parms;
	memcpy ( &GetSendNameFromShieldFrame_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromShieldFrame, &GetSendNameFromShieldFrame_Parms, NULL );

	return GetSendNameFromShieldFrame_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromShieldType
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromShieldType ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromShieldType = NULL;

	if ( ! pFnGetSendNameFromShieldType )
		pFnGetSendNameFromShieldType = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetSendNameFromShieldType" );

	UNowGFXHudScene_eventGetSendNameFromShieldType_Parms GetSendNameFromShieldType_Parms;
	memcpy ( &GetSendNameFromShieldType_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromShieldType, &GetSendNameFromShieldType_Parms, NULL );

	return GetSendNameFromShieldType_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CraftShield
// [0x00020002] 
// Parameters infos:
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFrame                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCoatMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFrameMatGuid                  ( CPF_Parm | CPF_NeedCtorLink )
// float                          fPrimaryDensity                ( CPF_Parm )
// float                          fCoatDensity                   ( CPF_Parm )
// struct FString                 sCustomName                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRecipe                        ( CPF_Parm )

void UNowGFXHudScene::CraftShield ( struct FString sStyle, struct FString sFrame, struct FString sPrimaryMatGuid, struct FString sCoatMatGuid, struct FString sFrameMatGuid, float fPrimaryDensity, float fCoatDensity, struct FString sCustomName, unsigned long bRecipe )
{
	static UFunction* pFnCraftShield = NULL;

	if ( ! pFnCraftShield )
		pFnCraftShield = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CraftShield" );

	UNowGFXHudScene_execCraftShield_Parms CraftShield_Parms;
	memcpy ( &CraftShield_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &CraftShield_Parms.sFrame, &sFrame, 0xC );
	memcpy ( &CraftShield_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &CraftShield_Parms.sCoatMatGuid, &sCoatMatGuid, 0xC );
	memcpy ( &CraftShield_Parms.sFrameMatGuid, &sFrameMatGuid, 0xC );
	CraftShield_Parms.fPrimaryDensity = fPrimaryDensity;
	CraftShield_Parms.fCoatDensity = fCoatDensity;
	memcpy ( &CraftShield_Parms.sCustomName, &sCustomName, 0xC );
	CraftShield_Parms.bRecipe = bRecipe;

	this->ProcessEvent ( pFnCraftShield, &CraftShield_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SortByShieldFrameID
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftShieldFrame      A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftShieldFrame      B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByShieldFrameID ( struct FsCraftShieldFrame A, struct FsCraftShieldFrame B )
{
	static UFunction* pFnSortByShieldFrameID = NULL;

	if ( ! pFnSortByShieldFrameID )
		pFnSortByShieldFrameID = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SortByShieldFrameID" );

	UNowGFXHudScene_execSortByShieldFrameID_Parms SortByShieldFrameID_Parms;
	memcpy ( &SortByShieldFrameID_Parms.A, &A, 0x1C );
	memcpy ( &SortByShieldFrameID_Parms.B, &B, 0x1C );

	this->ProcessEvent ( pFnSortByShieldFrameID, &SortByShieldFrameID_Parms, NULL );

	return SortByShieldFrameID_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SortByShieldTypeID
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftShieldType       A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftShieldType       B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByShieldTypeID ( struct FsCraftShieldType A, struct FsCraftShieldType B )
{
	static UFunction* pFnSortByShieldTypeID = NULL;

	if ( ! pFnSortByShieldTypeID )
		pFnSortByShieldTypeID = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SortByShieldTypeID" );

	UNowGFXHudScene_execSortByShieldTypeID_Parms SortByShieldTypeID_Parms;
	memcpy ( &SortByShieldTypeID_Parms.A, &A, 0x1C );
	memcpy ( &SortByShieldTypeID_Parms.B, &B, 0x1C );

	this->ProcessEvent ( pFnSortByShieldTypeID, &SortByShieldTypeID_Parms, NULL );

	return SortByShieldTypeID_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.ChangedCraftShield
// [0x00020002] 
// Parameters infos:
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFrame                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCoatMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFrameMatGuid                  ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangedCraftShield ( struct FString sStyle, struct FString sFrame, struct FString sPrimaryMatGuid, struct FString sCoatMatGuid, struct FString sFrameMatGuid )
{
	static UFunction* pFnChangedCraftShield = NULL;

	if ( ! pFnChangedCraftShield )
		pFnChangedCraftShield = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ChangedCraftShield" );

	UNowGFXHudScene_execChangedCraftShield_Parms ChangedCraftShield_Parms;
	memcpy ( &ChangedCraftShield_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &ChangedCraftShield_Parms.sFrame, &sFrame, 0xC );
	memcpy ( &ChangedCraftShield_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &ChangedCraftShield_Parms.sCoatMatGuid, &sCoatMatGuid, 0xC );
	memcpy ( &ChangedCraftShield_Parms.sFrameMatGuid, &sFrameMatGuid, 0xC );

	this->ProcessEvent ( pFnChangedCraftShield, &ChangedCraftShield_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateShieldFrames
// [0x00020002] 
// Parameters infos:
// int                            iShieldType                    ( CPF_Parm )

void UNowGFXHudScene::UpdateShieldFrames ( int iShieldType )
{
	static UFunction* pFnUpdateShieldFrames = NULL;

	if ( ! pFnUpdateShieldFrames )
		pFnUpdateShieldFrames = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateShieldFrames" );

	UNowGFXHudScene_execUpdateShieldFrames_Parms UpdateShieldFrames_Parms;
	UpdateShieldFrames_Parms.iShieldType = iShieldType;

	this->ProcessEvent ( pFnUpdateShieldFrames, &UpdateShieldFrames_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeShieldArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeShieldArrays ( )
{
	static UFunction* pFnFinalizeShieldArrays = NULL;

	if ( ! pFnFinalizeShieldArrays )
		pFnFinalizeShieldArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizeShieldArrays" );

	UNowGFXHudScene_eventFinalizeShieldArrays_Parms FinalizeShieldArrays_Parms;

	this->ProcessEvent ( pFnFinalizeShieldArrays, &FinalizeShieldArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddShieldFrame
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iShieldType                    ( CPF_Parm )

void UNowGFXHudScene::eventAddShieldFrame ( struct FString sLabelName, struct FString sSendName, int iShieldType )
{
	static UFunction* pFnAddShieldFrame = NULL;

	if ( ! pFnAddShieldFrame )
		pFnAddShieldFrame = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddShieldFrame" );

	UNowGFXHudScene_eventAddShieldFrame_Parms AddShieldFrame_Parms;
	memcpy ( &AddShieldFrame_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddShieldFrame_Parms.sSendName, &sSendName, 0xC );
	AddShieldFrame_Parms.iShieldType = iShieldType;

	this->ProcessEvent ( pFnAddShieldFrame, &AddShieldFrame_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddShieldStyle
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iShieldType                    ( CPF_Parm )

void UNowGFXHudScene::eventAddShieldStyle ( struct FString sLabelName, struct FString sSendName, int iShieldType )
{
	static UFunction* pFnAddShieldStyle = NULL;

	if ( ! pFnAddShieldStyle )
		pFnAddShieldStyle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddShieldStyle" );

	UNowGFXHudScene_eventAddShieldStyle_Parms AddShieldStyle_Parms;
	memcpy ( &AddShieldStyle_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddShieldStyle_Parms.sSendName, &sSendName, 0xC );
	AddShieldStyle_Parms.iShieldType = iShieldType;

	this->ProcessEvent ( pFnAddShieldStyle, &AddShieldStyle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitShieldCrafting
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitShieldCrafting ( )
{
	static UFunction* pFnInitShieldCrafting = NULL;

	if ( ! pFnInitShieldCrafting )
		pFnInitShieldCrafting = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitShieldCrafting" );

	UNowGFXHudScene_execInitShieldCrafting_Parms InitShieldCrafting_Parms;

	this->ProcessEvent ( pFnInitShieldCrafting, &InitShieldCrafting_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetPreviewStringShield
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sStyle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFrame                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCoatMatGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sFrameMatGuid                  ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetPreviewStringShield ( struct FString sStyle, struct FString sFrame, struct FString sPrimaryMatGuid, struct FString sCoatMatGuid, struct FString sFrameMatGuid )
{
	static UFunction* pFnGetPreviewStringShield = NULL;

	if ( ! pFnGetPreviewStringShield )
		pFnGetPreviewStringShield = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetPreviewStringShield" );

	UNowGFXHudScene_execGetPreviewStringShield_Parms GetPreviewStringShield_Parms;
	memcpy ( &GetPreviewStringShield_Parms.sStyle, &sStyle, 0xC );
	memcpy ( &GetPreviewStringShield_Parms.sFrame, &sFrame, 0xC );
	memcpy ( &GetPreviewStringShield_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &GetPreviewStringShield_Parms.sCoatMatGuid, &sCoatMatGuid, 0xC );
	memcpy ( &GetPreviewStringShield_Parms.sFrameMatGuid, &sFrameMatGuid, 0xC );

	pFnGetPreviewStringShield->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreviewStringShield, &GetPreviewStringShield_Parms, NULL );

	pFnGetPreviewStringShield->FunctionFlags |= 0x400;

	return GetPreviewStringShield_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitShieldArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitShieldArrays ( )
{
	static UFunction* pFnInitShieldArrays = NULL;

	if ( ! pFnInitShieldArrays )
		pFnInitShieldArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitShieldArrays" );

	UNowGFXHudScene_execInitShieldArrays_Parms InitShieldArrays_Parms;

	pFnInitShieldArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitShieldArrays, &InitShieldArrays_Parms, NULL );

	pFnInitShieldArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showExtraction
// [0x00020002] 
// Parameters infos:
// struct FString                 sWorkbench                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bAllowCatalyst                 ( CPF_Parm )

void UNowGFXHudScene::showExtraction ( struct FString sWorkbench, unsigned long bAllowCatalyst )
{
	static UFunction* pFnshowExtraction = NULL;

	if ( ! pFnshowExtraction )
		pFnshowExtraction = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showExtraction" );

	UNowGFXHudScene_execshowExtraction_Parms showExtraction_Parms;
	memcpy ( &showExtraction_Parms.sWorkbench, &sWorkbench, 0xC );
	showExtraction_Parms.bAllowCatalyst = bAllowCatalyst;

	this->ProcessEvent ( pFnshowExtraction, &showExtraction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ExtractItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCatalystMatGuid               ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ExtractItem ( struct FString sPrimaryMatGuid, struct FString sCatalystMatGuid )
{
	static UFunction* pFnExtractItem = NULL;

	if ( ! pFnExtractItem )
		pFnExtractItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ExtractItem" );

	UNowGFXHudScene_execExtractItem_Parms ExtractItem_Parms;
	memcpy ( &ExtractItem_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &ExtractItem_Parms.sCatalystMatGuid, &sCatalystMatGuid, 0xC );

	this->ProcessEvent ( pFnExtractItem, &ExtractItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeExtractionArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeExtractionArrays ( )
{
	static UFunction* pFnFinalizeExtractionArrays = NULL;

	if ( ! pFnFinalizeExtractionArrays )
		pFnFinalizeExtractionArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizeExtractionArrays" );

	UNowGFXHudScene_eventFinalizeExtractionArrays_Parms FinalizeExtractionArrays_Parms;

	this->ProcessEvent ( pFnFinalizeExtractionArrays, &FinalizeExtractionArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitExtraction
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitExtraction ( )
{
	static UFunction* pFnInitExtraction = NULL;

	if ( ! pFnInitExtraction )
		pFnInitExtraction = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitExtraction" );

	UNowGFXHudScene_execInitExtraction_Parms InitExtraction_Parms;

	this->ProcessEvent ( pFnInitExtraction, &InitExtraction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitExtractionArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitExtractionArrays ( )
{
	static UFunction* pFnInitExtractionArrays = NULL;

	if ( ! pFnInitExtractionArrays )
		pFnInitExtractionArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitExtractionArrays" );

	UNowGFXHudScene_execInitExtractionArrays_Parms InitExtractionArrays_Parms;

	pFnInitExtractionArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitExtractionArrays, &InitExtractionArrays_Parms, NULL );

	pFnInitExtractionArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showRefining
// [0x00020002] 
// Parameters infos:
// struct FString                 sWorkbench                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bAllowCatalyst                 ( CPF_Parm )

void UNowGFXHudScene::showRefining ( struct FString sWorkbench, unsigned long bAllowCatalyst )
{
	static UFunction* pFnshowRefining = NULL;

	if ( ! pFnshowRefining )
		pFnshowRefining = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showRefining" );

	UNowGFXHudScene_execshowRefining_Parms showRefining_Parms;
	memcpy ( &showRefining_Parms.sWorkbench, &sWorkbench, 0xC );
	showRefining_Parms.bAllowCatalyst = bAllowCatalyst;

	this->ProcessEvent ( pFnshowRefining, &showRefining_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RefineItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sPrimaryMatGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCatalystMatGuidA              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sCatalystMatGuidB              ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RefineItem ( struct FString sPrimaryMatGuid, struct FString sCatalystMatGuidA, struct FString sCatalystMatGuidB )
{
	static UFunction* pFnRefineItem = NULL;

	if ( ! pFnRefineItem )
		pFnRefineItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RefineItem" );

	UNowGFXHudScene_execRefineItem_Parms RefineItem_Parms;
	memcpy ( &RefineItem_Parms.sPrimaryMatGuid, &sPrimaryMatGuid, 0xC );
	memcpy ( &RefineItem_Parms.sCatalystMatGuidA, &sCatalystMatGuidA, 0xC );
	memcpy ( &RefineItem_Parms.sCatalystMatGuidB, &sCatalystMatGuidB, 0xC );

	this->ProcessEvent ( pFnRefineItem, &RefineItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeRefiningArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeRefiningArrays ( )
{
	static UFunction* pFnFinalizeRefiningArrays = NULL;

	if ( ! pFnFinalizeRefiningArrays )
		pFnFinalizeRefiningArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizeRefiningArrays" );

	UNowGFXHudScene_eventFinalizeRefiningArrays_Parms FinalizeRefiningArrays_Parms;

	this->ProcessEvent ( pFnFinalizeRefiningArrays, &FinalizeRefiningArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitRefining
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitRefining ( )
{
	static UFunction* pFnInitRefining = NULL;

	if ( ! pFnInitRefining )
		pFnInitRefining = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitRefining" );

	UNowGFXHudScene_execInitRefining_Parms InitRefining_Parms;

	this->ProcessEvent ( pFnInitRefining, &InitRefining_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitRefiningArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitRefiningArrays ( )
{
	static UFunction* pFnInitRefiningArrays = NULL;

	if ( ! pFnInitRefiningArrays )
		pFnInitRefiningArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitRefiningArrays" );

	UNowGFXHudScene_execInitRefiningArrays_Parms InitRefiningArrays_Parms;

	pFnInitRefiningArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitRefiningArrays, &InitRefiningArrays_Parms, NULL );

	pFnInitRefiningArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitSkinning
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitSkinning ( )
{
	static UFunction* pFnInitSkinning = NULL;

	if ( ! pFnInitSkinning )
		pFnInitSkinning = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitSkinning" );

	UNowGFXHudScene_execInitSkinning_Parms InitSkinning_Parms;

	this->ProcessEvent ( pFnInitSkinning, &InitSkinning_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showPotionMaking
// [0x00020002] 
// Parameters infos:
// struct FString                 sWorkbench                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNumSlots                      ( CPF_Parm )

void UNowGFXHudScene::showPotionMaking ( struct FString sWorkbench, int iNumSlots )
{
	static UFunction* pFnshowPotionMaking = NULL;

	if ( ! pFnshowPotionMaking )
		pFnshowPotionMaking = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showPotionMaking" );

	UNowGFXHudScene_execshowPotionMaking_Parms showPotionMaking_Parms;
	memcpy ( &showPotionMaking_Parms.sWorkbench, &sWorkbench, 0xC );
	showPotionMaking_Parms.iNumSlots = iNumSlots;

	this->ProcessEvent ( pFnshowPotionMaking, &showPotionMaking_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CraftPotion
// [0x00020002] 
// Parameters infos:
// struct FString                 sToolGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid1               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid2               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid3               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid4               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid5               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid6               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid7               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid8               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid9               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid10              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid11              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid12              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid13              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid14              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::CraftPotion ( struct FString sToolGuid, struct FString sIngredientGuid1, struct FString sIngredientGuid2, struct FString sIngredientGuid3, struct FString sIngredientGuid4, struct FString sIngredientGuid5, struct FString sIngredientGuid6, struct FString sIngredientGuid7, struct FString sIngredientGuid8, struct FString sIngredientGuid9, struct FString sIngredientGuid10, struct FString sIngredientGuid11, struct FString sIngredientGuid12, struct FString sIngredientGuid13, struct FString sIngredientGuid14, struct FString sName )
{
	static UFunction* pFnCraftPotion = NULL;

	if ( ! pFnCraftPotion )
		pFnCraftPotion = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CraftPotion" );

	UNowGFXHudScene_execCraftPotion_Parms CraftPotion_Parms;
	memcpy ( &CraftPotion_Parms.sToolGuid, &sToolGuid, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid1, &sIngredientGuid1, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid2, &sIngredientGuid2, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid3, &sIngredientGuid3, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid4, &sIngredientGuid4, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid5, &sIngredientGuid5, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid6, &sIngredientGuid6, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid7, &sIngredientGuid7, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid8, &sIngredientGuid8, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid9, &sIngredientGuid9, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid10, &sIngredientGuid10, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid11, &sIngredientGuid11, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid12, &sIngredientGuid12, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid13, &sIngredientGuid13, 0xC );
	memcpy ( &CraftPotion_Parms.sIngredientGuid14, &sIngredientGuid14, 0xC );
	memcpy ( &CraftPotion_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnCraftPotion, &CraftPotion_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizePotionMakingArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizePotionMakingArrays ( )
{
	static UFunction* pFnFinalizePotionMakingArrays = NULL;

	if ( ! pFnFinalizePotionMakingArrays )
		pFnFinalizePotionMakingArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizePotionMakingArrays" );

	UNowGFXHudScene_eventFinalizePotionMakingArrays_Parms FinalizePotionMakingArrays_Parms;

	this->ProcessEvent ( pFnFinalizePotionMakingArrays, &FinalizePotionMakingArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPotionMaking
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPotionMaking ( )
{
	static UFunction* pFnInitPotionMaking = NULL;

	if ( ! pFnInitPotionMaking )
		pFnInitPotionMaking = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPotionMaking" );

	UNowGFXHudScene_execInitPotionMaking_Parms InitPotionMaking_Parms;

	this->ProcessEvent ( pFnInitPotionMaking, &InitPotionMaking_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetCraftingSlotNumbers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowGFXHudScene::GetCraftingSlotNumbers ( )
{
	static UFunction* pFnGetCraftingSlotNumbers = NULL;

	if ( ! pFnGetCraftingSlotNumbers )
		pFnGetCraftingSlotNumbers = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetCraftingSlotNumbers" );

	UNowGFXHudScene_execGetCraftingSlotNumbers_Parms GetCraftingSlotNumbers_Parms;

	pFnGetCraftingSlotNumbers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCraftingSlotNumbers, &GetCraftingSlotNumbers_Parms, NULL );

	pFnGetCraftingSlotNumbers->FunctionFlags |= 0x400;

	return GetCraftingSlotNumbers_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.SendCraftPotion
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sToolGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid1               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid2               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid3               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid4               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid5               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid6               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid7               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid8               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid9               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid10              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid11              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid12              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid13              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid14              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRecipe                        ( CPF_Parm )

void UNowGFXHudScene::SendCraftPotion ( struct FString sToolGuid, struct FString sIngredientGuid1, struct FString sIngredientGuid2, struct FString sIngredientGuid3, struct FString sIngredientGuid4, struct FString sIngredientGuid5, struct FString sIngredientGuid6, struct FString sIngredientGuid7, struct FString sIngredientGuid8, struct FString sIngredientGuid9, struct FString sIngredientGuid10, struct FString sIngredientGuid11, struct FString sIngredientGuid12, struct FString sIngredientGuid13, struct FString sIngredientGuid14, struct FString sName, unsigned long bRecipe )
{
	static UFunction* pFnSendCraftPotion = NULL;

	if ( ! pFnSendCraftPotion )
		pFnSendCraftPotion = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendCraftPotion" );

	UNowGFXHudScene_execSendCraftPotion_Parms SendCraftPotion_Parms;
	memcpy ( &SendCraftPotion_Parms.sToolGuid, &sToolGuid, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid1, &sIngredientGuid1, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid2, &sIngredientGuid2, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid3, &sIngredientGuid3, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid4, &sIngredientGuid4, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid5, &sIngredientGuid5, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid6, &sIngredientGuid6, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid7, &sIngredientGuid7, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid8, &sIngredientGuid8, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid9, &sIngredientGuid9, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid10, &sIngredientGuid10, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid11, &sIngredientGuid11, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid12, &sIngredientGuid12, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid13, &sIngredientGuid13, 0xC );
	memcpy ( &SendCraftPotion_Parms.sIngredientGuid14, &sIngredientGuid14, 0xC );
	memcpy ( &SendCraftPotion_Parms.sName, &sName, 0xC );
	SendCraftPotion_Parms.bRecipe = bRecipe;

	pFnSendCraftPotion->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendCraftPotion, &SendCraftPotion_Parms, NULL );

	pFnSendCraftPotion->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitPotionMakingArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitPotionMakingArrays ( )
{
	static UFunction* pFnInitPotionMakingArrays = NULL;

	if ( ! pFnInitPotionMakingArrays )
		pFnInitPotionMakingArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPotionMakingArrays" );

	UNowGFXHudScene_execInitPotionMakingArrays_Parms InitPotionMakingArrays_Parms;

	pFnInitPotionMakingArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitPotionMakingArrays, &InitPotionMakingArrays_Parms, NULL );

	pFnInitPotionMakingArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showCooking
// [0x00020002] 
// Parameters infos:
// struct FString                 sWorkbench                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSlots                         ( CPF_Parm )

void UNowGFXHudScene::showCooking ( struct FString sWorkbench, int iSlots )
{
	static UFunction* pFnshowCooking = NULL;

	if ( ! pFnshowCooking )
		pFnshowCooking = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showCooking" );

	UNowGFXHudScene_execshowCooking_Parms showCooking_Parms;
	memcpy ( &showCooking_Parms.sWorkbench, &sWorkbench, 0xC );
	showCooking_Parms.iSlots = iSlots;

	this->ProcessEvent ( pFnshowCooking, &showCooking_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CookItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sToolGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid1               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid2               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid3               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid4               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid5               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid6               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid7               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid8               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::CookItem ( struct FString sToolGuid, struct FString sIngredientGuid1, struct FString sIngredientGuid2, struct FString sIngredientGuid3, struct FString sIngredientGuid4, struct FString sIngredientGuid5, struct FString sIngredientGuid6, struct FString sIngredientGuid7, struct FString sIngredientGuid8, struct FString sName )
{
	static UFunction* pFnCookItem = NULL;

	if ( ! pFnCookItem )
		pFnCookItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CookItem" );

	UNowGFXHudScene_execCookItem_Parms CookItem_Parms;
	memcpy ( &CookItem_Parms.sToolGuid, &sToolGuid, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid1, &sIngredientGuid1, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid2, &sIngredientGuid2, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid3, &sIngredientGuid3, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid4, &sIngredientGuid4, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid5, &sIngredientGuid5, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid6, &sIngredientGuid6, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid7, &sIngredientGuid7, 0xC );
	memcpy ( &CookItem_Parms.sIngredientGuid8, &sIngredientGuid8, 0xC );
	memcpy ( &CookItem_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnCookItem, &CookItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeCookingArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeCookingArrays ( )
{
	static UFunction* pFnFinalizeCookingArrays = NULL;

	if ( ! pFnFinalizeCookingArrays )
		pFnFinalizeCookingArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizeCookingArrays" );

	UNowGFXHudScene_eventFinalizeCookingArrays_Parms FinalizeCookingArrays_Parms;

	this->ProcessEvent ( pFnFinalizeCookingArrays, &FinalizeCookingArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitCooking
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitCooking ( )
{
	static UFunction* pFnInitCooking = NULL;

	if ( ! pFnInitCooking )
		pFnInitCooking = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitCooking" );

	UNowGFXHudScene_execInitCooking_Parms InitCooking_Parms;

	this->ProcessEvent ( pFnInitCooking, &InitCooking_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendCookItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sToolGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid1               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid2               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid3               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid4               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid5               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid6               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid7               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIngredientGuid8               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRecipe                        ( CPF_Parm )

void UNowGFXHudScene::SendCookItem ( struct FString sToolGuid, struct FString sIngredientGuid1, struct FString sIngredientGuid2, struct FString sIngredientGuid3, struct FString sIngredientGuid4, struct FString sIngredientGuid5, struct FString sIngredientGuid6, struct FString sIngredientGuid7, struct FString sIngredientGuid8, struct FString sName, unsigned long bRecipe )
{
	static UFunction* pFnSendCookItem = NULL;

	if ( ! pFnSendCookItem )
		pFnSendCookItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendCookItem" );

	UNowGFXHudScene_execSendCookItem_Parms SendCookItem_Parms;
	memcpy ( &SendCookItem_Parms.sToolGuid, &sToolGuid, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid1, &sIngredientGuid1, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid2, &sIngredientGuid2, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid3, &sIngredientGuid3, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid4, &sIngredientGuid4, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid5, &sIngredientGuid5, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid6, &sIngredientGuid6, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid7, &sIngredientGuid7, 0xC );
	memcpy ( &SendCookItem_Parms.sIngredientGuid8, &sIngredientGuid8, 0xC );
	memcpy ( &SendCookItem_Parms.sName, &sName, 0xC );
	SendCookItem_Parms.bRecipe = bRecipe;

	pFnSendCookItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendCookItem, &SendCookItem_Parms, NULL );

	pFnSendCookItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.InitCookingArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitCookingArrays ( )
{
	static UFunction* pFnInitCookingArrays = NULL;

	if ( ! pFnInitCookingArrays )
		pFnInitCookingArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitCookingArrays" );

	UNowGFXHudScene_execInitCookingArrays_Parms InitCookingArrays_Parms;

	pFnInitCookingArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitCookingArrays, &InitCookingArrays_Parms, NULL );

	pFnInitCookingArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeDyeTub
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeDyeTub ( )
{
	static UFunction* pFncloseDyeTub = NULL;

	if ( ! pFncloseDyeTub )
		pFncloseDyeTub = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeDyeTub" );

	UNowGFXHudScene_execcloseDyeTub_Parms closeDyeTub_Parms;

	this->ProcessEvent ( pFncloseDyeTub, &closeDyeTub_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addDye
// [0x00020002] 
// Parameters infos:
// int                            iColorRed                      ( CPF_Parm )
// int                            iColorGreen                    ( CPF_Parm )
// int                            iColorBlue                     ( CPF_Parm )
// int                            iColorAlpha                    ( CPF_Parm )

void UNowGFXHudScene::addDye ( int iColorRed, int iColorGreen, int iColorBlue, int iColorAlpha )
{
	static UFunction* pFnaddDye = NULL;

	if ( ! pFnaddDye )
		pFnaddDye = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addDye" );

	UNowGFXHudScene_execaddDye_Parms addDye_Parms;
	addDye_Parms.iColorRed = iColorRed;
	addDye_Parms.iColorGreen = iColorGreen;
	addDye_Parms.iColorBlue = iColorBlue;
	addDye_Parms.iColorAlpha = iColorAlpha;

	this->ProcessEvent ( pFnaddDye, &addDye_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showDyeTub
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iColorRed                      ( CPF_Parm )
// int                            iColorGreen                    ( CPF_Parm )
// int                            iColorBlue                     ( CPF_Parm )
// int                            iColorAlpha                    ( CPF_Parm )
// int                            iDyeCount                      ( CPF_Parm )
// struct FString                 sDyeableSlots                  ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showDyeTub ( struct FString sGuid, int iColorRed, int iColorGreen, int iColorBlue, int iColorAlpha, int iDyeCount, struct FString sDyeableSlots )
{
	static UFunction* pFnshowDyeTub = NULL;

	if ( ! pFnshowDyeTub )
		pFnshowDyeTub = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showDyeTub" );

	UNowGFXHudScene_execshowDyeTub_Parms showDyeTub_Parms;
	memcpy ( &showDyeTub_Parms.sGuid, &sGuid, 0xC );
	showDyeTub_Parms.iColorRed = iColorRed;
	showDyeTub_Parms.iColorGreen = iColorGreen;
	showDyeTub_Parms.iColorBlue = iColorBlue;
	showDyeTub_Parms.iColorAlpha = iColorAlpha;
	showDyeTub_Parms.iDyeCount = iDyeCount;
	memcpy ( &showDyeTub_Parms.sDyeableSlots, &sDyeableSlots, 0xC );

	this->ProcessEvent ( pFnshowDyeTub, &showDyeTub_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeDyeArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeDyeArrays ( )
{
	static UFunction* pFnFinalizeDyeArrays = NULL;

	if ( ! pFnFinalizeDyeArrays )
		pFnFinalizeDyeArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizeDyeArrays" );

	UNowGFXHudScene_eventFinalizeDyeArrays_Parms FinalizeDyeArrays_Parms;

	this->ProcessEvent ( pFnFinalizeDyeArrays, &FinalizeDyeArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DyeItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iColorRed                      ( CPF_Parm )
// int                            iColorGreen                    ( CPF_Parm )
// int                            iColorBlue                     ( CPF_Parm )
// int                            iColorAlpha                    ( CPF_Parm )

void UNowGFXHudScene::DyeItem ( struct FString sItemGuid, int iColorRed, int iColorGreen, int iColorBlue, int iColorAlpha )
{
	static UFunction* pFnDyeItem = NULL;

	if ( ! pFnDyeItem )
		pFnDyeItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.DyeItem" );

	UNowGFXHudScene_execDyeItem_Parms DyeItem_Parms;
	memcpy ( &DyeItem_Parms.sItemGuid, &sItemGuid, 0xC );
	DyeItem_Parms.iColorRed = iColorRed;
	DyeItem_Parms.iColorGreen = iColorGreen;
	DyeItem_Parms.iColorBlue = iColorBlue;
	DyeItem_Parms.iColorAlpha = iColorAlpha;

	this->ProcessEvent ( pFnDyeItem, &DyeItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddDyeToTub
// [0x00020002] 
// Parameters infos:
// struct FString                 sTubGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sDyeGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddDyeToTub ( struct FString sTubGuid, struct FString sDyeGuid )
{
	static UFunction* pFnAddDyeToTub = NULL;

	if ( ! pFnAddDyeToTub )
		pFnAddDyeToTub = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddDyeToTub" );

	UNowGFXHudScene_execAddDyeToTub_Parms AddDyeToTub_Parms;
	memcpy ( &AddDyeToTub_Parms.sTubGuid, &sTubGuid, 0xC );
	memcpy ( &AddDyeToTub_Parms.sDyeGuid, &sDyeGuid, 0xC );

	this->ProcessEvent ( pFnAddDyeToTub, &AddDyeToTub_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitDyeTub
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitDyeTub ( )
{
	static UFunction* pFnInitDyeTub = NULL;

	if ( ! pFnInitDyeTub )
		pFnInitDyeTub = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitDyeTub" );

	UNowGFXHudScene_execInitDyeTub_Parms InitDyeTub_Parms;

	this->ProcessEvent ( pFnInitDyeTub, &InitDyeTub_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ClosedDyeTub
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::ClosedDyeTub ( )
{
	static UFunction* pFnClosedDyeTub = NULL;

	if ( ! pFnClosedDyeTub )
		pFnClosedDyeTub = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ClosedDyeTub" );

	UNowGFXHudScene_execClosedDyeTub_Parms ClosedDyeTub_Parms;

	pFnClosedDyeTub->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClosedDyeTub, &ClosedDyeTub_Parms, NULL );

	pFnClosedDyeTub->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendDyeItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iColorRed                      ( CPF_Parm )
// int                            iColorGreen                    ( CPF_Parm )
// int                            iColorBlue                     ( CPF_Parm )
// int                            iColorAlpha                    ( CPF_Parm )

void UNowGFXHudScene::SendDyeItem ( struct FString sItemGuid, int iColorRed, int iColorGreen, int iColorBlue, int iColorAlpha )
{
	static UFunction* pFnSendDyeItem = NULL;

	if ( ! pFnSendDyeItem )
		pFnSendDyeItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendDyeItem" );

	UNowGFXHudScene_execSendDyeItem_Parms SendDyeItem_Parms;
	memcpy ( &SendDyeItem_Parms.sItemGuid, &sItemGuid, 0xC );
	SendDyeItem_Parms.iColorRed = iColorRed;
	SendDyeItem_Parms.iColorGreen = iColorGreen;
	SendDyeItem_Parms.iColorBlue = iColorBlue;
	SendDyeItem_Parms.iColorAlpha = iColorAlpha;

	pFnSendDyeItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendDyeItem, &SendDyeItem_Parms, NULL );

	pFnSendDyeItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendUseDye
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sDyeGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendUseDye ( struct FString sDyeGuid )
{
	static UFunction* pFnSendUseDye = NULL;

	if ( ! pFnSendUseDye )
		pFnSendUseDye = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendUseDye" );

	UNowGFXHudScene_execSendUseDye_Parms SendUseDye_Parms;
	memcpy ( &SendUseDye_Parms.sDyeGuid, &sDyeGuid, 0xC );

	pFnSendUseDye->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendUseDye, &SendUseDye_Parms, NULL );

	pFnSendUseDye->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetColorFromItem
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            R                              ( CPF_Parm | CPF_OutParm )
// int                            G                              ( CPF_Parm | CPF_OutParm )
// int                            B                              ( CPF_Parm | CPF_OutParm )
// int                            A                              ( CPF_Parm | CPF_OutParm )

void UNowGFXHudScene::GetColorFromItem ( struct FString sGuid, int* R, int* G, int* B, int* A )
{
	static UFunction* pFnGetColorFromItem = NULL;

	if ( ! pFnGetColorFromItem )
		pFnGetColorFromItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetColorFromItem" );

	UNowGFXHudScene_execGetColorFromItem_Parms GetColorFromItem_Parms;
	memcpy ( &GetColorFromItem_Parms.sGuid, &sGuid, 0xC );

	pFnGetColorFromItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetColorFromItem, &GetColorFromItem_Parms, NULL );

	pFnGetColorFromItem->FunctionFlags |= 0x400;

	if ( R )
		*R = GetColorFromItem_Parms.R;

	if ( G )
		*G = GetColorFromItem_Parms.G;

	if ( B )
		*B = GetColorFromItem_Parms.B;

	if ( A )
		*A = GetColorFromItem_Parms.A;
};

// Function NowGame.NowGFXHudScene.InitDyeArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitDyeArrays ( )
{
	static UFunction* pFnInitDyeArrays = NULL;

	if ( ! pFnInitDyeArrays )
		pFnInitDyeArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitDyeArrays" );

	UNowGFXHudScene_execInitDyeArrays_Parms InitDyeArrays_Parms;

	pFnInitDyeArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitDyeArrays, &InitDyeArrays_Parms, NULL );

	pFnInitDyeArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AssignBagID
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sBagGuid                       ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventAssignBagID ( struct FString sBagGuid )
{
	static UFunction* pFnAssignBagID = NULL;

	if ( ! pFnAssignBagID )
		pFnAssignBagID = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AssignBagID" );

	UNowGFXHudScene_eventAssignBagID_Parms AssignBagID_Parms;
	memcpy ( &AssignBagID_Parms.sBagGuid, &sBagGuid, 0xC );

	this->ProcessEvent ( pFnAssignBagID, &AssignBagID_Parms, NULL );

	return AssignBagID_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CloseBag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventCloseBag ( struct FString sGuid )
{
	static UFunction* pFnCloseBag = NULL;

	if ( ! pFnCloseBag )
		pFnCloseBag = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CloseBag" );

	UNowGFXHudScene_eventCloseBag_Parms CloseBag_Parms;
	memcpy ( &CloseBag_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnCloseBag, &CloseBag_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.IsBagOpen
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventIsBagOpen ( struct FString sGuid )
{
	static UFunction* pFnIsBagOpen = NULL;

	if ( ! pFnIsBagOpen )
		pFnIsBagOpen = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.IsBagOpen" );

	UNowGFXHudScene_eventIsBagOpen_Parms IsBagOpen_Parms;
	memcpy ( &IsBagOpen_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnIsBagOpen, &IsBagOpen_Parms, NULL );

	return IsBagOpen_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitBag
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sBagGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBagName                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            iBagSize                       ( CPF_Parm )
// unsigned long                  bTrack                         ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::eventInitBag ( struct FString sBagGuid, struct FString sBagName, int iBagSize, unsigned long bTrack )
{
	static UFunction* pFnInitBag = NULL;

	if ( ! pFnInitBag )
		pFnInitBag = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitBag" );

	UNowGFXHudScene_eventInitBag_Parms InitBag_Parms;
	memcpy ( &InitBag_Parms.sBagGuid, &sBagGuid, 0xC );
	memcpy ( &InitBag_Parms.sBagName, &sBagName, 0xC );
	InitBag_Parms.iBagSize = iBagSize;
	InitBag_Parms.bTrack = bTrack;

	this->ProcessEvent ( pFnInitBag, &InitBag_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillBag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sBagGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            iDepositID                     ( CPF_Parm )
// int                            iBagSize                       ( CPF_Parm )

void UNowGFXHudScene::FillBag ( struct FString sBagGuid, int iDepositID, int iBagSize )
{
	static UFunction* pFnFillBag = NULL;

	if ( ! pFnFillBag )
		pFnFillBag = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillBag" );

	UNowGFXHudScene_execFillBag_Parms FillBag_Parms;
	memcpy ( &FillBag_Parms.sBagGuid, &sBagGuid, 0xC );
	FillBag_Parms.iDepositID = iDepositID;
	FillBag_Parms.iBagSize = iBagSize;

	pFnFillBag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillBag, &FillBag_Parms, NULL );

	pFnFillBag->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.ClosePilfering
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventClosePilfering ( )
{
	static UFunction* pFnClosePilfering = NULL;

	if ( ! pFnClosePilfering )
		pFnClosePilfering = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ClosePilfering" );

	UNowGFXHudScene_eventClosePilfering_Parms ClosePilfering_Parms;

	this->ProcessEvent ( pFnClosePilfering, &ClosePilfering_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdatePilfering
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventUpdatePilfering ( )
{
	static UFunction* pFnUpdatePilfering = NULL;

	if ( ! pFnUpdatePilfering )
		pFnUpdatePilfering = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdatePilfering" );

	UNowGFXHudScene_eventUpdatePilfering_Parms UpdatePilfering_Parms;

	this->ProcessEvent ( pFnUpdatePilfering, &UpdatePilfering_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPilfering
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitPilfering ( )
{
	static UFunction* pFnInitPilfering = NULL;

	if ( ! pFnInitPilfering )
		pFnInitPilfering = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPilfering" );

	UNowGFXHudScene_eventInitPilfering_Parms InitPilfering_Parms;

	this->ProcessEvent ( pFnInitPilfering, &InitPilfering_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillPilferingInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillPilferingInventory ( )
{
	static UFunction* pFnFillPilferingInventory = NULL;

	if ( ! pFnFillPilferingInventory )
		pFnFillPilferingInventory = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillPilferingInventory" );

	UNowGFXHudScene_execFillPilferingInventory_Parms FillPilferingInventory_Parms;

	pFnFillPilferingInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillPilferingInventory, &FillPilferingInventory_Parms, NULL );

	pFnFillPilferingInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeCombine
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeCombine ( )
{
	static UFunction* pFncloseCombine = NULL;

	if ( ! pFncloseCombine )
		pFncloseCombine = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeCombine" );

	UNowGFXHudScene_execcloseCombine_Parms closeCombine_Parms;

	this->ProcessEvent ( pFncloseCombine, &closeCombine_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showCombine
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showCombine ( )
{
	static UFunction* pFnshowCombine = NULL;

	if ( ! pFnshowCombine )
		pFnshowCombine = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showCombine" );

	UNowGFXHudScene_execshowCombine_Parms showCombine_Parms;

	this->ProcessEvent ( pFnshowCombine, &showCombine_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeCombineItemsArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeCombineItemsArrays ( )
{
	static UFunction* pFnFinalizeCombineItemsArrays = NULL;

	if ( ! pFnFinalizeCombineItemsArrays )
		pFnFinalizeCombineItemsArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizeCombineItemsArrays" );

	UNowGFXHudScene_eventFinalizeCombineItemsArrays_Parms FinalizeCombineItemsArrays_Parms;

	this->ProcessEvent ( pFnFinalizeCombineItemsArrays, &FinalizeCombineItemsArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CombineItems
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemGuid1                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sItemGuid2                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::CombineItems ( struct FString sItemGuid1, struct FString sItemGuid2 )
{
	static UFunction* pFnCombineItems = NULL;

	if ( ! pFnCombineItems )
		pFnCombineItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CombineItems" );

	UNowGFXHudScene_execCombineItems_Parms CombineItems_Parms;
	memcpy ( &CombineItems_Parms.sItemGuid1, &sItemGuid1, 0xC );
	memcpy ( &CombineItems_Parms.sItemGuid2, &sItemGuid2, 0xC );

	this->ProcessEvent ( pFnCombineItems, &CombineItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitCombineItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitCombineItems ( )
{
	static UFunction* pFnInitCombineItems = NULL;

	if ( ! pFnInitCombineItems )
		pFnInitCombineItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitCombineItems" );

	UNowGFXHudScene_execInitCombineItems_Parms InitCombineItems_Parms;

	this->ProcessEvent ( pFnInitCombineItems, &InitCombineItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitCombineItemsArray
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitCombineItemsArray ( )
{
	static UFunction* pFnInitCombineItemsArray = NULL;

	if ( ! pFnInitCombineItemsArray )
		pFnInitCombineItemsArray = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitCombineItemsArray" );

	UNowGFXHudScene_execInitCombineItemsArray_Parms InitCombineItemsArray_Parms;

	pFnInitCombineItemsArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitCombineItemsArray, &InitCombineItemsArray_Parms, NULL );

	pFnInitCombineItemsArray->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendCombineItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemA                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sItemB                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendCombineItems ( struct FString sItemA, struct FString sItemB )
{
	static UFunction* pFnSendCombineItems = NULL;

	if ( ! pFnSendCombineItems )
		pFnSendCombineItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendCombineItems" );

	UNowGFXHudScene_execSendCombineItems_Parms SendCombineItems_Parms;
	memcpy ( &SendCombineItems_Parms.sItemA, &sItemA, 0xC );
	memcpy ( &SendCombineItems_Parms.sItemB, &sItemB, 0xC );

	pFnSendCombineItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendCombineItems, &SendCombineItems_Parms, NULL );

	pFnSendCombineItems->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.renderBrokerTree
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::renderBrokerTree ( )
{
	static UFunction* pFnrenderBrokerTree = NULL;

	if ( ! pFnrenderBrokerTree )
		pFnrenderBrokerTree = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.renderBrokerTree" );

	UNowGFXHudScene_execrenderBrokerTree_Parms renderBrokerTree_Parms;

	this->ProcessEvent ( pFnrenderBrokerTree, &renderBrokerTree_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addBrokerLocation
// [0x00020002] 
// Parameters infos:
// struct FString                 sLocation                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addBrokerLocation ( struct FString sLocation )
{
	static UFunction* pFnaddBrokerLocation = NULL;

	if ( ! pFnaddBrokerLocation )
		pFnaddBrokerLocation = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addBrokerLocation" );

	UNowGFXHudScene_execaddBrokerLocation_Parms addBrokerLocation_Parms;
	memcpy ( &addBrokerLocation_Parms.sLocation, &sLocation, 0xC );

	this->ProcessEvent ( pFnaddBrokerLocation, &addBrokerLocation_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearBrokerLocations
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearBrokerLocations ( )
{
	static UFunction* pFnclearBrokerLocations = NULL;

	if ( ! pFnclearBrokerLocations )
		pFnclearBrokerLocations = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearBrokerLocations" );

	UNowGFXHudScene_execclearBrokerLocations_Parms clearBrokerLocations_Parms;

	this->ProcessEvent ( pFnclearBrokerLocations, &clearBrokerLocations_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeBroker
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeBroker ( )
{
	static UFunction* pFncloseBroker = NULL;

	if ( ! pFncloseBroker )
		pFncloseBroker = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeBroker" );

	UNowGFXHudScene_execcloseBroker_Parms closeBroker_Parms;

	this->ProcessEvent ( pFncloseBroker, &closeBroker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.refreshBrokerSelling
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::refreshBrokerSelling ( )
{
	static UFunction* pFnrefreshBrokerSelling = NULL;

	if ( ! pFnrefreshBrokerSelling )
		pFnrefreshBrokerSelling = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.refreshBrokerSelling" );

	UNowGFXHudScene_execrefreshBrokerSelling_Parms refreshBrokerSelling_Parms;

	this->ProcessEvent ( pFnrefreshBrokerSelling, &refreshBrokerSelling_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.refreshBrokerItems
// [0x00020002] 
// Parameters infos:
// int                            iCurrentPage                   ( CPF_Parm )
// unsigned long                  bNextPage                      ( CPF_Parm )

void UNowGFXHudScene::refreshBrokerItems ( int iCurrentPage, unsigned long bNextPage )
{
	static UFunction* pFnrefreshBrokerItems = NULL;

	if ( ! pFnrefreshBrokerItems )
		pFnrefreshBrokerItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.refreshBrokerItems" );

	UNowGFXHudScene_execrefreshBrokerItems_Parms refreshBrokerItems_Parms;
	refreshBrokerItems_Parms.iCurrentPage = iCurrentPage;
	refreshBrokerItems_Parms.bNextPage = bNextPage;

	this->ProcessEvent ( pFnrefreshBrokerItems, &refreshBrokerItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearBrokerSelling
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearBrokerSelling ( )
{
	static UFunction* pFnclearBrokerSelling = NULL;

	if ( ! pFnclearBrokerSelling )
		pFnclearBrokerSelling = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearBrokerSelling" );

	UNowGFXHudScene_execclearBrokerSelling_Parms clearBrokerSelling_Parms;

	this->ProcessEvent ( pFnclearBrokerSelling, &clearBrokerSelling_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearBrokerItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearBrokerItems ( )
{
	static UFunction* pFnclearBrokerItems = NULL;

	if ( ! pFnclearBrokerItems )
		pFnclearBrokerItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearBrokerItems" );

	UNowGFXHudScene_execclearBrokerItems_Parms clearBrokerItems_Parms;

	this->ProcessEvent ( pFnclearBrokerItems, &clearBrokerItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addBrokerSelling
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iExpires                       ( CPF_Parm )
// struct FString                 sLocation                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddBrokerSelling ( struct FString sData, int iExpires, struct FString sLocation )
{
	static UFunction* pFnaddBrokerSelling = NULL;

	if ( ! pFnaddBrokerSelling )
		pFnaddBrokerSelling = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addBrokerSelling" );

	UNowGFXHudScene_eventaddBrokerSelling_Parms addBrokerSelling_Parms;
	memcpy ( &addBrokerSelling_Parms.sData, &sData, 0xC );
	addBrokerSelling_Parms.iExpires = iExpires;
	memcpy ( &addBrokerSelling_Parms.sLocation, &sLocation, 0xC );

	this->ProcessEvent ( pFnaddBrokerSelling, &addBrokerSelling_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addBrokerItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sAvatar                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sLocation                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddBrokerItem ( struct FString sData, struct FString sAvatar, struct FString sLocation )
{
	static UFunction* pFnaddBrokerItem = NULL;

	if ( ! pFnaddBrokerItem )
		pFnaddBrokerItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addBrokerItem" );

	UNowGFXHudScene_eventaddBrokerItem_Parms addBrokerItem_Parms;
	memcpy ( &addBrokerItem_Parms.sData, &sData, 0xC );
	memcpy ( &addBrokerItem_Parms.sAvatar, &sAvatar, 0xC );
	memcpy ( &addBrokerItem_Parms.sLocation, &sLocation, 0xC );

	this->ProcessEvent ( pFnaddBrokerItem, &addBrokerItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearBrokerCategories
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearBrokerCategories ( )
{
	static UFunction* pFnclearBrokerCategories = NULL;

	if ( ! pFnclearBrokerCategories )
		pFnclearBrokerCategories = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearBrokerCategories" );

	UNowGFXHudScene_execclearBrokerCategories_Parms clearBrokerCategories_Parms;

	this->ProcessEvent ( pFnclearBrokerCategories, &clearBrokerCategories_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addBrokerCategory
// [0x00020002] 
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FString                 sDisplayName                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            iParent                        ( CPF_Parm )

void UNowGFXHudScene::addBrokerCategory ( int iID, struct FString sDisplayName, int iParent )
{
	static UFunction* pFnaddBrokerCategory = NULL;

	if ( ! pFnaddBrokerCategory )
		pFnaddBrokerCategory = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addBrokerCategory" );

	UNowGFXHudScene_execaddBrokerCategory_Parms addBrokerCategory_Parms;
	addBrokerCategory_Parms.iID = iID;
	memcpy ( &addBrokerCategory_Parms.sDisplayName, &sDisplayName, 0xC );
	addBrokerCategory_Parms.iParent = iParent;

	this->ProcessEvent ( pFnaddBrokerCategory, &addBrokerCategory_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showBroker
// [0x00020002] 
// Parameters infos:
// struct FString                 sCityName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSellFeePercent                ( CPF_Parm )

void UNowGFXHudScene::showBroker ( struct FString sCityName, int iSellFeePercent )
{
	static UFunction* pFnshowBroker = NULL;

	if ( ! pFnshowBroker )
		pFnshowBroker = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showBroker" );

	UNowGFXHudScene_execshowBroker_Parms showBroker_Parms;
	memcpy ( &showBroker_Parms.sCityName, &sCityName, 0xC );
	showBroker_Parms.iSellFeePercent = iSellFeePercent;

	this->ProcessEvent ( pFnshowBroker, &showBroker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BrokerSellItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// int                            iDuration                      ( CPF_Parm )

void UNowGFXHudScene::BrokerSellItem ( struct FString sItemGuid, int iCost, int iDuration )
{
	static UFunction* pFnBrokerSellItem = NULL;

	if ( ! pFnBrokerSellItem )
		pFnBrokerSellItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.BrokerSellItem" );

	UNowGFXHudScene_execBrokerSellItem_Parms BrokerSellItem_Parms;
	memcpy ( &BrokerSellItem_Parms.sItemGuid, &sItemGuid, 0xC );
	BrokerSellItem_Parms.iCost = iCost;
	BrokerSellItem_Parms.iDuration = iDuration;

	this->ProcessEvent ( pFnBrokerSellItem, &BrokerSellItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BrokerCancelItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BrokerCancelItem ( struct FString sItemGuid )
{
	static UFunction* pFnBrokerCancelItem = NULL;

	if ( ! pFnBrokerCancelItem )
		pFnBrokerCancelItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.BrokerCancelItem" );

	UNowGFXHudScene_execBrokerCancelItem_Parms BrokerCancelItem_Parms;
	memcpy ( &BrokerCancelItem_Parms.sItemGuid, &sItemGuid, 0xC );

	this->ProcessEvent ( pFnBrokerCancelItem, &BrokerCancelItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BrokerBuyItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BrokerBuyItem ( struct FString sItemGuid )
{
	static UFunction* pFnBrokerBuyItem = NULL;

	if ( ! pFnBrokerBuyItem )
		pFnBrokerBuyItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.BrokerBuyItem" );

	UNowGFXHudScene_execBrokerBuyItem_Parms BrokerBuyItem_Parms;
	memcpy ( &BrokerBuyItem_Parms.sItemGuid, &sItemGuid, 0xC );

	this->ProcessEvent ( pFnBrokerBuyItem, &BrokerBuyItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BrokerGetSelling
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::BrokerGetSelling ( )
{
	static UFunction* pFnBrokerGetSelling = NULL;

	if ( ! pFnBrokerGetSelling )
		pFnBrokerGetSelling = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.BrokerGetSelling" );

	UNowGFXHudScene_execBrokerGetSelling_Parms BrokerGetSelling_Parms;

	this->ProcessEvent ( pFnBrokerGetSelling, &BrokerGetSelling_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.BrokerGetItems
// [0x00020002] 
// Parameters infos:
// int                            iCategory                      ( CPF_Parm )
// int                            iPage                          ( CPF_Parm )
// struct FString                 sSortField                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bSortAscending                 ( CPF_Parm )

void UNowGFXHudScene::BrokerGetItems ( int iCategory, int iPage, struct FString sSortField, unsigned long bSortAscending )
{
	static UFunction* pFnBrokerGetItems = NULL;

	if ( ! pFnBrokerGetItems )
		pFnBrokerGetItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.BrokerGetItems" );

	UNowGFXHudScene_execBrokerGetItems_Parms BrokerGetItems_Parms;
	BrokerGetItems_Parms.iCategory = iCategory;
	BrokerGetItems_Parms.iPage = iPage;
	memcpy ( &BrokerGetItems_Parms.sSortField, &sSortField, 0xC );
	BrokerGetItems_Parms.bSortAscending = bSortAscending;

	this->ProcessEvent ( pFnBrokerGetItems, &BrokerGetItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RefreshBrokerSell
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::RefreshBrokerSell ( )
{
	static UFunction* pFnRefreshBrokerSell = NULL;

	if ( ! pFnRefreshBrokerSell )
		pFnRefreshBrokerSell = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RefreshBrokerSell" );

	UNowGFXHudScene_execRefreshBrokerSell_Parms RefreshBrokerSell_Parms;

	this->ProcessEvent ( pFnRefreshBrokerSell, &RefreshBrokerSell_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetPendingRefreshBrokerSell
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventSetPendingRefreshBrokerSell ( )
{
	static UFunction* pFnSetPendingRefreshBrokerSell = NULL;

	if ( ! pFnSetPendingRefreshBrokerSell )
		pFnSetPendingRefreshBrokerSell = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetPendingRefreshBrokerSell" );

	UNowGFXHudScene_eventSetPendingRefreshBrokerSell_Parms SetPendingRefreshBrokerSell_Parms;

	this->ProcessEvent ( pFnSetPendingRefreshBrokerSell, &SetPendingRefreshBrokerSell_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RefreshBrokerBuy
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::RefreshBrokerBuy ( )
{
	static UFunction* pFnRefreshBrokerBuy = NULL;

	if ( ! pFnRefreshBrokerBuy )
		pFnRefreshBrokerBuy = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RefreshBrokerBuy" );

	UNowGFXHudScene_execRefreshBrokerBuy_Parms RefreshBrokerBuy_Parms;

	this->ProcessEvent ( pFnRefreshBrokerBuy, &RefreshBrokerBuy_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetPendingRefreshBrokerBuy
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventSetPendingRefreshBrokerBuy ( )
{
	static UFunction* pFnSetPendingRefreshBrokerBuy = NULL;

	if ( ! pFnSetPendingRefreshBrokerBuy )
		pFnSetPendingRefreshBrokerBuy = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetPendingRefreshBrokerBuy" );

	UNowGFXHudScene_eventSetPendingRefreshBrokerBuy_Parms SetPendingRefreshBrokerBuy_Parms;

	this->ProcessEvent ( pFnSetPendingRefreshBrokerBuy, &SetPendingRefreshBrokerBuy_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetLocationFromID
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iID                            ( CPF_Parm )

struct FString UNowGFXHudScene::eventGetLocationFromID ( int iID )
{
	static UFunction* pFnGetLocationFromID = NULL;

	if ( ! pFnGetLocationFromID )
		pFnGetLocationFromID = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetLocationFromID" );

	UNowGFXHudScene_eventGetLocationFromID_Parms GetLocationFromID_Parms;
	GetLocationFromID_Parms.iID = iID;

	this->ProcessEvent ( pFnGetLocationFromID, &GetLocationFromID_Parms, NULL );

	return GetLocationFromID_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetIDFromLocation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sLocation                      ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::eventGetIDFromLocation ( struct FString sLocation )
{
	static UFunction* pFnGetIDFromLocation = NULL;

	if ( ! pFnGetIDFromLocation )
		pFnGetIDFromLocation = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetIDFromLocation" );

	UNowGFXHudScene_eventGetIDFromLocation_Parms GetIDFromLocation_Parms;
	memcpy ( &GetIDFromLocation_Parms.sLocation, &sLocation, 0xC );

	this->ProcessEvent ( pFnGetIDFromLocation, &GetIDFromLocation_Parms, NULL );

	return GetIDFromLocation_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.BrokerGetItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BrokerGetItem ( struct FString sGuid )
{
	static UFunction* pFnBrokerGetItem = NULL;

	if ( ! pFnBrokerGetItem )
		pFnBrokerGetItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.BrokerGetItem" );

	UNowGFXHudScene_execBrokerGetItem_Parms BrokerGetItem_Parms;
	memcpy ( &BrokerGetItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnBrokerGetItem, &BrokerGetItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitBrokerArrays
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitBrokerArrays ( )
{
	static UFunction* pFnInitBrokerArrays = NULL;

	if ( ! pFnInitBrokerArrays )
		pFnInitBrokerArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitBrokerArrays" );

	UNowGFXHudScene_execInitBrokerArrays_Parms InitBrokerArrays_Parms;

	this->ProcessEvent ( pFnInitBrokerArrays, &InitBrokerArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitBroker
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitBroker ( )
{
	static UFunction* pFnInitBroker = NULL;

	if ( ! pFnInitBroker )
		pFnInitBroker = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitBroker" );

	UNowGFXHudScene_execInitBroker_Parms InitBroker_Parms;

	this->ProcessEvent ( pFnInitBroker, &InitBroker_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ModifyTaxesBroker
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iTaxes                         ( CPF_Parm )

int UNowGFXHudScene::ModifyTaxesBroker ( int iTaxes )
{
	static UFunction* pFnModifyTaxesBroker = NULL;

	if ( ! pFnModifyTaxesBroker )
		pFnModifyTaxesBroker = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ModifyTaxesBroker" );

	UNowGFXHudScene_execModifyTaxesBroker_Parms ModifyTaxesBroker_Parms;
	ModifyTaxesBroker_Parms.iTaxes = iTaxes;

	pFnModifyTaxesBroker->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnModifyTaxesBroker, &ModifyTaxesBroker_Parms, NULL );

	pFnModifyTaxesBroker->FunctionFlags |= 0x400;

	return ModifyTaxesBroker_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CanSellToBroker
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::CanSellToBroker ( )
{
	static UFunction* pFnCanSellToBroker = NULL;

	if ( ! pFnCanSellToBroker )
		pFnCanSellToBroker = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CanSellToBroker" );

	UNowGFXHudScene_execCanSellToBroker_Parms CanSellToBroker_Parms;

	pFnCanSellToBroker->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanSellToBroker, &CanSellToBroker_Parms, NULL );

	pFnCanSellToBroker->FunctionFlags |= 0x400;

	return CanSellToBroker_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.BrokerItemSellAdd
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sContentGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )
// int                            iCityId                        ( CPF_Parm )
// int                            iExpiers                       ( CPF_Parm )
// struct FString                 sItemName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BrokerItemSellAdd ( struct FString sGuid, struct FString sContentGuid, int iCost, int iQuantity, int iCityId, int iExpiers, struct FString sItemName )
{
	static UFunction* pFnBrokerItemSellAdd = NULL;

	if ( ! pFnBrokerItemSellAdd )
		pFnBrokerItemSellAdd = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.BrokerItemSellAdd" );

	UNowGFXHudScene_execBrokerItemSellAdd_Parms BrokerItemSellAdd_Parms;
	memcpy ( &BrokerItemSellAdd_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &BrokerItemSellAdd_Parms.sContentGuid, &sContentGuid, 0xC );
	BrokerItemSellAdd_Parms.iCost = iCost;
	BrokerItemSellAdd_Parms.iQuantity = iQuantity;
	BrokerItemSellAdd_Parms.iCityId = iCityId;
	BrokerItemSellAdd_Parms.iExpiers = iExpiers;
	memcpy ( &BrokerItemSellAdd_Parms.sItemName, &sItemName, 0xC );

	pFnBrokerItemSellAdd->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBrokerItemSellAdd, &BrokerItemSellAdd_Parms, NULL );

	pFnBrokerItemSellAdd->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.BrokerItemAddInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sContentGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sAvatarName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )
// int                            iCityId                        ( CPF_Parm )
// int                            iParamClass                    ( CPF_Parm )
// struct FString                 sItemInfo                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BrokerItemAddInfo ( struct FString sGuid, struct FString sContentGuid, struct FString sAvatarName, int iCost, int iQuantity, int iCityId, int iParamClass, struct FString sItemInfo )
{
	static UFunction* pFnBrokerItemAddInfo = NULL;

	if ( ! pFnBrokerItemAddInfo )
		pFnBrokerItemAddInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.BrokerItemAddInfo" );

	UNowGFXHudScene_execBrokerItemAddInfo_Parms BrokerItemAddInfo_Parms;
	memcpy ( &BrokerItemAddInfo_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &BrokerItemAddInfo_Parms.sContentGuid, &sContentGuid, 0xC );
	memcpy ( &BrokerItemAddInfo_Parms.sAvatarName, &sAvatarName, 0xC );
	BrokerItemAddInfo_Parms.iCost = iCost;
	BrokerItemAddInfo_Parms.iQuantity = iQuantity;
	BrokerItemAddInfo_Parms.iCityId = iCityId;
	BrokerItemAddInfo_Parms.iParamClass = iParamClass;
	memcpy ( &BrokerItemAddInfo_Parms.sItemInfo, &sItemInfo, 0xC );

	pFnBrokerItemAddInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBrokerItemAddInfo, &BrokerItemAddInfo_Parms, NULL );

	pFnBrokerItemAddInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.BrokerItemAdd
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sContentGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sAvatarName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )
// int                            iCityId                        ( CPF_Parm )
// struct FString                 sItemName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::BrokerItemAdd ( struct FString sGuid, struct FString sContentGuid, struct FString sAvatarName, int iCost, int iQuantity, int iCityId, struct FString sItemName )
{
	static UFunction* pFnBrokerItemAdd = NULL;

	if ( ! pFnBrokerItemAdd )
		pFnBrokerItemAdd = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.BrokerItemAdd" );

	UNowGFXHudScene_execBrokerItemAdd_Parms BrokerItemAdd_Parms;
	memcpy ( &BrokerItemAdd_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &BrokerItemAdd_Parms.sContentGuid, &sContentGuid, 0xC );
	memcpy ( &BrokerItemAdd_Parms.sAvatarName, &sAvatarName, 0xC );
	BrokerItemAdd_Parms.iCost = iCost;
	BrokerItemAdd_Parms.iQuantity = iQuantity;
	BrokerItemAdd_Parms.iCityId = iCityId;
	memcpy ( &BrokerItemAdd_Parms.sItemName, &sItemName, 0xC );

	pFnBrokerItemAdd->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBrokerItemAdd, &BrokerItemAdd_Parms, NULL );

	pFnBrokerItemAdd->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendGetBuyItemInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendGetBuyItemInfo ( struct FString sItemGuid )
{
	static UFunction* pFnSendGetBuyItemInfo = NULL;

	if ( ! pFnSendGetBuyItemInfo )
		pFnSendGetBuyItemInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendGetBuyItemInfo" );

	UNowGFXHudScene_execSendGetBuyItemInfo_Parms SendGetBuyItemInfo_Parms;
	memcpy ( &SendGetBuyItemInfo_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnSendGetBuyItemInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendGetBuyItemInfo, &SendGetBuyItemInfo_Parms, NULL );

	pFnSendGetBuyItemInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendCancelItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendCancelItem ( struct FString sItemGuid )
{
	static UFunction* pFnSendCancelItem = NULL;

	if ( ! pFnSendCancelItem )
		pFnSendCancelItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendCancelItem" );

	UNowGFXHudScene_execSendCancelItem_Parms SendCancelItem_Parms;
	memcpy ( &SendCancelItem_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnSendCancelItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendCancelItem, &SendCancelItem_Parms, NULL );

	pFnSendCancelItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendBuyItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendBuyItem ( struct FString sItemGuid )
{
	static UFunction* pFnSendBuyItem = NULL;

	if ( ! pFnSendBuyItem )
		pFnSendBuyItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendBuyItem" );

	UNowGFXHudScene_execSendBuyItem_Parms SendBuyItem_Parms;
	memcpy ( &SendBuyItem_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnSendBuyItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendBuyItem, &SendBuyItem_Parms, NULL );

	pFnSendBuyItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendSellItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// int                            iDuration                      ( CPF_Parm )

void UNowGFXHudScene::SendSellItem ( struct FString sItemGuid, int iCost, int iDuration )
{
	static UFunction* pFnSendSellItem = NULL;

	if ( ! pFnSendSellItem )
		pFnSendSellItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendSellItem" );

	UNowGFXHudScene_execSendSellItem_Parms SendSellItem_Parms;
	memcpy ( &SendSellItem_Parms.sItemGuid, &sItemGuid, 0xC );
	SendSellItem_Parms.iCost = iCost;
	SendSellItem_Parms.iDuration = iDuration;

	pFnSendSellItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendSellItem, &SendSellItem_Parms, NULL );

	pFnSendSellItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendGetSell
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendGetSell ( )
{
	static UFunction* pFnSendGetSell = NULL;

	if ( ! pFnSendGetSell )
		pFnSendGetSell = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendGetSell" );

	UNowGFXHudScene_execSendGetSell_Parms SendGetSell_Parms;

	pFnSendGetSell->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendGetSell, &SendGetSell_Parms, NULL );

	pFnSendGetSell->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendGetItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iCategory                      ( CPF_Parm )
// int                            iPage                          ( CPF_Parm )
// struct FString                 sSortField                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bSortAscending                 ( CPF_Parm )

void UNowGFXHudScene::SendGetItems ( int iCategory, int iPage, struct FString sSortField, unsigned long bSortAscending )
{
	static UFunction* pFnSendGetItems = NULL;

	if ( ! pFnSendGetItems )
		pFnSendGetItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendGetItems" );

	UNowGFXHudScene_execSendGetItems_Parms SendGetItems_Parms;
	SendGetItems_Parms.iCategory = iCategory;
	SendGetItems_Parms.iPage = iPage;
	memcpy ( &SendGetItems_Parms.sSortField, &sSortField, 0xC );
	SendGetItems_Parms.bSortAscending = bSortAscending;

	pFnSendGetItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendGetItems, &SendGetItems_Parms, NULL );

	pFnSendGetItems->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showReceiveMail
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showReceiveMail ( )
{
	static UFunction* pFnshowReceiveMail = NULL;

	if ( ! pFnshowReceiveMail )
		pFnshowReceiveMail = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showReceiveMail" );

	UNowGFXHudScene_execshowReceiveMail_Parms showReceiveMail_Parms;

	this->ProcessEvent ( pFnshowReceiveMail, &showReceiveMail_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeMailWindow
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeMailWindow ( )
{
	static UFunction* pFncloseMailWindow = NULL;

	if ( ! pFncloseMailWindow )
		pFncloseMailWindow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeMailWindow" );

	UNowGFXHudScene_execcloseMailWindow_Parms closeMailWindow_Parms;

	this->ProcessEvent ( pFncloseMailWindow, &closeMailWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.receiveMailRemoveItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventreceiveMailRemoveItem ( struct FString sGuid )
{
	static UFunction* pFnreceiveMailRemoveItem = NULL;

	if ( ! pFnreceiveMailRemoveItem )
		pFnreceiveMailRemoveItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.receiveMailRemoveItem" );

	UNowGFXHudScene_eventreceiveMailRemoveItem_Parms receiveMailRemoveItem_Parms;
	memcpy ( &receiveMailRemoveItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnreceiveMailRemoveItem, &receiveMailRemoveItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearMailItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::clearMailItems ( )
{
	static UFunction* pFnclearMailItems = NULL;

	if ( ! pFnclearMailItems )
		pFnclearMailItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearMailItems" );

	UNowGFXHudScene_execclearMailItems_Parms clearMailItems_Parms;

	this->ProcessEvent ( pFnclearMailItems, &clearMailItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.receiveMailAddItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSender                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::receiveMailAddItem ( struct FString sData, struct FString sSender )
{
	static UFunction* pFnreceiveMailAddItem = NULL;

	if ( ! pFnreceiveMailAddItem )
		pFnreceiveMailAddItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.receiveMailAddItem" );

	UNowGFXHudScene_execreceiveMailAddItem_Parms receiveMailAddItem_Parms;
	memcpy ( &receiveMailAddItem_Parms.sData, &sData, 0xC );
	memcpy ( &receiveMailAddItem_Parms.sSender, &sSender, 0xC );

	this->ProcessEvent ( pFnreceiveMailAddItem, &receiveMailAddItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SubmitSendMail
// [0x00020002] 
// Parameters infos:
// struct FString                 sRecipient                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCoD                           ( CPF_Parm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SubmitSendMail ( struct FString sRecipient, int iCoD, struct FString sGuid )
{
	static UFunction* pFnSubmitSendMail = NULL;

	if ( ! pFnSubmitSendMail )
		pFnSubmitSendMail = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SubmitSendMail" );

	UNowGFXHudScene_execSubmitSendMail_Parms SubmitSendMail_Parms;
	memcpy ( &SubmitSendMail_Parms.sRecipient, &sRecipient, 0xC );
	SubmitSendMail_Parms.iCoD = iCoD;
	memcpy ( &SubmitSendMail_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnSubmitSendMail, &SubmitSendMail_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReceiveMailItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )

void UNowGFXHudScene::ReceiveMailItem ( struct FString sGuid, int iCost )
{
	static UFunction* pFnReceiveMailItem = NULL;

	if ( ! pFnReceiveMailItem )
		pFnReceiveMailItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ReceiveMailItem" );

	UNowGFXHudScene_execReceiveMailItem_Parms ReceiveMailItem_Parms;
	memcpy ( &ReceiveMailItem_Parms.sGuid, &sGuid, 0xC );
	ReceiveMailItem_Parms.iCost = iCost;

	this->ProcessEvent ( pFnReceiveMailItem, &ReceiveMailItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateMail
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::UpdateMail ( )
{
	static UFunction* pFnUpdateMail = NULL;

	if ( ! pFnUpdateMail )
		pFnUpdateMail = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateMail" );

	UNowGFXHudScene_execUpdateMail_Parms UpdateMail_Parms;

	this->ProcessEvent ( pFnUpdateMail, &UpdateMail_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitMail
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitMail ( )
{
	static UFunction* pFnInitMail = NULL;

	if ( ! pFnInitMail )
		pFnInitMail = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitMail" );

	UNowGFXHudScene_execInitMail_Parms InitMail_Parms;

	this->ProcessEvent ( pFnInitMail, &InitMail_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendRequestMail
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendRequestMail ( )
{
	static UFunction* pFnSendRequestMail = NULL;

	if ( ! pFnSendRequestMail )
		pFnSendRequestMail = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendRequestMail" );

	UNowGFXHudScene_execSendRequestMail_Parms SendRequestMail_Parms;

	pFnSendRequestMail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendRequestMail, &SendRequestMail_Parms, NULL );

	pFnSendRequestMail->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.CollectMail
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::CollectMail ( struct FString sGuid )
{
	static UFunction* pFnCollectMail = NULL;

	if ( ! pFnCollectMail )
		pFnCollectMail = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CollectMail" );

	UNowGFXHudScene_execCollectMail_Parms CollectMail_Parms;
	memcpy ( &CollectMail_Parms.sGuid, &sGuid, 0xC );

	pFnCollectMail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCollectMail, &CollectMail_Parms, NULL );

	pFnCollectMail->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.RequestMail
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FReciveMail >   Items                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UNowGFXHudScene::RequestMail ( TArray< struct FReciveMail >* Items )
{
	static UFunction* pFnRequestMail = NULL;

	if ( ! pFnRequestMail )
		pFnRequestMail = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RequestMail" );

	UNowGFXHudScene_execRequestMail_Parms RequestMail_Parms;

	pFnRequestMail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestMail, &RequestMail_Parms, NULL );

	pFnRequestMail->FunctionFlags |= 0x400;

	if ( Items )
		memcpy ( Items, &RequestMail_Parms.Items, 0xC );
};

// Function NowGame.NowGFXHudScene.SendMail
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sTargetName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCashOnDelivery                ( CPF_Parm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendMail ( struct FString sTargetName, int iCashOnDelivery, struct FString sGuid )
{
	static UFunction* pFnSendMail = NULL;

	if ( ! pFnSendMail )
		pFnSendMail = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendMail" );

	UNowGFXHudScene_execSendMail_Parms SendMail_Parms;
	memcpy ( &SendMail_Parms.sTargetName, &sTargetName, 0xC );
	SendMail_Parms.iCashOnDelivery = iCashOnDelivery;
	memcpy ( &SendMail_Parms.sGuid, &sGuid, 0xC );

	pFnSendMail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendMail, &SendMail_Parms, NULL );

	pFnSendMail->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.getBook
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bEditable                      ( CPF_Parm )
// int                            iMaxPages                      ( CPF_Parm )

void UNowGFXHudScene::getBook ( struct FString sGuid, unsigned long bEditable, int iMaxPages )
{
	static UFunction* pFngetBook = NULL;

	if ( ! pFngetBook )
		pFngetBook = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.getBook" );

	UNowGFXHudScene_execgetBook_Parms getBook_Parms;
	memcpy ( &getBook_Parms.sGuid, &sGuid, 0xC );
	getBook_Parms.bEditable = bEditable;
	getBook_Parms.iMaxPages = iMaxPages;

	this->ProcessEvent ( pFngetBook, &getBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateBook
// [0x00020002] 
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UpdateBook ( struct FString sData )
{
	static UFunction* pFnUpdateBook = NULL;

	if ( ! pFnUpdateBook )
		pFnUpdateBook = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateBook" );

	UNowGFXHudScene_execUpdateBook_Parms UpdateBook_Parms;
	memcpy ( &UpdateBook_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnUpdateBook, &UpdateBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlayerBookTest
// [0x00020002] 
// Parameters infos:
// struct FString                 sTestString                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::InitPlayerBookTest ( struct FString sTestString )
{
	static UFunction* pFnInitPlayerBookTest = NULL;

	if ( ! pFnInitPlayerBookTest )
		pFnInitPlayerBookTest = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPlayerBookTest" );

	UNowGFXHudScene_execInitPlayerBookTest_Parms InitPlayerBookTest_Parms;
	memcpy ( &InitPlayerBookTest_Parms.sTestString, &sTestString, 0xC );

	this->ProcessEvent ( pFnInitPlayerBookTest, &InitPlayerBookTest_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlayerBook
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPlayerBook ( )
{
	static UFunction* pFnInitPlayerBook = NULL;

	if ( ! pFnInitPlayerBook )
		pFnInitPlayerBook = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPlayerBook" );

	UNowGFXHudScene_execInitPlayerBook_Parms InitPlayerBook_Parms;

	this->ProcessEvent ( pFnInitPlayerBook, &InitPlayerBook_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetPlayerBookInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sBookGuid                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            iMaxPages                      ( CPF_Parm | CPF_OutParm )

void UNowGFXHudScene::GetPlayerBookInfo ( struct FString* sBookGuid, int* iMaxPages )
{
	static UFunction* pFnGetPlayerBookInfo = NULL;

	if ( ! pFnGetPlayerBookInfo )
		pFnGetPlayerBookInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetPlayerBookInfo" );

	UNowGFXHudScene_execGetPlayerBookInfo_Parms GetPlayerBookInfo_Parms;

	pFnGetPlayerBookInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerBookInfo, &GetPlayerBookInfo_Parms, NULL );

	pFnGetPlayerBookInfo->FunctionFlags |= 0x400;

	if ( sBookGuid )
		memcpy ( sBookGuid, &GetPlayerBookInfo_Parms.sBookGuid, 0xC );

	if ( iMaxPages )
		*iMaxPages = GetPlayerBookInfo_Parms.iMaxPages;
};

// Function NowGame.NowGFXHudScene.GetLastItemUsedGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetLastItemUsedGuid ( )
{
	static UFunction* pFnGetLastItemUsedGuid = NULL;

	if ( ! pFnGetLastItemUsedGuid )
		pFnGetLastItemUsedGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetLastItemUsedGuid" );

	UNowGFXHudScene_execGetLastItemUsedGuid_Parms GetLastItemUsedGuid_Parms;

	pFnGetLastItemUsedGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLastItemUsedGuid, &GetLastItemUsedGuid_Parms, NULL );

	pFnGetLastItemUsedGuid->FunctionFlags |= 0x400;

	return GetLastItemUsedGuid_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitChest
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitChest ( )
{
	static UFunction* pFnInitChest = NULL;

	if ( ! pFnInitChest )
		pFnInitChest = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitChest" );

	UNowGFXHudScene_eventInitChest_Parms InitChest_Parms;

	this->ProcessEvent ( pFnInitChest, &InitChest_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillChestInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillChestInventory ( )
{
	static UFunction* pFnFillChestInventory = NULL;

	if ( ! pFnFillChestInventory )
		pFnFillChestInventory = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillChestInventory" );

	UNowGFXHudScene_execFillChestInventory_Parms FillChestInventory_Parms;

	pFnFillChestInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillChestInventory, &FillChestInventory_Parms, NULL );

	pFnFillChestInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeHouseWindow
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeHouseWindow ( )
{
	static UFunction* pFncloseHouseWindow = NULL;

	if ( ! pFncloseHouseWindow )
		pFncloseHouseWindow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeHouseWindow" );

	UNowGFXHudScene_execcloseHouseWindow_Parms closeHouseWindow_Parms;

	this->ProcessEvent ( pFncloseHouseWindow, &closeHouseWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateHouseExpiration
// [0x00020002] 
// Parameters infos:
// int                            iExpires                       ( CPF_Parm )

void UNowGFXHudScene::updateHouseExpiration ( int iExpires )
{
	static UFunction* pFnupdateHouseExpiration = NULL;

	if ( ! pFnupdateHouseExpiration )
		pFnupdateHouseExpiration = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updateHouseExpiration" );

	UNowGFXHudScene_execupdateHouseExpiration_Parms updateHouseExpiration_Parms;
	updateHouseExpiration_Parms.iExpires = iExpires;

	this->ProcessEvent ( pFnupdateHouseExpiration, &updateHouseExpiration_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateHouseHitpoints
// [0x00020002] 
// Parameters infos:
// int                            iHitpoints                     ( CPF_Parm )
// int                            iHitpointMax                   ( CPF_Parm )

void UNowGFXHudScene::updateHouseHitpoints ( int iHitpoints, int iHitpointMax )
{
	static UFunction* pFnupdateHouseHitpoints = NULL;

	if ( ! pFnupdateHouseHitpoints )
		pFnupdateHouseHitpoints = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updateHouseHitpoints" );

	UNowGFXHudScene_execupdateHouseHitpoints_Parms updateHouseHitpoints_Parms;
	updateHouseHitpoints_Parms.iHitpoints = iHitpoints;
	updateHouseHitpoints_Parms.iHitpointMax = iHitpointMax;

	this->ProcessEvent ( pFnupdateHouseHitpoints, &updateHouseHitpoints_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showHouseWindow
// [0x00020002] 
// Parameters infos:
// int                            iHouseId                       ( CPF_Parm )
// struct FString                 sOwner                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuild                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iHitpoints                     ( CPF_Parm )
// int                            iHitpointMax                   ( CPF_Parm )
// int                            iCoinPerDay                    ( CPF_Parm )
// int                            iExpires                       ( CPF_Parm )
// unsigned long                  bChangeLock                    ( CPF_Parm )
// unsigned long                  bNewKey                        ( CPF_Parm )
// unsigned long                  bManageFriends                 ( CPF_Parm )
// unsigned long                  bPayTax                        ( CPF_Parm )
// int                            iMaxPayment                    ( CPF_Parm )
// int                            iTaxPercent                    ( CPF_Parm )
// struct FString                 sLordGuild                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showHouseWindow ( int iHouseId, struct FString sOwner, struct FString sGuild, int iHitpoints, int iHitpointMax, int iCoinPerDay, int iExpires, unsigned long bChangeLock, unsigned long bNewKey, unsigned long bManageFriends, unsigned long bPayTax, int iMaxPayment, int iTaxPercent, struct FString sLordGuild )
{
	static UFunction* pFnshowHouseWindow = NULL;

	if ( ! pFnshowHouseWindow )
		pFnshowHouseWindow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showHouseWindow" );

	UNowGFXHudScene_execshowHouseWindow_Parms showHouseWindow_Parms;
	showHouseWindow_Parms.iHouseId = iHouseId;
	memcpy ( &showHouseWindow_Parms.sOwner, &sOwner, 0xC );
	memcpy ( &showHouseWindow_Parms.sGuild, &sGuild, 0xC );
	showHouseWindow_Parms.iHitpoints = iHitpoints;
	showHouseWindow_Parms.iHitpointMax = iHitpointMax;
	showHouseWindow_Parms.iCoinPerDay = iCoinPerDay;
	showHouseWindow_Parms.iExpires = iExpires;
	showHouseWindow_Parms.bChangeLock = bChangeLock;
	showHouseWindow_Parms.bNewKey = bNewKey;
	showHouseWindow_Parms.bManageFriends = bManageFriends;
	showHouseWindow_Parms.bPayTax = bPayTax;
	showHouseWindow_Parms.iMaxPayment = iMaxPayment;
	showHouseWindow_Parms.iTaxPercent = iTaxPercent;
	memcpy ( &showHouseWindow_Parms.sLordGuild, &sLordGuild, 0xC );

	this->ProcessEvent ( pFnshowHouseWindow, &showHouseWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.HousePayment
// [0x00020002] 
// Parameters infos:
// int                            iHouseId                       ( CPF_Parm )
// int                            iPayment                       ( CPF_Parm )

void UNowGFXHudScene::HousePayment ( int iHouseId, int iPayment )
{
	static UFunction* pFnHousePayment = NULL;

	if ( ! pFnHousePayment )
		pFnHousePayment = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.HousePayment" );

	UNowGFXHudScene_execHousePayment_Parms HousePayment_Parms;
	HousePayment_Parms.iHouseId = iHouseId;
	HousePayment_Parms.iPayment = iPayment;

	this->ProcessEvent ( pFnHousePayment, &HousePayment_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangeHouseLock
// [0x00020002] 
// Parameters infos:
// int                            iHouseId                       ( CPF_Parm )

void UNowGFXHudScene::ChangeHouseLock ( int iHouseId )
{
	static UFunction* pFnChangeHouseLock = NULL;

	if ( ! pFnChangeHouseLock )
		pFnChangeHouseLock = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ChangeHouseLock" );

	UNowGFXHudScene_execChangeHouseLock_Parms ChangeHouseLock_Parms;
	ChangeHouseLock_Parms.iHouseId = iHouseId;

	this->ProcessEvent ( pFnChangeHouseLock, &ChangeHouseLock_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CreateHouseKey
// [0x00020002] 
// Parameters infos:
// int                            iHouseId                       ( CPF_Parm )

void UNowGFXHudScene::CreateHouseKey ( int iHouseId )
{
	static UFunction* pFnCreateHouseKey = NULL;

	if ( ! pFnCreateHouseKey )
		pFnCreateHouseKey = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CreateHouseKey" );

	UNowGFXHudScene_execCreateHouseKey_Parms CreateHouseKey_Parms;
	CreateHouseKey_Parms.iHouseId = iHouseId;

	this->ProcessEvent ( pFnCreateHouseKey, &CreateHouseKey_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ShowHouseFriends
// [0x00020002] 
// Parameters infos:
// int                            iHouseId                       ( CPF_Parm )

void UNowGFXHudScene::ShowHouseFriends ( int iHouseId )
{
	static UFunction* pFnShowHouseFriends = NULL;

	if ( ! pFnShowHouseFriends )
		pFnShowHouseFriends = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ShowHouseFriends" );

	UNowGFXHudScene_execShowHouseFriends_Parms ShowHouseFriends_Parms;
	ShowHouseFriends_Parms.iHouseId = iHouseId;

	this->ProcessEvent ( pFnShowHouseFriends, &ShowHouseFriends_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangeHouseOwner
// [0x00020002] 
// Parameters infos:
// struct FString                 sNewOwner                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangeHouseOwner ( struct FString sNewOwner )
{
	static UFunction* pFnChangeHouseOwner = NULL;

	if ( ! pFnChangeHouseOwner )
		pFnChangeHouseOwner = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ChangeHouseOwner" );

	UNowGFXHudScene_execChangeHouseOwner_Parms ChangeHouseOwner_Parms;
	memcpy ( &ChangeHouseOwner_Parms.sNewOwner, &sNewOwner, 0xC );

	this->ProcessEvent ( pFnChangeHouseOwner, &ChangeHouseOwner_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitHouseInfo
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitHouseInfo ( )
{
	static UFunction* pFnInitHouseInfo = NULL;

	if ( ! pFnInitHouseInfo )
		pFnInitHouseInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitHouseInfo" );

	UNowGFXHudScene_execInitHouseInfo_Parms InitHouseInfo_Parms;

	this->ProcessEvent ( pFnInitHouseInfo, &InitHouseInfo_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendHousePayment
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iPayment                       ( CPF_Parm )

void UNowGFXHudScene::SendHousePayment ( int iPayment )
{
	static UFunction* pFnSendHousePayment = NULL;

	if ( ! pFnSendHousePayment )
		pFnSendHousePayment = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendHousePayment" );

	UNowGFXHudScene_execSendHousePayment_Parms SendHousePayment_Parms;
	SendHousePayment_Parms.iPayment = iPayment;

	pFnSendHousePayment->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendHousePayment, &SendHousePayment_Parms, NULL );

	pFnSendHousePayment->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendChangeHouseLock
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendChangeHouseLock ( )
{
	static UFunction* pFnSendChangeHouseLock = NULL;

	if ( ! pFnSendChangeHouseLock )
		pFnSendChangeHouseLock = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendChangeHouseLock" );

	UNowGFXHudScene_execSendChangeHouseLock_Parms SendChangeHouseLock_Parms;

	pFnSendChangeHouseLock->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendChangeHouseLock, &SendChangeHouseLock_Parms, NULL );

	pFnSendChangeHouseLock->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendCreateHouseKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendCreateHouseKey ( )
{
	static UFunction* pFnSendCreateHouseKey = NULL;

	if ( ! pFnSendCreateHouseKey )
		pFnSendCreateHouseKey = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendCreateHouseKey" );

	UNowGFXHudScene_execSendCreateHouseKey_Parms SendCreateHouseKey_Parms;

	pFnSendCreateHouseKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendCreateHouseKey, &SendCreateHouseKey_Parms, NULL );

	pFnSendCreateHouseKey->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.toggleFishingEnabled
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void UNowGFXHudScene::toggleFishingEnabled ( unsigned long bEnabled )
{
	static UFunction* pFntoggleFishingEnabled = NULL;

	if ( ! pFntoggleFishingEnabled )
		pFntoggleFishingEnabled = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleFishingEnabled" );

	UNowGFXHudScene_exectoggleFishingEnabled_Parms toggleFishingEnabled_Parms;
	toggleFishingEnabled_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFntoggleFishingEnabled, &toggleFishingEnabled_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeFishing
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeFishing ( )
{
	static UFunction* pFncloseFishing = NULL;

	if ( ! pFncloseFishing )
		pFncloseFishing = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeFishing" );

	UNowGFXHudScene_execcloseFishing_Parms closeFishing_Parms;

	this->ProcessEvent ( pFncloseFishing, &closeFishing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showFishing
// [0x00020002] 
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showFishing ( struct FString sData )
{
	static UFunction* pFnshowFishing = NULL;

	if ( ! pFnshowFishing )
		pFnshowFishing = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showFishing" );

	UNowGFXHudScene_execshowFishing_Parms showFishing_Parms;
	memcpy ( &showFishing_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnshowFishing, &showFishing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedFishingDepth
// [0x00020002] 
// Parameters infos:
// int                            iDepth                         ( CPF_Parm )

void UNowGFXHudScene::ChangedFishingDepth ( int iDepth )
{
	static UFunction* pFnChangedFishingDepth = NULL;

	if ( ! pFnChangedFishingDepth )
		pFnChangedFishingDepth = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ChangedFishingDepth" );

	UNowGFXHudScene_execChangedFishingDepth_Parms ChangedFishingDepth_Parms;
	ChangedFishingDepth_Parms.iDepth = iDepth;

	this->ProcessEvent ( pFnChangedFishingDepth, &ChangedFishingDepth_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedFishingSlots
// [0x00020002] 
// Parameters infos:
// struct FString                 sLineGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sHookGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBaitGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangedFishingSlots ( struct FString sLineGuid, struct FString sHookGuid, struct FString sBaitGuid )
{
	static UFunction* pFnChangedFishingSlots = NULL;

	if ( ! pFnChangedFishingSlots )
		pFnChangedFishingSlots = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ChangedFishingSlots" );

	UNowGFXHudScene_execChangedFishingSlots_Parms ChangedFishingSlots_Parms;
	memcpy ( &ChangedFishingSlots_Parms.sLineGuid, &sLineGuid, 0xC );
	memcpy ( &ChangedFishingSlots_Parms.sHookGuid, &sHookGuid, 0xC );
	memcpy ( &ChangedFishingSlots_Parms.sBaitGuid, &sBaitGuid, 0xC );

	this->ProcessEvent ( pFnChangedFishingSlots, &ChangedFishingSlots_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeFishingArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeFishingArrays ( )
{
	static UFunction* pFnFinalizeFishingArrays = NULL;

	if ( ! pFnFinalizeFishingArrays )
		pFnFinalizeFishingArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizeFishingArrays" );

	UNowGFXHudScene_eventFinalizeFishingArrays_Parms FinalizeFishingArrays_Parms;

	this->ProcessEvent ( pFnFinalizeFishingArrays, &FinalizeFishingArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitFishing
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitFishing ( )
{
	static UFunction* pFnInitFishing = NULL;

	if ( ! pFnInitFishing )
		pFnInitFishing = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitFishing" );

	UNowGFXHudScene_execInitFishing_Parms InitFishing_Parms;

	this->ProcessEvent ( pFnInitFishing, &InitFishing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetRodData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::GetRodData ( )
{
	static UFunction* pFnGetRodData = NULL;

	if ( ! pFnGetRodData )
		pFnGetRodData = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetRodData" );

	UNowGFXHudScene_execGetRodData_Parms GetRodData_Parms;

	pFnGetRodData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRodData, &GetRodData_Parms, NULL );

	pFnGetRodData->FunctionFlags |= 0x400;

	return GetRodData_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitFishingArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitFishingArrays ( )
{
	static UFunction* pFnInitFishingArrays = NULL;

	if ( ! pFnInitFishingArrays )
		pFnInitFishingArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitFishingArrays" );

	UNowGFXHudScene_execInitFishingArrays_Parms InitFishingArrays_Parms;

	pFnInitFishingArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitFishingArrays, &InitFishingArrays_Parms, NULL );

	pFnInitFishingArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.PlaceVendor
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PlaceVendor ( struct FString sGuid )
{
	static UFunction* pFnPlaceVendor = NULL;

	if ( ! pFnPlaceVendor )
		pFnPlaceVendor = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PlaceVendor" );

	UNowGFXHudScene_execPlaceVendor_Parms PlaceVendor_Parms;
	memcpy ( &PlaceVendor_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnPlaceVendor, &PlaceVendor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlaceVendor
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPlaceVendor ( )
{
	static UFunction* pFnInitPlaceVendor = NULL;

	if ( ! pFnInitPlaceVendor )
		pFnInitPlaceVendor = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPlaceVendor" );

	UNowGFXHudScene_execInitPlaceVendor_Parms InitPlaceVendor_Parms;

	this->ProcessEvent ( pFnInitPlaceVendor, &InitPlaceVendor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendPlaceVendor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendPlaceVendor ( struct FString sGuid )
{
	static UFunction* pFnSendPlaceVendor = NULL;

	if ( ! pFnSendPlaceVendor )
		pFnSendPlaceVendor = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendPlaceVendor" );

	UNowGFXHudScene_execSendPlaceVendor_Parms SendPlaceVendor_Parms;
	memcpy ( &SendPlaceVendor_Parms.sGuid, &sGuid, 0xC );

	pFnSendPlaceVendor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendPlaceVendor, &SendPlaceVendor_Parms, NULL );

	pFnSendPlaceVendor->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.FillContractList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillContractList ( )
{
	static UFunction* pFnFillContractList = NULL;

	if ( ! pFnFillContractList )
		pFnFillContractList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillContractList" );

	UNowGFXHudScene_execFillContractList_Parms FillContractList_Parms;

	pFnFillContractList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillContractList, &FillContractList_Parms, NULL );

	pFnFillContractList->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showPlayerVendorWindow
// [0x00020002] 
// Parameters infos:
// struct FString                 sVendorGuid                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sOwner                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bCanModify                     ( CPF_Parm )

void UNowGFXHudScene::showPlayerVendorWindow ( struct FString sVendorGuid, struct FString sOwner, unsigned long bCanModify )
{
	static UFunction* pFnshowPlayerVendorWindow = NULL;

	if ( ! pFnshowPlayerVendorWindow )
		pFnshowPlayerVendorWindow = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showPlayerVendorWindow" );

	UNowGFXHudScene_execshowPlayerVendorWindow_Parms showPlayerVendorWindow_Parms;
	memcpy ( &showPlayerVendorWindow_Parms.sVendorGuid, &sVendorGuid, 0xC );
	memcpy ( &showPlayerVendorWindow_Parms.sOwner, &sOwner, 0xC );
	showPlayerVendorWindow_Parms.bCanModify = bCanModify;

	this->ProcessEvent ( pFnshowPlayerVendorWindow, &showPlayerVendorWindow_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PlayerVendorAdd
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )

void UNowGFXHudScene::PlayerVendorAdd ( struct FString sGuid, int iCost )
{
	static UFunction* pFnPlayerVendorAdd = NULL;

	if ( ! pFnPlayerVendorAdd )
		pFnPlayerVendorAdd = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PlayerVendorAdd" );

	UNowGFXHudScene_execPlayerVendorAdd_Parms PlayerVendorAdd_Parms;
	memcpy ( &PlayerVendorAdd_Parms.sGuid, &sGuid, 0xC );
	PlayerVendorAdd_Parms.iCost = iCost;

	this->ProcessEvent ( pFnPlayerVendorAdd, &PlayerVendorAdd_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PlayerVendorCancel
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PlayerVendorCancel ( struct FString sGuid )
{
	static UFunction* pFnPlayerVendorCancel = NULL;

	if ( ! pFnPlayerVendorCancel )
		pFnPlayerVendorCancel = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PlayerVendorCancel" );

	UNowGFXHudScene_execPlayerVendorCancel_Parms PlayerVendorCancel_Parms;
	memcpy ( &PlayerVendorCancel_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnPlayerVendorCancel, &PlayerVendorCancel_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PlayerVendorPurchase
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PlayerVendorPurchase ( struct FString sGuid )
{
	static UFunction* pFnPlayerVendorPurchase = NULL;

	if ( ! pFnPlayerVendorPurchase )
		pFnPlayerVendorPurchase = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PlayerVendorPurchase" );

	UNowGFXHudScene_execPlayerVendorPurchase_Parms PlayerVendorPurchase_Parms;
	memcpy ( &PlayerVendorPurchase_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnPlayerVendorPurchase, &PlayerVendorPurchase_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReInitPlayerVendor
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ReInitPlayerVendor ( )
{
	static UFunction* pFnReInitPlayerVendor = NULL;

	if ( ! pFnReInitPlayerVendor )
		pFnReInitPlayerVendor = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ReInitPlayerVendor" );

	UNowGFXHudScene_execReInitPlayerVendor_Parms ReInitPlayerVendor_Parms;

	this->ProcessEvent ( pFnReInitPlayerVendor, &ReInitPlayerVendor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PlayerVendorCollect
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::PlayerVendorCollect ( )
{
	static UFunction* pFnPlayerVendorCollect = NULL;

	if ( ! pFnPlayerVendorCollect )
		pFnPlayerVendorCollect = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PlayerVendorCollect" );

	UNowGFXHudScene_execPlayerVendorCollect_Parms PlayerVendorCollect_Parms;

	this->ProcessEvent ( pFnPlayerVendorCollect, &PlayerVendorCollect_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlayerVendor
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPlayerVendor ( )
{
	static UFunction* pFnInitPlayerVendor = NULL;

	if ( ! pFnInitPlayerVendor )
		pFnInitPlayerVendor = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPlayerVendor" );

	UNowGFXHudScene_execInitPlayerVendor_Parms InitPlayerVendor_Parms;

	this->ProcessEvent ( pFnInitPlayerVendor, &InitPlayerVendor_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddPlayerVendorItemSell
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sContentGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )

void UNowGFXHudScene::AddPlayerVendorItemSell ( struct FString sGuid, struct FString sContentGuid, int iCost, int iQuantity )
{
	static UFunction* pFnAddPlayerVendorItemSell = NULL;

	if ( ! pFnAddPlayerVendorItemSell )
		pFnAddPlayerVendorItemSell = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddPlayerVendorItemSell" );

	UNowGFXHudScene_execAddPlayerVendorItemSell_Parms AddPlayerVendorItemSell_Parms;
	memcpy ( &AddPlayerVendorItemSell_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &AddPlayerVendorItemSell_Parms.sContentGuid, &sContentGuid, 0xC );
	AddPlayerVendorItemSell_Parms.iCost = iCost;
	AddPlayerVendorItemSell_Parms.iQuantity = iQuantity;

	pFnAddPlayerVendorItemSell->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPlayerVendorItemSell, &AddPlayerVendorItemSell_Parms, NULL );

	pFnAddPlayerVendorItemSell->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddPlayerVendorItemBuy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sContentGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )
// struct FString                 sItemName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddPlayerVendorItemBuy ( struct FString sGuid, struct FString sContentGuid, int iCost, int iQuantity, struct FString sItemName )
{
	static UFunction* pFnAddPlayerVendorItemBuy = NULL;

	if ( ! pFnAddPlayerVendorItemBuy )
		pFnAddPlayerVendorItemBuy = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddPlayerVendorItemBuy" );

	UNowGFXHudScene_execAddPlayerVendorItemBuy_Parms AddPlayerVendorItemBuy_Parms;
	memcpy ( &AddPlayerVendorItemBuy_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &AddPlayerVendorItemBuy_Parms.sContentGuid, &sContentGuid, 0xC );
	AddPlayerVendorItemBuy_Parms.iCost = iCost;
	AddPlayerVendorItemBuy_Parms.iQuantity = iQuantity;
	memcpy ( &AddPlayerVendorItemBuy_Parms.sItemName, &sItemName, 0xC );

	pFnAddPlayerVendorItemBuy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPlayerVendorItemBuy, &AddPlayerVendorItemBuy_Parms, NULL );

	pFnAddPlayerVendorItemBuy->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.RequestPlayerVendorBuy
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::RequestPlayerVendorBuy ( )
{
	static UFunction* pFnRequestPlayerVendorBuy = NULL;

	if ( ! pFnRequestPlayerVendorBuy )
		pFnRequestPlayerVendorBuy = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RequestPlayerVendorBuy" );

	UNowGFXHudScene_execRequestPlayerVendorBuy_Parms RequestPlayerVendorBuy_Parms;

	pFnRequestPlayerVendorBuy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPlayerVendorBuy, &RequestPlayerVendorBuy_Parms, NULL );

	pFnRequestPlayerVendorBuy->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.RequestPlayerVendorSell
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::RequestPlayerVendorSell ( )
{
	static UFunction* pFnRequestPlayerVendorSell = NULL;

	if ( ! pFnRequestPlayerVendorSell )
		pFnRequestPlayerVendorSell = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RequestPlayerVendorSell" );

	UNowGFXHudScene_execRequestPlayerVendorSell_Parms RequestPlayerVendorSell_Parms;

	pFnRequestPlayerVendorSell->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPlayerVendorSell, &RequestPlayerVendorSell_Parms, NULL );

	pFnRequestPlayerVendorSell->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showPetPaperdoll
// [0x00020002] 
// Parameters infos:
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPetName                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showPetPaperdoll ( struct FString sPetGuid, struct FString sPetName )
{
	static UFunction* pFnshowPetPaperdoll = NULL;

	if ( ! pFnshowPetPaperdoll )
		pFnshowPetPaperdoll = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showPetPaperdoll" );

	UNowGFXHudScene_execshowPetPaperdoll_Parms showPetPaperdoll_Parms;
	memcpy ( &showPetPaperdoll_Parms.sPetGuid, &sPetGuid, 0xC );
	memcpy ( &showPetPaperdoll_Parms.sPetName, &sPetName, 0xC );

	this->ProcessEvent ( pFnshowPetPaperdoll, &showPetPaperdoll_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PetEquippedItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSlotName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PetEquippedItem ( struct FString sGuid, struct FString sSlotName )
{
	static UFunction* pFnPetEquippedItem = NULL;

	if ( ! pFnPetEquippedItem )
		pFnPetEquippedItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PetEquippedItem" );

	UNowGFXHudScene_execPetEquippedItem_Parms PetEquippedItem_Parms;
	memcpy ( &PetEquippedItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &PetEquippedItem_Parms.sSlotName, &sSlotName, 0xC );

	this->ProcessEvent ( pFnPetEquippedItem, &PetEquippedItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdatePetEquipped
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::UpdatePetEquipped ( )
{
	static UFunction* pFnUpdatePetEquipped = NULL;

	if ( ! pFnUpdatePetEquipped )
		pFnUpdatePetEquipped = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdatePetEquipped" );

	UNowGFXHudScene_execUpdatePetEquipped_Parms UpdatePetEquipped_Parms;

	pFnUpdatePetEquipped->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePetEquipped, &UpdatePetEquipped_Parms, NULL );

	pFnUpdatePetEquipped->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeConstruction
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeConstruction ( )
{
	static UFunction* pFncloseConstruction = NULL;

	if ( ! pFncloseConstruction )
		pFncloseConstruction = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeConstruction" );

	UNowGFXHudScene_execcloseConstruction_Parms closeConstruction_Parms;

	this->ProcessEvent ( pFncloseConstruction, &closeConstruction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setConstruction
// [0x00020002] 
// Parameters infos:
// int                            iWoodCur                       ( CPF_Parm )
// int                            iWoodMax                       ( CPF_Parm )
// int                            iStoneCur                      ( CPF_Parm )
// int                            iStoneMax                      ( CPF_Parm )
// int                            iMetalCur                      ( CPF_Parm )
// int                            iMetalMax                      ( CPF_Parm )
// int                            iHitpoints                     ( CPF_Parm )

void UNowGFXHudScene::setConstruction ( int iWoodCur, int iWoodMax, int iStoneCur, int iStoneMax, int iMetalCur, int iMetalMax, int iHitpoints )
{
	static UFunction* pFnsetConstruction = NULL;

	if ( ! pFnsetConstruction )
		pFnsetConstruction = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setConstruction" );

	UNowGFXHudScene_execsetConstruction_Parms setConstruction_Parms;
	setConstruction_Parms.iWoodCur = iWoodCur;
	setConstruction_Parms.iWoodMax = iWoodMax;
	setConstruction_Parms.iStoneCur = iStoneCur;
	setConstruction_Parms.iStoneMax = iStoneMax;
	setConstruction_Parms.iMetalCur = iMetalCur;
	setConstruction_Parms.iMetalMax = iMetalMax;
	setConstruction_Parms.iHitpoints = iHitpoints;

	this->ProcessEvent ( pFnsetConstruction, &setConstruction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showConstruction
// [0x00020002] 
// Parameters infos:
// int                            iHouseId                       ( CPF_Parm )
// unsigned long                  bChangeLock                    ( CPF_Parm )
// unsigned long                  bNewKey                        ( CPF_Parm )

void UNowGFXHudScene::showConstruction ( int iHouseId, unsigned long bChangeLock, unsigned long bNewKey )
{
	static UFunction* pFnshowConstruction = NULL;

	if ( ! pFnshowConstruction )
		pFnshowConstruction = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showConstruction" );

	UNowGFXHudScene_execshowConstruction_Parms showConstruction_Parms;
	showConstruction_Parms.iHouseId = iHouseId;
	showConstruction_Parms.bChangeLock = bChangeLock;
	showConstruction_Parms.bNewKey = bNewKey;

	this->ProcessEvent ( pFnshowConstruction, &showConstruction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitHouseConstruction
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitHouseConstruction ( )
{
	static UFunction* pFnInitHouseConstruction = NULL;

	if ( ! pFnInitHouseConstruction )
		pFnInitHouseConstruction = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitHouseConstruction" );

	UNowGFXHudScene_execInitHouseConstruction_Parms InitHouseConstruction_Parms;

	this->ProcessEvent ( pFnInitHouseConstruction, &InitHouseConstruction_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPetBag
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAi*       pPet                           ( CPF_Parm )

void UNowGFXHudScene::InitPetBag ( class ANowAtlasAvatarAi* pPet )
{
	static UFunction* pFnInitPetBag = NULL;

	if ( ! pFnInitPetBag )
		pFnInitPetBag = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPetBag" );

	UNowGFXHudScene_execInitPetBag_Parms InitPetBag_Parms;
	InitPetBag_Parms.pPet = pPet;

	this->ProcessEvent ( pFnInitPetBag, &InitPetBag_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetPetBagSize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowAtlasAvatarAi*       pPet                           ( CPF_Parm )

int UNowGFXHudScene::GetPetBagSize ( class ANowAtlasAvatarAi* pPet )
{
	static UFunction* pFnGetPetBagSize = NULL;

	if ( ! pFnGetPetBagSize )
		pFnGetPetBagSize = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetPetBagSize" );

	UNowGFXHudScene_execGetPetBagSize_Parms GetPetBagSize_Parms;
	GetPetBagSize_Parms.pPet = pPet;

	pFnGetPetBagSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetBagSize, &GetPetBagSize_Parms, NULL );

	pFnGetPetBagSize->FunctionFlags |= 0x400;

	return GetPetBagSize_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.PetUnEquipAll
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PetUnEquipAll ( struct FString sPetGuid )
{
	static UFunction* pFnPetUnEquipAll = NULL;

	if ( ! pFnPetUnEquipAll )
		pFnPetUnEquipAll = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PetUnEquipAll" );

	UNowGFXHudScene_execPetUnEquipAll_Parms PetUnEquipAll_Parms;
	memcpy ( &PetUnEquipAll_Parms.sPetGuid, &sPetGuid, 0xC );

	pFnPetUnEquipAll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPetUnEquipAll, &PetUnEquipAll_Parms, NULL );

	pFnPetUnEquipAll->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.setAdvancedStats
// [0x00020002] 
// Parameters infos:
// int                            iStructures                    ( CPF_Parm )
// int                            iArea                          ( CPF_Parm )
// int                            iOverlap                       ( CPF_Parm )
// int                            iTotal                         ( CPF_Parm )
// unsigned long                  bLinked                        ( CPF_Parm )
// int                            iNPCCost                       ( CPF_Parm )
// int                            iTotalCPCost                   ( CPF_Parm )
// int                            iCPIncome                      ( CPF_Parm )
// int                            iCPCost                        ( CPF_Parm )
// int                            iTotalCP                       ( CPF_Parm )
// int                            iRadiusTgt                     ( CPF_Parm )
// int                            iOffTgt                        ( CPF_Parm )
// int                            iDefTgt                        ( CPF_Parm )
// int                            iTierRadiusMax                 ( CPF_Parm )
// int                            iTierOffMax                    ( CPF_Parm )
// int                            iTierDefMax                    ( CPF_Parm )

void UNowGFXHudScene::setAdvancedStats ( int iStructures, int iArea, int iOverlap, int iTotal, unsigned long bLinked, int iNPCCost, int iTotalCPCost, int iCPIncome, int iCPCost, int iTotalCP, int iRadiusTgt, int iOffTgt, int iDefTgt, int iTierRadiusMax, int iTierOffMax, int iTierDefMax )
{
	static UFunction* pFnsetAdvancedStats = NULL;

	if ( ! pFnsetAdvancedStats )
		pFnsetAdvancedStats = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setAdvancedStats" );

	UNowGFXHudScene_execsetAdvancedStats_Parms setAdvancedStats_Parms;
	setAdvancedStats_Parms.iStructures = iStructures;
	setAdvancedStats_Parms.iArea = iArea;
	setAdvancedStats_Parms.iOverlap = iOverlap;
	setAdvancedStats_Parms.iTotal = iTotal;
	setAdvancedStats_Parms.bLinked = bLinked;
	setAdvancedStats_Parms.iNPCCost = iNPCCost;
	setAdvancedStats_Parms.iTotalCPCost = iTotalCPCost;
	setAdvancedStats_Parms.iCPIncome = iCPIncome;
	setAdvancedStats_Parms.iCPCost = iCPCost;
	setAdvancedStats_Parms.iTotalCP = iTotalCP;
	setAdvancedStats_Parms.iRadiusTgt = iRadiusTgt;
	setAdvancedStats_Parms.iOffTgt = iOffTgt;
	setAdvancedStats_Parms.iDefTgt = iDefTgt;
	setAdvancedStats_Parms.iTierRadiusMax = iTierRadiusMax;
	setAdvancedStats_Parms.iTierOffMax = iTierOffMax;
	setAdvancedStats_Parms.iTierDefMax = iTierDefMax;

	this->ProcessEvent ( pFnsetAdvancedStats, &setAdvancedStats_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPylonStats
// [0x00020002] 
// Parameters infos:
// int                            iHpCur                         ( CPF_Parm )
// int                            iHpMax                         ( CPF_Parm )
// int                            iAoe                           ( CPF_Parm )
// int                            iDef                           ( CPF_Parm )
// int                            iOff                           ( CPF_Parm )

void UNowGFXHudScene::setPylonStats ( int iHpCur, int iHpMax, int iAoe, int iDef, int iOff )
{
	static UFunction* pFnsetPylonStats = NULL;

	if ( ! pFnsetPylonStats )
		pFnsetPylonStats = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setPylonStats" );

	UNowGFXHudScene_execsetPylonStats_Parms setPylonStats_Parms;
	setPylonStats_Parms.iHpCur = iHpCur;
	setPylonStats_Parms.iHpMax = iHpMax;
	setPylonStats_Parms.iAoe = iAoe;
	setPylonStats_Parms.iDef = iDef;
	setPylonStats_Parms.iOff = iOff;

	this->ProcessEvent ( pFnsetPylonStats, &setPylonStats_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addBlacklist
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sPlayerName                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddBlacklist ( struct FString sPlayerName )
{
	static UFunction* pFnaddBlacklist = NULL;

	if ( ! pFnaddBlacklist )
		pFnaddBlacklist = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addBlacklist" );

	UNowGFXHudScene_eventaddBlacklist_Parms addBlacklist_Parms;
	memcpy ( &addBlacklist_Parms.sPlayerName, &sPlayerName, 0xC );

	this->ProcessEvent ( pFnaddBlacklist, &addBlacklist_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showBlacklist
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showBlacklist ( )
{
	static UFunction* pFnshowBlacklist = NULL;

	if ( ! pFnshowBlacklist )
		pFnshowBlacklist = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showBlacklist" );

	UNowGFXHudScene_execshowBlacklist_Parms showBlacklist_Parms;

	this->ProcessEvent ( pFnshowBlacklist, &showBlacklist_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closePylon
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closePylon ( )
{
	static UFunction* pFnclosePylon = NULL;

	if ( ! pFnclosePylon )
		pFnclosePylon = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closePylon" );

	UNowGFXHudScene_execclosePylon_Parms closePylon_Parms;

	this->ProcessEvent ( pFnclosePylon, &closePylon_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showPylon
// [0x00020002] 
// Parameters infos:
// struct FString                 sPylonName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuildName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sLastRound                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bEditable                      ( CPF_Parm )
// unsigned long                  bRename                        ( CPF_Parm )

void UNowGFXHudScene::showPylon ( struct FString sPylonName, struct FString sGuildName, struct FString sLastRound, unsigned long bEditable, unsigned long bRename )
{
	static UFunction* pFnshowPylon = NULL;

	if ( ! pFnshowPylon )
		pFnshowPylon = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showPylon" );

	UNowGFXHudScene_execshowPylon_Parms showPylon_Parms;
	memcpy ( &showPylon_Parms.sPylonName, &sPylonName, 0xC );
	memcpy ( &showPylon_Parms.sGuildName, &sGuildName, 0xC );
	memcpy ( &showPylon_Parms.sLastRound, &sLastRound, 0xC );
	showPylon_Parms.bEditable = bEditable;
	showPylon_Parms.bRename = bRename;

	this->ProcessEvent ( pFnshowPylon, &showPylon_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CheckValidName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 NewName                        ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::CheckValidName ( struct FString NewName )
{
	static UFunction* pFnCheckValidName = NULL;

	if ( ! pFnCheckValidName )
		pFnCheckValidName = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CheckValidName" );

	UNowGFXHudScene_execCheckValidName_Parms CheckValidName_Parms;
	memcpy ( &CheckValidName_Parms.NewName, &NewName, 0xC );

	this->ProcessEvent ( pFnCheckValidName, &CheckValidName_Parms, NULL );

	return CheckValidName_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.PylonSetName
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PylonSetName ( struct FString sName )
{
	static UFunction* pFnPylonSetName = NULL;

	if ( ! pFnPylonSetName )
		pFnPylonSetName = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PylonSetName" );

	UNowGFXHudScene_execPylonSetName_Parms PylonSetName_Parms;
	memcpy ( &PylonSetName_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnPylonSetName, &PylonSetName_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PylonSetDefense
// [0x00020002] 
// Parameters infos:
// int                            iDefense                       ( CPF_Parm )

void UNowGFXHudScene::PylonSetDefense ( int iDefense )
{
	static UFunction* pFnPylonSetDefense = NULL;

	if ( ! pFnPylonSetDefense )
		pFnPylonSetDefense = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PylonSetDefense" );

	UNowGFXHudScene_execPylonSetDefense_Parms PylonSetDefense_Parms;
	PylonSetDefense_Parms.iDefense = iDefense;

	this->ProcessEvent ( pFnPylonSetDefense, &PylonSetDefense_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PylonSetOffense
// [0x00020002] 
// Parameters infos:
// int                            iOffense                       ( CPF_Parm )

void UNowGFXHudScene::PylonSetOffense ( int iOffense )
{
	static UFunction* pFnPylonSetOffense = NULL;

	if ( ! pFnPylonSetOffense )
		pFnPylonSetOffense = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PylonSetOffense" );

	UNowGFXHudScene_execPylonSetOffense_Parms PylonSetOffense_Parms;
	PylonSetOffense_Parms.iOffense = iOffense;

	this->ProcessEvent ( pFnPylonSetOffense, &PylonSetOffense_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PylonSetRadius
// [0x00020002] 
// Parameters infos:
// int                            iRadius                        ( CPF_Parm )

void UNowGFXHudScene::PylonSetRadius ( int iRadius )
{
	static UFunction* pFnPylonSetRadius = NULL;

	if ( ! pFnPylonSetRadius )
		pFnPylonSetRadius = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PylonSetRadius" );

	UNowGFXHudScene_execPylonSetRadius_Parms PylonSetRadius_Parms;
	PylonSetRadius_Parms.iRadius = iRadius;

	this->ProcessEvent ( pFnPylonSetRadius, &PylonSetRadius_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FindTowerID
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::FindTowerID ( struct FString sGuid )
{
	static UFunction* pFnFindTowerID = NULL;

	if ( ! pFnFindTowerID )
		pFnFindTowerID = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FindTowerID" );

	UNowGFXHudScene_execFindTowerID_Parms FindTowerID_Parms;
	memcpy ( &FindTowerID_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnFindTowerID, &FindTowerID_Parms, NULL );

	return FindTowerID_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.PylonBlacklist
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::PylonBlacklist ( )
{
	static UFunction* pFnPylonBlacklist = NULL;

	if ( ! pFnPylonBlacklist )
		pFnPylonBlacklist = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PylonBlacklist" );

	UNowGFXHudScene_execPylonBlacklist_Parms PylonBlacklist_Parms;

	this->ProcessEvent ( pFnPylonBlacklist, &PylonBlacklist_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PylonBlacklistRemove
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PylonBlacklistRemove ( struct FString sName )
{
	static UFunction* pFnPylonBlacklistRemove = NULL;

	if ( ! pFnPylonBlacklistRemove )
		pFnPylonBlacklistRemove = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PylonBlacklistRemove" );

	UNowGFXHudScene_execPylonBlacklistRemove_Parms PylonBlacklistRemove_Parms;
	memcpy ( &PylonBlacklistRemove_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnPylonBlacklistRemove, &PylonBlacklistRemove_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PylonBlacklistAdd
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PylonBlacklistAdd ( struct FString sName )
{
	static UFunction* pFnPylonBlacklistAdd = NULL;

	if ( ! pFnPylonBlacklistAdd )
		pFnPylonBlacklistAdd = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PylonBlacklistAdd" );

	UNowGFXHudScene_execPylonBlacklistAdd_Parms PylonBlacklistAdd_Parms;
	memcpy ( &PylonBlacklistAdd_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnPylonBlacklistAdd, &PylonBlacklistAdd_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPylonInfo
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPylonInfo ( )
{
	static UFunction* pFnInitPylonInfo = NULL;

	if ( ! pFnInitPylonInfo )
		pFnInitPylonInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPylonInfo" );

	UNowGFXHudScene_execInitPylonInfo_Parms InitPylonInfo_Parms;

	this->ProcessEvent ( pFnInitPylonInfo, &InitPylonInfo_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPylon
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPylon ( )
{
	static UFunction* pFnInitPylon = NULL;

	if ( ! pFnInitPylon )
		pFnInitPylon = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPylon" );

	UNowGFXHudScene_execInitPylon_Parms InitPylon_Parms;

	this->ProcessEvent ( pFnInitPylon, &InitPylon_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendGetAllBlacklists
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::SendGetAllBlacklists ( )
{
	static UFunction* pFnSendGetAllBlacklists = NULL;

	if ( ! pFnSendGetAllBlacklists )
		pFnSendGetAllBlacklists = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendGetAllBlacklists" );

	UNowGFXHudScene_execSendGetAllBlacklists_Parms SendGetAllBlacklists_Parms;

	pFnSendGetAllBlacklists->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendGetAllBlacklists, &SendGetAllBlacklists_Parms, NULL );

	pFnSendGetAllBlacklists->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendPylonBlacklistRemove
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendPylonBlacklistRemove ( struct FString sName )
{
	static UFunction* pFnSendPylonBlacklistRemove = NULL;

	if ( ! pFnSendPylonBlacklistRemove )
		pFnSendPylonBlacklistRemove = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendPylonBlacklistRemove" );

	UNowGFXHudScene_execSendPylonBlacklistRemove_Parms SendPylonBlacklistRemove_Parms;
	memcpy ( &SendPylonBlacklistRemove_Parms.sName, &sName, 0xC );

	pFnSendPylonBlacklistRemove->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendPylonBlacklistRemove, &SendPylonBlacklistRemove_Parms, NULL );

	pFnSendPylonBlacklistRemove->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendPylonBlacklistAdd
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

bool UNowGFXHudScene::SendPylonBlacklistAdd ( struct FString sName )
{
	static UFunction* pFnSendPylonBlacklistAdd = NULL;

	if ( ! pFnSendPylonBlacklistAdd )
		pFnSendPylonBlacklistAdd = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendPylonBlacklistAdd" );

	UNowGFXHudScene_execSendPylonBlacklistAdd_Parms SendPylonBlacklistAdd_Parms;
	memcpy ( &SendPylonBlacklistAdd_Parms.sName, &sName, 0xC );

	pFnSendPylonBlacklistAdd->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendPylonBlacklistAdd, &SendPylonBlacklistAdd_Parms, NULL );

	pFnSendPylonBlacklistAdd->FunctionFlags |= 0x400;

	return SendPylonBlacklistAdd_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.addNPC
// [0x00020002] 
// Parameters infos:
// struct FString                 sDisplayName                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sDescription                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sRequirements                  ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCostCoin                      ( CPF_Parm )
// int                            iCostPP                        ( CPF_Parm )
// int                            iUpkeepCoin                    ( CPF_Parm )
// int                            iUpkeepCP                      ( CPF_Parm )

void UNowGFXHudScene::addNPC ( struct FString sDisplayName, struct FString sDescription, struct FString sRequirements, int iCostCoin, int iCostPP, int iUpkeepCoin, int iUpkeepCP )
{
	static UFunction* pFnaddNPC = NULL;

	if ( ! pFnaddNPC )
		pFnaddNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addNPC" );

	UNowGFXHudScene_execaddNPC_Parms addNPC_Parms;
	memcpy ( &addNPC_Parms.sDisplayName, &sDisplayName, 0xC );
	memcpy ( &addNPC_Parms.sDescription, &sDescription, 0xC );
	memcpy ( &addNPC_Parms.sRequirements, &sRequirements, 0xC );
	addNPC_Parms.iCostCoin = iCostCoin;
	addNPC_Parms.iCostPP = iCostPP;
	addNPC_Parms.iUpkeepCoin = iUpkeepCoin;
	addNPC_Parms.iUpkeepCP = iUpkeepCP;

	this->ProcessEvent ( pFnaddNPC, &addNPC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateSlots
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::updateSlots ( )
{
	static UFunction* pFnupdateSlots = NULL;

	if ( ! pFnupdateSlots )
		pFnupdateSlots = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updateSlots" );

	UNowGFXHudScene_execupdateSlots_Parms updateSlots_Parms;

	this->ProcessEvent ( pFnupdateSlots, &updateSlots_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.currentNPC
// [0x00020002] 
// Parameters infos:
// struct FString                 sDisplayName                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

void UNowGFXHudScene::currentNPC ( struct FString sDisplayName, int iSlot )
{
	static UFunction* pFncurrentNPC = NULL;

	if ( ! pFncurrentNPC )
		pFncurrentNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.currentNPC" );

	UNowGFXHudScene_execcurrentNPC_Parms currentNPC_Parms;
	memcpy ( &currentNPC_Parms.sDisplayName, &sDisplayName, 0xC );
	currentNPC_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFncurrentNPC, &currentNPC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addOverseerSlot
// [0x00020002] 
// Parameters infos:
// int                            iSlotId                        ( CPF_Parm )
// int                            iPercentX                      ( CPF_Parm )
// int                            iPercentY                      ( CPF_Parm )
// struct FString                 sDescription                   ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addOverseerSlot ( int iSlotId, int iPercentX, int iPercentY, struct FString sDescription )
{
	static UFunction* pFnaddOverseerSlot = NULL;

	if ( ! pFnaddOverseerSlot )
		pFnaddOverseerSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addOverseerSlot" );

	UNowGFXHudScene_execaddOverseerSlot_Parms addOverseerSlot_Parms;
	addOverseerSlot_Parms.iSlotId = iSlotId;
	addOverseerSlot_Parms.iPercentX = iPercentX;
	addOverseerSlot_Parms.iPercentY = iPercentY;
	memcpy ( &addOverseerSlot_Parms.sDescription, &sDescription, 0xC );

	this->ProcessEvent ( pFnaddOverseerSlot, &addOverseerSlot_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setOverseerBalances
// [0x00020002] 
// Parameters infos:
// int                            iFundsCoin                     ( CPF_Parm )
// int                            iFundsPP                       ( CPF_Parm )
// int                            iTotalUpkeepCoin               ( CPF_Parm )
// int                            iTotalUpkeepCP                 ( CPF_Parm )

void UNowGFXHudScene::setOverseerBalances ( int iFundsCoin, int iFundsPP, int iTotalUpkeepCoin, int iTotalUpkeepCP )
{
	static UFunction* pFnsetOverseerBalances = NULL;

	if ( ! pFnsetOverseerBalances )
		pFnsetOverseerBalances = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setOverseerBalances" );

	UNowGFXHudScene_execsetOverseerBalances_Parms setOverseerBalances_Parms;
	setOverseerBalances_Parms.iFundsCoin = iFundsCoin;
	setOverseerBalances_Parms.iFundsPP = iFundsPP;
	setOverseerBalances_Parms.iTotalUpkeepCoin = iTotalUpkeepCoin;
	setOverseerBalances_Parms.iTotalUpkeepCP = iTotalUpkeepCP;

	this->ProcessEvent ( pFnsetOverseerBalances, &setOverseerBalances_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showOverseer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showOverseer ( )
{
	static UFunction* pFnshowOverseer = NULL;

	if ( ! pFnshowOverseer )
		pFnshowOverseer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showOverseer" );

	UNowGFXHudScene_execshowOverseer_Parms showOverseer_Parms;

	this->ProcessEvent ( pFnshowOverseer, &showOverseer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.closeOverseer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeOverseer ( )
{
	static UFunction* pFncloseOverseer = NULL;

	if ( ! pFncloseOverseer )
		pFncloseOverseer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeOverseer" );

	UNowGFXHudScene_execcloseOverseer_Parms closeOverseer_Parms;

	this->ProcessEvent ( pFncloseOverseer, &closeOverseer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.npcDismissed
// [0x00020002] 
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::npcDismissed ( struct FString sTitle )
{
	static UFunction* pFnnpcDismissed = NULL;

	if ( ! pFnnpcDismissed )
		pFnnpcDismissed = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.npcDismissed" );

	UNowGFXHudScene_execnpcDismissed_Parms npcDismissed_Parms;
	memcpy ( &npcDismissed_Parms.sTitle, &sTitle, 0xC );

	this->ProcessEvent ( pFnnpcDismissed, &npcDismissed_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddNPCToArray
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Requirements                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            CostCoin                       ( CPF_Parm )
// int                            CostPP                         ( CPF_Parm )
// int                            UpkeepCoin                     ( CPF_Parm )
// int                            UpkeepCP                       ( CPF_Parm )

void UNowGFXHudScene::eventAddNPCToArray ( struct FString DisplayName, struct FString Description, struct FString Requirements, int CostCoin, int CostPP, int UpkeepCoin, int UpkeepCP )
{
	static UFunction* pFnAddNPCToArray = NULL;

	if ( ! pFnAddNPCToArray )
		pFnAddNPCToArray = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddNPCToArray" );

	UNowGFXHudScene_eventAddNPCToArray_Parms AddNPCToArray_Parms;
	memcpy ( &AddNPCToArray_Parms.DisplayName, &DisplayName, 0xC );
	memcpy ( &AddNPCToArray_Parms.Description, &Description, 0xC );
	memcpy ( &AddNPCToArray_Parms.Requirements, &Requirements, 0xC );
	AddNPCToArray_Parms.CostCoin = CostCoin;
	AddNPCToArray_Parms.CostPP = CostPP;
	AddNPCToArray_Parms.UpkeepCoin = UpkeepCoin;
	AddNPCToArray_Parms.UpkeepCP = UpkeepCP;

	this->ProcessEvent ( pFnAddNPCToArray, &AddNPCToArray_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DismissNPC
// [0x00020002] 
// Parameters infos:
// int                            newSlot                        ( CPF_Parm )

void UNowGFXHudScene::DismissNPC ( int newSlot )
{
	static UFunction* pFnDismissNPC = NULL;

	if ( ! pFnDismissNPC )
		pFnDismissNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.DismissNPC" );

	UNowGFXHudScene_execDismissNPC_Parms DismissNPC_Parms;
	DismissNPC_Parms.newSlot = newSlot;

	this->ProcessEvent ( pFnDismissNPC, &DismissNPC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetSlot
// [0x00020002] 
// Parameters infos:
// int                            newSlot                        ( CPF_Parm )
// int                            oldSlot                        ( CPF_Parm )

void UNowGFXHudScene::SetSlot ( int newSlot, int oldSlot )
{
	static UFunction* pFnSetSlot = NULL;

	if ( ! pFnSetSlot )
		pFnSetSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetSlot" );

	UNowGFXHudScene_execSetSlot_Parms SetSlot_Parms;
	SetSlot_Parms.newSlot = newSlot;
	SetSlot_Parms.oldSlot = oldSlot;

	this->ProcessEvent ( pFnSetSlot, &SetSlot_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FindNpcIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sDisplayName                   ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::FindNpcIndex ( struct FString sDisplayName )
{
	static UFunction* pFnFindNpcIndex = NULL;

	if ( ! pFnFindNpcIndex )
		pFnFindNpcIndex = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FindNpcIndex" );

	UNowGFXHudScene_execFindNpcIndex_Parms FindNpcIndex_Parms;
	memcpy ( &FindNpcIndex_Parms.sDisplayName, &sDisplayName, 0xC );

	this->ProcessEvent ( pFnFindNpcIndex, &FindNpcIndex_Parms, NULL );

	return FindNpcIndex_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetCurrentNpcs
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::GetCurrentNpcs ( )
{
	static UFunction* pFnGetCurrentNpcs = NULL;

	if ( ! pFnGetCurrentNpcs )
		pFnGetCurrentNpcs = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetCurrentNpcs" );

	UNowGFXHudScene_execGetCurrentNpcs_Parms GetCurrentNpcs_Parms;

	this->ProcessEvent ( pFnGetCurrentNpcs, &GetCurrentNpcs_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.HireNPC
// [0x00020002] 
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

void UNowGFXHudScene::HireNPC ( struct FString sTitle, int iSlot )
{
	static UFunction* pFnHireNPC = NULL;

	if ( ! pFnHireNPC )
		pFnHireNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.HireNPC" );

	UNowGFXHudScene_execHireNPC_Parms HireNPC_Parms;
	memcpy ( &HireNPC_Parms.sTitle, &sTitle, 0xC );
	HireNPC_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnHireNPC, &HireNPC_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitOverseerSlots
// [0x00820002] 
// Parameters infos:

void UNowGFXHudScene::InitOverseerSlots ( )
{
	static UFunction* pFnInitOverseerSlots = NULL;

	if ( ! pFnInitOverseerSlots )
		pFnInitOverseerSlots = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitOverseerSlots" );

	UNowGFXHudScene_execInitOverseerSlots_Parms InitOverseerSlots_Parms;

	this->ProcessEvent ( pFnInitOverseerSlots, &InitOverseerSlots_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitOverseerBalance
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitOverseerBalance ( )
{
	static UFunction* pFnInitOverseerBalance = NULL;

	if ( ! pFnInitOverseerBalance )
		pFnInitOverseerBalance = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitOverseerBalance" );

	UNowGFXHudScene_execInitOverseerBalance_Parms InitOverseerBalance_Parms;

	this->ProcessEvent ( pFnInitOverseerBalance, &InitOverseerBalance_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RequestOverseer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::RequestOverseer ( )
{
	static UFunction* pFnRequestOverseer = NULL;

	if ( ! pFnRequestOverseer )
		pFnRequestOverseer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RequestOverseer" );

	UNowGFXHudScene_execRequestOverseer_Parms RequestOverseer_Parms;

	this->ProcessEvent ( pFnRequestOverseer, &RequestOverseer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitOverseer
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitOverseer ( )
{
	static UFunction* pFnInitOverseer = NULL;

	if ( ! pFnInitOverseer )
		pFnInitOverseer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitOverseer" );

	UNowGFXHudScene_execInitOverseer_Parms InitOverseer_Parms;

	this->ProcessEvent ( pFnInitOverseer, &InitOverseer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendSwapNPC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            indexFrom                      ( CPF_Parm )
// int                            indexToo                       ( CPF_Parm )

void UNowGFXHudScene::SendSwapNPC ( int indexFrom, int indexToo )
{
	static UFunction* pFnSendSwapNPC = NULL;

	if ( ! pFnSendSwapNPC )
		pFnSendSwapNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendSwapNPC" );

	UNowGFXHudScene_execSendSwapNPC_Parms SendSwapNPC_Parms;
	SendSwapNPC_Parms.indexFrom = indexFrom;
	SendSwapNPC_Parms.indexToo = indexToo;

	pFnSendSwapNPC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendSwapNPC, &SendSwapNPC_Parms, NULL );

	pFnSendSwapNPC->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendDismissNPC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowGFXHudScene::SendDismissNPC ( int Index )
{
	static UFunction* pFnSendDismissNPC = NULL;

	if ( ! pFnSendDismissNPC )
		pFnSendDismissNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendDismissNPC" );

	UNowGFXHudScene_execSendDismissNPC_Parms SendDismissNPC_Parms;
	SendDismissNPC_Parms.Index = Index;

	pFnSendDismissNPC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendDismissNPC, &SendDismissNPC_Parms, NULL );

	pFnSendDismissNPC->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendBuyNPC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowGFXHudScene::SendBuyNPC ( int Index )
{
	static UFunction* pFnSendBuyNPC = NULL;

	if ( ! pFnSendBuyNPC )
		pFnSendBuyNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendBuyNPC" );

	UNowGFXHudScene_execSendBuyNPC_Parms SendBuyNPC_Parms;
	SendBuyNPC_Parms.Index = Index;

	pFnSendBuyNPC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendBuyNPC, &SendBuyNPC_Parms, NULL );

	pFnSendBuyNPC->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetNPCArray
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetNPCArray ( )
{
	static UFunction* pFnGetNPCArray = NULL;

	if ( ! pFnGetNPCArray )
		pFnGetNPCArray = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetNPCArray" );

	UNowGFXHudScene_execGetNPCArray_Parms GetNPCArray_Parms;

	pFnGetNPCArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNPCArray, &GetNPCArray_Parms, NULL );

	pFnGetNPCArray->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeGlassBlowing
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeGlassBlowing ( )
{
	static UFunction* pFncloseGlassBlowing = NULL;

	if ( ! pFncloseGlassBlowing )
		pFncloseGlassBlowing = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeGlassBlowing" );

	UNowGFXHudScene_execcloseGlassBlowing_Parms closeGlassBlowing_Parms;

	this->ProcessEvent ( pFncloseGlassBlowing, &closeGlassBlowing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showGlassBlowing
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showGlassBlowing ( )
{
	static UFunction* pFnshowGlassBlowing = NULL;

	if ( ! pFnshowGlassBlowing )
		pFnshowGlassBlowing = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showGlassBlowing" );

	UNowGFXHudScene_execshowGlassBlowing_Parms showGlassBlowing_Parms;

	this->ProcessEvent ( pFnshowGlassBlowing, &showGlassBlowing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SortByGlassLabel
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FsCraftGlassInfo        A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FsCraftGlassInfo        B                              ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::SortByGlassLabel ( struct FsCraftGlassInfo A, struct FsCraftGlassInfo B )
{
	static UFunction* pFnSortByGlassLabel = NULL;

	if ( ! pFnSortByGlassLabel )
		pFnSortByGlassLabel = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SortByGlassLabel" );

	UNowGFXHudScene_execSortByGlassLabel_Parms SortByGlassLabel_Parms;
	memcpy ( &SortByGlassLabel_Parms.A, &A, 0x3C );
	memcpy ( &SortByGlassLabel_Parms.B, &B, 0x3C );

	this->ProcessEvent ( pFnSortByGlassLabel, &SortByGlassLabel_Parms, NULL );

	return SortByGlassLabel_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetSendNameFromGlass
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXHudScene::eventGetSendNameFromGlass ( struct FString sName )
{
	static UFunction* pFnGetSendNameFromGlass = NULL;

	if ( ! pFnGetSendNameFromGlass )
		pFnGetSendNameFromGlass = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetSendNameFromGlass" );

	UNowGFXHudScene_eventGetSendNameFromGlass_Parms GetSendNameFromGlass_Parms;
	memcpy ( &GetSendNameFromGlass_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetSendNameFromGlass, &GetSendNameFromGlass_Parms, NULL );

	return GetSendNameFromGlass_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CraftGlass
// [0x00020002] 
// Parameters infos:
// struct FString                 sItem                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuidA                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuidB                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sGuidC                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::CraftGlass ( struct FString sItem, struct FString sGuidA, struct FString sGuidB, struct FString sGuidC )
{
	static UFunction* pFnCraftGlass = NULL;

	if ( ! pFnCraftGlass )
		pFnCraftGlass = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CraftGlass" );

	UNowGFXHudScene_execCraftGlass_Parms CraftGlass_Parms;
	memcpy ( &CraftGlass_Parms.sItem, &sItem, 0xC );
	memcpy ( &CraftGlass_Parms.sGuidA, &sGuidA, 0xC );
	memcpy ( &CraftGlass_Parms.sGuidB, &sGuidB, 0xC );
	memcpy ( &CraftGlass_Parms.sGuidC, &sGuidC, 0xC );

	this->ProcessEvent ( pFnCraftGlass, &CraftGlass_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.WorkBenchIsHot
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::WorkBenchIsHot ( )
{
	static UFunction* pFnWorkBenchIsHot = NULL;

	if ( ! pFnWorkBenchIsHot )
		pFnWorkBenchIsHot = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.WorkBenchIsHot" );

	UNowGFXHudScene_execWorkBenchIsHot_Parms WorkBenchIsHot_Parms;

	this->ProcessEvent ( pFnWorkBenchIsHot, &WorkBenchIsHot_Parms, NULL );

	return WorkBenchIsHot_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetGlassIndexByName
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXHudScene::GetGlassIndexByName ( struct FString sString )
{
	static UFunction* pFnGetGlassIndexByName = NULL;

	if ( ! pFnGetGlassIndexByName )
		pFnGetGlassIndexByName = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetGlassIndexByName" );

	UNowGFXHudScene_execGetGlassIndexByName_Parms GetGlassIndexByName_Parms;
	memcpy ( &GetGlassIndexByName_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnGetGlassIndexByName, &GetGlassIndexByName_Parms, NULL );

	return GetGlassIndexByName_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.UpdateGlassMaterials
// [0x00020002] 
// Parameters infos:
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::UpdateGlassMaterials ( struct FString sString )
{
	static UFunction* pFnUpdateGlassMaterials = NULL;

	if ( ! pFnUpdateGlassMaterials )
		pFnUpdateGlassMaterials = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateGlassMaterials" );

	UNowGFXHudScene_execUpdateGlassMaterials_Parms UpdateGlassMaterials_Parms;
	memcpy ( &UpdateGlassMaterials_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnUpdateGlassMaterials, &UpdateGlassMaterials_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeGlassArrays
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventFinalizeGlassArrays ( )
{
	static UFunction* pFnFinalizeGlassArrays = NULL;

	if ( ! pFnFinalizeGlassArrays )
		pFnFinalizeGlassArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizeGlassArrays" );

	UNowGFXHudScene_eventFinalizeGlassArrays_Parms FinalizeGlassArrays_Parms;

	this->ProcessEvent ( pFnFinalizeGlassArrays, &FinalizeGlassArrays_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddGlassInfo
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sLabelName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sSendName                      ( CPF_Parm | CPF_NeedCtorLink )
// TArray< struct FString >       matA                           ( CPF_Parm | CPF_NeedCtorLink )
// TArray< struct FString >       matB                           ( CPF_Parm | CPF_NeedCtorLink )
// TArray< struct FString >       matC                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventAddGlassInfo ( struct FString sLabelName, struct FString sSendName, TArray< struct FString > matA, TArray< struct FString > matB, TArray< struct FString > matC )
{
	static UFunction* pFnAddGlassInfo = NULL;

	if ( ! pFnAddGlassInfo )
		pFnAddGlassInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddGlassInfo" );

	UNowGFXHudScene_eventAddGlassInfo_Parms AddGlassInfo_Parms;
	memcpy ( &AddGlassInfo_Parms.sLabelName, &sLabelName, 0xC );
	memcpy ( &AddGlassInfo_Parms.sSendName, &sSendName, 0xC );
	memcpy ( &AddGlassInfo_Parms.matA, &matA, 0xC );
	memcpy ( &AddGlassInfo_Parms.matB, &matB, 0xC );
	memcpy ( &AddGlassInfo_Parms.matC, &matC, 0xC );

	this->ProcessEvent ( pFnAddGlassInfo, &AddGlassInfo_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGlassblowing
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGlassblowing ( )
{
	static UFunction* pFnInitGlassblowing = NULL;

	if ( ! pFnInitGlassblowing )
		pFnInitGlassblowing = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitGlassblowing" );

	UNowGFXHudScene_execInitGlassblowing_Parms InitGlassblowing_Parms;

	this->ProcessEvent ( pFnInitGlassblowing, &InitGlassblowing_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DoGlassBlowing
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGlassInfo                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMatA                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMatB                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMatC                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::DoGlassBlowing ( struct FString sGlassInfo, struct FString sMatA, struct FString sMatB, struct FString sMatC )
{
	static UFunction* pFnDoGlassBlowing = NULL;

	if ( ! pFnDoGlassBlowing )
		pFnDoGlassBlowing = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.DoGlassBlowing" );

	UNowGFXHudScene_execDoGlassBlowing_Parms DoGlassBlowing_Parms;
	memcpy ( &DoGlassBlowing_Parms.sGlassInfo, &sGlassInfo, 0xC );
	memcpy ( &DoGlassBlowing_Parms.sMatA, &sMatA, 0xC );
	memcpy ( &DoGlassBlowing_Parms.sMatB, &sMatB, 0xC );
	memcpy ( &DoGlassBlowing_Parms.sMatC, &sMatC, 0xC );

	pFnDoGlassBlowing->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoGlassBlowing, &DoGlassBlowing_Parms, NULL );

	pFnDoGlassBlowing->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetMatCItemGuids
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iIndex                         ( CPF_Parm )

TArray< struct FString > UNowGFXHudScene::GetMatCItemGuids ( int iIndex )
{
	static UFunction* pFnGetMatCItemGuids = NULL;

	if ( ! pFnGetMatCItemGuids )
		pFnGetMatCItemGuids = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetMatCItemGuids" );

	UNowGFXHudScene_execGetMatCItemGuids_Parms GetMatCItemGuids_Parms;
	GetMatCItemGuids_Parms.iIndex = iIndex;

	pFnGetMatCItemGuids->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMatCItemGuids, &GetMatCItemGuids_Parms, NULL );

	pFnGetMatCItemGuids->FunctionFlags |= 0x400;

	return GetMatCItemGuids_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetMatBItemGuids
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iIndex                         ( CPF_Parm )

TArray< struct FString > UNowGFXHudScene::GetMatBItemGuids ( int iIndex )
{
	static UFunction* pFnGetMatBItemGuids = NULL;

	if ( ! pFnGetMatBItemGuids )
		pFnGetMatBItemGuids = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetMatBItemGuids" );

	UNowGFXHudScene_execGetMatBItemGuids_Parms GetMatBItemGuids_Parms;
	GetMatBItemGuids_Parms.iIndex = iIndex;

	pFnGetMatBItemGuids->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMatBItemGuids, &GetMatBItemGuids_Parms, NULL );

	pFnGetMatBItemGuids->FunctionFlags |= 0x400;

	return GetMatBItemGuids_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetMatAItemGuids
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iIndex                         ( CPF_Parm )

TArray< struct FString > UNowGFXHudScene::GetMatAItemGuids ( int iIndex )
{
	static UFunction* pFnGetMatAItemGuids = NULL;

	if ( ! pFnGetMatAItemGuids )
		pFnGetMatAItemGuids = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetMatAItemGuids" );

	UNowGFXHudScene_execGetMatAItemGuids_Parms GetMatAItemGuids_Parms;
	GetMatAItemGuids_Parms.iIndex = iIndex;

	pFnGetMatAItemGuids->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMatAItemGuids, &GetMatAItemGuids_Parms, NULL );

	pFnGetMatAItemGuids->FunctionFlags |= 0x400;

	return GetMatAItemGuids_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.InitGlassArrays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::InitGlassArrays ( )
{
	static UFunction* pFnInitGlassArrays = NULL;

	if ( ! pFnInitGlassArrays )
		pFnInitGlassArrays = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitGlassArrays" );

	UNowGFXHudScene_execInitGlassArrays_Parms InitGlassArrays_Parms;

	pFnInitGlassArrays->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitGlassArrays, &InitGlassArrays_Parms, NULL );

	pFnInitGlassArrays->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.closeOptionBar
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::closeOptionBar ( )
{
	static UFunction* pFncloseOptionBar = NULL;

	if ( ! pFncloseOptionBar )
		pFncloseOptionBar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.closeOptionBar" );

	UNowGFXHudScene_execcloseOptionBar_Parms closeOptionBar_Parms;

	this->ProcessEvent ( pFncloseOptionBar, &closeOptionBar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showOptionBar
// [0x00020002] 
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showOptionBar ( struct FString sTitle, struct FString sData )
{
	static UFunction* pFnshowOptionBar = NULL;

	if ( ! pFnshowOptionBar )
		pFnshowOptionBar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showOptionBar" );

	UNowGFXHudScene_execshowOptionBar_Parms showOptionBar_Parms;
	memcpy ( &showOptionBar_Parms.sTitle, &sTitle, 0xC );
	memcpy ( &showOptionBar_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnshowOptionBar, &showOptionBar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FinalizeOptionBar
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventFinalizeOptionBar ( struct FString sTitle, struct FString sData )
{
	static UFunction* pFnFinalizeOptionBar = NULL;

	if ( ! pFnFinalizeOptionBar )
		pFnFinalizeOptionBar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FinalizeOptionBar" );

	UNowGFXHudScene_eventFinalizeOptionBar_Parms FinalizeOptionBar_Parms;
	memcpy ( &FinalizeOptionBar_Parms.sTitle, &sTitle, 0xC );
	memcpy ( &FinalizeOptionBar_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnFinalizeOptionBar, &FinalizeOptionBar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitOptionBar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       vUseSkillName                  ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::InitOptionBar ( TArray< struct FString > vUseSkillName )
{
	static UFunction* pFnInitOptionBar = NULL;

	if ( ! pFnInitOptionBar )
		pFnInitOptionBar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitOptionBar" );

	UNowGFXHudScene_execInitOptionBar_Parms InitOptionBar_Parms;
	memcpy ( &InitOptionBar_Parms.vUseSkillName, &vUseSkillName, 0xC );

	pFnInitOptionBar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitOptionBar, &InitOptionBar_Parms, NULL );

	pFnInitOptionBar->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.showGamemaster
// [0x00020002] 
// Parameters infos:
// int                            iRank                          ( CPF_Parm )
// struct FString                 sRank                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showGamemaster ( int iRank, struct FString sRank )
{
	static UFunction* pFnshowGamemaster = NULL;

	if ( ! pFnshowGamemaster )
		pFnshowGamemaster = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showGamemaster" );

	UNowGFXHudScene_execshowGamemaster_Parms showGamemaster_Parms;
	showGamemaster_Parms.iRank = iRank;
	memcpy ( &showGamemaster_Parms.sRank, &sRank, 0xC );

	this->ProcessEvent ( pFnshowGamemaster, &showGamemaster_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TcpSendGM
// [0x00020002] 
// Parameters infos:
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::TcpSendGM ( struct FString sData )
{
	static UFunction* pFnTcpSendGM = NULL;

	if ( ! pFnTcpSendGM )
		pFnTcpSendGM = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TcpSendGM" );

	UNowGFXHudScene_execTcpSendGM_Parms TcpSendGM_Parms;
	memcpy ( &TcpSendGM_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnTcpSendGM, &TcpSendGM_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGameMasterMain
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitGameMasterMain ( )
{
	static UFunction* pFnInitGameMasterMain = NULL;

	if ( ! pFnInitGameMasterMain )
		pFnInitGameMasterMain = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitGameMasterMain" );

	UNowGFXHudScene_eventInitGameMasterMain_Parms InitGameMasterMain_Parms;

	this->ProcessEvent ( pFnInitGameMasterMain, &InitGameMasterMain_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetGMRank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowGFXHudScene::GetGMRank ( )
{
	static UFunction* pFnGetGMRank = NULL;

	if ( ! pFnGetGMRank )
		pFnGetGMRank = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetGMRank" );

	UNowGFXHudScene_execGetGMRank_Parms GetGMRank_Parms;

	pFnGetGMRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGMRank, &GetGMRank_Parms, NULL );

	pFnGetGMRank->FunctionFlags |= 0x400;

	return GetGMRank_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GoToPet
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GoToPet ( struct FString sGuid )
{
	static UFunction* pFnGoToPet = NULL;

	if ( ! pFnGoToPet )
		pFnGoToPet = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GoToPet" );

	UNowGFXHudScene_execGoToPet_Parms GoToPet_Parms;
	memcpy ( &GoToPet_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGoToPet, &GoToPet_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGMGotoPet
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGMGotoPet ( )
{
	static UFunction* pFnInitGMGotoPet = NULL;

	if ( ! pFnInitGMGotoPet )
		pFnInitGMGotoPet = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitGMGotoPet" );

	UNowGFXHudScene_execInitGMGotoPet_Parms InitGMGotoPet_Parms;

	this->ProcessEvent ( pFnInitGMGotoPet, &InitGMGotoPet_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GMResetAi
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GMResetAi ( struct FString sGuid )
{
	static UFunction* pFnGMResetAi = NULL;

	if ( ! pFnGMResetAi )
		pFnGMResetAi = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GMResetAi" );

	UNowGFXHudScene_execGMResetAi_Parms GMResetAi_Parms;
	memcpy ( &GMResetAi_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGMResetAi, &GMResetAi_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGMGetPets
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitGMGetPets ( )
{
	static UFunction* pFnInitGMGetPets = NULL;

	if ( ! pFnInitGMGetPets )
		pFnInitGMGetPets = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitGMGetPets" );

	UNowGFXHudScene_execInitGMGetPets_Parms InitGMGetPets_Parms;

	this->ProcessEvent ( pFnInitGMGetPets, &InitGMGetPets_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGMBag
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventInitGMBag ( )
{
	static UFunction* pFnInitGMBag = NULL;

	if ( ! pFnInitGMBag )
		pFnInitGMBag = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitGMBag" );

	UNowGFXHudScene_eventInitGMBag_Parms InitGMBag_Parms;

	this->ProcessEvent ( pFnInitGMBag, &InitGMBag_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddGMBagItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::AddGMBagItem ( struct FString sItemGuid, struct FString sData )
{
	static UFunction* pFnAddGMBagItem = NULL;

	if ( ! pFnAddGMBagItem )
		pFnAddGMBagItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddGMBagItem" );

	UNowGFXHudScene_execAddGMBagItem_Parms AddGMBagItem_Parms;
	memcpy ( &AddGMBagItem_Parms.sItemGuid, &sItemGuid, 0xC );
	memcpy ( &AddGMBagItem_Parms.sData, &sData, 0xC );

	pFnAddGMBagItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddGMBagItem, &AddGMBagItem_Parms, NULL );

	pFnAddGMBagItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GMSpawnItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::GMSpawnItem ( struct FString sGuid )
{
	static UFunction* pFnGMSpawnItem = NULL;

	if ( ! pFnGMSpawnItem )
		pFnGMSpawnItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GMSpawnItem" );

	UNowGFXHudScene_execGMSpawnItem_Parms GMSpawnItem_Parms;
	memcpy ( &GMSpawnItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGMSpawnItem, &GMSpawnItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitGMSpawnItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sItemBase                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::InitGMSpawnItem ( struct FString sItemBase )
{
	static UFunction* pFnInitGMSpawnItem = NULL;

	if ( ! pFnInitGMSpawnItem )
		pFnInitGMSpawnItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitGMSpawnItem" );

	UNowGFXHudScene_execInitGMSpawnItem_Parms InitGMSpawnItem_Parms;
	memcpy ( &InitGMSpawnItem_Parms.sItemBase, &sItemBase, 0xC );

	this->ProcessEvent ( pFnInitGMSpawnItem, &InitGMSpawnItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.FillGMSpawnItemList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemBase                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::FillGMSpawnItemList ( struct FString sItemBase )
{
	static UFunction* pFnFillGMSpawnItemList = NULL;

	if ( ! pFnFillGMSpawnItemList )
		pFnFillGMSpawnItemList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillGMSpawnItemList" );

	UNowGFXHudScene_execFillGMSpawnItemList_Parms FillGMSpawnItemList_Parms;
	memcpy ( &FillGMSpawnItemList_Parms.sItemBase, &sItemBase, 0xC );

	pFnFillGMSpawnItemList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillGMSpawnItemList, &FillGMSpawnItemList_Parms, NULL );

	pFnFillGMSpawnItemList->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.PlaceWorkbench
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::PlaceWorkbench ( struct FString sGuid )
{
	static UFunction* pFnPlaceWorkbench = NULL;

	if ( ! pFnPlaceWorkbench )
		pFnPlaceWorkbench = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PlaceWorkbench" );

	UNowGFXHudScene_execPlaceWorkbench_Parms PlaceWorkbench_Parms;
	memcpy ( &PlaceWorkbench_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnPlaceWorkbench, &PlaceWorkbench_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlaceWorkbench
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPlaceWorkbench ( )
{
	static UFunction* pFnInitPlaceWorkbench = NULL;

	if ( ! pFnInitPlaceWorkbench )
		pFnInitPlaceWorkbench = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPlaceWorkbench" );

	UNowGFXHudScene_execInitPlaceWorkbench_Parms InitPlaceWorkbench_Parms;

	this->ProcessEvent ( pFnInitPlaceWorkbench, &InitPlaceWorkbench_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendPlaceWorkbench
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendPlaceWorkbench ( struct FString sGuid )
{
	static UFunction* pFnSendPlaceWorkbench = NULL;

	if ( ! pFnSendPlaceWorkbench )
		pFnSendPlaceWorkbench = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendPlaceWorkbench" );

	UNowGFXHudScene_execSendPlaceWorkbench_Parms SendPlaceWorkbench_Parms;
	memcpy ( &SendPlaceWorkbench_Parms.sGuid, &sGuid, 0xC );

	pFnSendPlaceWorkbench->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendPlaceWorkbench, &SendPlaceWorkbench_Parms, NULL );

	pFnSendPlaceWorkbench->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.FillWorkbenchList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillWorkbenchList ( )
{
	static UFunction* pFnFillWorkbenchList = NULL;

	if ( ! pFnFillWorkbenchList )
		pFnFillWorkbenchList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillWorkbenchList" );

	UNowGFXHudScene_execFillWorkbenchList_Parms FillWorkbenchList_Parms;

	pFnFillWorkbenchList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillWorkbenchList, &FillWorkbenchList_Parms, NULL );

	pFnFillWorkbenchList->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SetVarD1
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarD1 ( )
{
	static UFunction* pFnSetVarD1 = NULL;

	if ( ! pFnSetVarD1 )
		pFnSetVarD1 = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetVarD1" );

	UNowGFXHudScene_execSetVarD1_Parms SetVarD1_Parms;

	this->ProcessEvent ( pFnSetVarD1, &SetVarD1_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarC2
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarC2 ( )
{
	static UFunction* pFnSetVarC2 = NULL;

	if ( ! pFnSetVarC2 )
		pFnSetVarC2 = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetVarC2" );

	UNowGFXHudScene_execSetVarC2_Parms SetVarC2_Parms;

	this->ProcessEvent ( pFnSetVarC2, &SetVarC2_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarC1
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarC1 ( )
{
	static UFunction* pFnSetVarC1 = NULL;

	if ( ! pFnSetVarC1 )
		pFnSetVarC1 = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetVarC1" );

	UNowGFXHudScene_execSetVarC1_Parms SetVarC1_Parms;

	this->ProcessEvent ( pFnSetVarC1, &SetVarC1_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarB4
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventSetVarB4 ( )
{
	static UFunction* pFnSetVarB4 = NULL;

	if ( ! pFnSetVarB4 )
		pFnSetVarB4 = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetVarB4" );

	UNowGFXHudScene_eventSetVarB4_Parms SetVarB4_Parms;

	this->ProcessEvent ( pFnSetVarB4, &SetVarB4_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarB3
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarB3 ( )
{
	static UFunction* pFnSetVarB3 = NULL;

	if ( ! pFnSetVarB3 )
		pFnSetVarB3 = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetVarB3" );

	UNowGFXHudScene_execSetVarB3_Parms SetVarB3_Parms;

	this->ProcessEvent ( pFnSetVarB3, &SetVarB3_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarB2
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarB2 ( )
{
	static UFunction* pFnSetVarB2 = NULL;

	if ( ! pFnSetVarB2 )
		pFnSetVarB2 = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetVarB2" );

	UNowGFXHudScene_execSetVarB2_Parms SetVarB2_Parms;

	this->ProcessEvent ( pFnSetVarB2, &SetVarB2_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarB1
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarB1 ( )
{
	static UFunction* pFnSetVarB1 = NULL;

	if ( ! pFnSetVarB1 )
		pFnSetVarB1 = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetVarB1" );

	UNowGFXHudScene_execSetVarB1_Parms SetVarB1_Parms;

	this->ProcessEvent ( pFnSetVarB1, &SetVarB1_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetVarA1
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetVarA1 ( )
{
	static UFunction* pFnSetVarA1 = NULL;

	if ( ! pFnSetVarA1 )
		pFnSetVarA1 = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetVarA1" );

	UNowGFXHudScene_execSetVarA1_Parms SetVarA1_Parms;

	this->ProcessEvent ( pFnSetVarA1, &SetVarA1_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetNoobHelp
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iNpc                           ( CPF_Parm )
// int                            iVar                           ( CPF_Parm )

void UNowGFXHudScene::SetNoobHelp ( int iNpc, int iVar )
{
	static UFunction* pFnSetNoobHelp = NULL;

	if ( ! pFnSetNoobHelp )
		pFnSetNoobHelp = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetNoobHelp" );

	UNowGFXHudScene_execSetNoobHelp_Parms SetNoobHelp_Parms;
	SetNoobHelp_Parms.iNpc = iNpc;
	SetNoobHelp_Parms.iVar = iVar;

	pFnSetNoobHelp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNoobHelp, &SetNoobHelp_Parms, NULL );

	pFnSetNoobHelp->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SetTax
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::SetTax ( )
{
	static UFunction* pFnSetTax = NULL;

	if ( ! pFnSetTax )
		pFnSetTax = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetTax" );

	UNowGFXHudScene_execSetTax_Parms SetTax_Parms;

	this->ProcessEvent ( pFnSetTax, &SetTax_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CollectTax
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::CollectTax ( )
{
	static UFunction* pFnCollectTax = NULL;

	if ( ! pFnCollectTax )
		pFnCollectTax = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CollectTax" );

	UNowGFXHudScene_execCollectTax_Parms CollectTax_Parms;

	this->ProcessEvent ( pFnCollectTax, &CollectTax_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendCollectTaxes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sRespones                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendCollectTaxes ( struct FString sRespones )
{
	static UFunction* pFnSendCollectTaxes = NULL;

	if ( ! pFnSendCollectTaxes )
		pFnSendCollectTaxes = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendCollectTaxes" );

	UNowGFXHudScene_execSendCollectTaxes_Parms SendCollectTaxes_Parms;
	memcpy ( &SendCollectTaxes_Parms.sRespones, &sRespones, 0xC );

	pFnSendCollectTaxes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendCollectTaxes, &SendCollectTaxes_Parms, NULL );

	pFnSendCollectTaxes->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.SendSetTaxes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sRespones                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SendSetTaxes ( struct FString sRespones )
{
	static UFunction* pFnSendSetTaxes = NULL;

	if ( ! pFnSendSetTaxes )
		pFnSendSetTaxes = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendSetTaxes" );

	UNowGFXHudScene_execSendSetTaxes_Parms SendSetTaxes_Parms;
	memcpy ( &SendSetTaxes_Parms.sRespones, &sRespones, 0xC );

	pFnSendSetTaxes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendSetTaxes, &SendSetTaxes_Parms, NULL );

	pFnSendSetTaxes->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.renderShopList
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::renderShopList ( )
{
	static UFunction* pFnrenderShopList = NULL;

	if ( ! pFnrenderShopList )
		pFnrenderShopList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.renderShopList" );

	UNowGFXHudScene_execrenderShopList_Parms renderShopList_Parms;

	this->ProcessEvent ( pFnrenderShopList, &renderShopList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addShopItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iID                            ( CPF_Parm )
// struct FString                 sCategory                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sLabel                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iCost                          ( CPF_Parm )
// struct FString                 sDescription                   ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventaddShopItem ( int iID, struct FString sCategory, struct FString sLabel, int iCost, struct FString sDescription )
{
	static UFunction* pFnaddShopItem = NULL;

	if ( ! pFnaddShopItem )
		pFnaddShopItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addShopItem" );

	UNowGFXHudScene_eventaddShopItem_Parms addShopItem_Parms;
	addShopItem_Parms.iID = iID;
	memcpy ( &addShopItem_Parms.sCategory, &sCategory, 0xC );
	memcpy ( &addShopItem_Parms.sLabel, &sLabel, 0xC );
	addShopItem_Parms.iCost = iCost;
	memcpy ( &addShopItem_Parms.sDescription, &sDescription, 0xC );

	this->ProcessEvent ( pFnaddShopItem, &addShopItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setShopCurrency
// [0x00020002] 
// Parameters infos:
// int                            iCurrency                      ( CPF_Parm )

void UNowGFXHudScene::setShopCurrency ( int iCurrency )
{
	static UFunction* pFnsetShopCurrency = NULL;

	if ( ! pFnsetShopCurrency )
		pFnsetShopCurrency = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setShopCurrency" );

	UNowGFXHudScene_execsetShopCurrency_Parms setShopCurrency_Parms;
	setShopCurrency_Parms.iCurrency = iCurrency;

	this->ProcessEvent ( pFnsetShopCurrency, &setShopCurrency_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showShop
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::showShop ( )
{
	static UFunction* pFnshowShop = NULL;

	if ( ! pFnshowShop )
		pFnshowShop = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showShop" );

	UNowGFXHudScene_execshowShop_Parms showShop_Parms;

	this->ProcessEvent ( pFnshowShop, &showShop_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ShopClaimItem
// [0x00020002] 
// Parameters infos:
// int                            iID                            ( CPF_Parm )

void UNowGFXHudScene::ShopClaimItem ( int iID )
{
	static UFunction* pFnShopClaimItem = NULL;

	if ( ! pFnShopClaimItem )
		pFnShopClaimItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ShopClaimItem" );

	UNowGFXHudScene_execShopClaimItem_Parms ShopClaimItem_Parms;
	ShopClaimItem_Parms.iID = iID;

	this->ProcessEvent ( pFnShopClaimItem, &ShopClaimItem_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.UpdateCurrency
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::UpdateCurrency ( )
{
	static UFunction* pFnUpdateCurrency = NULL;

	if ( ! pFnUpdateCurrency )
		pFnUpdateCurrency = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.UpdateCurrency" );

	UNowGFXHudScene_execUpdateCurrency_Parms UpdateCurrency_Parms;

	this->ProcessEvent ( pFnUpdateCurrency, &UpdateCurrency_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.PendingUpdateCurrency
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventPendingUpdateCurrency ( )
{
	static UFunction* pFnPendingUpdateCurrency = NULL;

	if ( ! pFnPendingUpdateCurrency )
		pFnPendingUpdateCurrency = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.PendingUpdateCurrency" );

	UNowGFXHudScene_eventPendingUpdateCurrency_Parms PendingUpdateCurrency_Parms;

	this->ProcessEvent ( pFnPendingUpdateCurrency, &PendingUpdateCurrency_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ShopRequestItems
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ShopRequestItems ( )
{
	static UFunction* pFnShopRequestItems = NULL;

	if ( ! pFnShopRequestItems )
		pFnShopRequestItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ShopRequestItems" );

	UNowGFXHudScene_execShopRequestItems_Parms ShopRequestItems_Parms;

	this->ProcessEvent ( pFnShopRequestItems, &ShopRequestItems_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitShop
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitShop ( )
{
	static UFunction* pFnInitShop = NULL;

	if ( ! pFnInitShop )
		pFnInitShop = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitShop" );

	UNowGFXHudScene_execInitShop_Parms InitShop_Parms;

	this->ProcessEvent ( pFnInitShop, &InitShop_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ClaimItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iID                            ( CPF_Parm )

void UNowGFXHudScene::ClaimItem ( int iID )
{
	static UFunction* pFnClaimItem = NULL;

	if ( ! pFnClaimItem )
		pFnClaimItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ClaimItem" );

	UNowGFXHudScene_execClaimItem_Parms ClaimItem_Parms;
	ClaimItem_Parms.iID = iID;

	pFnClaimItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClaimItem, &ClaimItem_Parms, NULL );

	pFnClaimItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.GetShopCurrency
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowGFXHudScene::GetShopCurrency ( )
{
	static UFunction* pFnGetShopCurrency = NULL;

	if ( ! pFnGetShopCurrency )
		pFnGetShopCurrency = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetShopCurrency" );

	UNowGFXHudScene_execGetShopCurrency_Parms GetShopCurrency_Parms;

	pFnGetShopCurrency->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetShopCurrency, &GetShopCurrency_Parms, NULL );

	pFnGetShopCurrency->FunctionFlags |= 0x400;

	return GetShopCurrency_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetShopItems
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::GetShopItems ( )
{
	static UFunction* pFnGetShopItems = NULL;

	if ( ! pFnGetShopItems )
		pFnGetShopItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetShopItems" );

	UNowGFXHudScene_execGetShopItems_Parms GetShopItems_Parms;

	pFnGetShopItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetShopItems, &GetShopItems_Parms, NULL );

	pFnGetShopItems->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.AddToTitleList
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            iIndex                         ( CPF_Parm )

void UNowGFXHudScene::eventAddToTitleList ( struct FString sTitle, int iIndex )
{
	static UFunction* pFnAddToTitleList = NULL;

	if ( ! pFnAddToTitleList )
		pFnAddToTitleList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddToTitleList" );

	UNowGFXHudScene_eventAddToTitleList_Parms AddToTitleList_Parms;
	memcpy ( &AddToTitleList_Parms.sTitle, &sTitle, 0xC );
	AddToTitleList_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnAddToTitleList, &AddToTitleList_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedTitle
// [0x00020002] 
// Parameters infos:
// int                            iID                            ( CPF_Parm )

void UNowGFXHudScene::ChangedTitle ( int iID )
{
	static UFunction* pFnChangedTitle = NULL;

	if ( ! pFnChangedTitle )
		pFnChangedTitle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ChangedTitle" );

	UNowGFXHudScene_execChangedTitle_Parms ChangedTitle_Parms;
	ChangedTitle_Parms.iID = iID;

	this->ProcessEvent ( pFnChangedTitle, &ChangedTitle_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChangedTitleString
// [0x00020002] 
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::ChangedTitleString ( struct FString sTitle )
{
	static UFunction* pFnChangedTitleString = NULL;

	if ( ! pFnChangedTitleString )
		pFnChangedTitleString = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ChangedTitleString" );

	UNowGFXHudScene_execChangedTitleString_Parms ChangedTitleString_Parms;
	memcpy ( &ChangedTitleString_Parms.sTitle, &sTitle, 0xC );

	this->ProcessEvent ( pFnChangedTitleString, &ChangedTitleString_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitTitles
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitTitles ( )
{
	static UFunction* pFnInitTitles = NULL;

	if ( ! pFnInitTitles )
		pFnInitTitles = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitTitles" );

	UNowGFXHudScene_execInitTitles_Parms InitTitles_Parms;

	this->ProcessEvent ( pFnInitTitles, &InitTitles_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.DoSetTitle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iID                            ( CPF_Parm )

void UNowGFXHudScene::DoSetTitle ( int iID )
{
	static UFunction* pFnDoSetTitle = NULL;

	if ( ! pFnDoSetTitle )
		pFnDoSetTitle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.DoSetTitle" );

	UNowGFXHudScene_execDoSetTitle_Parms DoSetTitle_Parms;
	DoSetTitle_Parms.iID = iID;

	pFnDoSetTitle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSetTitle, &DoSetTitle_Parms, NULL );

	pFnDoSetTitle->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.FillTitleList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXHudScene::FillTitleList ( )
{
	static UFunction* pFnFillTitleList = NULL;

	if ( ! pFnFillTitleList )
		pFnFillTitleList = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FillTitleList" );

	UNowGFXHudScene_execFillTitleList_Parms FillTitleList_Parms;

	pFnFillTitleList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillTitleList, &FillTitleList_Parms, NULL );

	pFnFillTitleList->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXHudScene.toggleMouseMode
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXHudScene::toggleMouseMode ( unsigned long bVisible )
{
	static UFunction* pFntoggleMouseMode = NULL;

	if ( ! pFntoggleMouseMode )
		pFntoggleMouseMode = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleMouseMode" );

	UNowGFXHudScene_exectoggleMouseMode_Parms toggleMouseMode_Parms;
	toggleMouseMode_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFntoggleMouseMode, &toggleMouseMode_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ReloadUI
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::ReloadUI ( )
{
	static UFunction* pFnReloadUI = NULL;

	if ( ! pFnReloadUI )
		pFnReloadUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ReloadUI" );

	UNowGFXHudScene_execReloadUI_Parms ReloadUI_Parms;

	this->ProcessEvent ( pFnReloadUI, &ReloadUI_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.resetConfig
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::resetConfig ( )
{
	static UFunction* pFnresetConfig = NULL;

	if ( ! pFnresetConfig )
		pFnresetConfig = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.resetConfig" );

	UNowGFXHudScene_execresetConfig_Parms resetConfig_Parms;

	this->ProcessEvent ( pFnresetConfig, &resetConfig_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setAvatar
// [0x00020002] 
// Parameters infos:
// struct FString                 sAvatarId                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sData                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::setAvatar ( struct FString sAvatarId, struct FString sData )
{
	static UFunction* pFnsetAvatar = NULL;

	if ( ! pFnsetAvatar )
		pFnsetAvatar = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setAvatar" );

	UNowGFXHudScene_execsetAvatar_Parms setAvatar_Parms;
	memcpy ( &setAvatar_Parms.sAvatarId, &sAvatarId, 0xC );
	memcpy ( &setAvatar_Parms.sData, &sData, 0xC );

	this->ProcessEvent ( pFnsetAvatar, &setAvatar_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeAllTutorials
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::removeAllTutorials ( )
{
	static UFunction* pFnremoveAllTutorials = NULL;

	if ( ! pFnremoveAllTutorials )
		pFnremoveAllTutorials = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeAllTutorials" );

	UNowGFXHudScene_execremoveAllTutorials_Parms removeAllTutorials_Parms;

	this->ProcessEvent ( pFnremoveAllTutorials, &removeAllTutorials_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.clearMenuOptions
// [0x00020002] 
// Parameters infos:
// struct FString                 framename                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::clearMenuOptions ( struct FString framename )
{
	static UFunction* pFnclearMenuOptions = NULL;

	if ( ! pFnclearMenuOptions )
		pFnclearMenuOptions = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.clearMenuOptions" );

	UNowGFXHudScene_execclearMenuOptions_Parms clearMenuOptions_Parms;
	memcpy ( &clearMenuOptions_Parms.framename, &framename, 0xC );

	this->ProcessEvent ( pFnclearMenuOptions, &clearMenuOptions_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.set3DRotation
// [0x00020002] 
// Parameters infos:
// struct FString                 Element                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            numberX                        ( CPF_Parm )
// int                            numberY                        ( CPF_Parm )

void UNowGFXHudScene::set3DRotation ( struct FString Element, int numberX, int numberY )
{
	static UFunction* pFnset3DRotation = NULL;

	if ( ! pFnset3DRotation )
		pFnset3DRotation = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.set3DRotation" );

	UNowGFXHudScene_execset3DRotation_Parms set3DRotation_Parms;
	memcpy ( &set3DRotation_Parms.Element, &Element, 0xC );
	set3DRotation_Parms.numberX = numberX;
	set3DRotation_Parms.numberY = numberY;

	this->ProcessEvent ( pFnset3DRotation, &set3DRotation_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetPosition
// [0x00020002] 
// Parameters infos:
// struct FString                 Element                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            numberX                        ( CPF_Parm )
// int                            numberY                        ( CPF_Parm )

void UNowGFXHudScene::SetPosition ( struct FString Element, int numberX, int numberY )
{
	static UFunction* pFnSetPosition = NULL;

	if ( ! pFnSetPosition )
		pFnSetPosition = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetPosition" );

	UNowGFXHudScene_execSetPosition_Parms SetPosition_Parms;
	memcpy ( &SetPosition_Parms.Element, &Element, 0xC );
	SetPosition_Parms.numberX = numberX;
	SetPosition_Parms.numberY = numberY;

	this->ProcessEvent ( pFnSetPosition, &SetPosition_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setAlpha
// [0x00020002] 
// Parameters infos:
// struct FString                 Element                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            Percent                        ( CPF_Parm )

void UNowGFXHudScene::setAlpha ( struct FString Element, int Percent )
{
	static UFunction* pFnsetAlpha = NULL;

	if ( ! pFnsetAlpha )
		pFnsetAlpha = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setAlpha" );

	UNowGFXHudScene_execsetAlpha_Parms setAlpha_Parms;
	memcpy ( &setAlpha_Parms.Element, &Element, 0xC );
	setAlpha_Parms.Percent = Percent;

	this->ProcessEvent ( pFnsetAlpha, &setAlpha_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetScale
// [0x00020002] 
// Parameters infos:
// struct FString                 Element                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            Percent                        ( CPF_Parm )

void UNowGFXHudScene::SetScale ( struct FString Element, int Percent )
{
	static UFunction* pFnSetScale = NULL;

	if ( ! pFnSetScale )
		pFnSetScale = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetScale" );

	UNowGFXHudScene_execSetScale_Parms SetScale_Parms;
	memcpy ( &SetScale_Parms.Element, &Element, 0xC );
	SetScale_Parms.Percent = Percent;

	this->ProcessEvent ( pFnSetScale, &SetScale_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleElement
// [0x00024002] 
// Parameters infos:
// struct FString                 Element                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  forced                         ( CPF_OptionalParm | CPF_Parm )

void UNowGFXHudScene::toggleElement ( struct FString Element, unsigned long forced )
{
	static UFunction* pFntoggleElement = NULL;

	if ( ! pFntoggleElement )
		pFntoggleElement = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleElement" );

	UNowGFXHudScene_exectoggleElement_Parms toggleElement_Parms;
	memcpy ( &toggleElement_Parms.Element, &Element, 0xC );
	toggleElement_Parms.forced = forced;

	this->ProcessEvent ( pFntoggleElement, &toggleElement_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetMousePosition
// [0x00020002] 
// Parameters infos:
// int                            xmouse                         ( CPF_Parm )
// int                            ymouse                         ( CPF_Parm )

void UNowGFXHudScene::SetMousePosition ( int xmouse, int ymouse )
{
	static UFunction* pFnSetMousePosition = NULL;

	if ( ! pFnSetMousePosition )
		pFnSetMousePosition = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetMousePosition" );

	UNowGFXHudScene_execSetMousePosition_Parms SetMousePosition_Parms;
	SetMousePosition_Parms.xmouse = xmouse;
	SetMousePosition_Parms.ymouse = ymouse;

	this->ProcessEvent ( pFnSetMousePosition, &SetMousePosition_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ChatMessage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sChan                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMsg                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventChatMessage ( struct FString sChan, struct FString sMsg )
{
	static UFunction* pFnChatMessage = NULL;

	if ( ! pFnChatMessage )
		pFnChatMessage = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ChatMessage" );

	UNowGFXHudScene_eventChatMessage_Parms ChatMessage_Parms;
	memcpy ( &ChatMessage_Parms.sChan, &sChan, 0xC );
	memcpy ( &ChatMessage_Parms.sMsg, &sMsg, 0xC );

	this->ProcessEvent ( pFnChatMessage, &ChatMessage_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SendClientChatmessage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sChan                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sMsg                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::eventSendClientChatmessage ( struct FString sChan, struct FString sMsg )
{
	static UFunction* pFnSendClientChatmessage = NULL;

	if ( ! pFnSendClientChatmessage )
		pFnSendClientChatmessage = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SendClientChatmessage" );

	UNowGFXHudScene_eventSendClientChatmessage_Parms SendClientChatmessage_Parms;
	memcpy ( &SendClientChatmessage_Parms.sChan, &sChan, 0xC );
	memcpy ( &SendClientChatmessage_Parms.sMsg, &sMsg, 0xC );

	this->ProcessEvent ( pFnSendClientChatmessage, &SendClientChatmessage_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.MouseModeChanged
// [0x00020002] 
// Parameters infos:
// unsigned long                  bMode                          ( CPF_Parm )

void UNowGFXHudScene::MouseModeChanged ( unsigned long bMode )
{
	static UFunction* pFnMouseModeChanged = NULL;

	if ( ! pFnMouseModeChanged )
		pFnMouseModeChanged = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.MouseModeChanged" );

	UNowGFXHudScene_execMouseModeChanged_Parms MouseModeChanged_Parms;
	MouseModeChanged_Parms.bMode = bMode;

	this->ProcessEvent ( pFnMouseModeChanged, &MouseModeChanged_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.CloseStuff
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXHudScene::CloseStuff ( )
{
	static UFunction* pFnCloseStuff = NULL;

	if ( ! pFnCloseStuff )
		pFnCloseStuff = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CloseStuff" );

	UNowGFXHudScene_execCloseStuff_Parms CloseStuff_Parms;

	this->ProcessEvent ( pFnCloseStuff, &CloseStuff_Parms, NULL );

	return CloseStuff_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.RemoveTimer
// [0x00020002] 
// Parameters infos:
// struct FString                 timerLabel                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::RemoveTimer ( struct FString timerLabel )
{
	static UFunction* pFnRemoveTimer = NULL;

	if ( ! pFnRemoveTimer )
		pFnRemoveTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RemoveTimer" );

	UNowGFXHudScene_execRemoveTimer_Parms RemoveTimer_Parms;
	memcpy ( &RemoveTimer_Parms.timerLabel, &timerLabel, 0xC );

	this->ProcessEvent ( pFnRemoveTimer, &RemoveTimer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.AddTimer
// [0x00020002] 
// Parameters infos:
// struct FString                 timerLabel                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            timerSeconds                   ( CPF_Parm )

void UNowGFXHudScene::AddTimer ( struct FString timerLabel, int timerSeconds )
{
	static UFunction* pFnAddTimer = NULL;

	if ( ! pFnAddTimer )
		pFnAddTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.AddTimer" );

	UNowGFXHudScene_execAddTimer_Parms AddTimer_Parms;
	memcpy ( &AddTimer_Parms.timerLabel, &timerLabel, 0xC );
	AddTimer_Parms.timerSeconds = timerSeconds;

	this->ProcessEvent ( pFnAddTimer, &AddTimer_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showAlert
// [0x00020002] 
// Parameters infos:
// struct FString                 alertMessage                   ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::showAlert ( struct FString alertMessage )
{
	static UFunction* pFnshowAlert = NULL;

	if ( ! pFnshowAlert )
		pFnshowAlert = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showAlert" );

	UNowGFXHudScene_execshowAlert_Parms showAlert_Parms;
	memcpy ( &showAlert_Parms.alertMessage, &alertMessage, 0xC );

	this->ProcessEvent ( pFnshowAlert, &showAlert_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateMountFrame
// [0x00020002] 
// Parameters infos:
// int                            hpCur                          ( CPF_Parm )
// int                            hpMax                          ( CPF_Parm )
// int                            spCur                          ( CPF_Parm )

void UNowGFXHudScene::updateMountFrame ( int hpCur, int hpMax, int spCur )
{
	static UFunction* pFnupdateMountFrame = NULL;

	if ( ! pFnupdateMountFrame )
		pFnupdateMountFrame = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updateMountFrame" );

	UNowGFXHudScene_execupdateMountFrame_Parms updateMountFrame_Parms;
	updateMountFrame_Parms.hpCur = hpCur;
	updateMountFrame_Parms.hpMax = hpMax;
	updateMountFrame_Parms.spCur = spCur;

	this->ProcessEvent ( pFnupdateMountFrame, &updateMountFrame_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ShowMountPanel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void UNowGFXHudScene::eventShowMountPanel ( unsigned long bShow )
{
	static UFunction* pFnShowMountPanel = NULL;

	if ( ! pFnShowMountPanel )
		pFnShowMountPanel = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ShowMountPanel" );

	UNowGFXHudScene_eventShowMountPanel_Parms ShowMountPanel_Parms;
	ShowMountPanel_Parms.bShow = bShow;

	this->ProcessEvent ( pFnShowMountPanel, &ShowMountPanel_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateTargetFrame
// [0x00024002] 
// Parameters infos:
// int                            hpCur                          ( CPF_Parm )
// int                            hpMax                          ( CPF_Parm )
// unsigned long                  inCombat                       ( CPF_Parm )
// int                            Flag                           ( CPF_Parm )
// struct FString                 tgtName                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bInit                          ( CPF_OptionalParm | CPF_Parm )
// struct FString                 relation                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::updateTargetFrame ( int hpCur, int hpMax, unsigned long inCombat, int Flag, struct FString tgtName, unsigned long bInit, struct FString relation )
{
	static UFunction* pFnupdateTargetFrame = NULL;

	if ( ! pFnupdateTargetFrame )
		pFnupdateTargetFrame = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updateTargetFrame" );

	UNowGFXHudScene_execupdateTargetFrame_Parms updateTargetFrame_Parms;
	updateTargetFrame_Parms.hpCur = hpCur;
	updateTargetFrame_Parms.hpMax = hpMax;
	updateTargetFrame_Parms.inCombat = inCombat;
	updateTargetFrame_Parms.Flag = Flag;
	memcpy ( &updateTargetFrame_Parms.tgtName, &tgtName, 0xC );
	updateTargetFrame_Parms.bInit = bInit;
	memcpy ( &updateTargetFrame_Parms.relation, &relation, 0xC );

	this->ProcessEvent ( pFnupdateTargetFrame, &updateTargetFrame_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeTarget
// [0x00020000] 
// Parameters infos:

void UNowGFXHudScene::removeTarget ( )
{
	static UFunction* pFnremoveTarget = NULL;

	if ( ! pFnremoveTarget )
		pFnremoveTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeTarget" );

	UNowGFXHudScene_execremoveTarget_Parms removeTarget_Parms;

	this->ProcessEvent ( pFnremoveTarget, &removeTarget_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTarget
// [0x00024002] 
// Parameters infos:
// struct FString                 tgtName                        ( CPF_Parm | CPF_NeedCtorLink )
// float                          hpCur                          ( CPF_Parm )
// float                          hpMax                          ( CPF_Parm )
// unsigned long                  inCombat                       ( CPF_Parm )
// int                            Flag                           ( CPF_Parm )
// unsigned long                  bClient                        ( CPF_Parm )
// struct FString                 relation                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addTarget ( struct FString tgtName, float hpCur, float hpMax, unsigned long inCombat, int Flag, unsigned long bClient, struct FString relation )
{
	static UFunction* pFnaddTarget = NULL;

	if ( ! pFnaddTarget )
		pFnaddTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addTarget" );

	UNowGFXHudScene_execaddTarget_Parms addTarget_Parms;
	memcpy ( &addTarget_Parms.tgtName, &tgtName, 0xC );
	addTarget_Parms.hpCur = hpCur;
	addTarget_Parms.hpMax = hpMax;
	addTarget_Parms.inCombat = inCombat;
	addTarget_Parms.Flag = Flag;
	addTarget_Parms.bClient = bClient;
	memcpy ( &addTarget_Parms.relation, &relation, 0xC );

	this->ProcessEvent ( pFnaddTarget, &addTarget_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.SetPlayerName
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::SetPlayerName ( struct FString Id, struct FString PlayerName )
{
	static UFunction* pFnSetPlayerName = NULL;

	if ( ! pFnSetPlayerName )
		pFnSetPlayerName = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.SetPlayerName" );

	UNowGFXHudScene_execSetPlayerName_Parms SetPlayerName_Parms;
	memcpy ( &SetPlayerName_Parms.Id, &Id, 0xC );
	memcpy ( &SetPlayerName_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnSetPlayerName, &SetPlayerName_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleCombat
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  combat                         ( CPF_Parm )

void UNowGFXHudScene::toggleCombat ( struct FString Id, unsigned long combat )
{
	static UFunction* pFntoggleCombat = NULL;

	if ( ! pFntoggleCombat )
		pFntoggleCombat = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleCombat" );

	UNowGFXHudScene_exectoggleCombat_Parms toggleCombat_Parms;
	memcpy ( &toggleCombat_Parms.Id, &Id, 0xC );
	toggleCombat_Parms.combat = combat;

	this->ProcessEvent ( pFntoggleCombat, &toggleCombat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setShield
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 WhatColor                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 relation                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bTween                         ( CPF_Parm )

void UNowGFXHudScene::setShield ( struct FString Id, struct FString WhatColor, struct FString relation, unsigned long bTween )
{
	static UFunction* pFnsetShield = NULL;

	if ( ! pFnsetShield )
		pFnsetShield = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setShield" );

	UNowGFXHudScene_execsetShield_Parms setShield_Parms;
	memcpy ( &setShield_Parms.Id, &Id, 0xC );
	memcpy ( &setShield_Parms.WhatColor, &WhatColor, 0xC );
	memcpy ( &setShield_Parms.relation, &relation, 0xC );
	setShield_Parms.bTween = bTween;

	this->ProcessEvent ( pFnsetShield, &setShield_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addMenuOption
// [0x00024002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 optionLabel                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 optionAction                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 optionParam                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addMenuOption ( struct FString Id, struct FString optionLabel, struct FString optionAction, struct FString optionParam )
{
	static UFunction* pFnaddMenuOption = NULL;

	if ( ! pFnaddMenuOption )
		pFnaddMenuOption = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addMenuOption" );

	UNowGFXHudScene_execaddMenuOption_Parms addMenuOption_Parms;
	memcpy ( &addMenuOption_Parms.Id, &Id, 0xC );
	memcpy ( &addMenuOption_Parms.optionLabel, &optionLabel, 0xC );
	memcpy ( &addMenuOption_Parms.optionAction, &optionAction, 0xC );
	memcpy ( &addMenuOption_Parms.optionParam, &optionParam, 0xC );

	this->ProcessEvent ( pFnaddMenuOption, &addMenuOption_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPotion
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UNowGFXHudScene::setPotion ( struct FString Id, int val )
{
	static UFunction* pFnsetPotion = NULL;

	if ( ! pFnsetPotion )
		pFnsetPotion = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setPotion" );

	UNowGFXHudScene_execsetPotion_Parms setPotion_Parms;
	memcpy ( &setPotion_Parms.Id, &Id, 0xC );
	setPotion_Parms.val = val;

	this->ProcessEvent ( pFnsetPotion, &setPotion_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setHunger
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UNowGFXHudScene::setHunger ( struct FString Id, int val )
{
	static UFunction* pFnsetHunger = NULL;

	if ( ! pFnsetHunger )
		pFnsetHunger = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setHunger" );

	UNowGFXHudScene_execsetHunger_Parms setHunger_Parms;
	memcpy ( &setHunger_Parms.Id, &Id, 0xC );
	setHunger_Parms.val = val;

	this->ProcessEvent ( pFnsetHunger, &setHunger_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPotionMax
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UNowGFXHudScene::setPotionMax ( struct FString Id, int val )
{
	static UFunction* pFnsetPotionMax = NULL;

	if ( ! pFnsetPotionMax )
		pFnsetPotionMax = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setPotionMax" );

	UNowGFXHudScene_execsetPotionMax_Parms setPotionMax_Parms;
	memcpy ( &setPotionMax_Parms.Id, &Id, 0xC );
	setPotionMax_Parms.val = val;

	this->ProcessEvent ( pFnsetPotionMax, &setPotionMax_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setLowHunger
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UNowGFXHudScene::setLowHunger ( struct FString Id, int val )
{
	static UFunction* pFnsetLowHunger = NULL;

	if ( ! pFnsetLowHunger )
		pFnsetLowHunger = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setLowHunger" );

	UNowGFXHudScene_execsetLowHunger_Parms setLowHunger_Parms;
	memcpy ( &setLowHunger_Parms.Id, &Id, 0xC );
	setLowHunger_Parms.val = val;

	this->ProcessEvent ( pFnsetLowHunger, &setLowHunger_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setMidHunger
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UNowGFXHudScene::setMidHunger ( struct FString Id, int val )
{
	static UFunction* pFnsetMidHunger = NULL;

	if ( ! pFnsetMidHunger )
		pFnsetMidHunger = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setMidHunger" );

	UNowGFXHudScene_execsetMidHunger_Parms setMidHunger_Parms;
	memcpy ( &setMidHunger_Parms.Id, &Id, 0xC );
	setMidHunger_Parms.val = val;

	this->ProcessEvent ( pFnsetMidHunger, &setMidHunger_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setMaxHunger
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UNowGFXHudScene::setMaxHunger ( struct FString Id, int val )
{
	static UFunction* pFnsetMaxHunger = NULL;

	if ( ! pFnsetMaxHunger )
		pFnsetMaxHunger = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setMaxHunger" );

	UNowGFXHudScene_execsetMaxHunger_Parms setMaxHunger_Parms;
	memcpy ( &setMaxHunger_Parms.Id, &Id, 0xC );
	setMaxHunger_Parms.val = val;

	this->ProcessEvent ( pFnsetMaxHunger, &setMaxHunger_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setFatigueSP
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// float                          fatiguePercent                 ( CPF_Parm )

void UNowGFXHudScene::setFatigueSP ( struct FString Id, float fatiguePercent )
{
	static UFunction* pFnsetFatigueSP = NULL;

	if ( ! pFnsetFatigueSP )
		pFnsetFatigueSP = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setFatigueSP" );

	UNowGFXHudScene_execsetFatigueSP_Parms setFatigueSP_Parms;
	memcpy ( &setFatigueSP_Parms.Id, &Id, 0xC );
	setFatigueSP_Parms.fatiguePercent = fatiguePercent;

	this->ProcessEvent ( pFnsetFatigueSP, &setFatigueSP_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setFatigueMP
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// float                          fatiguePercent                 ( CPF_Parm )

void UNowGFXHudScene::setFatigueMP ( struct FString Id, float fatiguePercent )
{
	static UFunction* pFnsetFatigueMP = NULL;

	if ( ! pFnsetFatigueMP )
		pFnsetFatigueMP = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setFatigueMP" );

	UNowGFXHudScene_execsetFatigueMP_Parms setFatigueMP_Parms;
	memcpy ( &setFatigueMP_Parms.Id, &Id, 0xC );
	setFatigueMP_Parms.fatiguePercent = fatiguePercent;

	this->ProcessEvent ( pFnsetFatigueMP, &setFatigueMP_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setFatigueHP
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// float                          fatiguePercent                 ( CPF_Parm )

void UNowGFXHudScene::setFatigueHP ( struct FString Id, float fatiguePercent )
{
	static UFunction* pFnsetFatigueHP = NULL;

	if ( ! pFnsetFatigueHP )
		pFnsetFatigueHP = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setFatigueHP" );

	UNowGFXHudScene_execsetFatigueHP_Parms setFatigueHP_Parms;
	memcpy ( &setFatigueHP_Parms.Id, &Id, 0xC );
	setFatigueHP_Parms.fatiguePercent = fatiguePercent;

	this->ProcessEvent ( pFnsetFatigueHP, &setFatigueHP_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setFatigueMax
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// float                          hp                             ( CPF_Parm )
// float                          sp                             ( CPF_Parm )
// float                          mp                             ( CPF_Parm )

void UNowGFXHudScene::setFatigueMax ( struct FString Id, float hp, float sp, float mp )
{
	static UFunction* pFnsetFatigueMax = NULL;

	if ( ! pFnsetFatigueMax )
		pFnsetFatigueMax = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setFatigueMax" );

	UNowGFXHudScene_execsetFatigueMax_Parms setFatigueMax_Parms;
	memcpy ( &setFatigueMax_Parms.Id, &Id, 0xC );
	setFatigueMax_Parms.hp = hp;
	setFatigueMax_Parms.sp = sp;
	setFatigueMax_Parms.mp = mp;

	this->ProcessEvent ( pFnsetFatigueMax, &setFatigueMax_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCurrentMana
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            manaNew                        ( CPF_Parm )
// unsigned long                  initBar                        ( CPF_Parm )

void UNowGFXHudScene::setCurrentMana ( struct FString Id, int manaNew, unsigned long initBar )
{
	static UFunction* pFnsetCurrentMana = NULL;

	if ( ! pFnsetCurrentMana )
		pFnsetCurrentMana = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setCurrentMana" );

	UNowGFXHudScene_execsetCurrentMana_Parms setCurrentMana_Parms;
	memcpy ( &setCurrentMana_Parms.Id, &Id, 0xC );
	setCurrentMana_Parms.manaNew = manaNew;
	setCurrentMana_Parms.initBar = initBar;

	this->ProcessEvent ( pFnsetCurrentMana, &setCurrentMana_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCurrentStamina
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            staminaNew                     ( CPF_Parm )
// unsigned long                  initBar                        ( CPF_Parm )

void UNowGFXHudScene::setCurrentStamina ( struct FString Id, int staminaNew, unsigned long initBar )
{
	static UFunction* pFnsetCurrentStamina = NULL;

	if ( ! pFnsetCurrentStamina )
		pFnsetCurrentStamina = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setCurrentStamina" );

	UNowGFXHudScene_execsetCurrentStamina_Parms setCurrentStamina_Parms;
	memcpy ( &setCurrentStamina_Parms.Id, &Id, 0xC );
	setCurrentStamina_Parms.staminaNew = staminaNew;
	setCurrentStamina_Parms.initBar = initBar;

	this->ProcessEvent ( pFnsetCurrentStamina, &setCurrentStamina_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setUnitMax
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            Health                         ( CPF_Parm )
// int                            stamina                        ( CPF_Parm )
// int                            mana                           ( CPF_Parm )
// int                            kau                            ( CPF_Parm )

void UNowGFXHudScene::setUnitMax ( struct FString Id, int Health, int stamina, int mana, int kau )
{
	static UFunction* pFnsetUnitMax = NULL;

	if ( ! pFnsetUnitMax )
		pFnsetUnitMax = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setUnitMax" );

	UNowGFXHudScene_execsetUnitMax_Parms setUnitMax_Parms;
	memcpy ( &setUnitMax_Parms.Id, &Id, 0xC );
	setUnitMax_Parms.Health = Health;
	setUnitMax_Parms.stamina = stamina;
	setUnitMax_Parms.mana = mana;
	setUnitMax_Parms.kau = kau;

	this->ProcessEvent ( pFnsetUnitMax, &setUnitMax_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCurrentHealth
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            healthNew                      ( CPF_Parm )
// unsigned long                  initBar                        ( CPF_Parm )

void UNowGFXHudScene::setCurrentHealth ( struct FString Id, int healthNew, unsigned long initBar )
{
	static UFunction* pFnsetCurrentHealth = NULL;

	if ( ! pFnsetCurrentHealth )
		pFnsetCurrentHealth = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setCurrentHealth" );

	UNowGFXHudScene_execsetCurrentHealth_Parms setCurrentHealth_Parms;
	memcpy ( &setCurrentHealth_Parms.Id, &Id, 0xC );
	setCurrentHealth_Parms.healthNew = healthNew;
	setCurrentHealth_Parms.initBar = initBar;

	this->ProcessEvent ( pFnsetCurrentHealth, &setCurrentHealth_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setCurrentKau
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            kauNew                         ( CPF_Parm )
// unsigned long                  initBar                        ( CPF_Parm )

void UNowGFXHudScene::setCurrentKau ( struct FString Id, int kauNew, unsigned long initBar )
{
	static UFunction* pFnsetCurrentKau = NULL;

	if ( ! pFnsetCurrentKau )
		pFnsetCurrentKau = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setCurrentKau" );

	UNowGFXHudScene_execsetCurrentKau_Parms setCurrentKau_Parms;
	memcpy ( &setCurrentKau_Parms.Id, &Id, 0xC );
	setCurrentKau_Parms.kauNew = kauNew;
	setCurrentKau_Parms.initBar = initBar;

	this->ProcessEvent ( pFnsetCurrentKau, &setCurrentKau_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.setPlayerDead
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDead                          ( CPF_Parm )

void UNowGFXHudScene::setPlayerDead ( unsigned long bDead )
{
	static UFunction* pFnsetPlayerDead = NULL;

	if ( ! pFnsetPlayerDead )
		pFnsetPlayerDead = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.setPlayerDead" );

	UNowGFXHudScene_execsetPlayerDead_Parms setPlayerDead_Parms;
	setPlayerDead_Parms.bDead = bDead;

	this->ProcessEvent ( pFnsetPlayerDead, &setPlayerDead_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleCorrupt
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            barId                          ( CPF_Parm )
// unsigned long                  corrupted                      ( CPF_Parm )

void UNowGFXHudScene::eventtoggleCorrupt ( struct FString Id, int barId, unsigned long corrupted )
{
	static UFunction* pFntoggleCorrupt = NULL;

	if ( ! pFntoggleCorrupt )
		pFntoggleCorrupt = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleCorrupt" );

	UNowGFXHudScene_eventtoggleCorrupt_Parms toggleCorrupt_Parms;
	memcpy ( &toggleCorrupt_Parms.Id, &Id, 0xC );
	toggleCorrupt_Parms.barId = barId;
	toggleCorrupt_Parms.corrupted = corrupted;

	this->ProcessEvent ( pFntoggleCorrupt, &toggleCorrupt_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.togglePoison
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            barId                          ( CPF_Parm )
// unsigned long                  poisoned                       ( CPF_Parm )

void UNowGFXHudScene::eventtogglePoison ( struct FString Id, int barId, unsigned long poisoned )
{
	static UFunction* pFntogglePoison = NULL;

	if ( ! pFntogglePoison )
		pFntogglePoison = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.togglePoison" );

	UNowGFXHudScene_eventtogglePoison_Parms togglePoison_Parms;
	memcpy ( &togglePoison_Parms.Id, &Id, 0xC );
	togglePoison_Parms.barId = barId;
	togglePoison_Parms.poisoned = poisoned;

	this->ProcessEvent ( pFntogglePoison, &togglePoison_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.removeUnitFrame
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removeUnitFrame ( struct FString Id )
{
	static UFunction* pFnremoveUnitFrame = NULL;

	if ( ! pFnremoveUnitFrame )
		pFnremoveUnitFrame = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removeUnitFrame" );

	UNowGFXHudScene_execremoveUnitFrame_Parms removeUnitFrame_Parms;
	memcpy ( &removeUnitFrame_Parms.Id, &Id, 0xC );

	this->ProcessEvent ( pFnremoveUnitFrame, &removeUnitFrame_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addUnitFrame
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            initHealthCurrent              ( CPF_Parm )
// int                            initHealthMaximum              ( CPF_Parm )
// int                            initStaminaCurrent             ( CPF_Parm )
// int                            initStaminaMaximum             ( CPF_Parm )
// int                            initManaCurrent                ( CPF_Parm )
// int                            initManaMaximum                ( CPF_Parm )
// int                            initKauCurrent                 ( CPF_Parm )
// int                            initKauMax                     ( CPF_Parm )
// unsigned long                  initCombat                     ( CPF_Parm )
// int                            showLabelsState                ( CPF_Parm )
// struct FString                 shieldPosition                 ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addUnitFrame ( struct FString Id, struct FString PlayerName, int initHealthCurrent, int initHealthMaximum, int initStaminaCurrent, int initStaminaMaximum, int initManaCurrent, int initManaMaximum, int initKauCurrent, int initKauMax, unsigned long initCombat, int showLabelsState, struct FString shieldPosition )
{
	static UFunction* pFnaddUnitFrame = NULL;

	if ( ! pFnaddUnitFrame )
		pFnaddUnitFrame = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addUnitFrame" );

	UNowGFXHudScene_execaddUnitFrame_Parms addUnitFrame_Parms;
	memcpy ( &addUnitFrame_Parms.Id, &Id, 0xC );
	memcpy ( &addUnitFrame_Parms.PlayerName, &PlayerName, 0xC );
	addUnitFrame_Parms.initHealthCurrent = initHealthCurrent;
	addUnitFrame_Parms.initHealthMaximum = initHealthMaximum;
	addUnitFrame_Parms.initStaminaCurrent = initStaminaCurrent;
	addUnitFrame_Parms.initStaminaMaximum = initStaminaMaximum;
	addUnitFrame_Parms.initManaCurrent = initManaCurrent;
	addUnitFrame_Parms.initManaMaximum = initManaMaximum;
	addUnitFrame_Parms.initKauCurrent = initKauCurrent;
	addUnitFrame_Parms.initKauMax = initKauMax;
	addUnitFrame_Parms.initCombat = initCombat;
	addUnitFrame_Parms.showLabelsState = showLabelsState;
	memcpy ( &addUnitFrame_Parms.shieldPosition, &shieldPosition, 0xC );

	this->ProcessEvent ( pFnaddUnitFrame, &addUnitFrame_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.showUnitFrameDetails
// [0x00020002] 
// Parameters infos:
// struct FString                 Id                             ( CPF_Parm | CPF_NeedCtorLink )
// int                            showState                      ( CPF_Parm )

void UNowGFXHudScene::showUnitFrameDetails ( struct FString Id, int showState )
{
	static UFunction* pFnshowUnitFrameDetails = NULL;

	if ( ! pFnshowUnitFrameDetails )
		pFnshowUnitFrameDetails = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.showUnitFrameDetails" );

	UNowGFXHudScene_execshowUnitFrameDetails_Parms showUnitFrameDetails_Parms;
	memcpy ( &showUnitFrameDetails_Parms.Id, &Id, 0xC );
	showUnitFrameDetails_Parms.showState = showState;

	this->ProcessEvent ( pFnshowUnitFrameDetails, &showUnitFrameDetails_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleExtra
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::toggleExtra ( )
{
	static UFunction* pFntoggleExtra = NULL;

	if ( ! pFntoggleExtra )
		pFntoggleExtra = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleExtra" );

	UNowGFXHudScene_exectoggleExtra_Parms toggleExtra_Parms;

	this->ProcessEvent ( pFntoggleExtra, &toggleExtra_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.toggleReserves
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::toggleReserves ( )
{
	static UFunction* pFntoggleReserves = NULL;

	if ( ! pFntoggleReserves )
		pFntoggleReserves = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.toggleReserves" );

	UNowGFXHudScene_exectoggleReserves_Parms toggleReserves_Parms;

	this->ProcessEvent ( pFntoggleReserves, &toggleReserves_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitPlayerBars
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitPlayerBars ( )
{
	static UFunction* pFnInitPlayerBars = NULL;

	if ( ! pFnInitPlayerBars )
		pFnInitPlayerBars = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitPlayerBars" );

	UNowGFXHudScene_execInitPlayerBars_Parms InitPlayerBars_Parms;

	this->ProcessEvent ( pFnInitPlayerBars, &InitPlayerBars_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitTargetBars
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitTargetBars ( )
{
	static UFunction* pFnInitTargetBars = NULL;

	if ( ! pFnInitTargetBars )
		pFnInitTargetBars = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitTargetBars" );

	UNowGFXHudScene_execInitTargetBars_Parms InitTargetBars_Parms;

	this->ProcessEvent ( pFnInitTargetBars, &InitTargetBars_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.ToggleTutorials
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::ToggleTutorials ( )
{
	static UFunction* pFnToggleTutorials = NULL;

	if ( ! pFnToggleTutorials )
		pFnToggleTutorials = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.ToggleTutorials" );

	UNowGFXHudScene_execToggleTutorials_Parms ToggleTutorials_Parms;

	this->ProcessEvent ( pFnToggleTutorials, &ToggleTutorials_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addTutorial
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 tutorialLabel                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 tutorialContent                ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::addTutorial ( int Id, struct FString tutorialLabel, struct FString tutorialContent )
{
	static UFunction* pFnaddTutorial = NULL;

	if ( ! pFnaddTutorial )
		pFnaddTutorial = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addTutorial" );

	UNowGFXHudScene_execaddTutorial_Parms addTutorial_Parms;
	addTutorial_Parms.Id = Id;
	memcpy ( &addTutorial_Parms.tutorialLabel, &tutorialLabel, 0xC );
	memcpy ( &addTutorial_Parms.tutorialContent, &tutorialContent, 0xC );

	this->ProcessEvent ( pFnaddTutorial, &addTutorial_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.disableTutorial
// [0x00020002] 
// Parameters infos:
// int                            tutorialId                     ( CPF_Parm )

void UNowGFXHudScene::disableTutorial ( int tutorialId )
{
	static UFunction* pFndisableTutorial = NULL;

	if ( ! pFndisableTutorial )
		pFndisableTutorial = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.disableTutorial" );

	UNowGFXHudScene_execdisableTutorial_Parms disableTutorial_Parms;
	disableTutorial_Parms.tutorialId = tutorialId;

	this->ProcessEvent ( pFndisableTutorial, &disableTutorial_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GetRotActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* UNowGFXHudScene::GetRotActor ( )
{
	static UFunction* pFnGetRotActor = NULL;

	if ( ! pFnGetRotActor )
		pFnGetRotActor = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetRotActor" );

	UNowGFXHudScene_execGetRotActor_Parms GetRotActor_Parms;

	this->ProcessEvent ( pFnGetRotActor, &GetRotActor_Parms, NULL );

	return GetRotActor_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.FindInChatArray
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  TestActor                      ( CPF_Parm )

int UNowGFXHudScene::FindInChatArray ( class AActor* TestActor )
{
	static UFunction* pFnFindInChatArray = NULL;

	if ( ! pFnFindInChatArray )
		pFnFindInChatArray = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.FindInChatArray" );

	UNowGFXHudScene_execFindInChatArray_Parms FindInChatArray_Parms;
	FindInChatArray_Parms.TestActor = TestActor;

	this->ProcessEvent ( pFnFindInChatArray, &FindInChatArray_Parms, NULL );

	return FindInChatArray_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.removedChatBubble
// [0x00020002] 
// Parameters infos:
// struct FString                 chatAvatar                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXHudScene::removedChatBubble ( struct FString chatAvatar )
{
	static UFunction* pFnremovedChatBubble = NULL;

	if ( ! pFnremovedChatBubble )
		pFnremovedChatBubble = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.removedChatBubble" );

	UNowGFXHudScene_execremovedChatBubble_Parms removedChatBubble_Parms;
	memcpy ( &removedChatBubble_Parms.chatAvatar, &chatAvatar, 0xC );

	this->ProcessEvent ( pFnremovedChatBubble, &removedChatBubble_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.chatBubblePosition
// [0x00020002] 
// Parameters infos:
// struct FString                 chatAvatar                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            chatX                          ( CPF_Parm )
// int                            chatY                          ( CPF_Parm )
// int                            chatDistance                   ( CPF_Parm )

void UNowGFXHudScene::chatBubblePosition ( struct FString chatAvatar, int chatX, int chatY, int chatDistance )
{
	static UFunction* pFnchatBubblePosition = NULL;

	if ( ! pFnchatBubblePosition )
		pFnchatBubblePosition = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.chatBubblePosition" );

	UNowGFXHudScene_execchatBubblePosition_Parms chatBubblePosition_Parms;
	memcpy ( &chatBubblePosition_Parms.chatAvatar, &chatAvatar, 0xC );
	chatBubblePosition_Parms.chatX = chatX;
	chatBubblePosition_Parms.chatY = chatY;
	chatBubblePosition_Parms.chatDistance = chatDistance;

	this->ProcessEvent ( pFnchatBubblePosition, &chatBubblePosition_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addChatBubble
// [0x00020002] 
// Parameters infos:
// struct FString                 avatarName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 chatText                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            chatX                          ( CPF_Parm )
// int                            chatY                          ( CPF_Parm )
// int                            chatDistance                   ( CPF_Parm )
// int                            chatChannel                    ( CPF_Parm )

void UNowGFXHudScene::addChatBubble ( struct FString avatarName, struct FString chatText, int chatX, int chatY, int chatDistance, int chatChannel )
{
	static UFunction* pFnaddChatBubble = NULL;

	if ( ! pFnaddChatBubble )
		pFnaddChatBubble = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addChatBubble" );

	UNowGFXHudScene_execaddChatBubble_Parms addChatBubble_Parms;
	memcpy ( &addChatBubble_Parms.avatarName, &avatarName, 0xC );
	memcpy ( &addChatBubble_Parms.chatText, &chatText, 0xC );
	addChatBubble_Parms.chatX = chatX;
	addChatBubble_Parms.chatY = chatY;
	addChatBubble_Parms.chatDistance = chatDistance;
	addChatBubble_Parms.chatChannel = chatChannel;

	this->ProcessEvent ( pFnaddChatBubble, &addChatBubble_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.addChat
// [0x00820002] 
// Parameters infos:
// class AActor*                  ChatOwner                      ( CPF_Parm )
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            Channel                        ( CPF_Parm )

void UNowGFXHudScene::addChat ( class AActor* ChatOwner, struct FString Text, int Channel )
{
	static UFunction* pFnaddChat = NULL;

	if ( ! pFnaddChat )
		pFnaddChat = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.addChat" );

	UNowGFXHudScene_execaddChat_Parms addChat_Parms;
	addChat_Parms.ChatOwner = ChatOwner;
	memcpy ( &addChat_Parms.Text, &Text, 0xC );
	addChat_Parms.Channel = Channel;

	this->ProcessEvent ( pFnaddChat, &addChat_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.updateChatBubbles
// [0x00820002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )

void UNowGFXHudScene::updateChatBubbles ( int Index, class UCanvas* Canvas )
{
	static UFunction* pFnupdateChatBubbles = NULL;

	if ( ! pFnupdateChatBubbles )
		pFnupdateChatBubbles = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.updateChatBubbles" );

	UNowGFXHudScene_execupdateChatBubbles_Parms updateChatBubbles_Parms;
	updateChatBubbles_Parms.Index = Index;
	updateChatBubbles_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnupdateChatBubbles, &updateChatBubbles_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.GFXHudTick
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowGFXHudScene::GFXHudTick ( class UCanvas* C )
{
	static UFunction* pFnGFXHudTick = NULL;

	if ( ! pFnGFXHudTick )
		pFnGFXHudTick = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GFXHudTick" );

	UNowGFXHudScene_execGFXHudTick_Parms GFXHudTick_Parms;
	GFXHudTick_Parms.C = C;

	this->ProcessEvent ( pFnGFXHudTick, &GFXHudTick_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.resetUI
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::resetUI ( )
{
	static UFunction* pFnresetUI = NULL;

	if ( ! pFnresetUI )
		pFnresetUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.resetUI" );

	UNowGFXHudScene_execresetUI_Parms resetUI_Parms;

	this->ProcessEvent ( pFnresetUI, &resetUI_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.gfxTick
// [0x00020002] 
// Parameters infos:
// float                          dTime                          ( CPF_Parm )

void UNowGFXHudScene::gfxTick ( float dTime )
{
	static UFunction* pFngfxTick = NULL;

	if ( ! pFngfxTick )
		pFngfxTick = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.gfxTick" );

	UNowGFXHudScene_execgfxTick_Parms gfxTick_Parms;
	gfxTick_Parms.dTime = dTime;

	this->ProcessEvent ( pFngfxTick, &gfxTick_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.RemoveMailDelegate
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::RemoveMailDelegate ( )
{
	static UFunction* pFnRemoveMailDelegate = NULL;

	if ( ! pFnRemoveMailDelegate )
		pFnRemoveMailDelegate = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.RemoveMailDelegate" );

	UNowGFXHudScene_execRemoveMailDelegate_Parms RemoveMailDelegate_Parms;

	this->ProcessEvent ( pFnRemoveMailDelegate, &RemoveMailDelegate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.InitMailDelegate
// [0x00020002] 
// Parameters infos:

void UNowGFXHudScene::InitMailDelegate ( )
{
	static UFunction* pFnInitMailDelegate = NULL;

	if ( ! pFnInitMailDelegate )
		pFnInitMailDelegate = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.InitMailDelegate" );

	UNowGFXHudScene_execInitMailDelegate_Parms InitMailDelegate_Parms;

	this->ProcessEvent ( pFnInitMailDelegate, &InitMailDelegate_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.LoggedOut
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventLoggedOut ( )
{
	static UFunction* pFnLoggedOut = NULL;

	if ( ! pFnLoggedOut )
		pFnLoggedOut = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.LoggedOut" );

	UNowGFXHudScene_eventLoggedOut_Parms LoggedOut_Parms;

	this->ProcessEvent ( pFnLoggedOut, &LoggedOut_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXHudScene::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.Init" );

	UNowGFXHudScene_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.TakeMouseFocus
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void UNowGFXHudScene::TakeMouseFocus ( unsigned long bOn )
{
	static UFunction* pFnTakeMouseFocus = NULL;

	if ( ! pFnTakeMouseFocus )
		pFnTakeMouseFocus = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.TakeMouseFocus" );

	UNowGFXHudScene_execTakeMouseFocus_Parms TakeMouseFocus_Parms;
	TakeMouseFocus_Parms.bOn = bOn;

	this->ProcessEvent ( pFnTakeMouseFocus, &TakeMouseFocus_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.OnClose
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXHudScene::eventOnClose ( )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.OnClose" );

	UNowGFXHudScene_eventOnClose_Parms OnClose_Parms;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );
};

// Function NowGame.NowGFXHudScene.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UNowGFXHudScene::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.WidgetInitialized" );

	UNowGFXHudScene_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.CheckAndSetCoolDown
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fTimePassed                    ( CPF_Parm )

bool UNowGFXHudScene::eventCheckAndSetCoolDown ( float fTimePassed )
{
	static UFunction* pFnCheckAndSetCoolDown = NULL;

	if ( ! pFnCheckAndSetCoolDown )
		pFnCheckAndSetCoolDown = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.CheckAndSetCoolDown" );

	UNowGFXHudScene_eventCheckAndSetCoolDown_Parms CheckAndSetCoolDown_Parms;
	CheckAndSetCoolDown_Parms.fTimePassed = fTimePassed;

	this->ProcessEvent ( pFnCheckAndSetCoolDown, &CheckAndSetCoolDown_Parms, NULL );

	return CheckAndSetCoolDown_Parms.ReturnValue;
};

// Function NowGame.NowGFXHudScene.GetItemGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            bag                            ( CPF_Parm )
// int                            Slot                           ( CPF_Parm )

void UNowGFXHudScene::GetItemGuid ( int bag, int Slot )
{
	static UFunction* pFnGetItemGuid = NULL;

	if ( ! pFnGetItemGuid )
		pFnGetItemGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXHudScene.GetItemGuid" );

	UNowGFXHudScene_execGetItemGuid_Parms GetItemGuid_Parms;
	GetItemGuid_Parms.bag = bag;
	GetItemGuid_Parms.Slot = Slot;

	pFnGetItemGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemGuid, &GetItemGuid_Parms, NULL );

	pFnGetItemGuid->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneCommandMenu.clearOptions
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneCommandMenu::clearOptions ( )
{
	static UFunction* pFnclearOptions = NULL;

	if ( ! pFnclearOptions )
		pFnclearOptions = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCommandMenu.clearOptions" );

	UNowGFXSceneCommandMenu_execclearOptions_Parms clearOptions_Parms;

	this->ProcessEvent ( pFnclearOptions, &clearOptions_Parms, NULL );
};

// Function NowGame.NowGFXSceneCommandMenu.addOption
// [0x00020002] 
// Parameters infos:
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneCommandMenu::addOption ( struct FString sString )
{
	static UFunction* pFnaddOption = NULL;

	if ( ! pFnaddOption )
		pFnaddOption = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCommandMenu.addOption" );

	UNowGFXSceneCommandMenu_execaddOption_Parms addOption_Parms;
	memcpy ( &addOption_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnaddOption, &addOption_Parms, NULL );
};

// Function NowGame.NowGFXSceneCommandMenu.SetTitle
// [0x00020002] 
// Parameters infos:
// struct FString                 sTitle                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneCommandMenu::SetTitle ( struct FString sTitle )
{
	static UFunction* pFnSetTitle = NULL;

	if ( ! pFnSetTitle )
		pFnSetTitle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCommandMenu.SetTitle" );

	UNowGFXSceneCommandMenu_execSetTitle_Parms SetTitle_Parms;
	memcpy ( &SetTitle_Parms.sTitle, &sTitle, 0xC );

	this->ProcessEvent ( pFnSetTitle, &SetTitle_Parms, NULL );
};

// Function NowGame.NowGFXSceneCommandMenu.SetOption
// [0x00020002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXSceneCommandMenu::SetOption ( int iIndex )
{
	static UFunction* pFnSetOption = NULL;

	if ( ! pFnSetOption )
		pFnSetOption = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCommandMenu.SetOption" );

	UNowGFXSceneCommandMenu_execSetOption_Parms SetOption_Parms;
	SetOption_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnSetOption, &SetOption_Parms, NULL );
};

// Function NowGame.NowGFXSceneCommandMenu.SendCommand
// [0x00020002] 
// Parameters infos:
// int                            FinalCommand                   ( CPF_Parm )

void UNowGFXSceneCommandMenu::SendCommand ( int FinalCommand )
{
	static UFunction* pFnSendCommand = NULL;

	if ( ! pFnSendCommand )
		pFnSendCommand = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCommandMenu.SendCommand" );

	UNowGFXSceneCommandMenu_execSendCommand_Parms SendCommand_Parms;
	SendCommand_Parms.FinalCommand = FinalCommand;

	this->ProcessEvent ( pFnSendCommand, &SendCommand_Parms, NULL );
};

// Function NowGame.NowGFXSceneCommandMenu.RedrawMenuOptions
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneCommandMenu::RedrawMenuOptions ( )
{
	static UFunction* pFnRedrawMenuOptions = NULL;

	if ( ! pFnRedrawMenuOptions )
		pFnRedrawMenuOptions = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCommandMenu.RedrawMenuOptions" );

	UNowGFXSceneCommandMenu_execRedrawMenuOptions_Parms RedrawMenuOptions_Parms;

	this->ProcessEvent ( pFnRedrawMenuOptions, &RedrawMenuOptions_Parms, NULL );
};

// Function NowGame.NowGFXSceneCommandMenu.EscapePressed
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneCommandMenu::EscapePressed ( )
{
	static UFunction* pFnEscapePressed = NULL;

	if ( ! pFnEscapePressed )
		pFnEscapePressed = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCommandMenu.EscapePressed" );

	UNowGFXSceneCommandMenu_execEscapePressed_Parms EscapePressed_Parms;

	this->ProcessEvent ( pFnEscapePressed, &EscapePressed_Parms, NULL );
};

// Function NowGame.NowGFXSceneCommandMenu.NumberPressed
// [0x00020002] 
// Parameters infos:
// int                            iNr                            ( CPF_Parm )

void UNowGFXSceneCommandMenu::NumberPressed ( int iNr )
{
	static UFunction* pFnNumberPressed = NULL;

	if ( ! pFnNumberPressed )
		pFnNumberPressed = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCommandMenu.NumberPressed" );

	UNowGFXSceneCommandMenu_execNumberPressed_Parms NumberPressed_Parms;
	NumberPressed_Parms.iNr = iNr;

	this->ProcessEvent ( pFnNumberPressed, &NumberPressed_Parms, NULL );
};

// Function NowGame.NowGFXSceneCommandMenu.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneCommandMenu::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCommandMenu.Init" );

	UNowGFXSceneCommandMenu_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneCurrentTasks.abandonTask
// [0x00020000] 
// Parameters infos:
// int                            TaskId                         ( CPF_Parm )

void UNowGFXSceneCurrentTasks::abandonTask ( int TaskId )
{
	static UFunction* pFnabandonTask = NULL;

	if ( ! pFnabandonTask )
		pFnabandonTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCurrentTasks.abandonTask" );

	UNowGFXSceneCurrentTasks_execabandonTask_Parms abandonTask_Parms;
	abandonTask_Parms.TaskId = TaskId;

	this->ProcessEvent ( pFnabandonTask, &abandonTask_Parms, NULL );
};

// Function NowGame.NowGFXSceneCurrentTasks.removeTask
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Id                             ( CPF_Parm )

void UNowGFXSceneCurrentTasks::eventremoveTask ( int Id )
{
	static UFunction* pFnremoveTask = NULL;

	if ( ! pFnremoveTask )
		pFnremoveTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCurrentTasks.removeTask" );

	UNowGFXSceneCurrentTasks_eventremoveTask_Parms removeTask_Parms;
	removeTask_Parms.Id = Id;

	this->ProcessEvent ( pFnremoveTask, &removeTask_Parms, NULL );
};

// Function NowGame.NowGFXSceneCurrentTasks.addTask
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 Item                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Recipient                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            reward                         ( CPF_Parm )
// int                            deposit                        ( CPF_Parm )
// int                            expires                        ( CPF_Parm )

void UNowGFXSceneCurrentTasks::eventaddTask ( int Id, struct FString Item, int Quantity, struct FString Category, struct FString Recipient, struct FString Destination, int reward, int deposit, int expires )
{
	static UFunction* pFnaddTask = NULL;

	if ( ! pFnaddTask )
		pFnaddTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCurrentTasks.addTask" );

	UNowGFXSceneCurrentTasks_eventaddTask_Parms addTask_Parms;
	addTask_Parms.Id = Id;
	memcpy ( &addTask_Parms.Item, &Item, 0xC );
	addTask_Parms.Quantity = Quantity;
	memcpy ( &addTask_Parms.Category, &Category, 0xC );
	memcpy ( &addTask_Parms.Recipient, &Recipient, 0xC );
	memcpy ( &addTask_Parms.Destination, &Destination, 0xC );
	addTask_Parms.reward = reward;
	addTask_Parms.deposit = deposit;
	addTask_Parms.expires = expires;

	this->ProcessEvent ( pFnaddTask, &addTask_Parms, NULL );
};

// Function NowGame.NowGFXSceneCurrentTasks.getLocation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

struct FString UNowGFXSceneCurrentTasks::eventgetLocation ( int Index )
{
	static UFunction* pFngetLocation = NULL;

	if ( ! pFngetLocation )
		pFngetLocation = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCurrentTasks.getLocation" );

	UNowGFXSceneCurrentTasks_eventgetLocation_Parms getLocation_Parms;
	getLocation_Parms.Index = Index;

	this->ProcessEvent ( pFngetLocation, &getLocation_Parms, NULL );

	return getLocation_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneCurrentTasks.setLocations
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneCurrentTasks::setLocations ( )
{
	static UFunction* pFnsetLocations = NULL;

	if ( ! pFnsetLocations )
		pFnsetLocations = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCurrentTasks.setLocations" );

	UNowGFXSceneCurrentTasks_execsetLocations_Parms setLocations_Parms;

	this->ProcessEvent ( pFnsetLocations, &setLocations_Parms, NULL );
};

// Function NowGame.NowGFXSceneCurrentTasks._removeTask
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 _guid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneCurrentTasks::event_removeTask ( struct FString _guid )
{
	static UFunction* pFn_removeTask = NULL;

	if ( ! pFn_removeTask )
		pFn_removeTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCurrentTasks._removeTask" );

	UNowGFXSceneCurrentTasks_event_removeTask_Parms _removeTask_Parms;
	memcpy ( &_removeTask_Parms._guid, &_guid, 0xC );

	this->ProcessEvent ( pFn_removeTask, &_removeTask_Parms, NULL );
};

// Function NowGame.NowGFXSceneCurrentTasks.addTaskIdentifer
// [0x00C20802] ( FUNC_Event )
// Parameters infos:
// struct FString                 _guid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm | CPF_OutParm )

void UNowGFXSceneCurrentTasks::eventaddTaskIdentifer ( struct FString _guid, int* Index )
{
	static UFunction* pFnaddTaskIdentifer = NULL;

	if ( ! pFnaddTaskIdentifer )
		pFnaddTaskIdentifer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCurrentTasks.addTaskIdentifer" );

	UNowGFXSceneCurrentTasks_eventaddTaskIdentifer_Parms addTaskIdentifer_Parms;
	memcpy ( &addTaskIdentifer_Parms._guid, &_guid, 0xC );

	this->ProcessEvent ( pFnaddTaskIdentifer, &addTaskIdentifer_Parms, NULL );

	if ( Index )
		*Index = addTaskIdentifer_Parms.Index;
};

// Function NowGame.NowGFXSceneCurrentTasks.getTaskGuidFromIndex
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

struct FString UNowGFXSceneCurrentTasks::eventgetTaskGuidFromIndex ( int Index )
{
	static UFunction* pFngetTaskGuidFromIndex = NULL;

	if ( ! pFngetTaskGuidFromIndex )
		pFngetTaskGuidFromIndex = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCurrentTasks.getTaskGuidFromIndex" );

	UNowGFXSceneCurrentTasks_eventgetTaskGuidFromIndex_Parms getTaskGuidFromIndex_Parms;
	getTaskGuidFromIndex_Parms.Index = Index;

	this->ProcessEvent ( pFngetTaskGuidFromIndex, &getTaskGuidFromIndex_Parms, NULL );

	return getTaskGuidFromIndex_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneCurrentTasks.getTaskIndexFromGuid
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 _guid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXSceneCurrentTasks::eventgetTaskIndexFromGuid ( struct FString _guid )
{
	static UFunction* pFngetTaskIndexFromGuid = NULL;

	if ( ! pFngetTaskIndexFromGuid )
		pFngetTaskIndexFromGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCurrentTasks.getTaskIndexFromGuid" );

	UNowGFXSceneCurrentTasks_eventgetTaskIndexFromGuid_Parms getTaskIndexFromGuid_Parms;
	memcpy ( &getTaskIndexFromGuid_Parms._guid, &_guid, 0xC );

	this->ProcessEvent ( pFngetTaskIndexFromGuid, &getTaskIndexFromGuid_Parms, NULL );

	return getTaskIndexFromGuid_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneCurrentTasks.GFXClose
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneCurrentTasks::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCurrentTasks.GFXClose" );

	UNowGFXSceneCurrentTasks_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXSceneCurrentTasks.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneCurrentTasks::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCurrentTasks.Init" );

	UNowGFXSceneCurrentTasks_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneCurrentTasks.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UNowGFXSceneCurrentTasks::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneCurrentTasks.WidgetInitialized" );

	UNowGFXSceneCurrentTasks_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneEngineer.AddItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Requirements                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )
// int                            costSilver                     ( CPF_Parm )
// int                            CostPP                         ( CPF_Parm )

void UNowGFXSceneEngineer::AddItem ( struct FString sGuid, struct FString Title, struct FString Description, struct FString Requirements, int Quantity, int costSilver, int CostPP )
{
	static UFunction* pFnAddItem = NULL;

	if ( ! pFnAddItem )
		pFnAddItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneEngineer.AddItem" );

	UNowGFXSceneEngineer_execAddItem_Parms AddItem_Parms;
	memcpy ( &AddItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &AddItem_Parms.Title, &Title, 0xC );
	memcpy ( &AddItem_Parms.Description, &Description, 0xC );
	memcpy ( &AddItem_Parms.Requirements, &Requirements, 0xC );
	AddItem_Parms.Quantity = Quantity;
	AddItem_Parms.costSilver = costSilver;
	AddItem_Parms.CostPP = CostPP;

	this->ProcessEvent ( pFnAddItem, &AddItem_Parms, NULL );
};

// Function NowGame.NowGFXSceneEngineer.setBalances
// [0x00020002] 
// Parameters infos:
// int                            fundsCoin                      ( CPF_Parm )
// int                            fundsPP                        ( CPF_Parm )

void UNowGFXSceneEngineer::setBalances ( int fundsCoin, int fundsPP )
{
	static UFunction* pFnsetBalances = NULL;

	if ( ! pFnsetBalances )
		pFnsetBalances = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneEngineer.setBalances" );

	UNowGFXSceneEngineer_execsetBalances_Parms setBalances_Parms;
	setBalances_Parms.fundsCoin = fundsCoin;
	setBalances_Parms.fundsPP = fundsPP;

	this->ProcessEvent ( pFnsetBalances, &setBalances_Parms, NULL );
};

// Function NowGame.NowGFXSceneEngineer.BuyItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneEngineer::BuyItem ( struct FString sGuid )
{
	static UFunction* pFnBuyItem = NULL;

	if ( ! pFnBuyItem )
		pFnBuyItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneEngineer.BuyItem" );

	UNowGFXSceneEngineer_execBuyItem_Parms BuyItem_Parms;
	memcpy ( &BuyItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnBuyItem, &BuyItem_Parms, NULL );
};

// Function NowGame.NowGFXSceneEngineer.AddItemToUI
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            costSilver                     ( CPF_Parm )
// int                            CostPP                         ( CPF_Parm )

void UNowGFXSceneEngineer::eventAddItemToUI ( struct FString sGuid, struct FString DisplayName, int costSilver, int CostPP )
{
	static UFunction* pFnAddItemToUI = NULL;

	if ( ! pFnAddItemToUI )
		pFnAddItemToUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneEngineer.AddItemToUI" );

	UNowGFXSceneEngineer_eventAddItemToUI_Parms AddItemToUI_Parms;
	memcpy ( &AddItemToUI_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &AddItemToUI_Parms.DisplayName, &DisplayName, 0xC );
	AddItemToUI_Parms.costSilver = costSilver;
	AddItemToUI_Parms.CostPP = CostPP;

	this->ProcessEvent ( pFnAddItemToUI, &AddItemToUI_Parms, NULL );
};

// Function NowGame.NowGFXSceneEngineer.GetAKeep
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerKeep* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerKeep* UNowGFXSceneEngineer::GetAKeep ( )
{
	static UFunction* pFnGetAKeep = NULL;

	if ( ! pFnGetAKeep )
		pFnGetAKeep = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneEngineer.GetAKeep" );

	UNowGFXSceneEngineer_execGetAKeep_Parms GetAKeep_Parms;

	this->ProcessEvent ( pFnGetAKeep, &GetAKeep_Parms, NULL );

	return GetAKeep_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneEngineer.FindItemIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXSceneEngineer::FindItemIndex ( struct FString sGuid )
{
	static UFunction* pFnFindItemIndex = NULL;

	if ( ! pFnFindItemIndex )
		pFnFindItemIndex = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneEngineer.FindItemIndex" );

	UNowGFXSceneEngineer_execFindItemIndex_Parms FindItemIndex_Parms;
	memcpy ( &FindItemIndex_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnFindItemIndex, &FindItemIndex_Parms, NULL );

	return FindItemIndex_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneEngineer.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneEngineer::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneEngineer.Init" );

	UNowGFXSceneEngineer_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneFriendAcceptDialog.DialogueDecline
// [0x00020002] 
// Parameters infos:
// int                            m_enum                         ( CPF_Parm )

void UNowGFXSceneFriendAcceptDialog::DialogueDecline ( int m_enum )
{
	static UFunction* pFnDialogueDecline = NULL;

	if ( ! pFnDialogueDecline )
		pFnDialogueDecline = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneFriendAcceptDialog.DialogueDecline" );

	UNowGFXSceneFriendAcceptDialog_execDialogueDecline_Parms DialogueDecline_Parms;
	DialogueDecline_Parms.m_enum = m_enum;

	this->ProcessEvent ( pFnDialogueDecline, &DialogueDecline_Parms, NULL );
};

// Function NowGame.NowGFXSceneFriendAcceptDialog.DialogueAccept
// [0x00020002] 
// Parameters infos:
// int                            m_enum                         ( CPF_Parm )

void UNowGFXSceneFriendAcceptDialog::DialogueAccept ( int m_enum )
{
	static UFunction* pFnDialogueAccept = NULL;

	if ( ! pFnDialogueAccept )
		pFnDialogueAccept = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneFriendAcceptDialog.DialogueAccept" );

	UNowGFXSceneFriendAcceptDialog_execDialogueAccept_Parms DialogueAccept_Parms;
	DialogueAccept_Parms.m_enum = m_enum;

	this->ProcessEvent ( pFnDialogueAccept, &DialogueAccept_Parms, NULL );
};

// Function NowGame.NowGFXSceneFriendAcceptDialog.isRunning
// [0x00020000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXSceneFriendAcceptDialog::isRunning ( )
{
	static UFunction* pFnisRunning = NULL;

	if ( ! pFnisRunning )
		pFnisRunning = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneFriendAcceptDialog.isRunning" );

	UNowGFXSceneFriendAcceptDialog_execisRunning_Parms isRunning_Parms;

	this->ProcessEvent ( pFnisRunning, &isRunning_Parms, NULL );

	return isRunning_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneFriendAcceptDialog.GFXClose
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneFriendAcceptDialog::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneFriendAcceptDialog.GFXClose" );

	UNowGFXSceneFriendAcceptDialog_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXSceneFriendAcceptDialog.initDialogue
// [0x00020002] 
// Parameters infos:
// struct FString                 Header                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            Number                         ( CPF_Parm )

void UNowGFXSceneFriendAcceptDialog::initDialogue ( struct FString Header, int Number )
{
	static UFunction* pFninitDialogue = NULL;

	if ( ! pFninitDialogue )
		pFninitDialogue = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneFriendAcceptDialog.initDialogue" );

	UNowGFXSceneFriendAcceptDialog_execinitDialogue_Parms initDialogue_Parms;
	memcpy ( &initDialogue_Parms.Header, &Header, 0xC );
	initDialogue_Parms.Number = Number;

	this->ProcessEvent ( pFninitDialogue, &initDialogue_Parms, NULL );
};

// Function NowGame.NowGFXSceneFriendAcceptDialog.setDialog
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 _name                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Number                         ( CPF_Parm )

void UNowGFXSceneFriendAcceptDialog::eventsetDialog ( struct FString _name, int Number )
{
	static UFunction* pFnsetDialog = NULL;

	if ( ! pFnsetDialog )
		pFnsetDialog = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneFriendAcceptDialog.setDialog" );

	UNowGFXSceneFriendAcceptDialog_eventsetDialog_Parms setDialog_Parms;
	memcpy ( &setDialog_Parms._name, &_name, 0xC );
	setDialog_Parms.Number = Number;

	this->ProcessEvent ( pFnsetDialog, &setDialog_Parms, NULL );
};

// Function NowGame.NowGFXSceneFriendAcceptDialog.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneFriendAcceptDialog::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneFriendAcceptDialog.Init" );

	UNowGFXSceneFriendAcceptDialog_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneFriendAcceptDialog.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UNowGFXSceneFriendAcceptDialog::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneFriendAcceptDialog.WidgetInitialized" );

	UNowGFXSceneFriendAcceptDialog_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneFriendAcceptDialog.RefuseFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneFriendAcceptDialog::RefuseFriendNative ( struct FString FriendName )
{
	static UFunction* pFnRefuseFriendNative = NULL;

	if ( ! pFnRefuseFriendNative )
		pFnRefuseFriendNative = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneFriendAcceptDialog.RefuseFriendNative" );

	UNowGFXSceneFriendAcceptDialog_execRefuseFriendNative_Parms RefuseFriendNative_Parms;
	memcpy ( &RefuseFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnRefuseFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRefuseFriendNative, &RefuseFriendNative_Parms, NULL );

	pFnRefuseFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneFriendAcceptDialog.AcceptFriendNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 FriendName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneFriendAcceptDialog::AcceptFriendNative ( struct FString FriendName )
{
	static UFunction* pFnAcceptFriendNative = NULL;

	if ( ! pFnAcceptFriendNative )
		pFnAcceptFriendNative = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneFriendAcceptDialog.AcceptFriendNative" );

	UNowGFXSceneFriendAcceptDialog_execAcceptFriendNative_Parms AcceptFriendNative_Parms;
	memcpy ( &AcceptFriendNative_Parms.FriendName, &FriendName, 0xC );

	pFnAcceptFriendNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAcceptFriendNative, &AcceptFriendNative_Parms, NULL );

	pFnAcceptFriendNative->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneFriendQuestionMenu.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneFriendQuestionMenu::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneFriendQuestionMenu.Init" );

	UNowGFXSceneFriendQuestionMenu_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneFriendQuestionMenu.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UNowGFXSceneFriendQuestionMenu::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneFriendQuestionMenu.WidgetInitialized" );

	UNowGFXSceneFriendQuestionMenu_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneGames.onRemovePieceNotification
// [0x00020002] 
// Parameters infos:
// int                            pieceID                        ( CPF_Parm )

void UNowGFXSceneGames::onRemovePieceNotification ( int pieceID )
{
	static UFunction* pFnonRemovePieceNotification = NULL;

	if ( ! pFnonRemovePieceNotification )
		pFnonRemovePieceNotification = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.onRemovePieceNotification" );

	UNowGFXSceneGames_execonRemovePieceNotification_Parms onRemovePieceNotification_Parms;
	onRemovePieceNotification_Parms.pieceID = pieceID;

	this->ProcessEvent ( pFnonRemovePieceNotification, &onRemovePieceNotification_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.onMovePieceNotification
// [0x00020002] 
// Parameters infos:
// int                            pieceID                        ( CPF_Parm )
// int                            XPos                           ( CPF_Parm )
// int                            YPos                           ( CPF_Parm )

void UNowGFXSceneGames::onMovePieceNotification ( int pieceID, int XPos, int YPos )
{
	static UFunction* pFnonMovePieceNotification = NULL;

	if ( ! pFnonMovePieceNotification )
		pFnonMovePieceNotification = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.onMovePieceNotification" );

	UNowGFXSceneGames_execonMovePieceNotification_Parms onMovePieceNotification_Parms;
	onMovePieceNotification_Parms.pieceID = pieceID;
	onMovePieceNotification_Parms.XPos = XPos;
	onMovePieceNotification_Parms.YPos = YPos;

	this->ProcessEvent ( pFnonMovePieceNotification, &onMovePieceNotification_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.onAddPieceNotification
// [0x00020002] 
// Parameters infos:
// int                            pieceType                      ( CPF_Parm )
// int                            pieceID                        ( CPF_Parm )
// int                            XPos                           ( CPF_Parm )
// int                            YPos                           ( CPF_Parm )

void UNowGFXSceneGames::onAddPieceNotification ( int pieceType, int pieceID, int XPos, int YPos )
{
	static UFunction* pFnonAddPieceNotification = NULL;

	if ( ! pFnonAddPieceNotification )
		pFnonAddPieceNotification = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.onAddPieceNotification" );

	UNowGFXSceneGames_execonAddPieceNotification_Parms onAddPieceNotification_Parms;
	onAddPieceNotification_Parms.pieceType = pieceType;
	onAddPieceNotification_Parms.pieceID = pieceID;
	onAddPieceNotification_Parms.XPos = XPos;
	onAddPieceNotification_Parms.YPos = YPos;

	this->ProcessEvent ( pFnonAddPieceNotification, &onAddPieceNotification_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.onRemovePieceFromInventory
// [0x00020002] 
// Parameters infos:
// int                            pieceType                      ( CPF_Parm )

void UNowGFXSceneGames::onRemovePieceFromInventory ( int pieceType )
{
	static UFunction* pFnonRemovePieceFromInventory = NULL;

	if ( ! pFnonRemovePieceFromInventory )
		pFnonRemovePieceFromInventory = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.onRemovePieceFromInventory" );

	UNowGFXSceneGames_execonRemovePieceFromInventory_Parms onRemovePieceFromInventory_Parms;
	onRemovePieceFromInventory_Parms.pieceType = pieceType;

	this->ProcessEvent ( pFnonRemovePieceFromInventory, &onRemovePieceFromInventory_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.onAddPieceToInventory
// [0x00020002] 
// Parameters infos:
// int                            pieceType                      ( CPF_Parm )

void UNowGFXSceneGames::onAddPieceToInventory ( int pieceType )
{
	static UFunction* pFnonAddPieceToInventory = NULL;

	if ( ! pFnonAddPieceToInventory )
		pFnonAddPieceToInventory = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.onAddPieceToInventory" );

	UNowGFXSceneGames_execonAddPieceToInventory_Parms onAddPieceToInventory_Parms;
	onAddPieceToInventory_Parms.pieceType = pieceType;

	this->ProcessEvent ( pFnonAddPieceToInventory, &onAddPieceToInventory_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.onAttemptPieceTake
// [0x00020002] 
// Parameters infos:
// int                            pieceType                      ( CPF_Parm )
// int                            pieceID                        ( CPF_Parm )
// int                            XPos                           ( CPF_Parm )
// int                            YPos                           ( CPF_Parm )

void UNowGFXSceneGames::onAttemptPieceTake ( int pieceType, int pieceID, int XPos, int YPos )
{
	static UFunction* pFnonAttemptPieceTake = NULL;

	if ( ! pFnonAttemptPieceTake )
		pFnonAttemptPieceTake = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.onAttemptPieceTake" );

	UNowGFXSceneGames_execonAttemptPieceTake_Parms onAttemptPieceTake_Parms;
	onAttemptPieceTake_Parms.pieceType = pieceType;
	onAttemptPieceTake_Parms.pieceID = pieceID;
	onAttemptPieceTake_Parms.XPos = XPos;
	onAttemptPieceTake_Parms.YPos = YPos;

	this->ProcessEvent ( pFnonAttemptPieceTake, &onAttemptPieceTake_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.GFXClose
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneGames::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.GFXClose" );

	UNowGFXSceneGames_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.sendGameTellB
// [0x00020002] 
// Parameters infos:
// struct FString                 TellB                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneGames::sendGameTellB ( struct FString TellB )
{
	static UFunction* pFnsendGameTellB = NULL;

	if ( ! pFnsendGameTellB )
		pFnsendGameTellB = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.sendGameTellB" );

	UNowGFXSceneGames_execsendGameTellB_Parms sendGameTellB_Parms;
	memcpy ( &sendGameTellB_Parms.TellB, &TellB, 0xC );

	this->ProcessEvent ( pFnsendGameTellB, &sendGameTellB_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.stopDrag
// [0x00020000] 
// Parameters infos:

void UNowGFXSceneGames::stopDrag ( )
{
	static UFunction* pFnstopDrag = NULL;

	if ( ! pFnstopDrag )
		pFnstopDrag = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.stopDrag" );

	UNowGFXSceneGames_execstopDrag_Parms stopDrag_Parms;

	this->ProcessEvent ( pFnstopDrag, &stopDrag_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.startDrag
// [0x00020000] 
// Parameters infos:

void UNowGFXSceneGames::startDrag ( )
{
	static UFunction* pFnstartDrag = NULL;

	if ( ! pFnstartDrag )
		pFnstartDrag = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.startDrag" );

	UNowGFXSceneGames_execstartDrag_Parms startDrag_Parms;

	this->ProcessEvent ( pFnstartDrag, &startDrag_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.toggleLockedMark
// [0x00024000] 
// Parameters infos:
// int                            pieceID                        ( CPF_Parm )
// unsigned long                  locked                         ( CPF_Parm )
// struct FString                 byWhom                         ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneGames::toggleLockedMark ( int pieceID, unsigned long locked, struct FString byWhom )
{
	static UFunction* pFntoggleLockedMark = NULL;

	if ( ! pFntoggleLockedMark )
		pFntoggleLockedMark = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.toggleLockedMark" );

	UNowGFXSceneGames_exectoggleLockedMark_Parms toggleLockedMark_Parms;
	toggleLockedMark_Parms.pieceID = pieceID;
	toggleLockedMark_Parms.locked = locked;
	memcpy ( &toggleLockedMark_Parms.byWhom, &byWhom, 0xC );

	this->ProcessEvent ( pFntoggleLockedMark, &toggleLockedMark_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.postEventMsg
// [0x00020000] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneGames::postEventMsg ( struct FString msg )
{
	static UFunction* pFnpostEventMsg = NULL;

	if ( ! pFnpostEventMsg )
		pFnpostEventMsg = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.postEventMsg" );

	UNowGFXSceneGames_execpostEventMsg_Parms postEventMsg_Parms;
	memcpy ( &postEventMsg_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnpostEventMsg, &postEventMsg_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.removeParticipant
// [0x00020000] 
// Parameters infos:
// struct FString                 avatarName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneGames::removeParticipant ( struct FString avatarName )
{
	static UFunction* pFnremoveParticipant = NULL;

	if ( ! pFnremoveParticipant )
		pFnremoveParticipant = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.removeParticipant" );

	UNowGFXSceneGames_execremoveParticipant_Parms removeParticipant_Parms;
	memcpy ( &removeParticipant_Parms.avatarName, &avatarName, 0xC );

	this->ProcessEvent ( pFnremoveParticipant, &removeParticipant_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.addParticipant
// [0x00020000] 
// Parameters infos:
// struct FString                 avatarName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneGames::addParticipant ( struct FString avatarName )
{
	static UFunction* pFnaddParticipant = NULL;

	if ( ! pFnaddParticipant )
		pFnaddParticipant = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.addParticipant" );

	UNowGFXSceneGames_execaddParticipant_Parms addParticipant_Parms;
	memcpy ( &addParticipant_Parms.avatarName, &avatarName, 0xC );

	this->ProcessEvent ( pFnaddParticipant, &addParticipant_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.removePiece
// [0x00020002] 
// Parameters infos:
// int                            pieceID                        ( CPF_Parm )

void UNowGFXSceneGames::removePiece ( int pieceID )
{
	static UFunction* pFnremovePiece = NULL;

	if ( ! pFnremovePiece )
		pFnremovePiece = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.removePiece" );

	UNowGFXSceneGames_execremovePiece_Parms removePiece_Parms;
	removePiece_Parms.pieceID = pieceID;

	this->ProcessEvent ( pFnremovePiece, &removePiece_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.failTakePiece
// [0x00020002] 
// Parameters infos:
// int                            pieceID                        ( CPF_Parm )
// int                            XPos                           ( CPF_Parm )
// int                            YPos                           ( CPF_Parm )

void UNowGFXSceneGames::failTakePiece ( int pieceID, int XPos, int YPos )
{
	static UFunction* pFnfailTakePiece = NULL;

	if ( ! pFnfailTakePiece )
		pFnfailTakePiece = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.failTakePiece" );

	UNowGFXSceneGames_execfailTakePiece_Parms failTakePiece_Parms;
	failTakePiece_Parms.pieceID = pieceID;
	failTakePiece_Parms.XPos = XPos;
	failTakePiece_Parms.YPos = YPos;

	this->ProcessEvent ( pFnfailTakePiece, &failTakePiece_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.takePiece
// [0x00020002] 
// Parameters infos:
// int                            pieceEnum                      ( CPF_Parm )
// int                            pieceID                        ( CPF_Parm )
// int                            XPos                           ( CPF_Parm )
// int                            YPos                           ( CPF_Parm )

void UNowGFXSceneGames::takePiece ( int pieceEnum, int pieceID, int XPos, int YPos )
{
	static UFunction* pFntakePiece = NULL;

	if ( ! pFntakePiece )
		pFntakePiece = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.takePiece" );

	UNowGFXSceneGames_exectakePiece_Parms takePiece_Parms;
	takePiece_Parms.pieceEnum = pieceEnum;
	takePiece_Parms.pieceID = pieceID;
	takePiece_Parms.XPos = XPos;
	takePiece_Parms.YPos = YPos;

	this->ProcessEvent ( pFntakePiece, &takePiece_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.movePiece
// [0x00020002] 
// Parameters infos:
// int                            pieceID                        ( CPF_Parm )
// int                            XPos                           ( CPF_Parm )
// int                            YPos                           ( CPF_Parm )

void UNowGFXSceneGames::movePiece ( int pieceID, int XPos, int YPos )
{
	static UFunction* pFnmovePiece = NULL;

	if ( ! pFnmovePiece )
		pFnmovePiece = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.movePiece" );

	UNowGFXSceneGames_execmovePiece_Parms movePiece_Parms;
	movePiece_Parms.pieceID = pieceID;
	movePiece_Parms.XPos = XPos;
	movePiece_Parms.YPos = YPos;

	this->ProcessEvent ( pFnmovePiece, &movePiece_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.SendPieceToFlash
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            pieceEnum                      ( CPF_Parm )
// int                            pieceID                        ( CPF_Parm )
// int                            XPos                           ( CPF_Parm )
// int                            YPos                           ( CPF_Parm )

void UNowGFXSceneGames::eventSendPieceToFlash ( int pieceEnum, int pieceID, int XPos, int YPos )
{
	static UFunction* pFnSendPieceToFlash = NULL;

	if ( ! pFnSendPieceToFlash )
		pFnSendPieceToFlash = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.SendPieceToFlash" );

	UNowGFXSceneGames_eventSendPieceToFlash_Parms SendPieceToFlash_Parms;
	SendPieceToFlash_Parms.pieceEnum = pieceEnum;
	SendPieceToFlash_Parms.pieceID = pieceID;
	SendPieceToFlash_Parms.XPos = XPos;
	SendPieceToFlash_Parms.YPos = YPos;

	this->ProcessEvent ( pFnSendPieceToFlash, &SendPieceToFlash_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.RecieveGameEvent
// [0x00024002] 
// Parameters infos:
// int                            eEvent                         ( CPF_Parm )
// int                            pieceType                      ( CPF_Parm )
// int                            pieceID                        ( CPF_OptionalParm | CPF_Parm )
// int                            XPos                           ( CPF_OptionalParm | CPF_Parm )
// int                            YPos                           ( CPF_OptionalParm | CPF_Parm )
// struct FString                 avatarName                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneGames::RecieveGameEvent ( int eEvent, int pieceType, int pieceID, int XPos, int YPos, struct FString avatarName )
{
	static UFunction* pFnRecieveGameEvent = NULL;

	if ( ! pFnRecieveGameEvent )
		pFnRecieveGameEvent = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.RecieveGameEvent" );

	UNowGFXSceneGames_execRecieveGameEvent_Parms RecieveGameEvent_Parms;
	RecieveGameEvent_Parms.eEvent = eEvent;
	RecieveGameEvent_Parms.pieceType = pieceType;
	RecieveGameEvent_Parms.pieceID = pieceID;
	RecieveGameEvent_Parms.XPos = XPos;
	RecieveGameEvent_Parms.YPos = YPos;
	memcpy ( &RecieveGameEvent_Parms.avatarName, &avatarName, 0xC );

	this->ProcessEvent ( pFnRecieveGameEvent, &RecieveGameEvent_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.RequestMyPieces
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneGames::RequestMyPieces ( )
{
	static UFunction* pFnRequestMyPieces = NULL;

	if ( ! pFnRequestMyPieces )
		pFnRequestMyPieces = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.RequestMyPieces" );

	UNowGFXSceneGames_execRequestMyPieces_Parms RequestMyPieces_Parms;

	this->ProcessEvent ( pFnRequestMyPieces, &RequestMyPieces_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneGames::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.Init" );

	UNowGFXSceneGames_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneGames.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UNowGFXSceneGames::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.WidgetInitialized" );

	UNowGFXSceneGames_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneGames.checkInventorySpace
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowGFXSceneGames::checkInventorySpace ( )
{
	static UFunction* pFncheckInventorySpace = NULL;

	if ( ! pFncheckInventorySpace )
		pFncheckInventorySpace = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.checkInventorySpace" );

	UNowGFXSceneGames_execcheckInventorySpace_Parms checkInventorySpace_Parms;

	pFncheckInventorySpace->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFncheckInventorySpace, &checkInventorySpace_Parms, NULL );

	pFncheckInventorySpace->FunctionFlags |= 0x400;

	return checkInventorySpace_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneGames.addPieceToInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            pieceType                      ( CPF_Parm )

void UNowGFXSceneGames::addPieceToInventory ( int pieceType )
{
	static UFunction* pFnaddPieceToInventory = NULL;

	if ( ! pFnaddPieceToInventory )
		pFnaddPieceToInventory = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.addPieceToInventory" );

	UNowGFXSceneGames_execaddPieceToInventory_Parms addPieceToInventory_Parms;
	addPieceToInventory_Parms.pieceType = pieceType;

	pFnaddPieceToInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnaddPieceToInventory, &addPieceToInventory_Parms, NULL );

	pFnaddPieceToInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneGames.removePieceFromInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            pieceType                      ( CPF_Parm )

void UNowGFXSceneGames::removePieceFromInventory ( int pieceType )
{
	static UFunction* pFnremovePieceFromInventory = NULL;

	if ( ! pFnremovePieceFromInventory )
		pFnremovePieceFromInventory = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.removePieceFromInventory" );

	UNowGFXSceneGames_execremovePieceFromInventory_Parms removePieceFromInventory_Parms;
	removePieceFromInventory_Parms.pieceType = pieceType;

	pFnremovePieceFromInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnremovePieceFromInventory, &removePieceFromInventory_Parms, NULL );

	pFnremovePieceFromInventory->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneGames.ExtractMyPieces
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXSceneGames::ExtractMyPieces ( )
{
	static UFunction* pFnExtractMyPieces = NULL;

	if ( ! pFnExtractMyPieces )
		pFnExtractMyPieces = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGames.ExtractMyPieces" );

	UNowGFXSceneGames_execExtractMyPieces_Parms ExtractMyPieces_Parms;

	pFnExtractMyPieces->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExtractMyPieces, &ExtractMyPieces_Parms, NULL );

	pFnExtractMyPieces->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneGMGUI.recieveFlashGMCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneGMGUI::recieveFlashGMCommand ( struct FString Command )
{
	static UFunction* pFnrecieveFlashGMCommand = NULL;

	if ( ! pFnrecieveFlashGMCommand )
		pFnrecieveFlashGMCommand = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGMGUI.recieveFlashGMCommand" );

	UNowGFXSceneGMGUI_execrecieveFlashGMCommand_Parms recieveFlashGMCommand_Parms;
	memcpy ( &recieveFlashGMCommand_Parms.Command, &Command, 0xC );

	this->ProcessEvent ( pFnrecieveFlashGMCommand, &recieveFlashGMCommand_Parms, NULL );
};

// Function NowGame.NowGFXSceneGMGUI.updatePetition
// [0x00020002] 
// Parameters infos:
// struct FString                 petitionUser                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 entirePetition                 ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneGMGUI::updatePetition ( struct FString petitionUser, struct FString entirePetition )
{
	static UFunction* pFnupdatePetition = NULL;

	if ( ! pFnupdatePetition )
		pFnupdatePetition = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGMGUI.updatePetition" );

	UNowGFXSceneGMGUI_execupdatePetition_Parms updatePetition_Parms;
	memcpy ( &updatePetition_Parms.petitionUser, &petitionUser, 0xC );
	memcpy ( &updatePetition_Parms.entirePetition, &entirePetition, 0xC );

	this->ProcessEvent ( pFnupdatePetition, &updatePetition_Parms, NULL );
};

// Function NowGame.NowGFXSceneGMGUI.addPetition
// [0x00020002] 
// Parameters infos:
// struct FString                 petition                       ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneGMGUI::addPetition ( struct FString petition )
{
	static UFunction* pFnaddPetition = NULL;

	if ( ! pFnaddPetition )
		pFnaddPetition = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGMGUI.addPetition" );

	UNowGFXSceneGMGUI_execaddPetition_Parms addPetition_Parms;
	memcpy ( &addPetition_Parms.petition, &petition, 0xC );

	this->ProcessEvent ( pFnaddPetition, &addPetition_Parms, NULL );
};

// Function NowGame.NowGFXSceneGMGUI.removePetition
// [0x00020002] 
// Parameters infos:
// struct FString                 petitionToRemove               ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneGMGUI::removePetition ( struct FString petitionToRemove )
{
	static UFunction* pFnremovePetition = NULL;

	if ( ! pFnremovePetition )
		pFnremovePetition = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGMGUI.removePetition" );

	UNowGFXSceneGMGUI_execremovePetition_Parms removePetition_Parms;
	memcpy ( &removePetition_Parms.petitionToRemove, &petitionToRemove, 0xC );

	this->ProcessEvent ( pFnremovePetition, &removePetition_Parms, NULL );
};

// Function NowGame.NowGFXSceneGMGUI.initFlashGMGUI
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneGMGUI::initFlashGMGUI ( )
{
	static UFunction* pFninitFlashGMGUI = NULL;

	if ( ! pFninitFlashGMGUI )
		pFninitFlashGMGUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGMGUI.initFlashGMGUI" );

	UNowGFXSceneGMGUI_execinitFlashGMGUI_Parms initFlashGMGUI_Parms;

	this->ProcessEvent ( pFninitFlashGMGUI, &initFlashGMGUI_Parms, NULL );
};

// Function NowGame.NowGFXSceneGMGUI.toggleGMGUI
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneGMGUI::toggleGMGUI ( )
{
	static UFunction* pFntoggleGMGUI = NULL;

	if ( ! pFntoggleGMGUI )
		pFntoggleGMGUI = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGMGUI.toggleGMGUI" );

	UNowGFXSceneGMGUI_exectoggleGMGUI_Parms toggleGMGUI_Parms;

	this->ProcessEvent ( pFntoggleGMGUI, &toggleGMGUI_Parms, NULL );
};

// Function NowGame.NowGFXSceneGMGUI.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneGMGUI::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGMGUI.Init" );

	UNowGFXSceneGMGUI_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneGuild.GFXClose
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneGuild::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGuild.GFXClose" );

	UNowGFXSceneGuild_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXSceneGuild.Init
// [0x00020000] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneGuild::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGuild.Init" );

	UNowGFXSceneGuild_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneGuild.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UNowGFXSceneGuild::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneGuild.WidgetInitialized" );

	UNowGFXSceneGuild_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneLockpicking.initLockpicking
// [0x00020002] 
// Parameters infos:
// int                            iNumPins                       ( CPF_Parm )
// int                            iDifficulty                    ( CPF_Parm )
// int                            iSkillLevel                    ( CPF_Parm )
// int                            iNumPicks                      ( CPF_Parm )

void UNowGFXSceneLockpicking::initLockpicking ( int iNumPins, int iDifficulty, int iSkillLevel, int iNumPicks )
{
	static UFunction* pFninitLockpicking = NULL;

	if ( ! pFninitLockpicking )
		pFninitLockpicking = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneLockpicking.initLockpicking" );

	UNowGFXSceneLockpicking_execinitLockpicking_Parms initLockpicking_Parms;
	initLockpicking_Parms.iNumPins = iNumPins;
	initLockpicking_Parms.iDifficulty = iDifficulty;
	initLockpicking_Parms.iSkillLevel = iSkillLevel;
	initLockpicking_Parms.iNumPicks = iNumPicks;

	this->ProcessEvent ( pFninitLockpicking, &initLockpicking_Parms, NULL );
};

// Function NowGame.NowGFXSceneLockpicking.GFXClose
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneLockpicking::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneLockpicking.GFXClose" );

	UNowGFXSceneLockpicking_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXSceneLockpicking.LockOpened
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneLockpicking::LockOpened ( )
{
	static UFunction* pFnLockOpened = NULL;

	if ( ! pFnLockOpened )
		pFnLockOpened = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneLockpicking.LockOpened" );

	UNowGFXSceneLockpicking_execLockOpened_Parms LockOpened_Parms;

	this->ProcessEvent ( pFnLockOpened, &LockOpened_Parms, NULL );
};

// Function NowGame.NowGFXSceneLockpicking.PickBroken
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneLockpicking::PickBroken ( )
{
	static UFunction* pFnPickBroken = NULL;

	if ( ! pFnPickBroken )
		pFnPickBroken = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneLockpicking.PickBroken" );

	UNowGFXSceneLockpicking_execPickBroken_Parms PickBroken_Parms;

	this->ProcessEvent ( pFnPickBroken, &PickBroken_Parms, NULL );
};

// Function NowGame.NowGFXSceneLockpicking.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneLockpicking::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneLockpicking.Init" );

	UNowGFXSceneLockpicking_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneLockpicking.GetChestStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXSceneLockpicking::GetChestStats ( )
{
	static UFunction* pFnGetChestStats = NULL;

	if ( ! pFnGetChestStats )
		pFnGetChestStats = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneLockpicking.GetChestStats" );

	UNowGFXSceneLockpicking_execGetChestStats_Parms GetChestStats_Parms;

	pFnGetChestStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetChestStats, &GetChestStats_Parms, NULL );

	pFnGetChestStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneLockpicking.SendOpenLock
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXSceneLockpicking::SendOpenLock ( )
{
	static UFunction* pFnSendOpenLock = NULL;

	if ( ! pFnSendOpenLock )
		pFnSendOpenLock = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneLockpicking.SendOpenLock" );

	UNowGFXSceneLockpicking_execSendOpenLock_Parms SendOpenLock_Parms;

	pFnSendOpenLock->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendOpenLock, &SendOpenLock_Parms, NULL );

	pFnSendOpenLock->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneLockpicking.SendPickBroken
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXSceneLockpicking::SendPickBroken ( )
{
	static UFunction* pFnSendPickBroken = NULL;

	if ( ! pFnSendPickBroken )
		pFnSendPickBroken = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneLockpicking.SendPickBroken" );

	UNowGFXSceneLockpicking_execSendPickBroken_Parms SendPickBroken_Parms;

	pFnSendPickBroken->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendPickBroken, &SendPickBroken_Parms, NULL );

	pFnSendPickBroken->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneMurder.GFXClose
// [0x00020000] 
// Parameters infos:

void UNowGFXSceneMurder::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneMurder.GFXClose" );

	UNowGFXSceneMurder_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXSceneMurder.ReportMurderer
// [0x00020000] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMurder::ReportMurderer ( struct FString sName )
{
	static UFunction* pFnReportMurderer = NULL;

	if ( ! pFnReportMurderer )
		pFnReportMurderer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneMurder.ReportMurderer" );

	UNowGFXSceneMurder_execReportMurderer_Parms ReportMurderer_Parms;
	memcpy ( &ReportMurderer_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnReportMurderer, &ReportMurderer_Parms, NULL );
};

// Function NowGame.NowGFXSceneMurder.SendToServer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowGFXSceneMurder::SendToServer ( )
{
	static UFunction* pFnSendToServer = NULL;

	if ( ! pFnSendToServer )
		pFnSendToServer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneMurder.SendToServer" );

	UNowGFXSceneMurder_execSendToServer_Parms SendToServer_Parms;

	pFnSendToServer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendToServer, &SendToServer_Parms, NULL );

	pFnSendToServer->FunctionFlags |= 0x400;
};

// Function NowGame.NowGFXSceneMurder.AddMurdererToFlash
// [0x00020002] 
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneMurder::AddMurdererToFlash ( struct FString sName )
{
	static UFunction* pFnAddMurdererToFlash = NULL;

	if ( ! pFnAddMurdererToFlash )
		pFnAddMurdererToFlash = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneMurder.AddMurdererToFlash" );

	UNowGFXSceneMurder_execAddMurdererToFlash_Parms AddMurdererToFlash_Parms;
	memcpy ( &AddMurdererToFlash_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnAddMurdererToFlash, &AddMurdererToFlash_Parms, NULL );
};

// Function NowGame.NowGFXSceneMurder.AddMurderer
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iIndex                         ( CPF_Parm )

void UNowGFXSceneMurder::eventAddMurderer ( struct FString sName, int iIndex )
{
	static UFunction* pFnAddMurderer = NULL;

	if ( ! pFnAddMurderer )
		pFnAddMurderer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneMurder.AddMurderer" );

	UNowGFXSceneMurder_eventAddMurderer_Parms AddMurderer_Parms;
	memcpy ( &AddMurderer_Parms.sName, &sName, 0xC );
	AddMurderer_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnAddMurderer, &AddMurderer_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcCityBrain.addResponse
// [0x00020002] 
// Parameters infos:
// int                            ChatID                         ( CPF_Parm )
// int                            TargetID                       ( CPF_Parm )
// struct FString                 uscript                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneNpcCityBrain::addResponse ( int ChatID, int TargetID, struct FString uscript, struct FString msg )
{
	static UFunction* pFnaddResponse = NULL;

	if ( ! pFnaddResponse )
		pFnaddResponse = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcCityBrain.addResponse" );

	UNowGFXSceneNpcCityBrain_execaddResponse_Parms addResponse_Parms;
	addResponse_Parms.ChatID = ChatID;
	addResponse_Parms.TargetID = TargetID;
	memcpy ( &addResponse_Parms.uscript, &uscript, 0xC );
	memcpy ( &addResponse_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnaddResponse, &addResponse_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcCityBrain.addChat
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneNpcCityBrain::addChat ( int Id, struct FString msg )
{
	static UFunction* pFnaddChat = NULL;

	if ( ! pFnaddChat )
		pFnaddChat = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcCityBrain.addChat" );

	UNowGFXSceneNpcCityBrain_execaddChat_Parms addChat_Parms;
	addChat_Parms.Id = Id;
	memcpy ( &addChat_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnaddChat, &addChat_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcCityBrain.showContent
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneNpcCityBrain::showContent ( )
{
	static UFunction* pFnshowContent = NULL;

	if ( ! pFnshowContent )
		pFnshowContent = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcCityBrain.showContent" );

	UNowGFXSceneNpcCityBrain_execshowContent_Parms showContent_Parms;

	this->ProcessEvent ( pFnshowContent, &showContent_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcCityBrain.setNPC
// [0x00020002] 
// Parameters infos:
// struct FString                 npcName                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 npcExit                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 npcBack                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneNpcCityBrain::setNPC ( struct FString npcName, struct FString npcExit, struct FString npcBack )
{
	static UFunction* pFnsetNPC = NULL;

	if ( ! pFnsetNPC )
		pFnsetNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcCityBrain.setNPC" );

	UNowGFXSceneNpcCityBrain_execsetNPC_Parms setNPC_Parms;
	memcpy ( &setNPC_Parms.npcName, &npcName, 0xC );
	memcpy ( &setNPC_Parms.npcExit, &npcExit, 0xC );
	memcpy ( &setNPC_Parms.npcBack, &npcBack, 0xC );

	this->ProcessEvent ( pFnsetNPC, &setNPC_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcCityBrain.TurnOffResCriminals
// [0x00020000] 
// Parameters infos:

void UNowGFXSceneNpcCityBrain::TurnOffResCriminals ( )
{
	static UFunction* pFnTurnOffResCriminals = NULL;

	if ( ! pFnTurnOffResCriminals )
		pFnTurnOffResCriminals = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcCityBrain.TurnOffResCriminals" );

	UNowGFXSceneNpcCityBrain_execTurnOffResCriminals_Parms TurnOffResCriminals_Parms;

	this->ProcessEvent ( pFnTurnOffResCriminals, &TurnOffResCriminals_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcCityBrain.TurnOnResCriminals
// [0x00020000] 
// Parameters infos:

void UNowGFXSceneNpcCityBrain::TurnOnResCriminals ( )
{
	static UFunction* pFnTurnOnResCriminals = NULL;

	if ( ! pFnTurnOnResCriminals )
		pFnTurnOnResCriminals = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcCityBrain.TurnOnResCriminals" );

	UNowGFXSceneNpcCityBrain_execTurnOnResCriminals_Parms TurnOnResCriminals_Parms;

	this->ProcessEvent ( pFnTurnOnResCriminals, &TurnOnResCriminals_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcCityBrain.TurnOnGuards
// [0x00020000] 
// Parameters infos:

void UNowGFXSceneNpcCityBrain::TurnOnGuards ( )
{
	static UFunction* pFnTurnOnGuards = NULL;

	if ( ! pFnTurnOnGuards )
		pFnTurnOnGuards = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcCityBrain.TurnOnGuards" );

	UNowGFXSceneNpcCityBrain_execTurnOnGuards_Parms TurnOnGuards_Parms;

	this->ProcessEvent ( pFnTurnOnGuards, &TurnOnGuards_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcCityBrain.TurnOffGuards
// [0x00020000] 
// Parameters infos:

void UNowGFXSceneNpcCityBrain::TurnOffGuards ( )
{
	static UFunction* pFnTurnOffGuards = NULL;

	if ( ! pFnTurnOffGuards )
		pFnTurnOffGuards = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcCityBrain.TurnOffGuards" );

	UNowGFXSceneNpcCityBrain_execTurnOffGuards_Parms TurnOffGuards_Parms;

	this->ProcessEvent ( pFnTurnOffGuards, &TurnOffGuards_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcCityBrain.GenerateIntro
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneNpcCityBrain::GenerateIntro ( )
{
	static UFunction* pFnGenerateIntro = NULL;

	if ( ! pFnGenerateIntro )
		pFnGenerateIntro = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcCityBrain.GenerateIntro" );

	UNowGFXSceneNpcCityBrain_execGenerateIntro_Parms GenerateIntro_Parms;

	this->ProcessEvent ( pFnGenerateIntro, &GenerateIntro_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcCityBrain.loadContent
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneNpcCityBrain::loadContent ( )
{
	static UFunction* pFnloadContent = NULL;

	if ( ! pFnloadContent )
		pFnloadContent = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcCityBrain.loadContent" );

	UNowGFXSceneNpcCityBrain_execloadContent_Parms loadContent_Parms;

	this->ProcessEvent ( pFnloadContent, &loadContent_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcCityBrain.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneNpcCityBrain::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcCityBrain.Init" );

	UNowGFXSceneNpcCityBrain_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcCityBrain.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UNowGFXSceneNpcCityBrain::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcCityBrain.WidgetInitialized" );

	UNowGFXSceneNpcCityBrain_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneNpcStable.addResponse
// [0x00020002] 
// Parameters infos:
// int                            ChatID                         ( CPF_Parm )
// int                            TargetID                       ( CPF_Parm )
// struct FString                 uscript                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneNpcStable::addResponse ( int ChatID, int TargetID, struct FString uscript, struct FString msg )
{
	static UFunction* pFnaddResponse = NULL;

	if ( ! pFnaddResponse )
		pFnaddResponse = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcStable.addResponse" );

	UNowGFXSceneNpcStable_execaddResponse_Parms addResponse_Parms;
	addResponse_Parms.ChatID = ChatID;
	addResponse_Parms.TargetID = TargetID;
	memcpy ( &addResponse_Parms.uscript, &uscript, 0xC );
	memcpy ( &addResponse_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnaddResponse, &addResponse_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcStable.addChat
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneNpcStable::addChat ( int Id, struct FString msg )
{
	static UFunction* pFnaddChat = NULL;

	if ( ! pFnaddChat )
		pFnaddChat = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcStable.addChat" );

	UNowGFXSceneNpcStable_execaddChat_Parms addChat_Parms;
	addChat_Parms.Id = Id;
	memcpy ( &addChat_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnaddChat, &addChat_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcStable.showContent
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneNpcStable::showContent ( )
{
	static UFunction* pFnshowContent = NULL;

	if ( ! pFnshowContent )
		pFnshowContent = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcStable.showContent" );

	UNowGFXSceneNpcStable_execshowContent_Parms showContent_Parms;

	this->ProcessEvent ( pFnshowContent, &showContent_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcStable.setNPC
// [0x00020002] 
// Parameters infos:
// struct FString                 npcName                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 npcExit                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 npcBack                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneNpcStable::setNPC ( struct FString npcName, struct FString npcExit, struct FString npcBack )
{
	static UFunction* pFnsetNPC = NULL;

	if ( ! pFnsetNPC )
		pFnsetNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcStable.setNPC" );

	UNowGFXSceneNpcStable_execsetNPC_Parms setNPC_Parms;
	memcpy ( &setNPC_Parms.npcName, &npcName, 0xC );
	memcpy ( &setNPC_Parms.npcExit, &npcExit, 0xC );
	memcpy ( &setNPC_Parms.npcBack, &npcBack, 0xC );

	this->ProcessEvent ( pFnsetNPC, &setNPC_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcStable.GenerateIntro
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneNpcStable::GenerateIntro ( )
{
	static UFunction* pFnGenerateIntro = NULL;

	if ( ! pFnGenerateIntro )
		pFnGenerateIntro = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcStable.GenerateIntro" );

	UNowGFXSceneNpcStable_execGenerateIntro_Parms GenerateIntro_Parms;

	this->ProcessEvent ( pFnGenerateIntro, &GenerateIntro_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcStable.GiveSkill
// [0x00020000] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )

void UNowGFXSceneNpcStable::GiveSkill ( int iIndex )
{
	static UFunction* pFnGiveSkill = NULL;

	if ( ! pFnGiveSkill )
		pFnGiveSkill = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcStable.GiveSkill" );

	UNowGFXSceneNpcStable_execGiveSkill_Parms GiveSkill_Parms;
	GiveSkill_Parms.iIndex = iIndex;

	this->ProcessEvent ( pFnGiveSkill, &GiveSkill_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcStable.GeneratePetResponds
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneNpcStable::GeneratePetResponds ( )
{
	static UFunction* pFnGeneratePetResponds = NULL;

	if ( ! pFnGeneratePetResponds )
		pFnGeneratePetResponds = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcStable.GeneratePetResponds" );

	UNowGFXSceneNpcStable_execGeneratePetResponds_Parms GeneratePetResponds_Parms;

	this->ProcessEvent ( pFnGeneratePetResponds, &GeneratePetResponds_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcStable.loadContent
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneNpcStable::loadContent ( )
{
	static UFunction* pFnloadContent = NULL;

	if ( ! pFnloadContent )
		pFnloadContent = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcStable.loadContent" );

	UNowGFXSceneNpcStable_execloadContent_Parms loadContent_Parms;

	this->ProcessEvent ( pFnloadContent, &loadContent_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcStable.GFXClose
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneNpcStable::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcStable.GFXClose" );

	UNowGFXSceneNpcStable_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcStable.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneNpcStable::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcStable.Init" );

	UNowGFXSceneNpcStable_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcStable.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UNowGFXSceneNpcStable::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcStable.WidgetInitialized" );

	UNowGFXSceneNpcStable_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneNpcTutorial.addResponse
// [0x00020002] 
// Parameters infos:
// int                            ChatID                         ( CPF_Parm )
// int                            TargetID                       ( CPF_Parm )
// struct FString                 uscript                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneNpcTutorial::addResponse ( int ChatID, int TargetID, struct FString uscript, struct FString msg )
{
	static UFunction* pFnaddResponse = NULL;

	if ( ! pFnaddResponse )
		pFnaddResponse = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcTutorial.addResponse" );

	UNowGFXSceneNpcTutorial_execaddResponse_Parms addResponse_Parms;
	addResponse_Parms.ChatID = ChatID;
	addResponse_Parms.TargetID = TargetID;
	memcpy ( &addResponse_Parms.uscript, &uscript, 0xC );
	memcpy ( &addResponse_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnaddResponse, &addResponse_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcTutorial.addChat
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneNpcTutorial::addChat ( int Id, struct FString msg )
{
	static UFunction* pFnaddChat = NULL;

	if ( ! pFnaddChat )
		pFnaddChat = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcTutorial.addChat" );

	UNowGFXSceneNpcTutorial_execaddChat_Parms addChat_Parms;
	addChat_Parms.Id = Id;
	memcpy ( &addChat_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnaddChat, &addChat_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcTutorial.showContent
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneNpcTutorial::showContent ( )
{
	static UFunction* pFnshowContent = NULL;

	if ( ! pFnshowContent )
		pFnshowContent = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcTutorial.showContent" );

	UNowGFXSceneNpcTutorial_execshowContent_Parms showContent_Parms;

	this->ProcessEvent ( pFnshowContent, &showContent_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcTutorial.setNPC
// [0x00020002] 
// Parameters infos:
// struct FString                 npcName                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 npcExit                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 npcBack                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneNpcTutorial::setNPC ( struct FString npcName, struct FString npcExit, struct FString npcBack )
{
	static UFunction* pFnsetNPC = NULL;

	if ( ! pFnsetNPC )
		pFnsetNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcTutorial.setNPC" );

	UNowGFXSceneNpcTutorial_execsetNPC_Parms setNPC_Parms;
	memcpy ( &setNPC_Parms.npcName, &npcName, 0xC );
	memcpy ( &setNPC_Parms.npcExit, &npcExit, 0xC );
	memcpy ( &setNPC_Parms.npcBack, &npcBack, 0xC );

	this->ProcessEvent ( pFnsetNPC, &setNPC_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcTutorial.OpenTrade
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneNpcTutorial::OpenTrade ( )
{
	static UFunction* pFnOpenTrade = NULL;

	if ( ! pFnOpenTrade )
		pFnOpenTrade = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcTutorial.OpenTrade" );

	UNowGFXSceneNpcTutorial_execOpenTrade_Parms OpenTrade_Parms;

	this->ProcessEvent ( pFnOpenTrade, &OpenTrade_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcTutorial.loadContent
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneNpcTutorial::loadContent ( )
{
	static UFunction* pFnloadContent = NULL;

	if ( ! pFnloadContent )
		pFnloadContent = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcTutorial.loadContent" );

	UNowGFXSceneNpcTutorial_execloadContent_Parms loadContent_Parms;

	this->ProcessEvent ( pFnloadContent, &loadContent_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcTutorial.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneNpcTutorial::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcTutorial.Init" );

	UNowGFXSceneNpcTutorial_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneNpcTutorial.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UNowGFXSceneNpcTutorial::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneNpcTutorial.WidgetInitialized" );

	UNowGFXSceneNpcTutorial_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneOverseer.addSlot
// [0x00020002] 
// Parameters infos:
// int                            slotId                         ( CPF_Parm )
// int                            percentX                       ( CPF_Parm )
// int                            percentY                       ( CPF_Parm )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneOverseer::addSlot ( int slotId, int percentX, int percentY, struct FString Description )
{
	static UFunction* pFnaddSlot = NULL;

	if ( ! pFnaddSlot )
		pFnaddSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.addSlot" );

	UNowGFXSceneOverseer_execaddSlot_Parms addSlot_Parms;
	addSlot_Parms.slotId = slotId;
	addSlot_Parms.percentX = percentX;
	addSlot_Parms.percentY = percentY;
	memcpy ( &addSlot_Parms.Description, &Description, 0xC );

	this->ProcessEvent ( pFnaddSlot, &addSlot_Parms, NULL );
};

// Function NowGame.NowGFXSceneOverseer.setBalances
// [0x00020002] 
// Parameters infos:
// int                            fundsCoin                      ( CPF_Parm )
// int                            fundsPP                        ( CPF_Parm )
// int                            totalUpkeepCoin                ( CPF_Parm )
// int                            totalUpkeepCP                  ( CPF_Parm )

void UNowGFXSceneOverseer::setBalances ( int fundsCoin, int fundsPP, int totalUpkeepCoin, int totalUpkeepCP )
{
	static UFunction* pFnsetBalances = NULL;

	if ( ! pFnsetBalances )
		pFnsetBalances = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.setBalances" );

	UNowGFXSceneOverseer_execsetBalances_Parms setBalances_Parms;
	setBalances_Parms.fundsCoin = fundsCoin;
	setBalances_Parms.fundsPP = fundsPP;
	setBalances_Parms.totalUpkeepCoin = totalUpkeepCoin;
	setBalances_Parms.totalUpkeepCP = totalUpkeepCP;

	this->ProcessEvent ( pFnsetBalances, &setBalances_Parms, NULL );
};

// Function NowGame.NowGFXSceneOverseer.addNPC
// [0x00020002] 
// Parameters infos:
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Requirements                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            CostCoin                       ( CPF_Parm )
// int                            CostPP                         ( CPF_Parm )
// int                            UpkeepCoin                     ( CPF_Parm )
// int                            UpkeepCP                       ( CPF_Parm )

void UNowGFXSceneOverseer::addNPC ( struct FString DisplayName, struct FString Description, struct FString Requirements, int CostCoin, int CostPP, int UpkeepCoin, int UpkeepCP )
{
	static UFunction* pFnaddNPC = NULL;

	if ( ! pFnaddNPC )
		pFnaddNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.addNPC" );

	UNowGFXSceneOverseer_execaddNPC_Parms addNPC_Parms;
	memcpy ( &addNPC_Parms.DisplayName, &DisplayName, 0xC );
	memcpy ( &addNPC_Parms.Description, &Description, 0xC );
	memcpy ( &addNPC_Parms.Requirements, &Requirements, 0xC );
	addNPC_Parms.CostCoin = CostCoin;
	addNPC_Parms.CostPP = CostPP;
	addNPC_Parms.UpkeepCoin = UpkeepCoin;
	addNPC_Parms.UpkeepCP = UpkeepCP;

	this->ProcessEvent ( pFnaddNPC, &addNPC_Parms, NULL );
};

// Function NowGame.NowGFXSceneOverseer.currentNPC
// [0x00020002] 
// Parameters infos:
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            Slot                           ( CPF_Parm )

void UNowGFXSceneOverseer::currentNPC ( struct FString DisplayName, int Slot )
{
	static UFunction* pFncurrentNPC = NULL;

	if ( ! pFncurrentNPC )
		pFncurrentNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.currentNPC" );

	UNowGFXSceneOverseer_execcurrentNPC_Parms currentNPC_Parms;
	memcpy ( &currentNPC_Parms.DisplayName, &DisplayName, 0xC );
	currentNPC_Parms.Slot = Slot;

	this->ProcessEvent ( pFncurrentNPC, &currentNPC_Parms, NULL );
};

// Function NowGame.NowGFXSceneOverseer.DismissNPC
// [0x00020000] 
// Parameters infos:
// int                            newSlot                        ( CPF_Parm )

void UNowGFXSceneOverseer::DismissNPC ( int newSlot )
{
	static UFunction* pFnDismissNPC = NULL;

	if ( ! pFnDismissNPC )
		pFnDismissNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.DismissNPC" );

	UNowGFXSceneOverseer_execDismissNPC_Parms DismissNPC_Parms;
	DismissNPC_Parms.newSlot = newSlot;

	this->ProcessEvent ( pFnDismissNPC, &DismissNPC_Parms, NULL );
};

// Function NowGame.NowGFXSceneOverseer.SetSlot
// [0x00020000] 
// Parameters infos:
// int                            newSlot                        ( CPF_Parm )
// int                            oldSlot                        ( CPF_Parm )

void UNowGFXSceneOverseer::SetSlot ( int newSlot, int oldSlot )
{
	static UFunction* pFnSetSlot = NULL;

	if ( ! pFnSetSlot )
		pFnSetSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.SetSlot" );

	UNowGFXSceneOverseer_execSetSlot_Parms SetSlot_Parms;
	SetSlot_Parms.newSlot = newSlot;
	SetSlot_Parms.oldSlot = oldSlot;

	this->ProcessEvent ( pFnSetSlot, &SetSlot_Parms, NULL );
};

// Function NowGame.NowGFXSceneOverseer.FindNpcIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXSceneOverseer::FindNpcIndex ( struct FString DisplayName )
{
	static UFunction* pFnFindNpcIndex = NULL;

	if ( ! pFnFindNpcIndex )
		pFnFindNpcIndex = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.FindNpcIndex" );

	UNowGFXSceneOverseer_execFindNpcIndex_Parms FindNpcIndex_Parms;
	memcpy ( &FindNpcIndex_Parms.DisplayName, &DisplayName, 0xC );

	this->ProcessEvent ( pFnFindNpcIndex, &FindNpcIndex_Parms, NULL );

	return FindNpcIndex_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneOverseer.HireNPC
// [0x00020000] 
// Parameters infos:
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Slot                           ( CPF_Parm )

void UNowGFXSceneOverseer::HireNPC ( struct FString Title, int Slot )
{
	static UFunction* pFnHireNPC = NULL;

	if ( ! pFnHireNPC )
		pFnHireNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.HireNPC" );

	UNowGFXSceneOverseer_execHireNPC_Parms HireNPC_Parms;
	memcpy ( &HireNPC_Parms.Title, &Title, 0xC );
	HireNPC_Parms.Slot = Slot;

	this->ProcessEvent ( pFnHireNPC, &HireNPC_Parms, NULL );
};

// Function NowGame.NowGFXSceneOverseer.AddNPCToArray
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Requirements                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            CostCoin                       ( CPF_Parm )
// int                            CostPP                         ( CPF_Parm )
// int                            UpkeepCoin                     ( CPF_Parm )
// int                            UpkeepCP                       ( CPF_Parm )

void UNowGFXSceneOverseer::eventAddNPCToArray ( struct FString DisplayName, struct FString Description, struct FString Requirements, int CostCoin, int CostPP, int UpkeepCoin, int UpkeepCP )
{
	static UFunction* pFnAddNPCToArray = NULL;

	if ( ! pFnAddNPCToArray )
		pFnAddNPCToArray = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.AddNPCToArray" );

	UNowGFXSceneOverseer_eventAddNPCToArray_Parms AddNPCToArray_Parms;
	memcpy ( &AddNPCToArray_Parms.DisplayName, &DisplayName, 0xC );
	memcpy ( &AddNPCToArray_Parms.Description, &Description, 0xC );
	memcpy ( &AddNPCToArray_Parms.Requirements, &Requirements, 0xC );
	AddNPCToArray_Parms.CostCoin = CostCoin;
	AddNPCToArray_Parms.CostPP = CostPP;
	AddNPCToArray_Parms.UpkeepCoin = UpkeepCoin;
	AddNPCToArray_Parms.UpkeepCP = UpkeepCP;

	this->ProcessEvent ( pFnAddNPCToArray, &AddNPCToArray_Parms, NULL );
};

// Function NowGame.NowGFXSceneOverseer.GetCurrentNpcs
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneOverseer::GetCurrentNpcs ( )
{
	static UFunction* pFnGetCurrentNpcs = NULL;

	if ( ! pFnGetCurrentNpcs )
		pFnGetCurrentNpcs = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.GetCurrentNpcs" );

	UNowGFXSceneOverseer_execGetCurrentNpcs_Parms GetCurrentNpcs_Parms;

	this->ProcessEvent ( pFnGetCurrentNpcs, &GetCurrentNpcs_Parms, NULL );
};

// Function NowGame.NowGFXSceneOverseer.InitSlots
// [0x00020000] 
// Parameters infos:

void UNowGFXSceneOverseer::InitSlots ( )
{
	static UFunction* pFnInitSlots = NULL;

	if ( ! pFnInitSlots )
		pFnInitSlots = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.InitSlots" );

	UNowGFXSceneOverseer_execInitSlots_Parms InitSlots_Parms;

	this->ProcessEvent ( pFnInitSlots, &InitSlots_Parms, NULL );
};

// Function NowGame.NowGFXSceneOverseer.GetAKeep
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerKeep* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerKeep* UNowGFXSceneOverseer::GetAKeep ( )
{
	static UFunction* pFnGetAKeep = NULL;

	if ( ! pFnGetAKeep )
		pFnGetAKeep = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.GetAKeep" );

	UNowGFXSceneOverseer_execGetAKeep_Parms GetAKeep_Parms;

	this->ProcessEvent ( pFnGetAKeep, &GetAKeep_Parms, NULL );

	return GetAKeep_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneOverseer.InitKeepBalance
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneOverseer::InitKeepBalance ( )
{
	static UFunction* pFnInitKeepBalance = NULL;

	if ( ! pFnInitKeepBalance )
		pFnInitKeepBalance = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.InitKeepBalance" );

	UNowGFXSceneOverseer_execInitKeepBalance_Parms InitKeepBalance_Parms;

	this->ProcessEvent ( pFnInitKeepBalance, &InitKeepBalance_Parms, NULL );
};

// Function NowGame.NowGFXSceneOverseer.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneOverseer::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.Init" );

	UNowGFXSceneOverseer_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneOverseer.GFXClose
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneOverseer::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneOverseer.GFXClose" );

	UNowGFXSceneOverseer_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.CreateTask
// [0x00020002] 
// Parameters infos:
// struct FString                 ItemId                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            itemQuantity                   ( CPF_Parm )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            listingDays                    ( CPF_Parm )
// int                            coinReward                     ( CPF_Parm )
// int                            coinExpense                    ( CPF_Parm )
// int                            coinDeposit                    ( CPF_Parm )

void UNowGFXSceneTasks::CreateTask ( struct FString ItemId, int itemQuantity, struct FString Category, struct FString Destination, int listingDays, int coinReward, int coinExpense, int coinDeposit )
{
	static UFunction* pFnCreateTask = NULL;

	if ( ! pFnCreateTask )
		pFnCreateTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.CreateTask" );

	UNowGFXSceneTasks_execCreateTask_Parms CreateTask_Parms;
	memcpy ( &CreateTask_Parms.ItemId, &ItemId, 0xC );
	CreateTask_Parms.itemQuantity = itemQuantity;
	memcpy ( &CreateTask_Parms.Category, &Category, 0xC );
	memcpy ( &CreateTask_Parms.Destination, &Destination, 0xC );
	CreateTask_Parms.listingDays = listingDays;
	CreateTask_Parms.coinReward = coinReward;
	CreateTask_Parms.coinExpense = coinExpense;
	CreateTask_Parms.coinDeposit = coinDeposit;

	this->ProcessEvent ( pFnCreateTask, &CreateTask_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.removeTask
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )

void UNowGFXSceneTasks::removeTask ( int Id )
{
	static UFunction* pFnremoveTask = NULL;

	if ( ! pFnremoveTask )
		pFnremoveTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.removeTask" );

	UNowGFXSceneTasks_execremoveTask_Parms removeTask_Parms;
	removeTask_Parms.Id = Id;

	this->ProcessEvent ( pFnremoveTask, &removeTask_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.AcceptTask
// [0x00020002] 
// Parameters infos:
// int                            TaskId                         ( CPF_Parm )

void UNowGFXSceneTasks::AcceptTask ( int TaskId )
{
	static UFunction* pFnAcceptTask = NULL;

	if ( ! pFnAcceptTask )
		pFnAcceptTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.AcceptTask" );

	UNowGFXSceneTasks_execAcceptTask_Parms AcceptTask_Parms;
	AcceptTask_Parms.TaskId = TaskId;

	this->ProcessEvent ( pFnAcceptTask, &AcceptTask_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.setListingFee
// [0x00020002] 
// Parameters infos:
// int                            coinsPerDay                    ( CPF_Parm )

void UNowGFXSceneTasks::setListingFee ( int coinsPerDay )
{
	static UFunction* pFnsetListingFee = NULL;

	if ( ! pFnsetListingFee )
		pFnsetListingFee = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.setListingFee" );

	UNowGFXSceneTasks_execsetListingFee_Parms setListingFee_Parms;
	setListingFee_Parms.coinsPerDay = coinsPerDay;

	this->ProcessEvent ( pFnsetListingFee, &setListingFee_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.addTask
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// struct FString                 Item                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Recipient                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            reward                         ( CPF_Parm )
// int                            deposit                        ( CPF_Parm )

void UNowGFXSceneTasks::eventaddTask ( int Id, struct FString Item, int Quantity, struct FString Category, struct FString Recipient, struct FString Destination, int reward, int deposit )
{
	static UFunction* pFnaddTask = NULL;

	if ( ! pFnaddTask )
		pFnaddTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.addTask" );

	UNowGFXSceneTasks_eventaddTask_Parms addTask_Parms;
	addTask_Parms.Id = Id;
	memcpy ( &addTask_Parms.Item, &Item, 0xC );
	addTask_Parms.Quantity = Quantity;
	memcpy ( &addTask_Parms.Category, &Category, 0xC );
	memcpy ( &addTask_Parms.Recipient, &Recipient, 0xC );
	memcpy ( &addTask_Parms.Destination, &Destination, 0xC );
	addTask_Parms.reward = reward;
	addTask_Parms.deposit = deposit;

	this->ProcessEvent ( pFnaddTask, &addTask_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.addItemOption
// [0x00020002] 
// Parameters infos:
// struct FString                 ItemId                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ItemName                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            MaxQuantity                    ( CPF_Parm )

void UNowGFXSceneTasks::addItemOption ( struct FString ItemId, struct FString ItemName, int MaxQuantity )
{
	static UFunction* pFnaddItemOption = NULL;

	if ( ! pFnaddItemOption )
		pFnaddItemOption = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.addItemOption" );

	UNowGFXSceneTasks_execaddItemOption_Parms addItemOption_Parms;
	memcpy ( &addItemOption_Parms.ItemId, &ItemId, 0xC );
	memcpy ( &addItemOption_Parms.ItemName, &ItemName, 0xC );
	addItemOption_Parms.MaxQuantity = MaxQuantity;

	this->ProcessEvent ( pFnaddItemOption, &addItemOption_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.addDestination
// [0x00020002] 
// Parameters infos:
// struct FString                 Destination                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneTasks::addDestination ( struct FString Destination )
{
	static UFunction* pFnaddDestination = NULL;

	if ( ! pFnaddDestination )
		pFnaddDestination = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.addDestination" );

	UNowGFXSceneTasks_execaddDestination_Parms addDestination_Parms;
	memcpy ( &addDestination_Parms.Destination, &Destination, 0xC );

	this->ProcessEvent ( pFnaddDestination, &addDestination_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.setPlayerCoins
// [0x00020002] 
// Parameters infos:
// int                            coins                          ( CPF_Parm )

void UNowGFXSceneTasks::setPlayerCoins ( int coins )
{
	static UFunction* pFnsetPlayerCoins = NULL;

	if ( ! pFnsetPlayerCoins )
		pFnsetPlayerCoins = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.setPlayerCoins" );

	UNowGFXSceneTasks_execsetPlayerCoins_Parms setPlayerCoins_Parms;
	setPlayerCoins_Parms.coins = coins;

	this->ProcessEvent ( pFnsetPlayerCoins, &setPlayerCoins_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.setItems
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneTasks::setItems ( )
{
	static UFunction* pFnsetItems = NULL;

	if ( ! pFnsetItems )
		pFnsetItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.setItems" );

	UNowGFXSceneTasks_execsetItems_Parms setItems_Parms;

	this->ProcessEvent ( pFnsetItems, &setItems_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.setDestionations
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneTasks::setDestionations ( )
{
	static UFunction* pFnsetDestionations = NULL;

	if ( ! pFnsetDestionations )
		pFnsetDestionations = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.setDestionations" );

	UNowGFXSceneTasks_execsetDestionations_Parms setDestionations_Parms;

	this->ProcessEvent ( pFnsetDestionations, &setDestionations_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.setTradeItems
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneTasks::setTradeItems ( )
{
	static UFunction* pFnsetTradeItems = NULL;

	if ( ! pFnsetTradeItems )
		pFnsetTradeItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.setTradeItems" );

	UNowGFXSceneTasks_execsetTradeItems_Parms setTradeItems_Parms;

	this->ProcessEvent ( pFnsetTradeItems, &setTradeItems_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.getLocation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

struct FString UNowGFXSceneTasks::eventgetLocation ( int Index )
{
	static UFunction* pFngetLocation = NULL;

	if ( ! pFngetLocation )
		pFngetLocation = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.getLocation" );

	UNowGFXSceneTasks_eventgetLocation_Parms getLocation_Parms;
	getLocation_Parms.Index = Index;

	this->ProcessEvent ( pFngetLocation, &getLocation_Parms, NULL );

	return getLocation_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneTasks.setLocations
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneTasks::setLocations ( )
{
	static UFunction* pFnsetLocations = NULL;

	if ( ! pFnsetLocations )
		pFnsetLocations = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.setLocations" );

	UNowGFXSceneTasks_execsetLocations_Parms setLocations_Parms;

	this->ProcessEvent ( pFnsetLocations, &setLocations_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks._removeTask
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 _guid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneTasks::event_removeTask ( struct FString _guid )
{
	static UFunction* pFn_removeTask = NULL;

	if ( ! pFn_removeTask )
		pFn_removeTask = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks._removeTask" );

	UNowGFXSceneTasks_event_removeTask_Parms _removeTask_Parms;
	memcpy ( &_removeTask_Parms._guid, &_guid, 0xC );

	this->ProcessEvent ( pFn_removeTask, &_removeTask_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.addTaskIdentifer
// [0x00C20802] ( FUNC_Event )
// Parameters infos:
// struct FString                 _guid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm | CPF_OutParm )

void UNowGFXSceneTasks::eventaddTaskIdentifer ( struct FString _guid, int* Index )
{
	static UFunction* pFnaddTaskIdentifer = NULL;

	if ( ! pFnaddTaskIdentifer )
		pFnaddTaskIdentifer = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.addTaskIdentifer" );

	UNowGFXSceneTasks_eventaddTaskIdentifer_Parms addTaskIdentifer_Parms;
	memcpy ( &addTaskIdentifer_Parms._guid, &_guid, 0xC );

	this->ProcessEvent ( pFnaddTaskIdentifer, &addTaskIdentifer_Parms, NULL );

	if ( Index )
		*Index = addTaskIdentifer_Parms.Index;
};

// Function NowGame.NowGFXSceneTasks.getTaskGuidFromIndex
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

struct FString UNowGFXSceneTasks::eventgetTaskGuidFromIndex ( int Index )
{
	static UFunction* pFngetTaskGuidFromIndex = NULL;

	if ( ! pFngetTaskGuidFromIndex )
		pFngetTaskGuidFromIndex = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.getTaskGuidFromIndex" );

	UNowGFXSceneTasks_eventgetTaskGuidFromIndex_Parms getTaskGuidFromIndex_Parms;
	getTaskGuidFromIndex_Parms.Index = Index;

	this->ProcessEvent ( pFngetTaskGuidFromIndex, &getTaskGuidFromIndex_Parms, NULL );

	return getTaskGuidFromIndex_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneTasks.getTaskIndexFromGuid
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 _guid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXSceneTasks::eventgetTaskIndexFromGuid ( struct FString _guid )
{
	static UFunction* pFngetTaskIndexFromGuid = NULL;

	if ( ! pFngetTaskIndexFromGuid )
		pFngetTaskIndexFromGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.getTaskIndexFromGuid" );

	UNowGFXSceneTasks_eventgetTaskIndexFromGuid_Parms getTaskIndexFromGuid_Parms;
	memcpy ( &getTaskIndexFromGuid_Parms._guid, &_guid, 0xC );

	this->ProcessEvent ( pFngetTaskIndexFromGuid, &getTaskIndexFromGuid_Parms, NULL );

	return getTaskIndexFromGuid_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneTasks.GFXClose
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneTasks::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.GFXClose" );

	UNowGFXSceneTasks_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneTasks::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.Init" );

	UNowGFXSceneTasks_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXSceneTasks.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UNowGFXSceneTasks::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTasks.WidgetInitialized" );

	UNowGFXSceneTasks_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneTreasurer.StoreItem
// [0x00020000] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneTreasurer::StoreItem ( struct FString sGuid )
{
	static UFunction* pFnStoreItem = NULL;

	if ( ! pFnStoreItem )
		pFnStoreItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTreasurer.StoreItem" );

	UNowGFXSceneTreasurer_execStoreItem_Parms StoreItem_Parms;
	memcpy ( &StoreItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnStoreItem, &StoreItem_Parms, NULL );
};

// Function NowGame.NowGFXSceneTreasurer.TradeItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )

void UNowGFXSceneTreasurer::TradeItem ( struct FString sGuid, int Quantity )
{
	static UFunction* pFnTradeItem = NULL;

	if ( ! pFnTradeItem )
		pFnTradeItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTreasurer.TradeItem" );

	UNowGFXSceneTreasurer_execTradeItem_Parms TradeItem_Parms;
	memcpy ( &TradeItem_Parms.sGuid, &sGuid, 0xC );
	TradeItem_Parms.Quantity = Quantity;

	this->ProcessEvent ( pFnTradeItem, &TradeItem_Parms, NULL );
};

// Function NowGame.NowGFXSceneTreasurer.setQuantity
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Quantity                       ( CPF_Parm )

void UNowGFXSceneTreasurer::setQuantity ( struct FString sGuid, int Quantity )
{
	static UFunction* pFnsetQuantity = NULL;

	if ( ! pFnsetQuantity )
		pFnsetQuantity = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTreasurer.setQuantity" );

	UNowGFXSceneTreasurer_execsetQuantity_Parms setQuantity_Parms;
	memcpy ( &setQuantity_Parms.sGuid, &sGuid, 0xC );
	setQuantity_Parms.Quantity = Quantity;

	this->ProcessEvent ( pFnsetQuantity, &setQuantity_Parms, NULL );
};

// Function NowGame.NowGFXSceneTreasurer.RemoveItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneTreasurer::RemoveItem ( struct FString sGuid )
{
	static UFunction* pFnRemoveItem = NULL;

	if ( ! pFnRemoveItem )
		pFnRemoveItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTreasurer.RemoveItem" );

	UNowGFXSceneTreasurer_execRemoveItem_Parms RemoveItem_Parms;
	memcpy ( &RemoveItem_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnRemoveItem, &RemoveItem_Parms, NULL );
};

// Function NowGame.NowGFXSceneTreasurer.AddItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            Status                         ( CPF_Parm )
// int                            Quantity                       ( CPF_Parm )
// int                            cp                             ( CPF_Parm )
// float                          PP                             ( CPF_Parm )
// int                            stackSize                      ( CPF_Parm )

void UNowGFXSceneTreasurer::AddItem ( struct FString sGuid, struct FString Title, struct FString Description, int Status, int Quantity, int cp, float PP, int stackSize )
{
	static UFunction* pFnAddItem = NULL;

	if ( ! pFnAddItem )
		pFnAddItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTreasurer.AddItem" );

	UNowGFXSceneTreasurer_execAddItem_Parms AddItem_Parms;
	memcpy ( &AddItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &AddItem_Parms.Title, &Title, 0xC );
	memcpy ( &AddItem_Parms.Description, &Description, 0xC );
	AddItem_Parms.Status = Status;
	AddItem_Parms.Quantity = Quantity;
	AddItem_Parms.cp = cp;
	AddItem_Parms.PP = PP;
	AddItem_Parms.stackSize = stackSize;

	this->ProcessEvent ( pFnAddItem, &AddItem_Parms, NULL );
};

// Function NowGame.NowGFXSceneTreasurer.UpdateItem
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            RemQuantity                    ( CPF_Parm )

void UNowGFXSceneTreasurer::UpdateItem ( struct FString sGuid, int RemQuantity )
{
	static UFunction* pFnUpdateItem = NULL;

	if ( ! pFnUpdateItem )
		pFnUpdateItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTreasurer.UpdateItem" );

	UNowGFXSceneTreasurer_execUpdateItem_Parms UpdateItem_Parms;
	memcpy ( &UpdateItem_Parms.sGuid, &sGuid, 0xC );
	UpdateItem_Parms.RemQuantity = RemQuantity;

	this->ProcessEvent ( pFnUpdateItem, &UpdateItem_Parms, NULL );
};

// Function NowGame.NowGFXSceneTreasurer.GetAKeep
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerKeep* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerKeep* UNowGFXSceneTreasurer::GetAKeep ( )
{
	static UFunction* pFnGetAKeep = NULL;

	if ( ! pFnGetAKeep )
		pFnGetAKeep = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTreasurer.GetAKeep" );

	UNowGFXSceneTreasurer_execGetAKeep_Parms GetAKeep_Parms;

	this->ProcessEvent ( pFnGetAKeep, &GetAKeep_Parms, NULL );

	return GetAKeep_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneTreasurer.GetMinQuantity
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

int UNowGFXSceneTreasurer::GetMinQuantity ( struct FString sGuid )
{
	static UFunction* pFnGetMinQuantity = NULL;

	if ( ! pFnGetMinQuantity )
		pFnGetMinQuantity = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTreasurer.GetMinQuantity" );

	UNowGFXSceneTreasurer_execGetMinQuantity_Parms GetMinQuantity_Parms;
	memcpy ( &GetMinQuantity_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGetMinQuantity, &GetMinQuantity_Parms, NULL );

	return GetMinQuantity_Parms.ReturnValue;
};

// Function NowGame.NowGFXSceneTreasurer.FinishAddingItems
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowGFXSceneTreasurer::eventFinishAddingItems ( )
{
	static UFunction* pFnFinishAddingItems = NULL;

	if ( ! pFnFinishAddingItems )
		pFnFinishAddingItems = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTreasurer.FinishAddingItems" );

	UNowGFXSceneTreasurer_eventFinishAddingItems_Parms FinishAddingItems_Parms;

	this->ProcessEvent ( pFnFinishAddingItems, &FinishAddingItems_Parms, NULL );
};

// Function NowGame.NowGFXSceneTreasurer.DoAddItem
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Desc                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            Status                         ( CPF_Parm )
// int                            Quantity                       ( CPF_Parm )
// int                            cp                             ( CPF_Parm )
// float                          PP                             ( CPF_Parm )
// int                            stackSize                      ( CPF_Parm )

void UNowGFXSceneTreasurer::eventDoAddItem ( struct FString sGuid, struct FString Title, struct FString Desc, int Status, int Quantity, int cp, float PP, int stackSize )
{
	static UFunction* pFnDoAddItem = NULL;

	if ( ! pFnDoAddItem )
		pFnDoAddItem = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTreasurer.DoAddItem" );

	UNowGFXSceneTreasurer_eventDoAddItem_Parms DoAddItem_Parms;
	memcpy ( &DoAddItem_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &DoAddItem_Parms.Title, &Title, 0xC );
	memcpy ( &DoAddItem_Parms.Desc, &Desc, 0xC );
	DoAddItem_Parms.Status = Status;
	DoAddItem_Parms.Quantity = Quantity;
	DoAddItem_Parms.cp = cp;
	DoAddItem_Parms.PP = PP;
	DoAddItem_Parms.stackSize = stackSize;

	this->ProcessEvent ( pFnDoAddItem, &DoAddItem_Parms, NULL );
};

// Function NowGame.NowGFXSceneTreasurer.GFXClose
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneTreasurer::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTreasurer.GFXClose" );

	UNowGFXSceneTreasurer_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXSceneTreasurer.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneTreasurer::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneTreasurer.Init" );

	UNowGFXSceneTreasurer_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowHUD.IsNumber
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Number                         ( CPF_Parm | CPF_NeedCtorLink )

bool ANowHUD::IsNumber ( struct FString Number )
{
	static UFunction* pFnIsNumber = NULL;

	if ( ! pFnIsNumber )
		pFnIsNumber = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.IsNumber" );

	ANowHUD_execIsNumber_Parms IsNumber_Parms;
	memcpy ( &IsNumber_Parms.Number, &Number, 0xC );

	this->ProcessEvent ( pFnIsNumber, &IsNumber_Parms, NULL );

	return IsNumber_Parms.ReturnValue;
};

// Function NowGame.NowHUD.SetShowScores
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )

void ANowHUD::SetShowScores ( unsigned long bNewValue )
{
	static UFunction* pFnSetShowScores = NULL;

	if ( ! pFnSetShowScores )
		pFnSetShowScores = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.SetShowScores" );

	ANowHUD_execSetShowScores_Parms SetShowScores_Parms;
	SetShowScores_Parms.bNewValue = bNewValue;

	this->ProcessEvent ( pFnSetShowScores, &SetShowScores_Parms, NULL );
};

// Function NowGame.NowHUD.ShowScores
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ShowScores ( )
{
	static UFunction* pFnShowScores = NULL;

	if ( ! pFnShowScores )
		pFnShowScores = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ShowScores" );

	ANowHUD_execShowScores_Parms ShowScores_Parms;

	this->ProcessEvent ( pFnShowScores, &ShowScores_Parms, NULL );
};

// Function NowGame.NowHUD.ShowHUD
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ShowHUD ( )
{
	static UFunction* pFnShowHUD = NULL;

	if ( ! pFnShowHUD )
		pFnShowHUD = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ShowHUD" );

	ANowHUD_execShowHUD_Parms ShowHUD_Parms;

	this->ProcessEvent ( pFnShowHUD, &ShowHUD_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleHUD
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleHUD ( )
{
	static UFunction* pFnToggleHUD = NULL;

	if ( ! pFnToggleHUD )
		pFnToggleHUD = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleHUD" );

	ANowHUD_execToggleHUD_Parms ToggleHUD_Parms;

	this->ProcessEvent ( pFnToggleHUD, &ToggleHUD_Parms, NULL );
};

// Function NowGame.NowHUD.PostPos
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 inVec                          ( CPF_Parm )

void ANowHUD::PostPos ( struct FVector inVec )
{
	static UFunction* pFnPostPos = NULL;

	if ( ! pFnPostPos )
		pFnPostPos = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.PostPos" );

	ANowHUD_execPostPos_Parms PostPos_Parms;
	memcpy ( &PostPos_Parms.inVec, &inVec, 0xC );

	pFnPostPos->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostPos, &PostPos_Parms, NULL );

	pFnPostPos->FunctionFlags |= 0x400;
};

// Function NowGame.NowHUD.GetStringSizeForLabel
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector2D               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUILabel*                inLabel                        ( CPF_Parm )

struct FVector2D ANowHUD::GetStringSizeForLabel ( class UUILabel* inLabel )
{
	static UFunction* pFnGetStringSizeForLabel = NULL;

	if ( ! pFnGetStringSizeForLabel )
		pFnGetStringSizeForLabel = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.GetStringSizeForLabel" );

	ANowHUD_execGetStringSizeForLabel_Parms GetStringSizeForLabel_Parms;
	GetStringSizeForLabel_Parms.inLabel = inLabel;

	pFnGetStringSizeForLabel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStringSizeForLabel, &GetStringSizeForLabel_Parms, NULL );

	pFnGetStringSizeForLabel->FunctionFlags |= 0x400;

	return GetStringSizeForLabel_Parms.ReturnValue;
};

// Function NowGame.NowHUD.OpenUI
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAtlasAvatarComponent*   InNpcComp                      ( CPF_Parm | CPF_EditInline )
// TArray< struct FString >       InKeys                         ( CPF_Parm | CPF_NeedCtorLink )
// TArray< struct FString >       InValues                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowHUD::eventOpenUI ( class UAtlasAvatarComponent* InNpcComp, TArray< struct FString > InKeys, TArray< struct FString > InValues )
{
	static UFunction* pFnOpenUI = NULL;

	if ( ! pFnOpenUI )
		pFnOpenUI = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.OpenUI" );

	ANowHUD_eventOpenUI_Parms OpenUI_Parms;
	OpenUI_Parms.InNpcComp = InNpcComp;
	memcpy ( &OpenUI_Parms.InKeys, &InKeys, 0xC );
	memcpy ( &OpenUI_Parms.InValues, &InValues, 0xC );

	this->ProcessEvent ( pFnOpenUI, &OpenUI_Parms, NULL );
};

// Function NowGame.NowHUD.GetScene
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// int                            SceneIndex                     ( CPF_Parm )
// class UUIScene*                Scene                          ( CPF_Parm | CPF_OutParm )

void ANowHUD::eventGetScene ( int SceneIndex, class UUIScene** Scene )
{
	static UFunction* pFnGetScene = NULL;

	if ( ! pFnGetScene )
		pFnGetScene = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.GetScene" );

	ANowHUD_eventGetScene_Parms GetScene_Parms;
	GetScene_Parms.SceneIndex = SceneIndex;

	this->ProcessEvent ( pFnGetScene, &GetScene_Parms, NULL );

	if ( Scene )
		*Scene = GetScene_Parms.Scene;
};

// Function NowGame.NowHUD.CloseUI
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAtlasAvatarComponent*   InNpcComp                      ( CPF_Parm | CPF_EditInline )
// struct FString                 InKey                          ( CPF_Parm | CPF_NeedCtorLink )

void ANowHUD::eventCloseUI ( class UAtlasAvatarComponent* InNpcComp, struct FString InKey )
{
	static UFunction* pFnCloseUI = NULL;

	if ( ! pFnCloseUI )
		pFnCloseUI = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.CloseUI" );

	ANowHUD_eventCloseUI_Parms CloseUI_Parms;
	CloseUI_Parms.InNpcComp = InNpcComp;
	memcpy ( &CloseUI_Parms.InKey, &InKey, 0xC );

	this->ProcessEvent ( pFnCloseUI, &CloseUI_Parms, NULL );
};

// Function NowGame.NowHUD.InitOptionsDS
// [0x00020002] 
// Parameters infos:

void ANowHUD::InitOptionsDS ( )
{
	static UFunction* pFnInitOptionsDS = NULL;

	if ( ! pFnInitOptionsDS )
		pFnInitOptionsDS = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.InitOptionsDS" );

	ANowHUD_execInitOptionsDS_Parms InitOptionsDS_Parms;

	this->ProcessEvent ( pFnInitOptionsDS, &InitOptionsDS_Parms, NULL );
};

// Function NowGame.NowHUD.SetupHitIndicationFX
// [0x00020002] 
// Parameters infos:
// struct FRotator                Direction                      ( CPF_Parm )

void ANowHUD::SetupHitIndicationFX ( struct FRotator Direction )
{
	static UFunction* pFnSetupHitIndicationFX = NULL;

	if ( ! pFnSetupHitIndicationFX )
		pFnSetupHitIndicationFX = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.SetupHitIndicationFX" );

	ANowHUD_execSetupHitIndicationFX_Parms SetupHitIndicationFX_Parms;
	memcpy ( &SetupHitIndicationFX_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnSetupHitIndicationFX, &SetupHitIndicationFX_Parms, NULL );
};

// Function NowGame.NowHUD.DrawHitIndicationFX
// [0x00020002] 
// Parameters infos:

void ANowHUD::DrawHitIndicationFX ( )
{
	static UFunction* pFnDrawHitIndicationFX = NULL;

	if ( ! pFnDrawHitIndicationFX )
		pFnDrawHitIndicationFX = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.DrawHitIndicationFX" );

	ANowHUD_execDrawHitIndicationFX_Parms DrawHitIndicationFX_Parms;

	this->ProcessEvent ( pFnDrawHitIndicationFX, &DrawHitIndicationFX_Parms, NULL );
};

// Function NowGame.NowHUD.DrawHelmetOcclusion
// [0x00820002] 
// Parameters infos:
// class ANowPawn*                PlayerPawn                     ( CPF_Parm )

void ANowHUD::DrawHelmetOcclusion ( class ANowPawn* PlayerPawn )
{
	static UFunction* pFnDrawHelmetOcclusion = NULL;

	if ( ! pFnDrawHelmetOcclusion )
		pFnDrawHelmetOcclusion = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.DrawHelmetOcclusion" );

	ANowHUD_execDrawHelmetOcclusion_Parms DrawHelmetOcclusion_Parms;
	DrawHelmetOcclusion_Parms.PlayerPawn = PlayerPawn;

	this->ProcessEvent ( pFnDrawHelmetOcclusion, &DrawHelmetOcclusion_Parms, NULL );
};

// Function NowGame.NowHUD.CloseGuildMenu
// [0x00020002] 
// Parameters infos:

void ANowHUD::CloseGuildMenu ( )
{
	static UFunction* pFnCloseGuildMenu = NULL;

	if ( ! pFnCloseGuildMenu )
		pFnCloseGuildMenu = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.CloseGuildMenu" );

	ANowHUD_execCloseGuildMenu_Parms CloseGuildMenu_Parms;

	this->ProcessEvent ( pFnCloseGuildMenu, &CloseGuildMenu_Parms, NULL );
};

// Function NowGame.NowHUD.CloseLoadingScreen
// [0x00020002] 
// Parameters infos:

void ANowHUD::CloseLoadingScreen ( )
{
	static UFunction* pFnCloseLoadingScreen = NULL;

	if ( ! pFnCloseLoadingScreen )
		pFnCloseLoadingScreen = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.CloseLoadingScreen" );

	ANowHUD_execCloseLoadingScreen_Parms CloseLoadingScreen_Parms;

	this->ProcessEvent ( pFnCloseLoadingScreen, &CloseLoadingScreen_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleUserGuide
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleUserGuide ( )
{
	static UFunction* pFnToggleUserGuide = NULL;

	if ( ! pFnToggleUserGuide )
		pFnToggleUserGuide = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleUserGuide" );

	ANowHUD_execToggleUserGuide_Parms ToggleUserGuide_Parms;

	this->ProcessEvent ( pFnToggleUserGuide, &ToggleUserGuide_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleCharacterSheet
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ANowHUD::ToggleCharacterSheet ( unsigned long bForce )
{
	static UFunction* pFnToggleCharacterSheet = NULL;

	if ( ! pFnToggleCharacterSheet )
		pFnToggleCharacterSheet = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleCharacterSheet" );

	ANowHUD_execToggleCharacterSheet_Parms ToggleCharacterSheet_Parms;
	ToggleCharacterSheet_Parms.bForce = bForce;

	this->ProcessEvent ( pFnToggleCharacterSheet, &ToggleCharacterSheet_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleInventory
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleInventory ( )
{
	static UFunction* pFnToggleInventory = NULL;

	if ( ! pFnToggleInventory )
		pFnToggleInventory = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleInventory" );

	ANowHUD_execToggleInventory_Parms ToggleInventory_Parms;

	this->ProcessEvent ( pFnToggleInventory, &ToggleInventory_Parms, NULL );
};

// Function NowGame.NowHUD.OpenGuildInviteDialogue
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 SourceAvatarName               ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowHUD::eventOpenGuildInviteDialogue ( struct FString SourceAvatarName, struct FString guildName )
{
	static UFunction* pFnOpenGuildInviteDialogue = NULL;

	if ( ! pFnOpenGuildInviteDialogue )
		pFnOpenGuildInviteDialogue = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.OpenGuildInviteDialogue" );

	ANowHUD_eventOpenGuildInviteDialogue_Parms OpenGuildInviteDialogue_Parms;
	memcpy ( &OpenGuildInviteDialogue_Parms.SourceAvatarName, &SourceAvatarName, 0xC );
	memcpy ( &OpenGuildInviteDialogue_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnOpenGuildInviteDialogue, &OpenGuildInviteDialogue_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleGuildCode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleGuildCode ( )
{
	static UFunction* pFnToggleGuildCode = NULL;

	if ( ! pFnToggleGuildCode )
		pFnToggleGuildCode = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleGuildCode" );

	ANowHUD_eventToggleGuildCode_Parms ToggleGuildCode_Parms;

	this->ProcessEvent ( pFnToggleGuildCode, &ToggleGuildCode_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleGuildMenu
// [0x00020002] 
// Parameters infos:

void ANowHUD::ToggleGuildMenu ( )
{
	static UFunction* pFnToggleGuildMenu = NULL;

	if ( ! pFnToggleGuildMenu )
		pFnToggleGuildMenu = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleGuildMenu" );

	ANowHUD_execToggleGuildMenu_Parms ToggleGuildMenu_Parms;

	this->ProcessEvent ( pFnToggleGuildMenu, &ToggleGuildMenu_Parms, NULL );
};

// Function NowGame.NowHUD.StartChatCommand
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::StartChatCommand ( )
{
	static UFunction* pFnStartChatCommand = NULL;

	if ( ! pFnStartChatCommand )
		pFnStartChatCommand = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.StartChatCommand" );

	ANowHUD_execStartChatCommand_Parms StartChatCommand_Parms;

	this->ProcessEvent ( pFnStartChatCommand, &StartChatCommand_Parms, NULL );
};

// Function NowGame.NowHUD.StartChat
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::StartChat ( )
{
	static UFunction* pFnStartChat = NULL;

	if ( ! pFnStartChat )
		pFnStartChat = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.StartChat" );

	ANowHUD_execStartChat_Parms StartChat_Parms;

	this->ProcessEvent ( pFnStartChat, &StartChat_Parms, NULL );
};

// Function NowGame.NowHUD.CloseStuff
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowHUD::eventCloseStuff ( )
{
	static UFunction* pFnCloseStuff = NULL;

	if ( ! pFnCloseStuff )
		pFnCloseStuff = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.CloseStuff" );

	ANowHUD_eventCloseStuff_Parms CloseStuff_Parms;

	this->ProcessEvent ( pFnCloseStuff, &CloseStuff_Parms, NULL );

	return CloseStuff_Parms.ReturnValue;
};

// Function NowGame.NowHUD.ToggleMainMenu
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleMainMenu ( )
{
	static UFunction* pFnToggleMainMenu = NULL;

	if ( ! pFnToggleMainMenu )
		pFnToggleMainMenu = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleMainMenu" );

	ANowHUD_execToggleMainMenu_Parms ToggleMainMenu_Parms;

	this->ProcessEvent ( pFnToggleMainMenu, &ToggleMainMenu_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleSpells
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleSpells ( )
{
	static UFunction* pFnToggleSpells = NULL;

	if ( ! pFnToggleSpells )
		pFnToggleSpells = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleSpells" );

	ANowHUD_execToggleSpells_Parms ToggleSpells_Parms;

	this->ProcessEvent ( pFnToggleSpells, &ToggleSpells_Parms, NULL );
};

// Function NowGame.NowHUD.TogglePetInfo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::TogglePetInfo ( )
{
	static UFunction* pFnTogglePetInfo = NULL;

	if ( ! pFnTogglePetInfo )
		pFnTogglePetInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.TogglePetInfo" );

	ANowHUD_execTogglePetInfo_Parms TogglePetInfo_Parms;

	this->ProcessEvent ( pFnTogglePetInfo, &TogglePetInfo_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleSkills
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleSkills ( )
{
	static UFunction* pFnToggleSkills = NULL;

	if ( ! pFnToggleSkills )
		pFnToggleSkills = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleSkills" );

	ANowHUD_execToggleSkills_Parms ToggleSkills_Parms;

	this->ProcessEvent ( pFnToggleSkills, &ToggleSkills_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleGuildDimplomacy
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleGuildDimplomacy ( )
{
	static UFunction* pFnToggleGuildDimplomacy = NULL;

	if ( ! pFnToggleGuildDimplomacy )
		pFnToggleGuildDimplomacy = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleGuildDimplomacy" );

	ANowHUD_eventToggleGuildDimplomacy_Parms ToggleGuildDimplomacy_Parms;

	this->ProcessEvent ( pFnToggleGuildDimplomacy, &ToggleGuildDimplomacy_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleHouseTrade
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleHouseTrade ( )
{
	static UFunction* pFnToggleHouseTrade = NULL;

	if ( ! pFnToggleHouseTrade )
		pFnToggleHouseTrade = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleHouseTrade" );

	ANowHUD_eventToggleHouseTrade_Parms ToggleHouseTrade_Parms;

	this->ProcessEvent ( pFnToggleHouseTrade, &ToggleHouseTrade_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleHouseSignUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleHouseSignUI ( )
{
	static UFunction* pFnToggleHouseSignUI = NULL;

	if ( ! pFnToggleHouseSignUI )
		pFnToggleHouseSignUI = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleHouseSignUI" );

	ANowHUD_eventToggleHouseSignUI_Parms ToggleHouseSignUI_Parms;

	this->ProcessEvent ( pFnToggleHouseSignUI, &ToggleHouseSignUI_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleHackListScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleHackListScene ( )
{
	static UFunction* pFnToggleHackListScene = NULL;

	if ( ! pFnToggleHackListScene )
		pFnToggleHackListScene = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleHackListScene" );

	ANowHUD_eventToggleHackListScene_Parms ToggleHackListScene_Parms;

	this->ProcessEvent ( pFnToggleHackListScene, &ToggleHackListScene_Parms, NULL );
};

// Function NowGame.NowHUD.TogglePetitionListScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventTogglePetitionListScene ( )
{
	static UFunction* pFnTogglePetitionListScene = NULL;

	if ( ! pFnTogglePetitionListScene )
		pFnTogglePetitionListScene = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.TogglePetitionListScene" );

	ANowHUD_eventTogglePetitionListScene_Parms TogglePetitionListScene_Parms;

	this->ProcessEvent ( pFnTogglePetitionListScene, &TogglePetitionListScene_Parms, NULL );
};

// Function NowGame.NowHUD.TogglePetitionScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventTogglePetitionScene ( )
{
	static UFunction* pFnTogglePetitionScene = NULL;

	if ( ! pFnTogglePetitionScene )
		pFnTogglePetitionScene = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.TogglePetitionScene" );

	ANowHUD_eventTogglePetitionScene_Parms TogglePetitionScene_Parms;

	this->ProcessEvent ( pFnTogglePetitionScene, &TogglePetitionScene_Parms, NULL );
};

// Function NowGame.NowHUD.TogglePetBankUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventTogglePetBankUI ( )
{
	static UFunction* pFnTogglePetBankUI = NULL;

	if ( ! pFnTogglePetBankUI )
		pFnTogglePetBankUI = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.TogglePetBankUI" );

	ANowHUD_eventTogglePetBankUI_Parms TogglePetBankUI_Parms;

	this->ProcessEvent ( pFnTogglePetBankUI, &TogglePetBankUI_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleGMHouseMainMenuUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleGMHouseMainMenuUI ( )
{
	static UFunction* pFnToggleGMHouseMainMenuUI = NULL;

	if ( ! pFnToggleGMHouseMainMenuUI )
		pFnToggleGMHouseMainMenuUI = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleGMHouseMainMenuUI" );

	ANowHUD_eventToggleGMHouseMainMenuUI_Parms ToggleGMHouseMainMenuUI_Parms;

	this->ProcessEvent ( pFnToggleGMHouseMainMenuUI, &ToggleGMHouseMainMenuUI_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleeCreateNewGuildUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleeCreateNewGuildUI ( )
{
	static UFunction* pFnToggleeCreateNewGuildUI = NULL;

	if ( ! pFnToggleeCreateNewGuildUI )
		pFnToggleeCreateNewGuildUI = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleeCreateNewGuildUI" );

	ANowHUD_eventToggleeCreateNewGuildUI_Parms ToggleeCreateNewGuildUI_Parms;

	this->ProcessEvent ( pFnToggleeCreateNewGuildUI, &ToggleeCreateNewGuildUI_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleHouseWorkbench
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 workBenchInfo                  ( CPF_Parm | CPF_NeedCtorLink )
// class ANowAtlasAvatarPlayerHouse* myHouse                        ( CPF_Parm )

void ANowHUD::eventToggleHouseWorkbench ( struct FString workBenchInfo, class ANowAtlasAvatarPlayerHouse* myHouse )
{
	static UFunction* pFnToggleHouseWorkbench = NULL;

	if ( ! pFnToggleHouseWorkbench )
		pFnToggleHouseWorkbench = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleHouseWorkbench" );

	ANowHUD_eventToggleHouseWorkbench_Parms ToggleHouseWorkbench_Parms;
	memcpy ( &ToggleHouseWorkbench_Parms.workBenchInfo, &workBenchInfo, 0xC );
	ToggleHouseWorkbench_Parms.myHouse = myHouse;

	this->ProcessEvent ( pFnToggleHouseWorkbench, &ToggleHouseWorkbench_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleGuildDiplomacyUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleGuildDiplomacyUI ( )
{
	static UFunction* pFnToggleGuildDiplomacyUI = NULL;

	if ( ! pFnToggleGuildDiplomacyUI )
		pFnToggleGuildDiplomacyUI = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleGuildDiplomacyUI" );

	ANowHUD_eventToggleGuildDiplomacyUI_Parms ToggleGuildDiplomacyUI_Parms;

	this->ProcessEvent ( pFnToggleGuildDiplomacyUI, &ToggleGuildDiplomacyUI_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleGuildMembersUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleGuildMembersUI ( )
{
	static UFunction* pFnToggleGuildMembersUI = NULL;

	if ( ! pFnToggleGuildMembersUI )
		pFnToggleGuildMembersUI = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleGuildMembersUI" );

	ANowHUD_eventToggleGuildMembersUI_Parms ToggleGuildMembersUI_Parms;

	this->ProcessEvent ( pFnToggleGuildMembersUI, &ToggleGuildMembersUI_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleGuildLeaveGuildUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleGuildLeaveGuildUI ( )
{
	static UFunction* pFnToggleGuildLeaveGuildUI = NULL;

	if ( ! pFnToggleGuildLeaveGuildUI )
		pFnToggleGuildLeaveGuildUI = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleGuildLeaveGuildUI" );

	ANowHUD_eventToggleGuildLeaveGuildUI_Parms ToggleGuildLeaveGuildUI_Parms;

	this->ProcessEvent ( pFnToggleGuildLeaveGuildUI, &ToggleGuildLeaveGuildUI_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleHouseOptionsUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleHouseOptionsUI ( )
{
	static UFunction* pFnToggleHouseOptionsUI = NULL;

	if ( ! pFnToggleHouseOptionsUI )
		pFnToggleHouseOptionsUI = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleHouseOptionsUI" );

	ANowHUD_eventToggleHouseOptionsUI_Parms ToggleHouseOptionsUI_Parms;

	this->ProcessEvent ( pFnToggleHouseOptionsUI, &ToggleHouseOptionsUI_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleGuildStoneUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleGuildStoneUI ( )
{
	static UFunction* pFnToggleGuildStoneUI = NULL;

	if ( ! pFnToggleGuildStoneUI )
		pFnToggleGuildStoneUI = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleGuildStoneUI" );

	ANowHUD_eventToggleGuildStoneUI_Parms ToggleGuildStoneUI_Parms;

	this->ProcessEvent ( pFnToggleGuildStoneUI, &ToggleGuildStoneUI_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleStable
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleStable ( )
{
	static UFunction* pFnToggleStable = NULL;

	if ( ! pFnToggleStable )
		pFnToggleStable = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleStable" );

	ANowHUD_eventToggleStable_Parms ToggleStable_Parms;

	this->ProcessEvent ( pFnToggleStable, &ToggleStable_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleHouseUpKeep
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleHouseUpKeep ( )
{
	static UFunction* pFnToggleHouseUpKeep = NULL;

	if ( ! pFnToggleHouseUpKeep )
		pFnToggleHouseUpKeep = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleHouseUpKeep" );

	ANowHUD_eventToggleHouseUpKeep_Parms ToggleHouseUpKeep_Parms;

	this->ProcessEvent ( pFnToggleHouseUpKeep, &ToggleHouseUpKeep_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleKeepTaxes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleKeepTaxes ( )
{
	static UFunction* pFnToggleKeepTaxes = NULL;

	if ( ! pFnToggleKeepTaxes )
		pFnToggleKeepTaxes = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleKeepTaxes" );

	ANowHUD_eventToggleKeepTaxes_Parms ToggleKeepTaxes_Parms;

	this->ProcessEvent ( pFnToggleKeepTaxes, &ToggleKeepTaxes_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleBuySiegeWeapon
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleBuySiegeWeapon ( )
{
	static UFunction* pFnToggleBuySiegeWeapon = NULL;

	if ( ! pFnToggleBuySiegeWeapon )
		pFnToggleBuySiegeWeapon = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleBuySiegeWeapon" );

	ANowHUD_eventToggleBuySiegeWeapon_Parms ToggleBuySiegeWeapon_Parms;

	this->ProcessEvent ( pFnToggleBuySiegeWeapon, &ToggleBuySiegeWeapon_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleKeepTerritoryControl
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleKeepTerritoryControl ( )
{
	static UFunction* pFnToggleKeepTerritoryControl = NULL;

	if ( ! pFnToggleKeepTerritoryControl )
		pFnToggleKeepTerritoryControl = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleKeepTerritoryControl" );

	ANowHUD_eventToggleKeepTerritoryControl_Parms ToggleKeepTerritoryControl_Parms;

	this->ProcessEvent ( pFnToggleKeepTerritoryControl, &ToggleKeepTerritoryControl_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleTerritoryNPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleTerritoryNPC ( )
{
	static UFunction* pFnToggleTerritoryNPC = NULL;

	if ( ! pFnToggleTerritoryNPC )
		pFnToggleTerritoryNPC = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleTerritoryNPC" );

	ANowHUD_eventToggleTerritoryNPC_Parms ToggleTerritoryNPC_Parms;

	this->ProcessEvent ( pFnToggleTerritoryNPC, &ToggleTerritoryNPC_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleHouseTerritoryControl
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleHouseTerritoryControl ( )
{
	static UFunction* pFnToggleHouseTerritoryControl = NULL;

	if ( ! pFnToggleHouseTerritoryControl )
		pFnToggleHouseTerritoryControl = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleHouseTerritoryControl" );

	ANowHUD_eventToggleHouseTerritoryControl_Parms ToggleHouseTerritoryControl_Parms;

	this->ProcessEvent ( pFnToggleHouseTerritoryControl, &ToggleHouseTerritoryControl_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleArmorCrafting
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Type                           ( CPF_Parm )

void ANowHUD::eventToggleArmorCrafting ( int Type )
{
	static UFunction* pFnToggleArmorCrafting = NULL;

	if ( ! pFnToggleArmorCrafting )
		pFnToggleArmorCrafting = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleArmorCrafting" );

	ANowHUD_eventToggleArmorCrafting_Parms ToggleArmorCrafting_Parms;
	ToggleArmorCrafting_Parms.Type = Type;

	this->ProcessEvent ( pFnToggleArmorCrafting, &ToggleArmorCrafting_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleTradeTutorial
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleTradeTutorial ( )
{
	static UFunction* pFnToggleTradeTutorial = NULL;

	if ( ! pFnToggleTradeTutorial )
		pFnToggleTradeTutorial = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleTradeTutorial" );

	ANowHUD_eventToggleTradeTutorial_Parms ToggleTradeTutorial_Parms;

	this->ProcessEvent ( pFnToggleTradeTutorial, &ToggleTradeTutorial_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleShopSell
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleShopSell ( )
{
	static UFunction* pFnToggleShopSell = NULL;

	if ( ! pFnToggleShopSell )
		pFnToggleShopSell = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleShopSell" );

	ANowHUD_eventToggleShopSell_Parms ToggleShopSell_Parms;

	this->ProcessEvent ( pFnToggleShopSell, &ToggleShopSell_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleShopBrowse
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleShopBrowse ( )
{
	static UFunction* pFnToggleShopBrowse = NULL;

	if ( ! pFnToggleShopBrowse )
		pFnToggleShopBrowse = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleShopBrowse" );

	ANowHUD_eventToggleShopBrowse_Parms ToggleShopBrowse_Parms;

	this->ProcessEvent ( pFnToggleShopBrowse, &ToggleShopBrowse_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleShopOptions
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleShopOptions ( )
{
	static UFunction* pFnToggleShopOptions = NULL;

	if ( ! pFnToggleShopOptions )
		pFnToggleShopOptions = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleShopOptions" );

	ANowHUD_eventToggleShopOptions_Parms ToggleShopOptions_Parms;

	this->ProcessEvent ( pFnToggleShopOptions, &ToggleShopOptions_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleShopMain
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleShopMain ( )
{
	static UFunction* pFnToggleShopMain = NULL;

	if ( ! pFnToggleShopMain )
		pFnToggleShopMain = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleShopMain" );

	ANowHUD_eventToggleShopMain_Parms ToggleShopMain_Parms;

	this->ProcessEvent ( pFnToggleShopMain, &ToggleShopMain_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleHouse
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventToggleHouse ( )
{
	static UFunction* pFnToggleHouse = NULL;

	if ( ! pFnToggleHouse )
		pFnToggleHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleHouse" );

	ANowHUD_eventToggleHouse_Parms ToggleHouse_Parms;

	this->ProcessEvent ( pFnToggleHouse, &ToggleHouse_Parms, NULL );
};

// Function NowGame.NowHUD.DrawCrosshair
// [0x00020000] 
// Parameters infos:

void ANowHUD::DrawCrosshair ( )
{
	static UFunction* pFnDrawCrosshair = NULL;

	if ( ! pFnDrawCrosshair )
		pFnDrawCrosshair = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.DrawCrosshair" );

	ANowHUD_execDrawCrosshair_Parms DrawCrosshair_Parms;

	this->ProcessEvent ( pFnDrawCrosshair, &DrawCrosshair_Parms, NULL );
};

// Function NowGame.NowHUD.DrawGMCrosshair
// [0x00020002] 
// Parameters infos:

void ANowHUD::DrawGMCrosshair ( )
{
	static UFunction* pFnDrawGMCrosshair = NULL;

	if ( ! pFnDrawGMCrosshair )
		pFnDrawGMCrosshair = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.DrawGMCrosshair" );

	ANowHUD_execDrawGMCrosshair_Parms DrawGMCrosshair_Parms;

	this->ProcessEvent ( pFnDrawGMCrosshair, &DrawGMCrosshair_Parms, NULL );
};

// Function NowGame.NowHUD.GameMessage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sMessage                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowHUD::eventGameMessage ( struct FString sMessage )
{
	static UFunction* pFnGameMessage = NULL;

	if ( ! pFnGameMessage )
		pFnGameMessage = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.GameMessage" );

	ANowHUD_eventGameMessage_Parms GameMessage_Parms;
	memcpy ( &GameMessage_Parms.sMessage, &sMessage, 0xC );

	this->ProcessEvent ( pFnGameMessage, &GameMessage_Parms, NULL );
};

// Function NowGame.NowHUD.DrawHUD
// [0x00020002] 
// Parameters infos:

void ANowHUD::DrawHUD ( )
{
	static UFunction* pFnDrawHUD = NULL;

	if ( ! pFnDrawHUD )
		pFnDrawHUD = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.DrawHUD" );

	ANowHUD_execDrawHUD_Parms DrawHUD_Parms;

	this->ProcessEvent ( pFnDrawHUD, &DrawHUD_Parms, NULL );
};

// Function NowGame.NowHUD.GetGFXHud
// [0x00020002] 
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* ANowHUD::GetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.GetGFXHud" );

	ANowHUD_execGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.NowHUD.ResetQuickTarget
// [0x00020002] 
// Parameters infos:

void ANowHUD::ResetQuickTarget ( )
{
	static UFunction* pFnResetQuickTarget = NULL;

	if ( ! pFnResetQuickTarget )
		pFnResetQuickTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ResetQuickTarget" );

	ANowHUD_execResetQuickTarget_Parms ResetQuickTarget_Parms;

	this->ProcessEvent ( pFnResetQuickTarget, &ResetQuickTarget_Parms, NULL );
};

// Function NowGame.NowHUD.SetQuickTarget
// [0x00024002] 
// Parameters infos:
// class AActor*                  NewTarget                      ( CPF_OptionalParm | CPF_Parm )

void ANowHUD::SetQuickTarget ( class AActor* NewTarget )
{
	static UFunction* pFnSetQuickTarget = NULL;

	if ( ! pFnSetQuickTarget )
		pFnSetQuickTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.SetQuickTarget" );

	ANowHUD_execSetQuickTarget_Parms SetQuickTarget_Parms;
	SetQuickTarget_Parms.NewTarget = NewTarget;

	this->ProcessEvent ( pFnSetQuickTarget, &SetQuickTarget_Parms, NULL );
};

// Function NowGame.NowHUD.DrawTargetCrosshair
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void ANowHUD::DrawTargetCrosshair ( class UCanvas* C )
{
	static UFunction* pFnDrawTargetCrosshair = NULL;

	if ( ! pFnDrawTargetCrosshair )
		pFnDrawTargetCrosshair = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.DrawTargetCrosshair" );

	ANowHUD_execDrawTargetCrosshair_Parms DrawTargetCrosshair_Parms;
	DrawTargetCrosshair_Parms.C = C;

	this->ProcessEvent ( pFnDrawTargetCrosshair, &DrawTargetCrosshair_Parms, NULL );
};

// Function NowGame.NowHUD.DrawQuickTargetInfo
// [0x00024000] 
// Parameters infos:
// struct FString                 avatarName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            Flag                           ( CPF_Parm )
// struct FString                 GuildAcr                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void ANowHUD::DrawQuickTargetInfo ( struct FString avatarName, int Flag, struct FString GuildAcr )
{
	static UFunction* pFnDrawQuickTargetInfo = NULL;

	if ( ! pFnDrawQuickTargetInfo )
		pFnDrawQuickTargetInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.DrawQuickTargetInfo" );

	ANowHUD_execDrawQuickTargetInfo_Parms DrawQuickTargetInfo_Parms;
	memcpy ( &DrawQuickTargetInfo_Parms.avatarName, &avatarName, 0xC );
	DrawQuickTargetInfo_Parms.Flag = Flag;
	memcpy ( &DrawQuickTargetInfo_Parms.GuildAcr, &GuildAcr, 0xC );

	this->ProcessEvent ( pFnDrawQuickTargetInfo, &DrawQuickTargetInfo_Parms, NULL );
};

// Function NowGame.NowHUD.ShowTargetCrosshair
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void ANowHUD::ShowTargetCrosshair ( unsigned long bOn )
{
	static UFunction* pFnShowTargetCrosshair = NULL;

	if ( ! pFnShowTargetCrosshair )
		pFnShowTargetCrosshair = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ShowTargetCrosshair" );

	ANowHUD_execShowTargetCrosshair_Parms ShowTargetCrosshair_Parms;
	ShowTargetCrosshair_Parms.bOn = bOn;

	this->ProcessEvent ( pFnShowTargetCrosshair, &ShowTargetCrosshair_Parms, NULL );
};

// Function NowGame.NowHUD.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventPostRender ( )
{
	static UFunction* pFnPostRender = NULL;

	if ( ! pFnPostRender )
		pFnPostRender = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.PostRender" );

	ANowHUD_eventPostRender_Parms PostRender_Parms;

	this->ProcessEvent ( pFnPostRender, &PostRender_Parms, NULL );
};

// Function NowGame.NowHUD.DrawOnScreenMaterialFX
// [0x00020002] 
// Parameters infos:

void ANowHUD::DrawOnScreenMaterialFX ( )
{
	static UFunction* pFnDrawOnScreenMaterialFX = NULL;

	if ( ! pFnDrawOnScreenMaterialFX )
		pFnDrawOnScreenMaterialFX = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.DrawOnScreenMaterialFX" );

	ANowHUD_execDrawOnScreenMaterialFX_Parms DrawOnScreenMaterialFX_Parms;

	this->ProcessEvent ( pFnDrawOnScreenMaterialFX, &DrawOnScreenMaterialFX_Parms, NULL );
};

// Function NowGame.NowHUD.PlayOnScreenMaterialFX
// [0x00024002] 
// Parameters infos:
// class UMaterialInstance*       WhatFX                         ( CPF_Parm )
// float                          Timer                          ( CPF_Parm )
// float                          BlendOutTime                   ( CPF_Parm )
// unsigned long                  bIsDominantMatFX               ( CPF_OptionalParm | CPF_Parm )

void ANowHUD::PlayOnScreenMaterialFX ( class UMaterialInstance* WhatFX, float Timer, float BlendOutTime, unsigned long bIsDominantMatFX )
{
	static UFunction* pFnPlayOnScreenMaterialFX = NULL;

	if ( ! pFnPlayOnScreenMaterialFX )
		pFnPlayOnScreenMaterialFX = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.PlayOnScreenMaterialFX" );

	ANowHUD_execPlayOnScreenMaterialFX_Parms PlayOnScreenMaterialFX_Parms;
	PlayOnScreenMaterialFX_Parms.WhatFX = WhatFX;
	PlayOnScreenMaterialFX_Parms.Timer = Timer;
	PlayOnScreenMaterialFX_Parms.BlendOutTime = BlendOutTime;
	PlayOnScreenMaterialFX_Parms.bIsDominantMatFX = bIsDominantMatFX;

	this->ProcessEvent ( pFnPlayOnScreenMaterialFX, &PlayOnScreenMaterialFX_Parms, NULL );
};

// Function NowGame.NowHUD.StopOnScreenMaterialFX
// [0x00020002] 
// Parameters infos:

void ANowHUD::StopOnScreenMaterialFX ( )
{
	static UFunction* pFnStopOnScreenMaterialFX = NULL;

	if ( ! pFnStopOnScreenMaterialFX )
		pFnStopOnScreenMaterialFX = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.StopOnScreenMaterialFX" );

	ANowHUD_execStopOnScreenMaterialFX_Parms StopOnScreenMaterialFX_Parms;

	this->ProcessEvent ( pFnStopOnScreenMaterialFX, &StopOnScreenMaterialFX_Parms, NULL );
};

// Function NowGame.NowHUD.WasHitOff
// [0x00020002] 
// Parameters infos:

void ANowHUD::WasHitOff ( )
{
	static UFunction* pFnWasHitOff = NULL;

	if ( ! pFnWasHitOff )
		pFnWasHitOff = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.WasHitOff" );

	ANowHUD_execWasHitOff_Parms WasHitOff_Parms;

	this->ProcessEvent ( pFnWasHitOff, &WasHitOff_Parms, NULL );
};

// Function NowGame.NowHUD.WasHit
// [0x00820002] 
// Parameters infos:
// struct FVector                 FromDir                        ( CPF_Parm )

void ANowHUD::WasHit ( struct FVector FromDir )
{
	static UFunction* pFnWasHit = NULL;

	if ( ! pFnWasHit )
		pFnWasHit = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.WasHit" );

	ANowHUD_execWasHit_Parms WasHit_Parms;
	memcpy ( &WasHit_Parms.FromDir, &FromDir, 0xC );

	this->ProcessEvent ( pFnWasHit, &WasHit_Parms, NULL );
};

// Function NowGame.NowHUD.StartDelayTimer
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  Start                          ( CPF_Parm )
// struct FString                 Why                            ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// float                          Time                           ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bStun                          ( CPF_OptionalParm | CPF_Parm )

void ANowHUD::eventStartDelayTimer ( unsigned long Start, struct FString Why, float Time, unsigned long bStun )
{
	static UFunction* pFnStartDelayTimer = NULL;

	if ( ! pFnStartDelayTimer )
		pFnStartDelayTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.StartDelayTimer" );

	ANowHUD_eventStartDelayTimer_Parms StartDelayTimer_Parms;
	StartDelayTimer_Parms.Start = Start;
	memcpy ( &StartDelayTimer_Parms.Why, &Why, 0xC );
	StartDelayTimer_Parms.Time = Time;
	StartDelayTimer_Parms.bStun = bStun;

	this->ProcessEvent ( pFnStartDelayTimer, &StartDelayTimer_Parms, NULL );
};

// Function NowGame.NowHUD.LoadDefaultScenes
// [0x00020002] 
// Parameters infos:

void ANowHUD::LoadDefaultScenes ( )
{
	static UFunction* pFnLoadDefaultScenes = NULL;

	if ( ! pFnLoadDefaultScenes )
		pFnLoadDefaultScenes = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.LoadDefaultScenes" );

	ANowHUD_execLoadDefaultScenes_Parms LoadDefaultScenes_Parms;

	this->ProcessEvent ( pFnLoadDefaultScenes, &LoadDefaultScenes_Parms, NULL );
};

// Function NowGame.NowHUD.RecieveGameEvent
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            eEvent                         ( CPF_Parm )
// int                            pieceType                      ( CPF_Parm )
// int                            pieceID                        ( CPF_Parm )
// int                            XPos                           ( CPF_Parm )
// int                            YPos                           ( CPF_Parm )
// struct FString                 avatarName                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowHUD::eventRecieveGameEvent ( int eEvent, int pieceType, int pieceID, int XPos, int YPos, struct FString avatarName )
{
	static UFunction* pFnRecieveGameEvent = NULL;

	if ( ! pFnRecieveGameEvent )
		pFnRecieveGameEvent = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.RecieveGameEvent" );

	ANowHUD_eventRecieveGameEvent_Parms RecieveGameEvent_Parms;
	RecieveGameEvent_Parms.eEvent = eEvent;
	RecieveGameEvent_Parms.pieceType = pieceType;
	RecieveGameEvent_Parms.pieceID = pieceID;
	RecieveGameEvent_Parms.XPos = XPos;
	RecieveGameEvent_Parms.YPos = YPos;
	memcpy ( &RecieveGameEvent_Parms.avatarName, &avatarName, 0xC );

	this->ProcessEvent ( pFnRecieveGameEvent, &RecieveGameEvent_Parms, NULL );
};

// Function NowGame.NowHUD.rightClickUse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            bag                            ( CPF_Parm )
// int                            Slot                           ( CPF_Parm )

bool ANowHUD::eventrightClickUse ( int bag, int Slot )
{
	static UFunction* pFnrightClickUse = NULL;

	if ( ! pFnrightClickUse )
		pFnrightClickUse = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.rightClickUse" );

	ANowHUD_eventrightClickUse_Parms rightClickUse_Parms;
	rightClickUse_Parms.bag = bag;
	rightClickUse_Parms.Slot = Slot;

	this->ProcessEvent ( pFnrightClickUse, &rightClickUse_Parms, NULL );

	return rightClickUse_Parms.ReturnValue;
};

// Function NowGame.NowHUD.InitGfxScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            WhatScene                      ( CPF_Parm )

void ANowHUD::eventInitGfxScene ( int WhatScene )
{
	static UFunction* pFnInitGfxScene = NULL;

	if ( ! pFnInitGfxScene )
		pFnInitGfxScene = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.InitGfxScene" );

	ANowHUD_eventInitGfxScene_Parms InitGfxScene_Parms;
	InitGfxScene_Parms.WhatScene = WhatScene;

	this->ProcessEvent ( pFnInitGfxScene, &InitGfxScene_Parms, NULL );
};

// Function NowGame.NowHUD.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.PostBeginPlay" );

	ANowHUD_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowHUD.NoHud
// [0x00020002] 
// Parameters infos:

void ANowHUD::NoHud ( )
{
	static UFunction* pFnNoHud = NULL;

	if ( ! pFnNoHud )
		pFnNoHud = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.NoHud" );

	ANowHUD_execNoHud_Parms NoHud_Parms;

	this->ProcessEvent ( pFnNoHud, &NoHud_Parms, NULL );
};

// Function NowGame.NowHUD.DeleteErrorMessage
// [0x00020002] 
// Parameters infos:

void ANowHUD::DeleteErrorMessage ( )
{
	static UFunction* pFnDeleteErrorMessage = NULL;

	if ( ! pFnDeleteErrorMessage )
		pFnDeleteErrorMessage = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.DeleteErrorMessage" );

	ANowHUD_execDeleteErrorMessage_Parms DeleteErrorMessage_Parms;

	this->ProcessEvent ( pFnDeleteErrorMessage, &DeleteErrorMessage_Parms, NULL );
};

// Function NowGame.NowHUD.SetErrorMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 newMessage                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowHUD::SetErrorMessage ( struct FString newMessage )
{
	static UFunction* pFnSetErrorMessage = NULL;

	if ( ! pFnSetErrorMessage )
		pFnSetErrorMessage = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.SetErrorMessage" );

	ANowHUD_execSetErrorMessage_Parms SetErrorMessage_Parms;
	memcpy ( &SetErrorMessage_Parms.newMessage, &newMessage, 0xC );

	this->ProcessEvent ( pFnSetErrorMessage, &SetErrorMessage_Parms, NULL );
};

// Function NowGame.NowHUD.UpdateGuildDiplomacyGui
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowHUD::eventUpdateGuildDiplomacyGui ( )
{
	static UFunction* pFnUpdateGuildDiplomacyGui = NULL;

	if ( ! pFnUpdateGuildDiplomacyGui )
		pFnUpdateGuildDiplomacyGui = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.UpdateGuildDiplomacyGui" );

	ANowHUD_eventUpdateGuildDiplomacyGui_Parms UpdateGuildDiplomacyGui_Parms;

	this->ProcessEvent ( pFnUpdateGuildDiplomacyGui, &UpdateGuildDiplomacyGui_Parms, NULL );
};

// Function NowGame.NowHUD.CloseResurrectionScene
// [0x00020002] 
// Parameters infos:

void ANowHUD::CloseResurrectionScene ( )
{
	static UFunction* pFnCloseResurrectionScene = NULL;

	if ( ! pFnCloseResurrectionScene )
		pFnCloseResurrectionScene = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.CloseResurrectionScene" );

	ANowHUD_execCloseResurrectionScene_Parms CloseResurrectionScene_Parms;

	this->ProcessEvent ( pFnCloseResurrectionScene, &CloseResurrectionScene_Parms, NULL );
};

// Function NowGame.NowHUD.UpdateWeatherAwarenessSceneData
// [0x00020002] 
// Parameters infos:
// int                            windDir                        ( CPF_Parm )
// float                          windMagnitude                  ( CPF_Parm )
// int                            rainMagnitude                  ( CPF_Parm )
// struct FRotator                windRotation                   ( CPF_Parm )

void ANowHUD::UpdateWeatherAwarenessSceneData ( int windDir, float windMagnitude, int rainMagnitude, struct FRotator windRotation )
{
	static UFunction* pFnUpdateWeatherAwarenessSceneData = NULL;

	if ( ! pFnUpdateWeatherAwarenessSceneData )
		pFnUpdateWeatherAwarenessSceneData = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.UpdateWeatherAwarenessSceneData" );

	ANowHUD_execUpdateWeatherAwarenessSceneData_Parms UpdateWeatherAwarenessSceneData_Parms;
	UpdateWeatherAwarenessSceneData_Parms.windDir = windDir;
	UpdateWeatherAwarenessSceneData_Parms.windMagnitude = windMagnitude;
	UpdateWeatherAwarenessSceneData_Parms.rainMagnitude = rainMagnitude;
	memcpy ( &UpdateWeatherAwarenessSceneData_Parms.windRotation, &windRotation, 0xC );

	this->ProcessEvent ( pFnUpdateWeatherAwarenessSceneData, &UpdateWeatherAwarenessSceneData_Parms, NULL );
};

// Function NowGame.NowHUD.PlayerTurnedNotification
// [0x00020002] 
// Parameters infos:
// struct FRotator                ViewRotation                   ( CPF_Parm )

void ANowHUD::PlayerTurnedNotification ( struct FRotator ViewRotation )
{
	static UFunction* pFnPlayerTurnedNotification = NULL;

	if ( ! pFnPlayerTurnedNotification )
		pFnPlayerTurnedNotification = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.PlayerTurnedNotification" );

	ANowHUD_execPlayerTurnedNotification_Parms PlayerTurnedNotification_Parms;
	memcpy ( &PlayerTurnedNotification_Parms.ViewRotation, &ViewRotation, 0xC );

	this->ProcessEvent ( pFnPlayerTurnedNotification, &PlayerTurnedNotification_Parms, NULL );
};

// Function NowGame.NowHUD.openCurrentTasks
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::openCurrentTasks ( )
{
	static UFunction* pFnopenCurrentTasks = NULL;

	if ( ! pFnopenCurrentTasks )
		pFnopenCurrentTasks = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.openCurrentTasks" );

	ANowHUD_execopenCurrentTasks_Parms openCurrentTasks_Parms;

	this->ProcessEvent ( pFnopenCurrentTasks, &openCurrentTasks_Parms, NULL );
};

// Function NowGame.NowHUD.openFriendList
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::openFriendList ( )
{
	static UFunction* pFnopenFriendList = NULL;

	if ( ! pFnopenFriendList )
		pFnopenFriendList = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.openFriendList" );

	ANowHUD_execopenFriendList_Parms openFriendList_Parms;

	this->ProcessEvent ( pFnopenFriendList, &openFriendList_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleCompass
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleCompass ( )
{
	static UFunction* pFnToggleCompass = NULL;

	if ( ! pFnToggleCompass )
		pFnToggleCompass = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleCompass" );

	ANowHUD_execToggleCompass_Parms ToggleCompass_Parms;

	this->ProcessEvent ( pFnToggleCompass, &ToggleCompass_Parms, NULL );
};

// Function NowGame.NowHUD.ToggleTutorials
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowHUD::ToggleTutorials ( )
{
	static UFunction* pFnToggleTutorials = NULL;

	if ( ! pFnToggleTutorials )
		pFnToggleTutorials = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.ToggleTutorials" );

	ANowHUD_execToggleTutorials_Parms ToggleTutorials_Parms;

	this->ProcessEvent ( pFnToggleTutorials, &ToggleTutorials_Parms, NULL );
};

// Function NowGame.NowHUD.SetFullScreenColor
// [0x00020002] 
// Parameters infos:
// struct FColor                  NewColor                       ( CPF_Parm )

void ANowHUD::SetFullScreenColor ( struct FColor NewColor )
{
	static UFunction* pFnSetFullScreenColor = NULL;

	if ( ! pFnSetFullScreenColor )
		pFnSetFullScreenColor = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.SetFullScreenColor" );

	ANowHUD_execSetFullScreenColor_Parms SetFullScreenColor_Parms;
	memcpy ( &SetFullScreenColor_Parms.NewColor, &NewColor, 0x4 );

	this->ProcessEvent ( pFnSetFullScreenColor, &SetFullScreenColor_Parms, NULL );
};

// Function NowGame.NowHUD.DrawDebugCanvas
// [0x00020000] 
// Parameters infos:

void ANowHUD::DrawDebugCanvas ( )
{
	static UFunction* pFnDrawDebugCanvas = NULL;

	if ( ! pFnDrawDebugCanvas )
		pFnDrawDebugCanvas = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.DrawDebugCanvas" );

	ANowHUD_execDrawDebugCanvas_Parms DrawDebugCanvas_Parms;

	this->ProcessEvent ( pFnDrawDebugCanvas, &DrawDebugCanvas_Parms, NULL );
};

// Function NowGame.NowHUD.GetSpeedFromInt
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSpeed                         ( CPF_Parm )

int ANowHUD::GetSpeedFromInt ( int iSpeed )
{
	static UFunction* pFnGetSpeedFromInt = NULL;

	if ( ! pFnGetSpeedFromInt )
		pFnGetSpeedFromInt = UObject::FindObject< UFunction > ( "Function NowGame.NowHUD.GetSpeedFromInt" );

	ANowHUD_execGetSpeedFromInt_Parms GetSpeedFromInt_Parms;
	GetSpeedFromInt_Parms.iSpeed = iSpeed;

	this->ProcessEvent ( pFnGetSpeedFromInt, &GetSpeedFromInt_Parms, NULL );

	return GetSpeedFromInt_Parms.ReturnValue;
};

// Function NowGame.NowMountManager.SortDel
// [0x00920002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )
// class AActor*                  B                              ( CPF_Parm )

int UNowMountManager::SortDel ( class AActor* A, class AActor* B )
{
	static UFunction* pFnSortDel = NULL;

	if ( ! pFnSortDel )
		pFnSortDel = UObject::FindObject< UFunction > ( "Function NowGame.NowMountManager.SortDel" );

	UNowMountManager_execSortDel_Parms SortDel_Parms;
	SortDel_Parms.A = A;
	SortDel_Parms.B = B;

	this->ProcessEvent ( pFnSortDel, &SortDel_Parms, NULL );

	return SortDel_Parms.ReturnValue;
};

// Function NowGame.NowMountManager.TickDetail
// [0x00020002] 
// Parameters infos:

void UNowMountManager::TickDetail ( )
{
	static UFunction* pFnTickDetail = NULL;

	if ( ! pFnTickDetail )
		pFnTickDetail = UObject::FindObject< UFunction > ( "Function NowGame.NowMountManager.TickDetail" );

	UNowMountManager_execTickDetail_Parms TickDetail_Parms;

	this->ProcessEvent ( pFnTickDetail, &TickDetail_Parms, NULL );
};

// Function NowGame.NowMountManager.OneSecTick
// [0x00020002] 
// Parameters infos:

void UNowMountManager::OneSecTick ( )
{
	static UFunction* pFnOneSecTick = NULL;

	if ( ! pFnOneSecTick )
		pFnOneSecTick = UObject::FindObject< UFunction > ( "Function NowGame.NowMountManager.OneSecTick" );

	UNowMountManager_execOneSecTick_Parms OneSecTick_Parms;

	this->ProcessEvent ( pFnOneSecTick, &OneSecTick_Parms, NULL );
};

// Function NowGame.NowMountManager.TickManager
// [0x00020002] 
// Parameters infos:

void UNowMountManager::TickManager ( )
{
	static UFunction* pFnTickManager = NULL;

	if ( ! pFnTickManager )
		pFnTickManager = UObject::FindObject< UFunction > ( "Function NowGame.NowMountManager.TickManager" );

	UNowMountManager_execTickManager_Parms TickManager_Parms;

	this->ProcessEvent ( pFnTickManager, &TickManager_Parms, NULL );
};

// Function NowGame.NowMountManager.AddToManager
// [0x00024002] 
// Parameters infos:
// class ANowAtlasAvatarAiDynamic* NewMount                       ( CPF_Parm )
// unsigned long                  bForceGenerate                 ( CPF_OptionalParm | CPF_Parm )

void UNowMountManager::AddToManager ( class ANowAtlasAvatarAiDynamic* NewMount, unsigned long bForceGenerate )
{
	static UFunction* pFnAddToManager = NULL;

	if ( ! pFnAddToManager )
		pFnAddToManager = UObject::FindObject< UFunction > ( "Function NowGame.NowMountManager.AddToManager" );

	UNowMountManager_execAddToManager_Parms AddToManager_Parms;
	AddToManager_Parms.NewMount = NewMount;
	AddToManager_Parms.bForceGenerate = bForceGenerate;

	this->ProcessEvent ( pFnAddToManager, &AddToManager_Parms, NULL );
};

// Function NowGame.NowMountManager.SetDetailLevel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewLevel                       ( CPF_Parm )

void UNowMountManager::eventSetDetailLevel ( int NewLevel )
{
	static UFunction* pFnSetDetailLevel = NULL;

	if ( ! pFnSetDetailLevel )
		pFnSetDetailLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowMountManager.SetDetailLevel" );

	UNowMountManager_eventSetDetailLevel_Parms SetDetailLevel_Parms;
	SetDetailLevel_Parms.NewLevel = NewLevel;

	this->ProcessEvent ( pFnSetDetailLevel, &SetDetailLevel_Parms, NULL );
};

// Function NowGame.NowMountManager.UpdateDetailLevel
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAiDynamic* Mount                          ( CPF_Parm )
// int                            NewLevel                       ( CPF_Parm )

void UNowMountManager::UpdateDetailLevel ( class ANowAtlasAvatarAiDynamic* Mount, int NewLevel )
{
	static UFunction* pFnUpdateDetailLevel = NULL;

	if ( ! pFnUpdateDetailLevel )
		pFnUpdateDetailLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowMountManager.UpdateDetailLevel" );

	UNowMountManager_execUpdateDetailLevel_Parms UpdateDetailLevel_Parms;
	UpdateDetailLevel_Parms.Mount = Mount;
	UpdateDetailLevel_Parms.NewLevel = NewLevel;

	this->ProcessEvent ( pFnUpdateDetailLevel, &UpdateDetailLevel_Parms, NULL );
};

// Function NowGame.NowMountManager.InitManager
// [0x00020002] 
// Parameters infos:

void UNowMountManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = UObject::FindObject< UFunction > ( "Function NowGame.NowMountManager.InitManager" );

	UNowMountManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.NowMountManager.GetIniInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowMountManager::GetIniInfo ( )
{
	static UFunction* pFnGetIniInfo = NULL;

	if ( ! pFnGetIniInfo )
		pFnGetIniInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowMountManager.GetIniInfo" );

	UNowMountManager_execGetIniInfo_Parms GetIniInfo_Parms;

	pFnGetIniInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIniInfo, &GetIniInfo_Parms, NULL );

	pFnGetIniInfo->FunctionFlags |= 0x400;
};

// Function NowGame.NowMusicManager.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UNowMusicManager::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowMusicManager.Tick" );

	UNowMusicManager_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowMusicManager.PlayNextTrack
// [0x00020002] 
// Parameters infos:

void UNowMusicManager::PlayNextTrack ( )
{
	static UFunction* pFnPlayNextTrack = NULL;

	if ( ! pFnPlayNextTrack )
		pFnPlayNextTrack = UObject::FindObject< UFunction > ( "Function NowGame.NowMusicManager.PlayNextTrack" );

	UNowMusicManager_execPlayNextTrack_Parms PlayNextTrack_Parms;

	this->ProcessEvent ( pFnPlayNextTrack, &PlayNextTrack_Parms, NULL );
};

// Function NowGame.NowMusicManager.StopTrack
// [0x00020002] 
// Parameters infos:

void UNowMusicManager::StopTrack ( )
{
	static UFunction* pFnStopTrack = NULL;

	if ( ! pFnStopTrack )
		pFnStopTrack = UObject::FindObject< UFunction > ( "Function NowGame.NowMusicManager.StopTrack" );

	UNowMusicManager_execStopTrack_Parms StopTrack_Parms;

	this->ProcessEvent ( pFnStopTrack, &StopTrack_Parms, NULL );
};

// Function NowGame.NowMusicManager.PlayTrack
// [0x00020002] 
// Parameters infos:
// int                            WhatTrack                      ( CPF_Parm )

void UNowMusicManager::PlayTrack ( int WhatTrack )
{
	static UFunction* pFnPlayTrack = NULL;

	if ( ! pFnPlayTrack )
		pFnPlayTrack = UObject::FindObject< UFunction > ( "Function NowGame.NowMusicManager.PlayTrack" );

	UNowMusicManager_execPlayTrack_Parms PlayTrack_Parms;
	PlayTrack_Parms.WhatTrack = WhatTrack;

	this->ProcessEvent ( pFnPlayTrack, &PlayTrack_Parms, NULL );
};

// Function NowGame.NowMusicManager.UpdateVolume
// [0x00020002] 
// Parameters infos:

void UNowMusicManager::UpdateVolume ( )
{
	static UFunction* pFnUpdateVolume = NULL;

	if ( ! pFnUpdateVolume )
		pFnUpdateVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowMusicManager.UpdateVolume" );

	UNowMusicManager_execUpdateVolume_Parms UpdateVolume_Parms;

	this->ProcessEvent ( pFnUpdateVolume, &UpdateVolume_Parms, NULL );
};

// Function NowGame.NowMusicManager.InitManager
// [0x00020002] 
// Parameters infos:

void UNowMusicManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = UObject::FindObject< UFunction > ( "Function NowGame.NowMusicManager.InitManager" );

	UNowMusicManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.NowMusicManager.SetSoundCueB
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USoundCue*               New                            ( CPF_Parm )

void UNowMusicManager::SetSoundCueB ( class USoundCue* New )
{
	static UFunction* pFnSetSoundCueB = NULL;

	if ( ! pFnSetSoundCueB )
		pFnSetSoundCueB = UObject::FindObject< UFunction > ( "Function NowGame.NowMusicManager.SetSoundCueB" );

	UNowMusicManager_execSetSoundCueB_Parms SetSoundCueB_Parms;
	SetSoundCueB_Parms.New = New;

	pFnSetSoundCueB->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSoundCueB, &SetSoundCueB_Parms, NULL );

	pFnSetSoundCueB->FunctionFlags |= 0x400;
};

// Function NowGame.NowMusicManager.SetSoundCueA
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USoundCue*               New                            ( CPF_Parm )

void UNowMusicManager::SetSoundCueA ( class USoundCue* New )
{
	static UFunction* pFnSetSoundCueA = NULL;

	if ( ! pFnSetSoundCueA )
		pFnSetSoundCueA = UObject::FindObject< UFunction > ( "Function NowGame.NowMusicManager.SetSoundCueA" );

	UNowMusicManager_execSetSoundCueA_Parms SetSoundCueA_Parms;
	SetSoundCueA_Parms.New = New;

	pFnSetSoundCueA->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSoundCueA, &SetSoundCueA_Parms, NULL );

	pFnSetSoundCueA->FunctionFlags |= 0x400;
};

// Function NowGame.NowOptionsDatastore.GetFieldValue
// [0x00424802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 FieldName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            ArrayIndex                     ( CPF_OptionalParm | CPF_Parm )
// struct FUIProviderScriptFieldValue FieldValue                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UNowOptionsDatastore::eventGetFieldValue ( struct FString FieldName, int ArrayIndex, struct FUIProviderScriptFieldValue* FieldValue )
{
	static UFunction* pFnGetFieldValue = NULL;

	if ( ! pFnGetFieldValue )
		pFnGetFieldValue = UObject::FindObject< UFunction > ( "Function NowGame.NowOptionsDatastore.GetFieldValue" );

	UNowOptionsDatastore_eventGetFieldValue_Parms GetFieldValue_Parms;
	memcpy ( &GetFieldValue_Parms.FieldName, &FieldName, 0xC );
	GetFieldValue_Parms.ArrayIndex = ArrayIndex;

	this->ProcessEvent ( pFnGetFieldValue, &GetFieldValue_Parms, NULL );

	if ( FieldValue )
		memcpy ( FieldValue, &GetFieldValue_Parms.FieldValue, 0x58 );

	return GetFieldValue_Parms.ReturnValue;
};

// Function NowGame.NowOptionsDatastore.InitMe
// [0x00020002] 
// Parameters infos:

void UNowOptionsDatastore::InitMe ( )
{
	static UFunction* pFnInitMe = NULL;

	if ( ! pFnInitMe )
		pFnInitMe = UObject::FindObject< UFunction > ( "Function NowGame.NowOptionsDatastore.InitMe" );

	UNowOptionsDatastore_execInitMe_Parms InitMe_Parms;

	this->ProcessEvent ( pFnInitMe, &InitMe_Parms, NULL );
};

// Function NowGame.NowOptionsDatastore.SetTextureRes
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewSize                        ( CPF_Parm )
// int                            LODGroup                       ( CPF_Parm )

void UNowOptionsDatastore::eventSetTextureRes ( int NewSize, int LODGroup )
{
	static UFunction* pFnSetTextureRes = NULL;

	if ( ! pFnSetTextureRes )
		pFnSetTextureRes = UObject::FindObject< UFunction > ( "Function NowGame.NowOptionsDatastore.SetTextureRes" );

	UNowOptionsDatastore_eventSetTextureRes_Parms SetTextureRes_Parms;
	SetTextureRes_Parms.NewSize = NewSize;
	SetTextureRes_Parms.LODGroup = LODGroup;

	this->ProcessEvent ( pFnSetTextureRes, &SetTextureRes_Parms, NULL );
};

// Function NowGame.NowOptionsDatastore.SetVSync
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  newValue                       ( CPF_Parm )

void UNowOptionsDatastore::SetVSync ( unsigned long newValue )
{
	static UFunction* pFnSetVSync = NULL;

	if ( ! pFnSetVSync )
		pFnSetVSync = UObject::FindObject< UFunction > ( "Function NowGame.NowOptionsDatastore.SetVSync" );

	UNowOptionsDatastore_execSetVSync_Parms SetVSync_Parms;
	SetVSync_Parms.newValue = newValue;

	pFnSetVSync->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVSync, &SetVSync_Parms, NULL );

	pFnSetVSync->FunctionFlags |= 0x400;
};

// Function NowGame.NowOptionsDatastore.SetBloom
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            newValue                       ( CPF_Parm )

void UNowOptionsDatastore::SetBloom ( int newValue )
{
	static UFunction* pFnSetBloom = NULL;

	if ( ! pFnSetBloom )
		pFnSetBloom = UObject::FindObject< UFunction > ( "Function NowGame.NowOptionsDatastore.SetBloom" );

	UNowOptionsDatastore_execSetBloom_Parms SetBloom_Parms;
	SetBloom_Parms.newValue = newValue;

	pFnSetBloom->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBloom, &SetBloom_Parms, NULL );

	pFnSetBloom->FunctionFlags |= 0x400;
};

// Function NowGame.NowOptionsDatastore.SetSmoothFrameRate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )

void UNowOptionsDatastore::SetSmoothFrameRate ( unsigned long bNewValue )
{
	static UFunction* pFnSetSmoothFrameRate = NULL;

	if ( ! pFnSetSmoothFrameRate )
		pFnSetSmoothFrameRate = UObject::FindObject< UFunction > ( "Function NowGame.NowOptionsDatastore.SetSmoothFrameRate" );

	UNowOptionsDatastore_execSetSmoothFrameRate_Parms SetSmoothFrameRate_Parms;
	SetSmoothFrameRate_Parms.bNewValue = bNewValue;

	pFnSetSmoothFrameRate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSmoothFrameRate, &SetSmoothFrameRate_Parms, NULL );

	pFnSetSmoothFrameRate->FunctionFlags |= 0x400;
};

// Function NowGame.NowOptionsDatastore.SetMotionBlur
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )

void UNowOptionsDatastore::SetMotionBlur ( unsigned long bNewValue )
{
	static UFunction* pFnSetMotionBlur = NULL;

	if ( ! pFnSetMotionBlur )
		pFnSetMotionBlur = UObject::FindObject< UFunction > ( "Function NowGame.NowOptionsDatastore.SetMotionBlur" );

	UNowOptionsDatastore_execSetMotionBlur_Parms SetMotionBlur_Parms;
	SetMotionBlur_Parms.bNewValue = bNewValue;

	pFnSetMotionBlur->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMotionBlur, &SetMotionBlur_Parms, NULL );

	pFnSetMotionBlur->FunctionFlags |= 0x400;
};

// Function NowGame.NowOptionsDatastore.SetLodSize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 newValue                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            LODGroup                       ( CPF_Parm )

void UNowOptionsDatastore::SetLodSize ( struct FString newValue, int LODGroup )
{
	static UFunction* pFnSetLodSize = NULL;

	if ( ! pFnSetLodSize )
		pFnSetLodSize = UObject::FindObject< UFunction > ( "Function NowGame.NowOptionsDatastore.SetLodSize" );

	UNowOptionsDatastore_execSetLodSize_Parms SetLodSize_Parms;
	memcpy ( &SetLodSize_Parms.newValue, &newValue, 0xC );
	SetLodSize_Parms.LODGroup = LODGroup;

	pFnSetLodSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLodSize, &SetLodSize_Parms, NULL );

	pFnSetLodSize->FunctionFlags |= 0x400;
};

// Function NowGame.NowPathNodes.CalcArrowScale
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowPathNodes::eventCalcArrowScale ( )
{
	static UFunction* pFnCalcArrowScale = NULL;

	if ( ! pFnCalcArrowScale )
		pFnCalcArrowScale = UObject::FindObject< UFunction > ( "Function NowGame.NowPathNodes.CalcArrowScale" );

	ANowPathNodes_eventCalcArrowScale_Parms CalcArrowScale_Parms;

	this->ProcessEvent ( pFnCalcArrowScale, &CalcArrowScale_Parms, NULL );

	return CalcArrowScale_Parms.ReturnValue;
};

// Function NowGame.NowPathNodes.CalcRot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator ANowPathNodes::eventCalcRot ( )
{
	static UFunction* pFnCalcRot = NULL;

	if ( ! pFnCalcRot )
		pFnCalcRot = UObject::FindObject< UFunction > ( "Function NowGame.NowPathNodes.CalcRot" );

	ANowPathNodes_eventCalcRot_Parms CalcRot_Parms;

	this->ProcessEvent ( pFnCalcRot, &CalcRot_Parms, NULL );

	return CalcRot_Parms.ReturnValue;
};

// Function NowGame.NowPathNodes.UpdateHelpers
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPathNodes::UpdateHelpers ( )
{
	static UFunction* pFnUpdateHelpers = NULL;

	if ( ! pFnUpdateHelpers )
		pFnUpdateHelpers = UObject::FindObject< UFunction > ( "Function NowGame.NowPathNodes.UpdateHelpers" );

	ANowPathNodes_execUpdateHelpers_Parms UpdateHelpers_Parms;

	pFnUpdateHelpers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateHelpers, &UpdateHelpers_Parms, NULL );

	pFnUpdateHelpers->FunctionFlags |= 0x400;
};

// Function NowGame.NowPathNodes.ShouldBeHiddenBySHOW_NavigationNodes
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPathNodes::ShouldBeHiddenBySHOW_NavigationNodes ( )
{
	static UFunction* pFnShouldBeHiddenBySHOW_NavigationNodes = NULL;

	if ( ! pFnShouldBeHiddenBySHOW_NavigationNodes )
		pFnShouldBeHiddenBySHOW_NavigationNodes = UObject::FindObject< UFunction > ( "Function NowGame.NowPathNodes.ShouldBeHiddenBySHOW_NavigationNodes" );

	ANowPathNodes_execShouldBeHiddenBySHOW_NavigationNodes_Parms ShouldBeHiddenBySHOW_NavigationNodes_Parms;

	pFnShouldBeHiddenBySHOW_NavigationNodes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldBeHiddenBySHOW_NavigationNodes, &ShouldBeHiddenBySHOW_NavigationNodes_Parms, NULL );

	pFnShouldBeHiddenBySHOW_NavigationNodes->FunctionFlags |= 0x400;

	return ShouldBeHiddenBySHOW_NavigationNodes_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetHeight
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPawn::GetHeight ( )
{
	static UFunction* pFnGetHeight = NULL;

	if ( ! pFnGetHeight )
		pFnGetHeight = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetHeight" );

	ANowPawn_execGetHeight_Parms GetHeight_Parms;

	this->ProcessEvent ( pFnGetHeight, &GetHeight_Parms, NULL );

	return GetHeight_Parms.ReturnValue;
};

// Function NowGame.NowPawn.ClientEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  pSourceActor                   ( CPF_Parm )
// int                            eType                          ( CPF_Parm )
// float                          fForce                         ( CPF_Parm )

void ANowPawn::eventClientEffect ( class AActor* pSourceActor, int eType, float fForce )
{
	static UFunction* pFnClientEffect = NULL;

	if ( ! pFnClientEffect )
		pFnClientEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.ClientEffect" );

	ANowPawn_eventClientEffect_Parms ClientEffect_Parms;
	ClientEffect_Parms.pSourceActor = pSourceActor;
	ClientEffect_Parms.eType = eType;
	ClientEffect_Parms.fForce = fForce;

	this->ProcessEvent ( pFnClientEffect, &ClientEffect_Parms, NULL );
};

// Function NowGame.NowPawn.AnimEffectTarget
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void ANowPawn::eventAnimEffectTarget ( class AActor* Target )
{
	static UFunction* pFnAnimEffectTarget = NULL;

	if ( ! pFnAnimEffectTarget )
		pFnAnimEffectTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.AnimEffectTarget" );

	ANowPawn_eventAnimEffectTarget_Parms AnimEffectTarget_Parms;
	AnimEffectTarget_Parms.Target = Target;

	this->ProcessEvent ( pFnAnimEffectTarget, &AnimEffectTarget_Parms, NULL );
};

// Function NowGame.NowPawn.AnimEffectVector
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FVector                 Loc                            ( CPF_Parm )

void ANowPawn::eventAnimEffectVector ( struct FVector Loc )
{
	static UFunction* pFnAnimEffectVector = NULL;

	if ( ! pFnAnimEffectVector )
		pFnAnimEffectVector = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.AnimEffectVector" );

	ANowPawn_eventAnimEffectVector_Parms AnimEffectVector_Parms;
	memcpy ( &AnimEffectVector_Parms.Loc, &Loc, 0xC );

	this->ProcessEvent ( pFnAnimEffectVector, &AnimEffectVector_Parms, NULL );
};

// Function NowGame.NowPawn.RemoveAllCharEffects
// [0x00020002] 
// Parameters infos:

void ANowPawn::RemoveAllCharEffects ( )
{
	static UFunction* pFnRemoveAllCharEffects = NULL;

	if ( ! pFnRemoveAllCharEffects )
		pFnRemoveAllCharEffects = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.RemoveAllCharEffects" );

	ANowPawn_execRemoveAllCharEffects_Parms RemoveAllCharEffects_Parms;

	this->ProcessEvent ( pFnRemoveAllCharEffects, &RemoveAllCharEffects_Parms, NULL );
};

// Function NowGame.NowPawn.InitHero
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            iHeroType                      ( CPF_Parm )

void ANowPawn::eventInitHero ( int iHeroType )
{
	static UFunction* pFnInitHero = NULL;

	if ( ! pFnInitHero )
		pFnInitHero = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.InitHero" );

	ANowPawn_eventInitHero_Parms InitHero_Parms;
	InitHero_Parms.iHeroType = iHeroType;

	this->ProcessEvent ( pFnInitHero, &InitHero_Parms, NULL );
};

// Function NowGame.NowPawn.HeroOverrideMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iHeroType                      ( CPF_Parm )

bool ANowPawn::eventHeroOverrideMesh ( int iHeroType )
{
	static UFunction* pFnHeroOverrideMesh = NULL;

	if ( ! pFnHeroOverrideMesh )
		pFnHeroOverrideMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.HeroOverrideMesh" );

	ANowPawn_eventHeroOverrideMesh_Parms HeroOverrideMesh_Parms;
	HeroOverrideMesh_Parms.iHeroType = iHeroType;

	this->ProcessEvent ( pFnHeroOverrideMesh, &HeroOverrideMesh_Parms, NULL );

	return HeroOverrideMesh_Parms.ReturnValue;
};

// Function NowGame.NowPawn.SendNPCInterest
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          Range                          ( CPF_Parm )

void ANowPawn::eventSendNPCInterest ( float Range )
{
	static UFunction* pFnSendNPCInterest = NULL;

	if ( ! pFnSendNPCInterest )
		pFnSendNPCInterest = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SendNPCInterest" );

	ANowPawn_eventSendNPCInterest_Parms SendNPCInterest_Parms;
	SendNPCInterest_Parms.Range = Range;

	this->ProcessEvent ( pFnSendNPCInterest, &SendNPCInterest_Parms, NULL );
};

// Function NowGame.NowPawn.EquipmentMount1
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventEquipmentMount1 ( )
{
	static UFunction* pFnEquipmentMount1 = NULL;

	if ( ! pFnEquipmentMount1 )
		pFnEquipmentMount1 = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.EquipmentMount1" );

	ANowPawn_eventEquipmentMount1_Parms EquipmentMount1_Parms;

	this->ProcessEvent ( pFnEquipmentMount1, &EquipmentMount1_Parms, NULL );
};

// Function NowGame.NowPawn.EquipmentMount2
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventEquipmentMount2 ( )
{
	static UFunction* pFnEquipmentMount2 = NULL;

	if ( ! pFnEquipmentMount2 )
		pFnEquipmentMount2 = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.EquipmentMount2" );

	ANowPawn_eventEquipmentMount2_Parms EquipmentMount2_Parms;

	this->ProcessEvent ( pFnEquipmentMount2, &EquipmentMount2_Parms, NULL );
};

// Function NowGame.NowPawn.EquipmentSaddle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventEquipmentSaddle ( )
{
	static UFunction* pFnEquipmentSaddle = NULL;

	if ( ! pFnEquipmentSaddle )
		pFnEquipmentSaddle = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.EquipmentSaddle" );

	ANowPawn_eventEquipmentSaddle_Parms EquipmentSaddle_Parms;

	this->ProcessEvent ( pFnEquipmentSaddle, &EquipmentSaddle_Parms, NULL );
};

// Function NowGame.NowPawn.EquipmentIdle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventEquipmentIdle ( )
{
	static UFunction* pFnEquipmentIdle = NULL;

	if ( ! pFnEquipmentIdle )
		pFnEquipmentIdle = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.EquipmentIdle" );

	ANowPawn_eventEquipmentIdle_Parms EquipmentIdle_Parms;

	this->ProcessEvent ( pFnEquipmentIdle, &EquipmentIdle_Parms, NULL );
};

// Function NowGame.NowPawn.EquipmentMove
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventEquipmentMove ( )
{
	static UFunction* pFnEquipmentMove = NULL;

	if ( ! pFnEquipmentMove )
		pFnEquipmentMove = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.EquipmentMove" );

	ANowPawn_eventEquipmentMove_Parms EquipmentMove_Parms;

	this->ProcessEvent ( pFnEquipmentMove, &EquipmentMove_Parms, NULL );
};

// Function NowGame.NowPawn.SendLoadingState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Nr                             ( CPF_Parm )
// struct FString                 Info                           ( CPF_Parm | CPF_NeedCtorLink )

void ANowPawn::eventSendLoadingState ( int Nr, struct FString Info )
{
	static UFunction* pFnSendLoadingState = NULL;

	if ( ! pFnSendLoadingState )
		pFnSendLoadingState = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SendLoadingState" );

	ANowPawn_eventSendLoadingState_Parms SendLoadingState_Parms;
	SendLoadingState_Parms.Nr = Nr;
	memcpy ( &SendLoadingState_Parms.Info, &Info, 0xC );

	this->ProcessEvent ( pFnSendLoadingState, &SendLoadingState_Parms, NULL );
};

// Function NowGame.NowPawn.TestPos
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 ExitPos                        ( CPF_Parm )
// class ANowAtlasAvatarSkM*      Other                          ( CPF_Parm )

bool ANowPawn::TestPos ( struct FVector ExitPos, class ANowAtlasAvatarSkM* Other )
{
	static UFunction* pFnTestPos = NULL;

	if ( ! pFnTestPos )
		pFnTestPos = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.TestPos" );

	ANowPawn_execTestPos_Parms TestPos_Parms;
	memcpy ( &TestPos_Parms.ExitPos, &ExitPos, 0xC );
	TestPos_Parms.Other = Other;

	this->ProcessEvent ( pFnTestPos, &TestPos_Parms, NULL );

	return TestPos_Parms.ReturnValue;
};

// Function NowGame.NowPawn.FindStuckSpot
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bLonger                        ( CPF_Parm )

struct FVector ANowPawn::FindStuckSpot ( unsigned long bLonger )
{
	static UFunction* pFnFindStuckSpot = NULL;

	if ( ! pFnFindStuckSpot )
		pFnFindStuckSpot = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.FindStuckSpot" );

	ANowPawn_execFindStuckSpot_Parms FindStuckSpot_Parms;
	FindStuckSpot_Parms.bLonger = bLonger;

	this->ProcessEvent ( pFnFindStuckSpot, &FindStuckSpot_Parms, NULL );

	return FindStuckSpot_Parms.ReturnValue;
};

// Function NowGame.NowPawn.UnStuckMe
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventUnStuckMe ( )
{
	static UFunction* pFnUnStuckMe = NULL;

	if ( ! pFnUnStuckMe )
		pFnUnStuckMe = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.UnStuckMe" );

	ANowPawn_eventUnStuckMe_Parms UnStuckMe_Parms;

	this->ProcessEvent ( pFnUnStuckMe, &UnStuckMe_Parms, NULL );
};

// Function NowGame.NowPawn.testForHouses
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 newLocaltion                   ( CPF_Parm | CPF_OutParm )

bool ANowPawn::testForHouses ( struct FVector* newLocaltion )
{
	static UFunction* pFntestForHouses = NULL;

	if ( ! pFntestForHouses )
		pFntestForHouses = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.testForHouses" );

	ANowPawn_exectestForHouses_Parms testForHouses_Parms;

	this->ProcessEvent ( pFntestForHouses, &testForHouses_Parms, NULL );

	if ( newLocaltion )
		memcpy ( newLocaltion, &testForHouses_Parms.newLocaltion, 0xC );

	return testForHouses_Parms.ReturnValue;
};

// Function NowGame.NowPawn.DoJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bUpdating                      ( CPF_Parm )

bool ANowPawn::DoJump ( unsigned long bUpdating )
{
	static UFunction* pFnDoJump = NULL;

	if ( ! pFnDoJump )
		pFnDoJump = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.DoJump" );

	ANowPawn_execDoJump_Parms DoJump_Parms;
	DoJump_Parms.bUpdating = bUpdating;

	this->ProcessEvent ( pFnDoJump, &DoJump_Parms, NULL );

	return DoJump_Parms.ReturnValue;
};

// Function NowGame.NowPawn.BaseChange
// [0x00020822] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventBaseChange ( )
{
	static UFunction* pFnBaseChange = NULL;

	if ( ! pFnBaseChange )
		pFnBaseChange = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.BaseChange" );

	ANowPawn_eventBaseChange_Parms BaseChange_Parms;

	this->ProcessEvent ( pFnBaseChange, &BaseChange_Parms, NULL );
};

// Function NowGame.NowPawn.WalkOff
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPawn::WalkOff ( )
{
	static UFunction* pFnWalkOff = NULL;

	if ( ! pFnWalkOff )
		pFnWalkOff = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.WalkOff" );

	ANowPawn_execWalkOff_Parms WalkOff_Parms;

	this->ProcessEvent ( pFnWalkOff, &WalkOff_Parms, NULL );
};

// Function NowGame.NowPawn.WalkOn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPawn::WalkOn ( )
{
	static UFunction* pFnWalkOn = NULL;

	if ( ! pFnWalkOn )
		pFnWalkOn = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.WalkOn" );

	ANowPawn_execWalkOn_Parms WalkOn_Parms;

	this->ProcessEvent ( pFnWalkOn, &WalkOn_Parms, NULL );
};

// Function NowGame.NowPawn.SendFallingDamage
// [0x00024002] 
// Parameters infos:
// unsigned long                  bInWater                       ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::SendFallingDamage ( unsigned long bInWater )
{
	static UFunction* pFnSendFallingDamage = NULL;

	if ( ! pFnSendFallingDamage )
		pFnSendFallingDamage = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SendFallingDamage" );

	ANowPawn_execSendFallingDamage_Parms SendFallingDamage_Parms;
	SendFallingDamage_Parms.bInWater = bInWater;

	this->ProcessEvent ( pFnSendFallingDamage, &SendFallingDamage_Parms, NULL );
};

// Function NowGame.NowPawn.GetOptions
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowOptionsDatastore*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowOptionsDatastore* ANowPawn::eventGetOptions ( )
{
	static UFunction* pFnGetOptions = NULL;

	if ( ! pFnGetOptions )
		pFnGetOptions = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetOptions" );

	ANowPawn_eventGetOptions_Parms GetOptions_Parms;

	this->ProcessEvent ( pFnGetOptions, &GetOptions_Parms, NULL );

	return GetOptions_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetANowPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowPawn::eventGetANowPC ( )
{
	static UFunction* pFnGetANowPC = NULL;

	if ( ! pFnGetANowPC )
		pFnGetANowPC = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetANowPC" );

	ANowPawn_eventGetANowPC_Parms GetANowPC_Parms;

	this->ProcessEvent ( pFnGetANowPC, &GetANowPC_Parms, NULL );

	return GetANowPC_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetNowPC
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowPawn::eventGetNowPC ( )
{
	static UFunction* pFnGetNowPC = NULL;

	if ( ! pFnGetNowPC )
		pFnGetNowPC = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetNowPC" );

	ANowPawn_eventGetNowPC_Parms GetNowPC_Parms;

	this->ProcessEvent ( pFnGetNowPC, &GetNowPC_Parms, NULL );

	return GetNowPC_Parms.ReturnValue;
};

// Function NowGame.NowPawn.CheckForDecalSpawn
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DmgTaken                       ( CPF_Parm )

void ANowPawn::eventCheckForDecalSpawn ( float DmgTaken )
{
	static UFunction* pFnCheckForDecalSpawn = NULL;

	if ( ! pFnCheckForDecalSpawn )
		pFnCheckForDecalSpawn = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.CheckForDecalSpawn" );

	ANowPawn_eventCheckForDecalSpawn_Parms CheckForDecalSpawn_Parms;
	CheckForDecalSpawn_Parms.DmgTaken = DmgTaken;

	this->ProcessEvent ( pFnCheckForDecalSpawn, &CheckForDecalSpawn_Parms, NULL );
};

// Function NowGame.NowPawn.RemoveBloodDecals
// [0x00020002] 
// Parameters infos:

void ANowPawn::RemoveBloodDecals ( )
{
	static UFunction* pFnRemoveBloodDecals = NULL;

	if ( ! pFnRemoveBloodDecals )
		pFnRemoveBloodDecals = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.RemoveBloodDecals" );

	ANowPawn_execRemoveBloodDecals_Parms RemoveBloodDecals_Parms;

	this->ProcessEvent ( pFnRemoveBloodDecals, &RemoveBloodDecals_Parms, NULL );
};

// Function NowGame.NowPawn.AddBloodDecals
// [0x00024002] 
// Parameters infos:
// float                          addValue                       ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::AddBloodDecals ( float addValue )
{
	static UFunction* pFnAddBloodDecals = NULL;

	if ( ! pFnAddBloodDecals )
		pFnAddBloodDecals = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.AddBloodDecals" );

	ANowPawn_execAddBloodDecals_Parms AddBloodDecals_Parms;
	AddBloodDecals_Parms.addValue = addValue;

	this->ProcessEvent ( pFnAddBloodDecals, &AddBloodDecals_Parms, NULL );
};

// Function NowGame.NowPawn.AreaBloodDecals
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventAreaBloodDecals ( )
{
	static UFunction* pFnAreaBloodDecals = NULL;

	if ( ! pFnAreaBloodDecals )
		pFnAreaBloodDecals = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.AreaBloodDecals" );

	ANowPawn_eventAreaBloodDecals_Parms AreaBloodDecals_Parms;

	this->ProcessEvent ( pFnAreaBloodDecals, &AreaBloodDecals_Parms, NULL );
};

// Function NowGame.NowPawn.SetMercyPosition
// [0x00820002] 
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )

void ANowPawn::SetMercyPosition ( class AActor* WhatActor )
{
	static UFunction* pFnSetMercyPosition = NULL;

	if ( ! pFnSetMercyPosition )
		pFnSetMercyPosition = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetMercyPosition" );

	ANowPawn_execSetMercyPosition_Parms SetMercyPosition_Parms;
	SetMercyPosition_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnSetMercyPosition, &SetMercyPosition_Parms, NULL );
};

// Function NowGame.NowPawn.GetCurrentMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )

class USkeletalMeshComponent* ANowPawn::eventGetCurrentMesh ( )
{
	static UFunction* pFnGetCurrentMesh = NULL;

	if ( ! pFnGetCurrentMesh )
		pFnGetCurrentMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetCurrentMesh" );

	ANowPawn_eventGetCurrentMesh_Parms GetCurrentMesh_Parms;

	this->ProcessEvent ( pFnGetCurrentMesh, &GetCurrentMesh_Parms, NULL );

	return GetCurrentMesh_Parms.ReturnValue;
};

// Function NowGame.NowPawn.TriggerSocketChange
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventTriggerSocketChange ( )
{
	static UFunction* pFnTriggerSocketChange = NULL;

	if ( ! pFnTriggerSocketChange )
		pFnTriggerSocketChange = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.TriggerSocketChange" );

	ANowPawn_eventTriggerSocketChange_Parms TriggerSocketChange_Parms;

	this->ProcessEvent ( pFnTriggerSocketChange, &TriggerSocketChange_Parms, NULL );
};

// Function NowGame.NowPawn.TriggerMountSocketChange
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventTriggerMountSocketChange ( )
{
	static UFunction* pFnTriggerMountSocketChange = NULL;

	if ( ! pFnTriggerMountSocketChange )
		pFnTriggerMountSocketChange = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.TriggerMountSocketChange" );

	ANowPawn_eventTriggerMountSocketChange_Parms TriggerMountSocketChange_Parms;

	this->ProcessEvent ( pFnTriggerMountSocketChange, &TriggerMountSocketChange_Parms, NULL );
};

// Function NowGame.NowPawn.AnimEnterMode
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  Enter                          ( CPF_Parm )
// unsigned long                  bIgnoreAnims                   ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventAnimEnterMode ( unsigned long Enter, unsigned long bIgnoreAnims )
{
	static UFunction* pFnAnimEnterMode = NULL;

	if ( ! pFnAnimEnterMode )
		pFnAnimEnterMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.AnimEnterMode" );

	ANowPawn_eventAnimEnterMode_Parms AnimEnterMode_Parms;
	AnimEnterMode_Parms.Enter = Enter;
	AnimEnterMode_Parms.bIgnoreAnims = bIgnoreAnims;

	this->ProcessEvent ( pFnAnimEnterMode, &AnimEnterMode_Parms, NULL );
};

// Function NowGame.NowPawn.AnimEnterBlockingMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  Enter                          ( CPF_Parm )

void ANowPawn::eventAnimEnterBlockingMode ( unsigned long Enter )
{
	static UFunction* pFnAnimEnterBlockingMode = NULL;

	if ( ! pFnAnimEnterBlockingMode )
		pFnAnimEnterBlockingMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.AnimEnterBlockingMode" );

	ANowPawn_eventAnimEnterBlockingMode_Parms AnimEnterBlockingMode_Parms;
	AnimEnterBlockingMode_Parms.Enter = Enter;

	this->ProcessEvent ( pFnAnimEnterBlockingMode, &AnimEnterBlockingMode_Parms, NULL );
};

// Function NowGame.NowPawn.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.Destroyed" );

	ANowPawn_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowPawn.GetNowPlayerDS
// [0x00020002] 
// Parameters infos:
// class UNowPlayerDatastore*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowPlayerDatastore* ANowPawn::GetNowPlayerDS ( )
{
	static UFunction* pFnGetNowPlayerDS = NULL;

	if ( ! pFnGetNowPlayerDS )
		pFnGetNowPlayerDS = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetNowPlayerDS" );

	ANowPawn_execGetNowPlayerDS_Parms GetNowPlayerDS_Parms;

	this->ProcessEvent ( pFnGetNowPlayerDS, &GetNowPlayerDS_Parms, NULL );

	return GetNowPlayerDS_Parms.ReturnValue;
};

// Function NowGame.NowPawn.PlayFootStepSound
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            FootDown                       ( CPF_Parm )

void ANowPawn::eventPlayFootStepSound ( int FootDown )
{
	static UFunction* pFnPlayFootStepSound = NULL;

	if ( ! pFnPlayFootStepSound )
		pFnPlayFootStepSound = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PlayFootStepSound" );

	ANowPawn_eventPlayFootStepSound_Parms PlayFootStepSound_Parms;
	PlayFootStepSound_Parms.FootDown = FootDown;

	this->ProcessEvent ( pFnPlayFootStepSound, &PlayFootStepSound_Parms, NULL );
};

// Function NowGame.NowPawn.SetSprint
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDoSprint                      ( CPF_Parm )

void ANowPawn::SetSprint ( unsigned long bDoSprint )
{
	static UFunction* pFnSetSprint = NULL;

	if ( ! pFnSetSprint )
		pFnSetSprint = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetSprint" );

	ANowPawn_execSetSprint_Parms SetSprint_Parms;
	SetSprint_Parms.bDoSprint = bDoSprint;

	this->ProcessEvent ( pFnSetSprint, &SetSprint_Parms, NULL );
};

// Function NowGame.NowPawn.RemoveSpellEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventRemoveSpellEffect ( )
{
	static UFunction* pFnRemoveSpellEffect = NULL;

	if ( ! pFnRemoveSpellEffect )
		pFnRemoveSpellEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.RemoveSpellEffect" );

	ANowPawn_eventRemoveSpellEffect_Parms RemoveSpellEffect_Parms;

	this->ProcessEvent ( pFnRemoveSpellEffect, &RemoveSpellEffect_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnReleaseSpellEffect
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  selfTarget                     ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSpawnReleaseSpellEffect ( unsigned long selfTarget )
{
	static UFunction* pFnSpawnReleaseSpellEffect = NULL;

	if ( ! pFnSpawnReleaseSpellEffect )
		pFnSpawnReleaseSpellEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SpawnReleaseSpellEffect" );

	ANowPawn_eventSpawnReleaseSpellEffect_Parms SpawnReleaseSpellEffect_Parms;
	SpawnReleaseSpellEffect_Parms.selfTarget = selfTarget;

	this->ProcessEvent ( pFnSpawnReleaseSpellEffect, &SpawnReleaseSpellEffect_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnChargeSpellEffect
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventSpawnChargeSpellEffect ( )
{
	static UFunction* pFnSpawnChargeSpellEffect = NULL;

	if ( ! pFnSpawnChargeSpellEffect )
		pFnSpawnChargeSpellEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SpawnChargeSpellEffect" );

	ANowPawn_eventSpawnChargeSpellEffect_Parms SpawnChargeSpellEffect_Parms;

	this->ProcessEvent ( pFnSpawnChargeSpellEffect, &SpawnChargeSpellEffect_Parms, NULL );
};

// Function NowGame.NowPawn.CancelSpells
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventCancelSpells ( )
{
	static UFunction* pFnCancelSpells = NULL;

	if ( ! pFnCancelSpells )
		pFnCancelSpells = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.CancelSpells" );

	ANowPawn_eventCancelSpells_Parms CancelSpells_Parms;

	this->ProcessEvent ( pFnCancelSpells, &CancelSpells_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnCombatSystems
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSpawnCombatSystems ( unsigned long bForce )
{
	static UFunction* pFnSpawnCombatSystems = NULL;

	if ( ! pFnSpawnCombatSystems )
		pFnSpawnCombatSystems = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SpawnCombatSystems" );

	ANowPawn_eventSpawnCombatSystems_Parms SpawnCombatSystems_Parms;
	SpawnCombatSystems_Parms.bForce = bForce;

	this->ProcessEvent ( pFnSpawnCombatSystems, &SpawnCombatSystems_Parms, NULL );
};

// Function NowGame.NowPawn.SetRemoteSize
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          fSize                          ( CPF_Parm )

void ANowPawn::eventSetRemoteSize ( float fSize )
{
	static UFunction* pFnSetRemoteSize = NULL;

	if ( ! pFnSetRemoteSize )
		pFnSetRemoteSize = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetRemoteSize" );

	ANowPawn_eventSetRemoteSize_Parms SetRemoteSize_Parms;
	SetRemoteSize_Parms.fSize = fSize;

	this->ProcessEvent ( pFnSetRemoteSize, &SetRemoteSize_Parms, NULL );
};

// Function NowGame.NowPawn.CheckSize
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventCheckSize ( )
{
	static UFunction* pFnCheckSize = NULL;

	if ( ! pFnCheckSize )
		pFnCheckSize = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.CheckSize" );

	ANowPawn_eventCheckSize_Parms CheckSize_Parms;

	this->ProcessEvent ( pFnCheckSize, &CheckSize_Parms, NULL );
};

// Function NowGame.NowPawn.ReGainTimer
// [0x00020002] 
// Parameters infos:

void ANowPawn::ReGainTimer ( )
{
	static UFunction* pFnReGainTimer = NULL;

	if ( ! pFnReGainTimer )
		pFnReGainTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.ReGainTimer" );

	ANowPawn_execReGainTimer_Parms ReGainTimer_Parms;

	this->ProcessEvent ( pFnReGainTimer, &ReGainTimer_Parms, NULL );
};

// Function NowGame.NowPawn.MountReGainTimer
// [0x00020002] 
// Parameters infos:

void ANowPawn::MountReGainTimer ( )
{
	static UFunction* pFnMountReGainTimer = NULL;

	if ( ! pFnMountReGainTimer )
		pFnMountReGainTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.MountReGainTimer" );

	ANowPawn_execMountReGainTimer_Parms MountReGainTimer_Parms;

	this->ProcessEvent ( pFnMountReGainTimer, &MountReGainTimer_Parms, NULL );
};

// Function NowGame.NowPawn.CannotJumpNow
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::CannotJumpNow ( )
{
	static UFunction* pFnCannotJumpNow = NULL;

	if ( ! pFnCannotJumpNow )
		pFnCannotJumpNow = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.CannotJumpNow" );

	ANowPawn_execCannotJumpNow_Parms CannotJumpNow_Parms;

	this->ProcessEvent ( pFnCannotJumpNow, &CannotJumpNow_Parms, NULL );

	return CannotJumpNow_Parms.ReturnValue;
};

// Function NowGame.NowPawn.ModifyStaminaRegWithArmorWeight
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPawn::ModifyStaminaRegWithArmorWeight ( )
{
	static UFunction* pFnModifyStaminaRegWithArmorWeight = NULL;

	if ( ! pFnModifyStaminaRegWithArmorWeight )
		pFnModifyStaminaRegWithArmorWeight = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.ModifyStaminaRegWithArmorWeight" );

	ANowPawn_execModifyStaminaRegWithArmorWeight_Parms ModifyStaminaRegWithArmorWeight_Parms;

	pFnModifyStaminaRegWithArmorWeight->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnModifyStaminaRegWithArmorWeight, &ModifyStaminaRegWithArmorWeight_Parms, NULL );

	pFnModifyStaminaRegWithArmorWeight->FunctionFlags |= 0x400;

	return ModifyStaminaRegWithArmorWeight_Parms.ReturnValue;
};

// Function NowGame.NowPawn.SetStamina
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          S                              ( CPF_Parm )

void ANowPawn::eventSetStamina ( float S )
{
	static UFunction* pFnSetStamina = NULL;

	if ( ! pFnSetStamina )
		pFnSetStamina = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetStamina" );

	ANowPawn_eventSetStamina_Parms SetStamina_Parms;
	SetStamina_Parms.S = S;

	this->ProcessEvent ( pFnSetStamina, &SetStamina_Parms, NULL );
};

// Function NowGame.NowPawn.SetMountStamina
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          S                              ( CPF_Parm )

void ANowPawn::eventSetMountStamina ( float S )
{
	static UFunction* pFnSetMountStamina = NULL;

	if ( ! pFnSetMountStamina )
		pFnSetMountStamina = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetMountStamina" );

	ANowPawn_eventSetMountStamina_Parms SetMountStamina_Parms;
	SetMountStamina_Parms.S = S;

	this->ProcessEvent ( pFnSetMountStamina, &SetMountStamina_Parms, NULL );
};

// Function NowGame.NowPawn.StaminaTimer
// [0x00020002] 
// Parameters infos:

void ANowPawn::StaminaTimer ( )
{
	static UFunction* pFnStaminaTimer = NULL;

	if ( ! pFnStaminaTimer )
		pFnStaminaTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.StaminaTimer" );

	ANowPawn_execStaminaTimer_Parms StaminaTimer_Parms;

	this->ProcessEvent ( pFnStaminaTimer, &StaminaTimer_Parms, NULL );
};

// Function NowGame.NowPawn.MountStaminaTimer
// [0x00020002] 
// Parameters infos:

void ANowPawn::MountStaminaTimer ( )
{
	static UFunction* pFnMountStaminaTimer = NULL;

	if ( ! pFnMountStaminaTimer )
		pFnMountStaminaTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.MountStaminaTimer" );

	ANowPawn_execMountStaminaTimer_Parms MountStaminaTimer_Parms;

	this->ProcessEvent ( pFnMountStaminaTimer, &MountStaminaTimer_Parms, NULL );
};

// Function NowGame.NowPawn.FaceRotation
// [0x00020102] 
// Parameters infos:
// struct FRotator                NewRotation                    ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )

	static UFunction* pFnFaceRotation = NULL;
void ANowPawn::FaceRotation ( struct FRotator NewRotation, float DeltaTime )
{

	if ( ! pFnFaceRotation )
		pFnFaceRotation = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.FaceRotation" );

	ANowPawn_execFaceRotation_Parms FaceRotation_Parms;
	memcpy ( &FaceRotation_Parms.NewRotation, &NewRotation, 0xC );
	FaceRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnFaceRotation, &FaceRotation_Parms, NULL );
};

// Function NowGame.NowPawn.GetDefaultCameraMode
// [0x00020102] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       RequestedBy                    ( CPF_Parm )

struct FName ANowPawn::GetDefaultCameraMode ( class APlayerController* RequestedBy )
{
	static UFunction* pFnGetDefaultCameraMode = NULL;

	if ( ! pFnGetDefaultCameraMode )
		pFnGetDefaultCameraMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetDefaultCameraMode" );

	ANowPawn_execGetDefaultCameraMode_Parms GetDefaultCameraMode_Parms;
	GetDefaultCameraMode_Parms.RequestedBy = RequestedBy;

	this->ProcessEvent ( pFnGetDefaultCameraMode, &GetDefaultCameraMode_Parms, NULL );

	return GetDefaultCameraMode_Parms.ReturnValue;
};

// Function NowGame.NowPawn.SetCommittedCrime
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  newValue                       ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSetCommittedCrime ( unsigned long newValue )
{
	static UFunction* pFnSetCommittedCrime = NULL;

	if ( ! pFnSetCommittedCrime )
		pFnSetCommittedCrime = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetCommittedCrime" );

	ANowPawn_eventSetCommittedCrime_Parms SetCommittedCrime_Parms;
	SetCommittedCrime_Parms.newValue = newValue;

	this->ProcessEvent ( pFnSetCommittedCrime, &SetCommittedCrime_Parms, NULL );
};

// Function NowGame.NowPawn.CameraLean
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            WhatDir                        ( CPF_Parm )

void ANowPawn::eventCameraLean ( int WhatDir )
{
	static UFunction* pFnCameraLean = NULL;

	if ( ! pFnCameraLean )
		pFnCameraLean = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.CameraLean" );

	ANowPawn_eventCameraLean_Parms CameraLean_Parms;
	CameraLean_Parms.WhatDir = WhatDir;

	this->ProcessEvent ( pFnCameraLean, &CameraLean_Parms, NULL );
};

// Function NowGame.NowPawn.PlayHitSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            lastHitBoneID                  ( CPF_Parm )

void ANowPawn::eventPlayHitSound ( int lastHitBoneID )
{
	static UFunction* pFnPlayHitSound = NULL;

	if ( ! pFnPlayHitSound )
		pFnPlayHitSound = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PlayHitSound" );

	ANowPawn_eventPlayHitSound_Parms PlayHitSound_Parms;
	PlayHitSound_Parms.lastHitBoneID = lastHitBoneID;

	this->ProcessEvent ( pFnPlayHitSound, &PlayHitSound_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnHitFx
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 LastHitLocation                ( CPF_Parm )
// unsigned long                  ClientFeedBack                 ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 PushBackVector                 ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 AttackerToPlayer               ( CPF_OptionalParm | CPF_Parm )
// int                            HitBoneID                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIgnoreParticles               ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSpawnHitFx ( struct FVector LastHitLocation, unsigned long ClientFeedBack, struct FVector PushBackVector, struct FVector AttackerToPlayer, int HitBoneID, unsigned long bIgnoreParticles )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SpawnHitFx" );

	ANowPawn_eventSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.LastHitLocation, &LastHitLocation, 0xC );
	SpawnHitFx_Parms.ClientFeedBack = ClientFeedBack;
	memcpy ( &SpawnHitFx_Parms.PushBackVector, &PushBackVector, 0xC );
	memcpy ( &SpawnHitFx_Parms.AttackerToPlayer, &AttackerToPlayer, 0xC );
	SpawnHitFx_Parms.HitBoneID = HitBoneID;
	SpawnHitFx_Parms.bIgnoreParticles = bIgnoreParticles;

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowPawn.CheckForPerfectBlock
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            HitBoneID                      ( CPF_Parm )

bool ANowPawn::eventCheckForPerfectBlock ( int HitBoneID )
{
	static UFunction* pFnCheckForPerfectBlock = NULL;

	if ( ! pFnCheckForPerfectBlock )
		pFnCheckForPerfectBlock = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.CheckForPerfectBlock" );

	ANowPawn_eventCheckForPerfectBlock_Parms CheckForPerfectBlock_Parms;
	CheckForPerfectBlock_Parms.HitBoneID = HitBoneID;

	this->ProcessEvent ( pFnCheckForPerfectBlock, &CheckForPerfectBlock_Parms, NULL );

	return CheckForPerfectBlock_Parms.ReturnValue;
};

// Function NowGame.NowPawn.CheckForShieldBash
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::eventCheckForShieldBash ( )
{
	static UFunction* pFnCheckForShieldBash = NULL;

	if ( ! pFnCheckForShieldBash )
		pFnCheckForShieldBash = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.CheckForShieldBash" );

	ANowPawn_eventCheckForShieldBash_Parms CheckForShieldBash_Parms;

	this->ProcessEvent ( pFnCheckForShieldBash, &CheckForShieldBash_Parms, NULL );

	return CheckForShieldBash_Parms.ReturnValue;
};

// Function NowGame.NowPawn.FixHeadCam
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventFixHeadCam ( )
{
	static UFunction* pFnFixHeadCam = NULL;

	if ( ! pFnFixHeadCam )
		pFnFixHeadCam = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.FixHeadCam" );

	ANowPawn_eventFixHeadCam_Parms FixHeadCam_Parms;

	this->ProcessEvent ( pFnFixHeadCam, &FixHeadCam_Parms, NULL );
};

// Function NowGame.NowPawn.SetAnimations
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bForceThird                    ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSetAnimations ( unsigned long bForceThird )
{
	static UFunction* pFnSetAnimations = NULL;

	if ( ! pFnSetAnimations )
		pFnSetAnimations = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetAnimations" );

	ANowPawn_eventSetAnimations_Parms SetAnimations_Parms;
	SetAnimations_Parms.bForceThird = bForceThird;

	this->ProcessEvent ( pFnSetAnimations, &SetAnimations_Parms, NULL );
};

// Function NowGame.NowPawn.InitFemaleAdditive
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventInitFemaleAdditive ( )
{
	static UFunction* pFnInitFemaleAdditive = NULL;

	if ( ! pFnInitFemaleAdditive )
		pFnInitFemaleAdditive = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.InitFemaleAdditive" );

	ANowPawn_eventInitFemaleAdditive_Parms InitFemaleAdditive_Parms;

	this->ProcessEvent ( pFnInitFemaleAdditive, &InitFemaleAdditive_Parms, NULL );
};

// Function NowGame.NowPawn.InitEmoteAnims
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bMale                          ( CPF_Parm )

void ANowPawn::eventInitEmoteAnims ( unsigned long bMale )
{
	static UFunction* pFnInitEmoteAnims = NULL;

	if ( ! pFnInitEmoteAnims )
		pFnInitEmoteAnims = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.InitEmoteAnims" );

	ANowPawn_eventInitEmoteAnims_Parms InitEmoteAnims_Parms;
	InitEmoteAnims_Parms.bMale = bMale;

	this->ProcessEvent ( pFnInitEmoteAnims, &InitEmoteAnims_Parms, NULL );
};

// Function NowGame.NowPawn.InitStartAnims
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventInitStartAnims ( )
{
	static UFunction* pFnInitStartAnims = NULL;

	if ( ! pFnInitStartAnims )
		pFnInitStartAnims = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.InitStartAnims" );

	ANowPawn_eventInitStartAnims_Parms InitStartAnims_Parms;

	this->ProcessEvent ( pFnInitStartAnims, &InitStartAnims_Parms, NULL );
};

// Function NowGame.NowPawn.CheckIfLoaded
// [0x00020002] 
// Parameters infos:

void ANowPawn::CheckIfLoaded ( )
{
	static UFunction* pFnCheckIfLoaded = NULL;

	if ( ! pFnCheckIfLoaded )
		pFnCheckIfLoaded = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.CheckIfLoaded" );

	ANowPawn_execCheckIfLoaded_Parms CheckIfLoaded_Parms;

	this->ProcessEvent ( pFnCheckIfLoaded, &CheckIfLoaded_Parms, NULL );
};

// Function NowGame.NowPawn.FindCoolSpot
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::FindCoolSpot ( )
{
	static UFunction* pFnFindCoolSpot = NULL;

	if ( ! pFnFindCoolSpot )
		pFnFindCoolSpot = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.FindCoolSpot" );

	ANowPawn_execFindCoolSpot_Parms FindCoolSpot_Parms;

	this->ProcessEvent ( pFnFindCoolSpot, &FindCoolSpot_Parms, NULL );

	return FindCoolSpot_Parms.ReturnValue;
};

// Function NowGame.NowPawn.FixPositionOnLogin
// [0x00020002] 
// Parameters infos:

void ANowPawn::FixPositionOnLogin ( )
{
	static UFunction* pFnFixPositionOnLogin = NULL;

	if ( ! pFnFixPositionOnLogin )
		pFnFixPositionOnLogin = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.FixPositionOnLogin" );

	ANowPawn_execFixPositionOnLogin_Parms FixPositionOnLogin_Parms;

	this->ProcessEvent ( pFnFixPositionOnLogin, &FixPositionOnLogin_Parms, NULL );
};

// Function NowGame.NowPawn.FallingResetPosition
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPawn::FallingResetPosition ( )
{
	static UFunction* pFnFallingResetPosition = NULL;

	if ( ! pFnFallingResetPosition )
		pFnFallingResetPosition = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.FallingResetPosition" );

	ANowPawn_execFallingResetPosition_Parms FallingResetPosition_Parms;

	this->ProcessEvent ( pFnFallingResetPosition, &FallingResetPosition_Parms, NULL );
};

// Function NowGame.NowPawn.GetPosAt
// [0x00C24002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// int                            iStop                          ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

struct FVector ANowPawn::GetPosAt ( float fDeltaTime, int* iStop )
{
	static UFunction* pFnGetPosAt = NULL;

	if ( ! pFnGetPosAt )
		pFnGetPosAt = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetPosAt" );

	ANowPawn_execGetPosAt_Parms GetPosAt_Parms;
	GetPosAt_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnGetPosAt, &GetPosAt_Parms, NULL );

	if ( iStop )
		*iStop = GetPosAt_Parms.iStop;

	return GetPosAt_Parms.ReturnValue;
};

// Function NowGame.NowPawn.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowPawn::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.Tick" );

	ANowPawn_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowPawn.TickCombatSystems
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowPawn::TickCombatSystems ( float DeltaTime )
{
	static UFunction* pFnTickCombatSystems = NULL;

	if ( ! pFnTickCombatSystems )
		pFnTickCombatSystems = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.TickCombatSystems" );

	ANowPawn_execTickCombatSystems_Parms TickCombatSystems_Parms;
	TickCombatSystems_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombatSystems, &TickCombatSystems_Parms, NULL );
};

// Function NowGame.NowPawn.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ANowPawn::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PostInitAnimTree" );

	ANowPawn_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnWeapons
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventSpawnWeapons ( )
{
	static UFunction* pFnSpawnWeapons = NULL;

	if ( ! pFnSpawnWeapons )
		pFnSpawnWeapons = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SpawnWeapons" );

	ANowPawn_eventSpawnWeapons_Parms SpawnWeapons_Parms;

	this->ProcessEvent ( pFnSpawnWeapons, &SpawnWeapons_Parms, NULL );
};

// Function NowGame.NowPawn.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowPawn::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PostBeginPlay" );

	ANowPawn_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnCorpse
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  Killed                         ( CPF_Parm )
// struct FName                   LastHitBoneName                ( CPF_OptionalParm | CPF_Parm )
// float                          InDmg                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSpawnCorpse ( unsigned long Killed, struct FName LastHitBoneName, float InDmg, unsigned long bFromMercyMode )
{
	static UFunction* pFnSpawnCorpse = NULL;

	if ( ! pFnSpawnCorpse )
		pFnSpawnCorpse = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SpawnCorpse" );

	ANowPawn_eventSpawnCorpse_Parms SpawnCorpse_Parms;
	SpawnCorpse_Parms.Killed = Killed;
	memcpy ( &SpawnCorpse_Parms.LastHitBoneName, &LastHitBoneName, 0x8 );
	SpawnCorpse_Parms.InDmg = InDmg;
	SpawnCorpse_Parms.bFromMercyMode = bFromMercyMode;

	this->ProcessEvent ( pFnSpawnCorpse, &SpawnCorpse_Parms, NULL );
};

// Function NowGame.NowPawn.SpawnCorpseLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventSpawnCorpseLogin ( )
{
	static UFunction* pFnSpawnCorpseLogin = NULL;

	if ( ! pFnSpawnCorpseLogin )
		pFnSpawnCorpseLogin = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SpawnCorpseLogin" );

	ANowPawn_eventSpawnCorpseLogin_Parms SpawnCorpseLogin_Parms;

	this->ProcessEvent ( pFnSpawnCorpseLogin, &SpawnCorpseLogin_Parms, NULL );
};

// Function NowGame.NowPawn.EnterCombatModeLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventEnterCombatModeLogin ( )
{
	static UFunction* pFnEnterCombatModeLogin = NULL;

	if ( ! pFnEnterCombatModeLogin )
		pFnEnterCombatModeLogin = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.EnterCombatModeLogin" );

	ANowPawn_eventEnterCombatModeLogin_Parms EnterCombatModeLogin_Parms;

	this->ProcessEvent ( pFnEnterCombatModeLogin, &EnterCombatModeLogin_Parms, NULL );
};

// Function NowGame.NowPawn.HideGhost
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventHideGhost ( )
{
	static UFunction* pFnHideGhost = NULL;

	if ( ! pFnHideGhost )
		pFnHideGhost = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.HideGhost" );

	ANowPawn_eventHideGhost_Parms HideGhost_Parms;

	this->ProcessEvent ( pFnHideGhost, &HideGhost_Parms, NULL );
};

// Function NowGame.NowPawn.ShowGhost
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventShowGhost ( )
{
	static UFunction* pFnShowGhost = NULL;

	if ( ! pFnShowGhost )
		pFnShowGhost = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.ShowGhost" );

	ANowPawn_eventShowGhost_Parms ShowGhost_Parms;

	this->ProcessEvent ( pFnShowGhost, &ShowGhost_Parms, NULL );
};

// Function NowGame.NowPawn.Landed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void ANowPawn::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.Landed" );

	ANowPawn_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function NowGame.NowPawn.ResetStunned
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventResetStunned ( )
{
	static UFunction* pFnResetStunned = NULL;

	if ( ! pFnResetStunned )
		pFnResetStunned = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.ResetStunned" );

	ANowPawn_eventResetStunned_Parms ResetStunned_Parms;

	this->ProcessEvent ( pFnResetStunned, &ResetStunned_Parms, NULL );
};

// Function NowGame.NowPawn.SetMercyMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventSetMercyMode ( )
{
	static UFunction* pFnSetMercyMode = NULL;

	if ( ! pFnSetMercyMode )
		pFnSetMercyMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetMercyMode" );

	ANowPawn_eventSetMercyMode_Parms SetMercyMode_Parms;

	this->ProcessEvent ( pFnSetMercyMode, &SetMercyMode_Parms, NULL );
};

// Function NowGame.NowPawn.SetKnockedDownMode
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 PushBackVector                 ( CPF_Parm )
// unsigned long                  bFromHorse                     ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventSetKnockedDownMode ( struct FVector PushBackVector, unsigned long bFromHorse )
{
	static UFunction* pFnSetKnockedDownMode = NULL;

	if ( ! pFnSetKnockedDownMode )
		pFnSetKnockedDownMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetKnockedDownMode" );

	ANowPawn_eventSetKnockedDownMode_Parms SetKnockedDownMode_Parms;
	memcpy ( &SetKnockedDownMode_Parms.PushBackVector, &PushBackVector, 0xC );
	SetKnockedDownMode_Parms.bFromHorse = bFromHorse;

	this->ProcessEvent ( pFnSetKnockedDownMode, &SetKnockedDownMode_Parms, NULL );
};

// Function NowGame.NowPawn.SetStunnedState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewState                       ( CPF_Parm )

void ANowPawn::eventSetStunnedState ( int NewState )
{
	static UFunction* pFnSetStunnedState = NULL;

	if ( ! pFnSetStunnedState )
		pFnSetStunnedState = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetStunnedState" );

	ANowPawn_eventSetStunnedState_Parms SetStunnedState_Parms;
	SetStunnedState_Parms.NewState = NewState;

	this->ProcessEvent ( pFnSetStunnedState, &SetStunnedState_Parms, NULL );
};

// Function NowGame.NowPawn.SetLocalFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewFlag                        ( CPF_Parm )

void ANowPawn::eventSetLocalFlag ( int NewFlag )
{
	static UFunction* pFnSetLocalFlag = NULL;

	if ( ! pFnSetLocalFlag )
		pFnSetLocalFlag = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetLocalFlag" );

	ANowPawn_eventSetLocalFlag_Parms SetLocalFlag_Parms;
	SetLocalFlag_Parms.NewFlag = NewFlag;

	this->ProcessEvent ( pFnSetLocalFlag, &SetLocalFlag_Parms, NULL );
};

// Function NowGame.NowPawn.ClearGuildFlags
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventClearGuildFlags ( )
{
	static UFunction* pFnClearGuildFlags = NULL;

	if ( ! pFnClearGuildFlags )
		pFnClearGuildFlags = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.ClearGuildFlags" );

	ANowPawn_eventClearGuildFlags_Parms ClearGuildFlags_Parms;

	this->ProcessEvent ( pFnClearGuildFlags, &ClearGuildFlags_Parms, NULL );
};

// Function NowGame.NowPawn.ReinitGuildFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventReinitGuildFlag ( )
{
	static UFunction* pFnReinitGuildFlag = NULL;

	if ( ! pFnReinitGuildFlag )
		pFnReinitGuildFlag = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.ReinitGuildFlag" );

	ANowPawn_eventReinitGuildFlag_Parms ReinitGuildFlag_Parms;

	this->ProcessEvent ( pFnReinitGuildFlag, &ReinitGuildFlag_Parms, NULL );
};

// Function NowGame.NowPawn.AddLocalFlagDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventAddLocalFlagDelegate ( )
{
	static UFunction* pFnAddLocalFlagDelegate = NULL;

	if ( ! pFnAddLocalFlagDelegate )
		pFnAddLocalFlagDelegate = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.AddLocalFlagDelegate" );

	ANowPawn_eventAddLocalFlagDelegate_Parms AddLocalFlagDelegate_Parms;

	this->ProcessEvent ( pFnAddLocalFlagDelegate, &AddLocalFlagDelegate_Parms, NULL );
};

// Function NowGame.NowPawn.LocalFlagDelegateTriggered
// [0x00020002] 
// Parameters infos:

void ANowPawn::LocalFlagDelegateTriggered ( )
{
	static UFunction* pFnLocalFlagDelegateTriggered = NULL;

	if ( ! pFnLocalFlagDelegateTriggered )
		pFnLocalFlagDelegateTriggered = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.LocalFlagDelegateTriggered" );

	ANowPawn_execLocalFlagDelegateTriggered_Parms LocalFlagDelegateTriggered_Parms;

	this->ProcessEvent ( pFnLocalFlagDelegateTriggered, &LocalFlagDelegateTriggered_Parms, NULL );
};

// Function NowGame.NowPawn.UpdateGroundSpeed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventUpdateGroundSpeed ( )
{
	static UFunction* pFnUpdateGroundSpeed = NULL;

	if ( ! pFnUpdateGroundSpeed )
		pFnUpdateGroundSpeed = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.UpdateGroundSpeed" );

	ANowPawn_eventUpdateGroundSpeed_Parms UpdateGroundSpeed_Parms;

	this->ProcessEvent ( pFnUpdateGroundSpeed, &UpdateGroundSpeed_Parms, NULL );
};

// Function NowGame.NowPawn.NowCreateAndSetMaterialInstanceConstant
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UMaterialInstanceConstant* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )
// int                            ElementIndex                   ( CPF_Parm )

class UMaterialInstanceConstant* ANowPawn::eventNowCreateAndSetMaterialInstanceConstant ( class USkeletalMeshComponent* SkelComp, int ElementIndex )
{
	static UFunction* pFnNowCreateAndSetMaterialInstanceConstant = NULL;

	if ( ! pFnNowCreateAndSetMaterialInstanceConstant )
		pFnNowCreateAndSetMaterialInstanceConstant = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.NowCreateAndSetMaterialInstanceConstant" );

	ANowPawn_eventNowCreateAndSetMaterialInstanceConstant_Parms NowCreateAndSetMaterialInstanceConstant_Parms;
	NowCreateAndSetMaterialInstanceConstant_Parms.SkelComp = SkelComp;
	NowCreateAndSetMaterialInstanceConstant_Parms.ElementIndex = ElementIndex;

	this->ProcessEvent ( pFnNowCreateAndSetMaterialInstanceConstant, &NowCreateAndSetMaterialInstanceConstant_Parms, NULL );

	return NowCreateAndSetMaterialInstanceConstant_Parms.ReturnValue;
};

// Function NowGame.NowPawn.SpawnProjectileEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 arrowLocation                  ( CPF_Parm )

void ANowPawn::eventSpawnProjectileEffect ( struct FVector arrowLocation )
{
	static UFunction* pFnSpawnProjectileEffect = NULL;

	if ( ! pFnSpawnProjectileEffect )
		pFnSpawnProjectileEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SpawnProjectileEffect" );

	ANowPawn_eventSpawnProjectileEffect_Parms SpawnProjectileEffect_Parms;
	memcpy ( &SpawnProjectileEffect_Parms.arrowLocation, &arrowLocation, 0xC );

	this->ProcessEvent ( pFnSpawnProjectileEffect, &SpawnProjectileEffect_Parms, NULL );
};

// Function NowGame.NowPawn.TestForInterrupt
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::eventTestForInterrupt ( )
{
	static UFunction* pFnTestForInterrupt = NULL;

	if ( ! pFnTestForInterrupt )
		pFnTestForInterrupt = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.TestForInterrupt" );

	ANowPawn_eventTestForInterrupt_Parms TestForInterrupt_Parms;

	this->ProcessEvent ( pFnTestForInterrupt, &TestForInterrupt_Parms, NULL );

	return TestForInterrupt_Parms.ReturnValue;
};

// Function NowGame.NowPawn.UpdateWeaponStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventUpdateWeaponStats ( )
{
	static UFunction* pFnUpdateWeaponStats = NULL;

	if ( ! pFnUpdateWeaponStats )
		pFnUpdateWeaponStats = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.UpdateWeaponStats" );

	ANowPawn_eventUpdateWeaponStats_Parms UpdateWeaponStats_Parms;

	this->ProcessEvent ( pFnUpdateWeaponStats, &UpdateWeaponStats_Parms, NULL );
};

// Function NowGame.NowPawn.FindAndCacheNodes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventFindAndCacheNodes ( )
{
	static UFunction* pFnFindAndCacheNodes = NULL;

	if ( ! pFnFindAndCacheNodes )
		pFnFindAndCacheNodes = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.FindAndCacheNodes" );

	ANowPawn_eventFindAndCacheNodes_Parms FindAndCacheNodes_Parms;

	this->ProcessEvent ( pFnFindAndCacheNodes, &FindAndCacheNodes_Parms, NULL );
};

// Function NowGame.NowPawn.ResetAnimations
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventResetAnimations ( )
{
	static UFunction* pFnResetAnimations = NULL;

	if ( ! pFnResetAnimations )
		pFnResetAnimations = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.ResetAnimations" );

	ANowPawn_eventResetAnimations_Parms ResetAnimations_Parms;

	this->ProcessEvent ( pFnResetAnimations, &ResetAnimations_Parms, NULL );
};

// Function NowGame.NowPawn.GetAnimNodePointers
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// int                            WhatType                       ( CPF_Parm )
// class UAnimNodePlayCustomAnim* AnimNode                       ( CPF_Parm | CPF_OutParm )
// class UAnimNodeSequence*       AnimSeq                        ( CPF_Parm | CPF_OutParm )

void ANowPawn::eventGetAnimNodePointers ( int WhatType, class UAnimNodePlayCustomAnim** AnimNode, class UAnimNodeSequence** AnimSeq )
{
	static UFunction* pFnGetAnimNodePointers = NULL;

	if ( ! pFnGetAnimNodePointers )
		pFnGetAnimNodePointers = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetAnimNodePointers" );

	ANowPawn_eventGetAnimNodePointers_Parms GetAnimNodePointers_Parms;
	GetAnimNodePointers_Parms.WhatType = WhatType;

	this->ProcessEvent ( pFnGetAnimNodePointers, &GetAnimNodePointers_Parms, NULL );

	if ( AnimNode )
		*AnimNode = GetAnimNodePointers_Parms.AnimNode;

	if ( AnimSeq )
		*AnimSeq = GetAnimNodePointers_Parms.AnimSeq;
};

// Function NowGame.NowPawn.GetMount
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarAiDynamicMount* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarAiDynamicMount* ANowPawn::eventGetMount ( )
{
	static UFunction* pFnGetMount = NULL;

	if ( ! pFnGetMount )
		pFnGetMount = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetMount" );

	ANowPawn_eventGetMount_Parms GetMount_Parms;

	this->ProcessEvent ( pFnGetMount, &GetMount_Parms, NULL );

	return GetMount_Parms.ReturnValue;
};

// Function NowGame.NowPawn.PlayGetUpCustom
// [0x00020002] 
// Parameters infos:

void ANowPawn::PlayGetUpCustom ( )
{
	static UFunction* pFnPlayGetUpCustom = NULL;

	if ( ! pFnPlayGetUpCustom )
		pFnPlayGetUpCustom = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PlayGetUpCustom" );

	ANowPawn_execPlayGetUpCustom_Parms PlayGetUpCustom_Parms;

	this->ProcessEvent ( pFnPlayGetUpCustom, &PlayGetUpCustom_Parms, NULL );
};

// Function NowGame.NowPawn.TurnOffCustomAnims
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventTurnOffCustomAnims ( )
{
	static UFunction* pFnTurnOffCustomAnims = NULL;

	if ( ! pFnTurnOffCustomAnims )
		pFnTurnOffCustomAnims = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.TurnOffCustomAnims" );

	ANowPawn_eventTurnOffCustomAnims_Parms TurnOffCustomAnims_Parms;

	this->ProcessEvent ( pFnTurnOffCustomAnims, &TurnOffCustomAnims_Parms, NULL );
};

// Function NowGame.NowPawn.SetFemaleCommonSounds
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventSetFemaleCommonSounds ( )
{
	static UFunction* pFnSetFemaleCommonSounds = NULL;

	if ( ! pFnSetFemaleCommonSounds )
		pFnSetFemaleCommonSounds = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetFemaleCommonSounds" );

	ANowPawn_eventSetFemaleCommonSounds_Parms SetFemaleCommonSounds_Parms;

	this->ProcessEvent ( pFnSetFemaleCommonSounds, &SetFemaleCommonSounds_Parms, NULL );
};

// Function NowGame.NowPawn.PendingGetAndCreateWeapons
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventPendingGetAndCreateWeapons ( )
{
	static UFunction* pFnPendingGetAndCreateWeapons = NULL;

	if ( ! pFnPendingGetAndCreateWeapons )
		pFnPendingGetAndCreateWeapons = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PendingGetAndCreateWeapons" );

	ANowPawn_eventPendingGetAndCreateWeapons_Parms PendingGetAndCreateWeapons_Parms;

	this->ProcessEvent ( pFnPendingGetAndCreateWeapons, &PendingGetAndCreateWeapons_Parms, NULL );
};

// Function NowGame.NowPawn.PendingUpdateCharacterFace
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventPendingUpdateCharacterFace ( )
{
	static UFunction* pFnPendingUpdateCharacterFace = NULL;

	if ( ! pFnPendingUpdateCharacterFace )
		pFnPendingUpdateCharacterFace = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PendingUpdateCharacterFace" );

	ANowPawn_eventPendingUpdateCharacterFace_Parms PendingUpdateCharacterFace_Parms;

	this->ProcessEvent ( pFnPendingUpdateCharacterFace, &PendingUpdateCharacterFace_Parms, NULL );
};

// Function NowGame.NowPawn.PendingGetAndSetState
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventPendingGetAndSetState ( )
{
	static UFunction* pFnPendingGetAndSetState = NULL;

	if ( ! pFnPendingGetAndSetState )
		pFnPendingGetAndSetState = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PendingGetAndSetState" );

	ANowPawn_eventPendingGetAndSetState_Parms PendingGetAndSetState_Parms;

	this->ProcessEvent ( pFnPendingGetAndSetState, &PendingGetAndSetState_Parms, NULL );
};

// Function NowGame.NowPawn.PendingGetAndSetAnimations
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventPendingGetAndSetAnimations ( )
{
	static UFunction* pFnPendingGetAndSetAnimations = NULL;

	if ( ! pFnPendingGetAndSetAnimations )
		pFnPendingGetAndSetAnimations = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PendingGetAndSetAnimations" );

	ANowPawn_eventPendingGetAndSetAnimations_Parms PendingGetAndSetAnimations_Parms;

	this->ProcessEvent ( pFnPendingGetAndSetAnimations, &PendingGetAndSetAnimations_Parms, NULL );
};

// Function NowGame.NowPawn.MagicFizzle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventMagicFizzle ( )
{
	static UFunction* pFnMagicFizzle = NULL;

	if ( ! pFnMagicFizzle )
		pFnMagicFizzle = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.MagicFizzle" );

	ANowPawn_eventMagicFizzle_Parms MagicFizzle_Parms;

	this->ProcessEvent ( pFnMagicFizzle, &MagicFizzle_Parms, NULL );
};

// Function NowGame.NowPawn.MagicSelfRelease
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventMagicSelfRelease ( )
{
	static UFunction* pFnMagicSelfRelease = NULL;

	if ( ! pFnMagicSelfRelease )
		pFnMagicSelfRelease = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.MagicSelfRelease" );

	ANowPawn_eventMagicSelfRelease_Parms MagicSelfRelease_Parms;

	this->ProcessEvent ( pFnMagicSelfRelease, &MagicSelfRelease_Parms, NULL );
};

// Function NowGame.NowPawn.MagicRelease
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventMagicRelease ( )
{
	static UFunction* pFnMagicRelease = NULL;

	if ( ! pFnMagicRelease )
		pFnMagicRelease = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.MagicRelease" );

	ANowPawn_eventMagicRelease_Parms MagicRelease_Parms;

	this->ProcessEvent ( pFnMagicRelease, &MagicRelease_Parms, NULL );
};

// Function NowGame.NowPawn.SetCurrentSpell
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            newValue                       ( CPF_Parm )

void ANowPawn::eventSetCurrentSpell ( int newValue )
{
	static UFunction* pFnSetCurrentSpell = NULL;

	if ( ! pFnSetCurrentSpell )
		pFnSetCurrentSpell = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetCurrentSpell" );

	ANowPawn_eventSetCurrentSpell_Parms SetCurrentSpell_Parms;
	SetCurrentSpell_Parms.newValue = newValue;

	this->ProcessEvent ( pFnSetCurrentSpell, &SetCurrentSpell_Parms, NULL );
};

// Function NowGame.NowPawn.Invisible
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  On                             ( CPF_Parm )

void ANowPawn::eventInvisible ( unsigned long On )
{
	static UFunction* pFnInvisible = NULL;

	if ( ! pFnInvisible )
		pFnInvisible = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.Invisible" );

	ANowPawn_eventInvisible_Parms Invisible_Parms;
	Invisible_Parms.On = On;

	this->ProcessEvent ( pFnInvisible, &Invisible_Parms, NULL );
};

// Function NowGame.NowPawn.GMPawnInit
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            InitEnum                       ( CPF_Parm )
// int                            InitType                       ( CPF_Parm )

void ANowPawn::eventGMPawnInit ( int InitEnum, int InitType )
{
	static UFunction* pFnGMPawnInit = NULL;

	if ( ! pFnGMPawnInit )
		pFnGMPawnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GMPawnInit" );

	ANowPawn_eventGMPawnInit_Parms GMPawnInit_Parms;
	GMPawnInit_Parms.InitEnum = InitEnum;
	GMPawnInit_Parms.InitType = InitType;

	this->ProcessEvent ( pFnGMPawnInit, &GMPawnInit_Parms, NULL );
};

// Function NowGame.NowPawn.PawnSkelMeshCompOnParticleSystemFinished
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void ANowPawn::PawnSkelMeshCompOnParticleSystemFinished ( class UParticleSystemComponent* PSC )
{
	static UFunction* pFnPawnSkelMeshCompOnParticleSystemFinished = NULL;

	if ( ! pFnPawnSkelMeshCompOnParticleSystemFinished )
		pFnPawnSkelMeshCompOnParticleSystemFinished = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PawnSkelMeshCompOnParticleSystemFinished" );

	ANowPawn_execPawnSkelMeshCompOnParticleSystemFinished_Parms PawnSkelMeshCompOnParticleSystemFinished_Parms;
	PawnSkelMeshCompOnParticleSystemFinished_Parms.PSC = PSC;

	this->ProcessEvent ( pFnPawnSkelMeshCompOnParticleSystemFinished, &PawnSkelMeshCompOnParticleSystemFinished_Parms, NULL );
};

// Function NowGame.NowPawn.PlayIndexedParticleEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UAnimNotify_PlayIndexedParticleEffect* AnimNotifyData                 ( CPF_Const | CPF_Parm )

void ANowPawn::eventPlayIndexedParticleEffect ( class UAnimNotify_PlayIndexedParticleEffect* AnimNotifyData )
{
	static UFunction* pFnPlayIndexedParticleEffect = NULL;

	if ( ! pFnPlayIndexedParticleEffect )
		pFnPlayIndexedParticleEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PlayIndexedParticleEffect" );

	ANowPawn_eventPlayIndexedParticleEffect_Parms PlayIndexedParticleEffect_Parms;
	PlayIndexedParticleEffect_Parms.AnimNotifyData = AnimNotifyData;

	this->ProcessEvent ( pFnPlayIndexedParticleEffect, &PlayIndexedParticleEffect_Parms, NULL );
};

// Function NowGame.NowPawn.spellSelfRelease
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventspellSelfRelease ( )
{
	static UFunction* pFnspellSelfRelease = NULL;

	if ( ! pFnspellSelfRelease )
		pFnspellSelfRelease = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.spellSelfRelease" );

	ANowPawn_eventspellSelfRelease_Parms spellSelfRelease_Parms;

	this->ProcessEvent ( pFnspellSelfRelease, &spellSelfRelease_Parms, NULL );
};

// Function NowGame.NowPawn.RemoveCapeActor
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventRemoveCapeActor ( )
{
	static UFunction* pFnRemoveCapeActor = NULL;

	if ( ! pFnRemoveCapeActor )
		pFnRemoveCapeActor = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.RemoveCapeActor" );

	ANowPawn_eventRemoveCapeActor_Parms RemoveCapeActor_Parms;

	this->ProcessEvent ( pFnRemoveCapeActor, &RemoveCapeActor_Parms, NULL );
};

// Function NowGame.NowPawn.SetCapeActor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class USkeletalMesh*           NewMesh                        ( CPF_Parm )
// class UPhysicsAsset*           NewPhys                        ( CPF_Parm )

void ANowPawn::eventSetCapeActor ( class USkeletalMesh* NewMesh, class UPhysicsAsset* NewPhys )
{
	static UFunction* pFnSetCapeActor = NULL;

	if ( ! pFnSetCapeActor )
		pFnSetCapeActor = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetCapeActor" );

	ANowPawn_eventSetCapeActor_Parms SetCapeActor_Parms;
	SetCapeActor_Parms.NewMesh = NewMesh;
	SetCapeActor_Parms.NewPhys = NewPhys;

	this->ProcessEvent ( pFnSetCapeActor, &SetCapeActor_Parms, NULL );
};

// Function NowGame.NowPawn.HideRangedBone
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventHideRangedBone ( )
{
	static UFunction* pFnHideRangedBone = NULL;

	if ( ! pFnHideRangedBone )
		pFnHideRangedBone = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.HideRangedBone" );

	ANowPawn_eventHideRangedBone_Parms HideRangedBone_Parms;

	this->ProcessEvent ( pFnHideRangedBone, &HideRangedBone_Parms, NULL );
};

// Function NowGame.NowPawn.ShowRangedBone
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventShowRangedBone ( )
{
	static UFunction* pFnShowRangedBone = NULL;

	if ( ! pFnShowRangedBone )
		pFnShowRangedBone = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.ShowRangedBone" );

	ANowPawn_eventShowRangedBone_Parms ShowRangedBone_Parms;

	this->ProcessEvent ( pFnShowRangedBone, &ShowRangedBone_Parms, NULL );
};

// Function NowGame.NowPawn.PendingGetArmorColors
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventPendingGetArmorColors ( )
{
	static UFunction* pFnPendingGetArmorColors = NULL;

	if ( ! pFnPendingGetArmorColors )
		pFnPendingGetArmorColors = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PendingGetArmorColors" );

	ANowPawn_eventPendingGetArmorColors_Parms PendingGetArmorColors_Parms;

	this->ProcessEvent ( pFnPendingGetArmorColors, &PendingGetArmorColors_Parms, NULL );
};

// Function NowGame.NowPawn.PendingGetAndSetMount
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bStart                         ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventPendingGetAndSetMount ( unsigned long bStart )
{
	static UFunction* pFnPendingGetAndSetMount = NULL;

	if ( ! pFnPendingGetAndSetMount )
		pFnPendingGetAndSetMount = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PendingGetAndSetMount" );

	ANowPawn_eventPendingGetAndSetMount_Parms PendingGetAndSetMount_Parms;
	PendingGetAndSetMount_Parms.bStart = bStart;

	this->ProcessEvent ( pFnPendingGetAndSetMount, &PendingGetAndSetMount_Parms, NULL );
};

// Function NowGame.NowPawn.ReAddMe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventReAddMe ( )
{
	static UFunction* pFnReAddMe = NULL;

	if ( ! pFnReAddMe )
		pFnReAddMe = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.ReAddMe" );

	ANowPawn_eventReAddMe_Parms ReAddMe_Parms;

	this->ProcessEvent ( pFnReAddMe, &ReAddMe_Parms, NULL );
};

// Function NowGame.NowPawn.SetTraceTime
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          NewLength                      ( CPF_Parm )
// float                          NewMiddle                      ( CPF_Parm )
// unsigned long                  bCombatMove                    ( CPF_Parm )

void ANowPawn::eventSetTraceTime ( float NewLength, float NewMiddle, unsigned long bCombatMove )
{
	static UFunction* pFnSetTraceTime = NULL;

	if ( ! pFnSetTraceTime )
		pFnSetTraceTime = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetTraceTime" );

	ANowPawn_eventSetTraceTime_Parms SetTraceTime_Parms;
	SetTraceTime_Parms.NewLength = NewLength;
	SetTraceTime_Parms.NewMiddle = NewMiddle;
	SetTraceTime_Parms.bCombatMove = bCombatMove;

	this->ProcessEvent ( pFnSetTraceTime, &SetTraceTime_Parms, NULL );
};

// Function NowGame.NowPawn.SetBowMinDrawDistance
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          NewMinChargeTime               ( CPF_Parm )

void ANowPawn::eventSetBowMinDrawDistance ( float NewMinChargeTime )
{
	static UFunction* pFnSetBowMinDrawDistance = NULL;

	if ( ! pFnSetBowMinDrawDistance )
		pFnSetBowMinDrawDistance = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetBowMinDrawDistance" );

	ANowPawn_eventSetBowMinDrawDistance_Parms SetBowMinDrawDistance_Parms;
	SetBowMinDrawDistance_Parms.NewMinChargeTime = NewMinChargeTime;

	this->ProcessEvent ( pFnSetBowMinDrawDistance, &SetBowMinDrawDistance_Parms, NULL );
};

// Function NowGame.NowPawn.SetBlockingState
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            WhatState                      ( CPF_Parm )

void ANowPawn::eventSetBlockingState ( int WhatState )
{
	static UFunction* pFnSetBlockingState = NULL;

	if ( ! pFnSetBlockingState )
		pFnSetBlockingState = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetBlockingState" );

	ANowPawn_eventSetBlockingState_Parms SetBlockingState_Parms;
	SetBlockingState_Parms.WhatState = WhatState;

	this->ProcessEvent ( pFnSetBlockingState, &SetBlockingState_Parms, NULL );
};

// Function NowGame.NowPawn.RemoveMount
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowPawn::eventRemoveMount ( )
{
	static UFunction* pFnRemoveMount = NULL;

	if ( ! pFnRemoveMount )
		pFnRemoveMount = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.RemoveMount" );

	ANowPawn_eventRemoveMount_Parms RemoveMount_Parms;

	this->ProcessEvent ( pFnRemoveMount, &RemoveMount_Parms, NULL );
};

// Function NowGame.NowPawn.CreateMount
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ContentInfo                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bInit                          ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::eventCreateMount ( struct FString ContentInfo, struct FString DisplayName, unsigned long bInit )
{
	static UFunction* pFnCreateMount = NULL;

	if ( ! pFnCreateMount )
		pFnCreateMount = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.CreateMount" );

	ANowPawn_eventCreateMount_Parms CreateMount_Parms;
	memcpy ( &CreateMount_Parms.ContentInfo, &ContentInfo, 0xC );
	memcpy ( &CreateMount_Parms.DisplayName, &DisplayName, 0xC );
	CreateMount_Parms.bInit = bInit;

	this->ProcessEvent ( pFnCreateMount, &CreateMount_Parms, NULL );
};

// Function NowGame.NowPawn.SavePendingSwing
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 whatSwing                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowPawn::eventSavePendingSwing ( struct FString whatSwing )
{
	static UFunction* pFnSavePendingSwing = NULL;

	if ( ! pFnSavePendingSwing )
		pFnSavePendingSwing = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SavePendingSwing" );

	ANowPawn_eventSavePendingSwing_Parms SavePendingSwing_Parms;
	memcpy ( &SavePendingSwing_Parms.whatSwing, &whatSwing, 0xC );

	this->ProcessEvent ( pFnSavePendingSwing, &SavePendingSwing_Parms, NULL );
};

// Function NowGame.NowPawn.CloseResurrectSceneTimer
// [0x00020002] 
// Parameters infos:

void ANowPawn::CloseResurrectSceneTimer ( )
{
	static UFunction* pFnCloseResurrectSceneTimer = NULL;

	if ( ! pFnCloseResurrectSceneTimer )
		pFnCloseResurrectSceneTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.CloseResurrectSceneTimer" );

	ANowPawn_execCloseResurrectSceneTimer_Parms CloseResurrectSceneTimer_Parms;

	this->ProcessEvent ( pFnCloseResurrectSceneTimer, &CloseResurrectSceneTimer_Parms, NULL );
};

// Function NowGame.NowPawn.SetCloseResurrectSceneTimer
// [0x00020002] 
// Parameters infos:
// float                          Timer                          ( CPF_Parm )

void ANowPawn::SetCloseResurrectSceneTimer ( float Timer )
{
	static UFunction* pFnSetCloseResurrectSceneTimer = NULL;

	if ( ! pFnSetCloseResurrectSceneTimer )
		pFnSetCloseResurrectSceneTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetCloseResurrectSceneTimer" );

	ANowPawn_execSetCloseResurrectSceneTimer_Parms SetCloseResurrectSceneTimer_Parms;
	SetCloseResurrectSceneTimer_Parms.Timer = Timer;

	this->ProcessEvent ( pFnSetCloseResurrectSceneTimer, &SetCloseResurrectSceneTimer_Parms, NULL );
};

// Function NowGame.NowPawn.SetResurrectPosition
// [0x00020002] 
// Parameters infos:

void ANowPawn::SetResurrectPosition ( )
{
	static UFunction* pFnSetResurrectPosition = NULL;

	if ( ! pFnSetResurrectPosition )
		pFnSetResurrectPosition = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetResurrectPosition" );

	ANowPawn_execSetResurrectPosition_Parms SetResurrectPosition_Parms;

	this->ProcessEvent ( pFnSetResurrectPosition, &SetResurrectPosition_Parms, NULL );
};

// Function NowGame.NowPawn.CheckResDistance
// [0x00020002] 
// Parameters infos:

void ANowPawn::CheckResDistance ( )
{
	static UFunction* pFnCheckResDistance = NULL;

	if ( ! pFnCheckResDistance )
		pFnCheckResDistance = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.CheckResDistance" );

	ANowPawn_execCheckResDistance_Parms CheckResDistance_Parms;

	this->ProcessEvent ( pFnCheckResDistance, &CheckResDistance_Parms, NULL );
};

// Function NowGame.NowPawn.ClearResDistCheckTimer
// [0x00020002] 
// Parameters infos:

void ANowPawn::ClearResDistCheckTimer ( )
{
	static UFunction* pFnClearResDistCheckTimer = NULL;

	if ( ! pFnClearResDistCheckTimer )
		pFnClearResDistCheckTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.ClearResDistCheckTimer" );

	ANowPawn_execClearResDistCheckTimer_Parms ClearResDistCheckTimer_Parms;

	this->ProcessEvent ( pFnClearResDistCheckTimer, &ClearResDistCheckTimer_Parms, NULL );
};

// Function NowGame.NowPawn.UpdateWeatherAwarenessData
// [0x00820002] 
// Parameters infos:

void ANowPawn::UpdateWeatherAwarenessData ( )
{
	static UFunction* pFnUpdateWeatherAwarenessData = NULL;

	if ( ! pFnUpdateWeatherAwarenessData )
		pFnUpdateWeatherAwarenessData = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.UpdateWeatherAwarenessData" );

	ANowPawn_execUpdateWeatherAwarenessData_Parms UpdateWeatherAwarenessData_Parms;

	this->ProcessEvent ( pFnUpdateWeatherAwarenessData, &UpdateWeatherAwarenessData_Parms, NULL );
};

// Function NowGame.NowPawn.InitWeatherAwarenssUpdateLoop
// [0x00020002] 
// Parameters infos:

void ANowPawn::InitWeatherAwarenssUpdateLoop ( )
{
	static UFunction* pFnInitWeatherAwarenssUpdateLoop = NULL;

	if ( ! pFnInitWeatherAwarenssUpdateLoop )
		pFnInitWeatherAwarenssUpdateLoop = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.InitWeatherAwarenssUpdateLoop" );

	ANowPawn_execInitWeatherAwarenssUpdateLoop_Parms InitWeatherAwarenssUpdateLoop_Parms;

	this->ProcessEvent ( pFnInitWeatherAwarenssUpdateLoop, &InitWeatherAwarenssUpdateLoop_Parms, NULL );
};

// Function NowGame.NowPawn.TerminateWeatherAwarenssUpdateLoop
// [0x00020002] 
// Parameters infos:

void ANowPawn::TerminateWeatherAwarenssUpdateLoop ( )
{
	static UFunction* pFnTerminateWeatherAwarenssUpdateLoop = NULL;

	if ( ! pFnTerminateWeatherAwarenssUpdateLoop )
		pFnTerminateWeatherAwarenssUpdateLoop = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.TerminateWeatherAwarenssUpdateLoop" );

	ANowPawn_execTerminateWeatherAwarenssUpdateLoop_Parms TerminateWeatherAwarenssUpdateLoop_Parms;

	this->ProcessEvent ( pFnTerminateWeatherAwarenssUpdateLoop, &TerminateWeatherAwarenssUpdateLoop_Parms, NULL );
};

// Function NowGame.NowPawn.getGUISetting
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 guiToFetch                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            whichSetting                   ( CPF_Parm )

struct FString ANowPawn::getGUISetting ( struct FString guiToFetch, int whichSetting )
{
	static UFunction* pFngetGUISetting = NULL;

	if ( ! pFngetGUISetting )
		pFngetGUISetting = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.getGUISetting" );

	ANowPawn_execgetGUISetting_Parms getGUISetting_Parms;
	memcpy ( &getGUISetting_Parms.guiToFetch, &guiToFetch, 0xC );
	getGUISetting_Parms.whichSetting = whichSetting;

	this->ProcessEvent ( pFngetGUISetting, &getGUISetting_Parms, NULL );

	return getGUISetting_Parms.ReturnValue;
};

// Function NowGame.NowPawn.receiveUpdatedGUISettings
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 updatedSettingString           ( CPF_Parm | CPF_NeedCtorLink )

void ANowPawn::eventreceiveUpdatedGUISettings ( struct FString updatedSettingString )
{
	static UFunction* pFnreceiveUpdatedGUISettings = NULL;

	if ( ! pFnreceiveUpdatedGUISettings )
		pFnreceiveUpdatedGUISettings = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.receiveUpdatedGUISettings" );

	ANowPawn_eventreceiveUpdatedGUISettings_Parms receiveUpdatedGUISettings_Parms;
	memcpy ( &receiveUpdatedGUISettings_Parms.updatedSettingString, &updatedSettingString, 0xC );

	this->ProcessEvent ( pFnreceiveUpdatedGUISettings, &receiveUpdatedGUISettings_Parms, NULL );
};

// Function NowGame.NowPawn.GetGFXHud
// [0x00020002] 
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* ANowPawn::GetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetGFXHud" );

	ANowPawn_execGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.NowPawn.Detected
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::Detected ( )
{
	static UFunction* pFnDetected = NULL;

	if ( ! pFnDetected )
		pFnDetected = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.Detected" );

	ANowPawn_execDetected_Parms Detected_Parms;

	pFnDetected->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDetected, &Detected_Parms, NULL );

	pFnDetected->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.ReInitGmPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::ReInitGmPawn ( )
{
	static UFunction* pFnReInitGmPawn = NULL;

	if ( ! pFnReInitGmPawn )
		pFnReInitGmPawn = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.ReInitGmPawn" );

	ANowPawn_execReInitGmPawn_Parms ReInitGmPawn_Parms;

	pFnReInitGmPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReInitGmPawn, &ReInitGmPawn_Parms, NULL );

	pFnReInitGmPawn->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.PlayerInit
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            InitEnum                       ( CPF_Parm )

void ANowPawn::PlayerInit ( int InitEnum )
{
	static UFunction* pFnPlayerInit = NULL;

	if ( ! pFnPlayerInit )
		pFnPlayerInit = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PlayerInit" );

	ANowPawn_execPlayerInit_Parms PlayerInit_Parms;
	PlayerInit_Parms.InitEnum = InitEnum;

	pFnPlayerInit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayerInit, &PlayerInit_Parms, NULL );

	pFnPlayerInit->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SetGroundSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          New                            ( CPF_Parm )

	static UFunction* pFnSetGroundSpeed = NULL;
void ANowPawn::SetGroundSpeed ( float New )
{

	if ( ! pFnSetGroundSpeed )
		pFnSetGroundSpeed = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetGroundSpeed" );

	ANowPawn_execSetGroundSpeed_Parms SetGroundSpeed_Parms;
	SetGroundSpeed_Parms.New = New;

	pFnSetGroundSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGroundSpeed, &SetGroundSpeed_Parms, NULL );

	pFnSetGroundSpeed->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetAtlasType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowPawn::GetAtlasType ( )
{
	static UFunction* pFnGetAtlasType = NULL;

	if ( ! pFnGetAtlasType )
		pFnGetAtlasType = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetAtlasType" );

	ANowPawn_execGetAtlasType_Parms GetAtlasType_Parms;

	pFnGetAtlasType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasType, &GetAtlasType_Parms, NULL );

	pFnGetAtlasType->FunctionFlags |= 0x400;

	return GetAtlasType_Parms.ReturnValue;
};

// Function NowGame.NowPawn.IsPet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  aPawn                          ( CPF_Parm )

bool ANowPawn::IsPet ( class AActor* aPawn )
{
	static UFunction* pFnIsPet = NULL;

	if ( ! pFnIsPet )
		pFnIsPet = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.IsPet" );

	ANowPawn_execIsPet_Parms IsPet_Parms;
	IsPet_Parms.aPawn = aPawn;

	pFnIsPet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPet, &IsPet_Parms, NULL );

	pFnIsPet->FunctionFlags |= 0x400;

	return IsPet_Parms.ReturnValue;
};

// Function NowGame.NowPawn.HasDynamicPet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::HasDynamicPet ( )
{
	static UFunction* pFnHasDynamicPet = NULL;

	if ( ! pFnHasDynamicPet )
		pFnHasDynamicPet = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.HasDynamicPet" );

	ANowPawn_execHasDynamicPet_Parms HasDynamicPet_Parms;

	pFnHasDynamicPet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasDynamicPet, &HasDynamicPet_Parms, NULL );

	pFnHasDynamicPet->FunctionFlags |= 0x400;

	return HasDynamicPet_Parms.ReturnValue;
};

// Function NowGame.NowPawn.HasPet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::HasPet ( )
{
	static UFunction* pFnHasPet = NULL;

	if ( ! pFnHasPet )
		pFnHasPet = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.HasPet" );

	ANowPawn_execHasPet_Parms HasPet_Parms;

	pFnHasPet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasPet, &HasPet_Parms, NULL );

	pFnHasPet->FunctionFlags |= 0x400;

	return HasPet_Parms.ReturnValue;
};

// Function NowGame.NowPawn.addTitle
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sDisplayName                   ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bFormat                        ( CPF_Parm )
// int                            iTitle                         ( CPF_OptionalParm | CPF_Parm )

struct FString ANowPawn::addTitle ( struct FString sDisplayName, unsigned long bFormat, int iTitle )
{
	static UFunction* pFnaddTitle = NULL;

	if ( ! pFnaddTitle )
		pFnaddTitle = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.addTitle" );

	ANowPawn_execaddTitle_Parms addTitle_Parms;
	memcpy ( &addTitle_Parms.sDisplayName, &sDisplayName, 0xC );
	addTitle_Parms.bFormat = bFormat;
	addTitle_Parms.iTitle = iTitle;

	pFnaddTitle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnaddTitle, &addTitle_Parms, NULL );

	pFnaddTitle->FunctionFlags |= 0x400;

	return addTitle_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetBodyType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowPawn::GetBodyType ( )
{
	static UFunction* pFnGetBodyType = NULL;

	if ( ! pFnGetBodyType )
		pFnGetBodyType = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetBodyType" );

	ANowPawn_execGetBodyType_Parms GetBodyType_Parms;

	pFnGetBodyType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBodyType, &GetBodyType_Parms, NULL );

	pFnGetBodyType->FunctionFlags |= 0x400;

	return GetBodyType_Parms.ReturnValue;
};

// Function NowGame.NowPawn.IsInNoobGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::IsInNoobGuild ( )
{
	static UFunction* pFnIsInNoobGuild = NULL;

	if ( ! pFnIsInNoobGuild )
		pFnIsInNoobGuild = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.IsInNoobGuild" );

	ANowPawn_execIsInNoobGuild_Parms IsInNoobGuild_Parms;

	pFnIsInNoobGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInNoobGuild, &IsInNoobGuild_Parms, NULL );

	pFnIsInNoobGuild->FunctionFlags |= 0x400;

	return IsInNoobGuild_Parms.ReturnValue;
};

// Function NowGame.NowPawn.TriggerHandleAction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::TriggerHandleAction ( )
{
	static UFunction* pFnTriggerHandleAction = NULL;

	if ( ! pFnTriggerHandleAction )
		pFnTriggerHandleAction = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.TriggerHandleAction" );

	ANowPawn_execTriggerHandleAction_Parms TriggerHandleAction_Parms;

	pFnTriggerHandleAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerHandleAction, &TriggerHandleAction_Parms, NULL );

	pFnTriggerHandleAction->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetAndSetMount
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bInit                          ( CPF_OptionalParm | CPF_Parm )

bool ANowPawn::GetAndSetMount ( unsigned long bInit )
{
	static UFunction* pFnGetAndSetMount = NULL;

	if ( ! pFnGetAndSetMount )
		pFnGetAndSetMount = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetAndSetMount" );

	ANowPawn_execGetAndSetMount_Parms GetAndSetMount_Parms;
	GetAndSetMount_Parms.bInit = bInit;

	pFnGetAndSetMount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetMount, &GetAndSetMount_Parms, NULL );

	pFnGetAndSetMount->FunctionFlags |= 0x400;

	return GetAndSetMount_Parms.ReturnValue;
};

// Function NowGame.NowPawn.PlayClientAnimation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 WhatAction                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowPawn::PlayClientAnimation ( struct FString WhatAction )
{
	static UFunction* pFnPlayClientAnimation = NULL;

	if ( ! pFnPlayClientAnimation )
		pFnPlayClientAnimation = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.PlayClientAnimation" );

	ANowPawn_execPlayClientAnimation_Parms PlayClientAnimation_Parms;
	memcpy ( &PlayClientAnimation_Parms.WhatAction, &WhatAction, 0xC );

	pFnPlayClientAnimation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayClientAnimation, &PlayClientAnimation_Parms, NULL );

	pFnPlayClientAnimation->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetAndSetState
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bInitialUpdate                 ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::GetAndSetState ( unsigned long bInitialUpdate )
{
	static UFunction* pFnGetAndSetState = NULL;

	if ( ! pFnGetAndSetState )
		pFnGetAndSetState = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetAndSetState" );

	ANowPawn_execGetAndSetState_Parms GetAndSetState_Parms;
	GetAndSetState_Parms.bInitialUpdate = bInitialUpdate;

	pFnGetAndSetState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetState, &GetAndSetState_Parms, NULL );

	pFnGetAndSetState->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.InitSpecialWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UStaticMesh_ContentInfo* WhatInfo                       ( CPF_Parm )
// class ANowStaticMeshActorWeapon* WhatWeapon                     ( CPF_Parm )

void ANowPawn::InitSpecialWeapon ( class UStaticMesh_ContentInfo* WhatInfo, class ANowStaticMeshActorWeapon* WhatWeapon )
{
	static UFunction* pFnInitSpecialWeapon = NULL;

	if ( ! pFnInitSpecialWeapon )
		pFnInitSpecialWeapon = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.InitSpecialWeapon" );

	ANowPawn_execInitSpecialWeapon_Parms InitSpecialWeapon_Parms;
	InitSpecialWeapon_Parms.WhatInfo = WhatInfo;
	InitSpecialWeapon_Parms.WhatWeapon = WhatWeapon;

	pFnInitSpecialWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitSpecialWeapon, &InitSpecialWeapon_Parms, NULL );

	pFnInitSpecialWeapon->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetAndSetAnimations
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::GetAndSetAnimations ( )
{
	static UFunction* pFnGetAndSetAnimations = NULL;

	if ( ! pFnGetAndSetAnimations )
		pFnGetAndSetAnimations = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetAndSetAnimations" );

	ANowPawn_execGetAndSetAnimations_Parms GetAndSetAnimations_Parms;

	pFnGetAndSetAnimations->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetAnimations, &GetAndSetAnimations_Parms, NULL );

	pFnGetAndSetAnimations->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetAvatarIDIntString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowPawn::GetAvatarIDIntString ( )
{
	static UFunction* pFnGetAvatarIDIntString = NULL;

	if ( ! pFnGetAvatarIDIntString )
		pFnGetAvatarIDIntString = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetAvatarIDIntString" );

	ANowPawn_execGetAvatarIDIntString_Parms GetAvatarIDIntString_Parms;

	pFnGetAvatarIDIntString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAvatarIDIntString, &GetAvatarIDIntString_Parms, NULL );

	pFnGetAvatarIDIntString->FunctionFlags |= 0x400;

	return GetAvatarIDIntString_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetArmorEnc
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPawn::GetArmorEnc ( )
{
	static UFunction* pFnGetArmorEnc = NULL;

	if ( ! pFnGetArmorEnc )
		pFnGetArmorEnc = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetArmorEnc" );

	ANowPawn_execGetArmorEnc_Parms GetArmorEnc_Parms;

	pFnGetArmorEnc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetArmorEnc, &GetArmorEnc_Parms, NULL );

	pFnGetArmorEnc->FunctionFlags |= 0x400;

	return GetArmorEnc_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetAndSetAcronym
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::GetAndSetAcronym ( )
{
	static UFunction* pFnGetAndSetAcronym = NULL;

	if ( ! pFnGetAndSetAcronym )
		pFnGetAndSetAcronym = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetAndSetAcronym" );

	ANowPawn_execGetAndSetAcronym_Parms GetAndSetAcronym_Parms;

	pFnGetAndSetAcronym->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetAcronym, &GetAndSetAcronym_Parms, NULL );

	pFnGetAndSetAcronym->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetGuildFlag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pOther                         ( CPF_Parm )

	static UFunction* pFnGetGuildFlag = NULL;
int ANowPawn::GetGuildFlag ( class AActor* pOther )
{

	if ( ! pFnGetGuildFlag )
		pFnGetGuildFlag = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetGuildFlag" );

	ANowPawn_execGetGuildFlag_Parms GetGuildFlag_Parms;
	GetGuildFlag_Parms.pOther = pOther;

	pFnGetGuildFlag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuildFlag, &GetGuildFlag_Parms, NULL );

	pFnGetGuildFlag->FunctionFlags |= 0x400;

	return GetGuildFlag_Parms.ReturnValue;
};

// Function NowGame.NowPawn.ReinitWeapons
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::ReinitWeapons ( )
{
	static UFunction* pFnReinitWeapons = NULL;

	if ( ! pFnReinitWeapons )
		pFnReinitWeapons = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.ReinitWeapons" );

	ANowPawn_execReinitWeapons_Parms ReinitWeapons_Parms;

	pFnReinitWeapons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReinitWeapons, &ReinitWeapons_Parms, NULL );

	pFnReinitWeapons->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetAndCreateWeapons
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::GetAndCreateWeapons ( )
{
	static UFunction* pFnGetAndCreateWeapons = NULL;

	if ( ! pFnGetAndCreateWeapons )
		pFnGetAndCreateWeapons = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetAndCreateWeapons" );

	ANowPawn_execGetAndCreateWeapons_Parms GetAndCreateWeapons_Parms;

	pFnGetAndCreateWeapons->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndCreateWeapons, &GetAndCreateWeapons_Parms, NULL );

	pFnGetAndCreateWeapons->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.UpdateCharacterFace
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::UpdateCharacterFace ( )
{
	static UFunction* pFnUpdateCharacterFace = NULL;

	if ( ! pFnUpdateCharacterFace )
		pFnUpdateCharacterFace = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.UpdateCharacterFace" );

	ANowPawn_execUpdateCharacterFace_Parms UpdateCharacterFace_Parms;

	pFnUpdateCharacterFace->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCharacterFace, &UpdateCharacterFace_Parms, NULL );

	pFnUpdateCharacterFace->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.TriggerDelayedArmorUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::TriggerDelayedArmorUpdate ( )
{
	static UFunction* pFnTriggerDelayedArmorUpdate = NULL;

	if ( ! pFnTriggerDelayedArmorUpdate )
		pFnTriggerDelayedArmorUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.TriggerDelayedArmorUpdate" );

	ANowPawn_execTriggerDelayedArmorUpdate_Parms TriggerDelayedArmorUpdate_Parms;

	pFnTriggerDelayedArmorUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerDelayedArmorUpdate, &TriggerDelayedArmorUpdate_Parms, NULL );

	pFnTriggerDelayedArmorUpdate->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.UpdateCharacterArmorColors
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::UpdateCharacterArmorColors ( )
{
	static UFunction* pFnUpdateCharacterArmorColors = NULL;

	if ( ! pFnUpdateCharacterArmorColors )
		pFnUpdateCharacterArmorColors = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.UpdateCharacterArmorColors" );

	ANowPawn_execUpdateCharacterArmorColors_Parms UpdateCharacterArmorColors_Parms;

	pFnUpdateCharacterArmorColors->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCharacterArmorColors, &UpdateCharacterArmorColors_Parms, NULL );

	pFnUpdateCharacterArmorColors->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.UpdateCharacterArmor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::UpdateCharacterArmor ( )
{
	static UFunction* pFnUpdateCharacterArmor = NULL;

	if ( ! pFnUpdateCharacterArmor )
		pFnUpdateCharacterArmor = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.UpdateCharacterArmor" );

	ANowPawn_execUpdateCharacterArmor_Parms UpdateCharacterArmor_Parms;

	pFnUpdateCharacterArmor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCharacterArmor, &UpdateCharacterArmor_Parms, NULL );

	pFnUpdateCharacterArmor->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetDisplayName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowPawn::GetDisplayName ( )
{
	static UFunction* pFnGetDisplayName = NULL;

	if ( ! pFnGetDisplayName )
		pFnGetDisplayName = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetDisplayName" );

	ANowPawn_execGetDisplayName_Parms GetDisplayName_Parms;

	pFnGetDisplayName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayName, &GetDisplayName_Parms, NULL );

	pFnGetDisplayName->FunctionFlags |= 0x400;

	return GetDisplayName_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetAtlasFullName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowPawn::GetAtlasFullName ( )
{
	static UFunction* pFnGetAtlasFullName = NULL;

	if ( ! pFnGetAtlasFullName )
		pFnGetAtlasFullName = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetAtlasFullName" );

	ANowPawn_execGetAtlasFullName_Parms GetAtlasFullName_Parms;

	pFnGetAtlasFullName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasFullName, &GetAtlasFullName_Parms, NULL );

	pFnGetAtlasFullName->FunctionFlags |= 0x400;

	return GetAtlasFullName_Parms.ReturnValue;
};

// Function NowGame.NowPawn.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowPawn::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.AtlasUse" );

	ANowPawn_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowPawn.TakeClientDamage
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            HowMuch                        ( CPF_Parm )
// unsigned long                  bOption                        ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::TakeClientDamage ( int HowMuch, unsigned long bOption )
{
	static UFunction* pFnTakeClientDamage = NULL;

	if ( ! pFnTakeClientDamage )
		pFnTakeClientDamage = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.TakeClientDamage" );

	ANowPawn_execTakeClientDamage_Parms TakeClientDamage_Parms;
	TakeClientDamage_Parms.HowMuch = HowMuch;
	TakeClientDamage_Parms.bOption = bOption;

	pFnTakeClientDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTakeClientDamage, &TakeClientDamage_Parms, NULL );

	pFnTakeClientDamage->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.CheckForFalling
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowPawn::CheckForFalling ( float fDeltaTime )
{
	static UFunction* pFnCheckForFalling = NULL;

	if ( ! pFnCheckForFalling )
		pFnCheckForFalling = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.CheckForFalling" );

	ANowPawn_execCheckForFalling_Parms CheckForFalling_Parms;
	CheckForFalling_Parms.fDeltaTime = fDeltaTime;

	pFnCheckForFalling->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckForFalling, &CheckForFalling_Parms, NULL );

	pFnCheckForFalling->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SetBodyPitch
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            NewRemoteViewPitch             ( CPF_Parm )

void ANowPawn::SetBodyPitch ( int NewRemoteViewPitch )
{
	static UFunction* pFnSetBodyPitch = NULL;

	if ( ! pFnSetBodyPitch )
		pFnSetBodyPitch = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetBodyPitch" );

	ANowPawn_execSetBodyPitch_Parms SetBodyPitch_Parms;
	SetBodyPitch_Parms.NewRemoteViewPitch = NewRemoteViewPitch;

	pFnSetBodyPitch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBodyPitch, &SetBodyPitch_Parms, NULL );

	pFnSetBodyPitch->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SetAwareDist
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            newDistance                    ( CPF_Parm )

void ANowPawn::SetAwareDist ( int newDistance )
{
	static UFunction* pFnSetAwareDist = NULL;

	if ( ! pFnSetAwareDist )
		pFnSetAwareDist = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SetAwareDist" );

	ANowPawn_execSetAwareDist_Parms SetAwareDist_Parms;
	SetAwareDist_Parms.newDistance = newDistance;

	pFnSetAwareDist->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAwareDist, &SetAwareDist_Parms, NULL );

	pFnSetAwareDist->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.Emote
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 WhatEmote                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowPawn::Emote ( struct FString WhatEmote )
{
	static UFunction* pFnEmote = NULL;

	if ( ! pFnEmote )
		pFnEmote = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.Emote" );

	ANowPawn_execEmote_Parms Emote_Parms;
	memcpy ( &Emote_Parms.WhatEmote, &WhatEmote, 0xC );

	pFnEmote->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEmote, &Emote_Parms, NULL );

	pFnEmote->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoSebbePwns
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoSebbePwns ( )
{
	static UFunction* pFnDoSebbePwns = NULL;

	if ( ! pFnDoSebbePwns )
		pFnDoSebbePwns = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.DoSebbePwns" );

	ANowPawn_execDoSebbePwns_Parms DoSebbePwns_Parms;

	pFnDoSebbePwns->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSebbePwns, &DoSebbePwns_Parms, NULL );

	pFnDoSebbePwns->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoKillMe
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoKillMe ( )
{
	static UFunction* pFnDoKillMe = NULL;

	if ( ! pFnDoKillMe )
		pFnDoKillMe = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.DoKillMe" );

	ANowPawn_execDoKillMe_Parms DoKillMe_Parms;

	pFnDoKillMe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoKillMe, &DoKillMe_Parms, NULL );

	pFnDoKillMe->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoStartMagicBehavior
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoStartMagicBehavior ( )
{
	static UFunction* pFnDoStartMagicBehavior = NULL;

	if ( ! pFnDoStartMagicBehavior )
		pFnDoStartMagicBehavior = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.DoStartMagicBehavior" );

	ANowPawn_execDoStartMagicBehavior_Parms DoStartMagicBehavior_Parms;

	pFnDoStartMagicBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoStartMagicBehavior, &DoStartMagicBehavior_Parms, NULL );

	pFnDoStartMagicBehavior->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoSpellReleaseAoECheat
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoSpellReleaseAoECheat ( )
{
	static UFunction* pFnDoSpellReleaseAoECheat = NULL;

	if ( ! pFnDoSpellReleaseAoECheat )
		pFnDoSpellReleaseAoECheat = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.DoSpellReleaseAoECheat" );

	ANowPawn_execDoSpellReleaseAoECheat_Parms DoSpellReleaseAoECheat_Parms;

	pFnDoSpellReleaseAoECheat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSpellReleaseAoECheat, &DoSpellReleaseAoECheat_Parms, NULL );

	pFnDoSpellReleaseAoECheat->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoSpellReleaseAoE
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )
// int                            Z                              ( CPF_Parm )

void ANowPawn::DoSpellReleaseAoE ( int X, int Y, int Z )
{
	static UFunction* pFnDoSpellReleaseAoE = NULL;

	if ( ! pFnDoSpellReleaseAoE )
		pFnDoSpellReleaseAoE = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.DoSpellReleaseAoE" );

	ANowPawn_execDoSpellReleaseAoE_Parms DoSpellReleaseAoE_Parms;
	DoSpellReleaseAoE_Parms.X = X;
	DoSpellReleaseAoE_Parms.Y = Y;
	DoSpellReleaseAoE_Parms.Z = Z;

	pFnDoSpellReleaseAoE->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSpellReleaseAoE, &DoSpellReleaseAoE_Parms, NULL );

	pFnDoSpellReleaseAoE->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoSpellReleaseSelfST
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoSpellReleaseSelfST ( )
{
	static UFunction* pFnDoSpellReleaseSelfST = NULL;

	if ( ! pFnDoSpellReleaseSelfST )
		pFnDoSpellReleaseSelfST = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.DoSpellReleaseSelfST" );

	ANowPawn_execDoSpellReleaseSelfST_Parms DoSpellReleaseSelfST_Parms;

	pFnDoSpellReleaseSelfST->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSpellReleaseSelfST, &DoSpellReleaseSelfST_Parms, NULL );

	pFnDoSpellReleaseSelfST->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoSpellReleaseST
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  HitActor                       ( CPF_Parm )

void ANowPawn::DoSpellReleaseST ( class AActor* HitActor )
{
	static UFunction* pFnDoSpellReleaseST = NULL;

	if ( ! pFnDoSpellReleaseST )
		pFnDoSpellReleaseST = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.DoSpellReleaseST" );

	ANowPawn_execDoSpellReleaseST_Parms DoSpellReleaseST_Parms;
	DoSpellReleaseST_Parms.HitActor = HitActor;

	pFnDoSpellReleaseST->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSpellReleaseST, &DoSpellReleaseST_Parms, NULL );

	pFnDoSpellReleaseST->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoSpellCancelCharge
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoSpellCancelCharge ( )
{
	static UFunction* pFnDoSpellCancelCharge = NULL;

	if ( ! pFnDoSpellCancelCharge )
		pFnDoSpellCancelCharge = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.DoSpellCancelCharge" );

	ANowPawn_execDoSpellCancelCharge_Parms DoSpellCancelCharge_Parms;

	pFnDoSpellCancelCharge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSpellCancelCharge, &DoSpellCancelCharge_Parms, NULL );

	pFnDoSpellCancelCharge->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetSpellListSize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            magicSchool                    ( CPF_Parm )

int ANowPawn::GetSpellListSize ( int magicSchool )
{
	static UFunction* pFnGetSpellListSize = NULL;

	if ( ! pFnGetSpellListSize )
		pFnGetSpellListSize = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetSpellListSize" );

	ANowPawn_execGetSpellListSize_Parms GetSpellListSize_Parms;
	GetSpellListSize_Parms.magicSchool = magicSchool;

	pFnGetSpellListSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpellListSize, &GetSpellListSize_Parms, NULL );

	pFnGetSpellListSize->FunctionFlags |= 0x400;

	return GetSpellListSize_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetSpellBitArrayForSchool
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            magicSchool                    ( CPF_Parm )

int ANowPawn::GetSpellBitArrayForSchool ( int magicSchool )
{
	static UFunction* pFnGetSpellBitArrayForSchool = NULL;

	if ( ! pFnGetSpellBitArrayForSchool )
		pFnGetSpellBitArrayForSchool = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetSpellBitArrayForSchool" );

	ANowPawn_execGetSpellBitArrayForSchool_Parms GetSpellBitArrayForSchool_Parms;
	GetSpellBitArrayForSchool_Parms.magicSchool = magicSchool;

	pFnGetSpellBitArrayForSchool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpellBitArrayForSchool, &GetSpellBitArrayForSchool_Parms, NULL );

	pFnGetSpellBitArrayForSchool->FunctionFlags |= 0x400;

	return GetSpellBitArrayForSchool_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetSpellContentInfoOfSchool
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USpellEffect_ContentInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SpellID                        ( CPF_Parm )
// int                            magicSchool                    ( CPF_Parm )

class USpellEffect_ContentInfo* ANowPawn::GetSpellContentInfoOfSchool ( int SpellID, int magicSchool )
{
	static UFunction* pFnGetSpellContentInfoOfSchool = NULL;

	if ( ! pFnGetSpellContentInfoOfSchool )
		pFnGetSpellContentInfoOfSchool = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetSpellContentInfoOfSchool" );

	ANowPawn_execGetSpellContentInfoOfSchool_Parms GetSpellContentInfoOfSchool_Parms;
	GetSpellContentInfoOfSchool_Parms.SpellID = SpellID;
	GetSpellContentInfoOfSchool_Parms.magicSchool = magicSchool;

	pFnGetSpellContentInfoOfSchool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpellContentInfoOfSchool, &GetSpellContentInfoOfSchool_Parms, NULL );

	pFnGetSpellContentInfoOfSchool->FunctionFlags |= 0x400;

	return GetSpellContentInfoOfSchool_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetSpellContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USpellEffect_ContentInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SpellID                        ( CPF_Parm )

class USpellEffect_ContentInfo* ANowPawn::GetSpellContentInfo ( int SpellID )
{
	static UFunction* pFnGetSpellContentInfo = NULL;

	if ( ! pFnGetSpellContentInfo )
		pFnGetSpellContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetSpellContentInfo" );

	ANowPawn_execGetSpellContentInfo_Parms GetSpellContentInfo_Parms;
	GetSpellContentInfo_Parms.SpellID = SpellID;

	pFnGetSpellContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpellContentInfo, &GetSpellContentInfo_Parms, NULL );

	pFnGetSpellContentInfo->FunctionFlags |= 0x400;

	return GetSpellContentInfo_Parms.ReturnValue;
};

// Function NowGame.NowPawn.GetSpellContentInfoPath
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            SpellID                        ( CPF_Parm )

struct FString ANowPawn::GetSpellContentInfoPath ( int SpellID )
{
	static UFunction* pFnGetSpellContentInfoPath = NULL;

	if ( ! pFnGetSpellContentInfoPath )
		pFnGetSpellContentInfoPath = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetSpellContentInfoPath" );

	ANowPawn_execGetSpellContentInfoPath_Parms GetSpellContentInfoPath_Parms;
	GetSpellContentInfoPath_Parms.SpellID = SpellID;

	pFnGetSpellContentInfoPath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpellContentInfoPath, &GetSpellContentInfoPath_Parms, NULL );

	pFnGetSpellContentInfoPath->FunctionFlags |= 0x400;

	return GetSpellContentInfoPath_Parms.ReturnValue;
};

// Function NowGame.NowPawn.DoSpellCharge
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )

void ANowPawn::DoSpellCharge ( int SpellID )
{
	static UFunction* pFnDoSpellCharge = NULL;

	if ( ! pFnDoSpellCharge )
		pFnDoSpellCharge = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.DoSpellCharge" );

	ANowPawn_execDoSpellCharge_Parms DoSpellCharge_Parms;
	DoSpellCharge_Parms.SpellID = SpellID;

	pFnDoSpellCharge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoSpellCharge, &DoSpellCharge_Parms, NULL );

	pFnDoSpellCharge->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.DoServerConsole
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::DoServerConsole ( )
{
	static UFunction* pFnDoServerConsole = NULL;

	if ( ! pFnDoServerConsole )
		pFnDoServerConsole = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.DoServerConsole" );

	ANowPawn_execDoServerConsole_Parms DoServerConsole_Parms;

	pFnDoServerConsole->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoServerConsole, &DoServerConsole_Parms, NULL );

	pFnDoServerConsole->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.IsEquipSlotEmpty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 equipSlotName                  ( CPF_Parm | CPF_NeedCtorLink )

bool ANowPawn::IsEquipSlotEmpty ( struct FString equipSlotName )
{
	static UFunction* pFnIsEquipSlotEmpty = NULL;

	if ( ! pFnIsEquipSlotEmpty )
		pFnIsEquipSlotEmpty = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.IsEquipSlotEmpty" );

	ANowPawn_execIsEquipSlotEmpty_Parms IsEquipSlotEmpty_Parms;
	memcpy ( &IsEquipSlotEmpty_Parms.equipSlotName, &equipSlotName, 0xC );

	pFnIsEquipSlotEmpty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsEquipSlotEmpty, &IsEquipSlotEmpty_Parms, NULL );

	pFnIsEquipSlotEmpty->FunctionFlags |= 0x400;

	return IsEquipSlotEmpty_Parms.ReturnValue;
};

// Function NowGame.NowPawn.getAvatarFlag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

	static UFunction* pFngetAvatarFlag = NULL;
int ANowPawn::getAvatarFlag ( )
{

	if ( ! pFngetAvatarFlag )
		pFngetAvatarFlag = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.getAvatarFlag" );

	ANowPawn_execgetAvatarFlag_Parms getAvatarFlag_Parms;

	pFngetAvatarFlag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetAvatarFlag, &getAvatarFlag_Parms, NULL );

	pFngetAvatarFlag->FunctionFlags |= 0x400;

	return getAvatarFlag_Parms.ReturnValue;
};

// Function NowGame.NowPawn.callSetLocalFlagDelegate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::callSetLocalFlagDelegate ( )
{
	static UFunction* pFncallSetLocalFlagDelegate = NULL;

	if ( ! pFncallSetLocalFlagDelegate )
		pFncallSetLocalFlagDelegate = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.callSetLocalFlagDelegate" );

	ANowPawn_execcallSetLocalFlagDelegate_Parms callSetLocalFlagDelegate_Parms;

	pFncallSetLocalFlagDelegate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFncallSetLocalFlagDelegate, &callSetLocalFlagDelegate_Parms, NULL );

	pFncallSetLocalFlagDelegate->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.KnockDown
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                aPawn                          ( CPF_Parm )

void ANowPawn::KnockDown ( class ANowPawn* aPawn )
{
	static UFunction* pFnKnockDown = NULL;

	if ( ! pFnKnockDown )
		pFnKnockDown = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.KnockDown" );

	ANowPawn_execKnockDown_Parms KnockDown_Parms;
	KnockDown_Parms.aPawn = aPawn;

	pFnKnockDown->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKnockDown, &KnockDown_Parms, NULL );

	pFnKnockDown->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SendConsoleCommand
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Cmd                            ( CPF_Parm | CPF_NeedCtorLink )

void ANowPawn::SendConsoleCommand ( struct FString Cmd )
{
	static UFunction* pFnSendConsoleCommand = NULL;

	if ( ! pFnSendConsoleCommand )
		pFnSendConsoleCommand = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SendConsoleCommand" );

	ANowPawn_execSendConsoleCommand_Parms SendConsoleCommand_Parms;
	memcpy ( &SendConsoleCommand_Parms.Cmd, &Cmd, 0xC );

	pFnSendConsoleCommand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendConsoleCommand, &SendConsoleCommand_Parms, NULL );

	pFnSendConsoleCommand->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.LeaveMount
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::LeaveMount ( )
{
	static UFunction* pFnLeaveMount = NULL;

	if ( ! pFnLeaveMount )
		pFnLeaveMount = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.LeaveMount" );

	ANowPawn_execLeaveMount_Parms LeaveMount_Parms;

	pFnLeaveMount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLeaveMount, &LeaveMount_Parms, NULL );

	pFnLeaveMount->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.GetUAtlasComponent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UAtlasAvatarComponent*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )

class UAtlasAvatarComponent* ANowPawn::GetUAtlasComponent ( )
{
	static UFunction* pFnGetUAtlasComponent = NULL;

	if ( ! pFnGetUAtlasComponent )
		pFnGetUAtlasComponent = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.GetUAtlasComponent" );

	ANowPawn_execGetUAtlasComponent_Parms GetUAtlasComponent_Parms;

	pFnGetUAtlasComponent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUAtlasComponent, &GetUAtlasComponent_Parms, NULL );

	pFnGetUAtlasComponent->FunctionFlags |= 0x400;

	return GetUAtlasComponent_Parms.ReturnValue;
};

// Function NowGame.NowPawn.NowDoRangedCancelCharge
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::NowDoRangedCancelCharge ( )
{
	static UFunction* pFnNowDoRangedCancelCharge = NULL;

	if ( ! pFnNowDoRangedCancelCharge )
		pFnNowDoRangedCancelCharge = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.NowDoRangedCancelCharge" );

	ANowPawn_execNowDoRangedCancelCharge_Parms NowDoRangedCancelCharge_Parms;

	pFnNowDoRangedCancelCharge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNowDoRangedCancelCharge, &NowDoRangedCancelCharge_Parms, NULL );

	pFnNowDoRangedCancelCharge->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.NowDoRangedDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            lastHitBoneID                  ( CPF_Parm )
// int                            TargetFlag                     ( CPF_Parm )
// float                          bowRange                       ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

void ANowPawn::NowDoRangedDamage ( int lastHitBoneID, int TargetFlag, float bowRange, class AActor* HitActor )
{
	static UFunction* pFnNowDoRangedDamage = NULL;

	if ( ! pFnNowDoRangedDamage )
		pFnNowDoRangedDamage = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.NowDoRangedDamage" );

	ANowPawn_execNowDoRangedDamage_Parms NowDoRangedDamage_Parms;
	NowDoRangedDamage_Parms.lastHitBoneID = lastHitBoneID;
	NowDoRangedDamage_Parms.TargetFlag = TargetFlag;
	NowDoRangedDamage_Parms.bowRange = bowRange;
	NowDoRangedDamage_Parms.HitActor = HitActor;

	pFnNowDoRangedDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNowDoRangedDamage, &NowDoRangedDamage_Parms, NULL );

	pFnNowDoRangedDamage->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.NowDoRangedStopFire
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::NowDoRangedStopFire ( )
{
	static UFunction* pFnNowDoRangedStopFire = NULL;

	if ( ! pFnNowDoRangedStopFire )
		pFnNowDoRangedStopFire = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.NowDoRangedStopFire" );

	ANowPawn_execNowDoRangedStopFire_Parms NowDoRangedStopFire_Parms;

	pFnNowDoRangedStopFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNowDoRangedStopFire, &NowDoRangedStopFire_Parms, NULL );

	pFnNowDoRangedStopFire->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.NowDoRangedStartFire
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::NowDoRangedStartFire ( )
{
	static UFunction* pFnNowDoRangedStartFire = NULL;

	if ( ! pFnNowDoRangedStartFire )
		pFnNowDoRangedStartFire = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.NowDoRangedStartFire" );

	ANowPawn_execNowDoRangedStartFire_Parms NowDoRangedStartFire_Parms;

	pFnNowDoRangedStartFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNowDoRangedStartFire, &NowDoRangedStartFire_Parms, NULL );

	pFnNowDoRangedStartFire->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.isAmmoSlotEmpty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPawn::isAmmoSlotEmpty ( )
{
	static UFunction* pFnisAmmoSlotEmpty = NULL;

	if ( ! pFnisAmmoSlotEmpty )
		pFnisAmmoSlotEmpty = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.isAmmoSlotEmpty" );

	ANowPawn_execisAmmoSlotEmpty_Parms isAmmoSlotEmpty_Parms;

	pFnisAmmoSlotEmpty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnisAmmoSlotEmpty, &isAmmoSlotEmpty_Parms, NULL );

	pFnisAmmoSlotEmpty->FunctionFlags |= 0x400;

	return isAmmoSlotEmpty_Parms.ReturnValue;
};

// Function NowGame.NowPawn.SendLeaveCombatMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::SendLeaveCombatMode ( )
{
	static UFunction* pFnSendLeaveCombatMode = NULL;

	if ( ! pFnSendLeaveCombatMode )
		pFnSendLeaveCombatMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SendLeaveCombatMode" );

	ANowPawn_execSendLeaveCombatMode_Parms SendLeaveCombatMode_Parms;

	pFnSendLeaveCombatMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendLeaveCombatMode, &SendLeaveCombatMode_Parms, NULL );

	pFnSendLeaveCombatMode->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatCancel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::MeleeCombatCancel ( )
{
	static UFunction* pFnMeleeCombatCancel = NULL;

	if ( ! pFnMeleeCombatCancel )
		pFnMeleeCombatCancel = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.MeleeCombatCancel" );

	ANowPawn_execMeleeCombatCancel_Parms MeleeCombatCancel_Parms;

	pFnMeleeCombatCancel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatCancel, &MeleeCombatCancel_Parms, NULL );

	pFnMeleeCombatCancel->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatMoveDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// int                            MoveType                       ( CPF_Parm )
// int                            HitPart                        ( CPF_Parm )
// int                            Force                          ( CPF_Parm )
// unsigned long                  HandleHit                      ( CPF_Parm )

	static UFunction* pFnMeleeCombatMoveDamage = NULL;
void ANowPawn::MeleeCombatMoveDamage ( class AActor* Target, int MoveType, int HitPart, int Force, unsigned long HandleHit )
{

	if ( ! pFnMeleeCombatMoveDamage )
		pFnMeleeCombatMoveDamage = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.MeleeCombatMoveDamage" );

	ANowPawn_execMeleeCombatMoveDamage_Parms MeleeCombatMoveDamage_Parms;
	MeleeCombatMoveDamage_Parms.Target = Target;
	MeleeCombatMoveDamage_Parms.MoveType = MoveType;
	MeleeCombatMoveDamage_Parms.HitPart = HitPart;
	MeleeCombatMoveDamage_Parms.Force = Force;
	MeleeCombatMoveDamage_Parms.HandleHit = HandleHit;

	pFnMeleeCombatMoveDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatMoveDamage, &MeleeCombatMoveDamage_Parms, NULL );

	pFnMeleeCombatMoveDamage->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatMoveRelease
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            MoveType                       ( CPF_Parm )

void ANowPawn::MeleeCombatMoveRelease ( int MoveType )
{
	static UFunction* pFnMeleeCombatMoveRelease = NULL;

	if ( ! pFnMeleeCombatMoveRelease )
		pFnMeleeCombatMoveRelease = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.MeleeCombatMoveRelease" );

	ANowPawn_execMeleeCombatMoveRelease_Parms MeleeCombatMoveRelease_Parms;
	MeleeCombatMoveRelease_Parms.MoveType = MoveType;

	pFnMeleeCombatMoveRelease->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatMoveRelease, &MeleeCombatMoveRelease_Parms, NULL );

	pFnMeleeCombatMoveRelease->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// unsigned char                  MoveType                       ( CPF_Parm )
// int                            HitPart                        ( CPF_Parm )
// int                            Power                          ( CPF_Parm )
// int                            Force                          ( CPF_Parm )
// unsigned long                  HandleHit                      ( CPF_Parm )

	static UFunction* pFnMeleeCombatDamage = NULL;
void ANowPawn::MeleeCombatDamage ( class AActor* Target, unsigned char MoveType, int HitPart, int Power, int Force, unsigned long HandleHit )
{

	if ( ! pFnMeleeCombatDamage )
		pFnMeleeCombatDamage = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.MeleeCombatDamage" );

	ANowPawn_execMeleeCombatDamage_Parms MeleeCombatDamage_Parms;
	MeleeCombatDamage_Parms.Target = Target;
	MeleeCombatDamage_Parms.MoveType = MoveType;
	MeleeCombatDamage_Parms.HitPart = HitPart;
	MeleeCombatDamage_Parms.Power = Power;
	MeleeCombatDamage_Parms.Force = Force;
	MeleeCombatDamage_Parms.HandleHit = HandleHit;

	pFnMeleeCombatDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatDamage, &MeleeCombatDamage_Parms, NULL );

	pFnMeleeCombatDamage->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatRelease
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  MoveType                       ( CPF_Parm )

void ANowPawn::MeleeCombatRelease ( unsigned char MoveType )
{
	static UFunction* pFnMeleeCombatRelease = NULL;

	if ( ! pFnMeleeCombatRelease )
		pFnMeleeCombatRelease = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.MeleeCombatRelease" );

	ANowPawn_execMeleeCombatRelease_Parms MeleeCombatRelease_Parms;
	MeleeCombatRelease_Parms.MoveType = MoveType;

	pFnMeleeCombatRelease->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatRelease, &MeleeCombatRelease_Parms, NULL );

	pFnMeleeCombatRelease->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatCharge
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  MoveType                       ( CPF_Parm )
// unsigned long                  bCounter                       ( CPF_Parm )

void ANowPawn::MeleeCombatCharge ( unsigned char MoveType, unsigned long bCounter )
{
	static UFunction* pFnMeleeCombatCharge = NULL;

	if ( ! pFnMeleeCombatCharge )
		pFnMeleeCombatCharge = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.MeleeCombatCharge" );

	ANowPawn_execMeleeCombatCharge_Parms MeleeCombatCharge_Parms;
	MeleeCombatCharge_Parms.MoveType = MoveType;
	MeleeCombatCharge_Parms.bCounter = bCounter;

	pFnMeleeCombatCharge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatCharge, &MeleeCombatCharge_Parms, NULL );

	pFnMeleeCombatCharge->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatBlock
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )
// unsigned char                  MoveType                       ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::MeleeCombatBlock ( unsigned long bOn, unsigned char MoveType )
{
	static UFunction* pFnMeleeCombatBlock = NULL;

	if ( ! pFnMeleeCombatBlock )
		pFnMeleeCombatBlock = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.MeleeCombatBlock" );

	ANowPawn_execMeleeCombatBlock_Parms MeleeCombatBlock_Parms;
	MeleeCombatBlock_Parms.bOn = bOn;
	MeleeCombatBlock_Parms.MoveType = MoveType;

	pFnMeleeCombatBlock->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatBlock, &MeleeCombatBlock_Parms, NULL );

	pFnMeleeCombatBlock->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.MeleeCombatShieldBash
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Target                         ( CPF_OptionalParm | CPF_Parm )

void ANowPawn::MeleeCombatShieldBash ( class AActor* Target )
{
	static UFunction* pFnMeleeCombatShieldBash = NULL;

	if ( ! pFnMeleeCombatShieldBash )
		pFnMeleeCombatShieldBash = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.MeleeCombatShieldBash" );

	ANowPawn_execMeleeCombatShieldBash_Parms MeleeCombatShieldBash_Parms;
	MeleeCombatShieldBash_Parms.Target = Target;

	pFnMeleeCombatShieldBash->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeCombatShieldBash, &MeleeCombatShieldBash_Parms, NULL );

	pFnMeleeCombatShieldBash->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SendUpdatedGUISettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 updatedSetting                 ( CPF_Parm | CPF_NeedCtorLink )

void ANowPawn::SendUpdatedGUISettings ( struct FString updatedSetting )
{
	static UFunction* pFnSendUpdatedGUISettings = NULL;

	if ( ! pFnSendUpdatedGUISettings )
		pFnSendUpdatedGUISettings = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SendUpdatedGUISettings" );

	ANowPawn_execSendUpdatedGUISettings_Parms SendUpdatedGUISettings_Parms;
	memcpy ( &SendUpdatedGUISettings_Parms.updatedSetting, &updatedSetting, 0xC );

	pFnSendUpdatedGUISettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendUpdatedGUISettings, &SendUpdatedGUISettings_Parms, NULL );

	pFnSendUpdatedGUISettings->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SpellCharge
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )

void ANowPawn::SpellCharge ( int SpellID )
{
	static UFunction* pFnSpellCharge = NULL;

	if ( ! pFnSpellCharge )
		pFnSpellCharge = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SpellCharge" );

	ANowPawn_execSpellCharge_Parms SpellCharge_Parms;
	SpellCharge_Parms.SpellID = SpellID;

	pFnSpellCharge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpellCharge, &SpellCharge_Parms, NULL );

	pFnSpellCharge->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SpellReleaseTraced
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )

void ANowPawn::SpellReleaseTraced ( int SpellID )
{
	static UFunction* pFnSpellReleaseTraced = NULL;

	if ( ! pFnSpellReleaseTraced )
		pFnSpellReleaseTraced = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SpellReleaseTraced" );

	ANowPawn_execSpellReleaseTraced_Parms SpellReleaseTraced_Parms;
	SpellReleaseTraced_Parms.SpellID = SpellID;

	pFnSpellReleaseTraced->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpellReleaseTraced, &SpellReleaseTraced_Parms, NULL );

	pFnSpellReleaseTraced->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SpellReleaseSingleTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  HitActor                       ( CPF_Parm )
// int                            SpellID                        ( CPF_Parm )

void ANowPawn::SpellReleaseSingleTarget ( class AActor* HitActor, int SpellID )
{
	static UFunction* pFnSpellReleaseSingleTarget = NULL;

	if ( ! pFnSpellReleaseSingleTarget )
		pFnSpellReleaseSingleTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SpellReleaseSingleTarget" );

	ANowPawn_execSpellReleaseSingleTarget_Parms SpellReleaseSingleTarget_Parms;
	SpellReleaseSingleTarget_Parms.HitActor = HitActor;
	SpellReleaseSingleTarget_Parms.SpellID = SpellID;

	pFnSpellReleaseSingleTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpellReleaseSingleTarget, &SpellReleaseSingleTarget_Parms, NULL );

	pFnSpellReleaseSingleTarget->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SpellReleaseAOE
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          _x                             ( CPF_Parm )
// float                          _y                             ( CPF_Parm )
// float                          _z                             ( CPF_Parm )
// int                            SpellID                        ( CPF_Parm )

void ANowPawn::SpellReleaseAOE ( float _x, float _y, float _z, int SpellID )
{
	static UFunction* pFnSpellReleaseAOE = NULL;

	if ( ! pFnSpellReleaseAOE )
		pFnSpellReleaseAOE = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SpellReleaseAOE" );

	ANowPawn_execSpellReleaseAOE_Parms SpellReleaseAOE_Parms;
	SpellReleaseAOE_Parms._x = _x;
	SpellReleaseAOE_Parms._y = _y;
	SpellReleaseAOE_Parms._z = _z;
	SpellReleaseAOE_Parms.SpellID = SpellID;

	pFnSpellReleaseAOE->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpellReleaseAOE, &SpellReleaseAOE_Parms, NULL );

	pFnSpellReleaseAOE->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.SpellCancelCharge
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::SpellCancelCharge ( )
{
	static UFunction* pFnSpellCancelCharge = NULL;

	if ( ! pFnSpellCancelCharge )
		pFnSpellCancelCharge = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.SpellCancelCharge" );

	ANowPawn_execSpellCancelCharge_Parms SpellCancelCharge_Parms;

	pFnSpellCancelCharge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpellCancelCharge, &SpellCancelCharge_Parms, NULL );

	pFnSpellCancelCharge->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.CallGuards
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )
// int                            iGuardLevel                    ( CPF_Parm )

void ANowPawn::CallGuards ( class AActor* WhatActor, int iGuardLevel )
{
	static UFunction* pFnCallGuards = NULL;

	if ( ! pFnCallGuards )
		pFnCallGuards = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.CallGuards" );

	ANowPawn_execCallGuards_Parms CallGuards_Parms;
	CallGuards_Parms.WhatActor = WhatActor;
	CallGuards_Parms.iGuardLevel = iGuardLevel;

	pFnCallGuards->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCallGuards, &CallGuards_Parms, NULL );

	pFnCallGuards->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.Resurrect
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPawn::Resurrect ( )
{
	static UFunction* pFnResurrect = NULL;

	if ( ! pFnResurrect )
		pFnResurrect = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.Resurrect" );

	ANowPawn_execResurrect_Parms Resurrect_Parms;

	pFnResurrect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResurrect, &Resurrect_Parms, NULL );

	pFnResurrect->FunctionFlags |= 0x400;
};

// Function NowGame.NowPawn.StartPhysDeath
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            lastHitBoneID                  ( CPF_Parm )

void ANowPawn::StartPhysDeath ( int lastHitBoneID )
{
	static UFunction* pFnStartPhysDeath = NULL;

	if ( ! pFnStartPhysDeath )
		pFnStartPhysDeath = UObject::FindObject< UFunction > ( "Function NowGame.NowPawn.StartPhysDeath" );

	ANowPawn_execStartPhysDeath_Parms StartPhysDeath_Parms;
	StartPhysDeath_Parms.lastHitBoneID = lastHitBoneID;

	pFnStartPhysDeath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartPhysDeath, &StartPhysDeath_Parms, NULL );

	pFnStartPhysDeath->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.BugItGo
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// float                          X                              ( CPF_Parm | CPF_CoerceParm )
// float                          Y                              ( CPF_Parm | CPF_CoerceParm )
// float                          Z                              ( CPF_Parm | CPF_CoerceParm )
// int                            Pitch                          ( CPF_Parm | CPF_CoerceParm )
// int                            Yaw                            ( CPF_Parm | CPF_CoerceParm )
// int                            Roll                           ( CPF_Parm | CPF_CoerceParm )

void ANowPlayerController::BugItGo ( float X, float Y, float Z, int Pitch, int Yaw, int Roll )
{
	static UFunction* pFnBugItGo = NULL;

	if ( ! pFnBugItGo )
		pFnBugItGo = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.BugItGo" );

	ANowPlayerController_execBugItGo_Parms BugItGo_Parms;
	BugItGo_Parms.X = X;
	BugItGo_Parms.Y = Y;
	BugItGo_Parms.Z = Z;
	BugItGo_Parms.Pitch = Pitch;
	BugItGo_Parms.Yaw = Yaw;
	BugItGo_Parms.Roll = Roll;

	this->ProcessEvent ( pFnBugItGo, &BugItGo_Parms, NULL );
};

// Function NowGame.NowPlayerController.PathClear
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::PathClear ( )
{
	static UFunction* pFnPathClear = NULL;

	if ( ! pFnPathClear )
		pFnPathClear = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PathClear" );

	ANowPlayerController_execPathClear_Parms PathClear_Parms;

	this->ProcessEvent ( pFnPathClear, &PathClear_Parms, NULL );
};

// Function NowGame.NowPlayerController.PathChild
// [0x00024200] ( FUNC_Exec )
// Parameters infos:
// int                            Cnt                            ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::PathChild ( int Cnt )
{
	static UFunction* pFnPathChild = NULL;

	if ( ! pFnPathChild )
		pFnPathChild = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PathChild" );

	ANowPlayerController_execPathChild_Parms PathChild_Parms;
	PathChild_Parms.Cnt = Cnt;

	this->ProcessEvent ( pFnPathChild, &PathChild_Parms, NULL );
};

// Function NowGame.NowPlayerController.PathStep
// [0x00024200] ( FUNC_Exec )
// Parameters infos:
// int                            Cnt                            ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::PathStep ( int Cnt )
{
	static UFunction* pFnPathStep = NULL;

	if ( ! pFnPathStep )
		pFnPathStep = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PathStep" );

	ANowPlayerController_execPathStep_Parms PathStep_Parms;
	PathStep_Parms.Cnt = Cnt;

	this->ProcessEvent ( pFnPathStep, &PathStep_Parms, NULL );
};

// Function NowGame.NowPlayerController.SaveActorConfig
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FName                   actorName                      ( CPF_Parm | CPF_CoerceParm )

void ANowPlayerController::SaveActorConfig ( struct FName actorName )
{
	static UFunction* pFnSaveActorConfig = NULL;

	if ( ! pFnSaveActorConfig )
		pFnSaveActorConfig = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SaveActorConfig" );

	ANowPlayerController_execSaveActorConfig_Parms SaveActorConfig_Parms;
	memcpy ( &SaveActorConfig_Parms.actorName, &actorName, 0x8 );

	this->ProcessEvent ( pFnSaveActorConfig, &SaveActorConfig_Parms, NULL );
};

// Function NowGame.NowPlayerController.SaveClassConfig
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 ClassName                      ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void ANowPlayerController::SaveClassConfig ( struct FString ClassName )
{
	static UFunction* pFnSaveClassConfig = NULL;

	if ( ! pFnSaveClassConfig )
		pFnSaveClassConfig = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SaveClassConfig" );

	ANowPlayerController_execSaveClassConfig_Parms SaveClassConfig_Parms;
	memcpy ( &SaveClassConfig_Parms.ClassName, &ClassName, 0xC );

	this->ProcessEvent ( pFnSaveClassConfig, &SaveClassConfig_Parms, NULL );
};

// Function NowGame.NowPlayerController.ShowGameState
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::ShowGameState ( )
{
	static UFunction* pFnShowGameState = NULL;

	if ( ! pFnShowGameState )
		pFnShowGameState = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ShowGameState" );

	ANowPlayerController_execShowGameState_Parms ShowGameState_Parms;

	this->ProcessEvent ( pFnShowGameState, &ShowGameState_Parms, NULL );
};

// Function NowGame.NowPlayerController.ShowPlayerState
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::ShowPlayerState ( )
{
	static UFunction* pFnShowPlayerState = NULL;

	if ( ! pFnShowPlayerState )
		pFnShowPlayerState = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ShowPlayerState" );

	ANowPlayerController_execShowPlayerState_Parms ShowPlayerState_Parms;

	this->ProcessEvent ( pFnShowPlayerState, &ShowPlayerState_Parms, NULL );
};

// Function NowGame.NowPlayerController.ListCE
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::ListCE ( )
{
	static UFunction* pFnListCE = NULL;

	if ( ! pFnListCE )
		pFnListCE = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ListCE" );

	ANowPlayerController_execListCE_Parms ListCE_Parms;

	this->ProcessEvent ( pFnListCE, &ListCE_Parms, NULL );
};

// Function NowGame.NowPlayerController.ListConsoleEvents
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::ListConsoleEvents ( )
{
	static UFunction* pFnListConsoleEvents = NULL;

	if ( ! pFnListConsoleEvents )
		pFnListConsoleEvents = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ListConsoleEvents" );

	ANowPlayerController_execListConsoleEvents_Parms ListConsoleEvents_Parms;

	this->ProcessEvent ( pFnListConsoleEvents, &ListConsoleEvents_Parms, NULL );
};

// Function NowGame.NowPlayerController.CE
// [0x00024200] ( FUNC_Exec )
// Parameters infos:
// struct FName                   EventName                      ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::CE ( struct FName EventName )
{
	static UFunction* pFnCE = NULL;

	if ( ! pFnCE )
		pFnCE = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CE" );

	ANowPlayerController_execCE_Parms CE_Parms;
	memcpy ( &CE_Parms.EventName, &EventName, 0x8 );

	this->ProcessEvent ( pFnCE, &CE_Parms, NULL );
};

// Function NowGame.NowPlayerController.CauseEvent
// [0x00024200] ( FUNC_Exec )
// Parameters infos:
// struct FName                   EventName                      ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::CauseEvent ( struct FName EventName )
{
	static UFunction* pFnCauseEvent = NULL;

	if ( ! pFnCauseEvent )
		pFnCauseEvent = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CauseEvent" );

	ANowPlayerController_execCauseEvent_Parms CauseEvent_Parms;
	memcpy ( &CauseEvent_Parms.EventName, &EventName, 0x8 );

	this->ProcessEvent ( pFnCauseEvent, &CauseEvent_Parms, NULL );
};

// Function NowGame.NowPlayerController.ClearProgressMessages
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::ClearProgressMessages ( )
{
	static UFunction* pFnClearProgressMessages = NULL;

	if ( ! pFnClearProgressMessages )
		pFnClearProgressMessages = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ClearProgressMessages" );

	ANowPlayerController_execClearProgressMessages_Parms ClearProgressMessages_Parms;

	this->ProcessEvent ( pFnClearProgressMessages, &ClearProgressMessages_Parms, NULL );
};

// Function NowGame.NowPlayerController.SwitchLevel
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::SwitchLevel ( struct FString URL )
{
	static UFunction* pFnSwitchLevel = NULL;

	if ( ! pFnSwitchLevel )
		pFnSwitchLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SwitchLevel" );

	ANowPlayerController_execSwitchLevel_Parms SwitchLevel_Parms;
	memcpy ( &SwitchLevel_Parms.URL, &URL, 0xC );

	this->ProcessEvent ( pFnSwitchLevel, &SwitchLevel_Parms, NULL );
};

// Function NowGame.NowPlayerController.ChangeTeam
// [0x00024200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 TeamName                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::ChangeTeam ( struct FString TeamName )
{
	static UFunction* pFnChangeTeam = NULL;

	if ( ! pFnChangeTeam )
		pFnChangeTeam = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ChangeTeam" );

	ANowPlayerController_execChangeTeam_Parms ChangeTeam_Parms;
	memcpy ( &ChangeTeam_Parms.TeamName, &TeamName, 0xC );

	this->ProcessEvent ( pFnChangeTeam, &ChangeTeam_Parms, NULL );
};

// Function NowGame.NowPlayerController.SwitchTeam
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::SwitchTeam ( )
{
	static UFunction* pFnSwitchTeam = NULL;

	if ( ! pFnSwitchTeam )
		pFnSwitchTeam = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SwitchTeam" );

	ANowPlayerController_execSwitchTeam_Parms SwitchTeam_Parms;

	this->ProcessEvent ( pFnSwitchTeam, &SwitchTeam_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetName
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 S                              ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void ANowPlayerController::SetName ( struct FString S )
{
	static UFunction* pFnSetName = NULL;

	if ( ! pFnSetName )
		pFnSetName = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetName" );

	ANowPlayerController_execSetName_Parms SetName_Parms;
	memcpy ( &SetName_Parms.S, &S, 0xC );

	this->ProcessEvent ( pFnSetName, &SetName_Parms, NULL );
};

// Function NowGame.NowPlayerController.Suicide
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::Suicide ( )
{
	static UFunction* pFnSuicide = NULL;

	if ( ! pFnSuicide )
		pFnSuicide = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.Suicide" );

	ANowPlayerController_execSuicide_Parms Suicide_Parms;

	this->ProcessEvent ( pFnSuicide, &Suicide_Parms, NULL );
};

// Function NowGame.NowPlayerController.NextWeapon
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::NextWeapon ( )
{
	static UFunction* pFnNextWeapon = NULL;

	if ( ! pFnNextWeapon )
		pFnNextWeapon = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.NextWeapon" );

	ANowPlayerController_execNextWeapon_Parms NextWeapon_Parms;

	this->ProcessEvent ( pFnNextWeapon, &NextWeapon_Parms, NULL );
};

// Function NowGame.NowPlayerController.PrevWeapon
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::PrevWeapon ( )
{
	static UFunction* pFnPrevWeapon = NULL;

	if ( ! pFnPrevWeapon )
		pFnPrevWeapon = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PrevWeapon" );

	ANowPlayerController_execPrevWeapon_Parms PrevWeapon_Parms;

	this->ProcessEvent ( pFnPrevWeapon, &PrevWeapon_Parms, NULL );
};

// Function NowGame.NowPlayerController.ThrowWeapon
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::ThrowWeapon ( )
{
	static UFunction* pFnThrowWeapon = NULL;

	if ( ! pFnThrowWeapon )
		pFnThrowWeapon = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ThrowWeapon" );

	ANowPlayerController_execThrowWeapon_Parms ThrowWeapon_Parms;

	this->ProcessEvent ( pFnThrowWeapon, &ThrowWeapon_Parms, NULL );
};

// Function NowGame.NowPlayerController.UTrace
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::UTrace ( )
{
	static UFunction* pFnUTrace = NULL;

	if ( ! pFnUTrace )
		pFnUTrace = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.UTrace" );

	ANowPlayerController_execUTrace_Parms UTrace_Parms;

	this->ProcessEvent ( pFnUTrace, &UTrace_Parms, NULL );
};

// Function NowGame.NowPlayerController.Pause
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::Pause ( )
{
	static UFunction* pFnPause = NULL;

	if ( ! pFnPause )
		pFnPause = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.Pause" );

	ANowPlayerController_execPause_Parms Pause_Parms;

	this->ProcessEvent ( pFnPause, &Pause_Parms, NULL );
};

// Function NowGame.NowPlayerController.DebugPause
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::DebugPause ( )
{
	static UFunction* pFnDebugPause = NULL;

	if ( ! pFnDebugPause )
		pFnDebugPause = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.DebugPause" );

	ANowPlayerController_execDebugPause_Parms DebugPause_Parms;

	this->ProcessEvent ( pFnDebugPause, &DebugPause_Parms, NULL );
};

// Function NowGame.NowPlayerController.QuickLoad
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::QuickLoad ( )
{
	static UFunction* pFnQuickLoad = NULL;

	if ( ! pFnQuickLoad )
		pFnQuickLoad = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.QuickLoad" );

	ANowPlayerController_execQuickLoad_Parms QuickLoad_Parms;

	this->ProcessEvent ( pFnQuickLoad, &QuickLoad_Parms, NULL );
};

// Function NowGame.NowPlayerController.QuickSave
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::QuickSave ( )
{
	static UFunction* pFnQuickSave = NULL;

	if ( ! pFnQuickSave )
		pFnQuickSave = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.QuickSave" );

	ANowPlayerController_execQuickSave_Parms QuickSave_Parms;

	this->ProcessEvent ( pFnQuickSave, &QuickSave_Parms, NULL );
};

// Function NowGame.NowPlayerController.LocalTravel
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::LocalTravel ( struct FString URL )
{
	static UFunction* pFnLocalTravel = NULL;

	if ( ! pFnLocalTravel )
		pFnLocalTravel = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.LocalTravel" );

	ANowPlayerController_execLocalTravel_Parms LocalTravel_Parms;
	memcpy ( &LocalTravel_Parms.URL, &URL, 0xC );

	this->ProcessEvent ( pFnLocalTravel, &LocalTravel_Parms, NULL );
};

// Function NowGame.NowPlayerController.RestartLevel
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::RestartLevel ( )
{
	static UFunction* pFnRestartLevel = NULL;

	if ( ! pFnRestartLevel )
		pFnRestartLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.RestartLevel" );

	ANowPlayerController_execRestartLevel_Parms RestartLevel_Parms;

	this->ProcessEvent ( pFnRestartLevel, &RestartLevel_Parms, NULL );
};

// Function NowGame.NowPlayerController.Speech
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FName                   Type                           ( CPF_Parm )
// int                            Index                          ( CPF_Parm )
// struct FString                 Callsign                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::Speech ( struct FName Type, int Index, struct FString Callsign )
{
	static UFunction* pFnSpeech = NULL;

	if ( ! pFnSpeech )
		pFnSpeech = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.Speech" );

	ANowPlayerController_execSpeech_Parms Speech_Parms;
	memcpy ( &Speech_Parms.Type, &Type, 0x8 );
	Speech_Parms.Index = Index;
	memcpy ( &Speech_Parms.Callsign, &Callsign, 0xC );

	this->ProcessEvent ( pFnSpeech, &Speech_Parms, NULL );
};

// Function NowGame.NowPlayerController.Camera
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FName                   NewMode                        ( CPF_Parm )

void ANowPlayerController::Camera ( struct FName NewMode )
{
	static UFunction* pFnCamera = NULL;

	if ( ! pFnCamera )
		pFnCamera = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.Camera" );

	ANowPlayerController_execCamera_Parms Camera_Parms;
	memcpy ( &Camera_Parms.NewMode, &NewMode, 0x8 );

	this->ProcessEvent ( pFnCamera, &Camera_Parms, NULL );
};

// Function NowGame.NowPlayerController.TeamSay
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::TeamSay ( struct FString msg )
{
	static UFunction* pFnTeamSay = NULL;

	if ( ! pFnTeamSay )
		pFnTeamSay = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.TeamSay" );

	ANowPlayerController_execTeamSay_Parms TeamSay_Parms;
	memcpy ( &TeamSay_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnTeamSay, &TeamSay_Parms, NULL );
};

// Function NowGame.NowPlayerController.Say
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::Say ( struct FString msg )
{
	static UFunction* pFnSay = NULL;

	if ( ! pFnSay )
		pFnSay = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.Say" );

	ANowPlayerController_execSay_Parms Say_Parms;
	memcpy ( &Say_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnSay, &Say_Parms, NULL );
};

// Function NowGame.NowPlayerController.Mutate
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 MutateString                   ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::Mutate ( struct FString MutateString )
{
	static UFunction* pFnMutate = NULL;

	if ( ! pFnMutate )
		pFnMutate = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.Mutate" );

	ANowPlayerController_execMutate_Parms Mutate_Parms;
	memcpy ( &Mutate_Parms.MutateString, &MutateString, 0xC );

	this->ProcessEvent ( pFnMutate, &Mutate_Parms, NULL );
};

// Function NowGame.NowPlayerController.TeamTalk
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::TeamTalk ( )
{
	static UFunction* pFnTeamTalk = NULL;

	if ( ! pFnTeamTalk )
		pFnTeamTalk = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.TeamTalk" );

	ANowPlayerController_execTeamTalk_Parms TeamTalk_Parms;

	this->ProcessEvent ( pFnTeamTalk, &TeamTalk_Parms, NULL );
};

// Function NowGame.NowPlayerController.EnableCheats
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::EnableCheats ( )
{
	static UFunction* pFnEnableCheats = NULL;

	if ( ! pFnEnableCheats )
		pFnEnableCheats = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.EnableCheats" );

	ANowPlayerController_execEnableCheats_Parms EnableCheats_Parms;

	this->ProcessEvent ( pFnEnableCheats, &EnableCheats_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetUnderground
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )

void ANowPlayerController::eventSetUnderground ( unsigned long bNewValue )
{
	static UFunction* pFnSetUnderground = NULL;

	if ( ! pFnSetUnderground )
		pFnSetUnderground = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetUnderground" );

	ANowPlayerController_eventSetUnderground_Parms SetUnderground_Parms;
	SetUnderground_Parms.bNewValue = bNewValue;

	this->ProcessEvent ( pFnSetUnderground, &SetUnderground_Parms, NULL );
};

// Function NowGame.NowPlayerController.FindTalkerWithID
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iID                            ( CPF_Parm )

bool ANowPlayerController::eventFindTalkerWithID ( int iID )
{
	static UFunction* pFnFindTalkerWithID = NULL;

	if ( ! pFnFindTalkerWithID )
		pFnFindTalkerWithID = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.FindTalkerWithID" );

	ANowPlayerController_eventFindTalkerWithID_Parms FindTalkerWithID_Parms;
	FindTalkerWithID_Parms.iID = iID;

	this->ProcessEvent ( pFnFindTalkerWithID, &FindTalkerWithID_Parms, NULL );

	return FindTalkerWithID_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ParseGhostMessage
// [0x00024002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 WhatMessage                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bFromEther                     ( CPF_Parm )
// int                            chanSize                       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bNotChat                       ( CPF_OptionalParm | CPF_Parm )

struct FString ANowPlayerController::ParseGhostMessage ( struct FString WhatMessage, unsigned long bFromEther, int chanSize, unsigned long bNotChat )
{
	static UFunction* pFnParseGhostMessage = NULL;

	if ( ! pFnParseGhostMessage )
		pFnParseGhostMessage = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ParseGhostMessage" );

	ANowPlayerController_execParseGhostMessage_Parms ParseGhostMessage_Parms;
	memcpy ( &ParseGhostMessage_Parms.WhatMessage, &WhatMessage, 0xC );
	ParseGhostMessage_Parms.bFromEther = bFromEther;
	ParseGhostMessage_Parms.chanSize = chanSize;
	ParseGhostMessage_Parms.bNotChat = bNotChat;

	this->ProcessEvent ( pFnParseGhostMessage, &ParseGhostMessage_Parms, NULL );

	return ParseGhostMessage_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetAmbientSunLight
// [0x00020002] 
// Parameters infos:
// class ANowAmbientSunLight*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAmbientSunLight* ANowPlayerController::GetAmbientSunLight ( )
{
	static UFunction* pFnGetAmbientSunLight = NULL;

	if ( ! pFnGetAmbientSunLight )
		pFnGetAmbientSunLight = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetAmbientSunLight" );

	ANowPlayerController_execGetAmbientSunLight_Parms GetAmbientSunLight_Parms;

	this->ProcessEvent ( pFnGetAmbientSunLight, &GetAmbientSunLight_Parms, NULL );

	return GetAmbientSunLight_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowPlayerController::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.Tick" );

	ANowPlayerController_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowPlayerController.AddDrinkCounter
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventAddDrinkCounter ( )
{
	static UFunction* pFnAddDrinkCounter = NULL;

	if ( ! pFnAddDrinkCounter )
		pFnAddDrinkCounter = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AddDrinkCounter" );

	ANowPlayerController_eventAddDrinkCounter_Parms AddDrinkCounter_Parms;

	this->ProcessEvent ( pFnAddDrinkCounter, &AddDrinkCounter_Parms, NULL );
};

// Function NowGame.NowPlayerController.ResetGhostModeStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventResetGhostModeStats ( )
{
	static UFunction* pFnResetGhostModeStats = NULL;

	if ( ! pFnResetGhostModeStats )
		pFnResetGhostModeStats = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ResetGhostModeStats" );

	ANowPlayerController_eventResetGhostModeStats_Parms ResetGhostModeStats_Parms;

	this->ProcessEvent ( pFnResetGhostModeStats, &ResetGhostModeStats_Parms, NULL );
};

// Function NowGame.NowPlayerController.GhostModeOn
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventGhostModeOn ( )
{
	static UFunction* pFnGhostModeOn = NULL;

	if ( ! pFnGhostModeOn )
		pFnGhostModeOn = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GhostModeOn" );

	ANowPlayerController_eventGhostModeOn_Parms GhostModeOn_Parms;

	this->ProcessEvent ( pFnGhostModeOn, &GhostModeOn_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetStamWgtRem
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPlayerController::GetStamWgtRem ( )
{
	static UFunction* pFnGetStamWgtRem = NULL;

	if ( ! pFnGetStamWgtRem )
		pFnGetStamWgtRem = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetStamWgtRem" );

	ANowPlayerController_execGetStamWgtRem_Parms GetStamWgtRem_Parms;

	this->ProcessEvent ( pFnGetStamWgtRem, &GetStamWgtRem_Parms, NULL );

	return GetStamWgtRem_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetStamWgtAdd
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPlayerController::GetStamWgtAdd ( )
{
	static UFunction* pFnGetStamWgtAdd = NULL;

	if ( ! pFnGetStamWgtAdd )
		pFnGetStamWgtAdd = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetStamWgtAdd" );

	ANowPlayerController_execGetStamWgtAdd_Parms GetStamWgtAdd_Parms;

	this->ProcessEvent ( pFnGetStamWgtAdd, &GetStamWgtAdd_Parms, NULL );

	return GetStamWgtAdd_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ReCalcStamDrains
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventReCalcStamDrains ( )
{
	static UFunction* pFnReCalcStamDrains = NULL;

	if ( ! pFnReCalcStamDrains )
		pFnReCalcStamDrains = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ReCalcStamDrains" );

	ANowPlayerController_eventReCalcStamDrains_Parms ReCalcStamDrains_Parms;

	this->ProcessEvent ( pFnReCalcStamDrains, &ReCalcStamDrains_Parms, NULL );
};

// Function NowGame.NowPlayerController.CheckForAtlasAvatars
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::CheckForAtlasAvatars ( )
{
	static UFunction* pFnCheckForAtlasAvatars = NULL;

	if ( ! pFnCheckForAtlasAvatars )
		pFnCheckForAtlasAvatars = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CheckForAtlasAvatars" );

	ANowPlayerController_execCheckForAtlasAvatars_Parms CheckForAtlasAvatars_Parms;

	this->ProcessEvent ( pFnCheckForAtlasAvatars, &CheckForAtlasAvatars_Parms, NULL );

	return CheckForAtlasAvatars_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.SendClientChatmessage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::eventSendClientChatmessage ( struct FString Message )
{
	static UFunction* pFnSendClientChatmessage = NULL;

	if ( ! pFnSendClientChatmessage )
		pFnSendClientChatmessage = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SendClientChatmessage" );

	ANowPlayerController_eventSendClientChatmessage_Parms SendClientChatmessage_Parms;
	memcpy ( &SendClientChatmessage_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnSendClientChatmessage, &SendClientChatmessage_Parms, NULL );
};

// Function NowGame.NowPlayerController.CalcStamina_JoggingAdd
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPlayerController::CalcStamina_JoggingAdd ( )
{
	static UFunction* pFnCalcStamina_JoggingAdd = NULL;

	if ( ! pFnCalcStamina_JoggingAdd )
		pFnCalcStamina_JoggingAdd = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CalcStamina_JoggingAdd" );

	ANowPlayerController_execCalcStamina_JoggingAdd_Parms CalcStamina_JoggingAdd_Parms;

	this->ProcessEvent ( pFnCalcStamina_JoggingAdd, &CalcStamina_JoggingAdd_Parms, NULL );

	return CalcStamina_JoggingAdd_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.CalcStamina_Regain
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPlayerController::CalcStamina_Regain ( )
{
	static UFunction* pFnCalcStamina_Regain = NULL;

	if ( ! pFnCalcStamina_Regain )
		pFnCalcStamina_Regain = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CalcStamina_Regain" );

	ANowPlayerController_execCalcStamina_Regain_Parms CalcStamina_Regain_Parms;

	this->ProcessEvent ( pFnCalcStamina_Regain, &CalcStamina_Regain_Parms, NULL );

	return CalcStamina_Regain_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetKnockBackValue
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowPlayerController::GetKnockBackValue ( )
{
	static UFunction* pFnGetKnockBackValue = NULL;

	if ( ! pFnGetKnockBackValue )
		pFnGetKnockBackValue = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetKnockBackValue" );

	ANowPlayerController_execGetKnockBackValue_Parms GetKnockBackValue_Parms;

	this->ProcessEvent ( pFnGetKnockBackValue, &GetKnockBackValue_Parms, NULL );

	return GetKnockBackValue_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.StopReading
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::StopReading ( )
{
	static UFunction* pFnStopReading = NULL;

	if ( ! pFnStopReading )
		pFnStopReading = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.StopReading" );

	ANowPlayerController_execStopReading_Parms StopReading_Parms;

	this->ProcessEvent ( pFnStopReading, &StopReading_Parms, NULL );
};

// Function NowGame.NowPlayerController.ActionBarSlot
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            iBar                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void ANowPlayerController::ActionBarSlot ( int iBar, int iSlot )
{
	static UFunction* pFnActionBarSlot = NULL;

	if ( ! pFnActionBarSlot )
		pFnActionBarSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ActionBarSlot" );

	ANowPlayerController_execActionBarSlot_Parms ActionBarSlot_Parms;
	ActionBarSlot_Parms.iBar = iBar;
	ActionBarSlot_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnActionBarSlot, &ActionBarSlot_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_VSync
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )

void ANowPlayerController::option_VSync ( unsigned long bNewValue )
{
	static UFunction* pFnoption_VSync = NULL;

	if ( ! pFnoption_VSync )
		pFnoption_VSync = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_VSync" );

	ANowPlayerController_execoption_VSync_Parms option_VSync_Parms;
	option_VSync_Parms.bNewValue = bNewValue;

	this->ProcessEvent ( pFnoption_VSync, &option_VSync_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_SmoothFrameRate
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )

void ANowPlayerController::option_SmoothFrameRate ( unsigned long bNewValue )
{
	static UFunction* pFnoption_SmoothFrameRate = NULL;

	if ( ! pFnoption_SmoothFrameRate )
		pFnoption_SmoothFrameRate = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_SmoothFrameRate" );

	ANowPlayerController_execoption_SmoothFrameRate_Parms option_SmoothFrameRate_Parms;
	option_SmoothFrameRate_Parms.bNewValue = bNewValue;

	this->ProcessEvent ( pFnoption_SmoothFrameRate, &option_SmoothFrameRate_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_Bloom
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            bNewValue                      ( CPF_Parm )

void ANowPlayerController::option_Bloom ( int bNewValue )
{
	static UFunction* pFnoption_Bloom = NULL;

	if ( ! pFnoption_Bloom )
		pFnoption_Bloom = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_Bloom" );

	ANowPlayerController_execoption_Bloom_Parms option_Bloom_Parms;
	option_Bloom_Parms.bNewValue = bNewValue;

	this->ProcessEvent ( pFnoption_Bloom, &option_Bloom_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_MotionBlur
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )

void ANowPlayerController::option_MotionBlur ( unsigned long bNewValue )
{
	static UFunction* pFnoption_MotionBlur = NULL;

	if ( ! pFnoption_MotionBlur )
		pFnoption_MotionBlur = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_MotionBlur" );

	ANowPlayerController_execoption_MotionBlur_Parms option_MotionBlur_Parms;
	option_MotionBlur_Parms.bNewValue = bNewValue;

	this->ProcessEvent ( pFnoption_MotionBlur, &option_MotionBlur_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_SetTextureRes
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            NewMax                         ( CPF_Parm )
// int                            LODGroup                       ( CPF_Parm )

void ANowPlayerController::option_SetTextureRes ( int NewMax, int LODGroup )
{
	static UFunction* pFnoption_SetTextureRes = NULL;

	if ( ! pFnoption_SetTextureRes )
		pFnoption_SetTextureRes = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_SetTextureRes" );

	ANowPlayerController_execoption_SetTextureRes_Parms option_SetTextureRes_Parms;
	option_SetTextureRes_Parms.NewMax = NewMax;
	option_SetTextureRes_Parms.LODGroup = LODGroup;

	this->ProcessEvent ( pFnoption_SetTextureRes, &option_SetTextureRes_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_SetMergeTimer
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          newValue                       ( CPF_Parm )

void ANowPlayerController::option_SetMergeTimer ( float newValue )
{
	static UFunction* pFnoption_SetMergeTimer = NULL;

	if ( ! pFnoption_SetMergeTimer )
		pFnoption_SetMergeTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_SetMergeTimer" );

	ANowPlayerController_execoption_SetMergeTimer_Parms option_SetMergeTimer_Parms;
	option_SetMergeTimer_Parms.newValue = newValue;

	this->ProcessEvent ( pFnoption_SetMergeTimer, &option_SetMergeTimer_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_SetMergeRange
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            newValue                       ( CPF_Parm )

void ANowPlayerController::option_SetMergeRange ( int newValue )
{
	static UFunction* pFnoption_SetMergeRange = NULL;

	if ( ! pFnoption_SetMergeRange )
		pFnoption_SetMergeRange = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_SetMergeRange" );

	ANowPlayerController_execoption_SetMergeRange_Parms option_SetMergeRange_Parms;
	option_SetMergeRange_Parms.newValue = newValue;

	this->ProcessEvent ( pFnoption_SetMergeRange, &option_SetMergeRange_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_SetVolume
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          NewVolume                      ( CPF_Parm )

void ANowPlayerController::option_SetVolume ( float NewVolume )
{
	static UFunction* pFnoption_SetVolume = NULL;

	if ( ! pFnoption_SetVolume )
		pFnoption_SetVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_SetVolume" );

	ANowPlayerController_execoption_SetVolume_Parms option_SetVolume_Parms;
	option_SetVolume_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnoption_SetVolume, &option_SetVolume_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_bMustTarget
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::option_bMustTarget ( )
{
	static UFunction* pFnoption_bMustTarget = NULL;

	if ( ! pFnoption_bMustTarget )
		pFnoption_bMustTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_bMustTarget" );

	ANowPlayerController_execoption_bMustTarget_Parms option_bMustTarget_Parms;

	this->ProcessEvent ( pFnoption_bMustTarget, &option_bMustTarget_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_bShowDecals
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::option_bShowDecals ( )
{
	static UFunction* pFnoption_bShowDecals = NULL;

	if ( ! pFnoption_bShowDecals )
		pFnoption_bShowDecals = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_bShowDecals" );

	ANowPlayerController_execoption_bShowDecals_Parms option_bShowDecals_Parms;

	this->ProcessEvent ( pFnoption_bShowDecals, &option_bShowDecals_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_bPhysicsHitEffect
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::option_bPhysicsHitEffect ( )
{
	static UFunction* pFnoption_bPhysicsHitEffect = NULL;

	if ( ! pFnoption_bPhysicsHitEffect )
		pFnoption_bPhysicsHitEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_bPhysicsHitEffect" );

	ANowPlayerController_execoption_bPhysicsHitEffect_Parms option_bPhysicsHitEffect_Parms;

	this->ProcessEvent ( pFnoption_bPhysicsHitEffect, &option_bPhysicsHitEffect_Parms, NULL );
};

// Function NowGame.NowPlayerController.optionsbFootStep_PlayersOnly
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::optionsbFootStep_PlayersOnly ( )
{
	static UFunction* pFnoptionsbFootStep_PlayersOnly = NULL;

	if ( ! pFnoptionsbFootStep_PlayersOnly )
		pFnoptionsbFootStep_PlayersOnly = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.optionsbFootStep_PlayersOnly" );

	ANowPlayerController_execoptionsbFootStep_PlayersOnly_Parms optionsbFootStep_PlayersOnly_Parms;

	this->ProcessEvent ( pFnoptionsbFootStep_PlayersOnly, &optionsbFootStep_PlayersOnly_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_bFootStep_SoundExpensive
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::option_bFootStep_SoundExpensive ( )
{
	static UFunction* pFnoption_bFootStep_SoundExpensive = NULL;

	if ( ! pFnoption_bFootStep_SoundExpensive )
		pFnoption_bFootStep_SoundExpensive = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_bFootStep_SoundExpensive" );

	ANowPlayerController_execoption_bFootStep_SoundExpensive_Parms option_bFootStep_SoundExpensive_Parms;

	this->ProcessEvent ( pFnoption_bFootStep_SoundExpensive, &option_bFootStep_SoundExpensive_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_bFootStepSound
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::option_bFootStepSound ( )
{
	static UFunction* pFnoption_bFootStepSound = NULL;

	if ( ! pFnoption_bFootStepSound )
		pFnoption_bFootStepSound = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_bFootStepSound" );

	ANowPlayerController_execoption_bFootStepSound_Parms option_bFootStepSound_Parms;

	this->ProcessEvent ( pFnoption_bFootStepSound, &option_bFootStepSound_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_bMediumTextures
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::option_bMediumTextures ( )
{
	static UFunction* pFnoption_bMediumTextures = NULL;

	if ( ! pFnoption_bMediumTextures )
		pFnoption_bMediumTextures = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_bMediumTextures" );

	ANowPlayerController_execoption_bMediumTextures_Parms option_bMediumTextures_Parms;

	this->ProcessEvent ( pFnoption_bMediumTextures, &option_bMediumTextures_Parms, NULL );
};

// Function NowGame.NowPlayerController.option_bLowTextures
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::option_bLowTextures ( )
{
	static UFunction* pFnoption_bLowTextures = NULL;

	if ( ! pFnoption_bLowTextures )
		pFnoption_bLowTextures = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.option_bLowTextures" );

	ANowPlayerController_execoption_bLowTextures_Parms option_bLowTextures_Parms;

	this->ProcessEvent ( pFnoption_bLowTextures, &option_bLowTextures_Parms, NULL );
};

// Function NowGame.NowPlayerController.MortalSuicide
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::MortalSuicide ( )
{
	static UFunction* pFnMortalSuicide = NULL;

	if ( ! pFnMortalSuicide )
		pFnMortalSuicide = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.MortalSuicide" );

	ANowPlayerController_execMortalSuicide_Parms MortalSuicide_Parms;

	this->ProcessEvent ( pFnMortalSuicide, &MortalSuicide_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetOptions
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowOptionsDatastore*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowOptionsDatastore* ANowPlayerController::eventGetOptions ( )
{
	static UFunction* pFnGetOptions = NULL;

	if ( ! pFnGetOptions )
		pFnGetOptions = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetOptions" );

	ANowPlayerController_eventGetOptions_Parms GetOptions_Parms;

	this->ProcessEvent ( pFnGetOptions, &GetOptions_Parms, NULL );

	return GetOptions_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.PendingLogOut
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInit                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bQuit                          ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::eventPendingLogOut ( unsigned long bInit, unsigned long bQuit )
{
	static UFunction* pFnPendingLogOut = NULL;

	if ( ! pFnPendingLogOut )
		pFnPendingLogOut = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PendingLogOut" );

	ANowPlayerController_eventPendingLogOut_Parms PendingLogOut_Parms;
	PendingLogOut_Parms.bInit = bInit;
	PendingLogOut_Parms.bQuit = bQuit;

	this->ProcessEvent ( pFnPendingLogOut, &PendingLogOut_Parms, NULL );
};

// Function NowGame.NowPlayerController.InSecurityZone
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   WhatPawn                       ( CPF_Parm )

bool ANowPlayerController::InSecurityZone ( class APawn* WhatPawn )
{
	static UFunction* pFnInSecurityZone = NULL;

	if ( ! pFnInSecurityZone )
		pFnInSecurityZone = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.InSecurityZone" );

	ANowPlayerController_execInSecurityZone_Parms InSecurityZone_Parms;
	InSecurityZone_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnInSecurityZone, &InSecurityZone_Parms, NULL );

	return InSecurityZone_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.CancelLogOut
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventCancelLogOut ( )
{
	static UFunction* pFnCancelLogOut = NULL;

	if ( ! pFnCancelLogOut )
		pFnCancelLogOut = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CancelLogOut" );

	ANowPlayerController_eventCancelLogOut_Parms CancelLogOut_Parms;

	this->ProcessEvent ( pFnCancelLogOut, &CancelLogOut_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartUnderWaterEffects
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bEnd                           ( CPF_Parm )

void ANowPlayerController::eventStartUnderWaterEffects ( unsigned long bEnd )
{
	static UFunction* pFnStartUnderWaterEffects = NULL;

	if ( ! pFnStartUnderWaterEffects )
		pFnStartUnderWaterEffects = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.StartUnderWaterEffects" );

	ANowPlayerController_eventStartUnderWaterEffects_Parms StartUnderWaterEffects_Parms;
	StartUnderWaterEffects_Parms.bEnd = bEnd;

	this->ProcessEvent ( pFnStartUnderWaterEffects, &StartUnderWaterEffects_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartBlurEffects
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bEnd                           ( CPF_Parm )

void ANowPlayerController::eventStartBlurEffects ( unsigned long bEnd )
{
	static UFunction* pFnStartBlurEffects = NULL;

	if ( ! pFnStartBlurEffects )
		pFnStartBlurEffects = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.StartBlurEffects" );

	ANowPlayerController_eventStartBlurEffects_Parms StartBlurEffects_Parms;
	StartBlurEffects_Parms.bEnd = bEnd;

	this->ProcessEvent ( pFnStartBlurEffects, &StartBlurEffects_Parms, NULL );
};

// Function NowGame.NowPlayerController.setHouseDoorCollisionFalse
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::setHouseDoorCollisionFalse ( )
{
	static UFunction* pFnsetHouseDoorCollisionFalse = NULL;

	if ( ! pFnsetHouseDoorCollisionFalse )
		pFnsetHouseDoorCollisionFalse = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.setHouseDoorCollisionFalse" );

	ANowPlayerController_execsetHouseDoorCollisionFalse_Parms setHouseDoorCollisionFalse_Parms;

	this->ProcessEvent ( pFnsetHouseDoorCollisionFalse, &setHouseDoorCollisionFalse_Parms, NULL );
};

// Function NowGame.NowPlayerController.setHouseDoorCollisionTrue
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::setHouseDoorCollisionTrue ( )
{
	static UFunction* pFnsetHouseDoorCollisionTrue = NULL;

	if ( ! pFnsetHouseDoorCollisionTrue )
		pFnsetHouseDoorCollisionTrue = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.setHouseDoorCollisionTrue" );

	ANowPlayerController_execsetHouseDoorCollisionTrue_Parms setHouseDoorCollisionTrue_Parms;

	this->ProcessEvent ( pFnsetHouseDoorCollisionTrue, &setHouseDoorCollisionTrue_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartDeathEffects
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bEnd                           ( CPF_Parm )

void ANowPlayerController::eventStartDeathEffects ( unsigned long bEnd )
{
	static UFunction* pFnStartDeathEffects = NULL;

	if ( ! pFnStartDeathEffects )
		pFnStartDeathEffects = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.StartDeathEffects" );

	ANowPlayerController_eventStartDeathEffects_Parms StartDeathEffects_Parms;
	StartDeathEffects_Parms.bEnd = bEnd;

	this->ProcessEvent ( pFnStartDeathEffects, &StartDeathEffects_Parms, NULL );
};

// Function NowGame.NowPlayerController.AllGhosts
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void ANowPlayerController::eventAllGhosts ( unsigned long bShow )
{
	static UFunction* pFnAllGhosts = NULL;

	if ( ! pFnAllGhosts )
		pFnAllGhosts = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AllGhosts" );

	ANowPlayerController_eventAllGhosts_Parms AllGhosts_Parms;
	AllGhosts_Parms.bShow = bShow;

	this->ProcessEvent ( pFnAllGhosts, &AllGhosts_Parms, NULL );
};

// Function NowGame.NowPlayerController.SeeDeadPeopleSpell
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void ANowPlayerController::eventSeeDeadPeopleSpell ( unsigned long bShow )
{
	static UFunction* pFnSeeDeadPeopleSpell = NULL;

	if ( ! pFnSeeDeadPeopleSpell )
		pFnSeeDeadPeopleSpell = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SeeDeadPeopleSpell" );

	ANowPlayerController_eventSeeDeadPeopleSpell_Parms SeeDeadPeopleSpell_Parms;
	SeeDeadPeopleSpell_Parms.bShow = bShow;

	this->ProcessEvent ( pFnSeeDeadPeopleSpell, &SeeDeadPeopleSpell_Parms, NULL );
};

// Function NowGame.NowPlayerController.stopHouseModeSearch
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventstopHouseModeSearch ( )
{
	static UFunction* pFnstopHouseModeSearch = NULL;

	if ( ! pFnstopHouseModeSearch )
		pFnstopHouseModeSearch = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.stopHouseModeSearch" );

	ANowPlayerController_eventstopHouseModeSearch_Parms stopHouseModeSearch_Parms;

	this->ProcessEvent ( pFnstopHouseModeSearch, &stopHouseModeSearch_Parms, NULL );
};

// Function NowGame.NowPlayerController.searchForHouses
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::searchForHouses ( )
{
	static UFunction* pFnsearchForHouses = NULL;

	if ( ! pFnsearchForHouses )
		pFnsearchForHouses = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.searchForHouses" );

	ANowPlayerController_execsearchForHouses_Parms searchForHouses_Parms;

	this->ProcessEvent ( pFnsearchForHouses, &searchForHouses_Parms, NULL );
};

// Function NowGame.NowPlayerController.turnOfSearchMode
// [0x00820002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* _house                         ( CPF_Parm )

void ANowPlayerController::turnOfSearchMode ( class ANowAtlasAvatarPlayerHouse* _house )
{
	static UFunction* pFnturnOfSearchMode = NULL;

	if ( ! pFnturnOfSearchMode )
		pFnturnOfSearchMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.turnOfSearchMode" );

	ANowPlayerController_execturnOfSearchMode_Parms turnOfSearchMode_Parms;
	turnOfSearchMode_Parms._house = _house;

	this->ProcessEvent ( pFnturnOfSearchMode, &turnOfSearchMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.checkHouse
// [0x00820002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* _house                         ( CPF_Parm )

void ANowPlayerController::checkHouse ( class ANowAtlasAvatarPlayerHouse* _house )
{
	static UFunction* pFncheckHouse = NULL;

	if ( ! pFncheckHouse )
		pFncheckHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.checkHouse" );

	ANowPlayerController_execcheckHouse_Parms checkHouse_Parms;
	checkHouse_Parms._house = _house;

	this->ProcessEvent ( pFncheckHouse, &checkHouse_Parms, NULL );
};

// Function NowGame.NowPlayerController.startHouseModeSearch
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  modeOnOff                      ( CPF_Parm )
// struct FString                 _structureType                 ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::eventstartHouseModeSearch ( unsigned long modeOnOff, struct FString _structureType )
{
	static UFunction* pFnstartHouseModeSearch = NULL;

	if ( ! pFnstartHouseModeSearch )
		pFnstartHouseModeSearch = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.startHouseModeSearch" );

	ANowPlayerController_eventstartHouseModeSearch_Parms startHouseModeSearch_Parms;
	startHouseModeSearch_Parms.modeOnOff = modeOnOff;
	memcpy ( &startHouseModeSearch_Parms._structureType, &_structureType, 0xC );

	this->ProcessEvent ( pFnstartHouseModeSearch, &startHouseModeSearch_Parms, NULL );
};

// Function NowGame.NowPlayerController.NowPawnDied
// [0x00024002] 
// Parameters infos:
// unsigned long                  Killed                         ( CPF_Parm )
// class ANowCorpse*              Corpse                         ( CPF_Parm )
// struct FName                   LastHitBoneName                ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::NowPawnDied ( unsigned long Killed, class ANowCorpse* Corpse, struct FName LastHitBoneName )
{
	static UFunction* pFnNowPawnDied = NULL;

	if ( ! pFnNowPawnDied )
		pFnNowPawnDied = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.NowPawnDied" );

	ANowPlayerController_execNowPawnDied_Parms NowPawnDied_Parms;
	NowPawnDied_Parms.Killed = Killed;
	NowPawnDied_Parms.Corpse = Corpse;
	memcpy ( &NowPawnDied_Parms.LastHitBoneName, &LastHitBoneName, 0x8 );

	this->ProcessEvent ( pFnNowPawnDied, &NowPawnDied_Parms, NULL );
};

// Function NowGame.NowPlayerController.NowPawnDiedLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventNowPawnDiedLogin ( )
{
	static UFunction* pFnNowPawnDiedLogin = NULL;

	if ( ! pFnNowPawnDiedLogin )
		pFnNowPawnDiedLogin = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.NowPawnDiedLogin" );

	ANowPlayerController_eventNowPawnDiedLogin_Parms NowPawnDiedLogin_Parms;

	this->ProcessEvent ( pFnNowPawnDiedLogin, &NowPawnDiedLogin_Parms, NULL );
};

// Function NowGame.NowPlayerController.InitOptionsDS
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::InitOptionsDS ( )
{
	static UFunction* pFnInitOptionsDS = NULL;

	if ( ! pFnInitOptionsDS )
		pFnInitOptionsDS = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.InitOptionsDS" );

	ANowPlayerController_execInitOptionsDS_Parms InitOptionsDS_Parms;

	this->ProcessEvent ( pFnInitOptionsDS, &InitOptionsDS_Parms, NULL );
};

// Function NowGame.NowPlayerController.ResetCameraMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventResetCameraMode ( )
{
	static UFunction* pFnResetCameraMode = NULL;

	if ( ! pFnResetCameraMode )
		pFnResetCameraMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ResetCameraMode" );

	ANowPlayerController_eventResetCameraMode_Parms ResetCameraMode_Parms;

	this->ProcessEvent ( pFnResetCameraMode, &ResetCameraMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetCameraMode
// [0x00020002] 
// Parameters infos:
// struct FName                   NewCamMode                     ( CPF_Parm )

void ANowPlayerController::SetCameraMode ( struct FName NewCamMode )
{
	static UFunction* pFnSetCameraMode = NULL;

	if ( ! pFnSetCameraMode )
		pFnSetCameraMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetCameraMode" );

	ANowPlayerController_execSetCameraMode_Parms SetCameraMode_Parms;
	memcpy ( &SetCameraMode_Parms.NewCamMode, &NewCamMode, 0x8 );

	this->ProcessEvent ( pFnSetCameraMode, &SetCameraMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.NowSetSoundMode
// [0x00020000] 
// Parameters infos:
// struct FName                   newSoundMode                   ( CPF_Parm )

void ANowPlayerController::NowSetSoundMode ( struct FName newSoundMode )
{
	static UFunction* pFnNowSetSoundMode = NULL;

	if ( ! pFnNowSetSoundMode )
		pFnNowSetSoundMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.NowSetSoundMode" );

	ANowPlayerController_execNowSetSoundMode_Parms NowSetSoundMode_Parms;
	memcpy ( &NowSetSoundMode_Parms.newSoundMode, &newSoundMode, 0x8 );

	this->ProcessEvent ( pFnNowSetSoundMode, &NowSetSoundMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetBeastCameraView
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )

void ANowPlayerController::eventSetBeastCameraView ( class AActor* A )
{
	static UFunction* pFnSetBeastCameraView = NULL;

	if ( ! pFnSetBeastCameraView )
		pFnSetBeastCameraView = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetBeastCameraView" );

	ANowPlayerController_eventSetBeastCameraView_Parms SetBeastCameraView_Parms;
	SetBeastCameraView_Parms.A = A;

	this->ProcessEvent ( pFnSetBeastCameraView, &SetBeastCameraView_Parms, NULL );
};

// Function NowGame.NowPlayerController.HasLineOfSightTo
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  TestActor                      ( CPF_Parm )
// float                          LoSDegreeCOSINEValue           ( CPF_OptionalParm | CPF_Parm )

bool ANowPlayerController::eventHasLineOfSightTo ( class AActor* TestActor, float LoSDegreeCOSINEValue )
{
	static UFunction* pFnHasLineOfSightTo = NULL;

	if ( ! pFnHasLineOfSightTo )
		pFnHasLineOfSightTo = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.HasLineOfSightTo" );

	ANowPlayerController_eventHasLineOfSightTo_Parms HasLineOfSightTo_Parms;
	HasLineOfSightTo_Parms.TestActor = TestActor;
	HasLineOfSightTo_Parms.LoSDegreeCOSINEValue = LoSDegreeCOSINEValue;

	this->ProcessEvent ( pFnHasLineOfSightTo, &HasLineOfSightTo_Parms, NULL );

	return HasLineOfSightTo_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.TargetAndUse
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::TargetAndUse ( )
{
	static UFunction* pFnTargetAndUse = NULL;

	if ( ! pFnTargetAndUse )
		pFnTargetAndUse = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.TargetAndUse" );

	ANowPlayerController_execTargetAndUse_Parms TargetAndUse_Parms;

	this->ProcessEvent ( pFnTargetAndUse, &TargetAndUse_Parms, NULL );
};

// Function NowGame.NowPlayerController.EscPressed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::EscPressed ( )
{
	static UFunction* pFnEscPressed = NULL;

	if ( ! pFnEscPressed )
		pFnEscPressed = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.EscPressed" );

	ANowPlayerController_execEscPressed_Parms EscPressed_Parms;

	this->ProcessEvent ( pFnEscPressed, &EscPressed_Parms, NULL );

	return EscPressed_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.NumberPressed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iNr                            ( CPF_Parm )

bool ANowPlayerController::eventNumberPressed ( int iNr )
{
	static UFunction* pFnNumberPressed = NULL;

	if ( ! pFnNumberPressed )
		pFnNumberPressed = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.NumberPressed" );

	ANowPlayerController_eventNumberPressed_Parms NumberPressed_Parms;
	NumberPressed_Parms.iNr = iNr;

	this->ProcessEvent ( pFnNumberPressed, &NumberPressed_Parms, NULL );

	return NumberPressed_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.TargetSelfOff
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::TargetSelfOff ( )
{
	static UFunction* pFnTargetSelfOff = NULL;

	if ( ! pFnTargetSelfOff )
		pFnTargetSelfOff = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.TargetSelfOff" );

	ANowPlayerController_execTargetSelfOff_Parms TargetSelfOff_Parms;

	this->ProcessEvent ( pFnTargetSelfOff, &TargetSelfOff_Parms, NULL );
};

// Function NowGame.NowPlayerController.TargetSelfOn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::TargetSelfOn ( )
{
	static UFunction* pFnTargetSelfOn = NULL;

	if ( ! pFnTargetSelfOn )
		pFnTargetSelfOn = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.TargetSelfOn" );

	ANowPlayerController_execTargetSelfOn_Parms TargetSelfOn_Parms;

	this->ProcessEvent ( pFnTargetSelfOn, &TargetSelfOn_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartDelayTimer
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Why                            ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// float                          Time                           ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::eventStartDelayTimer ( struct FString Why, float Time )
{
	static UFunction* pFnStartDelayTimer = NULL;

	if ( ! pFnStartDelayTimer )
		pFnStartDelayTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.StartDelayTimer" );

	ANowPlayerController_eventStartDelayTimer_Parms StartDelayTimer_Parms;
	memcpy ( &StartDelayTimer_Parms.Why, &Why, 0xC );
	StartDelayTimer_Parms.Time = Time;

	this->ProcessEvent ( pFnStartDelayTimer, &StartDelayTimer_Parms, NULL );
};

// Function NowGame.NowPlayerController.SprintOff
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::SprintOff ( )
{
	static UFunction* pFnSprintOff = NULL;

	if ( ! pFnSprintOff )
		pFnSprintOff = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SprintOff" );

	ANowPlayerController_execSprintOff_Parms SprintOff_Parms;

	this->ProcessEvent ( pFnSprintOff, &SprintOff_Parms, NULL );
};

// Function NowGame.NowPlayerController.SprintOn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::SprintOn ( )
{
	static UFunction* pFnSprintOn = NULL;

	if ( ! pFnSprintOn )
		pFnSprintOn = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SprintOn" );

	ANowPlayerController_execSprintOn_Parms SprintOn_Parms;

	this->ProcessEvent ( pFnSprintOn, &SprintOn_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetServerTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowPlayerController::GetServerTime ( )
{
	static UFunction* pFnGetServerTime = NULL;

	if ( ! pFnGetServerTime )
		pFnGetServerTime = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetServerTime" );

	ANowPlayerController_execGetServerTime_Parms GetServerTime_Parms;

	pFnGetServerTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetServerTime, &GetServerTime_Parms, NULL );

	pFnGetServerTime->FunctionFlags |= 0x400;

	return GetServerTime_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetAtlasFlag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  C                              ( CPF_Parm )

	static UFunction* pFnGetAtlasFlag = NULL;
int ANowPlayerController::GetAtlasFlag ( class AActor* C )
{

	if ( ! pFnGetAtlasFlag )
		pFnGetAtlasFlag = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetAtlasFlag" );

	ANowPlayerController_execGetAtlasFlag_Parms GetAtlasFlag_Parms;
	GetAtlasFlag_Parms.C = C;

	pFnGetAtlasFlag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasFlag, &GetAtlasFlag_Parms, NULL );

	pFnGetAtlasFlag->FunctionFlags |= 0x400;

	return GetAtlasFlag_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetAtlasMaxHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  C                              ( CPF_Parm )

	static UFunction* pFnGetAtlasMaxHealth = NULL;
int ANowPlayerController::GetAtlasMaxHealth ( class AActor* C )
{

	if ( ! pFnGetAtlasMaxHealth )
		pFnGetAtlasMaxHealth = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetAtlasMaxHealth" );

	ANowPlayerController_execGetAtlasMaxHealth_Parms GetAtlasMaxHealth_Parms;
	GetAtlasMaxHealth_Parms.C = C;

	pFnGetAtlasMaxHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasMaxHealth, &GetAtlasMaxHealth_Parms, NULL );

	pFnGetAtlasMaxHealth->FunctionFlags |= 0x400;

	return GetAtlasMaxHealth_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetAtlasHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  C                              ( CPF_Parm )

	static UFunction* pFnGetAtlasHealth = NULL;
int ANowPlayerController::GetAtlasHealth ( class AActor* C )
{

	if ( ! pFnGetAtlasHealth )
		pFnGetAtlasHealth = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetAtlasHealth" );

	ANowPlayerController_execGetAtlasHealth_Parms GetAtlasHealth_Parms;
	GetAtlasHealth_Parms.C = C;

	pFnGetAtlasHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasHealth, &GetAtlasHealth_Parms, NULL );

	pFnGetAtlasHealth->FunctionFlags |= 0x400;

	return GetAtlasHealth_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.CanDodge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::CanDodge ( )
{
	static UFunction* pFnCanDodge = NULL;

	if ( ! pFnCanDodge )
		pFnCanDodge = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CanDodge" );

	ANowPlayerController_execCanDodge_Parms CanDodge_Parms;

	this->ProcessEvent ( pFnCanDodge, &CanDodge_Parms, NULL );

	return CanDodge_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.UpdateTargetListRemovedFrom
// [0x00020002] 
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )

void ANowPlayerController::UpdateTargetListRemovedFrom ( class AActor* A )
{
	static UFunction* pFnUpdateTargetListRemovedFrom = NULL;

	if ( ! pFnUpdateTargetListRemovedFrom )
		pFnUpdateTargetListRemovedFrom = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.UpdateTargetListRemovedFrom" );

	ANowPlayerController_execUpdateTargetListRemovedFrom_Parms UpdateTargetListRemovedFrom_Parms;
	UpdateTargetListRemovedFrom_Parms.A = A;

	this->ProcessEvent ( pFnUpdateTargetListRemovedFrom, &UpdateTargetListRemovedFrom_Parms, NULL );
};

// Function NowGame.NowPlayerController.UpdateTargetListAddedTo
// [0x00020002] 
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )

void ANowPlayerController::UpdateTargetListAddedTo ( class AActor* A )
{
	static UFunction* pFnUpdateTargetListAddedTo = NULL;

	if ( ! pFnUpdateTargetListAddedTo )
		pFnUpdateTargetListAddedTo = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.UpdateTargetListAddedTo" );

	ANowPlayerController_execUpdateTargetListAddedTo_Parms UpdateTargetListAddedTo_Parms;
	UpdateTargetListAddedTo_Parms.A = A;

	this->ProcessEvent ( pFnUpdateTargetListAddedTo, &UpdateTargetListAddedTo_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetNowPlayerDS
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowPlayerDatastore*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowPlayerDatastore* ANowPlayerController::eventGetNowPlayerDS ( )
{
	static UFunction* pFnGetNowPlayerDS = NULL;

	if ( ! pFnGetNowPlayerDS )
		pFnGetNowPlayerDS = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetNowPlayerDS" );

	ANowPlayerController_eventGetNowPlayerDS_Parms GetNowPlayerDS_Parms;

	this->ProcessEvent ( pFnGetNowPlayerDS, &GetNowPlayerDS_Parms, NULL );

	return GetNowPlayerDS_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetMount
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarAiDynamicMount* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarAiDynamicMount* ANowPlayerController::eventGetMount ( )
{
	static UFunction* pFnGetMount = NULL;

	if ( ! pFnGetMount )
		pFnGetMount = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetMount" );

	ANowPlayerController_eventGetMount_Parms GetMount_Parms;

	this->ProcessEvent ( pFnGetMount, &GetMount_Parms, NULL );

	return GetMount_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetNowEntryDS
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowEntryDatastore*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowEntryDatastore* ANowPlayerController::eventGetNowEntryDS ( )
{
	static UFunction* pFnGetNowEntryDS = NULL;

	if ( ! pFnGetNowEntryDS )
		pFnGetNowEntryDS = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetNowEntryDS" );

	ANowPlayerController_eventGetNowEntryDS_Parms GetNowEntryDS_Parms;

	this->ProcessEvent ( pFnGetNowEntryDS, &GetNowEntryDS_Parms, NULL );

	return GetNowEntryDS_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.PreRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void ANowPlayerController::eventPreRender ( class UCanvas* Canvas )
{
	static UFunction* pFnPreRender = NULL;

	if ( ! pFnPreRender )
		pFnPreRender = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PreRender" );

	ANowPlayerController_eventPreRender_Parms PreRender_Parms;
	PreRender_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnPreRender, &PreRender_Parms, NULL );
};

// Function NowGame.NowPlayerController.GameMessage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 WhatMessage                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sChan                          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::eventGameMessage ( struct FString WhatMessage, struct FString sChan )
{
	static UFunction* pFnGameMessage = NULL;

	if ( ! pFnGameMessage )
		pFnGameMessage = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GameMessage" );

	ANowPlayerController_eventGameMessage_Parms GameMessage_Parms;
	memcpy ( &GameMessage_Parms.WhatMessage, &WhatMessage, 0xC );
	memcpy ( &GameMessage_Parms.sChan, &sChan, 0xC );

	this->ProcessEvent ( pFnGameMessage, &GameMessage_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetTargetInAim
// [0x00824A02] ( FUNC_Exec | FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Range                          ( CPF_Parm )
// int                            ExtraTraceFlags                ( CPF_OptionalParm | CPF_Parm )

class AActor* ANowPlayerController::GetTargetInAim ( int Range, int ExtraTraceFlags )
{
	static UFunction* pFnGetTargetInAim = NULL;

	if ( ! pFnGetTargetInAim )
		pFnGetTargetInAim = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetTargetInAim" );

	ANowPlayerController_execGetTargetInAim_Parms GetTargetInAim_Parms;
	GetTargetInAim_Parms.Range = Range;
	GetTargetInAim_Parms.ExtraTraceFlags = ExtraTraceFlags;

	this->ProcessEvent ( pFnGetTargetInAim, &GetTargetInAim_Parms, NULL );

	return GetTargetInAim_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ANowPlayerController::eventGetTarget ( )
{
	static UFunction* pFnGetTarget = NULL;

	if ( ! pFnGetTarget )
		pFnGetTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetTarget" );

	ANowPlayerController_eventGetTarget_Parms GetTarget_Parms;

	this->ProcessEvent ( pFnGetTarget, &GetTarget_Parms, NULL );

	return GetTarget_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ClearTargets
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventClearTargets ( )
{
	static UFunction* pFnClearTargets = NULL;

	if ( ! pFnClearTargets )
		pFnClearTargets = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ClearTargets" );

	ANowPlayerController_eventClearTargets_Parms ClearTargets_Parms;

	this->ProcessEvent ( pFnClearTargets, &ClearTargets_Parms, NULL );
};

// Function NowGame.NowPlayerController.CheckTargetRange
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::CheckTargetRange ( )
{
	static UFunction* pFnCheckTargetRange = NULL;

	if ( ! pFnCheckTargetRange )
		pFnCheckTargetRange = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CheckTargetRange" );

	ANowPlayerController_execCheckTargetRange_Parms CheckTargetRange_Parms;

	this->ProcessEvent ( pFnCheckTargetRange, &CheckTargetRange_Parms, NULL );
};

// Function NowGame.NowPlayerController.CheckForHouseSearch
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::CheckForHouseSearch ( )
{
	static UFunction* pFnCheckForHouseSearch = NULL;

	if ( ! pFnCheckForHouseSearch )
		pFnCheckForHouseSearch = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CheckForHouseSearch" );

	ANowPlayerController_execCheckForHouseSearch_Parms CheckForHouseSearch_Parms;

	this->ProcessEvent ( pFnCheckForHouseSearch, &CheckForHouseSearch_Parms, NULL );

	return CheckForHouseSearch_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.TargetNearestEnemy
// [0x00820202] ( FUNC_Exec )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::TargetNearestEnemy ( )
{
	static UFunction* pFnTargetNearestEnemy = NULL;

	if ( ! pFnTargetNearestEnemy )
		pFnTargetNearestEnemy = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.TargetNearestEnemy" );

	ANowPlayerController_execTargetNearestEnemy_Parms TargetNearestEnemy_Parms;

	this->ProcessEvent ( pFnTargetNearestEnemy, &TargetNearestEnemy_Parms, NULL );

	return TargetNearestEnemy_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.TabLookForTarget
// [0x00820002] 
// Parameters infos:

void ANowPlayerController::TabLookForTarget ( )
{
	static UFunction* pFnTabLookForTarget = NULL;

	if ( ! pFnTabLookForTarget )
		pFnTabLookForTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.TabLookForTarget" );

	ANowPlayerController_execTabLookForTarget_Parms TabLookForTarget_Parms;

	this->ProcessEvent ( pFnTabLookForTarget, &TabLookForTarget_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetTargetHitInfo
// [0x00820002] 
// Parameters infos:
// struct FTraceHitInfo           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FTraceHitInfo ANowPlayerController::GetTargetHitInfo ( )
{
	static UFunction* pFnGetTargetHitInfo = NULL;

	if ( ! pFnGetTargetHitInfo )
		pFnGetTargetHitInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetTargetHitInfo" );

	ANowPlayerController_execGetTargetHitInfo_Parms GetTargetHitInfo_Parms;

	this->ProcessEvent ( pFnGetTargetHitInfo, &GetTargetHitInfo_Parms, NULL );

	return GetTargetHitInfo_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.RHoldTab
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::RHoldTab ( )
{
	static UFunction* pFnRHoldTab = NULL;

	if ( ! pFnRHoldTab )
		pFnRHoldTab = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.RHoldTab" );

	ANowPlayerController_execRHoldTab_Parms RHoldTab_Parms;

	this->ProcessEvent ( pFnRHoldTab, &RHoldTab_Parms, NULL );
};

// Function NowGame.NowPlayerController.HoldTab
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::HoldTab ( )
{
	static UFunction* pFnHoldTab = NULL;

	if ( ! pFnHoldTab )
		pFnHoldTab = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.HoldTab" );

	ANowPlayerController_execHoldTab_Parms HoldTab_Parms;

	this->ProcessEvent ( pFnHoldTab, &HoldTab_Parms, NULL );
};

// Function NowGame.NowPlayerController.FocusCharacterOnPoint
// [0x00020002] 
// Parameters infos:
// struct FVector                 WorldLoc                       ( CPF_Parm )

void ANowPlayerController::FocusCharacterOnPoint ( struct FVector WorldLoc )
{
	static UFunction* pFnFocusCharacterOnPoint = NULL;

	if ( ! pFnFocusCharacterOnPoint )
		pFnFocusCharacterOnPoint = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.FocusCharacterOnPoint" );

	ANowPlayerController_execFocusCharacterOnPoint_Parms FocusCharacterOnPoint_Parms;
	memcpy ( &FocusCharacterOnPoint_Parms.WorldLoc, &WorldLoc, 0xC );

	this->ProcessEvent ( pFnFocusCharacterOnPoint, &FocusCharacterOnPoint_Parms, NULL );
};

// Function NowGame.NowPlayerController.SelectAtlasTarget
// [0x00820002] 
// Parameters infos:
// class AActor*                  NewTarget                      ( CPF_Parm )

void ANowPlayerController::SelectAtlasTarget ( class AActor* NewTarget )
{
	static UFunction* pFnSelectAtlasTarget = NULL;

	if ( ! pFnSelectAtlasTarget )
		pFnSelectAtlasTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SelectAtlasTarget" );

	ANowPlayerController_execSelectAtlasTarget_Parms SelectAtlasTarget_Parms;
	SelectAtlasTarget_Parms.NewTarget = NewTarget;

	this->ProcessEvent ( pFnSelectAtlasTarget, &SelectAtlasTarget_Parms, NULL );
};

// Function NowGame.NowPlayerController.UpdateGFXTarget
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::UpdateGFXTarget ( )
{
	static UFunction* pFnUpdateGFXTarget = NULL;

	if ( ! pFnUpdateGFXTarget )
		pFnUpdateGFXTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.UpdateGFXTarget" );

	ANowPlayerController_execUpdateGFXTarget_Parms UpdateGFXTarget_Parms;

	this->ProcessEvent ( pFnUpdateGFXTarget, &UpdateGFXTarget_Parms, NULL );
};

// Function NowGame.NowPlayerController.addTarget
// [0x00820002] 
// Parameters infos:
// struct FTarget                 needle                         ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::addTarget ( struct FTarget needle )
{
	static UFunction* pFnaddTarget = NULL;

	if ( ! pFnaddTarget )
		pFnaddTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.addTarget" );

	ANowPlayerController_execaddTarget_Parms addTarget_Parms;
	memcpy ( &addTarget_Parms.needle, &needle, 0x24 );

	this->ProcessEvent ( pFnaddTarget, &addTarget_Parms, NULL );
};

// Function NowGame.NowPlayerController.UseTarget
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ANowPlayerController::UseTarget ( )
{
	static UFunction* pFnUseTarget = NULL;

	if ( ! pFnUseTarget )
		pFnUseTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.UseTarget" );

	ANowPlayerController_execUseTarget_Parms UseTarget_Parms;

	this->ProcessEvent ( pFnUseTarget, &UseTarget_Parms, NULL );
};

// Function NowGame.NowPlayerController.CloseEnough
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pTarget                        ( CPF_Parm )

bool ANowPlayerController::CloseEnough ( class AActor* pTarget )
{
	static UFunction* pFnCloseEnough = NULL;

	if ( ! pFnCloseEnough )
		pFnCloseEnough = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CloseEnough" );

	ANowPlayerController_execCloseEnough_Parms CloseEnough_Parms;
	CloseEnough_Parms.pTarget = pTarget;

	this->ProcessEvent ( pFnCloseEnough, &CloseEnough_Parms, NULL );

	return CloseEnough_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.Dismount
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::Dismount ( )
{
	static UFunction* pFnDismount = NULL;

	if ( ! pFnDismount )
		pFnDismount = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.Dismount" );

	ANowPlayerController_execDismount_Parms Dismount_Parms;

	this->ProcessEvent ( pFnDismount, &Dismount_Parms, NULL );
};

// Function NowGame.NowPlayerController.CancelCharge
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::CancelCharge ( )
{
	static UFunction* pFnCancelCharge = NULL;

	if ( ! pFnCancelCharge )
		pFnCancelCharge = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CancelCharge" );

	ANowPlayerController_execCancelCharge_Parms CancelCharge_Parms;

	this->ProcessEvent ( pFnCancelCharge, &CancelCharge_Parms, NULL );
};

// Function NowGame.NowPlayerController.Quick
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void ANowPlayerController::Quick ( int Index )
{
	static UFunction* pFnQuick = NULL;

	if ( ! pFnQuick )
		pFnQuick = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.Quick" );

	ANowPlayerController_execQuick_Parms Quick_Parms;
	Quick_Parms.Index = Index;

	this->ProcessEvent ( pFnQuick, &Quick_Parms, NULL );
};

// Function NowGame.NowPlayerController.ToggleCombatMode
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::ToggleCombatMode ( unsigned long bForce )
{
	static UFunction* pFnToggleCombatMode = NULL;

	if ( ! pFnToggleCombatMode )
		pFnToggleCombatMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ToggleCombatMode" );

	ANowPlayerController_execToggleCombatMode_Parms ToggleCombatMode_Parms;
	ToggleCombatMode_Parms.bForce = bForce;

	this->ProcessEvent ( pFnToggleCombatMode, &ToggleCombatMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetGFX
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowGFXHud*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHud* ANowPlayerController::eventGetGFX ( )
{
	static UFunction* pFnGetGFX = NULL;

	if ( ! pFnGetGFX )
		pFnGetGFX = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetGFX" );

	ANowPlayerController_eventGetGFX_Parms GetGFX_Parms;

	this->ProcessEvent ( pFnGetGFX, &GetGFX_Parms, NULL );

	return GetGFX_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetGFXHud
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* ANowPlayerController::eventGetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetGFXHud" );

	ANowPlayerController_eventGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.IsPhysOk
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::eventIsPhysOk ( )
{
	static UFunction* pFnIsPhysOk = NULL;

	if ( ! pFnIsPhysOk )
		pFnIsPhysOk = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.IsPhysOk" );

	ANowPlayerController_eventIsPhysOk_Parms IsPhysOk_Parms;

	this->ProcessEvent ( pFnIsPhysOk, &IsPhysOk_Parms, NULL );

	return IsPhysOk_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.SetFishingMode
// [0x00024002] 
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::SetFishingMode ( unsigned long bNewValue, unsigned long bForce )
{
	static UFunction* pFnSetFishingMode = NULL;

	if ( ! pFnSetFishingMode )
		pFnSetFishingMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetFishingMode" );

	ANowPlayerController_execSetFishingMode_Parms SetFishingMode_Parms;
	SetFishingMode_Parms.bNewValue = bNewValue;
	SetFishingMode_Parms.bForce = bForce;

	this->ProcessEvent ( pFnSetFishingMode, &SetFishingMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetRangedMode
// [0x00024002] 
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::SetRangedMode ( unsigned long bNewValue, unsigned long bForce )
{
	static UFunction* pFnSetRangedMode = NULL;

	if ( ! pFnSetRangedMode )
		pFnSetRangedMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetRangedMode" );

	ANowPlayerController_execSetRangedMode_Parms SetRangedMode_Parms;
	SetRangedMode_Parms.bNewValue = bNewValue;
	SetRangedMode_Parms.bForce = bForce;

	this->ProcessEvent ( pFnSetRangedMode, &SetRangedMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetMeleeMode
// [0x00024002] 
// Parameters infos:
// unsigned long                  bNewValue                      ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::SetMeleeMode ( unsigned long bNewValue, unsigned long bForce )
{
	static UFunction* pFnSetMeleeMode = NULL;

	if ( ! pFnSetMeleeMode )
		pFnSetMeleeMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetMeleeMode" );

	ANowPlayerController_execSetMeleeMode_Parms SetMeleeMode_Parms;
	SetMeleeMode_Parms.bNewValue = bNewValue;
	SetMeleeMode_Parms.bForce = bForce;

	this->ProcessEvent ( pFnSetMeleeMode, &SetMeleeMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.CheckCombatTimerOk
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::CheckCombatTimerOk ( )
{
	static UFunction* pFnCheckCombatTimerOk = NULL;

	if ( ! pFnCheckCombatTimerOk )
		pFnCheckCombatTimerOk = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CheckCombatTimerOk" );

	ANowPlayerController_execCheckCombatTimerOk_Parms CheckCombatTimerOk_Parms;

	this->ProcessEvent ( pFnCheckCombatTimerOk, &CheckCombatTimerOk_Parms, NULL );

	return CheckCombatTimerOk_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ExitCombatMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventExitCombatMode ( )
{
	static UFunction* pFnExitCombatMode = NULL;

	if ( ! pFnExitCombatMode )
		pFnExitCombatMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ExitCombatMode" );

	ANowPlayerController_eventExitCombatMode_Parms ExitCombatMode_Parms;

	this->ProcessEvent ( pFnExitCombatMode, &ExitCombatMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.EnterCombatModeLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventEnterCombatModeLogin ( )
{
	static UFunction* pFnEnterCombatModeLogin = NULL;

	if ( ! pFnEnterCombatModeLogin )
		pFnEnterCombatModeLogin = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.EnterCombatModeLogin" );

	ANowPlayerController_eventEnterCombatModeLogin_Parms EnterCombatModeLogin_Parms;

	this->ProcessEvent ( pFnEnterCombatModeLogin, &EnterCombatModeLogin_Parms, NULL );
};

// Function NowGame.NowPlayerController.ForceCamera
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          Time                           ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::eventForceCamera ( float Time )
{
	static UFunction* pFnForceCamera = NULL;

	if ( ! pFnForceCamera )
		pFnForceCamera = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ForceCamera" );

	ANowPlayerController_eventForceCamera_Parms ForceCamera_Parms;
	ForceCamera_Parms.Time = Time;

	this->ProcessEvent ( pFnForceCamera, &ForceCamera_Parms, NULL );
};

// Function NowGame.NowPlayerController.TickCamToZeroRot
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowPlayerController::TickCamToZeroRot ( float DT )
{
	static UFunction* pFnTickCamToZeroRot = NULL;

	if ( ! pFnTickCamToZeroRot )
		pFnTickCamToZeroRot = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.TickCamToZeroRot" );

	ANowPlayerController_execTickCamToZeroRot_Parms TickCamToZeroRot_Parms;
	TickCamToZeroRot_Parms.DT = DT;

	this->ProcessEvent ( pFnTickCamToZeroRot, &TickCamToZeroRot_Parms, NULL );
};

// Function NowGame.NowPlayerController.TweenCamToZeroRot
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventTweenCamToZeroRot ( )
{
	static UFunction* pFnTweenCamToZeroRot = NULL;

	if ( ! pFnTweenCamToZeroRot )
		pFnTweenCamToZeroRot = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.TweenCamToZeroRot" );

	ANowPlayerController_eventTweenCamToZeroRot_Parms TweenCamToZeroRot_Parms;

	this->ProcessEvent ( pFnTweenCamToZeroRot, &TweenCamToZeroRot_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetStunned
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Why                            ( CPF_Parm | CPF_NeedCtorLink )
// float                          Time                           ( CPF_Parm )

void ANowPlayerController::eventSetStunned ( struct FString Why, float Time )
{
	static UFunction* pFnSetStunned = NULL;

	if ( ! pFnSetStunned )
		pFnSetStunned = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetStunned" );

	ANowPlayerController_eventSetStunned_Parms SetStunned_Parms;
	memcpy ( &SetStunned_Parms.Why, &Why, 0xC );
	SetStunned_Parms.Time = Time;

	this->ProcessEvent ( pFnSetStunned, &SetStunned_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetDisableMouseRotate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  newValue                       ( CPF_Parm )

void ANowPlayerController::eventSetDisableMouseRotate ( unsigned long newValue )
{
	static UFunction* pFnSetDisableMouseRotate = NULL;

	if ( ! pFnSetDisableMouseRotate )
		pFnSetDisableMouseRotate = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetDisableMouseRotate" );

	ANowPlayerController_eventSetDisableMouseRotate_Parms SetDisableMouseRotate_Parms;
	SetDisableMouseRotate_Parms.newValue = newValue;

	this->ProcessEvent ( pFnSetDisableMouseRotate, &SetDisableMouseRotate_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetNewSkillStats
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::GetNewSkillStats ( )
{
	static UFunction* pFnGetNewSkillStats = NULL;

	if ( ! pFnGetNewSkillStats )
		pFnGetNewSkillStats = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetNewSkillStats" );

	ANowPlayerController_execGetNewSkillStats_Parms GetNewSkillStats_Parms;

	this->ProcessEvent ( pFnGetNewSkillStats, &GetNewSkillStats_Parms, NULL );
};

// Function NowGame.NowPlayerController.StopAltFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::StopAltFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.StopAltFire" );

	ANowPlayerController_execStopAltFire_Parms StopAltFire_Parms;
	StopAltFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartAltFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::StartAltFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.StartAltFire" );

	ANowPlayerController_execStartAltFire_Parms StartAltFire_Parms;
	StartAltFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.NowPlayerController.StopFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::StopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.StopFire" );

	ANowPlayerController_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.StartFire" );

	ANowPlayerController_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.NowPlayerController.Ghost
// [0x00020802] ( FUNC_Event )
// Parameters infos:

	static UFunction* pFnGhost = NULL;
void ANowPlayerController::eventGhost ( )
{

	if ( ! pFnGhost )
		pFnGhost = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.Ghost" );

	ANowPlayerController_eventGhost_Parms Ghost_Parms;

	this->ProcessEvent ( pFnGhost, &Ghost_Parms, NULL );
};

// Function NowGame.NowPlayerController.Walk
// [0x00020802] ( FUNC_Event )
// Parameters infos:

	static UFunction* pFnWalk = NULL;
void ANowPlayerController::eventWalk ( )
{

	if ( ! pFnWalk )
		pFnWalk = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.Walk" );

	ANowPlayerController_eventWalk_Parms Walk_Parms;

	this->ProcessEvent ( pFnWalk, &Walk_Parms, NULL );
};

// Function NowGame.NowPlayerController.Fly
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventFly ( )
{
	static UFunction* pFnFly = NULL;

	if ( ! pFnFly )
		pFnFly = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.Fly" );

	ANowPlayerController_eventFly_Parms Fly_Parms;

	this->ProcessEvent ( pFnFly, &Fly_Parms, NULL );
};

// Function NowGame.NowPlayerController.SpellAction
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )

void ANowPlayerController::eventSpellAction ( int SpellID )
{
	static UFunction* pFnSpellAction = NULL;

	if ( ! pFnSpellAction )
		pFnSpellAction = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SpellAction" );

	ANowPlayerController_eventSpellAction_Parms SpellAction_Parms;
	SpellAction_Parms.SpellID = SpellID;

	this->ProcessEvent ( pFnSpellAction, &SpellAction_Parms, NULL );
};

// Function NowGame.NowPlayerController.Possess
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void ANowPlayerController::eventPossess ( class APawn* aPawn, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossess = NULL;

	if ( ! pFnPossess )
		pFnPossess = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.Possess" );

	ANowPlayerController_eventPossess_Parms Possess_Parms;
	Possess_Parms.aPawn = aPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossess, &Possess_Parms, NULL );
};

// Function NowGame.NowPlayerController.OpenGamesMenu
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventOpenGamesMenu ( )
{
	static UFunction* pFnOpenGamesMenu = NULL;

	if ( ! pFnOpenGamesMenu )
		pFnOpenGamesMenu = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.OpenGamesMenu" );

	ANowPlayerController_eventOpenGamesMenu_Parms OpenGamesMenu_Parms;

	this->ProcessEvent ( pFnOpenGamesMenu, &OpenGamesMenu_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetAudioDevice
// [0x00020002] 
// Parameters infos:
// class UAudioDevice*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UAudioDevice* ANowPlayerController::GetAudioDevice ( )
{
	static UFunction* pFnGetAudioDevice = NULL;

	if ( ! pFnGetAudioDevice )
		pFnGetAudioDevice = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetAudioDevice" );

	ANowPlayerController_execGetAudioDevice_Parms GetAudioDevice_Parms;

	this->ProcessEvent ( pFnGetAudioDevice, &GetAudioDevice_Parms, NULL );

	return GetAudioDevice_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.UpdateSoundVolume
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::UpdateSoundVolume ( )
{
	static UFunction* pFnUpdateSoundVolume = NULL;

	if ( ! pFnUpdateSoundVolume )
		pFnUpdateSoundVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.UpdateSoundVolume" );

	ANowPlayerController_execUpdateSoundVolume_Parms UpdateSoundVolume_Parms;

	this->ProcessEvent ( pFnUpdateSoundVolume, &UpdateSoundVolume_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetPendingAiSlotUpdate
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInit                          ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::eventSetPendingAiSlotUpdate ( unsigned long bInit )
{
	static UFunction* pFnSetPendingAiSlotUpdate = NULL;

	if ( ! pFnSetPendingAiSlotUpdate )
		pFnSetPendingAiSlotUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetPendingAiSlotUpdate" );

	ANowPlayerController_eventSetPendingAiSlotUpdate_Parms SetPendingAiSlotUpdate_Parms;
	SetPendingAiSlotUpdate_Parms.bInit = bInit;

	this->ProcessEvent ( pFnSetPendingAiSlotUpdate, &SetPendingAiSlotUpdate_Parms, NULL );
};

// Function NowGame.NowPlayerController.PendingShowMountPanel
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPendingShowMountPanel ( )
{
	static UFunction* pFnPendingShowMountPanel = NULL;

	if ( ! pFnPendingShowMountPanel )
		pFnPendingShowMountPanel = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PendingShowMountPanel" );

	ANowPlayerController_eventPendingShowMountPanel_Parms PendingShowMountPanel_Parms;

	this->ProcessEvent ( pFnPendingShowMountPanel, &PendingShowMountPanel_Parms, NULL );
};

// Function NowGame.NowPlayerController.OpenMountScene
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::OpenMountScene ( )
{
	static UFunction* pFnOpenMountScene = NULL;

	if ( ! pFnOpenMountScene )
		pFnOpenMountScene = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.OpenMountScene" );

	ANowPlayerController_execOpenMountScene_Parms OpenMountScene_Parms;

	this->ProcessEvent ( pFnOpenMountScene, &OpenMountScene_Parms, NULL );
};

// Function NowGame.NowPlayerController.CanUsePetEquipment
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::eventCanUsePetEquipment ( )
{
	static UFunction* pFnCanUsePetEquipment = NULL;

	if ( ! pFnCanUsePetEquipment )
		pFnCanUsePetEquipment = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CanUsePetEquipment" );

	ANowPlayerController_eventCanUsePetEquipment_Parms CanUsePetEquipment_Parms;

	this->ProcessEvent ( pFnCanUsePetEquipment, &CanUsePetEquipment_Parms, NULL );

	return CanUsePetEquipment_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ForceCloseSceneUGLY
// [0x00020002] 
// Parameters infos:
// struct FName                   Scene                          ( CPF_Parm )

void ANowPlayerController::ForceCloseSceneUGLY ( struct FName Scene )
{
	static UFunction* pFnForceCloseSceneUGLY = NULL;

	if ( ! pFnForceCloseSceneUGLY )
		pFnForceCloseSceneUGLY = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ForceCloseSceneUGLY" );

	ANowPlayerController_execForceCloseSceneUGLY_Parms ForceCloseSceneUGLY_Parms;
	memcpy ( &ForceCloseSceneUGLY_Parms.Scene, &Scene, 0x8 );

	this->ProcessEvent ( pFnForceCloseSceneUGLY, &ForceCloseSceneUGLY_Parms, NULL );
};

// Function NowGame.NowPlayerController.LightHack
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventLightHack ( )
{
	static UFunction* pFnLightHack = NULL;

	if ( ! pFnLightHack )
		pFnLightHack = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.LightHack" );

	ANowPlayerController_eventLightHack_Parms LightHack_Parms;

	this->ProcessEvent ( pFnLightHack, &LightHack_Parms, NULL );
};

// Function NowGame.NowPlayerController.LevelLoaded
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::LevelLoaded ( )
{
	static UFunction* pFnLevelLoaded = NULL;

	if ( ! pFnLevelLoaded )
		pFnLevelLoaded = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.LevelLoaded" );

	ANowPlayerController_execLevelLoaded_Parms LevelLoaded_Parms;

	this->ProcessEvent ( pFnLevelLoaded, &LevelLoaded_Parms, NULL );
};

// Function NowGame.NowPlayerController.PostAvatarObtained
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::PostAvatarObtained ( )
{
	static UFunction* pFnPostAvatarObtained = NULL;

	if ( ! pFnPostAvatarObtained )
		pFnPostAvatarObtained = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PostAvatarObtained" );

	ANowPlayerController_execPostAvatarObtained_Parms PostAvatarObtained_Parms;

	this->ProcessEvent ( pFnPostAvatarObtained, &PostAvatarObtained_Parms, NULL );
};

// Function NowGame.NowPlayerController.ReplaceWeather
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::ReplaceWeather ( )
{
	static UFunction* pFnReplaceWeather = NULL;

	if ( ! pFnReplaceWeather )
		pFnReplaceWeather = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ReplaceWeather" );

	ANowPlayerController_execReplaceWeather_Parms ReplaceWeather_Parms;

	this->ProcessEvent ( pFnReplaceWeather, &ReplaceWeather_Parms, NULL );
};

// Function NowGame.NowPlayerController.AttachActorsToPlayer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventAttachActorsToPlayer ( )
{
	static UFunction* pFnAttachActorsToPlayer = NULL;

	if ( ! pFnAttachActorsToPlayer )
		pFnAttachActorsToPlayer = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AttachActorsToPlayer" );

	ANowPlayerController_eventAttachActorsToPlayer_Parms AttachActorsToPlayer_Parms;

	this->ProcessEvent ( pFnAttachActorsToPlayer, &AttachActorsToPlayer_Parms, NULL );
};

// Function NowGame.NowPlayerController.AttachActorsToMount
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventAttachActorsToMount ( )
{
	static UFunction* pFnAttachActorsToMount = NULL;

	if ( ! pFnAttachActorsToMount )
		pFnAttachActorsToMount = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AttachActorsToMount" );

	ANowPlayerController_eventAttachActorsToMount_Parms AttachActorsToMount_Parms;

	this->ProcessEvent ( pFnAttachActorsToMount, &AttachActorsToMount_Parms, NULL );
};

// Function NowGame.NowPlayerController.KeepBased
// [0x00020002] 
// Parameters infos:
// class AActor*                  BaseActor                      ( CPF_Parm )

void ANowPlayerController::KeepBased ( class AActor* BaseActor )
{
	static UFunction* pFnKeepBased = NULL;

	if ( ! pFnKeepBased )
		pFnKeepBased = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.KeepBased" );

	ANowPlayerController_execKeepBased_Parms KeepBased_Parms;
	KeepBased_Parms.BaseActor = BaseActor;

	this->ProcessEvent ( pFnKeepBased, &KeepBased_Parms, NULL );
};

// Function NowGame.NowPlayerController.TickWeather1Sec
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::TickWeather1Sec ( )
{
	static UFunction* pFnTickWeather1Sec = NULL;

	if ( ! pFnTickWeather1Sec )
		pFnTickWeather1Sec = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.TickWeather1Sec" );

	ANowPlayerController_execTickWeather1Sec_Parms TickWeather1Sec_Parms;

	this->ProcessEvent ( pFnTickWeather1Sec, &TickWeather1Sec_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartWeather
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::StartWeather ( )
{
	static UFunction* pFnStartWeather = NULL;

	if ( ! pFnStartWeather )
		pFnStartWeather = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.StartWeather" );

	ANowPlayerController_execStartWeather_Parms StartWeather_Parms;

	this->ProcessEvent ( pFnStartWeather, &StartWeather_Parms, NULL );
};

// Function NowGame.NowPlayerController.UpdateTime
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::UpdateTime ( )
{
	static UFunction* pFnUpdateTime = NULL;

	if ( ! pFnUpdateTime )
		pFnUpdateTime = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.UpdateTime" );

	ANowPlayerController_execUpdateTime_Parms UpdateTime_Parms;

	this->ProcessEvent ( pFnUpdateTime, &UpdateTime_Parms, NULL );
};

// Function NowGame.NowPlayerController.SynchTime
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::SynchTime ( )
{
	static UFunction* pFnSynchTime = NULL;

	if ( ! pFnSynchTime )
		pFnSynchTime = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SynchTime" );

	ANowPlayerController_execSynchTime_Parms SynchTime_Parms;

	this->ProcessEvent ( pFnSynchTime, &SynchTime_Parms, NULL );
};

// Function NowGame.NowPlayerController.StartTime
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::StartTime ( )
{
	static UFunction* pFnStartTime = NULL;

	if ( ! pFnStartTime )
		pFnStartTime = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.StartTime" );

	ANowPlayerController_execStartTime_Parms StartTime_Parms;

	this->ProcessEvent ( pFnStartTime, &StartTime_Parms, NULL );
};

// Function NowGame.NowPlayerController.RedrawAllPawns
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::RedrawAllPawns ( )
{
	static UFunction* pFnRedrawAllPawns = NULL;

	if ( ! pFnRedrawAllPawns )
		pFnRedrawAllPawns = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.RedrawAllPawns" );

	ANowPlayerController_execRedrawAllPawns_Parms RedrawAllPawns_Parms;

	this->ProcessEvent ( pFnRedrawAllPawns, &RedrawAllPawns_Parms, NULL );
};

// Function NowGame.NowPlayerController.FindInCIListString
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WhatString                     ( CPF_Parm | CPF_NeedCtorLink )
// class UContentInfo_StringList* WhatList                       ( CPF_Parm )

int ANowPlayerController::eventFindInCIListString ( struct FString WhatString, class UContentInfo_StringList* WhatList )
{
	static UFunction* pFnFindInCIListString = NULL;

	if ( ! pFnFindInCIListString )
		pFnFindInCIListString = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.FindInCIListString" );

	ANowPlayerController_eventFindInCIListString_Parms FindInCIListString_Parms;
	memcpy ( &FindInCIListString_Parms.WhatString, &WhatString, 0xC );
	FindInCIListString_Parms.WhatList = WhatList;

	this->ProcessEvent ( pFnFindInCIListString, &FindInCIListString_Parms, NULL );

	return FindInCIListString_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.PlayAmbientSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class USoundCue*               NewCue                         ( CPF_Parm )

void ANowPlayerController::eventPlayAmbientSound ( class USoundCue* NewCue )
{
	static UFunction* pFnPlayAmbientSound = NULL;

	if ( ! pFnPlayAmbientSound )
		pFnPlayAmbientSound = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PlayAmbientSound" );

	ANowPlayerController_eventPlayAmbientSound_Parms PlayAmbientSound_Parms;
	PlayAmbientSound_Parms.NewCue = NewCue;

	this->ProcessEvent ( pFnPlayAmbientSound, &PlayAmbientSound_Parms, NULL );
};

// Function NowGame.NowPlayerController.StopAmbientSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventStopAmbientSound ( )
{
	static UFunction* pFnStopAmbientSound = NULL;

	if ( ! pFnStopAmbientSound )
		pFnStopAmbientSound = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.StopAmbientSound" );

	ANowPlayerController_eventStopAmbientSound_Parms StopAmbientSound_Parms;

	this->ProcessEvent ( pFnStopAmbientSound, &StopAmbientSound_Parms, NULL );
};

// Function NowGame.NowPlayerController.InitInputSystem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventInitInputSystem ( )
{
	static UFunction* pFnInitInputSystem = NULL;

	if ( ! pFnInitInputSystem )
		pFnInitInputSystem = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.InitInputSystem" );

	ANowPlayerController_eventInitInputSystem_Parms InitInputSystem_Parms;

	this->ProcessEvent ( pFnInitInputSystem, &InitInputSystem_Parms, NULL );
};

// Function NowGame.NowPlayerController.CancelAutoRun
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventCancelAutoRun ( )
{
	static UFunction* pFnCancelAutoRun = NULL;

	if ( ! pFnCancelAutoRun )
		pFnCancelAutoRun = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CancelAutoRun" );

	ANowPlayerController_eventCancelAutoRun_Parms CancelAutoRun_Parms;

	this->ProcessEvent ( pFnCancelAutoRun, &CancelAutoRun_Parms, NULL );
};

// Function NowGame.NowPlayerController.NotifyHeadVolumeChange
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APhysicsVolume*          NewVolume                      ( CPF_Parm )

bool ANowPlayerController::eventNotifyHeadVolumeChange ( class APhysicsVolume* NewVolume )
{
	static UFunction* pFnNotifyHeadVolumeChange = NULL;

	if ( ! pFnNotifyHeadVolumeChange )
		pFnNotifyHeadVolumeChange = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.NotifyHeadVolumeChange" );

	ANowPlayerController_eventNotifyHeadVolumeChange_Parms NotifyHeadVolumeChange_Parms;
	NotifyHeadVolumeChange_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnNotifyHeadVolumeChange, &NotifyHeadVolumeChange_Parms, NULL );

	return NotifyHeadVolumeChange_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.PlayIconSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPlayIconSound ( )
{
	static UFunction* pFnPlayIconSound = NULL;

	if ( ! pFnPlayIconSound )
		pFnPlayIconSound = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PlayIconSound" );

	ANowPlayerController_eventPlayIconSound_Parms PlayIconSound_Parms;

	this->ProcessEvent ( pFnPlayIconSound, &PlayIconSound_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlayGuildSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            WhatSound                      ( CPF_Parm )

void ANowPlayerController::eventPlayGuildSound ( int WhatSound )
{
	static UFunction* pFnPlayGuildSound = NULL;

	if ( ! pFnPlayGuildSound )
		pFnPlayGuildSound = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PlayGuildSound" );

	ANowPlayerController_eventPlayGuildSound_Parms PlayGuildSound_Parms;
	PlayGuildSound_Parms.WhatSound = WhatSound;

	this->ProcessEvent ( pFnPlayGuildSound, &PlayGuildSound_Parms, NULL );
};

// Function NowGame.NowPlayerController.SetFishingOn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          NewRange                       ( CPF_Parm )

void ANowPlayerController::eventSetFishingOn ( float NewRange )
{
	static UFunction* pFnSetFishingOn = NULL;

	if ( ! pFnSetFishingOn )
		pFnSetFishingOn = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetFishingOn" );

	ANowPlayerController_eventSetFishingOn_Parms SetFishingOn_Parms;
	SetFishingOn_Parms.NewRange = NewRange;

	this->ProcessEvent ( pFnSetFishingOn, &SetFishingOn_Parms, NULL );
};

// Function NowGame.NowPlayerController.UpdatePetUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventUpdatePetUI ( )
{
	static UFunction* pFnUpdatePetUI = NULL;

	if ( ! pFnUpdatePetUI )
		pFnUpdatePetUI = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.UpdatePetUI" );

	ANowPlayerController_eventUpdatePetUI_Parms UpdatePetUI_Parms;

	this->ProcessEvent ( pFnUpdatePetUI, &UpdatePetUI_Parms, NULL );
};

// Function NowGame.NowPlayerController.CheckSceneDistance
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::CheckSceneDistance ( )
{
	static UFunction* pFnCheckSceneDistance = NULL;

	if ( ! pFnCheckSceneDistance )
		pFnCheckSceneDistance = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CheckSceneDistance" );

	ANowPlayerController_execCheckSceneDistance_Parms CheckSceneDistance_Parms;

	this->ProcessEvent ( pFnCheckSceneDistance, &CheckSceneDistance_Parms, NULL );
};

// Function NowGame.NowPlayerController.AddCurrentActiveScene
// [0x00020002] 
// Parameters infos:
// class UUIScene_Now_BaseScene*  NewScene                       ( CPF_Parm )

void ANowPlayerController::AddCurrentActiveScene ( class UUIScene_Now_BaseScene* NewScene )
{
	static UFunction* pFnAddCurrentActiveScene = NULL;

	if ( ! pFnAddCurrentActiveScene )
		pFnAddCurrentActiveScene = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AddCurrentActiveScene" );

	ANowPlayerController_execAddCurrentActiveScene_Parms AddCurrentActiveScene_Parms;
	AddCurrentActiveScene_Parms.NewScene = NewScene;

	this->ProcessEvent ( pFnAddCurrentActiveScene, &AddCurrentActiveScene_Parms, NULL );
};

// Function NowGame.NowPlayerController.RemoveDistanceClose
// [0x00020002] 
// Parameters infos:
// class UUIScene_Now_BaseScene*  Scene                          ( CPF_Parm )

void ANowPlayerController::RemoveDistanceClose ( class UUIScene_Now_BaseScene* Scene )
{
	static UFunction* pFnRemoveDistanceClose = NULL;

	if ( ! pFnRemoveDistanceClose )
		pFnRemoveDistanceClose = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.RemoveDistanceClose" );

	ANowPlayerController_execRemoveDistanceClose_Parms RemoveDistanceClose_Parms;
	RemoveDistanceClose_Parms.Scene = Scene;

	this->ProcessEvent ( pFnRemoveDistanceClose, &RemoveDistanceClose_Parms, NULL );
};

// Function NowGame.NowPlayerController.AddClientEffect
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class UClientEffect*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  NewEffectName                  ( CPF_Parm )
// float                          EffectRate                     ( CPF_OptionalParm | CPF_Parm )
// float                          StartTime                      ( CPF_OptionalParm | CPF_Parm )

class UClientEffect* ANowPlayerController::eventAddClientEffect ( class UClass* NewEffectName, float EffectRate, float StartTime )
{
	static UFunction* pFnAddClientEffect = NULL;

	if ( ! pFnAddClientEffect )
		pFnAddClientEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AddClientEffect" );

	ANowPlayerController_eventAddClientEffect_Parms AddClientEffect_Parms;
	AddClientEffect_Parms.NewEffectName = NewEffectName;
	AddClientEffect_Parms.EffectRate = EffectRate;
	AddClientEffect_Parms.StartTime = StartTime;

	this->ProcessEvent ( pFnAddClientEffect, &AddClientEffect_Parms, NULL );

	return AddClientEffect_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.AddViewMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  NewViewMode                    ( CPF_Parm )

void ANowPlayerController::eventAddViewMode ( class UClass* NewViewMode )
{
	static UFunction* pFnAddViewMode = NULL;

	if ( ! pFnAddViewMode )
		pFnAddViewMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AddViewMode" );

	ANowPlayerController_eventAddViewMode_Parms AddViewMode_Parms;
	AddViewMode_Parms.NewViewMode = NewViewMode;

	this->ProcessEvent ( pFnAddViewMode, &AddViewMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.AddClientEffectString
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 NewEffectName                  ( CPF_Parm | CPF_NeedCtorLink )
// float                          EffectRate                     ( CPF_OptionalParm | CPF_Parm )
// float                          StartTime                      ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerController::eventAddClientEffectString ( struct FString NewEffectName, float EffectRate, float StartTime )
{
	static UFunction* pFnAddClientEffectString = NULL;

	if ( ! pFnAddClientEffectString )
		pFnAddClientEffectString = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AddClientEffectString" );

	ANowPlayerController_eventAddClientEffectString_Parms AddClientEffectString_Parms;
	memcpy ( &AddClientEffectString_Parms.NewEffectName, &NewEffectName, 0xC );
	AddClientEffectString_Parms.EffectRate = EffectRate;
	AddClientEffectString_Parms.StartTime = StartTime;

	this->ProcessEvent ( pFnAddClientEffectString, &AddClientEffectString_Parms, NULL );
};

// Function NowGame.NowPlayerController.UpgradePylonMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventUpgradePylonMode ( )
{
	static UFunction* pFnUpgradePylonMode = NULL;

	if ( ! pFnUpgradePylonMode )
		pFnUpgradePylonMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.UpgradePylonMode" );

	ANowPlayerController_eventUpgradePylonMode_Parms UpgradePylonMode_Parms;

	this->ProcessEvent ( pFnUpgradePylonMode, &UpgradePylonMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlacePylonMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPlacePylonMode ( )
{
	static UFunction* pFnPlacePylonMode = NULL;

	if ( ! pFnPlacePylonMode )
		pFnPlacePylonMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PlacePylonMode" );

	ANowPlayerController_eventPlacePylonMode_Parms PlacePylonMode_Parms;

	this->ProcessEvent ( pFnPlacePylonMode, &PlacePylonMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlaceKeepNpcMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPlaceKeepNpcMode ( )
{
	static UFunction* pFnPlaceKeepNpcMode = NULL;

	if ( ! pFnPlaceKeepNpcMode )
		pFnPlaceKeepNpcMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PlaceKeepNpcMode" );

	ANowPlayerController_eventPlaceKeepNpcMode_Parms PlaceKeepNpcMode_Parms;

	this->ProcessEvent ( pFnPlaceKeepNpcMode, &PlaceKeepNpcMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.PlaceAvatarMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sContentInfo                   ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bGuardZone                     ( CPF_Parm )

void ANowPlayerController::eventPlaceAvatarMode ( struct FString sContentInfo, unsigned long bGuardZone )
{
	static UFunction* pFnPlaceAvatarMode = NULL;

	if ( ! pFnPlaceAvatarMode )
		pFnPlaceAvatarMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PlaceAvatarMode" );

	ANowPlayerController_eventPlaceAvatarMode_Parms PlaceAvatarMode_Parms;
	memcpy ( &PlaceAvatarMode_Parms.sContentInfo, &sContentInfo, 0xC );
	PlaceAvatarMode_Parms.bGuardZone = bGuardZone;

	this->ProcessEvent ( pFnPlaceAvatarMode, &PlaceAvatarMode_Parms, NULL );
};

// Function NowGame.NowPlayerController.ViewModeOff
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventViewModeOff ( )
{
	static UFunction* pFnViewModeOff = NULL;

	if ( ! pFnViewModeOff )
		pFnViewModeOff = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ViewModeOff" );

	ANowPlayerController_eventViewModeOff_Parms ViewModeOff_Parms;

	this->ProcessEvent ( pFnViewModeOff, &ViewModeOff_Parms, NULL );
};

// Function NowGame.NowPlayerController.ResetPetInfo
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::ResetPetInfo ( )
{
	static UFunction* pFnResetPetInfo = NULL;

	if ( ! pFnResetPetInfo )
		pFnResetPetInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ResetPetInfo" );

	ANowPlayerController_execResetPetInfo_Parms ResetPetInfo_Parms;

	this->ProcessEvent ( pFnResetPetInfo, &ResetPetInfo_Parms, NULL );
};

// Function NowGame.NowPlayerController.AddPetInfo
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sPetName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPetType                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            iPetLevel                      ( CPF_Parm )
// int                            iPetLoyalty                    ( CPF_Parm )
// int                            iPetHP                         ( CPF_Parm )
// int                            iStableIndex                   ( CPF_Parm )
// struct FString                 sState                         ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::eventAddPetInfo ( struct FString sPetName, struct FString sPetType, int iPetLevel, int iPetLoyalty, int iPetHP, int iStableIndex, struct FString sState )
{
	static UFunction* pFnAddPetInfo = NULL;

	if ( ! pFnAddPetInfo )
		pFnAddPetInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AddPetInfo" );

	ANowPlayerController_eventAddPetInfo_Parms AddPetInfo_Parms;
	memcpy ( &AddPetInfo_Parms.sPetName, &sPetName, 0xC );
	memcpy ( &AddPetInfo_Parms.sPetType, &sPetType, 0xC );
	AddPetInfo_Parms.iPetLevel = iPetLevel;
	AddPetInfo_Parms.iPetLoyalty = iPetLoyalty;
	AddPetInfo_Parms.iPetHP = iPetHP;
	AddPetInfo_Parms.iStableIndex = iStableIndex;
	memcpy ( &AddPetInfo_Parms.sState, &sState, 0xC );

	this->ProcessEvent ( pFnAddPetInfo, &AddPetInfo_Parms, NULL );
};

// Function NowGame.NowPlayerController.ResetPylonInfo
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::ResetPylonInfo ( )
{
	static UFunction* pFnResetPylonInfo = NULL;

	if ( ! pFnResetPylonInfo )
		pFnResetPylonInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ResetPylonInfo" );

	ANowPlayerController_execResetPylonInfo_Parms ResetPylonInfo_Parms;

	this->ProcessEvent ( pFnResetPylonInfo, &ResetPylonInfo_Parms, NULL );
};

// Function NowGame.NowPlayerController.AddPylonInfo
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 newPylonGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 newPylonGuild                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 newPylonLoc                    ( CPF_Parm )
// float                          newPylonAOE                    ( CPF_Parm )
// float                          newPylonAOEMeter               ( CPF_Parm )
// float                          newPylonAOETgt                 ( CPF_Parm )
// float                          newPylonDef                    ( CPF_Parm )
// float                          newPylonDefTgt                 ( CPF_Parm )
// float                          newPylonAtt                    ( CPF_Parm )
// float                          newPylonAttTgt                 ( CPF_Parm )
// int                            newPylonTier                   ( CPF_Parm )
// int                            newPylonUpkeep                 ( CPF_Parm )

void ANowPlayerController::eventAddPylonInfo ( struct FString newPylonGuid, struct FString newPylonGuild, struct FVector newPylonLoc, float newPylonAOE, float newPylonAOEMeter, float newPylonAOETgt, float newPylonDef, float newPylonDefTgt, float newPylonAtt, float newPylonAttTgt, int newPylonTier, int newPylonUpkeep )
{
	static UFunction* pFnAddPylonInfo = NULL;

	if ( ! pFnAddPylonInfo )
		pFnAddPylonInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AddPylonInfo" );

	ANowPlayerController_eventAddPylonInfo_Parms AddPylonInfo_Parms;
	memcpy ( &AddPylonInfo_Parms.newPylonGuid, &newPylonGuid, 0xC );
	memcpy ( &AddPylonInfo_Parms.newPylonGuild, &newPylonGuild, 0xC );
	memcpy ( &AddPylonInfo_Parms.newPylonLoc, &newPylonLoc, 0xC );
	AddPylonInfo_Parms.newPylonAOE = newPylonAOE;
	AddPylonInfo_Parms.newPylonAOEMeter = newPylonAOEMeter;
	AddPylonInfo_Parms.newPylonAOETgt = newPylonAOETgt;
	AddPylonInfo_Parms.newPylonDef = newPylonDef;
	AddPylonInfo_Parms.newPylonDefTgt = newPylonDefTgt;
	AddPylonInfo_Parms.newPylonAtt = newPylonAtt;
	AddPylonInfo_Parms.newPylonAttTgt = newPylonAttTgt;
	AddPylonInfo_Parms.newPylonTier = newPylonTier;
	AddPylonInfo_Parms.newPylonUpkeep = newPylonUpkeep;

	this->ProcessEvent ( pFnAddPylonInfo, &AddPylonInfo_Parms, NULL );
};

// Function NowGame.NowPlayerController.ClearPylonInfo
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventClearPylonInfo ( )
{
	static UFunction* pFnClearPylonInfo = NULL;

	if ( ! pFnClearPylonInfo )
		pFnClearPylonInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ClearPylonInfo" );

	ANowPlayerController_eventClearPylonInfo_Parms ClearPylonInfo_Parms;

	this->ProcessEvent ( pFnClearPylonInfo, &ClearPylonInfo_Parms, NULL );
};

// Function NowGame.NowPlayerController.OpenPylonGui
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::OpenPylonGui ( )
{
	static UFunction* pFnOpenPylonGui = NULL;

	if ( ! pFnOpenPylonGui )
		pFnOpenPylonGui = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.OpenPylonGui" );

	ANowPlayerController_execOpenPylonGui_Parms OpenPylonGui_Parms;

	this->ProcessEvent ( pFnOpenPylonGui, &OpenPylonGui_Parms, NULL );
};

// Function NowGame.NowPlayerController.PingTimer
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::PingTimer ( )
{
	static UFunction* pFnPingTimer = NULL;

	if ( ! pFnPingTimer )
		pFnPingTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PingTimer" );

	ANowPlayerController_execPingTimer_Parms PingTimer_Parms;

	this->ProcessEvent ( pFnPingTimer, &PingTimer_Parms, NULL );
};

// Function NowGame.NowPlayerController.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.PostBeginPlay" );

	ANowPlayerController_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowPlayerController.VarGainTimer
// [0x00020002] 
// Parameters infos:

void ANowPlayerController::VarGainTimer ( )
{
	static UFunction* pFnVarGainTimer = NULL;

	if ( ! pFnVarGainTimer )
		pFnVarGainTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.VarGainTimer" );

	ANowPlayerController_execVarGainTimer_Parms VarGainTimer_Parms;

	this->ProcessEvent ( pFnVarGainTimer, &VarGainTimer_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetHouseFromID
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iID                            ( CPF_Parm )

class ANowAtlasAvatarPlayerHouse* ANowPlayerController::GetHouseFromID ( int iID )
{
	static UFunction* pFnGetHouseFromID = NULL;

	if ( ! pFnGetHouseFromID )
		pFnGetHouseFromID = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetHouseFromID" );

	ANowPlayerController_execGetHouseFromID_Parms GetHouseFromID_Parms;
	GetHouseFromID_Parms.iID = iID;

	this->ProcessEvent ( pFnGetHouseFromID, &GetHouseFromID_Parms, NULL );

	return GetHouseFromID_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.IsMyPet
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowAtlasAvatarAi*       pAi                            ( CPF_Parm )

bool ANowPlayerController::IsMyPet ( class ANowAtlasAvatarAi* pAi )
{
	static UFunction* pFnIsMyPet = NULL;

	if ( ! pFnIsMyPet )
		pFnIsMyPet = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.IsMyPet" );

	ANowPlayerController_execIsMyPet_Parms IsMyPet_Parms;
	IsMyPet_Parms.pAi = pAi;

	this->ProcessEvent ( pFnIsMyPet, &IsMyPet_Parms, NULL );

	return IsMyPet_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetPetFromGuid
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarAi*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

class ANowAtlasAvatarAi* ANowPlayerController::eventGetPetFromGuid ( struct FString sGuid )
{
	static UFunction* pFnGetPetFromGuid = NULL;

	if ( ! pFnGetPetFromGuid )
		pFnGetPetFromGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetPetFromGuid" );

	ANowPlayerController_eventGetPetFromGuid_Parms GetPetFromGuid_Parms;
	memcpy ( &GetPetFromGuid_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnGetPetFromGuid, &GetPetFromGuid_Parms, NULL );

	return GetPetFromGuid_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetPawnFromName
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

class ANowPawn* ANowPlayerController::GetPawnFromName ( struct FString sName )
{
	static UFunction* pFnGetPawnFromName = NULL;

	if ( ! pFnGetPawnFromName )
		pFnGetPawnFromName = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetPawnFromName" );

	ANowPlayerController_execGetPawnFromName_Parms GetPawnFromName_Parms;
	memcpy ( &GetPawnFromName_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnGetPawnFromName, &GetPawnFromName_Parms, NULL );

	return GetPawnFromName_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetPetFromName
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAi*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sPetName                       ( CPF_Parm | CPF_NeedCtorLink )

class ANowAtlasAvatarAi* ANowPlayerController::GetPetFromName ( struct FString sPetName )
{
	static UFunction* pFnGetPetFromName = NULL;

	if ( ! pFnGetPetFromName )
		pFnGetPetFromName = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetPetFromName" );

	ANowPlayerController_execGetPetFromName_Parms GetPetFromName_Parms;
	memcpy ( &GetPetFromName_Parms.sPetName, &sPetName, 0xC );

	this->ProcessEvent ( pFnGetPetFromName, &GetPetFromName_Parms, NULL );

	return GetPetFromName_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.UpdateAiSlot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarAi*       pActor                         ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void ANowPlayerController::eventUpdateAiSlot ( class ANowAtlasAvatarAi* pActor, int iSlot )
{
	static UFunction* pFnUpdateAiSlot = NULL;

	if ( ! pFnUpdateAiSlot )
		pFnUpdateAiSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.UpdateAiSlot" );

	ANowPlayerController_eventUpdateAiSlot_Parms UpdateAiSlot_Parms;
	UpdateAiSlot_Parms.pActor = pActor;
	UpdateAiSlot_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnUpdateAiSlot, &UpdateAiSlot_Parms, NULL );
};

// Function NowGame.NowPlayerController.ClearCachedPetInfo
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerController::eventClearCachedPetInfo ( )
{
	static UFunction* pFnClearCachedPetInfo = NULL;

	if ( ! pFnClearCachedPetInfo )
		pFnClearCachedPetInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ClearCachedPetInfo" );

	ANowPlayerController_eventClearCachedPetInfo_Parms ClearCachedPetInfo_Parms;

	this->ProcessEvent ( pFnClearCachedPetInfo, &ClearCachedPetInfo_Parms, NULL );
};

// Function NowGame.NowPlayerController.GetNoobBitMap
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iAiId                          ( CPF_Parm )

int ANowPlayerController::GetNoobBitMap ( int iAiId )
{
	static UFunction* pFnGetNoobBitMap = NULL;

	if ( ! pFnGetNoobBitMap )
		pFnGetNoobBitMap = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetNoobBitMap" );

	ANowPlayerController_execGetNoobBitMap_Parms GetNoobBitMap_Parms;
	GetNoobBitMap_Parms.iAiId = iAiId;

	pFnGetNoobBitMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNoobBitMap, &GetNoobBitMap_Parms, NULL );

	pFnGetNoobBitMap->FunctionFlags |= 0x400;

	return GetNoobBitMap_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.SendConsumeItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iCounter                       ( CPF_Parm )

void ANowPlayerController::SendConsumeItem ( int iCounter )
{
	static UFunction* pFnSendConsumeItem = NULL;

	if ( ! pFnSendConsumeItem )
		pFnSendConsumeItem = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SendConsumeItem" );

	ANowPlayerController_execSendConsumeItem_Parms SendConsumeItem_Parms;
	SendConsumeItem_Parms.iCounter = iCounter;

	pFnSendConsumeItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendConsumeItem, &SendConsumeItem_Parms, NULL );

	pFnSendConsumeItem->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SendUseToTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::SendUseToTarget ( )
{
	static UFunction* pFnSendUseToTarget = NULL;

	if ( ! pFnSendUseToTarget )
		pFnSendUseToTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SendUseToTarget" );

	ANowPlayerController_execSendUseToTarget_Parms SendUseToTarget_Parms;

	pFnSendUseToTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendUseToTarget, &SendUseToTarget_Parms, NULL );

	pFnSendUseToTarget->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.CmdUseItemSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void ANowPlayerController::CmdUseItemSlot ( int iSlot )
{
	static UFunction* pFnCmdUseItemSlot = NULL;

	if ( ! pFnCmdUseItemSlot )
		pFnCmdUseItemSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CmdUseItemSlot" );

	ANowPlayerController_execCmdUseItemSlot_Parms CmdUseItemSlot_Parms;
	CmdUseItemSlot_Parms.iSlot = iSlot;

	pFnCmdUseItemSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCmdUseItemSlot, &CmdUseItemSlot_Parms, NULL );

	pFnCmdUseItemSlot->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.StringColorFromIntColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iIntColor                      ( CPF_Parm )

struct FString ANowPlayerController::StringColorFromIntColor ( int iIntColor )
{
	static UFunction* pFnStringColorFromIntColor = NULL;

	if ( ! pFnStringColorFromIntColor )
		pFnStringColorFromIntColor = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.StringColorFromIntColor" );

	ANowPlayerController_execStringColorFromIntColor_Parms StringColorFromIntColor_Parms;
	StringColorFromIntColor_Parms.iIntColor = iIntColor;

	pFnStringColorFromIntColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStringColorFromIntColor, &StringColorFromIntColor_Parms, NULL );

	pFnStringColorFromIntColor->FunctionFlags |= 0x400;

	return StringColorFromIntColor_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ColorFromIntColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iIntColor                      ( CPF_Parm )

struct FColor ANowPlayerController::ColorFromIntColor ( int iIntColor )
{
	static UFunction* pFnColorFromIntColor = NULL;

	if ( ! pFnColorFromIntColor )
		pFnColorFromIntColor = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ColorFromIntColor" );

	ANowPlayerController_execColorFromIntColor_Parms ColorFromIntColor_Parms;
	ColorFromIntColor_Parms.iIntColor = iIntColor;

	pFnColorFromIntColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnColorFromIntColor, &ColorFromIntColor_Parms, NULL );

	pFnColorFromIntColor->FunctionFlags |= 0x400;

	return ColorFromIntColor_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetIntColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            R                              ( CPF_Parm )
// int                            G                              ( CPF_Parm )
// int                            B                              ( CPF_Parm )
// int                            A                              ( CPF_Parm )

int ANowPlayerController::GetIntColor ( int R, int G, int B, int A )
{
	static UFunction* pFnGetIntColor = NULL;

	if ( ! pFnGetIntColor )
		pFnGetIntColor = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetIntColor" );

	ANowPlayerController_execGetIntColor_Parms GetIntColor_Parms;
	GetIntColor_Parms.R = R;
	GetIntColor_Parms.G = G;
	GetIntColor_Parms.B = B;
	GetIntColor_Parms.A = A;

	pFnGetIntColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIntColor, &GetIntColor_Parms, NULL );

	pFnGetIntColor->FunctionFlags |= 0x400;

	return GetIntColor_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetPetGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iSlotId                        ( CPF_Parm )

struct FString ANowPlayerController::GetPetGuid ( int iSlotId )
{
	static UFunction* pFnGetPetGuid = NULL;

	if ( ! pFnGetPetGuid )
		pFnGetPetGuid = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetPetGuid" );

	ANowPlayerController_execGetPetGuid_Parms GetPetGuid_Parms;
	GetPetGuid_Parms.iSlotId = iSlotId;

	pFnGetPetGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetGuid, &GetPetGuid_Parms, NULL );

	pFnGetPetGuid->FunctionFlags |= 0x400;

	return GetPetGuid_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.UseSpell
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sSpellGuid                     ( CPF_Parm | CPF_NeedCtorLink )

bool ANowPlayerController::UseSpell ( struct FString sSpellGuid )
{
	static UFunction* pFnUseSpell = NULL;

	if ( ! pFnUseSpell )
		pFnUseSpell = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.UseSpell" );

	ANowPlayerController_execUseSpell_Parms UseSpell_Parms;
	memcpy ( &UseSpell_Parms.sSpellGuid, &sSpellGuid, 0xC );

	pFnUseSpell->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseSpell, &UseSpell_Parms, NULL );

	pFnUseSpell->FunctionFlags |= 0x400;

	return UseSpell_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetGuidFromSpellName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sSpellGuid                     ( CPF_Parm | CPF_NeedCtorLink )

struct FString ANowPlayerController::GetGuidFromSpellName ( struct FString sSpellGuid )
{
	static UFunction* pFnGetGuidFromSpellName = NULL;

	if ( ! pFnGetGuidFromSpellName )
		pFnGetGuidFromSpellName = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetGuidFromSpellName" );

	ANowPlayerController_execGetGuidFromSpellName_Parms GetGuidFromSpellName_Parms;
	memcpy ( &GetGuidFromSpellName_Parms.sSpellGuid, &sSpellGuid, 0xC );

	pFnGetGuidFromSpellName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuidFromSpellName, &GetGuidFromSpellName_Parms, NULL );

	pFnGetGuidFromSpellName->FunctionFlags |= 0x400;

	return GetGuidFromSpellName_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.UseSkill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sSkillGuid                     ( CPF_Parm | CPF_NeedCtorLink )

bool ANowPlayerController::UseSkill ( struct FString sSkillGuid )
{
	static UFunction* pFnUseSkill = NULL;

	if ( ! pFnUseSkill )
		pFnUseSkill = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.UseSkill" );

	ANowPlayerController_execUseSkill_Parms UseSkill_Parms;
	memcpy ( &UseSkill_Parms.sSkillGuid, &sSkillGuid, 0xC );

	pFnUseSkill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseSkill, &UseSkill_Parms, NULL );

	pFnUseSkill->FunctionFlags |= 0x400;

	return UseSkill_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetGuidFromSkillName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString ANowPlayerController::GetGuidFromSkillName ( struct FString sName )
{
	static UFunction* pFnGetGuidFromSkillName = NULL;

	if ( ! pFnGetGuidFromSkillName )
		pFnGetGuidFromSkillName = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetGuidFromSkillName" );

	ANowPlayerController_execGetGuidFromSkillName_Parms GetGuidFromSkillName_Parms;
	memcpy ( &GetGuidFromSkillName_Parms.sName, &sName, 0xC );

	pFnGetGuidFromSkillName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuidFromSkillName, &GetGuidFromSkillName_Parms, NULL );

	pFnGetGuidFromSkillName->FunctionFlags |= 0x400;

	return GetGuidFromSkillName_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.DebugNavMeshErrors
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::DebugNavMeshErrors ( )
{
	static UFunction* pFnDebugNavMeshErrors = NULL;

	if ( ! pFnDebugNavMeshErrors )
		pFnDebugNavMeshErrors = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.DebugNavMeshErrors" );

	ANowPlayerController_execDebugNavMeshErrors_Parms DebugNavMeshErrors_Parms;

	pFnDebugNavMeshErrors->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugNavMeshErrors, &DebugNavMeshErrors_Parms, NULL );

	pFnDebugNavMeshErrors->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.RemTags
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

struct FString ANowPlayerController::RemTags ( struct FString sString )
{
	static UFunction* pFnRemTags = NULL;

	if ( ! pFnRemTags )
		pFnRemTags = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.RemTags" );

	ANowPlayerController_execRemTags_Parms RemTags_Parms;
	memcpy ( &RemTags_Parms.sString, &sString, 0xC );

	pFnRemTags->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemTags, &RemTags_Parms, NULL );

	pFnRemTags->FunctionFlags |= 0x400;

	return RemTags_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.AiCommandMount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )

void ANowPlayerController::AiCommandMount ( class ANowAtlasAvatar* aActor )
{
	static UFunction* pFnAiCommandMount = NULL;

	if ( ! pFnAiCommandMount )
		pFnAiCommandMount = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AiCommandMount" );

	ANowPlayerController_execAiCommandMount_Parms AiCommandMount_Parms;
	AiCommandMount_Parms.aActor = aActor;

	pFnAiCommandMount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandMount, &AiCommandMount_Parms, NULL );

	pFnAiCommandMount->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandLevelLock
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )

void ANowPlayerController::AiCommandLevelLock ( class ANowAtlasAvatar* aActor )
{
	static UFunction* pFnAiCommandLevelLock = NULL;

	if ( ! pFnAiCommandLevelLock )
		pFnAiCommandLevelLock = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AiCommandLevelLock" );

	ANowPlayerController_execAiCommandLevelLock_Parms AiCommandLevelLock_Parms;
	AiCommandLevelLock_Parms.aActor = aActor;

	pFnAiCommandLevelLock->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandLevelLock, &AiCommandLevelLock_Parms, NULL );

	pFnAiCommandLevelLock->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandRename
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// struct FString                 sNewName                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::AiCommandRename ( class ANowAtlasAvatar* aActor, struct FString sNewName )
{
	static UFunction* pFnAiCommandRename = NULL;

	if ( ! pFnAiCommandRename )
		pFnAiCommandRename = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AiCommandRename" );

	ANowPlayerController_execAiCommandRename_Parms AiCommandRename_Parms;
	AiCommandRename_Parms.aActor = aActor;
	memcpy ( &AiCommandRename_Parms.sNewName, &sNewName, 0xC );

	pFnAiCommandRename->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandRename, &AiCommandRename_Parms, NULL );

	pFnAiCommandRename->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandAbandonGlobal
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::AiCommandAbandonGlobal ( struct FString sGuid )
{
	static UFunction* pFnAiCommandAbandonGlobal = NULL;

	if ( ! pFnAiCommandAbandonGlobal )
		pFnAiCommandAbandonGlobal = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AiCommandAbandonGlobal" );

	ANowPlayerController_execAiCommandAbandonGlobal_Parms AiCommandAbandonGlobal_Parms;
	memcpy ( &AiCommandAbandonGlobal_Parms.sGuid, &sGuid, 0xC );

	pFnAiCommandAbandonGlobal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandAbandonGlobal, &AiCommandAbandonGlobal_Parms, NULL );

	pFnAiCommandAbandonGlobal->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandAbandon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )

void ANowPlayerController::AiCommandAbandon ( class ANowAtlasAvatar* aActor )
{
	static UFunction* pFnAiCommandAbandon = NULL;

	if ( ! pFnAiCommandAbandon )
		pFnAiCommandAbandon = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AiCommandAbandon" );

	ANowPlayerController_execAiCommandAbandon_Parms AiCommandAbandon_Parms;
	AiCommandAbandon_Parms.aActor = aActor;

	pFnAiCommandAbandon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandAbandon, &AiCommandAbandon_Parms, NULL );

	pFnAiCommandAbandon->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandFeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void ANowPlayerController::AiCommandFeed ( class ANowAtlasAvatar* aActor, struct FString sItemGuid )
{
	static UFunction* pFnAiCommandFeed = NULL;

	if ( ! pFnAiCommandFeed )
		pFnAiCommandFeed = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AiCommandFeed" );

	ANowPlayerController_execAiCommandFeed_Parms AiCommandFeed_Parms;
	AiCommandFeed_Parms.aActor = aActor;
	memcpy ( &AiCommandFeed_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnAiCommandFeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandFeed, &AiCommandFeed_Parms, NULL );

	pFnAiCommandFeed->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandStay
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )

void ANowPlayerController::AiCommandStay ( class ANowAtlasAvatar* aActor )
{
	static UFunction* pFnAiCommandStay = NULL;

	if ( ! pFnAiCommandStay )
		pFnAiCommandStay = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AiCommandStay" );

	ANowPlayerController_execAiCommandStay_Parms AiCommandStay_Parms;
	AiCommandStay_Parms.aActor = aActor;

	pFnAiCommandStay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandStay, &AiCommandStay_Parms, NULL );

	pFnAiCommandStay->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// int                            NewMode                        ( CPF_Parm )

void ANowPlayerController::AiCommandMode ( class ANowAtlasAvatar* aActor, int NewMode )
{
	static UFunction* pFnAiCommandMode = NULL;

	if ( ! pFnAiCommandMode )
		pFnAiCommandMode = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AiCommandMode" );

	ANowPlayerController_execAiCommandMode_Parms AiCommandMode_Parms;
	AiCommandMode_Parms.aActor = aActor;
	AiCommandMode_Parms.NewMode = NewMode;

	pFnAiCommandMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandMode, &AiCommandMode_Parms, NULL );

	pFnAiCommandMode->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandGoToPos
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// struct FVector                 vPos                           ( CPF_Parm )

void ANowPlayerController::AiCommandGoToPos ( class ANowAtlasAvatar* aActor, struct FVector vPos )
{
	static UFunction* pFnAiCommandGoToPos = NULL;

	if ( ! pFnAiCommandGoToPos )
		pFnAiCommandGoToPos = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AiCommandGoToPos" );

	ANowPlayerController_execAiCommandGoToPos_Parms AiCommandGoToPos_Parms;
	AiCommandGoToPos_Parms.aActor = aActor;
	memcpy ( &AiCommandGoToPos_Parms.vPos, &vPos, 0xC );

	pFnAiCommandGoToPos->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandGoToPos, &AiCommandGoToPos_Parms, NULL );

	pFnAiCommandGoToPos->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandAttack
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// class AActor*                  ATarget                        ( CPF_Parm )

void ANowPlayerController::AiCommandAttack ( class ANowAtlasAvatar* aActor, class AActor* ATarget )
{
	static UFunction* pFnAiCommandAttack = NULL;

	if ( ! pFnAiCommandAttack )
		pFnAiCommandAttack = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AiCommandAttack" );

	ANowPlayerController_execAiCommandAttack_Parms AiCommandAttack_Parms;
	AiCommandAttack_Parms.aActor = aActor;
	AiCommandAttack_Parms.ATarget = ATarget;

	pFnAiCommandAttack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandAttack, &AiCommandAttack_Parms, NULL );

	pFnAiCommandAttack->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.AiCommandFollow
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         aActor                         ( CPF_Parm )
// class AActor*                  ATarget                        ( CPF_Parm )

void ANowPlayerController::AiCommandFollow ( class ANowAtlasAvatar* aActor, class AActor* ATarget )
{
	static UFunction* pFnAiCommandFollow = NULL;

	if ( ! pFnAiCommandFollow )
		pFnAiCommandFollow = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.AiCommandFollow" );

	ANowPlayerController_execAiCommandFollow_Parms AiCommandFollow_Parms;
	AiCommandFollow_Parms.aActor = aActor;
	AiCommandFollow_Parms.ATarget = ATarget;

	pFnAiCommandFollow->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAiCommandFollow, &AiCommandFollow_Parms, NULL );

	pFnAiCommandFollow->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SendEscape
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::SendEscape ( )
{
	static UFunction* pFnSendEscape = NULL;

	if ( ! pFnSendEscape )
		pFnSendEscape = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SendEscape" );

	ANowPlayerController_execSendEscape_Parms SendEscape_Parms;

	pFnSendEscape->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendEscape, &SendEscape_Parms, NULL );

	pFnSendEscape->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.CalcClusterInfo
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// struct FString                 TargetPylonGuid                ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// float                          MaxArea                        ( CPF_Parm | CPF_OutParm )
// float                          IntersectArea                  ( CPF_Parm | CPF_OutParm )
// int                            PointsToSpend                  ( CPF_Parm | CPF_OutParm )
// int                            PointsCost                     ( CPF_Parm | CPF_OutParm )
// int                            TotalTowersInCluster           ( CPF_Parm | CPF_OutParm )
// int                            bConnectedToKeep               ( CPF_Parm | CPF_OutParm )
// int                            iTierCost                      ( CPF_Parm | CPF_OutParm )
// int                            iCanChange                     ( CPF_Parm | CPF_OutParm )
// int                            iCanSeeTarget                  ( CPF_Parm | CPF_OutParm )
// int                            iMaxTargetAoe                  ( CPF_Parm | CPF_OutParm )
// int                            iMaxTargetDef                  ( CPF_Parm | CPF_OutParm )
// int                            iMaxTargetAtt                  ( CPF_Parm | CPF_OutParm )

void ANowPlayerController::CalcClusterInfo ( struct FString TargetPylonGuid, float* MaxArea, float* IntersectArea, int* PointsToSpend, int* PointsCost, int* TotalTowersInCluster, int* bConnectedToKeep, int* iTierCost, int* iCanChange, int* iCanSeeTarget, int* iMaxTargetAoe, int* iMaxTargetDef, int* iMaxTargetAtt )
{
	static UFunction* pFnCalcClusterInfo = NULL;

	if ( ! pFnCalcClusterInfo )
		pFnCalcClusterInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CalcClusterInfo" );

	ANowPlayerController_execCalcClusterInfo_Parms CalcClusterInfo_Parms;
	memcpy ( &CalcClusterInfo_Parms.TargetPylonGuid, &TargetPylonGuid, 0xC );

	pFnCalcClusterInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcClusterInfo, &CalcClusterInfo_Parms, NULL );

	pFnCalcClusterInfo->FunctionFlags |= 0x400;

	if ( MaxArea )
		*MaxArea = CalcClusterInfo_Parms.MaxArea;

	if ( IntersectArea )
		*IntersectArea = CalcClusterInfo_Parms.IntersectArea;

	if ( PointsToSpend )
		*PointsToSpend = CalcClusterInfo_Parms.PointsToSpend;

	if ( PointsCost )
		*PointsCost = CalcClusterInfo_Parms.PointsCost;

	if ( TotalTowersInCluster )
		*TotalTowersInCluster = CalcClusterInfo_Parms.TotalTowersInCluster;

	if ( bConnectedToKeep )
		*bConnectedToKeep = CalcClusterInfo_Parms.bConnectedToKeep;

	if ( iTierCost )
		*iTierCost = CalcClusterInfo_Parms.iTierCost;

	if ( iCanChange )
		*iCanChange = CalcClusterInfo_Parms.iCanChange;

	if ( iCanSeeTarget )
		*iCanSeeTarget = CalcClusterInfo_Parms.iCanSeeTarget;

	if ( iMaxTargetAoe )
		*iMaxTargetAoe = CalcClusterInfo_Parms.iMaxTargetAoe;

	if ( iMaxTargetDef )
		*iMaxTargetDef = CalcClusterInfo_Parms.iMaxTargetDef;

	if ( iMaxTargetAtt )
		*iMaxTargetAtt = CalcClusterInfo_Parms.iMaxTargetAtt;
};

// Function NowGame.NowPlayerController.InterSectCalcThing
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          A1                             ( CPF_Parm )
// float                          A2                             ( CPF_Parm )
// struct FVector                 Pos1                           ( CPF_Parm | CPF_OutParm )
// struct FVector                 Pos2                           ( CPF_Parm | CPF_OutParm )

float ANowPlayerController::InterSectCalcThing ( float A1, float A2, struct FVector* Pos1, struct FVector* Pos2 )
{
	static UFunction* pFnInterSectCalcThing = NULL;

	if ( ! pFnInterSectCalcThing )
		pFnInterSectCalcThing = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.InterSectCalcThing" );

	ANowPlayerController_execInterSectCalcThing_Parms InterSectCalcThing_Parms;
	InterSectCalcThing_Parms.A1 = A1;
	InterSectCalcThing_Parms.A2 = A2;

	pFnInterSectCalcThing->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInterSectCalcThing, &InterSectCalcThing_Parms, NULL );

	pFnInterSectCalcThing->FunctionFlags |= 0x400;

	if ( Pos1 )
		memcpy ( Pos1, &InterSectCalcThing_Parms.Pos1, 0xC );

	if ( Pos2 )
		memcpy ( Pos2, &InterSectCalcThing_Parms.Pos2, 0xC );

	return InterSectCalcThing_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetRawDynamicMountStatsFromString
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 StatString                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iLevel                         ( CPF_Parm )
// int                            attrb_Strength                 ( CPF_Parm | CPF_OutParm )
// int                            attrb_Dexterity                ( CPF_Parm | CPF_OutParm )
// int                            attrb_Constitution             ( CPF_Parm | CPF_OutParm )
// int                            attrb_Psyche                   ( CPF_Parm | CPF_OutParm )
// int                            attrb_Intelligence             ( CPF_Parm | CPF_OutParm )
// int                            attrb_Speed                    ( CPF_Parm | CPF_OutParm )
// int                            attrb_Size                     ( CPF_Parm | CPF_OutParm )
// int                            attrb_Weight                   ( CPF_Parm | CPF_OutParm )

void ANowPlayerController::GetRawDynamicMountStatsFromString ( struct FString StatString, int iLevel, int* attrb_Strength, int* attrb_Dexterity, int* attrb_Constitution, int* attrb_Psyche, int* attrb_Intelligence, int* attrb_Speed, int* attrb_Size, int* attrb_Weight )
{
	static UFunction* pFnGetRawDynamicMountStatsFromString = NULL;

	if ( ! pFnGetRawDynamicMountStatsFromString )
		pFnGetRawDynamicMountStatsFromString = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetRawDynamicMountStatsFromString" );

	ANowPlayerController_execGetRawDynamicMountStatsFromString_Parms GetRawDynamicMountStatsFromString_Parms;
	memcpy ( &GetRawDynamicMountStatsFromString_Parms.StatString, &StatString, 0xC );
	GetRawDynamicMountStatsFromString_Parms.iLevel = iLevel;

	pFnGetRawDynamicMountStatsFromString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRawDynamicMountStatsFromString, &GetRawDynamicMountStatsFromString_Parms, NULL );

	pFnGetRawDynamicMountStatsFromString->FunctionFlags |= 0x400;

	if ( attrb_Strength )
		*attrb_Strength = GetRawDynamicMountStatsFromString_Parms.attrb_Strength;

	if ( attrb_Dexterity )
		*attrb_Dexterity = GetRawDynamicMountStatsFromString_Parms.attrb_Dexterity;

	if ( attrb_Constitution )
		*attrb_Constitution = GetRawDynamicMountStatsFromString_Parms.attrb_Constitution;

	if ( attrb_Psyche )
		*attrb_Psyche = GetRawDynamicMountStatsFromString_Parms.attrb_Psyche;

	if ( attrb_Intelligence )
		*attrb_Intelligence = GetRawDynamicMountStatsFromString_Parms.attrb_Intelligence;

	if ( attrb_Speed )
		*attrb_Speed = GetRawDynamicMountStatsFromString_Parms.attrb_Speed;

	if ( attrb_Size )
		*attrb_Size = GetRawDynamicMountStatsFromString_Parms.attrb_Size;

	if ( attrb_Weight )
		*attrb_Weight = GetRawDynamicMountStatsFromString_Parms.attrb_Weight;
};

// Function NowGame.NowPlayerController.GetDynamicMountStatsFromString
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 StatString                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            iLevel                         ( CPF_Parm )
// int                            attrb_Strength                 ( CPF_Parm | CPF_OutParm )
// int                            attrb_Dexterity                ( CPF_Parm | CPF_OutParm )
// int                            attrb_Constitution             ( CPF_Parm | CPF_OutParm )
// int                            attrb_Psyche                   ( CPF_Parm | CPF_OutParm )
// int                            attrb_Intelligence             ( CPF_Parm | CPF_OutParm )
// int                            attrb_Speed                    ( CPF_Parm | CPF_OutParm )
// int                            attrb_Size                     ( CPF_Parm | CPF_OutParm )
// int                            attrb_Weight                   ( CPF_Parm | CPF_OutParm )

void ANowPlayerController::GetDynamicMountStatsFromString ( struct FString StatString, int iLevel, int* attrb_Strength, int* attrb_Dexterity, int* attrb_Constitution, int* attrb_Psyche, int* attrb_Intelligence, int* attrb_Speed, int* attrb_Size, int* attrb_Weight )
{
	static UFunction* pFnGetDynamicMountStatsFromString = NULL;

	if ( ! pFnGetDynamicMountStatsFromString )
		pFnGetDynamicMountStatsFromString = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetDynamicMountStatsFromString" );

	ANowPlayerController_execGetDynamicMountStatsFromString_Parms GetDynamicMountStatsFromString_Parms;
	memcpy ( &GetDynamicMountStatsFromString_Parms.StatString, &StatString, 0xC );
	GetDynamicMountStatsFromString_Parms.iLevel = iLevel;

	pFnGetDynamicMountStatsFromString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDynamicMountStatsFromString, &GetDynamicMountStatsFromString_Parms, NULL );

	pFnGetDynamicMountStatsFromString->FunctionFlags |= 0x400;

	if ( attrb_Strength )
		*attrb_Strength = GetDynamicMountStatsFromString_Parms.attrb_Strength;

	if ( attrb_Dexterity )
		*attrb_Dexterity = GetDynamicMountStatsFromString_Parms.attrb_Dexterity;

	if ( attrb_Constitution )
		*attrb_Constitution = GetDynamicMountStatsFromString_Parms.attrb_Constitution;

	if ( attrb_Psyche )
		*attrb_Psyche = GetDynamicMountStatsFromString_Parms.attrb_Psyche;

	if ( attrb_Intelligence )
		*attrb_Intelligence = GetDynamicMountStatsFromString_Parms.attrb_Intelligence;

	if ( attrb_Speed )
		*attrb_Speed = GetDynamicMountStatsFromString_Parms.attrb_Speed;

	if ( attrb_Size )
		*attrb_Size = GetDynamicMountStatsFromString_Parms.attrb_Size;

	if ( attrb_Weight )
		*attrb_Weight = GetDynamicMountStatsFromString_Parms.attrb_Weight;
};

// Function NowGame.NowPlayerController.GetFriendsListName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       out_list                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ANowPlayerController::GetFriendsListName ( TArray< struct FString >* out_list )
{
	static UFunction* pFnGetFriendsListName = NULL;

	if ( ! pFnGetFriendsListName )
		pFnGetFriendsListName = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetFriendsListName" );

	ANowPlayerController_execGetFriendsListName_Parms GetFriendsListName_Parms;

	pFnGetFriendsListName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFriendsListName, &GetFriendsListName_Parms, NULL );

	pFnGetFriendsListName->FunctionFlags |= 0x400;

	if ( out_list )
		memcpy ( out_list, &GetFriendsListName_Parms.out_list, 0xC );
};

// Function NowGame.NowPlayerController.ForceUpdateDLE
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  DLEC                           ( CPF_Parm )

void ANowPlayerController::ForceUpdateDLE ( class AActor* DLEC )
{
	static UFunction* pFnForceUpdateDLE = NULL;

	if ( ! pFnForceUpdateDLE )
		pFnForceUpdateDLE = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ForceUpdateDLE" );

	ANowPlayerController_execForceUpdateDLE_Parms ForceUpdateDLE_Parms;
	ForceUpdateDLE_Parms.DLEC = DLEC;

	pFnForceUpdateDLE->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceUpdateDLE, &ForceUpdateDLE_Parms, NULL );

	pFnForceUpdateDLE->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.UpdateWeather
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::UpdateWeather ( )
{
	static UFunction* pFnUpdateWeather = NULL;

	if ( ! pFnUpdateWeather )
		pFnUpdateWeather = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.UpdateWeather" );

	ANowPlayerController_execUpdateWeather_Parms UpdateWeather_Parms;

	pFnUpdateWeather->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateWeather, &UpdateWeather_Parms, NULL );

	pFnUpdateWeather->FunctionFlags |= 0x400;

	return UpdateWeather_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.IsInGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::IsInGuild ( )
{
	static UFunction* pFnIsInGuild = NULL;

	if ( ! pFnIsInGuild )
		pFnIsInGuild = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.IsInGuild" );

	ANowPlayerController_execIsInGuild_Parms IsInGuild_Parms;

	pFnIsInGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInGuild, &IsInGuild_Parms, NULL );

	pFnIsInGuild->FunctionFlags |= 0x400;

	return IsInGuild_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.IsThisMyGuild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 GuildGuid                      ( CPF_Parm | CPF_NeedCtorLink )

bool ANowPlayerController::IsThisMyGuild ( struct FString GuildGuid )
{
	static UFunction* pFnIsThisMyGuild = NULL;

	if ( ! pFnIsThisMyGuild )
		pFnIsThisMyGuild = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.IsThisMyGuild" );

	ANowPlayerController_execIsThisMyGuild_Parms IsThisMyGuild_Parms;
	memcpy ( &IsThisMyGuild_Parms.GuildGuid, &GuildGuid, 0xC );

	pFnIsThisMyGuild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsThisMyGuild, &IsThisMyGuild_Parms, NULL );

	pFnIsThisMyGuild->FunctionFlags |= 0x400;

	return IsThisMyGuild_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetVersionString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowPlayerController::GetVersionString ( )
{
	static UFunction* pFnGetVersionString = NULL;

	if ( ! pFnGetVersionString )
		pFnGetVersionString = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetVersionString" );

	ANowPlayerController_execGetVersionString_Parms GetVersionString_Parms;

	pFnGetVersionString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVersionString, &GetVersionString_Parms, NULL );

	pFnGetVersionString->FunctionFlags |= 0x400;

	return GetVersionString_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.CommandOk
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WhatCommand                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool ANowPlayerController::CommandOk ( struct FString WhatCommand )
{
	static UFunction* pFnCommandOk = NULL;

	if ( ! pFnCommandOk )
		pFnCommandOk = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.CommandOk" );

	ANowPlayerController_execCommandOk_Parms CommandOk_Parms;
	memcpy ( &CommandOk_Parms.WhatCommand, &WhatCommand, 0xC );

	pFnCommandOk->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCommandOk, &CommandOk_Parms, NULL );

	pFnCommandOk->FunctionFlags |= 0x400;

	return CommandOk_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetQueryStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::GetQueryStats ( )
{
	static UFunction* pFnGetQueryStats = NULL;

	if ( ! pFnGetQueryStats )
		pFnGetQueryStats = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetQueryStats" );

	ANowPlayerController_execGetQueryStats_Parms GetQueryStats_Parms;

	pFnGetQueryStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetQueryStats, &GetQueryStats_Parms, NULL );

	pFnGetQueryStats->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.GetPetPointsMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowPlayerController::GetPetPointsMax ( )
{
	static UFunction* pFnGetPetPointsMax = NULL;

	if ( ! pFnGetPetPointsMax )
		pFnGetPetPointsMax = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetPetPointsMax" );

	ANowPlayerController_execGetPetPointsMax_Parms GetPetPointsMax_Parms;

	pFnGetPetPointsMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetPointsMax, &GetPetPointsMax_Parms, NULL );

	pFnGetPetPointsMax->FunctionFlags |= 0x400;

	return GetPetPointsMax_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetPetPoints
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowPlayerController::GetPetPoints ( )
{
	static UFunction* pFnGetPetPoints = NULL;

	if ( ! pFnGetPetPoints )
		pFnGetPetPoints = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetPetPoints" );

	ANowPlayerController_execGetPetPoints_Parms GetPetPoints_Parms;

	pFnGetPetPoints->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetPoints, &GetPetPoints_Parms, NULL );

	pFnGetPetPoints->FunctionFlags |= 0x400;

	return GetPetPoints_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetMurderCounts
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::GetMurderCounts ( )
{
	static UFunction* pFnGetMurderCounts = NULL;

	if ( ! pFnGetMurderCounts )
		pFnGetMurderCounts = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetMurderCounts" );

	ANowPlayerController_execGetMurderCounts_Parms GetMurderCounts_Parms;

	pFnGetMurderCounts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMurderCounts, &GetMurderCounts_Parms, NULL );

	pFnGetMurderCounts->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.GetWeights
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowPlayerController::GetWeights ( )
{
	static UFunction* pFnGetWeights = NULL;

	if ( ! pFnGetWeights )
		pFnGetWeights = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetWeights" );

	ANowPlayerController_execGetWeights_Parms GetWeights_Parms;

	pFnGetWeights->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWeights, &GetWeights_Parms, NULL );

	pFnGetWeights->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SetLastVar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          New                            ( CPF_Parm )

void ANowPlayerController::SetLastVar ( float New )
{
	static UFunction* pFnSetLastVar = NULL;

	if ( ! pFnSetLastVar )
		pFnSetLastVar = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetLastVar" );

	ANowPlayerController_execSetLastVar_Parms SetLastVar_Parms;
	SetLastVar_Parms.New = New;

	pFnSetLastVar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLastVar, &SetLastVar_Parms, NULL );

	pFnSetLastVar->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SetVarB
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            WhatVal                        ( CPF_Parm )
// int                            WhatVar                        ( CPF_Parm )

void ANowPlayerController::SetVarB ( int WhatVal, int WhatVar )
{
	static UFunction* pFnSetVarB = NULL;

	if ( ! pFnSetVarB )
		pFnSetVarB = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetVarB" );

	ANowPlayerController_execSetVarB_Parms SetVarB_Parms;
	SetVarB_Parms.WhatVal = WhatVal;
	SetVarB_Parms.WhatVar = WhatVar;

	pFnSetVarB->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVarB, &SetVarB_Parms, NULL );

	pFnSetVarB->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SetVar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          WhatVal                        ( CPF_Parm )
// int                            WhatVar                        ( CPF_Parm )

void ANowPlayerController::SetVar ( float WhatVal, int WhatVar )
{
	static UFunction* pFnSetVar = NULL;

	if ( ! pFnSetVar )
		pFnSetVar = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetVar" );

	ANowPlayerController_execSetVar_Parms SetVar_Parms;
	SetVar_Parms.WhatVal = WhatVal;
	SetVar_Parms.WhatVar = WhatVar;

	pFnSetVar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVar, &SetVar_Parms, NULL );

	pFnSetVar->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.GetVarB
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            WhatVar                        ( CPF_Parm )

int ANowPlayerController::GetVarB ( int WhatVar )
{
	static UFunction* pFnGetVarB = NULL;

	if ( ! pFnGetVarB )
		pFnGetVarB = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetVarB" );

	ANowPlayerController_execGetVarB_Parms GetVarB_Parms;
	GetVarB_Parms.WhatVar = WhatVar;

	pFnGetVarB->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVarB, &GetVarB_Parms, NULL );

	pFnGetVarB->FunctionFlags |= 0x400;

	return GetVarB_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.GetVar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            WhatVar                        ( CPF_Parm )

float ANowPlayerController::GetVar ( int WhatVar )
{
	static UFunction* pFnGetVar = NULL;

	if ( ! pFnGetVar )
		pFnGetVar = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetVar" );

	ANowPlayerController_execGetVar_Parms GetVar_Parms;
	GetVar_Parms.WhatVar = WhatVar;

	pFnGetVar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVar, &GetVar_Parms, NULL );

	pFnGetVar->FunctionFlags |= 0x400;

	return GetVar_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.ShowingMouse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerController::ShowingMouse ( )
{
	static UFunction* pFnShowingMouse = NULL;

	if ( ! pFnShowingMouse )
		pFnShowingMouse = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.ShowingMouse" );

	ANowPlayerController_execShowingMouse_Parms ShowingMouse_Parms;

	pFnShowingMouse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowingMouse, &ShowingMouse_Parms, NULL );

	pFnShowingMouse->FunctionFlags |= 0x400;

	return ShowingMouse_Parms.ReturnValue;
};

// Function NowGame.NowPlayerController.SetLoginStage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            newStage                       ( CPF_Parm )

void ANowPlayerController::SetLoginStage ( int newStage )
{
	static UFunction* pFnSetLoginStage = NULL;

	if ( ! pFnSetLoginStage )
		pFnSetLoginStage = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetLoginStage" );

	ANowPlayerController_execSetLoginStage_Parms SetLoginStage_Parms;
	SetLoginStage_Parms.newStage = newStage;

	pFnSetLoginStage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLoginStage, &SetLoginStage_Parms, NULL );

	pFnSetLoginStage->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.SetSoundCueC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USoundCue*               New                            ( CPF_Parm )

void ANowPlayerController::SetSoundCueC ( class USoundCue* New )
{
	static UFunction* pFnSetSoundCueC = NULL;

	if ( ! pFnSetSoundCueC )
		pFnSetSoundCueC = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.SetSoundCueC" );

	ANowPlayerController_execSetSoundCueC_Parms SetSoundCueC_Parms;
	SetSoundCueC_Parms.New = New;

	pFnSetSoundCueC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSoundCueC, &SetSoundCueC_Parms, NULL );

	pFnSetSoundCueC->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerController.GetSkillLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WhatSkill                      ( CPF_Parm | CPF_NeedCtorLink )

int ANowPlayerController::GetSkillLevel ( struct FString WhatSkill )
{
	static UFunction* pFnGetSkillLevel = NULL;

	if ( ! pFnGetSkillLevel )
		pFnGetSkillLevel = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerController.GetSkillLevel" );

	ANowPlayerController_execGetSkillLevel_Parms GetSkillLevel_Parms;
	memcpy ( &GetSkillLevel_Parms.WhatSkill, &WhatSkill, 0xC );

	pFnGetSkillLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillLevel, &GetSkillLevel_Parms, NULL );

	pFnGetSkillLevel->FunctionFlags |= 0x400;

	return GetSkillLevel_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.GetFatnessName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UNowPlayerDatastore::GetFatnessName ( )
{
	static UFunction* pFnGetFatnessName = NULL;

	if ( ! pFnGetFatnessName )
		pFnGetFatnessName = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.GetFatnessName" );

	UNowPlayerDatastore_execGetFatnessName_Parms GetFatnessName_Parms;

	this->ProcessEvent ( pFnGetFatnessName, &GetFatnessName_Parms, NULL );

	return GetFatnessName_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.UpdateGFX
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

void UNowPlayerDatastore::eventUpdateGFX ( struct FString sName )
{
	static UFunction* pFnUpdateGFX = NULL;

	if ( ! pFnUpdateGFX )
		pFnUpdateGFX = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.UpdateGFX" );

	UNowPlayerDatastore_eventUpdateGFX_Parms UpdateGFX_Parms;
	memcpy ( &UpdateGFX_Parms.sName, &sName, 0xC );

	this->ProcessEvent ( pFnUpdateGFX, &UpdateGFX_Parms, NULL );
};

// Function NowGame.NowPlayerDatastore.InitGFXStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowPlayerDatastore::eventInitGFXStats ( )
{
	static UFunction* pFnInitGFXStats = NULL;

	if ( ! pFnInitGFXStats )
		pFnInitGFXStats = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.InitGFXStats" );

	UNowPlayerDatastore_eventInitGFXStats_Parms InitGFXStats_Parms;

	this->ProcessEvent ( pFnInitGFXStats, &InitGFXStats_Parms, NULL );
};

// Function NowGame.NowPlayerDatastore.FindMyController
// [0x00020002] 
// Parameters infos:

void UNowPlayerDatastore::FindMyController ( )
{
	static UFunction* pFnFindMyController = NULL;

	if ( ! pFnFindMyController )
		pFnFindMyController = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.FindMyController" );

	UNowPlayerDatastore_execFindMyController_Parms FindMyController_Parms;

	this->ProcessEvent ( pFnFindMyController, &FindMyController_Parms, NULL );
};

// Function NowGame.NowPlayerDatastore.GetGFXHud
// [0x00020002] 
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* UNowPlayerDatastore::GetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.GetGFXHud" );

	UNowPlayerDatastore_execGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.UpdateGFXHudParam
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  Param                          ( CPF_Parm )
// unsigned char                  TargetType                     ( CPF_Parm )
// int                            NewIntValue                    ( CPF_OptionalParm | CPF_Parm )
// struct FString                 NewStringValue                 ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UNowPlayerDatastore::eventUpdateGFXHudParam ( unsigned char Param, unsigned char TargetType, int NewIntValue, struct FString NewStringValue )
{
	static UFunction* pFnUpdateGFXHudParam = NULL;

	if ( ! pFnUpdateGFXHudParam )
		pFnUpdateGFXHudParam = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.UpdateGFXHudParam" );

	UNowPlayerDatastore_eventUpdateGFXHudParam_Parms UpdateGFXHudParam_Parms;
	UpdateGFXHudParam_Parms.Param = Param;
	UpdateGFXHudParam_Parms.TargetType = TargetType;
	UpdateGFXHudParam_Parms.NewIntValue = NewIntValue;
	memcpy ( &UpdateGFXHudParam_Parms.NewStringValue, &NewStringValue, 0xC );

	this->ProcessEvent ( pFnUpdateGFXHudParam, &UpdateGFXHudParam_Parms, NULL );
};

// Function NowGame.NowPlayerDatastore.SetWindowPos
// [0x00820002] 
// Parameters infos:
// struct FName                   wname                          ( CPF_Parm )
// float                          PosX                           ( CPF_Parm )
// float                          PosY                           ( CPF_Parm )

void UNowPlayerDatastore::SetWindowPos ( struct FName wname, float PosX, float PosY )
{
	static UFunction* pFnSetWindowPos = NULL;

	if ( ! pFnSetWindowPos )
		pFnSetWindowPos = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.SetWindowPos" );

	UNowPlayerDatastore_execSetWindowPos_Parms SetWindowPos_Parms;
	memcpy ( &SetWindowPos_Parms.wname, &wname, 0x8 );
	SetWindowPos_Parms.PosX = PosX;
	SetWindowPos_Parms.PosY = PosY;

	this->ProcessEvent ( pFnSetWindowPos, &SetWindowPos_Parms, NULL );
};

// Function NowGame.NowPlayerDatastore.GetWindowPos
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   wname                          ( CPF_Parm )
// float                          X                              ( CPF_Parm | CPF_OutParm )
// float                          Y                              ( CPF_Parm | CPF_OutParm )

bool UNowPlayerDatastore::GetWindowPos ( struct FName wname, float* X, float* Y )
{
	static UFunction* pFnGetWindowPos = NULL;

	if ( ! pFnGetWindowPos )
		pFnGetWindowPos = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.GetWindowPos" );

	UNowPlayerDatastore_execGetWindowPos_Parms GetWindowPos_Parms;
	memcpy ( &GetWindowPos_Parms.wname, &wname, 0x8 );

	this->ProcessEvent ( pFnGetWindowPos, &GetWindowPos_Parms, NULL );

	if ( X )
		*X = GetWindowPos_Parms.X;

	if ( Y )
		*Y = GetWindowPos_Parms.Y;

	return GetWindowPos_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.FindWindow
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   wname                          ( CPF_Parm )

int UNowPlayerDatastore::FindWindow ( struct FName wname )
{
	static UFunction* pFnFindWindow = NULL;

	if ( ! pFnFindWindow )
		pFnFindWindow = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.FindWindow" );

	UNowPlayerDatastore_execFindWindow_Parms FindWindow_Parms;
	memcpy ( &FindWindow_Parms.wname, &wname, 0x8 );

	this->ProcessEvent ( pFnFindWindow, &FindWindow_Parms, NULL );

	return FindWindow_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.UpdateTarget
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )
// unsigned char                  UpdateType                     ( CPF_Parm )
// int                            IntValue                       ( CPF_OptionalParm | CPF_Parm )
// struct FString                 StrValue                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UNowPlayerDatastore::eventUpdateTarget ( class AActor* WhatActor, unsigned char UpdateType, int IntValue, struct FString StrValue )
{
	static UFunction* pFnUpdateTarget = NULL;

	if ( ! pFnUpdateTarget )
		pFnUpdateTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.UpdateTarget" );

	UNowPlayerDatastore_eventUpdateTarget_Parms UpdateTarget_Parms;
	UpdateTarget_Parms.WhatActor = WhatActor;
	UpdateTarget_Parms.UpdateType = UpdateType;
	UpdateTarget_Parms.IntValue = IntValue;
	memcpy ( &UpdateTarget_Parms.StrValue, &StrValue, 0xC );

	this->ProcessEvent ( pFnUpdateTarget, &UpdateTarget_Parms, NULL );
};

// Function NowGame.NowPlayerDatastore.SetTarget
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 TargetName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            CurHealth                      ( CPF_Parm )
// int                            MaxHealth                      ( CPF_Parm )
// int                            Flag                           ( CPF_Parm )
// class AActor*                  pActor                         ( CPF_Parm )

void UNowPlayerDatastore::SetTarget ( int Index, struct FString DisplayName, struct FString TargetName, int CurHealth, int MaxHealth, int Flag, class AActor* pActor )
{
	static UFunction* pFnSetTarget = NULL;

	if ( ! pFnSetTarget )
		pFnSetTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.SetTarget" );

	UNowPlayerDatastore_execSetTarget_Parms SetTarget_Parms;
	SetTarget_Parms.Index = Index;
	memcpy ( &SetTarget_Parms.DisplayName, &DisplayName, 0xC );
	memcpy ( &SetTarget_Parms.TargetName, &TargetName, 0xC );
	SetTarget_Parms.CurHealth = CurHealth;
	SetTarget_Parms.MaxHealth = MaxHealth;
	SetTarget_Parms.Flag = Flag;
	SetTarget_Parms.pActor = pActor;

	this->ProcessEvent ( pFnSetTarget, &SetTarget_Parms, NULL );
};

// Function NowGame.NowPlayerDatastore.SetMaxStamina
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            NewMaxSP                       ( CPF_Parm )

void UNowPlayerDatastore::eventSetMaxStamina ( int NewMaxSP )
{
	static UFunction* pFnSetMaxStamina = NULL;

	if ( ! pFnSetMaxStamina )
		pFnSetMaxStamina = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.SetMaxStamina" );

	UNowPlayerDatastore_eventSetMaxStamina_Parms SetMaxStamina_Parms;
	SetMaxStamina_Parms.NewMaxSP = NewMaxSP;

	this->ProcessEvent ( pFnSetMaxStamina, &SetMaxStamina_Parms, NULL );
};

// Function NowGame.NowPlayerDatastore.GetMaxSP
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowPlayerDatastore::GetMaxSP ( )
{
	static UFunction* pFnGetMaxSP = NULL;

	if ( ! pFnGetMaxSP )
		pFnGetMaxSP = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.GetMaxSP" );

	UNowPlayerDatastore_execGetMaxSP_Parms GetMaxSP_Parms;

	this->ProcessEvent ( pFnGetMaxSP, &GetMaxSP_Parms, NULL );

	return GetMaxSP_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.CalculateMaxUnderWaterTime
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNowPlayerDatastore::eventCalculateMaxUnderWaterTime ( )
{
	static UFunction* pFnCalculateMaxUnderWaterTime = NULL;

	if ( ! pFnCalculateMaxUnderWaterTime )
		pFnCalculateMaxUnderWaterTime = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.CalculateMaxUnderWaterTime" );

	UNowPlayerDatastore_eventCalculateMaxUnderWaterTime_Parms CalculateMaxUnderWaterTime_Parms;

	this->ProcessEvent ( pFnCalculateMaxUnderWaterTime, &CalculateMaxUnderWaterTime_Parms, NULL );
};

// Function NowGame.NowPlayerDatastore.CalculateBuoyancy
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPawn*                WhatPawn                       ( CPF_Parm )

void UNowPlayerDatastore::eventCalculateBuoyancy ( class ANowPawn* WhatPawn )
{
	static UFunction* pFnCalculateBuoyancy = NULL;

	if ( ! pFnCalculateBuoyancy )
		pFnCalculateBuoyancy = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.CalculateBuoyancy" );

	UNowPlayerDatastore_eventCalculateBuoyancy_Parms CalculateBuoyancy_Parms;
	CalculateBuoyancy_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnCalculateBuoyancy, &CalculateBuoyancy_Parms, NULL );
};

// Function NowGame.NowPlayerDatastore.GetFieldValue
// [0x00424802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 FieldName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            ArrayIndex                     ( CPF_OptionalParm | CPF_Parm )
// struct FUIProviderScriptFieldValue FieldValue                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UNowPlayerDatastore::eventGetFieldValue ( struct FString FieldName, int ArrayIndex, struct FUIProviderScriptFieldValue* FieldValue )
{
	static UFunction* pFnGetFieldValue = NULL;

	if ( ! pFnGetFieldValue )
		pFnGetFieldValue = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.GetFieldValue" );

	UNowPlayerDatastore_eventGetFieldValue_Parms GetFieldValue_Parms;
	memcpy ( &GetFieldValue_Parms.FieldName, &FieldName, 0xC );
	GetFieldValue_Parms.ArrayIndex = ArrayIndex;

	this->ProcessEvent ( pFnGetFieldValue, &GetFieldValue_Parms, NULL );

	if ( FieldValue )
		memcpy ( FieldValue, &GetFieldValue_Parms.FieldValue, 0x58 );

	return GetFieldValue_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.GetSizeMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowPlayerDatastore::GetSizeMod ( )
{
	static UFunction* pFnGetSizeMod = NULL;

	if ( ! pFnGetSizeMod )
		pFnGetSizeMod = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.GetSizeMod" );

	UNowPlayerDatastore_execGetSizeMod_Parms GetSizeMod_Parms;

	pFnGetSizeMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSizeMod, &GetSizeMod_Parms, NULL );

	pFnGetSizeMod->FunctionFlags |= 0x400;

	return GetSizeMod_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.GetDexterityMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowPlayerDatastore::GetDexterityMod ( )
{
	static UFunction* pFnGetDexterityMod = NULL;

	if ( ! pFnGetDexterityMod )
		pFnGetDexterityMod = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.GetDexterityMod" );

	UNowPlayerDatastore_execGetDexterityMod_Parms GetDexterityMod_Parms;

	pFnGetDexterityMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDexterityMod, &GetDexterityMod_Parms, NULL );

	pFnGetDexterityMod->FunctionFlags |= 0x400;

	return GetDexterityMod_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.GetPsycheMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowPlayerDatastore::GetPsycheMod ( )
{
	static UFunction* pFnGetPsycheMod = NULL;

	if ( ! pFnGetPsycheMod )
		pFnGetPsycheMod = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.GetPsycheMod" );

	UNowPlayerDatastore_execGetPsycheMod_Parms GetPsycheMod_Parms;

	pFnGetPsycheMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPsycheMod, &GetPsycheMod_Parms, NULL );

	pFnGetPsycheMod->FunctionFlags |= 0x400;

	return GetPsycheMod_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.GetIntelligenceMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowPlayerDatastore::GetIntelligenceMod ( )
{
	static UFunction* pFnGetIntelligenceMod = NULL;

	if ( ! pFnGetIntelligenceMod )
		pFnGetIntelligenceMod = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.GetIntelligenceMod" );

	UNowPlayerDatastore_execGetIntelligenceMod_Parms GetIntelligenceMod_Parms;

	pFnGetIntelligenceMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIntelligenceMod, &GetIntelligenceMod_Parms, NULL );

	pFnGetIntelligenceMod->FunctionFlags |= 0x400;

	return GetIntelligenceMod_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.GetConstitutionMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowPlayerDatastore::GetConstitutionMod ( )
{
	static UFunction* pFnGetConstitutionMod = NULL;

	if ( ! pFnGetConstitutionMod )
		pFnGetConstitutionMod = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.GetConstitutionMod" );

	UNowPlayerDatastore_execGetConstitutionMod_Parms GetConstitutionMod_Parms;

	pFnGetConstitutionMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetConstitutionMod, &GetConstitutionMod_Parms, NULL );

	pFnGetConstitutionMod->FunctionFlags |= 0x400;

	return GetConstitutionMod_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.GetStrengthMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowPlayerDatastore::GetStrengthMod ( )
{
	static UFunction* pFnGetStrengthMod = NULL;

	if ( ! pFnGetStrengthMod )
		pFnGetStrengthMod = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.GetStrengthMod" );

	UNowPlayerDatastore_execGetStrengthMod_Parms GetStrengthMod_Parms;

	pFnGetStrengthMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStrengthMod, &GetStrengthMod_Parms, NULL );

	pFnGetStrengthMod->FunctionFlags |= 0x400;

	return GetStrengthMod_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.CalcWeights
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowPlayerDatastore::CalcWeights ( )
{
	static UFunction* pFnCalcWeights = NULL;

	if ( ! pFnCalcWeights )
		pFnCalcWeights = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.CalcWeights" );

	UNowPlayerDatastore_execCalcWeights_Parms CalcWeights_Parms;

	pFnCalcWeights->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcWeights, &CalcWeights_Parms, NULL );

	pFnCalcWeights->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerDatastore.CalcDamageBonusPct
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UNowPlayerDatastore::CalcDamageBonusPct ( )
{
	static UFunction* pFnCalcDamageBonusPct = NULL;

	if ( ! pFnCalcDamageBonusPct )
		pFnCalcDamageBonusPct = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.CalcDamageBonusPct" );

	UNowPlayerDatastore_execCalcDamageBonusPct_Parms CalcDamageBonusPct_Parms;

	pFnCalcDamageBonusPct->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcDamageBonusPct, &CalcDamageBonusPct_Parms, NULL );

	pFnCalcDamageBonusPct->FunctionFlags |= 0x400;

	return CalcDamageBonusPct_Parms.ReturnValue;
};

// Function NowGame.NowPlayerDatastore.CalcDamageBonus
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNowPlayerDatastore::CalcDamageBonus ( )
{
	static UFunction* pFnCalcDamageBonus = NULL;

	if ( ! pFnCalcDamageBonus )
		pFnCalcDamageBonus = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerDatastore.CalcDamageBonus" );

	UNowPlayerDatastore_execCalcDamageBonus_Parms CalcDamageBonus_Parms;

	pFnCalcDamageBonus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcDamageBonus, &CalcDamageBonus_Parms, NULL );

	pFnCalcDamageBonus->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerHouse.whatAmILookingAt
// [0x00020002] 
// Parameters infos:

void ANowPlayerHouse::whatAmILookingAt ( )
{
	static UFunction* pFnwhatAmILookingAt = NULL;

	if ( ! pFnwhatAmILookingAt )
		pFnwhatAmILookingAt = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerHouse.whatAmILookingAt" );

	ANowPlayerHouse_execwhatAmILookingAt_Parms whatAmILookingAt_Parms;

	this->ProcessEvent ( pFnwhatAmILookingAt, &whatAmILookingAt_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.setIamCreator
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    Control                        ( CPF_Parm )

void ANowPlayerHouse::setIamCreator ( class ANowPlayerController* Control )
{
	static UFunction* pFnsetIamCreator = NULL;

	if ( ! pFnsetIamCreator )
		pFnsetIamCreator = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerHouse.setIamCreator" );

	ANowPlayerHouse_execsetIamCreator_Parms setIamCreator_Parms;
	setIamCreator_Parms.Control = Control;

	this->ProcessEvent ( pFnsetIamCreator, &setIamCreator_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.CreateSign
// [0x00020002] 
// Parameters infos:

void ANowPlayerHouse::CreateSign ( )
{
	static UFunction* pFnCreateSign = NULL;

	if ( ! pFnCreateSign )
		pFnCreateSign = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerHouse.CreateSign" );

	ANowPlayerHouse_execCreateSign_Parms CreateSign_Parms;

	this->ProcessEvent ( pFnCreateSign, &CreateSign_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.CreateDoor
// [0x00020002] 
// Parameters infos:

void ANowPlayerHouse::CreateDoor ( )
{
	static UFunction* pFnCreateDoor = NULL;

	if ( ! pFnCreateDoor )
		pFnCreateDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerHouse.CreateDoor" );

	ANowPlayerHouse_execCreateDoor_Parms CreateDoor_Parms;

	this->ProcessEvent ( pFnCreateDoor, &CreateDoor_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.setHouse
// [0x00020002] 
// Parameters infos:

void ANowPlayerHouse::setHouse ( )
{
	static UFunction* pFnsetHouse = NULL;

	if ( ! pFnsetHouse )
		pFnsetHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerHouse.setHouse" );

	ANowPlayerHouse_execsetHouse_Parms setHouse_Parms;

	this->ProcessEvent ( pFnsetHouse, &setHouse_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.closeDoor
// [0x00020002] 
// Parameters infos:

void ANowPlayerHouse::closeDoor ( )
{
	static UFunction* pFncloseDoor = NULL;

	if ( ! pFncloseDoor )
		pFncloseDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerHouse.closeDoor" );

	ANowPlayerHouse_execcloseDoor_Parms closeDoor_Parms;

	this->ProcessEvent ( pFncloseDoor, &closeDoor_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.openDoor
// [0x00020002] 
// Parameters infos:

void ANowPlayerHouse::openDoor ( )
{
	static UFunction* pFnopenDoor = NULL;

	if ( ! pFnopenDoor )
		pFnopenDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerHouse.openDoor" );

	ANowPlayerHouse_execopenDoor_Parms openDoor_Parms;

	this->ProcessEvent ( pFnopenDoor, &openDoor_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.TargetMesh
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowPlayerHouse::eventTargetMesh ( )
{
	static UFunction* pFnTargetMesh = NULL;

	if ( ! pFnTargetMesh )
		pFnTargetMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerHouse.TargetMesh" );

	ANowPlayerHouse_eventTargetMesh_Parms TargetMesh_Parms;

	this->ProcessEvent ( pFnTargetMesh, &TargetMesh_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.spawnHouse
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANowPlayerHouse::eventspawnHouse ( )
{
	static UFunction* pFnspawnHouse = NULL;

	if ( ! pFnspawnHouse )
		pFnspawnHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerHouse.spawnHouse" );

	ANowPlayerHouse_eventspawnHouse_Parms spawnHouse_Parms;

	this->ProcessEvent ( pFnspawnHouse, &spawnHouse_Parms, NULL );
};

// Function NowGame.NowPlayerHouse.createHouseOnServer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                pwnd                           ( CPF_Parm )
// struct FVector                 posi                           ( CPF_Parm )
// int                            Rot                            ( CPF_Parm )

void ANowPlayerHouse::createHouseOnServer ( class ANowPawn* pwnd, struct FVector posi, int Rot )
{
	static UFunction* pFncreateHouseOnServer = NULL;

	if ( ! pFncreateHouseOnServer )
		pFncreateHouseOnServer = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerHouse.createHouseOnServer" );

	ANowPlayerHouse_execcreateHouseOnServer_Parms createHouseOnServer_Parms;
	createHouseOnServer_Parms.pwnd = pwnd;
	memcpy ( &createHouseOnServer_Parms.posi, &posi, 0xC );
	createHouseOnServer_Parms.Rot = Rot;

	pFncreateHouseOnServer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFncreateHouseOnServer, &createHouseOnServer_Parms, NULL );

	pFncreateHouseOnServer->FunctionFlags |= 0x400;
};

// Function NowGame.NowPlayerHouse.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowPlayerHouse::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerHouse.IsTarget" );

	ANowPlayerHouse_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowPlayerHouse.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowPlayerHouse::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerHouse.AtlasUse" );

	ANowPlayerHouse_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowPlayerManager.GetDS
// [0x00020002] 
// Parameters infos:
// class UNowOptionsDatastore*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowOptionsDatastore* UNowPlayerManager::GetDS ( )
{
	static UFunction* pFnGetDS = NULL;

	if ( ! pFnGetDS )
		pFnGetDS = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerManager.GetDS" );

	UNowPlayerManager_execGetDS_Parms GetDS_Parms;

	this->ProcessEvent ( pFnGetDS, &GetDS_Parms, NULL );

	return GetDS_Parms.ReturnValue;
};

// Function NowGame.NowPlayerManager.CheckOkForMerge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowPawn*                WhatPawn                       ( CPF_Parm )

bool UNowPlayerManager::CheckOkForMerge ( class ANowPawn* WhatPawn )
{
	static UFunction* pFnCheckOkForMerge = NULL;

	if ( ! pFnCheckOkForMerge )
		pFnCheckOkForMerge = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerManager.CheckOkForMerge" );

	UNowPlayerManager_execCheckOkForMerge_Parms CheckOkForMerge_Parms;
	CheckOkForMerge_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnCheckOkForMerge, &CheckOkForMerge_Parms, NULL );

	return CheckOkForMerge_Parms.ReturnValue;
};

// Function NowGame.NowPlayerManager.CheckPlayerList
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowPlayerManager::CheckPlayerList ( )
{
	static UFunction* pFnCheckPlayerList = NULL;

	if ( ! pFnCheckPlayerList )
		pFnCheckPlayerList = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerManager.CheckPlayerList" );

	UNowPlayerManager_execCheckPlayerList_Parms CheckPlayerList_Parms;

	this->ProcessEvent ( pFnCheckPlayerList, &CheckPlayerList_Parms, NULL );

	return CheckPlayerList_Parms.ReturnValue;
};

// Function NowGame.NowPlayerManager.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UNowPlayerManager::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerManager.Tick" );

	UNowPlayerManager_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowPlayerManager.AddPawnToList
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                WhatPawn                       ( CPF_Parm )

void UNowPlayerManager::AddPawnToList ( class ANowPawn* WhatPawn )
{
	static UFunction* pFnAddPawnToList = NULL;

	if ( ! pFnAddPawnToList )
		pFnAddPawnToList = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerManager.AddPawnToList" );

	UNowPlayerManager_execAddPawnToList_Parms AddPawnToList_Parms;
	AddPawnToList_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnAddPawnToList, &AddPawnToList_Parms, NULL );
};

// Function NowGame.NowPlayerManager.InitManager
// [0x00020002] 
// Parameters infos:

void UNowPlayerManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerManager.InitManager" );

	UNowPlayerManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.NowPlayerManager.CleanUpAwareDist
// [0x00020002] 
// Parameters infos:

void UNowPlayerManager::CleanUpAwareDist ( )
{
	static UFunction* pFnCleanUpAwareDist = NULL;

	if ( ! pFnCleanUpAwareDist )
		pFnCleanUpAwareDist = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerManager.CleanUpAwareDist" );

	UNowPlayerManager_execCleanUpAwareDist_Parms CleanUpAwareDist_Parms;

	this->ProcessEvent ( pFnCleanUpAwareDist, &CleanUpAwareDist_Parms, NULL );
};

// Function NowGame.NowPlayerManager.ForceDestroy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )

void UNowPlayerManager::ForceDestroy ( class AActor* WhatActor )
{
	static UFunction* pFnForceDestroy = NULL;

	if ( ! pFnForceDestroy )
		pFnForceDestroy = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerManager.ForceDestroy" );

	UNowPlayerManager_execForceDestroy_Parms ForceDestroy_Parms;
	ForceDestroy_Parms.WhatActor = WhatActor;

	pFnForceDestroy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceDestroy, &ForceDestroy_Parms, NULL );

	pFnForceDestroy->FunctionFlags |= 0x400;
};

// Function NowGame.NowPointLightDayNight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowPointLightDayNight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowPointLightDayNight.Destroyed" );

	ANowPointLightDayNight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowPointLightDayNight.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowPointLightDayNight::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowPointLightDayNight.PostBeginPlay" );

	ANowPointLightDayNight_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowPointLightDayNight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowPointLightDayNight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.NowPointLightDayNight.Notify" );

	ANowPointLightDayNight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowPointLightDayNight.TurnOnNightLight
// [0x00020002] 
// Parameters infos:

void ANowPointLightDayNight::TurnOnNightLight ( )
{
	static UFunction* pFnTurnOnNightLight = NULL;

	if ( ! pFnTurnOnNightLight )
		pFnTurnOnNightLight = UObject::FindObject< UFunction > ( "Function NowGame.NowPointLightDayNight.TurnOnNightLight" );

	ANowPointLightDayNight_execTurnOnNightLight_Parms TurnOnNightLight_Parms;

	this->ProcessEvent ( pFnTurnOnNightLight, &TurnOnNightLight_Parms, NULL );
};

// Function NowGame.NowProjectile.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectile::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectile.Tick" );

	ANowProjectile_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowProjectile.RemoveMyComponents
// [0x00020000] 
// Parameters infos:

void ANowProjectile::RemoveMyComponents ( )
{
	static UFunction* pFnRemoveMyComponents = NULL;

	if ( ! pFnRemoveMyComponents )
		pFnRemoveMyComponents = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectile.RemoveMyComponents" );

	ANowProjectile_execRemoveMyComponents_Parms RemoveMyComponents_Parms;

	this->ProcessEvent ( pFnRemoveMyComponents, &RemoveMyComponents_Parms, NULL );
};

// Function NowGame.NowProjectile.HomingTimer
// [0x00020000] 
// Parameters infos:

void ANowProjectile::HomingTimer ( )
{
	static UFunction* pFnHomingTimer = NULL;

	if ( ! pFnHomingTimer )
		pFnHomingTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectile.HomingTimer" );

	ANowProjectile_execHomingTimer_Parms HomingTimer_Parms;

	this->ProcessEvent ( pFnHomingTimer, &HomingTimer_Parms, NULL );
};

// Function NowGame.NowProjectile.failSafeExplode
// [0x00020102] 
// Parameters infos:

void ANowProjectile::failSafeExplode ( )
{
	static UFunction* pFnfailSafeExplode = NULL;

	if ( ! pFnfailSafeExplode )
		pFnfailSafeExplode = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectile.failSafeExplode" );

	ANowProjectile_execfailSafeExplode_Parms failSafeExplode_Parms;

	this->ProcessEvent ( pFnfailSafeExplode, &failSafeExplode_Parms, NULL );
};

// Function NowGame.NowProjectile.Explode
// [0x00020100] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowProjectile::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectile.Explode" );

	ANowProjectile_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function NowGame.NowProjectile.Timer
// [0x00020100] 
// Parameters infos:

void ANowProjectile::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectile.Timer" );

	ANowProjectile_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function NowGame.NowProjectile.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowProjectile::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectile.Destroyed" );

	ANowProjectile_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowProjectile.SpawnHitFx
// [0x00020000] 
// Parameters infos:
// struct FVector                 Loc                            ( CPF_Parm )
// struct FRotator                Rot                            ( CPF_Parm )

void ANowProjectile::SpawnHitFx ( struct FVector Loc, struct FRotator Rot )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectile.SpawnHitFx" );

	ANowProjectile_execSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.Loc, &Loc, 0xC );
	memcpy ( &SpawnHitFx_Parms.Rot, &Rot, 0xC );

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowProjectile.SpawnTrailFX
// [0x00020000] 
// Parameters infos:

void ANowProjectile::SpawnTrailFX ( )
{
	static UFunction* pFnSpawnTrailFX = NULL;

	if ( ! pFnSpawnTrailFX )
		pFnSpawnTrailFX = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectile.SpawnTrailFX" );

	ANowProjectile_execSpawnTrailFX_Parms SpawnTrailFX_Parms;

	this->ProcessEvent ( pFnSpawnTrailFX, &SpawnTrailFX_Parms, NULL );
};

// Function NowGame.NowProjectile.StartProjectile
// [0x00020100] 
// Parameters infos:

void ANowProjectile::StartProjectile ( )
{
	static UFunction* pFnStartProjectile = NULL;

	if ( ! pFnStartProjectile )
		pFnStartProjectile = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectile.StartProjectile" );

	ANowProjectile_execStartProjectile_Parms StartProjectile_Parms;

	this->ProcessEvent ( pFnStartProjectile, &StartProjectile_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowProjectileArrow::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.Destroyed" );

	ANowProjectileArrow_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.setDestrTimer
// [0x00020002] 
// Parameters infos:
// float                          secondsTilBoomBoom             ( CPF_Parm )

void ANowProjectileArrow::setDestrTimer ( float secondsTilBoomBoom )
{
	static UFunction* pFnsetDestrTimer = NULL;

	if ( ! pFnsetDestrTimer )
		pFnsetDestrTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.setDestrTimer" );

	ANowProjectileArrow_execsetDestrTimer_Parms setDestrTimer_Parms;
	setDestrTimer_Parms.secondsTilBoomBoom = secondsTilBoomBoom;

	this->ProcessEvent ( pFnsetDestrTimer, &setDestrTimer_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.EncroachedBy
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowProjectileArrow::eventEncroachedBy ( class AActor* Other )
{
	static UFunction* pFnEncroachedBy = NULL;

	if ( ! pFnEncroachedBy )
		pFnEncroachedBy = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.EncroachedBy" );

	ANowProjectileArrow_eventEncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachedBy, &EncroachedBy_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.HitWall
// [0x00020922] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ANowProjectileArrow::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.HitWall" );

	ANowProjectileArrow_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.ProcessTouch
// [0x00820102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowProjectileArrow::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.ProcessTouch" );

	ANowProjectileArrow_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.Landed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

void ANowProjectileArrow::eventLanded ( struct FVector HitNormal, class AActor* HitActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.Landed" );

	ANowProjectileArrow_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.ProjectileFire
// [0x00020100] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartShot                      ( CPF_Parm )
// struct FVector                 Direction                      ( CPF_Parm )

class AProjectile* ANowProjectileArrow::ProjectileFire ( struct FVector StartShot, struct FVector Direction )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.ProjectileFire" );

	ANowProjectileArrow_execProjectileFire_Parms ProjectileFire_Parms;
	memcpy ( &ProjectileFire_Parms.StartShot, &StartShot, 0xC );
	memcpy ( &ProjectileFire_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function NowGame.NowProjectileArrow.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectileArrow::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.Tick" );

	ANowProjectileArrow_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.PhysicsVolumeChange
// [0x00020102] 
// Parameters infos:
// class APhysicsVolume*          NewVolume                      ( CPF_Parm )

void ANowProjectileArrow::PhysicsVolumeChange ( class APhysicsVolume* NewVolume )
{
	static UFunction* pFnPhysicsVolumeChange = NULL;

	if ( ! pFnPhysicsVolumeChange )
		pFnPhysicsVolumeChange = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.PhysicsVolumeChange" );

	ANowProjectileArrow_execPhysicsVolumeChange_Parms PhysicsVolumeChange_Parms;
	PhysicsVolumeChange_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnPhysicsVolumeChange, &PhysicsVolumeChange_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.Timer
// [0x00020102] 
// Parameters infos:

void ANowProjectileArrow::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.Timer" );

	ANowProjectileArrow_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.Init
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ANowProjectileArrow::Init ( struct FVector Direction )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.Init" );

	ANowProjectileArrow_execInit_Parms Init_Parms;
	memcpy ( &Init_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.SetWeatherVariables
// [0x00820002] 
// Parameters infos:
// int                            WindDirection                  ( CPF_Parm )
// int                            Rain                           ( CPF_Parm )
// float                          windMagnitude                  ( CPF_Parm )

void ANowProjectileArrow::SetWeatherVariables ( int WindDirection, int Rain, float windMagnitude )
{
	static UFunction* pFnSetWeatherVariables = NULL;

	if ( ! pFnSetWeatherVariables )
		pFnSetWeatherVariables = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.SetWeatherVariables" );

	ANowProjectileArrow_execSetWeatherVariables_Parms SetWeatherVariables_Parms;
	SetWeatherVariables_Parms.WindDirection = WindDirection;
	SetWeatherVariables_Parms.Rain = Rain;
	SetWeatherVariables_Parms.windMagnitude = windMagnitude;

	this->ProcessEvent ( pFnSetWeatherVariables, &SetWeatherVariables_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.SetCombatSystemReference
// [0x00020002] 
// Parameters infos:
// class UCombatSystemRangedNew*  rangedSystem                   ( CPF_Parm )

void ANowProjectileArrow::SetCombatSystemReference ( class UCombatSystemRangedNew* rangedSystem )
{
	static UFunction* pFnSetCombatSystemReference = NULL;

	if ( ! pFnSetCombatSystemReference )
		pFnSetCombatSystemReference = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.SetCombatSystemReference" );

	ANowProjectileArrow_execSetCombatSystemReference_Parms SetCombatSystemReference_Parms;
	SetCombatSystemReference_Parms.rangedSystem = rangedSystem;

	this->ProcessEvent ( pFnSetCombatSystemReference, &SetCombatSystemReference_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.SetProjectileSpeed
// [0x00020002] 
// Parameters infos:
// int                            ProjectileSpeed                ( CPF_Parm )

void ANowProjectileArrow::SetProjectileSpeed ( int ProjectileSpeed )
{
	static UFunction* pFnSetProjectileSpeed = NULL;

	if ( ! pFnSetProjectileSpeed )
		pFnSetProjectileSpeed = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.SetProjectileSpeed" );

	ANowProjectileArrow_execSetProjectileSpeed_Parms SetProjectileSpeed_Parms;
	SetProjectileSpeed_Parms.ProjectileSpeed = ProjectileSpeed;

	this->ProcessEvent ( pFnSetProjectileSpeed, &SetProjectileSpeed_Parms, NULL );
};

// Function NowGame.NowProjectileArrow.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowProjectileArrow::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileArrow.PostBeginPlay" );

	ANowProjectileArrow_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.setDestrTimer
// [0x00020002] 
// Parameters infos:
// float                          secondsTilBoomBoom             ( CPF_Parm )

void ANowProjectileFishing::setDestrTimer ( float secondsTilBoomBoom )
{
	static UFunction* pFnsetDestrTimer = NULL;

	if ( ! pFnsetDestrTimer )
		pFnsetDestrTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.setDestrTimer" );

	ANowProjectileFishing_execsetDestrTimer_Parms setDestrTimer_Parms;
	setDestrTimer_Parms.secondsTilBoomBoom = secondsTilBoomBoom;

	this->ProcessEvent ( pFnsetDestrTimer, &setDestrTimer_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.EncroachedBy
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowProjectileFishing::eventEncroachedBy ( class AActor* Other )
{
	static UFunction* pFnEncroachedBy = NULL;

	if ( ! pFnEncroachedBy )
		pFnEncroachedBy = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.EncroachedBy" );

	ANowProjectileFishing_eventEncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachedBy, &EncroachedBy_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.HitWall
// [0x00020922] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ANowProjectileFishing::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.HitWall" );

	ANowProjectileFishing_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.ProcessTouch
// [0x00820102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowProjectileFishing::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.ProcessTouch" );

	ANowProjectileFishing_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.Landed
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

void ANowProjectileFishing::eventLanded ( struct FVector HitNormal, class AActor* HitActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.Landed" );

	ANowProjectileFishing_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.HookLanded
// [0x00020000] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// float                          deptt                          ( CPF_Parm )

void ANowProjectileFishing::HookLanded ( struct FVector HitLocation, float deptt )
{
	static UFunction* pFnHookLanded = NULL;

	if ( ! pFnHookLanded )
		pFnHookLanded = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.HookLanded" );

	ANowProjectileFishing_execHookLanded_Parms HookLanded_Parms;
	memcpy ( &HookLanded_Parms.HitLocation, &HitLocation, 0xC );
	HookLanded_Parms.deptt = deptt;

	this->ProcessEvent ( pFnHookLanded, &HookLanded_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.ProjectileFire
// [0x00020100] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartShot                      ( CPF_Parm )
// struct FVector                 Direction                      ( CPF_Parm )

class AProjectile* ANowProjectileFishing::ProjectileFire ( struct FVector StartShot, struct FVector Direction )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.ProjectileFire" );

	ANowProjectileFishing_execProjectileFire_Parms ProjectileFire_Parms;
	memcpy ( &ProjectileFire_Parms.StartShot, &StartShot, 0xC );
	memcpy ( &ProjectileFire_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function NowGame.NowProjectileFishing.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectileFishing::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.Tick" );

	ANowProjectileFishing_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.DoSink
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectileFishing::DoSink ( float DeltaTime )
{
	static UFunction* pFnDoSink = NULL;

	if ( ! pFnDoSink )
		pFnDoSink = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.DoSink" );

	ANowProjectileFishing_execDoSink_Parms DoSink_Parms;
	DoSink_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnDoSink, &DoSink_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.PlaySplash
// [0x00020002] 
// Parameters infos:
// int                            WhatEffect                     ( CPF_Parm )

void ANowProjectileFishing::PlaySplash ( int WhatEffect )
{
	static UFunction* pFnPlaySplash = NULL;

	if ( ! pFnPlaySplash )
		pFnPlaySplash = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.PlaySplash" );

	ANowProjectileFishing_execPlaySplash_Parms PlaySplash_Parms;
	PlaySplash_Parms.WhatEffect = WhatEffect;

	this->ProcessEvent ( pFnPlaySplash, &PlaySplash_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.PhysicsVolumeChange
// [0x00020102] 
// Parameters infos:
// class APhysicsVolume*          NewVolume                      ( CPF_Parm )

void ANowProjectileFishing::PhysicsVolumeChange ( class APhysicsVolume* NewVolume )
{
	static UFunction* pFnPhysicsVolumeChange = NULL;

	if ( ! pFnPhysicsVolumeChange )
		pFnPhysicsVolumeChange = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.PhysicsVolumeChange" );

	ANowProjectileFishing_execPhysicsVolumeChange_Parms PhysicsVolumeChange_Parms;
	PhysicsVolumeChange_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnPhysicsVolumeChange, &PhysicsVolumeChange_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.Timer
// [0x00020102] 
// Parameters infos:

void ANowProjectileFishing::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.Timer" );

	ANowProjectileFishing_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.Init
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ANowProjectileFishing::Init ( struct FVector Direction )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.Init" );

	ANowProjectileFishing_execInit_Parms Init_Parms;
	memcpy ( &Init_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.SetWeatherVariables
// [0x00820002] 
// Parameters infos:
// int                            WindDirection                  ( CPF_Parm )
// int                            Rain                           ( CPF_Parm )
// float                          windMagnitude                  ( CPF_Parm )

void ANowProjectileFishing::SetWeatherVariables ( int WindDirection, int Rain, float windMagnitude )
{
	static UFunction* pFnSetWeatherVariables = NULL;

	if ( ! pFnSetWeatherVariables )
		pFnSetWeatherVariables = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.SetWeatherVariables" );

	ANowProjectileFishing_execSetWeatherVariables_Parms SetWeatherVariables_Parms;
	SetWeatherVariables_Parms.WindDirection = WindDirection;
	SetWeatherVariables_Parms.Rain = Rain;
	SetWeatherVariables_Parms.windMagnitude = windMagnitude;

	this->ProcessEvent ( pFnSetWeatherVariables, &SetWeatherVariables_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.SetCombatSystemReference
// [0x00020002] 
// Parameters infos:
// class UCombatSystemFishingNew* CombatSystem                   ( CPF_Parm )

void ANowProjectileFishing::SetCombatSystemReference ( class UCombatSystemFishingNew* CombatSystem )
{
	static UFunction* pFnSetCombatSystemReference = NULL;

	if ( ! pFnSetCombatSystemReference )
		pFnSetCombatSystemReference = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.SetCombatSystemReference" );

	ANowProjectileFishing_execSetCombatSystemReference_Parms SetCombatSystemReference_Parms;
	SetCombatSystemReference_Parms.CombatSystem = CombatSystem;

	this->ProcessEvent ( pFnSetCombatSystemReference, &SetCombatSystemReference_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.SetProjectileSpeed
// [0x00020002] 
// Parameters infos:
// int                            ProjectileSpeed                ( CPF_Parm )

void ANowProjectileFishing::SetProjectileSpeed ( int ProjectileSpeed )
{
	static UFunction* pFnSetProjectileSpeed = NULL;

	if ( ! pFnSetProjectileSpeed )
		pFnSetProjectileSpeed = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.SetProjectileSpeed" );

	ANowProjectileFishing_execSetProjectileSpeed_Parms SetProjectileSpeed_Parms;
	SetProjectileSpeed_Parms.ProjectileSpeed = ProjectileSpeed;

	this->ProcessEvent ( pFnSetProjectileSpeed, &SetProjectileSpeed_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowProjectileFishing::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.PostBeginPlay" );

	ANowProjectileFishing_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.floatToSurface
// [0x00820002] 
// Parameters infos:

void ANowProjectileFishing::floatToSurface ( )
{
	static UFunction* pFnfloatToSurface = NULL;

	if ( ! pFnfloatToSurface )
		pFnfloatToSurface = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.floatToSurface" );

	ANowProjectileFishing_execfloatToSurface_Parms floatToSurface_Parms;

	this->ProcessEvent ( pFnfloatToSurface, &floatToSurface_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.GetSurfaceActor
// [0x00C20002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm | CPF_OutParm )

class AActor* ANowProjectileFishing::GetSurfaceActor ( struct FVector Start, struct FVector* HitLocation )
{
	static UFunction* pFnGetSurfaceActor = NULL;

	if ( ! pFnGetSurfaceActor )
		pFnGetSurfaceActor = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.GetSurfaceActor" );

	ANowProjectileFishing_execGetSurfaceActor_Parms GetSurfaceActor_Parms;
	memcpy ( &GetSurfaceActor_Parms.Start, &Start, 0xC );

	this->ProcessEvent ( pFnGetSurfaceActor, &GetSurfaceActor_Parms, NULL );

	if ( HitLocation )
		memcpy ( HitLocation, &GetSurfaceActor_Parms.HitLocation, 0xC );

	return GetSurfaceActor_Parms.ReturnValue;
};

// Function NowGame.NowProjectileFishing.FindWater
// [0x00820002] 
// Parameters infos:
// struct FVector                 oldpos                         ( CPF_Parm )
// struct FVector                 NewPos                         ( CPF_Parm )

void ANowProjectileFishing::FindWater ( struct FVector oldpos, struct FVector NewPos )
{
	static UFunction* pFnFindWater = NULL;

	if ( ! pFnFindWater )
		pFnFindWater = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.FindWater" );

	ANowProjectileFishing_execFindWater_Parms FindWater_Parms;
	memcpy ( &FindWater_Parms.oldpos, &oldpos, 0xC );
	memcpy ( &FindWater_Parms.NewPos, &NewPos, 0xC );

	this->ProcessEvent ( pFnFindWater, &FindWater_Parms, NULL );
};

// Function NowGame.NowProjectileFishing.findBottomDepth
// [0x00820002] 
// Parameters infos:

void ANowProjectileFishing::findBottomDepth ( )
{
	static UFunction* pFnfindBottomDepth = NULL;

	if ( ! pFnfindBottomDepth )
		pFnfindBottomDepth = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileFishing.findBottomDepth" );

	ANowProjectileFishing_execfindBottomDepth_Parms findBottomDepth_Parms;

	this->ProcessEvent ( pFnfindBottomDepth, &findBottomDepth_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.HomingTimer
// [0x00020002] 
// Parameters infos:

void ANowProjectileMagic::HomingTimer ( )
{
	static UFunction* pFnHomingTimer = NULL;

	if ( ! pFnHomingTimer )
		pFnHomingTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileMagic.HomingTimer" );

	ANowProjectileMagic_execHomingTimer_Parms HomingTimer_Parms;

	this->ProcessEvent ( pFnHomingTimer, &HomingTimer_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.failSafeExplode
// [0x00020102] 
// Parameters infos:

void ANowProjectileMagic::failSafeExplode ( )
{
	static UFunction* pFnfailSafeExplode = NULL;

	if ( ! pFnfailSafeExplode )
		pFnfailSafeExplode = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileMagic.failSafeExplode" );

	ANowProjectileMagic_execfailSafeExplode_Parms failSafeExplode_Parms;

	this->ProcessEvent ( pFnfailSafeExplode, &failSafeExplode_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowProjectileMagic::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileMagic.Explode" );

	ANowProjectileMagic_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.Timer
// [0x00020102] 
// Parameters infos:

void ANowProjectileMagic::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileMagic.Timer" );

	ANowProjectileMagic_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowProjectileMagic::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileMagic.Destroyed" );

	ANowProjectileMagic_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.SpawnHitFx
// [0x00020002] 
// Parameters infos:
// struct FVector                 Loc                            ( CPF_Parm )
// struct FRotator                Rot                            ( CPF_Parm )

void ANowProjectileMagic::SpawnHitFx ( struct FVector Loc, struct FRotator Rot )
{
	static UFunction* pFnSpawnHitFx = NULL;

	if ( ! pFnSpawnHitFx )
		pFnSpawnHitFx = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileMagic.SpawnHitFx" );

	ANowProjectileMagic_execSpawnHitFx_Parms SpawnHitFx_Parms;
	memcpy ( &SpawnHitFx_Parms.Loc, &Loc, 0xC );
	memcpy ( &SpawnHitFx_Parms.Rot, &Rot, 0xC );

	this->ProcessEvent ( pFnSpawnHitFx, &SpawnHitFx_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.SpawnTrailFX
// [0x00020002] 
// Parameters infos:

void ANowProjectileMagic::SpawnTrailFX ( )
{
	static UFunction* pFnSpawnTrailFX = NULL;

	if ( ! pFnSpawnTrailFX )
		pFnSpawnTrailFX = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileMagic.SpawnTrailFX" );

	ANowProjectileMagic_execSpawnTrailFX_Parms SpawnTrailFX_Parms;

	this->ProcessEvent ( pFnSpawnTrailFX, &SpawnTrailFX_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.StartProjectile
// [0x00020102] 
// Parameters infos:

void ANowProjectileMagic::StartProjectile ( )
{
	static UFunction* pFnStartProjectile = NULL;

	if ( ! pFnStartProjectile )
		pFnStartProjectile = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileMagic.StartProjectile" );

	ANowProjectileMagic_execStartProjectile_Parms StartProjectile_Parms;

	this->ProcessEvent ( pFnStartProjectile, &StartProjectile_Parms, NULL );
};

// Function NowGame.NowProjectileMagic.SetNowImpactSound
// [0x00020002] 
// Parameters infos:
// class USoundCue*               NewSound                       ( CPF_Parm )

void ANowProjectileMagic::SetNowImpactSound ( class USoundCue* NewSound )
{
	static UFunction* pFnSetNowImpactSound = NULL;

	if ( ! pFnSetNowImpactSound )
		pFnSetNowImpactSound = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileMagic.SetNowImpactSound" );

	ANowProjectileMagic_execSetNowImpactSound_Parms SetNowImpactSound_Parms;
	SetNowImpactSound_Parms.NewSound = NewSound;

	this->ProcessEvent ( pFnSetNowImpactSound, &SetNowImpactSound_Parms, NULL );
};

// Function NowGame.NowScout.PreBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowScout::eventPreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowScout.PreBeginPlay" );

	ANowScout_eventPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.SetMercyMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActor::eventSetMercyMode ( )
{
	static UFunction* pFnSetMercyMode = NULL;

	if ( ! pFnSetMercyMode )
		pFnSetMercyMode = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.SetMercyMode" );

	ANowSkeletalMeshActor_eventSetMercyMode_Parms SetMercyMode_Parms;

	this->ProcessEvent ( pFnSetMercyMode, &SetMercyMode_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.InitFemaleAdditive
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActor::eventInitFemaleAdditive ( )
{
	static UFunction* pFnInitFemaleAdditive = NULL;

	if ( ! pFnInitFemaleAdditive )
		pFnInitFemaleAdditive = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.InitFemaleAdditive" );

	ANowSkeletalMeshActor_eventInitFemaleAdditive_Parms InitFemaleAdditive_Parms;

	this->ProcessEvent ( pFnInitFemaleAdditive, &InitFemaleAdditive_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.UpdateArmorComponents
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActor::eventUpdateArmorComponents ( )
{
	static UFunction* pFnUpdateArmorComponents = NULL;

	if ( ! pFnUpdateArmorComponents )
		pFnUpdateArmorComponents = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.UpdateArmorComponents" );

	ANowSkeletalMeshActor_eventUpdateArmorComponents_Parms UpdateArmorComponents_Parms;

	this->ProcessEvent ( pFnUpdateArmorComponents, &UpdateArmorComponents_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowSkeletalMeshActor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.PostBeginPlay" );

	ANowSkeletalMeshActor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.NowCreateAndSetMaterialInstanceConstant
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UMaterialInstanceConstant* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )
// int                            ElementIndex                   ( CPF_Parm )

class UMaterialInstanceConstant* ANowSkeletalMeshActor::eventNowCreateAndSetMaterialInstanceConstant ( class USkeletalMeshComponent* SkelComp, int ElementIndex )
{
	static UFunction* pFnNowCreateAndSetMaterialInstanceConstant = NULL;

	if ( ! pFnNowCreateAndSetMaterialInstanceConstant )
		pFnNowCreateAndSetMaterialInstanceConstant = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.NowCreateAndSetMaterialInstanceConstant" );

	ANowSkeletalMeshActor_eventNowCreateAndSetMaterialInstanceConstant_Parms NowCreateAndSetMaterialInstanceConstant_Parms;
	NowCreateAndSetMaterialInstanceConstant_Parms.SkelComp = SkelComp;
	NowCreateAndSetMaterialInstanceConstant_Parms.ElementIndex = ElementIndex;

	this->ProcessEvent ( pFnNowCreateAndSetMaterialInstanceConstant, &NowCreateAndSetMaterialInstanceConstant_Parms, NULL );

	return NowCreateAndSetMaterialInstanceConstant_Parms.ReturnValue;
};

// Function NowGame.NowSkeletalMeshActor.PlayDeleteEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActor::eventPlayDeleteEffect ( )
{
	static UFunction* pFnPlayDeleteEffect = NULL;

	if ( ! pFnPlayDeleteEffect )
		pFnPlayDeleteEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.PlayDeleteEffect" );

	ANowSkeletalMeshActor_eventPlayDeleteEffect_Parms PlayDeleteEffect_Parms;

	this->ProcessEvent ( pFnPlayDeleteEffect, &PlayDeleteEffect_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.PlayDeSelectEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActor::eventPlayDeSelectEffect ( )
{
	static UFunction* pFnPlayDeSelectEffect = NULL;

	if ( ! pFnPlayDeSelectEffect )
		pFnPlayDeSelectEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.PlayDeSelectEffect" );

	ANowSkeletalMeshActor_eventPlayDeSelectEffect_Parms PlayDeSelectEffect_Parms;

	this->ProcessEvent ( pFnPlayDeSelectEffect, &PlayDeSelectEffect_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.PlaySelectEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActor::eventPlaySelectEffect ( )
{
	static UFunction* pFnPlaySelectEffect = NULL;

	if ( ! pFnPlaySelectEffect )
		pFnPlaySelectEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.PlaySelectEffect" );

	ANowSkeletalMeshActor_eventPlaySelectEffect_Parms PlaySelectEffect_Parms;

	this->ProcessEvent ( pFnPlaySelectEffect, &PlaySelectEffect_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.GetNowEntry
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowEntryDatastore*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowEntryDatastore* ANowSkeletalMeshActor::eventGetNowEntry ( )
{
	static UFunction* pFnGetNowEntry = NULL;

	if ( ! pFnGetNowEntry )
		pFnGetNowEntry = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.GetNowEntry" );

	ANowSkeletalMeshActor_eventGetNowEntry_Parms GetNowEntry_Parms;

	this->ProcessEvent ( pFnGetNowEntry, &GetNowEntry_Parms, NULL );

	return GetNowEntry_Parms.ReturnValue;
};

// Function NowGame.NowSkeletalMeshActor.SaveMaterials
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActor::eventSaveMaterials ( )
{
	static UFunction* pFnSaveMaterials = NULL;

	if ( ! pFnSaveMaterials )
		pFnSaveMaterials = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.SaveMaterials" );

	ANowSkeletalMeshActor_eventSaveMaterials_Parms SaveMaterials_Parms;

	this->ProcessEvent ( pFnSaveMaterials, &SaveMaterials_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.SetFlag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iNewFlag                       ( CPF_Parm )

void ANowSkeletalMeshActor::eventSetFlag ( int iNewFlag )
{
	static UFunction* pFnSetFlag = NULL;

	if ( ! pFnSetFlag )
		pFnSetFlag = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.SetFlag" );

	ANowSkeletalMeshActor_eventSetFlag_Parms SetFlag_Parms;
	SetFlag_Parms.iNewFlag = iNewFlag;

	this->ProcessEvent ( pFnSetFlag, &SetFlag_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.SetBodyType
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iNewBodyType                   ( CPF_Parm )

void ANowSkeletalMeshActor::eventSetBodyType ( int iNewBodyType )
{
	static UFunction* pFnSetBodyType = NULL;

	if ( ! pFnSetBodyType )
		pFnSetBodyType = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.SetBodyType" );

	ANowSkeletalMeshActor_eventSetBodyType_Parms SetBodyType_Parms;
	SetBodyType_Parms.iNewBodyType = iNewBodyType;

	this->ProcessEvent ( pFnSetBodyType, &SetBodyType_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActor.TriggerFirstUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowSkeletalMeshActor::TriggerFirstUpdate ( )
{
	static UFunction* pFnTriggerFirstUpdate = NULL;

	if ( ! pFnTriggerFirstUpdate )
		pFnTriggerFirstUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.TriggerFirstUpdate" );

	ANowSkeletalMeshActor_execTriggerFirstUpdate_Parms TriggerFirstUpdate_Parms;

	pFnTriggerFirstUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerFirstUpdate, &TriggerFirstUpdate_Parms, NULL );

	pFnTriggerFirstUpdate->FunctionFlags |= 0x400;
};

// Function NowGame.NowSkeletalMeshActor.GetPreviewBodyType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ANowSkeletalMeshActor::GetPreviewBodyType ( )
{
	static UFunction* pFnGetPreviewBodyType = NULL;

	if ( ! pFnGetPreviewBodyType )
		pFnGetPreviewBodyType = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.GetPreviewBodyType" );

	ANowSkeletalMeshActor_execGetPreviewBodyType_Parms GetPreviewBodyType_Parms;

	pFnGetPreviewBodyType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreviewBodyType, &GetPreviewBodyType_Parms, NULL );

	pFnGetPreviewBodyType->FunctionFlags |= 0x400;

	return GetPreviewBodyType_Parms.ReturnValue;
};

// Function NowGame.NowSkeletalMeshActor.SetVisibility
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  Value                          ( CPF_Parm )

void ANowSkeletalMeshActor::SetVisibility ( unsigned long Value )
{
	static UFunction* pFnSetVisibility = NULL;

	if ( ! pFnSetVisibility )
		pFnSetVisibility = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.SetVisibility" );

	ANowSkeletalMeshActor_execSetVisibility_Parms SetVisibility_Parms;
	SetVisibility_Parms.Value = Value;

	pFnSetVisibility->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVisibility, &SetVisibility_Parms, NULL );

	pFnSetVisibility->FunctionFlags |= 0x400;
};

// Function NowGame.NowSkeletalMeshActor.ToggleVisibility
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowSkeletalMeshActor::ToggleVisibility ( )
{
	static UFunction* pFnToggleVisibility = NULL;

	if ( ! pFnToggleVisibility )
		pFnToggleVisibility = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.ToggleVisibility" );

	ANowSkeletalMeshActor_execToggleVisibility_Parms ToggleVisibility_Parms;

	pFnToggleVisibility->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleVisibility, &ToggleVisibility_Parms, NULL );

	pFnToggleVisibility->FunctionFlags |= 0x400;
};

// Function NowGame.NowSkeletalMeshActor.SetPreviewBodyData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 NewData                        ( CPF_Parm | CPF_NeedCtorLink )

void ANowSkeletalMeshActor::SetPreviewBodyData ( struct FString NewData )
{
	static UFunction* pFnSetPreviewBodyData = NULL;

	if ( ! pFnSetPreviewBodyData )
		pFnSetPreviewBodyData = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.SetPreviewBodyData" );

	ANowSkeletalMeshActor_execSetPreviewBodyData_Parms SetPreviewBodyData_Parms;
	memcpy ( &SetPreviewBodyData_Parms.NewData, &NewData, 0xC );

	pFnSetPreviewBodyData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPreviewBodyData, &SetPreviewBodyData_Parms, NULL );

	pFnSetPreviewBodyData->FunctionFlags |= 0x400;
};

// Function NowGame.NowSkeletalMeshActor.SetPreviewFaceData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 NewData                        ( CPF_Parm | CPF_NeedCtorLink )

void ANowSkeletalMeshActor::SetPreviewFaceData ( struct FString NewData )
{
	static UFunction* pFnSetPreviewFaceData = NULL;

	if ( ! pFnSetPreviewFaceData )
		pFnSetPreviewFaceData = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActor.SetPreviewFaceData" );

	ANowSkeletalMeshActor_execSetPreviewFaceData_Parms SetPreviewFaceData_Parms;
	memcpy ( &SetPreviewFaceData_Parms.NewData, &NewData, 0xC );

	pFnSetPreviewFaceData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPreviewFaceData, &SetPreviewFaceData_Parms, NULL );

	pFnSetPreviewFaceData->FunctionFlags |= 0x400;
};

// Function NowGame.NowSkeletalMeshActorDoll.Tick
// [0x00820002] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowSkeletalMeshActorDoll::Tick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDoll.Tick" );

	ANowSkeletalMeshActorDoll_execTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.RotateLeft
// [0x00820002] 
// Parameters infos:

void ANowSkeletalMeshActorDoll::RotateLeft ( )
{
	static UFunction* pFnRotateLeft = NULL;

	if ( ! pFnRotateLeft )
		pFnRotateLeft = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDoll.RotateLeft" );

	ANowSkeletalMeshActorDoll_execRotateLeft_Parms RotateLeft_Parms;

	this->ProcessEvent ( pFnRotateLeft, &RotateLeft_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.RotateRight
// [0x00820002] 
// Parameters infos:

void ANowSkeletalMeshActorDoll::RotateRight ( )
{
	static UFunction* pFnRotateRight = NULL;

	if ( ! pFnRotateRight )
		pFnRotateRight = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDoll.RotateRight" );

	ANowSkeletalMeshActorDoll_execRotateRight_Parms RotateRight_Parms;

	this->ProcessEvent ( pFnRotateRight, &RotateRight_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.PaperdollZoom
// [0x00820002] 
// Parameters infos:
// unsigned long                  bZoom                          ( CPF_Parm )

void ANowSkeletalMeshActorDoll::PaperdollZoom ( unsigned long bZoom )
{
	static UFunction* pFnPaperdollZoom = NULL;

	if ( ! pFnPaperdollZoom )
		pFnPaperdollZoom = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDoll.PaperdollZoom" );

	ANowSkeletalMeshActorDoll_execPaperdollZoom_Parms PaperdollZoom_Parms;
	PaperdollZoom_Parms.bZoom = bZoom;

	this->ProcessEvent ( pFnPaperdollZoom, &PaperdollZoom_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.PaperdollPan
// [0x00820002] 
// Parameters infos:
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )

void ANowSkeletalMeshActorDoll::PaperdollPan ( int X, int Y )
{
	static UFunction* pFnPaperdollPan = NULL;

	if ( ! pFnPaperdollPan )
		pFnPaperdollPan = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDoll.PaperdollPan" );

	ANowSkeletalMeshActorDoll_execPaperdollPan_Parms PaperdollPan_Parms;
	PaperdollPan_Parms.X = X;
	PaperdollPan_Parms.Y = Y;

	this->ProcessEvent ( pFnPaperdollPan, &PaperdollPan_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.SetInCombat
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bNewInCombat                   ( CPF_Parm )

void ANowSkeletalMeshActorDoll::eventSetInCombat ( unsigned long bNewInCombat )
{
	static UFunction* pFnSetInCombat = NULL;

	if ( ! pFnSetInCombat )
		pFnSetInCombat = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDoll.SetInCombat" );

	ANowSkeletalMeshActorDoll_eventSetInCombat_Parms SetInCombat_Parms;
	SetInCombat_Parms.bNewInCombat = bNewInCombat;

	this->ProcessEvent ( pFnSetInCombat, &SetInCombat_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.cacheNodes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActorDoll::eventcacheNodes ( )
{
	static UFunction* pFncacheNodes = NULL;

	if ( ! pFncacheNodes )
		pFncacheNodes = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDoll.cacheNodes" );

	ANowSkeletalMeshActorDoll_eventcacheNodes_Parms cacheNodes_Parms;

	this->ProcessEvent ( pFncacheNodes, &cacheNodes_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.RemoveCapeActor
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActorDoll::eventRemoveCapeActor ( )
{
	static UFunction* pFnRemoveCapeActor = NULL;

	if ( ! pFnRemoveCapeActor )
		pFnRemoveCapeActor = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDoll.RemoveCapeActor" );

	ANowSkeletalMeshActorDoll_eventRemoveCapeActor_Parms RemoveCapeActor_Parms;

	this->ProcessEvent ( pFnRemoveCapeActor, &RemoveCapeActor_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.SetCapeActor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class USkeletalMesh*           NewMesh                        ( CPF_Parm )
// class UPhysicsAsset*           NewPhys                        ( CPF_Parm )

void ANowSkeletalMeshActorDoll::eventSetCapeActor ( class USkeletalMesh* NewMesh, class UPhysicsAsset* NewPhys )
{
	static UFunction* pFnSetCapeActor = NULL;

	if ( ! pFnSetCapeActor )
		pFnSetCapeActor = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDoll.SetCapeActor" );

	ANowSkeletalMeshActorDoll_eventSetCapeActor_Parms SetCapeActor_Parms;
	SetCapeActor_Parms.NewMesh = NewMesh;
	SetCapeActor_Parms.NewPhys = NewPhys;

	this->ProcessEvent ( pFnSetCapeActor, &SetCapeActor_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDoll.UpdateSkeletalComponents
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                FromWhatPawn                   ( CPF_Parm )

void ANowSkeletalMeshActorDoll::UpdateSkeletalComponents ( class ANowPawn* FromWhatPawn )
{
	static UFunction* pFnUpdateSkeletalComponents = NULL;

	if ( ! pFnUpdateSkeletalComponents )
		pFnUpdateSkeletalComponents = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDoll.UpdateSkeletalComponents" );

	ANowSkeletalMeshActorDoll_execUpdateSkeletalComponents_Parms UpdateSkeletalComponents_Parms;
	UpdateSkeletalComponents_Parms.FromWhatPawn = FromWhatPawn;

	pFnUpdateSkeletalComponents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSkeletalComponents, &UpdateSkeletalComponents_Parms, NULL );

	pFnUpdateSkeletalComponents->FunctionFlags |= 0x400;
};

// Function NowGame.NowSkeletalMeshActorDollEditor.SetInCombat
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bNewInCombat                   ( CPF_Parm )

void ANowSkeletalMeshActorDollEditor::eventSetInCombat ( unsigned long bNewInCombat )
{
	static UFunction* pFnSetInCombat = NULL;

	if ( ! pFnSetInCombat )
		pFnSetInCombat = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDollEditor.SetInCombat" );

	ANowSkeletalMeshActorDollEditor_eventSetInCombat_Parms SetInCombat_Parms;
	SetInCombat_Parms.bNewInCombat = bNewInCombat;

	this->ProcessEvent ( pFnSetInCombat, &SetInCombat_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.cacheNodes
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::eventcacheNodes ( )
{
	static UFunction* pFncacheNodes = NULL;

	if ( ! pFncacheNodes )
		pFncacheNodes = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDollEditor.cacheNodes" );

	ANowSkeletalMeshActorDollEditor_eventcacheNodes_Parms cacheNodes_Parms;

	this->ProcessEvent ( pFncacheNodes, &cacheNodes_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.RemoveCapeActor
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::eventRemoveCapeActor ( )
{
	static UFunction* pFnRemoveCapeActor = NULL;

	if ( ! pFnRemoveCapeActor )
		pFnRemoveCapeActor = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDollEditor.RemoveCapeActor" );

	ANowSkeletalMeshActorDollEditor_eventRemoveCapeActor_Parms RemoveCapeActor_Parms;

	this->ProcessEvent ( pFnRemoveCapeActor, &RemoveCapeActor_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.SetCapeActor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class USkeletalMesh*           NewMesh                        ( CPF_Parm )
// class UPhysicsAsset*           NewPhys                        ( CPF_Parm )

void ANowSkeletalMeshActorDollEditor::eventSetCapeActor ( class USkeletalMesh* NewMesh, class UPhysicsAsset* NewPhys )
{
	static UFunction* pFnSetCapeActor = NULL;

	if ( ! pFnSetCapeActor )
		pFnSetCapeActor = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDollEditor.SetCapeActor" );

	ANowSkeletalMeshActorDollEditor_eventSetCapeActor_Parms SetCapeActor_Parms;
	SetCapeActor_Parms.NewMesh = NewMesh;
	SetCapeActor_Parms.NewPhys = NewPhys;

	this->ProcessEvent ( pFnSetCapeActor, &SetCapeActor_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.initAnimations
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::eventinitAnimations ( )
{
	static UFunction* pFninitAnimations = NULL;

	if ( ! pFninitAnimations )
		pFninitAnimations = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDollEditor.initAnimations" );

	ANowSkeletalMeshActorDollEditor_eventinitAnimations_Parms initAnimations_Parms;

	this->ProcessEvent ( pFninitAnimations, &initAnimations_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.Die
// [0x00820002] 
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::Die ( )
{
	static UFunction* pFnDie = NULL;

	if ( ! pFnDie )
		pFnDie = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDollEditor.Die" );

	ANowSkeletalMeshActorDollEditor_execDie_Parms Die_Parms;

	this->ProcessEvent ( pFnDie, &Die_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.Bleed
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::eventBleed ( )
{
	static UFunction* pFnBleed = NULL;

	if ( ! pFnBleed )
		pFnBleed = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDollEditor.Bleed" );

	ANowSkeletalMeshActorDollEditor_eventBleed_Parms Bleed_Parms;

	this->ProcessEvent ( pFnBleed, &Bleed_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.AddWeapon
// [0x00020002] 
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::AddWeapon ( )
{
	static UFunction* pFnAddWeapon = NULL;

	if ( ! pFnAddWeapon )
		pFnAddWeapon = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDollEditor.AddWeapon" );

	ANowSkeletalMeshActorDollEditor_execAddWeapon_Parms AddWeapon_Parms;

	this->ProcessEvent ( pFnAddWeapon, &AddWeapon_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.StartRun
// [0x00020002] 
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::StartRun ( )
{
	static UFunction* pFnStartRun = NULL;

	if ( ! pFnStartRun )
		pFnStartRun = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDollEditor.StartRun" );

	ANowSkeletalMeshActorDollEditor_execStartRun_Parms StartRun_Parms;

	this->ProcessEvent ( pFnStartRun, &StartRun_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDollEditor.PostBeginPlay" );

	ANowSkeletalMeshActorDollEditor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshActorDollEditor.NowCreateAndSetMaterialInstanceConstant
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UMaterialInstanceConstant* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )
// int                            ElementIndex                   ( CPF_Parm )

class UMaterialInstanceConstant* ANowSkeletalMeshActorDollEditor::eventNowCreateAndSetMaterialInstanceConstant ( class USkeletalMeshComponent* SkelComp, int ElementIndex )
{
	static UFunction* pFnNowCreateAndSetMaterialInstanceConstant = NULL;

	if ( ! pFnNowCreateAndSetMaterialInstanceConstant )
		pFnNowCreateAndSetMaterialInstanceConstant = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDollEditor.NowCreateAndSetMaterialInstanceConstant" );

	ANowSkeletalMeshActorDollEditor_eventNowCreateAndSetMaterialInstanceConstant_Parms NowCreateAndSetMaterialInstanceConstant_Parms;
	NowCreateAndSetMaterialInstanceConstant_Parms.SkelComp = SkelComp;
	NowCreateAndSetMaterialInstanceConstant_Parms.ElementIndex = ElementIndex;

	this->ProcessEvent ( pFnNowCreateAndSetMaterialInstanceConstant, &NowCreateAndSetMaterialInstanceConstant_Parms, NULL );

	return NowCreateAndSetMaterialInstanceConstant_Parms.ReturnValue;
};

// Function NowGame.NowSkeletalMeshActorDollEditor.Generate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANowSkeletalMeshActorDollEditor::Generate ( )
{
	static UFunction* pFnGenerate = NULL;

	if ( ! pFnGenerate )
		pFnGenerate = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshActorDollEditor.Generate" );

	ANowSkeletalMeshActorDollEditor_execGenerate_Parms Generate_Parms;

	pFnGenerate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerate, &Generate_Parms, NULL );

	pFnGenerate->FunctionFlags |= 0x400;
};

// Function NowGame.NowSkeletalMeshCape.StopPhys
// [0x00020002] 
// Parameters infos:

void ANowSkeletalMeshCape::StopPhys ( )
{
	static UFunction* pFnStopPhys = NULL;

	if ( ! pFnStopPhys )
		pFnStopPhys = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshCape.StopPhys" );

	ANowSkeletalMeshCape_execStopPhys_Parms StopPhys_Parms;

	this->ProcessEvent ( pFnStopPhys, &StopPhys_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshCape.StartPhys
// [0x00020002] 
// Parameters infos:

void ANowSkeletalMeshCape::StartPhys ( )
{
	static UFunction* pFnStartPhys = NULL;

	if ( ! pFnStartPhys )
		pFnStartPhys = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshCape.StartPhys" );

	ANowSkeletalMeshCape_execStartPhys_Parms StartPhys_Parms;

	this->ProcessEvent ( pFnStartPhys, &StartPhys_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshCape.SetHasPhysAnimation
// [0x00020002] 
// Parameters infos:
// unsigned long                  newValue                       ( CPF_Parm )

void ANowSkeletalMeshCape::SetHasPhysAnimation ( unsigned long newValue )
{
	static UFunction* pFnSetHasPhysAnimation = NULL;

	if ( ! pFnSetHasPhysAnimation )
		pFnSetHasPhysAnimation = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshCape.SetHasPhysAnimation" );

	ANowSkeletalMeshCape_execSetHasPhysAnimation_Parms SetHasPhysAnimation_Parms;
	SetHasPhysAnimation_Parms.newValue = newValue;

	this->ProcessEvent ( pFnSetHasPhysAnimation, &SetHasPhysAnimation_Parms, NULL );
};

// Function NowGame.NowSkeletalMeshCape.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowSkeletalMeshCape::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowSkeletalMeshCape.PostBeginPlay" );

	ANowSkeletalMeshCape_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowSpotLightMovableDayNight.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowSpotLightMovableDayNight::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowSpotLightMovableDayNight.Destroyed" );

	ANowSpotLightMovableDayNight_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowSpotLightMovableDayNight.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowSpotLightMovableDayNight::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowSpotLightMovableDayNight.PostBeginPlay" );

	ANowSpotLightMovableDayNight_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowSpotLightMovableDayNight.Notify
// [0x00020002] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void ANowSpotLightMovableDayNight::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.NowSpotLightMovableDayNight.Notify" );

	ANowSpotLightMovableDayNight_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.NowSpotLightMovableDayNight.TurnOnNightLight
// [0x00020002] 
// Parameters infos:

void ANowSpotLightMovableDayNight::TurnOnNightLight ( )
{
	static UFunction* pFnTurnOnNightLight = NULL;

	if ( ! pFnTurnOnNightLight )
		pFnTurnOnNightLight = UObject::FindObject< UFunction > ( "Function NowGame.NowSpotLightMovableDayNight.TurnOnNightLight" );

	ANowSpotLightMovableDayNight_execTurnOnNightLight_Parms TurnOnNightLight_Parms;

	this->ProcessEvent ( pFnTurnOnNightLight, &TurnOnNightLight_Parms, NULL );
};

// Function NowGame.NowStaticMeshActor.SetTargetTypesFromString
// [0x00020002] 
// Parameters infos:
// struct FString                 sWorkBenchType                 ( CPF_Parm | CPF_NeedCtorLink )

void ANowStaticMeshActor::SetTargetTypesFromString ( struct FString sWorkBenchType )
{
	static UFunction* pFnSetTargetTypesFromString = NULL;

	if ( ! pFnSetTargetTypesFromString )
		pFnSetTargetTypesFromString = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActor.SetTargetTypesFromString" );

	ANowStaticMeshActor_execSetTargetTypesFromString_Parms SetTargetTypesFromString_Parms;
	memcpy ( &SetTargetTypesFromString_Parms.sWorkBenchType, &sWorkBenchType, 0xC );

	this->ProcessEvent ( pFnSetTargetTypesFromString, &SetTargetTypesFromString_Parms, NULL );
};

// Function NowGame.NowStaticMeshActor.GetDisplayName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowStaticMeshActor::GetDisplayName ( )
{
	static UFunction* pFnGetDisplayName = NULL;

	if ( ! pFnGetDisplayName )
		pFnGetDisplayName = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActor.GetDisplayName" );

	ANowStaticMeshActor_execGetDisplayName_Parms GetDisplayName_Parms;

	pFnGetDisplayName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayName, &GetDisplayName_Parms, NULL );

	pFnGetDisplayName->FunctionFlags |= 0x400;

	return GetDisplayName_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActor.GetAtlasType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowStaticMeshActor::GetAtlasType ( )
{
	static UFunction* pFnGetAtlasType = NULL;

	if ( ! pFnGetAtlasType )
		pFnGetAtlasType = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActor.GetAtlasType" );

	ANowStaticMeshActor_execGetAtlasType_Parms GetAtlasType_Parms;

	pFnGetAtlasType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasType, &GetAtlasType_Parms, NULL );

	pFnGetAtlasType->FunctionFlags |= 0x400;

	return GetAtlasType_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActor.GetAtlasName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowStaticMeshActor::GetAtlasName ( )
{
	static UFunction* pFnGetAtlasName = NULL;

	if ( ! pFnGetAtlasName )
		pFnGetAtlasName = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActor.GetAtlasName" );

	ANowStaticMeshActor_execGetAtlasName_Parms GetAtlasName_Parms;

	pFnGetAtlasName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAtlasName, &GetAtlasName_Parms, NULL );

	pFnGetAtlasName->FunctionFlags |= 0x400;

	return GetAtlasName_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActor.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowStaticMeshActor::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActor.IsTarget" );

	ANowStaticMeshActor_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActor.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowStaticMeshActor::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActor.AtlasUse" );

	ANowStaticMeshActor_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorLadder.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowStaticMeshActorLadder::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorLadder.UnTouch" );

	ANowStaticMeshActorLadder_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorLadder.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowStaticMeshActorLadder::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorLadder.Touch" );

	ANowStaticMeshActorLadder_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorLadder.SetLadderLength
// [0x00820002] 
// Parameters infos:
// float                          NewLength                      ( CPF_Parm )

void ANowStaticMeshActorLadder::SetLadderLength ( float NewLength )
{
	static UFunction* pFnSetLadderLength = NULL;

	if ( ! pFnSetLadderLength )
		pFnSetLadderLength = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorLadder.SetLadderLength" );

	ANowStaticMeshActorLadder_execSetLadderLength_Parms SetLadderLength_Parms;
	SetLadderLength_Parms.NewLength = NewLength;

	this->ProcessEvent ( pFnSetLadderLength, &SetLadderLength_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorLadder.IsAtTop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool ANowStaticMeshActorLadder::IsAtTop ( class AActor* Other )
{
	static UFunction* pFnIsAtTop = NULL;

	if ( ! pFnIsAtTop )
		pFnIsAtTop = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorLadder.IsAtTop" );

	ANowStaticMeshActorLadder_execIsAtTop_Parms IsAtTop_Parms;
	IsAtTop_Parms.Other = Other;

	this->ProcessEvent ( pFnIsAtTop, &IsAtTop_Parms, NULL );

	return IsAtTop_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorEmote.CheckUsed
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorEmote::CheckUsed ( )
{
	static UFunction* pFnCheckUsed = NULL;

	if ( ! pFnCheckUsed )
		pFnCheckUsed = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorEmote.CheckUsed" );

	ANowStaticMeshActorEmote_execCheckUsed_Parms CheckUsed_Parms;

	this->ProcessEvent ( pFnCheckUsed, &CheckUsed_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorEmote.TriggerEmote
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// unsigned long                  bInitCheck                     ( CPF_OptionalParm | CPF_Parm )

void ANowStaticMeshActorEmote::eventTriggerEmote ( class APlayerController* PC, unsigned long bInitCheck )
{
	static UFunction* pFnTriggerEmote = NULL;

	if ( ! pFnTriggerEmote )
		pFnTriggerEmote = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorEmote.TriggerEmote" );

	ANowStaticMeshActorEmote_eventTriggerEmote_Parms TriggerEmote_Parms;
	TriggerEmote_Parms.PC = PC;
	TriggerEmote_Parms.bInitCheck = bInitCheck;

	this->ProcessEvent ( pFnTriggerEmote, &TriggerEmote_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorEmote.GetDisplayName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ANowStaticMeshActorEmote::GetDisplayName ( )
{
	static UFunction* pFnGetDisplayName = NULL;

	if ( ! pFnGetDisplayName )
		pFnGetDisplayName = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorEmote.GetDisplayName" );

	ANowStaticMeshActorEmote_execGetDisplayName_Parms GetDisplayName_Parms;

	pFnGetDisplayName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayName, &GetDisplayName_Parms, NULL );

	pFnGetDisplayName->FunctionFlags |= 0x400;

	return GetDisplayName_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorEmote.IsTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ANowStaticMeshActorEmote::IsTarget ( )
{
	static UFunction* pFnIsTarget = NULL;

	if ( ! pFnIsTarget )
		pFnIsTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorEmote.IsTarget" );

	ANowStaticMeshActorEmote_execIsTarget_Parms IsTarget_Parms;

	pFnIsTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTarget, &IsTarget_Parms, NULL );

	pFnIsTarget->FunctionFlags |= 0x400;

	return IsTarget_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorEmote.AtlasUse
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool ANowStaticMeshActorEmote::AtlasUse ( class APlayerController* PC )
{
	static UFunction* pFnAtlasUse = NULL;

	if ( ! pFnAtlasUse )
		pFnAtlasUse = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorEmote.AtlasUse" );

	ANowStaticMeshActorEmote_execAtlasUse_Parms AtlasUse_Parms;
	AtlasUse_Parms.PC = PC;

	pFnAtlasUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasUse, &AtlasUse_Parms, NULL );

	pFnAtlasUse->FunctionFlags |= 0x400;

	return AtlasUse_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.Tick
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ANowStaticMeshActorWeaponPreviewCrafting::eventTick ( float fDeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.Tick" );

	ANowStaticMeshActorWeaponPreviewCrafting_eventTick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.PreviewRanged
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorWeaponPreviewCrafting::PreviewRanged ( )
{
	static UFunction* pFnPreviewRanged = NULL;

	if ( ! pFnPreviewRanged )
		pFnPreviewRanged = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.PreviewRanged" );

	ANowStaticMeshActorWeaponPreviewCrafting_execPreviewRanged_Parms PreviewRanged_Parms;

	this->ProcessEvent ( pFnPreviewRanged, &PreviewRanged_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.PreviewShield
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorWeaponPreviewCrafting::PreviewShield ( )
{
	static UFunction* pFnPreviewShield = NULL;

	if ( ! pFnPreviewShield )
		pFnPreviewShield = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.PreviewShield" );

	ANowStaticMeshActorWeaponPreviewCrafting_execPreviewShield_Parms PreviewShield_Parms;

	this->ProcessEvent ( pFnPreviewShield, &PreviewShield_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.PreviewWeapon
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorWeaponPreviewCrafting::PreviewWeapon ( )
{
	static UFunction* pFnPreviewWeapon = NULL;

	if ( ! pFnPreviewWeapon )
		pFnPreviewWeapon = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.PreviewWeapon" );

	ANowStaticMeshActorWeaponPreviewCrafting_execPreviewWeapon_Parms PreviewWeapon_Parms;

	this->ProcessEvent ( pFnPreviewWeapon, &PreviewWeapon_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.RemoveSkinFromArmor
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorWeaponPreviewCrafting::RemoveSkinFromArmor ( )
{
	static UFunction* pFnRemoveSkinFromArmor = NULL;

	if ( ! pFnRemoveSkinFromArmor )
		pFnRemoveSkinFromArmor = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.RemoveSkinFromArmor" );

	ANowStaticMeshActorWeaponPreviewCrafting_execRemoveSkinFromArmor_Parms RemoveSkinFromArmor_Parms;

	this->ProcessEvent ( pFnRemoveSkinFromArmor, &RemoveSkinFromArmor_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.SetInvalid
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorWeaponPreviewCrafting::SetInvalid ( )
{
	static UFunction* pFnSetInvalid = NULL;

	if ( ! pFnSetInvalid )
		pFnSetInvalid = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.SetInvalid" );

	ANowStaticMeshActorWeaponPreviewCrafting_execSetInvalid_Parms SetInvalid_Parms;

	this->ProcessEvent ( pFnSetInvalid, &SetInvalid_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.PreviewArmor
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorWeaponPreviewCrafting::PreviewArmor ( )
{
	static UFunction* pFnPreviewArmor = NULL;

	if ( ! pFnPreviewArmor )
		pFnPreviewArmor = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.PreviewArmor" );

	ANowStaticMeshActorWeaponPreviewCrafting_execPreviewArmor_Parms PreviewArmor_Parms;

	this->ProcessEvent ( pFnPreviewArmor, &PreviewArmor_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.SetWeaponLength
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          NewLength                      ( CPF_Parm )

void ANowStaticMeshActorWeaponPreviewCrafting::SetWeaponLength ( float NewLength )
{
	static UFunction* pFnSetWeaponLength = NULL;

	if ( ! pFnSetWeaponLength )
		pFnSetWeaponLength = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.SetWeaponLength" );

	ANowStaticMeshActorWeaponPreviewCrafting_execSetWeaponLength_Parms SetWeaponLength_Parms;
	SetWeaponLength_Parms.NewLength = NewLength;

	pFnSetWeaponLength->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetWeaponLength, &SetWeaponLength_Parms, NULL );

	pFnSetWeaponLength->FunctionFlags |= 0x400;
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.SetPreviewArmor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sDataString                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )
// unsigned long                  bNoMat                         ( CPF_Parm )

void ANowStaticMeshActorWeaponPreviewCrafting::SetPreviewArmor ( struct FString sDataString, int iSlot, unsigned long bNoMat )
{
	static UFunction* pFnSetPreviewArmor = NULL;

	if ( ! pFnSetPreviewArmor )
		pFnSetPreviewArmor = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.SetPreviewArmor" );

	ANowStaticMeshActorWeaponPreviewCrafting_execSetPreviewArmor_Parms SetPreviewArmor_Parms;
	memcpy ( &SetPreviewArmor_Parms.sDataString, &sDataString, 0xC );
	SetPreviewArmor_Parms.iSlot = iSlot;
	SetPreviewArmor_Parms.bNoMat = bNoMat;

	pFnSetPreviewArmor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPreviewArmor, &SetPreviewArmor_Parms, NULL );

	pFnSetPreviewArmor->FunctionFlags |= 0x400;
};

// Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.SetPreviewWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sDataString                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bNoMat                         ( CPF_Parm )

void ANowStaticMeshActorWeaponPreviewCrafting::SetPreviewWeapon ( struct FString sDataString, unsigned long bNoMat )
{
	static UFunction* pFnSetPreviewWeapon = NULL;

	if ( ! pFnSetPreviewWeapon )
		pFnSetPreviewWeapon = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorWeaponPreviewCrafting.SetPreviewWeapon" );

	ANowStaticMeshActorWeaponPreviewCrafting_execSetPreviewWeapon_Parms SetPreviewWeapon_Parms;
	memcpy ( &SetPreviewWeapon_Parms.sDataString, &sDataString, 0xC );
	SetPreviewWeapon_Parms.bNoMat = bNoMat;

	pFnSetPreviewWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPreviewWeapon, &SetPreviewWeapon_Parms, NULL );

	pFnSetPreviewWeapon->FunctionFlags |= 0x400;
};

// Function NowGame.NowTeleporter.TeleportMe
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                P                              ( CPF_Parm )

void ANowTeleporter::TeleportMe ( class ANowPawn* P )
{
	static UFunction* pFnTeleportMe = NULL;

	if ( ! pFnTeleportMe )
		pFnTeleportMe = UObject::FindObject< UFunction > ( "Function NowGame.NowTeleporter.TeleportMe" );

	ANowTeleporter_execTeleportMe_Parms TeleportMe_Parms;
	TeleportMe_Parms.P = P;

	this->ProcessEvent ( pFnTeleportMe, &TeleportMe_Parms, NULL );
};

// Function NowGame.NowVolumeSecurityZone.LookForCriminalsTgt
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowPawn*                WhatPawn                       ( CPF_Parm )
// class AActor*                  Victim                         ( CPF_Parm )

bool ANowVolumeSecurityZone::LookForCriminalsTgt ( class ANowPawn* WhatPawn, class AActor* Victim )
{
	static UFunction* pFnLookForCriminalsTgt = NULL;

	if ( ! pFnLookForCriminalsTgt )
		pFnLookForCriminalsTgt = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeSecurityZone.LookForCriminalsTgt" );

	ANowVolumeSecurityZone_execLookForCriminalsTgt_Parms LookForCriminalsTgt_Parms;
	LookForCriminalsTgt_Parms.WhatPawn = WhatPawn;
	LookForCriminalsTgt_Parms.Victim = Victim;

	this->ProcessEvent ( pFnLookForCriminalsTgt, &LookForCriminalsTgt_Parms, NULL );

	return LookForCriminalsTgt_Parms.ReturnValue;
};

// Function NowGame.NowVolumeSecurityZone.CalledGuards
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                WhatPawn                       ( CPF_Parm )

void ANowVolumeSecurityZone::CalledGuards ( class ANowPawn* WhatPawn )
{
	static UFunction* pFnCalledGuards = NULL;

	if ( ! pFnCalledGuards )
		pFnCalledGuards = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeSecurityZone.CalledGuards" );

	ANowVolumeSecurityZone_execCalledGuards_Parms CalledGuards_Parms;
	CalledGuards_Parms.WhatPawn = WhatPawn;

	this->ProcessEvent ( pFnCalledGuards, &CalledGuards_Parms, NULL );
};

// Function NowGame.NowVolumeSecurityZone.TurnOffCombatModes
// [0x00020002] 
// Parameters infos:

void ANowVolumeSecurityZone::TurnOffCombatModes ( )
{
	static UFunction* pFnTurnOffCombatModes = NULL;

	if ( ! pFnTurnOffCombatModes )
		pFnTurnOffCombatModes = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeSecurityZone.TurnOffCombatModes" );

	ANowVolumeSecurityZone_execTurnOffCombatModes_Parms TurnOffCombatModes_Parms;

	this->ProcessEvent ( pFnTurnOffCombatModes, &TurnOffCombatModes_Parms, NULL );
};

// Function NowGame.NowVolumeSecurityZone.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowVolumeSecurityZone::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeSecurityZone.Touch" );

	ANowVolumeSecurityZone_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.NowVolumeSecurityZone.ClientLeft
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowPlayerController*    PC                             ( CPF_Parm )

void ANowVolumeSecurityZone::eventClientLeft ( class ANowPlayerController* PC )
{
	static UFunction* pFnClientLeft = NULL;

	if ( ! pFnClientLeft )
		pFnClientLeft = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeSecurityZone.ClientLeft" );

	ANowVolumeSecurityZone_eventClientLeft_Parms ClientLeft_Parms;
	ClientLeft_Parms.PC = PC;

	this->ProcessEvent ( pFnClientLeft, &ClientLeft_Parms, NULL );
};

// Function NowGame.NowVolumeSecurityZone.CheckPlayerInMe
// [0x00020002] 
// Parameters infos:

void ANowVolumeSecurityZone::CheckPlayerInMe ( )
{
	static UFunction* pFnCheckPlayerInMe = NULL;

	if ( ! pFnCheckPlayerInMe )
		pFnCheckPlayerInMe = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeSecurityZone.CheckPlayerInMe" );

	ANowVolumeSecurityZone_execCheckPlayerInMe_Parms CheckPlayerInMe_Parms;

	this->ProcessEvent ( pFnCheckPlayerInMe, &CheckPlayerInMe_Parms, NULL );
};

// Function NowGame.NowVolumeSecurityZone.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowVolumeSecurityZone::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeSecurityZone.PostBeginPlay" );

	ANowVolumeSecurityZone_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.Observable.NotifyObservers
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UObservable::eventNotifyObservers ( )
{
	static UFunction* pFnNotifyObservers = NULL;

	if ( ! pFnNotifyObservers )
		pFnNotifyObservers = UObject::FindObject< UFunction > ( "Function NowGame.Observable.NotifyObservers" );

	UObservable_eventNotifyObservers_Parms NotifyObservers_Parms;

	this->ProcessEvent ( pFnNotifyObservers, &NotifyObservers_Parms, NULL );
};

// Function NowGame.Observable.DeleteObserver
// [0x00020002] 
// Parameters infos:
// class UObserver*               obs                            ( CPF_Parm )

void UObservable::DeleteObserver ( class UObserver* obs )
{
	static UFunction* pFnDeleteObserver = NULL;

	if ( ! pFnDeleteObserver )
		pFnDeleteObserver = UObject::FindObject< UFunction > ( "Function NowGame.Observable.DeleteObserver" );

	UObservable_execDeleteObserver_Parms DeleteObserver_Parms;
	DeleteObserver_Parms.obs = obs;

	this->ProcessEvent ( pFnDeleteObserver, &DeleteObserver_Parms, NULL );
};

// Function NowGame.Observable.AddObserver
// [0x00020002] 
// Parameters infos:
// class UObserver*               obs                            ( CPF_Parm )

void UObservable::AddObserver ( class UObserver* obs )
{
	static UFunction* pFnAddObserver = NULL;

	if ( ! pFnAddObserver )
		pFnAddObserver = UObject::FindObject< UFunction > ( "Function NowGame.Observable.AddObserver" );

	UObservable_execAddObserver_Parms AddObserver_Parms;
	AddObserver_Parms.obs = obs;

	this->ProcessEvent ( pFnAddObserver, &AddObserver_Parms, NULL );
};

// Function NowGame.TimeControl.UpdatePartOfDMY
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UTimeControl::UpdatePartOfDMY ( )
{
	static UFunction* pFnUpdatePartOfDMY = NULL;

	if ( ! pFnUpdatePartOfDMY )
		pFnUpdatePartOfDMY = UObject::FindObject< UFunction > ( "Function NowGame.TimeControl.UpdatePartOfDMY" );

	UTimeControl_execUpdatePartOfDMY_Parms UpdatePartOfDMY_Parms;

	pFnUpdatePartOfDMY->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePartOfDMY, &UpdatePartOfDMY_Parms, NULL );

	pFnUpdatePartOfDMY->FunctionFlags |= 0x400;
};

// Function NowGame.TimeControl.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            serverTime                     ( CPF_Parm )

void UTimeControl::Initialize ( int serverTime )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = UObject::FindObject< UFunction > ( "Function NowGame.TimeControl.Initialize" );

	UTimeControl_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.serverTime = serverTime;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function NowGame.TimeControl.SynchTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            serverTime                     ( CPF_Parm )

void UTimeControl::SynchTime ( int serverTime )
{
	static UFunction* pFnSynchTime = NULL;

	if ( ! pFnSynchTime )
		pFnSynchTime = UObject::FindObject< UFunction > ( "Function NowGame.TimeControl.SynchTime" );

	UTimeControl_execSynchTime_Parms SynchTime_Parms;
	SynchTime_Parms.serverTime = serverTime;

	pFnSynchTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSynchTime, &SynchTime_Parms, NULL );

	pFnSynchTime->FunctionFlags |= 0x400;
};

// Function NowGame.TimeControl.Update
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTimeControl::Update ( )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = UObject::FindObject< UFunction > ( "Function NowGame.TimeControl.Update" );

	UTimeControl_execUpdate_Parms Update_Parms;

	pFnUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );

	pFnUpdate->FunctionFlags |= 0x400;
};

// Function NowGame.WeatherControl.SetRegionParam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Region                         ( CPF_Parm )

void UWeatherControl::SetRegionParam ( int Region )
{
	static UFunction* pFnSetRegionParam = NULL;

	if ( ! pFnSetRegionParam )
		pFnSetRegionParam = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.SetRegionParam" );

	UWeatherControl_execSetRegionParam_Parms SetRegionParam_Parms;
	SetRegionParam_Parms.Region = Region;

	pFnSetRegionParam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetRegionParam, &SetRegionParam_Parms, NULL );

	pFnSetRegionParam->FunctionFlags |= 0x400;
};

// Function NowGame.WeatherControl.GetRegionName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Region                         ( CPF_Parm )

struct FString UWeatherControl::GetRegionName ( int Region )
{
	static UFunction* pFnGetRegionName = NULL;

	if ( ! pFnGetRegionName )
		pFnGetRegionName = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.GetRegionName" );

	UWeatherControl_execGetRegionName_Parms GetRegionName_Parms;
	GetRegionName_Parms.Region = Region;

	pFnGetRegionName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRegionName, &GetRegionName_Parms, NULL );

	pFnGetRegionName->FunctionFlags |= 0x400;

	return GetRegionName_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetRegionNumber
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Region                         ( CPF_Parm | CPF_NeedCtorLink )

int UWeatherControl::GetRegionNumber ( struct FString Region )
{
	static UFunction* pFnGetRegionNumber = NULL;

	if ( ! pFnGetRegionNumber )
		pFnGetRegionNumber = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.GetRegionNumber" );

	UWeatherControl_execGetRegionNumber_Parms GetRegionNumber_Parms;
	memcpy ( &GetRegionNumber_Parms.Region, &Region, 0xC );

	pFnGetRegionNumber->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRegionNumber, &GetRegionNumber_Parms, NULL );

	pFnGetRegionNumber->FunctionFlags |= 0x400;

	return GetRegionNumber_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.AddCheapObserver
// [0x00020002] 
// Parameters infos:
// class UObserver*               obs                            ( CPF_Parm )

void UWeatherControl::AddCheapObserver ( class UObserver* obs )
{
	static UFunction* pFnAddCheapObserver = NULL;

	if ( ! pFnAddCheapObserver )
		pFnAddCheapObserver = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.AddCheapObserver" );

	UWeatherControl_execAddCheapObserver_Parms AddCheapObserver_Parms;
	AddCheapObserver_Parms.obs = obs;

	this->ProcessEvent ( pFnAddCheapObserver, &AddCheapObserver_Parms, NULL );
};

// Function NowGame.WeatherControl.UpdateCheaper
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UWeatherControl::eventUpdateCheaper ( )
{
	static UFunction* pFnUpdateCheaper = NULL;

	if ( ! pFnUpdateCheaper )
		pFnUpdateCheaper = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.UpdateCheaper" );

	UWeatherControl_eventUpdateCheaper_Parms UpdateCheaper_Parms;

	this->ProcessEvent ( pFnUpdateCheaper, &UpdateCheaper_Parms, NULL );
};

// Function NowGame.WeatherControl.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UWeatherControl::eventUpdate ( )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.Update" );

	UWeatherControl_eventUpdate_Parms Update_Parms;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function NowGame.WeatherControl.PutWindData
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            WindD                          ( CPF_Parm )
// float                          WindM                          ( CPF_Parm )

void UWeatherControl::eventPutWindData ( int WindD, float WindM )
{
	static UFunction* pFnPutWindData = NULL;

	if ( ! pFnPutWindData )
		pFnPutWindData = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.PutWindData" );

	UWeatherControl_eventPutWindData_Parms PutWindData_Parms;
	PutWindData_Parms.WindD = WindD;
	PutWindData_Parms.WindM = WindM;

	this->ProcessEvent ( pFnPutWindData, &PutWindData_Parms, NULL );
};

// Function NowGame.WeatherControl.PutThunderstorm
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Region                         ( CPF_Parm )

void UWeatherControl::eventPutThunderstorm ( int Region )
{
	static UFunction* pFnPutThunderstorm = NULL;

	if ( ! pFnPutThunderstorm )
		pFnPutThunderstorm = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.PutThunderstorm" );

	UWeatherControl_eventPutThunderstorm_Parms PutThunderstorm_Parms;
	PutThunderstorm_Parms.Region = Region;

	this->ProcessEvent ( pFnPutThunderstorm, &PutThunderstorm_Parms, NULL );
};

// Function NowGame.WeatherControl.PutData
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Region                         ( CPF_Parm )
// int                            clouds                         ( CPF_Parm )
// int                            Rain                           ( CPF_Parm )
// int                            Fog                            ( CPF_Parm )

void UWeatherControl::eventPutData ( int Region, int clouds, int Rain, int Fog )
{
	static UFunction* pFnPutData = NULL;

	if ( ! pFnPutData )
		pFnPutData = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.PutData" );

	UWeatherControl_eventPutData_Parms PutData_Parms;
	PutData_Parms.Region = Region;
	PutData_Parms.clouds = clouds;
	PutData_Parms.Rain = Rain;
	PutData_Parms.Fog = Fog;

	this->ProcessEvent ( pFnPutData, &PutData_Parms, NULL );
};

// Function NowGame.WeatherControl.RelocateCloudsWith
// [0x00820002] 
// Parameters infos:
// class AMortalWeatherPostProcessVolume* Vol                            ( CPF_Parm )

void UWeatherControl::RelocateCloudsWith ( class AMortalWeatherPostProcessVolume* Vol )
{
	static UFunction* pFnRelocateCloudsWith = NULL;

	if ( ! pFnRelocateCloudsWith )
		pFnRelocateCloudsWith = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.RelocateCloudsWith" );

	UWeatherControl_execRelocateCloudsWith_Parms RelocateCloudsWith_Parms;
	RelocateCloudsWith_Parms.Vol = Vol;

	this->ProcessEvent ( pFnRelocateCloudsWith, &RelocateCloudsWith_Parms, NULL );
};

// Function NowGame.WeatherControl.AddCloudToRelocated
// [0x00020002] 
// Parameters infos:
// class AMortalCloudEmitter*     Add                            ( CPF_Parm )

void UWeatherControl::AddCloudToRelocated ( class AMortalCloudEmitter* Add )
{
	static UFunction* pFnAddCloudToRelocated = NULL;

	if ( ! pFnAddCloudToRelocated )
		pFnAddCloudToRelocated = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.AddCloudToRelocated" );

	UWeatherControl_execAddCloudToRelocated_Parms AddCloudToRelocated_Parms;
	AddCloudToRelocated_Parms.Add = Add;

	this->ProcessEvent ( pFnAddCloudToRelocated, &AddCloudToRelocated_Parms, NULL );
};

// Function NowGame.WeatherControl.ToggleWeatherOnOff
// [0x00020002] 
// Parameters infos:

void UWeatherControl::ToggleWeatherOnOff ( )
{
	static UFunction* pFnToggleWeatherOnOff = NULL;

	if ( ! pFnToggleWeatherOnOff )
		pFnToggleWeatherOnOff = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.ToggleWeatherOnOff" );

	UWeatherControl_execToggleWeatherOnOff_Parms ToggleWeatherOnOff_Parms;

	this->ProcessEvent ( pFnToggleWeatherOnOff, &ToggleWeatherOnOff_Parms, NULL );
};

// Function NowGame.WeatherControl.Tick1Sec
// [0x00020002] 
// Parameters infos:

void UWeatherControl::Tick1Sec ( )
{
	static UFunction* pFnTick1Sec = NULL;

	if ( ! pFnTick1Sec )
		pFnTick1Sec = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.Tick1Sec" );

	UWeatherControl_execTick1Sec_Parms Tick1Sec_Parms;

	this->ProcessEvent ( pFnTick1Sec, &Tick1Sec_Parms, NULL );
};

// Function NowGame.WeatherControl.GetCurrentRegionName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UWeatherControl::GetCurrentRegionName ( )
{
	static UFunction* pFnGetCurrentRegionName = NULL;

	if ( ! pFnGetCurrentRegionName )
		pFnGetCurrentRegionName = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.GetCurrentRegionName" );

	UWeatherControl_execGetCurrentRegionName_Parms GetCurrentRegionName_Parms;

	this->ProcessEvent ( pFnGetCurrentRegionName, &GetCurrentRegionName_Parms, NULL );

	return GetCurrentRegionName_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.ThunderMore
// [0x00020002] 
// Parameters infos:

void UWeatherControl::ThunderMore ( )
{
	static UFunction* pFnThunderMore = NULL;

	if ( ! pFnThunderMore )
		pFnThunderMore = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.ThunderMore" );

	UWeatherControl_execThunderMore_Parms ThunderMore_Parms;

	this->ProcessEvent ( pFnThunderMore, &ThunderMore_Parms, NULL );
};

// Function NowGame.WeatherControl.GetWindMagnitude
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UWeatherControl::GetWindMagnitude ( )
{
	static UFunction* pFnGetWindMagnitude = NULL;

	if ( ! pFnGetWindMagnitude )
		pFnGetWindMagnitude = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.GetWindMagnitude" );

	UWeatherControl_execGetWindMagnitude_Parms GetWindMagnitude_Parms;

	this->ProcessEvent ( pFnGetWindMagnitude, &GetWindMagnitude_Parms, NULL );

	return GetWindMagnitude_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetWindDirection
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UWeatherControl::GetWindDirection ( )
{
	static UFunction* pFnGetWindDirection = NULL;

	if ( ! pFnGetWindDirection )
		pFnGetWindDirection = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.GetWindDirection" );

	UWeatherControl_execGetWindDirection_Parms GetWindDirection_Parms;

	this->ProcessEvent ( pFnGetWindDirection, &GetWindDirection_Parms, NULL );

	return GetWindDirection_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.IsMagicThunder
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Region                         ( CPF_Parm )

bool UWeatherControl::IsMagicThunder ( int Region )
{
	static UFunction* pFnIsMagicThunder = NULL;

	if ( ! pFnIsMagicThunder )
		pFnIsMagicThunder = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.IsMagicThunder" );

	UWeatherControl_execIsMagicThunder_Parms IsMagicThunder_Parms;
	IsMagicThunder_Parms.Region = Region;

	this->ProcessEvent ( pFnIsMagicThunder, &IsMagicThunder_Parms, NULL );

	return IsMagicThunder_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetFog
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Region                         ( CPF_Parm )

int UWeatherControl::GetFog ( int Region )
{
	static UFunction* pFnGetFog = NULL;

	if ( ! pFnGetFog )
		pFnGetFog = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.GetFog" );

	UWeatherControl_execGetFog_Parms GetFog_Parms;
	GetFog_Parms.Region = Region;

	this->ProcessEvent ( pFnGetFog, &GetFog_Parms, NULL );

	return GetFog_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetRain
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Region                         ( CPF_Parm )

int UWeatherControl::GetRain ( int Region )
{
	static UFunction* pFnGetRain = NULL;

	if ( ! pFnGetRain )
		pFnGetRain = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.GetRain" );

	UWeatherControl_execGetRain_Parms GetRain_Parms;
	GetRain_Parms.Region = Region;

	this->ProcessEvent ( pFnGetRain, &GetRain_Parms, NULL );

	return GetRain_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetClouds
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Region                         ( CPF_Parm )

int UWeatherControl::GetClouds ( int Region )
{
	static UFunction* pFnGetClouds = NULL;

	if ( ! pFnGetClouds )
		pFnGetClouds = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.GetClouds" );

	UWeatherControl_execGetClouds_Parms GetClouds_Parms;
	GetClouds_Parms.Region = Region;

	this->ProcessEvent ( pFnGetClouds, &GetClouds_Parms, NULL );

	return GetClouds_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.IsLocalMagicThunder
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UWeatherControl::IsLocalMagicThunder ( )
{
	static UFunction* pFnIsLocalMagicThunder = NULL;

	if ( ! pFnIsLocalMagicThunder )
		pFnIsLocalMagicThunder = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.IsLocalMagicThunder" );

	UWeatherControl_execIsLocalMagicThunder_Parms IsLocalMagicThunder_Parms;

	this->ProcessEvent ( pFnIsLocalMagicThunder, &IsLocalMagicThunder_Parms, NULL );

	return IsLocalMagicThunder_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetLocalFog
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UWeatherControl::GetLocalFog ( )
{
	static UFunction* pFnGetLocalFog = NULL;

	if ( ! pFnGetLocalFog )
		pFnGetLocalFog = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.GetLocalFog" );

	UWeatherControl_execGetLocalFog_Parms GetLocalFog_Parms;

	this->ProcessEvent ( pFnGetLocalFog, &GetLocalFog_Parms, NULL );

	return GetLocalFog_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetLocalRain
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UWeatherControl::GetLocalRain ( )
{
	static UFunction* pFnGetLocalRain = NULL;

	if ( ! pFnGetLocalRain )
		pFnGetLocalRain = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.GetLocalRain" );

	UWeatherControl_execGetLocalRain_Parms GetLocalRain_Parms;

	this->ProcessEvent ( pFnGetLocalRain, &GetLocalRain_Parms, NULL );

	return GetLocalRain_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.GetLocalClouds
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UWeatherControl::GetLocalClouds ( )
{
	static UFunction* pFnGetLocalClouds = NULL;

	if ( ! pFnGetLocalClouds )
		pFnGetLocalClouds = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.GetLocalClouds" );

	UWeatherControl_execGetLocalClouds_Parms GetLocalClouds_Parms;

	this->ProcessEvent ( pFnGetLocalClouds, &GetLocalClouds_Parms, NULL );

	return GetLocalClouds_Parms.ReturnValue;
};

// Function NowGame.WeatherControl.LeaveRegion
// [0x00020002] 
// Parameters infos:
// int                            Region                         ( CPF_Parm )

void UWeatherControl::LeaveRegion ( int Region )
{
	static UFunction* pFnLeaveRegion = NULL;

	if ( ! pFnLeaveRegion )
		pFnLeaveRegion = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.LeaveRegion" );

	UWeatherControl_execLeaveRegion_Parms LeaveRegion_Parms;
	LeaveRegion_Parms.Region = Region;

	this->ProcessEvent ( pFnLeaveRegion, &LeaveRegion_Parms, NULL );
};

// Function NowGame.WeatherControl.EnterRegion
// [0x00020002] 
// Parameters infos:
// int                            Region                         ( CPF_Parm )

void UWeatherControl::EnterRegion ( int Region )
{
	static UFunction* pFnEnterRegion = NULL;

	if ( ! pFnEnterRegion )
		pFnEnterRegion = UObject::FindObject< UFunction > ( "Function NowGame.WeatherControl.EnterRegion" );

	UWeatherControl_execEnterRegion_Parms EnterRegion_Parms;
	EnterRegion_Parms.Region = Region;

	this->ProcessEvent ( pFnEnterRegion, &EnterRegion_Parms, NULL );
};

// Function NowGame.Observer.Notify
// [0x00020000] 
// Parameters infos:
// class UObservable*             Src                            ( CPF_Parm | CPF_EditInline )

void UObserver::Notify ( class UObservable* Src )
{
	static UFunction* pFnNotify = NULL;

	if ( ! pFnNotify )
		pFnNotify = UObject::FindObject< UFunction > ( "Function NowGame.Observer.Notify" );

	UObserver_execNotify_Parms Notify_Parms;
	Notify_Parms.Src = Src;

	this->ProcessEvent ( pFnNotify, &Notify_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.GetGFXHud
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* UOnlineSubsystemNowGame::eventGetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetGFXHud" );

	UOnlineSubsystemNowGame_eventGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.DrawDebugLine
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 vStart                         ( CPF_Parm )
// struct FVector                 vEnd                           ( CPF_Parm )

void UOnlineSubsystemNowGame::eventDrawDebugLine ( struct FVector vStart, struct FVector vEnd )
{
	static UFunction* pFnDrawDebugLine = NULL;

	if ( ! pFnDrawDebugLine )
		pFnDrawDebugLine = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.DrawDebugLine" );

	UOnlineSubsystemNowGame_eventDrawDebugLine_Parms DrawDebugLine_Parms;
	memcpy ( &DrawDebugLine_Parms.vStart, &vStart, 0xC );
	memcpy ( &DrawDebugLine_Parms.vEnd, &vEnd, 0xC );

	this->ProcessEvent ( pFnDrawDebugLine, &DrawDebugLine_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.IsMyTgt
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )

bool UOnlineSubsystemNowGame::eventIsMyTgt ( class AActor* A )
{
	static UFunction* pFnIsMyTgt = NULL;

	if ( ! pFnIsMyTgt )
		pFnIsMyTgt = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.IsMyTgt" );

	UOnlineSubsystemNowGame_eventIsMyTgt_Parms IsMyTgt_Parms;
	IsMyTgt_Parms.A = A;

	this->ProcessEvent ( pFnIsMyTgt, &IsMyTgt_Parms, NULL );

	return IsMyTgt_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.PlayerLogout
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::PlayerLogout ( )
{
	static UFunction* pFnPlayerLogout = NULL;

	if ( ! pFnPlayerLogout )
		pFnPlayerLogout = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.PlayerLogout" );

	UOnlineSubsystemNowGame_execPlayerLogout_Parms PlayerLogout_Parms;

	pFnPlayerLogout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayerLogout, &PlayerLogout_Parms, NULL );

	pFnPlayerLogout->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ConvertGuidToActor
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 petGUID                        ( CPF_Parm | CPF_NeedCtorLink )
// class ANowAtlasAvatarAi*       pOutActor                      ( CPF_Parm | CPF_OutParm )

bool UOnlineSubsystemNowGame::eventConvertGuidToActor ( struct FString petGUID, class ANowAtlasAvatarAi** pOutActor )
{
	static UFunction* pFnConvertGuidToActor = NULL;

	if ( ! pFnConvertGuidToActor )
		pFnConvertGuidToActor = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ConvertGuidToActor" );

	UOnlineSubsystemNowGame_eventConvertGuidToActor_Parms ConvertGuidToActor_Parms;
	memcpy ( &ConvertGuidToActor_Parms.petGUID, &petGUID, 0xC );

	this->ProcessEvent ( pFnConvertGuidToActor, &ConvertGuidToActor_Parms, NULL );

	if ( pOutActor )
		*pOutActor = ConvertGuidToActor_Parms.pOutActor;

	return ConvertGuidToActor_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.SpawnEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            iWhatEffect                    ( CPF_Parm )
// struct FVector                 vFrom                          ( CPF_Parm )
// struct FVector                 vDest                          ( CPF_Parm )

void UOnlineSubsystemNowGame::eventSpawnEffect ( int iWhatEffect, struct FVector vFrom, struct FVector vDest )
{
	static UFunction* pFnSpawnEffect = NULL;

	if ( ! pFnSpawnEffect )
		pFnSpawnEffect = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SpawnEffect" );

	UOnlineSubsystemNowGame_eventSpawnEffect_Parms SpawnEffect_Parms;
	SpawnEffect_Parms.iWhatEffect = iWhatEffect;
	memcpy ( &SpawnEffect_Parms.vFrom, &vFrom, 0xC );
	memcpy ( &SpawnEffect_Parms.vDest, &vDest, 0xC );

	this->ProcessEvent ( pFnSpawnEffect, &SpawnEffect_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.PlaceMurderCounts
// [0x00020002] 
// Parameters infos:

void UOnlineSubsystemNowGame::PlaceMurderCounts ( )
{
	static UFunction* pFnPlaceMurderCounts = NULL;

	if ( ! pFnPlaceMurderCounts )
		pFnPlaceMurderCounts = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.PlaceMurderCounts" );

	UOnlineSubsystemNowGame_execPlaceMurderCounts_Parms PlaceMurderCounts_Parms;

	this->ProcessEvent ( pFnPlaceMurderCounts, &PlaceMurderCounts_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddClientAvatarObtainedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         ClientAvatarObtainedDelegate   ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::AddClientAvatarObtainedDelegate ( struct FScriptDelegate ClientAvatarObtainedDelegate )
{
	static UFunction* pFnAddClientAvatarObtainedDelegate = NULL;

	if ( ! pFnAddClientAvatarObtainedDelegate )
		pFnAddClientAvatarObtainedDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AddClientAvatarObtainedDelegate" );

	UOnlineSubsystemNowGame_execAddClientAvatarObtainedDelegate_Parms AddClientAvatarObtainedDelegate_Parms;
	memcpy ( &AddClientAvatarObtainedDelegate_Parms.ClientAvatarObtainedDelegate, &ClientAvatarObtainedDelegate, 0xC );

	this->ProcessEvent ( pFnAddClientAvatarObtainedDelegate, &AddClientAvatarObtainedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnClientAvatarObtained
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnClientAvatarObtained ( )
{
	static UFunction* pFnOnClientAvatarObtained = NULL;

	if ( ! pFnOnClientAvatarObtained )
		pFnOnClientAvatarObtained = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.OnClientAvatarObtained" );

	UOnlineSubsystemNowGame_execOnClientAvatarObtained_Parms OnClientAvatarObtained_Parms;

	this->ProcessEvent ( pFnOnClientAvatarObtained, &OnClientAvatarObtained_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearClientAvatarInterestListRemovedFromDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         ClientAvatarInterestListRemovedFromDelegate ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearClientAvatarInterestListRemovedFromDelegate ( struct FScriptDelegate ClientAvatarInterestListRemovedFromDelegate )
{
	static UFunction* pFnClearClientAvatarInterestListRemovedFromDelegate = NULL;

	if ( ! pFnClearClientAvatarInterestListRemovedFromDelegate )
		pFnClearClientAvatarInterestListRemovedFromDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ClearClientAvatarInterestListRemovedFromDelegate" );

	UOnlineSubsystemNowGame_execClearClientAvatarInterestListRemovedFromDelegate_Parms ClearClientAvatarInterestListRemovedFromDelegate_Parms;
	memcpy ( &ClearClientAvatarInterestListRemovedFromDelegate_Parms.ClientAvatarInterestListRemovedFromDelegate, &ClientAvatarInterestListRemovedFromDelegate, 0xC );

	this->ProcessEvent ( pFnClearClientAvatarInterestListRemovedFromDelegate, &ClearClientAvatarInterestListRemovedFromDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddClientAvatarInterestListRemovedFromDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         ClientAvatarInterestListRemovedFromDelegate ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::AddClientAvatarInterestListRemovedFromDelegate ( struct FScriptDelegate ClientAvatarInterestListRemovedFromDelegate )
{
	static UFunction* pFnAddClientAvatarInterestListRemovedFromDelegate = NULL;

	if ( ! pFnAddClientAvatarInterestListRemovedFromDelegate )
		pFnAddClientAvatarInterestListRemovedFromDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AddClientAvatarInterestListRemovedFromDelegate" );

	UOnlineSubsystemNowGame_execAddClientAvatarInterestListRemovedFromDelegate_Parms AddClientAvatarInterestListRemovedFromDelegate_Parms;
	memcpy ( &AddClientAvatarInterestListRemovedFromDelegate_Parms.ClientAvatarInterestListRemovedFromDelegate, &ClientAvatarInterestListRemovedFromDelegate, 0xC );

	this->ProcessEvent ( pFnAddClientAvatarInterestListRemovedFromDelegate, &AddClientAvatarInterestListRemovedFromDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnClientAvatarInterestListRemovedFrom
// [0x00120000] 
// Parameters infos:
// class AActor*                  Actor                          ( CPF_Parm )

void UOnlineSubsystemNowGame::OnClientAvatarInterestListRemovedFrom ( class AActor* Actor )
{
	static UFunction* pFnOnClientAvatarInterestListRemovedFrom = NULL;

	if ( ! pFnOnClientAvatarInterestListRemovedFrom )
		pFnOnClientAvatarInterestListRemovedFrom = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.OnClientAvatarInterestListRemovedFrom" );

	UOnlineSubsystemNowGame_execOnClientAvatarInterestListRemovedFrom_Parms OnClientAvatarInterestListRemovedFrom_Parms;
	OnClientAvatarInterestListRemovedFrom_Parms.Actor = Actor;

	this->ProcessEvent ( pFnOnClientAvatarInterestListRemovedFrom, &OnClientAvatarInterestListRemovedFrom_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearOnGMPetitionUpdatedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         OnGMPetitionUpdatedDelegate    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearOnGMPetitionUpdatedDelegate ( struct FScriptDelegate OnGMPetitionUpdatedDelegate )
{
	static UFunction* pFnClearOnGMPetitionUpdatedDelegate = NULL;

	if ( ! pFnClearOnGMPetitionUpdatedDelegate )
		pFnClearOnGMPetitionUpdatedDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ClearOnGMPetitionUpdatedDelegate" );

	UOnlineSubsystemNowGame_execClearOnGMPetitionUpdatedDelegate_Parms ClearOnGMPetitionUpdatedDelegate_Parms;
	memcpy ( &ClearOnGMPetitionUpdatedDelegate_Parms.OnGMPetitionUpdatedDelegate, &OnGMPetitionUpdatedDelegate, 0xC );

	this->ProcessEvent ( pFnClearOnGMPetitionUpdatedDelegate, &ClearOnGMPetitionUpdatedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearOnClientGuildWarUpdatedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         OnClientGuildWarUpdatedDelegate ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearOnClientGuildWarUpdatedDelegate ( struct FScriptDelegate OnClientGuildWarUpdatedDelegate )
{
	static UFunction* pFnClearOnClientGuildWarUpdatedDelegate = NULL;

	if ( ! pFnClearOnClientGuildWarUpdatedDelegate )
		pFnClearOnClientGuildWarUpdatedDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ClearOnClientGuildWarUpdatedDelegate" );

	UOnlineSubsystemNowGame_execClearOnClientGuildWarUpdatedDelegate_Parms ClearOnClientGuildWarUpdatedDelegate_Parms;
	memcpy ( &ClearOnClientGuildWarUpdatedDelegate_Parms.OnClientGuildWarUpdatedDelegate, &OnClientGuildWarUpdatedDelegate, 0xC );

	this->ProcessEvent ( pFnClearOnClientGuildWarUpdatedDelegate, &ClearOnClientGuildWarUpdatedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearOnClientGuildUpdatedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         OnClientGuildUpdatedDelegate   ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearOnClientGuildUpdatedDelegate ( struct FScriptDelegate OnClientGuildUpdatedDelegate )
{
	static UFunction* pFnClearOnClientGuildUpdatedDelegate = NULL;

	if ( ! pFnClearOnClientGuildUpdatedDelegate )
		pFnClearOnClientGuildUpdatedDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ClearOnClientGuildUpdatedDelegate" );

	UOnlineSubsystemNowGame_execClearOnClientGuildUpdatedDelegate_Parms ClearOnClientGuildUpdatedDelegate_Parms;
	memcpy ( &ClearOnClientGuildUpdatedDelegate_Parms.OnClientGuildUpdatedDelegate, &OnClientGuildUpdatedDelegate, 0xC );

	this->ProcessEvent ( pFnClearOnClientGuildUpdatedDelegate, &ClearOnClientGuildUpdatedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddOnGMPetitionUpdatedDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FScriptDelegate         OnGMPetitionUpdatedDelegate    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::eventAddOnGMPetitionUpdatedDelegate ( struct FScriptDelegate OnGMPetitionUpdatedDelegate )
{
	static UFunction* pFnAddOnGMPetitionUpdatedDelegate = NULL;

	if ( ! pFnAddOnGMPetitionUpdatedDelegate )
		pFnAddOnGMPetitionUpdatedDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AddOnGMPetitionUpdatedDelegate" );

	UOnlineSubsystemNowGame_eventAddOnGMPetitionUpdatedDelegate_Parms AddOnGMPetitionUpdatedDelegate_Parms;
	memcpy ( &AddOnGMPetitionUpdatedDelegate_Parms.OnGMPetitionUpdatedDelegate, &OnGMPetitionUpdatedDelegate, 0xC );

	this->ProcessEvent ( pFnAddOnGMPetitionUpdatedDelegate, &AddOnGMPetitionUpdatedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddOnClientGuildWarUpdatedDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FScriptDelegate         OnClientGuildWarUpdatedDelegate ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::eventAddOnClientGuildWarUpdatedDelegate ( struct FScriptDelegate OnClientGuildWarUpdatedDelegate )
{
	static UFunction* pFnAddOnClientGuildWarUpdatedDelegate = NULL;

	if ( ! pFnAddOnClientGuildWarUpdatedDelegate )
		pFnAddOnClientGuildWarUpdatedDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AddOnClientGuildWarUpdatedDelegate" );

	UOnlineSubsystemNowGame_eventAddOnClientGuildWarUpdatedDelegate_Parms AddOnClientGuildWarUpdatedDelegate_Parms;
	memcpy ( &AddOnClientGuildWarUpdatedDelegate_Parms.OnClientGuildWarUpdatedDelegate, &OnClientGuildWarUpdatedDelegate, 0xC );

	this->ProcessEvent ( pFnAddOnClientGuildWarUpdatedDelegate, &AddOnClientGuildWarUpdatedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddOnClientGuildUpdatedDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FScriptDelegate         OnClientGuildUpdatedDelegate   ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::eventAddOnClientGuildUpdatedDelegate ( struct FScriptDelegate OnClientGuildUpdatedDelegate )
{
	static UFunction* pFnAddOnClientGuildUpdatedDelegate = NULL;

	if ( ! pFnAddOnClientGuildUpdatedDelegate )
		pFnAddOnClientGuildUpdatedDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AddOnClientGuildUpdatedDelegate" );

	UOnlineSubsystemNowGame_eventAddOnClientGuildUpdatedDelegate_Parms AddOnClientGuildUpdatedDelegate_Parms;
	memcpy ( &AddOnClientGuildUpdatedDelegate_Parms.OnClientGuildUpdatedDelegate, &OnClientGuildUpdatedDelegate, 0xC );

	this->ProcessEvent ( pFnAddOnClientGuildUpdatedDelegate, &AddOnClientGuildUpdatedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearOnClientMailRequestDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         OnClientMailRequestDelegate    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearOnClientMailRequestDelegate ( struct FScriptDelegate OnClientMailRequestDelegate )
{
	static UFunction* pFnClearOnClientMailRequestDelegate = NULL;

	if ( ! pFnClearOnClientMailRequestDelegate )
		pFnClearOnClientMailRequestDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ClearOnClientMailRequestDelegate" );

	UOnlineSubsystemNowGame_execClearOnClientMailRequestDelegate_Parms ClearOnClientMailRequestDelegate_Parms;
	memcpy ( &ClearOnClientMailRequestDelegate_Parms.OnClientMailRequestDelegate, &OnClientMailRequestDelegate, 0xC );

	this->ProcessEvent ( pFnClearOnClientMailRequestDelegate, &ClearOnClientMailRequestDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddOnClientMailRequestDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FScriptDelegate         OnClientMailRequestDelegate    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::eventAddOnClientMailRequestDelegate ( struct FScriptDelegate OnClientMailRequestDelegate )
{
	static UFunction* pFnAddOnClientMailRequestDelegate = NULL;

	if ( ! pFnAddOnClientMailRequestDelegate )
		pFnAddOnClientMailRequestDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AddOnClientMailRequestDelegate" );

	UOnlineSubsystemNowGame_eventAddOnClientMailRequestDelegate_Parms AddOnClientMailRequestDelegate_Parms;
	memcpy ( &AddOnClientMailRequestDelegate_Parms.OnClientMailRequestDelegate, &OnClientMailRequestDelegate, 0xC );

	this->ProcessEvent ( pFnAddOnClientMailRequestDelegate, &AddOnClientMailRequestDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnClientMailRequest
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnClientMailRequest ( )
{
	static UFunction* pFnOnClientMailRequest = NULL;

	if ( ! pFnOnClientMailRequest )
		pFnOnClientMailRequest = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.OnClientMailRequest" );

	UOnlineSubsystemNowGame_execOnClientMailRequest_Parms OnClientMailRequest_Parms;

	this->ProcessEvent ( pFnOnClientMailRequest, &OnClientMailRequest_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnClientGuildWarUpdated
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnClientGuildWarUpdated ( )
{
	static UFunction* pFnOnClientGuildWarUpdated = NULL;

	if ( ! pFnOnClientGuildWarUpdated )
		pFnOnClientGuildWarUpdated = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.OnClientGuildWarUpdated" );

	UOnlineSubsystemNowGame_execOnClientGuildWarUpdated_Parms OnClientGuildWarUpdated_Parms;

	this->ProcessEvent ( pFnOnClientGuildWarUpdated, &OnClientGuildWarUpdated_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnGMPetitionUpdated
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnGMPetitionUpdated ( )
{
	static UFunction* pFnOnGMPetitionUpdated = NULL;

	if ( ! pFnOnGMPetitionUpdated )
		pFnOnGMPetitionUpdated = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.OnGMPetitionUpdated" );

	UOnlineSubsystemNowGame_execOnGMPetitionUpdated_Parms OnGMPetitionUpdated_Parms;

	this->ProcessEvent ( pFnOnGMPetitionUpdated, &OnGMPetitionUpdated_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnClientGuildUpdated
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnClientGuildUpdated ( )
{
	static UFunction* pFnOnClientGuildUpdated = NULL;

	if ( ! pFnOnClientGuildUpdated )
		pFnOnClientGuildUpdated = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.OnClientGuildUpdated" );

	UOnlineSubsystemNowGame_execOnClientGuildUpdated_Parms OnClientGuildUpdated_Parms;

	this->ProcessEvent ( pFnOnClientGuildUpdated, &OnClientGuildUpdated_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearClientAvatarInterestListAddedToDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         ClientAvatarInterestListAddedToDelegate ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearClientAvatarInterestListAddedToDelegate ( struct FScriptDelegate ClientAvatarInterestListAddedToDelegate )
{
	static UFunction* pFnClearClientAvatarInterestListAddedToDelegate = NULL;

	if ( ! pFnClearClientAvatarInterestListAddedToDelegate )
		pFnClearClientAvatarInterestListAddedToDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ClearClientAvatarInterestListAddedToDelegate" );

	UOnlineSubsystemNowGame_execClearClientAvatarInterestListAddedToDelegate_Parms ClearClientAvatarInterestListAddedToDelegate_Parms;
	memcpy ( &ClearClientAvatarInterestListAddedToDelegate_Parms.ClientAvatarInterestListAddedToDelegate, &ClientAvatarInterestListAddedToDelegate, 0xC );

	this->ProcessEvent ( pFnClearClientAvatarInterestListAddedToDelegate, &ClearClientAvatarInterestListAddedToDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddClientAvatarInterestListAddedToDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         ClientAvatarInterestListAddedToDelegate ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::AddClientAvatarInterestListAddedToDelegate ( struct FScriptDelegate ClientAvatarInterestListAddedToDelegate )
{
	static UFunction* pFnAddClientAvatarInterestListAddedToDelegate = NULL;

	if ( ! pFnAddClientAvatarInterestListAddedToDelegate )
		pFnAddClientAvatarInterestListAddedToDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AddClientAvatarInterestListAddedToDelegate" );

	UOnlineSubsystemNowGame_execAddClientAvatarInterestListAddedToDelegate_Parms AddClientAvatarInterestListAddedToDelegate_Parms;
	memcpy ( &AddClientAvatarInterestListAddedToDelegate_Parms.ClientAvatarInterestListAddedToDelegate, &ClientAvatarInterestListAddedToDelegate, 0xC );

	this->ProcessEvent ( pFnAddClientAvatarInterestListAddedToDelegate, &AddClientAvatarInterestListAddedToDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnClientAvatarInterestListAddedTo
// [0x00120000] 
// Parameters infos:
// class AActor*                  Actor                          ( CPF_Parm )

void UOnlineSubsystemNowGame::OnClientAvatarInterestListAddedTo ( class AActor* Actor )
{
	static UFunction* pFnOnClientAvatarInterestListAddedTo = NULL;

	if ( ! pFnOnClientAvatarInterestListAddedTo )
		pFnOnClientAvatarInterestListAddedTo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.OnClientAvatarInterestListAddedTo" );

	UOnlineSubsystemNowGame_execOnClientAvatarInterestListAddedTo_Parms OnClientAvatarInterestListAddedTo_Parms;
	OnClientAvatarInterestListAddedTo_Parms.Actor = Actor;

	this->ProcessEvent ( pFnOnClientAvatarInterestListAddedTo, &OnClientAvatarInterestListAddedTo_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnOpenInventoryContextMenu
// [0x00120000] 
// Parameters infos:
// int                            iBagID                         ( CPF_Parm )
// int                            iSlotId                        ( CPF_Parm )

void UOnlineSubsystemNowGame::OnOpenInventoryContextMenu ( int iBagID, int iSlotId )
{
	static UFunction* pFnOnOpenInventoryContextMenu = NULL;

	if ( ! pFnOnOpenInventoryContextMenu )
		pFnOnOpenInventoryContextMenu = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.OnOpenInventoryContextMenu" );

	UOnlineSubsystemNowGame_execOnOpenInventoryContextMenu_Parms OnOpenInventoryContextMenu_Parms;
	OnOpenInventoryContextMenu_Parms.iBagID = iBagID;
	OnOpenInventoryContextMenu_Parms.iSlotId = iSlotId;

	this->ProcessEvent ( pFnOnOpenInventoryContextMenu, &OnOpenInventoryContextMenu_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.SetLocalPlayerController
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    LocalPlayerController          ( CPF_Parm )

void UOnlineSubsystemNowGame::SetLocalPlayerController ( class ANowPlayerController* LocalPlayerController )
{
	static UFunction* pFnSetLocalPlayerController = NULL;

	if ( ! pFnSetLocalPlayerController )
		pFnSetLocalPlayerController = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SetLocalPlayerController" );

	UOnlineSubsystemNowGame_execSetLocalPlayerController_Parms SetLocalPlayerController_Parms;
	SetLocalPlayerController_Parms.LocalPlayerController = LocalPlayerController;

	this->ProcessEvent ( pFnSetLocalPlayerController, &SetLocalPlayerController_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.SendServerMessage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::SendServerMessage ( struct FString msg )
{
	static UFunction* pFnSendServerMessage = NULL;

	if ( ! pFnSendServerMessage )
		pFnSendServerMessage = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SendServerMessage" );

	UOnlineSubsystemNowGame_execSendServerMessage_Parms SendServerMessage_Parms;
	memcpy ( &SendServerMessage_Parms.msg, &msg, 0xC );

	pFnSendServerMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendServerMessage, &SendServerMessage_Parms, NULL );

	pFnSendServerMessage->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.TellBehaviorPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 TellCommand                    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::TellBehaviorPlayer ( struct FString TellCommand )
{
	static UFunction* pFnTellBehaviorPlayer = NULL;

	if ( ! pFnTellBehaviorPlayer )
		pFnTellBehaviorPlayer = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.TellBehaviorPlayer" );

	UOnlineSubsystemNowGame_execTellBehaviorPlayer_Parms TellBehaviorPlayer_Parms;
	memcpy ( &TellBehaviorPlayer_Parms.TellCommand, &TellCommand, 0xC );

	pFnTellBehaviorPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTellBehaviorPlayer, &TellBehaviorPlayer_Parms, NULL );

	pFnTellBehaviorPlayer->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetNumStabledPets
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            numPets                        ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetNumStabledPets ( int* numPets )
{
	static UFunction* pFnGetNumStabledPets = NULL;

	if ( ! pFnGetNumStabledPets )
		pFnGetNumStabledPets = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetNumStabledPets" );

	UOnlineSubsystemNowGame_execGetNumStabledPets_Parms GetNumStabledPets_Parms;

	pFnGetNumStabledPets->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumStabledPets, &GetNumStabledPets_Parms, NULL );

	pFnGetNumStabledPets->FunctionFlags |= 0x400;

	if ( numPets )
		*numPets = GetNumStabledPets_Parms.numPets;
};

// Function NowGame.OnlineSubsystemNowGame.GetInventoryContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// int                            ItemValue                      ( CPF_Parm | CPF_OutParm )
// int                            itemQuantity                   ( CPF_Parm | CPF_OutParm )
// unsigned char                  bLocked                        ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetInventoryContentInfo ( int iBag, int iSlot, class UContentInfo** Info, int* ItemValue, int* itemQuantity, unsigned char* bLocked )
{
	static UFunction* pFnGetInventoryContentInfo = NULL;

	if ( ! pFnGetInventoryContentInfo )
		pFnGetInventoryContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetInventoryContentInfo" );

	UOnlineSubsystemNowGame_execGetInventoryContentInfo_Parms GetInventoryContentInfo_Parms;
	GetInventoryContentInfo_Parms.iBag = iBag;
	GetInventoryContentInfo_Parms.iSlot = iSlot;

	pFnGetInventoryContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventoryContentInfo, &GetInventoryContentInfo_Parms, NULL );

	pFnGetInventoryContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetInventoryContentInfo_Parms.Info;

	if ( ItemValue )
		*ItemValue = GetInventoryContentInfo_Parms.ItemValue;

	if ( itemQuantity )
		*itemQuantity = GetInventoryContentInfo_Parms.itemQuantity;

	if ( bLocked )
		*bLocked = GetInventoryContentInfo_Parms.bLocked;
};

// Function NowGame.OnlineSubsystemNowGame.GetInventoryCompactGuid
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetInventoryCompactGuid ( int iSlot, struct FString* ItemGuid )
{
	static UFunction* pFnGetInventoryCompactGuid = NULL;

	if ( ! pFnGetInventoryCompactGuid )
		pFnGetInventoryCompactGuid = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetInventoryCompactGuid" );

	UOnlineSubsystemNowGame_execGetInventoryCompactGuid_Parms GetInventoryCompactGuid_Parms;
	GetInventoryCompactGuid_Parms.iSlot = iSlot;

	pFnGetInventoryCompactGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventoryCompactGuid, &GetInventoryCompactGuid_Parms, NULL );

	pFnGetInventoryCompactGuid->FunctionFlags |= 0x400;

	if ( ItemGuid )
		memcpy ( ItemGuid, &GetInventoryCompactGuid_Parms.ItemGuid, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.ClearTradeChangedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         TradeChangedDelegate           ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearTradeChangedDelegate ( struct FScriptDelegate TradeChangedDelegate )
{
	static UFunction* pFnClearTradeChangedDelegate = NULL;

	if ( ! pFnClearTradeChangedDelegate )
		pFnClearTradeChangedDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ClearTradeChangedDelegate" );

	UOnlineSubsystemNowGame_execClearTradeChangedDelegate_Parms ClearTradeChangedDelegate_Parms;
	memcpy ( &ClearTradeChangedDelegate_Parms.TradeChangedDelegate, &TradeChangedDelegate, 0xC );

	this->ProcessEvent ( pFnClearTradeChangedDelegate, &ClearTradeChangedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddTradeChangedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         TradeChangedDelegate           ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::AddTradeChangedDelegate ( struct FScriptDelegate TradeChangedDelegate )
{
	static UFunction* pFnAddTradeChangedDelegate = NULL;

	if ( ! pFnAddTradeChangedDelegate )
		pFnAddTradeChangedDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AddTradeChangedDelegate" );

	UOnlineSubsystemNowGame_execAddTradeChangedDelegate_Parms AddTradeChangedDelegate_Parms;
	memcpy ( &AddTradeChangedDelegate_Parms.TradeChangedDelegate, &TradeChangedDelegate, 0xC );

	this->ProcessEvent ( pFnAddTradeChangedDelegate, &AddTradeChangedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearMoStatChangedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         MoStatsChangedDelegate         ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearMoStatChangedDelegate ( struct FScriptDelegate MoStatsChangedDelegate )
{
	static UFunction* pFnClearMoStatChangedDelegate = NULL;

	if ( ! pFnClearMoStatChangedDelegate )
		pFnClearMoStatChangedDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ClearMoStatChangedDelegate" );

	UOnlineSubsystemNowGame_execClearMoStatChangedDelegate_Parms ClearMoStatChangedDelegate_Parms;
	memcpy ( &ClearMoStatChangedDelegate_Parms.MoStatsChangedDelegate, &MoStatsChangedDelegate, 0xC );

	this->ProcessEvent ( pFnClearMoStatChangedDelegate, &ClearMoStatChangedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddMoStatChangedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         MoStatsChangedDelegate         ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::AddMoStatChangedDelegate ( struct FScriptDelegate MoStatsChangedDelegate )
{
	static UFunction* pFnAddMoStatChangedDelegate = NULL;

	if ( ! pFnAddMoStatChangedDelegate )
		pFnAddMoStatChangedDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AddMoStatChangedDelegate" );

	UOnlineSubsystemNowGame_execAddMoStatChangedDelegate_Parms AddMoStatChangedDelegate_Parms;
	memcpy ( &AddMoStatChangedDelegate_Parms.MoStatsChangedDelegate, &MoStatsChangedDelegate, 0xC );

	this->ProcessEvent ( pFnAddMoStatChangedDelegate, &AddMoStatChangedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.ClearFriendListChangedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         FriendListsChangedDelegate     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClearFriendListChangedDelegate ( struct FScriptDelegate FriendListsChangedDelegate )
{
	static UFunction* pFnClearFriendListChangedDelegate = NULL;

	if ( ! pFnClearFriendListChangedDelegate )
		pFnClearFriendListChangedDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ClearFriendListChangedDelegate" );

	UOnlineSubsystemNowGame_execClearFriendListChangedDelegate_Parms ClearFriendListChangedDelegate_Parms;
	memcpy ( &ClearFriendListChangedDelegate_Parms.FriendListsChangedDelegate, &FriendListsChangedDelegate, 0xC );

	this->ProcessEvent ( pFnClearFriendListChangedDelegate, &ClearFriendListChangedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddFriendListChangedDelegate
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         FriendListsChangedDelegate     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::AddFriendListChangedDelegate ( struct FScriptDelegate FriendListsChangedDelegate )
{
	static UFunction* pFnAddFriendListChangedDelegate = NULL;

	if ( ! pFnAddFriendListChangedDelegate )
		pFnAddFriendListChangedDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AddFriendListChangedDelegate" );

	UOnlineSubsystemNowGame_execAddFriendListChangedDelegate_Parms AddFriendListChangedDelegate_Parms;
	memcpy ( &AddFriendListChangedDelegate_Parms.FriendListsChangedDelegate, &FriendListsChangedDelegate, 0xC );

	this->ProcessEvent ( pFnAddFriendListChangedDelegate, &AddFriendListChangedDelegate_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.isChallengingGuild
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            N                              ( CPF_Parm )

bool UOnlineSubsystemNowGame::isChallengingGuild ( int N )
{
	static UFunction* pFnisChallengingGuild = NULL;

	if ( ! pFnisChallengingGuild )
		pFnisChallengingGuild = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.isChallengingGuild" );

	UOnlineSubsystemNowGame_execisChallengingGuild_Parms isChallengingGuild_Parms;
	isChallengingGuild_Parms.N = N;

	this->ProcessEvent ( pFnisChallengingGuild, &isChallengingGuild_Parms, NULL );

	return isChallengingGuild_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.getGMPetition
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 petitionSourceName             ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 ClaimedBy                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::getGMPetition ( struct FString petitionSourceName, struct FString* Category, struct FString* Description, struct FString* ClaimedBy )
{
	static UFunction* pFngetGMPetition = NULL;

	if ( ! pFngetGMPetition )
		pFngetGMPetition = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.getGMPetition" );

	UOnlineSubsystemNowGame_execgetGMPetition_Parms getGMPetition_Parms;
	memcpy ( &getGMPetition_Parms.petitionSourceName, &petitionSourceName, 0xC );

	this->ProcessEvent ( pFngetGMPetition, &getGMPetition_Parms, NULL );

	if ( Category )
		memcpy ( Category, &getGMPetition_Parms.Category, 0xC );

	if ( Description )
		memcpy ( Description, &getGMPetition_Parms.Description, 0xC );

	if ( ClaimedBy )
		memcpy ( ClaimedBy, &getGMPetition_Parms.ClaimedBy, 0xC );

	return getGMPetition_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.getGMPetitionAt
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            I                              ( CPF_Parm )
// struct FString                 petitionSourceName             ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 ClaimedBy                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::getGMPetitionAt ( int I, struct FString* petitionSourceName, struct FString* Category, struct FString* Description, struct FString* ClaimedBy )
{
	static UFunction* pFngetGMPetitionAt = NULL;

	if ( ! pFngetGMPetitionAt )
		pFngetGMPetitionAt = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.getGMPetitionAt" );

	UOnlineSubsystemNowGame_execgetGMPetitionAt_Parms getGMPetitionAt_Parms;
	getGMPetitionAt_Parms.I = I;

	this->ProcessEvent ( pFngetGMPetitionAt, &getGMPetitionAt_Parms, NULL );

	if ( petitionSourceName )
		memcpy ( petitionSourceName, &getGMPetitionAt_Parms.petitionSourceName, 0xC );

	if ( Category )
		memcpy ( Category, &getGMPetitionAt_Parms.Category, 0xC );

	if ( Description )
		memcpy ( Description, &getGMPetitionAt_Parms.Description, 0xC );

	if ( ClaimedBy )
		memcpy ( ClaimedBy, &getGMPetitionAt_Parms.ClaimedBy, 0xC );

	return getGMPetitionAt_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.TellClientPetitionUpdated
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 SourceName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Category                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ClaimedBy                      ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  ClosingStatus                  ( CPF_Parm )
// unsigned long                  bConnection                    ( CPF_Parm )

bool UOnlineSubsystemNowGame::eventTellClientPetitionUpdated ( struct FString SourceName, struct FString Category, struct FString Description, struct FString ClaimedBy, unsigned long ClosingStatus, unsigned long bConnection )
{
	static UFunction* pFnTellClientPetitionUpdated = NULL;

	if ( ! pFnTellClientPetitionUpdated )
		pFnTellClientPetitionUpdated = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.TellClientPetitionUpdated" );

	UOnlineSubsystemNowGame_eventTellClientPetitionUpdated_Parms TellClientPetitionUpdated_Parms;
	memcpy ( &TellClientPetitionUpdated_Parms.SourceName, &SourceName, 0xC );
	memcpy ( &TellClientPetitionUpdated_Parms.Category, &Category, 0xC );
	memcpy ( &TellClientPetitionUpdated_Parms.Description, &Description, 0xC );
	memcpy ( &TellClientPetitionUpdated_Parms.ClaimedBy, &ClaimedBy, 0xC );
	TellClientPetitionUpdated_Parms.ClosingStatus = ClosingStatus;
	TellClientPetitionUpdated_Parms.bConnection = bConnection;

	this->ProcessEvent ( pFnTellClientPetitionUpdated, &TellClientPetitionUpdated_Parms, NULL );

	return TellClientPetitionUpdated_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.TellClientAddParam
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 StringValue                    ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::eventTellClientAddParam ( struct FString StringValue )
{
	static UFunction* pFnTellClientAddParam = NULL;

	if ( ! pFnTellClientAddParam )
		pFnTellClientAddParam = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.TellClientAddParam" );

	UOnlineSubsystemNowGame_eventTellClientAddParam_Parms TellClientAddParam_Parms;
	memcpy ( &TellClientAddParam_Parms.StringValue, &StringValue, 0xC );

	this->ProcessEvent ( pFnTellClientAddParam, &TellClientAddParam_Parms, NULL );

	return TellClientAddParam_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.TellClientLastExecutedCommands
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 GMAvatarName                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            timeSinceLastCommand           ( CPF_Parm )

bool UOnlineSubsystemNowGame::eventTellClientLastExecutedCommands ( struct FString GMAvatarName, int timeSinceLastCommand )
{
	static UFunction* pFnTellClientLastExecutedCommands = NULL;

	if ( ! pFnTellClientLastExecutedCommands )
		pFnTellClientLastExecutedCommands = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.TellClientLastExecutedCommands" );

	UOnlineSubsystemNowGame_eventTellClientLastExecutedCommands_Parms TellClientLastExecutedCommands_Parms;
	memcpy ( &TellClientLastExecutedCommands_Parms.GMAvatarName, &GMAvatarName, 0xC );
	TellClientLastExecutedCommands_Parms.timeSinceLastCommand = timeSinceLastCommand;

	this->ProcessEvent ( pFnTellClientLastExecutedCommands, &TellClientLastExecutedCommands_Parms, NULL );

	return TellClientLastExecutedCommands_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ModCommandSetDay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystemNowGame::eventModCommandSetDay ( )
{
	static UFunction* pFnModCommandSetDay = NULL;

	if ( ! pFnModCommandSetDay )
		pFnModCommandSetDay = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ModCommandSetDay" );

	UOnlineSubsystemNowGame_eventModCommandSetDay_Parms ModCommandSetDay_Parms;

	this->ProcessEvent ( pFnModCommandSetDay, &ModCommandSetDay_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.setGotPetition
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  hasPetition                    ( CPF_Parm )

void UOnlineSubsystemNowGame::eventsetGotPetition ( unsigned long hasPetition )
{
	static UFunction* pFnsetGotPetition = NULL;

	if ( ! pFnsetGotPetition )
		pFnsetGotPetition = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.setGotPetition" );

	UOnlineSubsystemNowGame_eventsetGotPetition_Parms setGotPetition_Parms;
	setGotPetition_Parms.hasPetition = hasPetition;

	this->ProcessEvent ( pFnsetGotPetition, &setGotPetition_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.getWarDeclarations
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            N                              ( CPF_Parm )
// struct FString                 guildName                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::getWarDeclarations ( int N, struct FString* guildName )
{
	static UFunction* pFngetWarDeclarations = NULL;

	if ( ! pFngetWarDeclarations )
		pFngetWarDeclarations = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.getWarDeclarations" );

	UOnlineSubsystemNowGame_execgetWarDeclarations_Parms getWarDeclarations_Parms;
	getWarDeclarations_Parms.N = N;

	this->ProcessEvent ( pFngetWarDeclarations, &getWarDeclarations_Parms, NULL );

	if ( guildName )
		memcpy ( guildName, &getWarDeclarations_Parms.guildName, 0xC );

	return getWarDeclarations_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.getNrOfGMPetitions
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::getNrOfGMPetitions ( )
{
	static UFunction* pFngetNrOfGMPetitions = NULL;

	if ( ! pFngetNrOfGMPetitions )
		pFngetNrOfGMPetitions = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.getNrOfGMPetitions" );

	UOnlineSubsystemNowGame_execgetNrOfGMPetitions_Parms getNrOfGMPetitions_Parms;

	this->ProcessEvent ( pFngetNrOfGMPetitions, &getNrOfGMPetitions_Parms, NULL );

	return getNrOfGMPetitions_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.getNrOfGuildWars
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::getNrOfGuildWars ( )
{
	static UFunction* pFngetNrOfGuildWars = NULL;

	if ( ! pFngetNrOfGuildWars )
		pFngetNrOfGuildWars = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.getNrOfGuildWars" );

	UOnlineSubsystemNowGame_execgetNrOfGuildWars_Parms getNrOfGuildWars_Parms;

	this->ProcessEvent ( pFngetNrOfGuildWars, &getNrOfGuildWars_Parms, NULL );

	return getNrOfGuildWars_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.DoDumpTextToFile
// [0x00020002] 
// Parameters infos:
// struct FString                 outFilename                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 dumpString                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::DoDumpTextToFile ( struct FString outFilename, struct FString dumpString )
{
	static UFunction* pFnDoDumpTextToFile = NULL;

	if ( ! pFnDoDumpTextToFile )
		pFnDoDumpTextToFile = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.DoDumpTextToFile" );

	UOnlineSubsystemNowGame_execDoDumpTextToFile_Parms DoDumpTextToFile_Parms;
	memcpy ( &DoDumpTextToFile_Parms.outFilename, &outFilename, 0xC );
	memcpy ( &DoDumpTextToFile_Parms.dumpString, &dumpString, 0xC );

	this->ProcessEvent ( pFnDoDumpTextToFile, &DoDumpTextToFile_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.RemTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sID                            ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::eventRemTimer ( struct FString sID )
{
	static UFunction* pFnRemTimer = NULL;

	if ( ! pFnRemTimer )
		pFnRemTimer = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.RemTimer" );

	UOnlineSubsystemNowGame_eventRemTimer_Parms RemTimer_Parms;
	memcpy ( &RemTimer_Parms.sID, &sID, 0xC );

	this->ProcessEvent ( pFnRemTimer, &RemTimer_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.TriggerPendingTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystemNowGame::eventTriggerPendingTimer ( )
{
	static UFunction* pFnTriggerPendingTimer = NULL;

	if ( ! pFnTriggerPendingTimer )
		pFnTriggerPendingTimer = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.TriggerPendingTimer" );

	UOnlineSubsystemNowGame_eventTriggerPendingTimer_Parms TriggerPendingTimer_Parms;

	this->ProcessEvent ( pFnTriggerPendingTimer, &TriggerPendingTimer_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.AddTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 sID                            ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sDesc                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sIcon                          ( CPF_Parm | CPF_NeedCtorLink )
// float                          fTimer                         ( CPF_Parm )
// struct FString                 sCancelDesc                    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::eventAddTimer ( struct FString sID, struct FString sName, struct FString sDesc, struct FString sIcon, float fTimer, struct FString sCancelDesc )
{
	static UFunction* pFnAddTimer = NULL;

	if ( ! pFnAddTimer )
		pFnAddTimer = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AddTimer" );

	UOnlineSubsystemNowGame_eventAddTimer_Parms AddTimer_Parms;
	memcpy ( &AddTimer_Parms.sID, &sID, 0xC );
	memcpy ( &AddTimer_Parms.sName, &sName, 0xC );
	memcpy ( &AddTimer_Parms.sDesc, &sDesc, 0xC );
	memcpy ( &AddTimer_Parms.sIcon, &sIcon, 0xC );
	AddTimer_Parms.fTimer = fTimer;
	memcpy ( &AddTimer_Parms.sCancelDesc, &sCancelDesc, 0xC );

	this->ProcessEvent ( pFnAddTimer, &AddTimer_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnFriendListsChanged
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnFriendListsChanged ( )
{
	static UFunction* pFnOnFriendListsChanged = NULL;

	if ( ! pFnOnFriendListsChanged )
		pFnOnFriendListsChanged = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.OnFriendListsChanged" );

	UOnlineSubsystemNowGame_execOnFriendListsChanged_Parms OnFriendListsChanged_Parms;

	this->ProcessEvent ( pFnOnFriendListsChanged, &OnFriendListsChanged_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnMoStatsChanged
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnMoStatsChanged ( )
{
	static UFunction* pFnOnMoStatsChanged = NULL;

	if ( ! pFnOnMoStatsChanged )
		pFnOnMoStatsChanged = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.OnMoStatsChanged" );

	UOnlineSubsystemNowGame_execOnMoStatsChanged_Parms OnMoStatsChanged_Parms;

	this->ProcessEvent ( pFnOnMoStatsChanged, &OnMoStatsChanged_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.OnTradeChanged
// [0x00120000] 
// Parameters infos:

void UOnlineSubsystemNowGame::OnTradeChanged ( )
{
	static UFunction* pFnOnTradeChanged = NULL;

	if ( ! pFnOnTradeChanged )
		pFnOnTradeChanged = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.OnTradeChanged" );

	UOnlineSubsystemNowGame_execOnTradeChanged_Parms OnTradeChanged_Parms;

	this->ProcessEvent ( pFnOnTradeChanged, &OnTradeChanged_Parms, NULL );
};

// Function NowGame.OnlineSubsystemNowGame.GetGuidFromItemName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sName                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetGuidFromItemName ( struct FString sName )
{
	static UFunction* pFnGetGuidFromItemName = NULL;

	if ( ! pFnGetGuidFromItemName )
		pFnGetGuidFromItemName = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetGuidFromItemName" );

	UOnlineSubsystemNowGame_execGetGuidFromItemName_Parms GetGuidFromItemName_Parms;
	memcpy ( &GetGuidFromItemName_Parms.sName, &sName, 0xC );

	pFnGetGuidFromItemName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuidFromItemName, &GetGuidFromItemName_Parms, NULL );

	pFnGetGuidFromItemName->FunctionFlags |= 0x400;

	return GetGuidFromItemName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetBookInfoString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetBookInfoString ( )
{
	static UFunction* pFnGetBookInfoString = NULL;

	if ( ! pFnGetBookInfoString )
		pFnGetBookInfoString = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetBookInfoString" );

	UOnlineSubsystemNowGame_execGetBookInfoString_Parms GetBookInfoString_Parms;

	pFnGetBookInfoString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBookInfoString, &GetBookInfoString_Parms, NULL );

	pFnGetBookInfoString->FunctionFlags |= 0x400;

	return GetBookInfoString_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.HasItemWithContentGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sItemContentGuid               ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::HasItemWithContentGuid ( struct FString sItemContentGuid )
{
	static UFunction* pFnHasItemWithContentGuid = NULL;

	if ( ! pFnHasItemWithContentGuid )
		pFnHasItemWithContentGuid = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.HasItemWithContentGuid" );

	UOnlineSubsystemNowGame_execHasItemWithContentGuid_Parms HasItemWithContentGuid_Parms;
	memcpy ( &HasItemWithContentGuid_Parms.sItemContentGuid, &sItemContentGuid, 0xC );

	pFnHasItemWithContentGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasItemWithContentGuid, &HasItemWithContentGuid_Parms, NULL );

	pFnHasItemWithContentGuid->FunctionFlags |= 0x400;

	return HasItemWithContentGuid_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetAllBagsJSon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetAllBagsJSon ( )
{
	static UFunction* pFnGetAllBagsJSon = NULL;

	if ( ! pFnGetAllBagsJSon )
		pFnGetAllBagsJSon = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetAllBagsJSon" );

	UOnlineSubsystemNowGame_execGetAllBagsJSon_Parms GetAllBagsJSon_Parms;

	pFnGetAllBagsJSon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAllBagsJSon, &GetAllBagsJSon_Parms, NULL );

	pFnGetAllBagsJSon->FunctionFlags |= 0x400;

	return GetAllBagsJSon_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetInventoryLimitString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetInventoryLimitString ( )
{
	static UFunction* pFnGetInventoryLimitString = NULL;

	if ( ! pFnGetInventoryLimitString )
		pFnGetInventoryLimitString = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetInventoryLimitString" );

	UOnlineSubsystemNowGame_execGetInventoryLimitString_Parms GetInventoryLimitString_Parms;

	pFnGetInventoryLimitString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventoryLimitString, &GetInventoryLimitString_Parms, NULL );

	pFnGetInventoryLimitString->FunctionFlags |= 0x400;

	return GetInventoryLimitString_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetDepositLimitString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iDeposit                       ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetDepositLimitString ( int iDeposit )
{
	static UFunction* pFnGetDepositLimitString = NULL;

	if ( ! pFnGetDepositLimitString )
		pFnGetDepositLimitString = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetDepositLimitString" );

	UOnlineSubsystemNowGame_execGetDepositLimitString_Parms GetDepositLimitString_Parms;
	GetDepositLimitString_Parms.iDeposit = iDeposit;

	pFnGetDepositLimitString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDepositLimitString, &GetDepositLimitString_Parms, NULL );

	pFnGetDepositLimitString->FunctionFlags |= 0x400;

	return GetDepositLimitString_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ItemContentMiscNameFromGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::ItemContentMiscNameFromGuid ( struct FString sGuid )
{
	static UFunction* pFnItemContentMiscNameFromGuid = NULL;

	if ( ! pFnItemContentMiscNameFromGuid )
		pFnItemContentMiscNameFromGuid = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ItemContentMiscNameFromGuid" );

	UOnlineSubsystemNowGame_execItemContentMiscNameFromGuid_Parms ItemContentMiscNameFromGuid_Parms;
	memcpy ( &ItemContentMiscNameFromGuid_Parms.sGuid, &sGuid, 0xC );

	pFnItemContentMiscNameFromGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnItemContentMiscNameFromGuid, &ItemContentMiscNameFromGuid_Parms, NULL );

	pFnItemContentMiscNameFromGuid->FunctionFlags |= 0x400;

	return ItemContentMiscNameFromGuid_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ItemContentNameFromGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::ItemContentNameFromGuid ( struct FString sGuid )
{
	static UFunction* pFnItemContentNameFromGuid = NULL;

	if ( ! pFnItemContentNameFromGuid )
		pFnItemContentNameFromGuid = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ItemContentNameFromGuid" );

	UOnlineSubsystemNowGame_execItemContentNameFromGuid_Parms ItemContentNameFromGuid_Parms;
	memcpy ( &ItemContentNameFromGuid_Parms.sGuid, &sGuid, 0xC );

	pFnItemContentNameFromGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnItemContentNameFromGuid, &ItemContentNameFromGuid_Parms, NULL );

	pFnItemContentNameFromGuid->FunctionFlags |= 0x400;

	return ItemContentNameFromGuid_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetAvatarJSon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetAvatarJSon ( )
{
	static UFunction* pFnGetAvatarJSon = NULL;

	if ( ! pFnGetAvatarJSon )
		pFnGetAvatarJSon = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetAvatarJSon" );

	UOnlineSubsystemNowGame_execGetAvatarJSon_Parms GetAvatarJSon_Parms;

	pFnGetAvatarJSon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAvatarJSon, &GetAvatarJSon_Parms, NULL );

	pFnGetAvatarJSon->FunctionFlags |= 0x400;

	return GetAvatarJSon_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ExtractJSonFromString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sText                          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::ExtractJSonFromString ( struct FString sText )
{
	static UFunction* pFnExtractJSonFromString = NULL;

	if ( ! pFnExtractJSonFromString )
		pFnExtractJSonFromString = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ExtractJSonFromString" );

	UOnlineSubsystemNowGame_execExtractJSonFromString_Parms ExtractJSonFromString_Parms;
	memcpy ( &ExtractJSonFromString_Parms.sText, &sText, 0xC );

	pFnExtractJSonFromString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExtractJSonFromString, &ExtractJSonFromString_Parms, NULL );

	pFnExtractJSonFromString->FunctionFlags |= 0x400;

	return ExtractJSonFromString_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.SendPing
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::SendPing ( )
{
	static UFunction* pFnSendPing = NULL;

	if ( ! pFnSendPing )
		pFnSendPing = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SendPing" );

	UOnlineSubsystemNowGame_execSendPing_Parms SendPing_Parms;

	pFnSendPing->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendPing, &SendPing_Parms, NULL );

	pFnSendPing->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetGuildPP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetGuildPP ( )
{
	static UFunction* pFnGetGuildPP = NULL;

	if ( ! pFnGetGuildPP )
		pFnGetGuildPP = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetGuildPP" );

	UOnlineSubsystemNowGame_execGetGuildPP_Parms GetGuildPP_Parms;

	pFnGetGuildPP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuildPP, &GetGuildPP_Parms, NULL );

	pFnGetGuildPP->FunctionFlags |= 0x400;

	return GetGuildPP_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.UpdatePetSlots
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::UpdatePetSlots ( )
{
	static UFunction* pFnUpdatePetSlots = NULL;

	if ( ! pFnUpdatePetSlots )
		pFnUpdatePetSlots = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.UpdatePetSlots" );

	UOnlineSubsystemNowGame_execUpdatePetSlots_Parms UpdatePetSlots_Parms;

	pFnUpdatePetSlots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePetSlots, &UpdatePetSlots_Parms, NULL );

	pFnUpdatePetSlots->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.RequestPylonInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::RequestPylonInfo ( )
{
	static UFunction* pFnRequestPylonInfo = NULL;

	if ( ! pFnRequestPylonInfo )
		pFnRequestPylonInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.RequestPylonInfo" );

	UOnlineSubsystemNowGame_execRequestPylonInfo_Parms RequestPylonInfo_Parms;

	pFnRequestPylonInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPylonInfo, &RequestPylonInfo_Parms, NULL );

	pFnRequestPylonInfo->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.getEnabledStats
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       vStatNames                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< int >                  vStatValue                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::getEnabledStats ( TArray< struct FString >* vStatNames, TArray< int >* vStatValue )
{
	static UFunction* pFngetEnabledStats = NULL;

	if ( ! pFngetEnabledStats )
		pFngetEnabledStats = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.getEnabledStats" );

	UOnlineSubsystemNowGame_execgetEnabledStats_Parms getEnabledStats_Parms;

	pFngetEnabledStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetEnabledStats, &getEnabledStats_Parms, NULL );

	pFngetEnabledStats->FunctionFlags |= 0x400;

	if ( vStatNames )
		memcpy ( vStatNames, &getEnabledStats_Parms.vStatNames, 0xC );

	if ( vStatValue )
		memcpy ( vStatValue, &getEnabledStats_Parms.vStatValue, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.enableStatOnClient
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ContentName                    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::enableStatOnClient ( struct FString ContentName )
{
	static UFunction* pFnenableStatOnClient = NULL;

	if ( ! pFnenableStatOnClient )
		pFnenableStatOnClient = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.enableStatOnClient" );

	UOnlineSubsystemNowGame_execenableStatOnClient_Parms enableStatOnClient_Parms;
	memcpy ( &enableStatOnClient_Parms.ContentName, &ContentName, 0xC );

	pFnenableStatOnClient->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnenableStatOnClient, &enableStatOnClient_Parms, NULL );

	pFnenableStatOnClient->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ClearSkills
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::ClearSkills ( )
{
	static UFunction* pFnClearSkills = NULL;

	if ( ! pFnClearSkills )
		pFnClearSkills = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ClearSkills" );

	UOnlineSubsystemNowGame_execClearSkills_Parms ClearSkills_Parms;

	pFnClearSkills->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearSkills, &ClearSkills_Parms, NULL );

	pFnClearSkills->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetNrLockpicks
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetNrLockpicks ( )
{
	static UFunction* pFnGetNrLockpicks = NULL;

	if ( ! pFnGetNrLockpicks )
		pFnGetNrLockpicks = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetNrLockpicks" );

	UOnlineSubsystemNowGame_execGetNrLockpicks_Parms GetNrLockpicks_Parms;

	pFnGetNrLockpicks->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNrLockpicks, &GetNrLockpicks_Parms, NULL );

	pFnGetNrLockpicks->FunctionFlags |= 0x400;

	return GetNrLockpicks_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetTotalCumprumAmount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetTotalCumprumAmount ( )
{
	static UFunction* pFnGetTotalCumprumAmount = NULL;

	if ( ! pFnGetTotalCumprumAmount )
		pFnGetTotalCumprumAmount = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetTotalCumprumAmount" );

	UOnlineSubsystemNowGame_execGetTotalCumprumAmount_Parms GetTotalCumprumAmount_Parms;

	pFnGetTotalCumprumAmount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTotalCumprumAmount, &GetTotalCumprumAmount_Parms, NULL );

	pFnGetTotalCumprumAmount->FunctionFlags |= 0x400;

	return GetTotalCumprumAmount_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSilverAmount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetSilverAmount ( )
{
	static UFunction* pFnGetSilverAmount = NULL;

	if ( ! pFnGetSilverAmount )
		pFnGetSilverAmount = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSilverAmount" );

	UOnlineSubsystemNowGame_execGetSilverAmount_Parms GetSilverAmount_Parms;

	pFnGetSilverAmount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSilverAmount, &GetSilverAmount_Parms, NULL );

	pFnGetSilverAmount->FunctionFlags |= 0x400;

	return GetSilverAmount_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.CheckGotSilver
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )

bool UOnlineSubsystemNowGame::CheckGotSilver ( int Amount )
{
	static UFunction* pFnCheckGotSilver = NULL;

	if ( ! pFnCheckGotSilver )
		pFnCheckGotSilver = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.CheckGotSilver" );

	UOnlineSubsystemNowGame_execCheckGotSilver_Parms CheckGotSilver_Parms;
	CheckGotSilver_Parms.Amount = Amount;

	pFnCheckGotSilver->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckGotSilver, &CheckGotSilver_Parms, NULL );

	pFnCheckGotSilver->FunctionFlags |= 0x400;

	return CheckGotSilver_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.IsItemFishItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Type                           ( CPF_Parm )
// struct FString                 strguid                        ( CPF_Parm | CPF_NeedCtorLink )

float UOnlineSubsystemNowGame::IsItemFishItem ( int Type, struct FString strguid )
{
	static UFunction* pFnIsItemFishItem = NULL;

	if ( ! pFnIsItemFishItem )
		pFnIsItemFishItem = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.IsItemFishItem" );

	UOnlineSubsystemNowGame_execIsItemFishItem_Parms IsItemFishItem_Parms;
	IsItemFishItem_Parms.Type = Type;
	memcpy ( &IsItemFishItem_Parms.strguid, &strguid, 0xC );

	pFnIsItemFishItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsItemFishItem, &IsItemFishItem_Parms, NULL );

	pFnIsItemFishItem->FunctionFlags |= 0x400;

	return IsItemFishItem_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.IsItemBait
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 strguid                        ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::IsItemBait ( struct FString strguid )
{
	static UFunction* pFnIsItemBait = NULL;

	if ( ! pFnIsItemBait )
		pFnIsItemBait = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.IsItemBait" );

	UOnlineSubsystemNowGame_execIsItemBait_Parms IsItemBait_Parms;
	memcpy ( &IsItemBait_Parms.strguid, &strguid, 0xC );

	pFnIsItemBait->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsItemBait, &IsItemBait_Parms, NULL );

	pFnIsItemBait->FunctionFlags |= 0x400;

	return IsItemBait_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.TellBFishingCombat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            I                              ( CPF_Parm )
// struct FString                 strguid                        ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::TellBFishingCombat ( int I, struct FString strguid )
{
	static UFunction* pFnTellBFishingCombat = NULL;

	if ( ! pFnTellBFishingCombat )
		pFnTellBFishingCombat = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.TellBFishingCombat" );

	UOnlineSubsystemNowGame_execTellBFishingCombat_Parms TellBFishingCombat_Parms;
	TellBFishingCombat_Parms.I = I;
	memcpy ( &TellBFishingCombat_Parms.strguid, &strguid, 0xC );

	pFnTellBFishingCombat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTellBFishingCombat, &TellBFishingCombat_Parms, NULL );

	pFnTellBFishingCombat->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetFishContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetFishContentInfo ( int iBag, int iSlot, class UContentInfo** Info )
{
	static UFunction* pFnGetFishContentInfo = NULL;

	if ( ! pFnGetFishContentInfo )
		pFnGetFishContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetFishContentInfo" );

	UOnlineSubsystemNowGame_execGetFishContentInfo_Parms GetFishContentInfo_Parms;
	GetFishContentInfo_Parms.iBag = iBag;
	GetFishContentInfo_Parms.iSlot = iSlot;

	pFnGetFishContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFishContentInfo, &GetFishContentInfo_Parms, NULL );

	pFnGetFishContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetFishContentInfo_Parms.Info;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillIsActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::GetSkillIsActive ( int iSlot )
{
	static UFunction* pFnGetSkillIsActive = NULL;

	if ( ! pFnGetSkillIsActive )
		pFnGetSkillIsActive = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillIsActive" );

	UOnlineSubsystemNowGame_execGetSkillIsActive_Parms GetSkillIsActive_Parms;
	GetSkillIsActive_Parms.iSlot = iSlot;

	pFnGetSkillIsActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillIsActive, &GetSkillIsActive_Parms, NULL );

	pFnGetSkillIsActive->FunctionFlags |= 0x400;

	return GetSkillIsActive_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

float UOnlineSubsystemNowGame::GetSkillValue ( int iSlot )
{
	static UFunction* pFnGetSkillValue = NULL;

	if ( ! pFnGetSkillValue )
		pFnGetSkillValue = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillValue" );

	UOnlineSubsystemNowGame_execGetSkillValue_Parms GetSkillValue_Parms;
	GetSkillValue_Parms.iSlot = iSlot;

	pFnGetSkillValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillValue, &GetSkillValue_Parms, NULL );

	pFnGetSkillValue->FunctionFlags |= 0x400;

	return GetSkillValue_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillGroup
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetSkillGroup ( int iSlot )
{
	static UFunction* pFnGetSkillGroup = NULL;

	if ( ! pFnGetSkillGroup )
		pFnGetSkillGroup = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillGroup" );

	UOnlineSubsystemNowGame_execGetSkillGroup_Parms GetSkillGroup_Parms;
	GetSkillGroup_Parms.iSlot = iSlot;

	pFnGetSkillGroup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillGroup, &GetSkillGroup_Parms, NULL );

	pFnGetSkillGroup->FunctionFlags |= 0x400;

	return GetSkillGroup_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetSkillContentInfo ( int iSlot, class UContentInfo** Info )
{
	static UFunction* pFnGetSkillContentInfo = NULL;

	if ( ! pFnGetSkillContentInfo )
		pFnGetSkillContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillContentInfo" );

	UOnlineSubsystemNowGame_execGetSkillContentInfo_Parms GetSkillContentInfo_Parms;
	GetSkillContentInfo_Parms.iSlot = iSlot;

	pFnGetSkillContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillContentInfo, &GetSkillContentInfo_Parms, NULL );

	pFnGetSkillContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetSkillContentInfo_Parms.Info;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetSkillName ( int iSlot )
{
	static UFunction* pFnGetSkillName = NULL;

	if ( ! pFnGetSkillName )
		pFnGetSkillName = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillName" );

	UOnlineSubsystemNowGame_execGetSkillName_Parms GetSkillName_Parms;
	GetSkillName_Parms.iSlot = iSlot;

	pFnGetSkillName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillName, &GetSkillName_Parms, NULL );

	pFnGetSkillName->FunctionFlags |= 0x400;

	return GetSkillName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetNumSkills
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetNumSkills ( )
{
	static UFunction* pFnGetNumSkills = NULL;

	if ( ! pFnGetNumSkills )
		pFnGetNumSkills = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetNumSkills" );

	UOnlineSubsystemNowGame_execGetNumSkills_Parms GetNumSkills_Parms;

	pFnGetNumSkills->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumSkills, &GetNumSkills_Parms, NULL );

	pFnGetNumSkills->FunctionFlags |= 0x400;

	return GetNumSkills_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.CheckRefineMaterialsNew
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Item1                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Item2                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Item3                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::CheckRefineMaterialsNew ( struct FString Item1, struct FString Item2, struct FString Item3, struct FString* Message )
{
	static UFunction* pFnCheckRefineMaterialsNew = NULL;

	if ( ! pFnCheckRefineMaterialsNew )
		pFnCheckRefineMaterialsNew = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.CheckRefineMaterialsNew" );

	UOnlineSubsystemNowGame_execCheckRefineMaterialsNew_Parms CheckRefineMaterialsNew_Parms;
	memcpy ( &CheckRefineMaterialsNew_Parms.Item1, &Item1, 0xC );
	memcpy ( &CheckRefineMaterialsNew_Parms.Item2, &Item2, 0xC );
	memcpy ( &CheckRefineMaterialsNew_Parms.Item3, &Item3, 0xC );

	pFnCheckRefineMaterialsNew->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckRefineMaterialsNew, &CheckRefineMaterialsNew_Parms, NULL );

	pFnCheckRefineMaterialsNew->FunctionFlags |= 0x400;

	if ( Message )
		memcpy ( Message, &CheckRefineMaterialsNew_Parms.Message, 0xC );

	return CheckRefineMaterialsNew_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.CheckDevicePrerequisites
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 DeviceName                     ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::CheckDevicePrerequisites ( struct FString DeviceName )
{
	static UFunction* pFnCheckDevicePrerequisites = NULL;

	if ( ! pFnCheckDevicePrerequisites )
		pFnCheckDevicePrerequisites = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.CheckDevicePrerequisites" );

	UOnlineSubsystemNowGame_execCheckDevicePrerequisites_Parms CheckDevicePrerequisites_Parms;
	memcpy ( &CheckDevicePrerequisites_Parms.DeviceName, &DeviceName, 0xC );

	pFnCheckDevicePrerequisites->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckDevicePrerequisites, &CheckDevicePrerequisites_Parms, NULL );

	pFnCheckDevicePrerequisites->FunctionFlags |= 0x400;

	return CheckDevicePrerequisites_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetReagentContentInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )
// struct FString                 impagepath                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetReagentContentInfo ( int SpellID, struct FString impagepath )
{
	static UFunction* pFnGetReagentContentInfo = NULL;

	if ( ! pFnGetReagentContentInfo )
		pFnGetReagentContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetReagentContentInfo" );

	UOnlineSubsystemNowGame_execGetReagentContentInfo_Parms GetReagentContentInfo_Parms;
	GetReagentContentInfo_Parms.SpellID = SpellID;
	memcpy ( &GetReagentContentInfo_Parms.impagepath, &impagepath, 0xC );

	pFnGetReagentContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReagentContentInfo, &GetReagentContentInfo_Parms, NULL );

	pFnGetReagentContentInfo->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.LocalPickSpell
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )
// int                            spellSchoolPage                ( CPF_Parm )

void UOnlineSubsystemNowGame::LocalPickSpell ( int SpellID, int spellSchoolPage )
{
	static UFunction* pFnLocalPickSpell = NULL;

	if ( ! pFnLocalPickSpell )
		pFnLocalPickSpell = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.LocalPickSpell" );

	UOnlineSubsystemNowGame_execLocalPickSpell_Parms LocalPickSpell_Parms;
	LocalPickSpell_Parms.SpellID = SpellID;
	LocalPickSpell_Parms.spellSchoolPage = spellSchoolPage;

	pFnLocalPickSpell->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLocalPickSpell, &LocalPickSpell_Parms, NULL );

	pFnLocalPickSpell->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ClearPicked
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::ClearPicked ( )
{
	static UFunction* pFnClearPicked = NULL;

	if ( ! pFnClearPicked )
		pFnClearPicked = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ClearPicked" );

	UOnlineSubsystemNowGame_execClearPicked_Parms ClearPicked_Parms;

	pFnClearPicked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearPicked, &ClearPicked_Parms, NULL );

	pFnClearPicked->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetActionSlotInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 strguid                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

int UOnlineSubsystemNowGame::GetActionSlotInfo ( int iSlot, struct FString* strguid )
{
	static UFunction* pFnGetActionSlotInfo = NULL;

	if ( ! pFnGetActionSlotInfo )
		pFnGetActionSlotInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetActionSlotInfo" );

	UOnlineSubsystemNowGame_execGetActionSlotInfo_Parms GetActionSlotInfo_Parms;
	GetActionSlotInfo_Parms.iSlot = iSlot;

	pFnGetActionSlotInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActionSlotInfo, &GetActionSlotInfo_Parms, NULL );

	pFnGetActionSlotInfo->FunctionFlags |= 0x400;

	if ( strguid )
		memcpy ( strguid, &GetActionSlotInfo_Parms.strguid, 0xC );

	return GetActionSlotInfo_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSpellID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

int UOnlineSubsystemNowGame::GetSpellID ( int iSlot )
{
	static UFunction* pFnGetSpellID = NULL;

	if ( ! pFnGetSpellID )
		pFnGetSpellID = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSpellID" );

	UOnlineSubsystemNowGame_execGetSpellID_Parms GetSpellID_Parms;
	GetSpellID_Parms.iSlot = iSlot;

	pFnGetSpellID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpellID, &GetSpellID_Parms, NULL );

	pFnGetSpellID->FunctionFlags |= 0x400;

	return GetSpellID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

int UOnlineSubsystemNowGame::GetSkillID ( int iSlot )
{
	static UFunction* pFnGetSkillID = NULL;

	if ( ! pFnGetSkillID )
		pFnGetSkillID = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillID" );

	UOnlineSubsystemNowGame_execGetSkillID_Parms GetSkillID_Parms;
	GetSkillID_Parms.iSlot = iSlot;

	pFnGetSkillID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillID, &GetSkillID_Parms, NULL );

	pFnGetSkillID->FunctionFlags |= 0x400;

	return GetSkillID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

int UOnlineSubsystemNowGame::GetItemID ( int iSlot )
{
	static UFunction* pFnGetItemID = NULL;

	if ( ! pFnGetItemID )
		pFnGetItemID = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetItemID" );

	UOnlineSubsystemNowGame_execGetItemID_Parms GetItemID_Parms;
	GetItemID_Parms.iSlot = iSlot;

	pFnGetItemID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemID, &GetItemID_Parms, NULL );

	pFnGetItemID->FunctionFlags |= 0x400;

	return GetItemID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillCGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetSkillCGuid ( int iSlot )
{
	static UFunction* pFnGetSkillCGuid = NULL;

	if ( ! pFnGetSkillCGuid )
		pFnGetSkillCGuid = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillCGuid" );

	UOnlineSubsystemNowGame_execGetSkillCGuid_Parms GetSkillCGuid_Parms;
	GetSkillCGuid_Parms.iSlot = iSlot;

	pFnGetSkillCGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillCGuid, &GetSkillCGuid_Parms, NULL );

	pFnGetSkillCGuid->FunctionFlags |= 0x400;

	return GetSkillCGuid_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.IsValidVial
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::IsValidVial ( int iSlot )
{
	static UFunction* pFnIsValidVial = NULL;

	if ( ! pFnIsValidVial )
		pFnIsValidVial = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.IsValidVial" );

	UOnlineSubsystemNowGame_execIsValidVial_Parms IsValidVial_Parms;
	IsValidVial_Parms.iSlot = iSlot;

	pFnIsValidVial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidVial, &IsValidVial_Parms, NULL );

	pFnIsValidVial->FunctionFlags |= 0x400;

	return IsValidVial_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemVialData
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 sVial                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::GetItemVialData ( int iSlot, struct FString* sVial )
{
	static UFunction* pFnGetItemVialData = NULL;

	if ( ! pFnGetItemVialData )
		pFnGetItemVialData = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetItemVialData" );

	UOnlineSubsystemNowGame_execGetItemVialData_Parms GetItemVialData_Parms;
	GetItemVialData_Parms.iSlot = iSlot;

	pFnGetItemVialData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemVialData, &GetItemVialData_Parms, NULL );

	pFnGetItemVialData->FunctionFlags |= 0x400;

	if ( sVial )
		memcpy ( sVial, &GetItemVialData_Parms.sVial, 0xC );

	return GetItemVialData_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemToolData
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )
// TArray< struct FString >       vString                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::GetItemToolData ( int iSlot, TArray< struct FString >* vString )
{
	static UFunction* pFnGetItemToolData = NULL;

	if ( ! pFnGetItemToolData )
		pFnGetItemToolData = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetItemToolData" );

	UOnlineSubsystemNowGame_execGetItemToolData_Parms GetItemToolData_Parms;
	GetItemToolData_Parms.iSlot = iSlot;

	pFnGetItemToolData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemToolData, &GetItemToolData_Parms, NULL );

	pFnGetItemToolData->FunctionFlags |= 0x400;

	if ( vString )
		memcpy ( vString, &GetItemToolData_Parms.vString, 0xC );

	return GetItemToolData_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemCGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetItemCGuid ( int iSlot )
{
	static UFunction* pFnGetItemCGuid = NULL;

	if ( ! pFnGetItemCGuid )
		pFnGetItemCGuid = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetItemCGuid" );

	UOnlineSubsystemNowGame_execGetItemCGuid_Parms GetItemCGuid_Parms;
	GetItemCGuid_Parms.iSlot = iSlot;

	pFnGetItemCGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemCGuid, &GetItemCGuid_Parms, NULL );

	pFnGetItemCGuid->FunctionFlags |= 0x400;

	return GetItemCGuid_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ActionbarClearSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::ActionbarClearSlot ( int iSlot )
{
	static UFunction* pFnActionbarClearSlot = NULL;

	if ( ! pFnActionbarClearSlot )
		pFnActionbarClearSlot = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ActionbarClearSlot" );

	UOnlineSubsystemNowGame_execActionbarClearSlot_Parms ActionbarClearSlot_Parms;
	ActionbarClearSlot_Parms.iSlot = iSlot;

	pFnActionbarClearSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActionbarClearSlot, &ActionbarClearSlot_Parms, NULL );

	pFnActionbarClearSlot->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PlaceLocalPicked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::PlaceLocalPicked ( int iSlot )
{
	static UFunction* pFnPlaceLocalPicked = NULL;

	if ( ! pFnPlaceLocalPicked )
		pFnPlaceLocalPicked = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.PlaceLocalPicked" );

	UOnlineSubsystemNowGame_execPlaceLocalPicked_Parms PlaceLocalPicked_Parms;
	PlaceLocalPicked_Parms.iSlot = iSlot;

	pFnPlaceLocalPicked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaceLocalPicked, &PlaceLocalPicked_Parms, NULL );

	pFnPlaceLocalPicked->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetContentInfoActionbar
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )

int UOnlineSubsystemNowGame::GetContentInfoActionbar ( int iSlot, class UContentInfo** Info )
{
	static UFunction* pFnGetContentInfoActionbar = NULL;

	if ( ! pFnGetContentInfoActionbar )
		pFnGetContentInfoActionbar = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetContentInfoActionbar" );

	UOnlineSubsystemNowGame_execGetContentInfoActionbar_Parms GetContentInfoActionbar_Parms;
	GetContentInfoActionbar_Parms.iSlot = iSlot;

	pFnGetContentInfoActionbar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetContentInfoActionbar, &GetContentInfoActionbar_Parms, NULL );

	pFnGetContentInfoActionbar->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetContentInfoActionbar_Parms.Info;

	return GetContentInfoActionbar_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetPickedContentInfoActionBar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UContentInfo* UOnlineSubsystemNowGame::GetPickedContentInfoActionBar ( )
{
	static UFunction* pFnGetPickedContentInfoActionBar = NULL;

	if ( ! pFnGetPickedContentInfoActionBar )
		pFnGetPickedContentInfoActionBar = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetPickedContentInfoActionBar" );

	UOnlineSubsystemNowGame_execGetPickedContentInfoActionBar_Parms GetPickedContentInfoActionBar_Parms;

	pFnGetPickedContentInfoActionBar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPickedContentInfoActionBar, &GetPickedContentInfoActionBar_Parms, NULL );

	pFnGetPickedContentInfoActionBar->FunctionFlags |= 0x400;

	return GetPickedContentInfoActionBar_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.PlacePickedInActionBar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::PlacePickedInActionBar ( int iSlot )
{
	static UFunction* pFnPlacePickedInActionBar = NULL;

	if ( ! pFnPlacePickedInActionBar )
		pFnPlacePickedInActionBar = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.PlacePickedInActionBar" );

	UOnlineSubsystemNowGame_execPlacePickedInActionBar_Parms PlacePickedInActionBar_Parms;
	PlacePickedInActionBar_Parms.iSlot = iSlot;

	pFnPlacePickedInActionBar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlacePickedInActionBar, &PlacePickedInActionBar_Parms, NULL );

	pFnPlacePickedInActionBar->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetActionBarContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetActionBarContentInfo ( int iSlot, class UContentInfo** Info )
{
	static UFunction* pFnGetActionBarContentInfo = NULL;

	if ( ! pFnGetActionBarContentInfo )
		pFnGetActionBarContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetActionBarContentInfo" );

	UOnlineSubsystemNowGame_execGetActionBarContentInfo_Parms GetActionBarContentInfo_Parms;
	GetActionBarContentInfo_Parms.iSlot = iSlot;

	pFnGetActionBarContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActionBarContentInfo, &GetActionBarContentInfo_Parms, NULL );

	pFnGetActionBarContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetActionBarContentInfo_Parms.Info;
};

// Function NowGame.OnlineSubsystemNowGame.UnEquipSlotItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sEquipSlot                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::UnEquipSlotItem ( struct FString sEquipSlot )
{
	static UFunction* pFnUnEquipSlotItem = NULL;

	if ( ! pFnUnEquipSlotItem )
		pFnUnEquipSlotItem = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.UnEquipSlotItem" );

	UOnlineSubsystemNowGame_execUnEquipSlotItem_Parms UnEquipSlotItem_Parms;
	memcpy ( &UnEquipSlotItem_Parms.sEquipSlot, &sEquipSlot, 0xC );

	pFnUnEquipSlotItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnEquipSlotItem, &UnEquipSlotItem_Parms, NULL );

	pFnUnEquipSlotItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PlacePickedInEquipSlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sEquipSlot                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::PlacePickedInEquipSlot ( struct FString sEquipSlot )
{
	static UFunction* pFnPlacePickedInEquipSlot = NULL;

	if ( ! pFnPlacePickedInEquipSlot )
		pFnPlacePickedInEquipSlot = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.PlacePickedInEquipSlot" );

	UOnlineSubsystemNowGame_execPlacePickedInEquipSlot_Parms PlacePickedInEquipSlot_Parms;
	memcpy ( &PlacePickedInEquipSlot_Parms.sEquipSlot, &sEquipSlot, 0xC );

	pFnPlacePickedInEquipSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlacePickedInEquipSlot, &PlacePickedInEquipSlot_Parms, NULL );

	pFnPlacePickedInEquipSlot->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetAttributeState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AttributeID                    ( CPF_Parm )

int UOnlineSubsystemNowGame::GetAttributeState ( int AttributeID )
{
	static UFunction* pFnGetAttributeState = NULL;

	if ( ! pFnGetAttributeState )
		pFnGetAttributeState = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetAttributeState" );

	UOnlineSubsystemNowGame_execGetAttributeState_Parms GetAttributeState_Parms;
	GetAttributeState_Parms.AttributeID = AttributeID;

	pFnGetAttributeState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAttributeState, &GetAttributeState_Parms, NULL );

	pFnGetAttributeState->FunctionFlags |= 0x400;

	return GetAttributeState_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ToggleAttributeState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AttributeID                    ( CPF_Parm )

int UOnlineSubsystemNowGame::ToggleAttributeState ( int AttributeID )
{
	static UFunction* pFnToggleAttributeState = NULL;

	if ( ! pFnToggleAttributeState )
		pFnToggleAttributeState = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ToggleAttributeState" );

	UOnlineSubsystemNowGame_execToggleAttributeState_Parms ToggleAttributeState_Parms;
	ToggleAttributeState_Parms.AttributeID = AttributeID;

	pFnToggleAttributeState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleAttributeState, &ToggleAttributeState_Parms, NULL );

	pFnToggleAttributeState->FunctionFlags |= 0x400;

	return ToggleAttributeState_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.TradeRemoveItemFromTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::TradeRemoveItemFromTrade ( struct FString ItemGuid )
{
	static UFunction* pFnTradeRemoveItemFromTrade = NULL;

	if ( ! pFnTradeRemoveItemFromTrade )
		pFnTradeRemoveItemFromTrade = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.TradeRemoveItemFromTrade" );

	UOnlineSubsystemNowGame_execTradeRemoveItemFromTrade_Parms TradeRemoveItemFromTrade_Parms;
	memcpy ( &TradeRemoveItemFromTrade_Parms.ItemGuid, &ItemGuid, 0xC );

	pFnTradeRemoveItemFromTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTradeRemoveItemFromTrade, &TradeRemoveItemFromTrade_Parms, NULL );

	pFnTradeRemoveItemFromTrade->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.TradeRightClickInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            bag                            ( CPF_Parm )
// int                            Slot                           ( CPF_Parm )

void UOnlineSubsystemNowGame::TradeRightClickInventory ( int bag, int Slot )
{
	static UFunction* pFnTradeRightClickInventory = NULL;

	if ( ! pFnTradeRightClickInventory )
		pFnTradeRightClickInventory = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.TradeRightClickInventory" );

	UOnlineSubsystemNowGame_execTradeRightClickInventory_Parms TradeRightClickInventory_Parms;
	TradeRightClickInventory_Parms.bag = bag;
	TradeRightClickInventory_Parms.Slot = Slot;

	pFnTradeRightClickInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTradeRightClickInventory, &TradeRightClickInventory_Parms, NULL );

	pFnTradeRightClickInventory->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.UseSkill
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            _skill                         ( CPF_Parm )
// struct FString                 Target                         ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::UseSkill ( int _skill, struct FString Target )
{
	static UFunction* pFnUseSkill = NULL;

	if ( ! pFnUseSkill )
		pFnUseSkill = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.UseSkill" );

	UOnlineSubsystemNowGame_execUseSkill_Parms UseSkill_Parms;
	UseSkill_Parms._skill = _skill;
	memcpy ( &UseSkill_Parms.Target, &Target, 0xC );

	pFnUseSkill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseSkill, &UseSkill_Parms, NULL );

	pFnUseSkill->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillPoints
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            curPoints                      ( CPF_Parm | CPF_OutParm )
// int                            Pool                           ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetSkillPoints ( int* curPoints, int* Pool )
{
	static UFunction* pFnGetSkillPoints = NULL;

	if ( ! pFnGetSkillPoints )
		pFnGetSkillPoints = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillPoints" );

	UOnlineSubsystemNowGame_execGetSkillPoints_Parms GetSkillPoints_Parms;

	pFnGetSkillPoints->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillPoints, &GetSkillPoints_Parms, NULL );

	pFnGetSkillPoints->FunctionFlags |= 0x400;

	if ( curPoints )
		*curPoints = GetSkillPoints_Parms.curPoints;

	if ( Pool )
		*Pool = GetSkillPoints_Parms.Pool;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillInfoByName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 skillName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            FullListIndex                  ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetSkillInfoByName ( struct FString skillName, int* FullListIndex )
{
	static UFunction* pFnGetSkillInfoByName = NULL;

	if ( ! pFnGetSkillInfoByName )
		pFnGetSkillInfoByName = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillInfoByName" );

	UOnlineSubsystemNowGame_execGetSkillInfoByName_Parms GetSkillInfoByName_Parms;
	memcpy ( &GetSkillInfoByName_Parms.skillName, &skillName, 0xC );

	pFnGetSkillInfoByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillInfoByName, &GetSkillInfoByName_Parms, NULL );

	pFnGetSkillInfoByName->FunctionFlags |= 0x400;

	if ( FullListIndex )
		*FullListIndex = GetSkillInfoByName_Parms.FullListIndex;
};

// Function NowGame.OnlineSubsystemNowGame.GetBaseSkillInfoByName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 skillName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            FullListIndex                  ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetBaseSkillInfoByName ( struct FString skillName, int* FullListIndex )
{
	static UFunction* pFnGetBaseSkillInfoByName = NULL;

	if ( ! pFnGetBaseSkillInfoByName )
		pFnGetBaseSkillInfoByName = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetBaseSkillInfoByName" );

	UOnlineSubsystemNowGame_execGetBaseSkillInfoByName_Parms GetBaseSkillInfoByName_Parms;
	memcpy ( &GetBaseSkillInfoByName_Parms.skillName, &skillName, 0xC );

	pFnGetBaseSkillInfoByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBaseSkillInfoByName, &GetBaseSkillInfoByName_Parms, NULL );

	pFnGetBaseSkillInfoByName->FunctionFlags |= 0x400;

	if ( FullListIndex )
		*FullListIndex = GetBaseSkillInfoByName_Parms.FullListIndex;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillRelativeInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            BaseIndex                      ( CPF_Parm )
// int                            RelativeIndex                  ( CPF_Parm )
// unsigned long                  bParent                        ( CPF_Parm )
// struct FString                 skillName                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            FullListIndex                  ( CPF_Parm | CPF_OutParm )
// int                            SkillState                     ( CPF_Parm | CPF_OutParm )
// int                            SkillLevel                     ( CPF_Parm | CPF_OutParm )
// int                            AttributeLevel                 ( CPF_Parm | CPF_OutParm )
// int                            EnabledLevel                   ( CPF_Parm | CPF_OutParm )
// int                            EffectiveSkill                 ( CPF_Parm | CPF_OutParm )
// int                            bPrimary                       ( CPF_Parm | CPF_OutParm )
// int                            lockState                      ( CPF_Parm | CPF_OutParm )
// int                            bDisabled                      ( CPF_Parm | CPF_OutParm )

bool UOnlineSubsystemNowGame::GetSkillRelativeInfo ( int BaseIndex, int RelativeIndex, unsigned long bParent, struct FString* skillName, int* FullListIndex, int* SkillState, int* SkillLevel, int* AttributeLevel, int* EnabledLevel, int* EffectiveSkill, int* bPrimary, int* lockState, int* bDisabled )
{
	static UFunction* pFnGetSkillRelativeInfo = NULL;

	if ( ! pFnGetSkillRelativeInfo )
		pFnGetSkillRelativeInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillRelativeInfo" );

	UOnlineSubsystemNowGame_execGetSkillRelativeInfo_Parms GetSkillRelativeInfo_Parms;
	GetSkillRelativeInfo_Parms.BaseIndex = BaseIndex;
	GetSkillRelativeInfo_Parms.RelativeIndex = RelativeIndex;
	GetSkillRelativeInfo_Parms.bParent = bParent;

	pFnGetSkillRelativeInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillRelativeInfo, &GetSkillRelativeInfo_Parms, NULL );

	pFnGetSkillRelativeInfo->FunctionFlags |= 0x400;

	if ( skillName )
		memcpy ( skillName, &GetSkillRelativeInfo_Parms.skillName, 0xC );

	if ( FullListIndex )
		*FullListIndex = GetSkillRelativeInfo_Parms.FullListIndex;

	if ( SkillState )
		*SkillState = GetSkillRelativeInfo_Parms.SkillState;

	if ( SkillLevel )
		*SkillLevel = GetSkillRelativeInfo_Parms.SkillLevel;

	if ( AttributeLevel )
		*AttributeLevel = GetSkillRelativeInfo_Parms.AttributeLevel;

	if ( EnabledLevel )
		*EnabledLevel = GetSkillRelativeInfo_Parms.EnabledLevel;

	if ( EffectiveSkill )
		*EffectiveSkill = GetSkillRelativeInfo_Parms.EffectiveSkill;

	if ( bPrimary )
		*bPrimary = GetSkillRelativeInfo_Parms.bPrimary;

	if ( lockState )
		*lockState = GetSkillRelativeInfo_Parms.lockState;

	if ( bDisabled )
		*bDisabled = GetSkillRelativeInfo_Parms.bDisabled;

	return GetSkillRelativeInfo_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillExtendedInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            SkillIndex                     ( CPF_Parm )
// int                            NumParents                     ( CPF_Parm | CPF_OutParm )
// int                            NumChilds                      ( CPF_Parm | CPF_OutParm )
// int                            Prereq1                        ( CPF_Parm | CPF_OutParm )
// int                            Prereq2                        ( CPF_Parm | CPF_OutParm )
// int                            CurLvlXp                       ( CPF_Parm | CPF_OutParm )
// int                            NextLvlXp                      ( CPF_Parm | CPF_OutParm )
// int                            CurXp                          ( CPF_Parm | CPF_OutParm )
// int                            MaxXp                          ( CPF_Parm | CPF_OutParm )
// int                            BcAtt1                         ( CPF_Parm | CPF_OutParm )
// int                            BcAtt2                         ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetSkillExtendedInfo ( int SkillIndex, int* NumParents, int* NumChilds, int* Prereq1, int* Prereq2, int* CurLvlXp, int* NextLvlXp, int* CurXp, int* MaxXp, int* BcAtt1, int* BcAtt2 )
{
	static UFunction* pFnGetSkillExtendedInfo = NULL;

	if ( ! pFnGetSkillExtendedInfo )
		pFnGetSkillExtendedInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillExtendedInfo" );

	UOnlineSubsystemNowGame_execGetSkillExtendedInfo_Parms GetSkillExtendedInfo_Parms;
	GetSkillExtendedInfo_Parms.SkillIndex = SkillIndex;

	pFnGetSkillExtendedInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillExtendedInfo, &GetSkillExtendedInfo_Parms, NULL );

	pFnGetSkillExtendedInfo->FunctionFlags |= 0x400;

	if ( NumParents )
		*NumParents = GetSkillExtendedInfo_Parms.NumParents;

	if ( NumChilds )
		*NumChilds = GetSkillExtendedInfo_Parms.NumChilds;

	if ( Prereq1 )
		*Prereq1 = GetSkillExtendedInfo_Parms.Prereq1;

	if ( Prereq2 )
		*Prereq2 = GetSkillExtendedInfo_Parms.Prereq2;

	if ( CurLvlXp )
		*CurLvlXp = GetSkillExtendedInfo_Parms.CurLvlXp;

	if ( NextLvlXp )
		*NextLvlXp = GetSkillExtendedInfo_Parms.NextLvlXp;

	if ( CurXp )
		*CurXp = GetSkillExtendedInfo_Parms.CurXp;

	if ( MaxXp )
		*MaxXp = GetSkillExtendedInfo_Parms.MaxXp;

	if ( BcAtt1 )
		*BcAtt1 = GetSkillExtendedInfo_Parms.BcAtt1;

	if ( BcAtt2 )
		*BcAtt2 = GetSkillExtendedInfo_Parms.BcAtt2;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SkillIndex                     ( CPF_Parm )
// class USkill_ContentInfo*      Info                           ( CPF_Parm | CPF_OutParm )
// struct FString                 skillName                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            SkillState                     ( CPF_Parm | CPF_OutParm )
// int                            SkillLevel                     ( CPF_Parm | CPF_OutParm )
// int                            AttributeLevel                 ( CPF_Parm | CPF_OutParm )
// int                            EnabledLevel                   ( CPF_Parm | CPF_OutParm )
// int                            bPrimary                       ( CPF_Parm | CPF_OutParm )
// int                            lockState                      ( CPF_Parm | CPF_OutParm )
// int                            EffectiveSkill                 ( CPF_Parm | CPF_OutParm )
// int                            bDisabled                      ( CPF_Parm | CPF_OutParm )

bool UOnlineSubsystemNowGame::GetSkillInfo ( int SkillIndex, class USkill_ContentInfo** Info, struct FString* skillName, int* SkillState, int* SkillLevel, int* AttributeLevel, int* EnabledLevel, int* bPrimary, int* lockState, int* EffectiveSkill, int* bDisabled )
{
	static UFunction* pFnGetSkillInfo = NULL;

	if ( ! pFnGetSkillInfo )
		pFnGetSkillInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillInfo" );

	UOnlineSubsystemNowGame_execGetSkillInfo_Parms GetSkillInfo_Parms;
	GetSkillInfo_Parms.SkillIndex = SkillIndex;

	pFnGetSkillInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillInfo, &GetSkillInfo_Parms, NULL );

	pFnGetSkillInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetSkillInfo_Parms.Info;

	if ( skillName )
		memcpy ( skillName, &GetSkillInfo_Parms.skillName, 0xC );

	if ( SkillState )
		*SkillState = GetSkillInfo_Parms.SkillState;

	if ( SkillLevel )
		*SkillLevel = GetSkillInfo_Parms.SkillLevel;

	if ( AttributeLevel )
		*AttributeLevel = GetSkillInfo_Parms.AttributeLevel;

	if ( EnabledLevel )
		*EnabledLevel = GetSkillInfo_Parms.EnabledLevel;

	if ( bPrimary )
		*bPrimary = GetSkillInfo_Parms.bPrimary;

	if ( lockState )
		*lockState = GetSkillInfo_Parms.lockState;

	if ( EffectiveSkill )
		*EffectiveSkill = GetSkillInfo_Parms.EffectiveSkill;

	if ( bDisabled )
		*bDisabled = GetSkillInfo_Parms.bDisabled;

	return GetSkillInfo_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.SkillIsDisabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 skillName                      ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::SkillIsDisabled ( struct FString skillName )
{
	static UFunction* pFnSkillIsDisabled = NULL;

	if ( ! pFnSkillIsDisabled )
		pFnSkillIsDisabled = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SkillIsDisabled" );

	UOnlineSubsystemNowGame_execSkillIsDisabled_Parms SkillIsDisabled_Parms;
	memcpy ( &SkillIsDisabled_Parms.skillName, &skillName, 0xC );

	pFnSkillIsDisabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSkillIsDisabled, &SkillIsDisabled_Parms, NULL );

	pFnSkillIsDisabled->FunctionFlags |= 0x400;

	return SkillIsDisabled_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillContentInfoByCGUID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 strguid                        ( CPF_Parm | CPF_NeedCtorLink )

class UContentInfo* UOnlineSubsystemNowGame::GetSkillContentInfoByCGUID ( struct FString strguid )
{
	static UFunction* pFnGetSkillContentInfoByCGUID = NULL;

	if ( ! pFnGetSkillContentInfoByCGUID )
		pFnGetSkillContentInfoByCGUID = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillContentInfoByCGUID" );

	UOnlineSubsystemNowGame_execGetSkillContentInfoByCGUID_Parms GetSkillContentInfoByCGUID_Parms;
	memcpy ( &GetSkillContentInfoByCGUID_Parms.strguid, &strguid, 0xC );

	pFnGetSkillContentInfoByCGUID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillContentInfoByCGUID, &GetSkillContentInfoByCGUID_Parms, NULL );

	pFnGetSkillContentInfoByCGUID->FunctionFlags |= 0x400;

	return GetSkillContentInfoByCGUID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.LocalPickSkill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SkillID                        ( CPF_Parm )

void UOnlineSubsystemNowGame::LocalPickSkill ( int SkillID )
{
	static UFunction* pFnLocalPickSkill = NULL;

	if ( ! pFnLocalPickSkill )
		pFnLocalPickSkill = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.LocalPickSkill" );

	UOnlineSubsystemNowGame_execLocalPickSkill_Parms LocalPickSkill_Parms;
	LocalPickSkill_Parms.SkillID = SkillID;

	pFnLocalPickSkill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLocalPickSkill, &LocalPickSkill_Parms, NULL );

	pFnLocalPickSkill->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SkillID                        ( CPF_Parm )

int UOnlineSubsystemNowGame::GetSkillState ( int SkillID )
{
	static UFunction* pFnGetSkillState = NULL;

	if ( ! pFnGetSkillState )
		pFnGetSkillState = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillState" );

	UOnlineSubsystemNowGame_execGetSkillState_Parms GetSkillState_Parms;
	GetSkillState_Parms.SkillID = SkillID;

	pFnGetSkillState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillState, &GetSkillState_Parms, NULL );

	pFnGetSkillState->FunctionFlags |= 0x400;

	return GetSkillState_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.LevelDownSkill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 SkillGUID                      ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::LevelDownSkill ( struct FString SkillGUID )
{
	static UFunction* pFnLevelDownSkill = NULL;

	if ( ! pFnLevelDownSkill )
		pFnLevelDownSkill = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.LevelDownSkill" );

	UOnlineSubsystemNowGame_execLevelDownSkill_Parms LevelDownSkill_Parms;
	memcpy ( &LevelDownSkill_Parms.SkillGUID, &SkillGUID, 0xC );

	pFnLevelDownSkill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLevelDownSkill, &LevelDownSkill_Parms, NULL );

	pFnLevelDownSkill->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ChangeSkillStateGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 SkillGUID                      ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ChangeSkillStateGuid ( struct FString SkillGUID )
{
	static UFunction* pFnChangeSkillStateGuid = NULL;

	if ( ! pFnChangeSkillStateGuid )
		pFnChangeSkillStateGuid = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ChangeSkillStateGuid" );

	UOnlineSubsystemNowGame_execChangeSkillStateGuid_Parms ChangeSkillStateGuid_Parms;
	memcpy ( &ChangeSkillStateGuid_Parms.SkillGUID, &SkillGUID, 0xC );

	pFnChangeSkillStateGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeSkillStateGuid, &ChangeSkillStateGuid_Parms, NULL );

	pFnChangeSkillStateGuid->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ChangeSkillState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SkillID                        ( CPF_Parm )

void UOnlineSubsystemNowGame::ChangeSkillState ( int SkillID )
{
	static UFunction* pFnChangeSkillState = NULL;

	if ( ! pFnChangeSkillState )
		pFnChangeSkillState = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ChangeSkillState" );

	UOnlineSubsystemNowGame_execChangeSkillState_Parms ChangeSkillState_Parms;
	ChangeSkillState_Parms.SkillID = SkillID;

	pFnChangeSkillState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeSkillState, &ChangeSkillState_Parms, NULL );

	pFnChangeSkillState->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.CancelTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::CancelTrade ( )
{
	static UFunction* pFnCancelTrade = NULL;

	if ( ! pFnCancelTrade )
		pFnCancelTrade = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.CancelTrade" );

	UOnlineSubsystemNowGame_execCancelTrade_Parms CancelTrade_Parms;

	pFnCancelTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelTrade, &CancelTrade_Parms, NULL );

	pFnCancelTrade->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.IsPickedInTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UOnlineSubsystemNowGame::IsPickedInTrade ( )
{
	static UFunction* pFnIsPickedInTrade = NULL;

	if ( ! pFnIsPickedInTrade )
		pFnIsPickedInTrade = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.IsPickedInTrade" );

	UOnlineSubsystemNowGame_execIsPickedInTrade_Parms IsPickedInTrade_Parms;

	pFnIsPickedInTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPickedInTrade, &IsPickedInTrade_Parms, NULL );

	pFnIsPickedInTrade->FunctionFlags |= 0x400;

	return IsPickedInTrade_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.IsItemInTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Slot                           ( CPF_Parm )

bool UOnlineSubsystemNowGame::IsItemInTrade ( int Slot )
{
	static UFunction* pFnIsItemInTrade = NULL;

	if ( ! pFnIsItemInTrade )
		pFnIsItemInTrade = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.IsItemInTrade" );

	UOnlineSubsystemNowGame_execIsItemInTrade_Parms IsItemInTrade_Parms;
	IsItemInTrade_Parms.Slot = Slot;

	pFnIsItemInTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsItemInTrade, &IsItemInTrade_Parms, NULL );

	pFnIsItemInTrade->FunctionFlags |= 0x400;

	return IsItemInTrade_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetTradeItemStr
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Slot                           ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetTradeItemStr ( int Slot )
{
	static UFunction* pFnGetTradeItemStr = NULL;

	if ( ! pFnGetTradeItemStr )
		pFnGetTradeItemStr = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetTradeItemStr" );

	UOnlineSubsystemNowGame_execGetTradeItemStr_Parms GetTradeItemStr_Parms;
	GetTradeItemStr_Parms.Slot = Slot;

	pFnGetTradeItemStr->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTradeItemStr, &GetTradeItemStr_Parms, NULL );

	pFnGetTradeItemStr->FunctionFlags |= 0x400;

	return GetTradeItemStr_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetTradeAvatarJSon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetTradeAvatarJSon ( )
{
	static UFunction* pFnGetTradeAvatarJSon = NULL;

	if ( ! pFnGetTradeAvatarJSon )
		pFnGetTradeAvatarJSon = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetTradeAvatarJSon" );

	UOnlineSubsystemNowGame_execGetTradeAvatarJSon_Parms GetTradeAvatarJSon_Parms;

	pFnGetTradeAvatarJSon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTradeAvatarJSon, &GetTradeAvatarJSon_Parms, NULL );

	pFnGetTradeAvatarJSon->FunctionFlags |= 0x400;

	return GetTradeAvatarJSon_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetTradeName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned long                  bYou                           ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetTradeName ( unsigned long bYou )
{
	static UFunction* pFnGetTradeName = NULL;

	if ( ! pFnGetTradeName )
		pFnGetTradeName = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetTradeName" );

	UOnlineSubsystemNowGame_execGetTradeName_Parms GetTradeName_Parms;
	GetTradeName_Parms.bYou = bYou;

	pFnGetTradeName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTradeName, &GetTradeName_Parms, NULL );

	pFnGetTradeName->FunctionFlags |= 0x400;

	return GetTradeName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetTradeAcceptState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bYou                           ( CPF_Parm )

bool UOnlineSubsystemNowGame::GetTradeAcceptState ( unsigned long bYou )
{
	static UFunction* pFnGetTradeAcceptState = NULL;

	if ( ! pFnGetTradeAcceptState )
		pFnGetTradeAcceptState = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetTradeAcceptState" );

	UOnlineSubsystemNowGame_execGetTradeAcceptState_Parms GetTradeAcceptState_Parms;
	GetTradeAcceptState_Parms.bYou = bYou;

	pFnGetTradeAcceptState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTradeAcceptState, &GetTradeAcceptState_Parms, NULL );

	pFnGetTradeAcceptState->FunctionFlags |= 0x400;

	return GetTradeAcceptState_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetTradeContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bYou                           ( CPF_Parm )
// int                            Slot                           ( CPF_Parm )
// class UContentInfo*            Int                            ( CPF_Parm | CPF_OutParm )
// int                            Quantity                       ( CPF_Parm | CPF_OutParm )
// struct FString                 ItemName                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetTradeContentInfo ( unsigned long bYou, int Slot, class UContentInfo** Int, int* Quantity, struct FString* ItemName )
{
	static UFunction* pFnGetTradeContentInfo = NULL;

	if ( ! pFnGetTradeContentInfo )
		pFnGetTradeContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetTradeContentInfo" );

	UOnlineSubsystemNowGame_execGetTradeContentInfo_Parms GetTradeContentInfo_Parms;
	GetTradeContentInfo_Parms.bYou = bYou;
	GetTradeContentInfo_Parms.Slot = Slot;

	pFnGetTradeContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTradeContentInfo, &GetTradeContentInfo_Parms, NULL );

	pFnGetTradeContentInfo->FunctionFlags |= 0x400;

	if ( Int )
		*Int = GetTradeContentInfo_Parms.Int;

	if ( Quantity )
		*Quantity = GetTradeContentInfo_Parms.Quantity;

	if ( ItemName )
		memcpy ( ItemName, &GetTradeContentInfo_Parms.ItemName, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.ItemOfName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ItemName                       ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::ItemOfName ( int iBag, int iSlot, struct FString ItemName )
{
	static UFunction* pFnItemOfName = NULL;

	if ( ! pFnItemOfName )
		pFnItemOfName = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ItemOfName" );

	UOnlineSubsystemNowGame_execItemOfName_Parms ItemOfName_Parms;
	ItemOfName_Parms.iBag = iBag;
	ItemOfName_Parms.iSlot = iSlot;
	memcpy ( &ItemOfName_Parms.ItemName, &ItemName, 0xC );

	pFnItemOfName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnItemOfName, &ItemOfName_Parms, NULL );

	pFnItemOfName->FunctionFlags |= 0x400;

	return ItemOfName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetInventoryItemGuid
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

struct FString UOnlineSubsystemNowGame::GetInventoryItemGuid ( int iBag, int iSlot )
{
	static UFunction* pFnGetInventoryItemGuid = NULL;

	if ( ! pFnGetInventoryItemGuid )
		pFnGetInventoryItemGuid = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetInventoryItemGuid" );

	UOnlineSubsystemNowGame_execGetInventoryItemGuid_Parms GetInventoryItemGuid_Parms;
	GetInventoryItemGuid_Parms.iBag = iBag;
	GetInventoryItemGuid_Parms.iSlot = iSlot;

	pFnGetInventoryItemGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInventoryItemGuid, &GetInventoryItemGuid_Parms, NULL );

	pFnGetInventoryItemGuid->FunctionFlags |= 0x400;

	return GetInventoryItemGuid_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ItemByGuidIsClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::ItemByGuidIsClass ( struct FString sGuid, struct FString ClassName )
{
	static UFunction* pFnItemByGuidIsClass = NULL;

	if ( ! pFnItemByGuidIsClass )
		pFnItemByGuidIsClass = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ItemByGuidIsClass" );

	UOnlineSubsystemNowGame_execItemByGuidIsClass_Parms ItemByGuidIsClass_Parms;
	memcpy ( &ItemByGuidIsClass_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &ItemByGuidIsClass_Parms.ClassName, &ClassName, 0xC );

	pFnItemByGuidIsClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnItemByGuidIsClass, &ItemByGuidIsClass_Parms, NULL );

	pFnItemByGuidIsClass->FunctionFlags |= 0x400;

	return ItemByGuidIsClass_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetLootContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// struct FString                 LootName                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            itemQuantity                   ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetLootContentInfo ( int iSlot, class UContentInfo** Info, struct FString* LootName, int* itemQuantity )
{
	static UFunction* pFnGetLootContentInfo = NULL;

	if ( ! pFnGetLootContentInfo )
		pFnGetLootContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetLootContentInfo" );

	UOnlineSubsystemNowGame_execGetLootContentInfo_Parms GetLootContentInfo_Parms;
	GetLootContentInfo_Parms.iSlot = iSlot;

	pFnGetLootContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLootContentInfo, &GetLootContentInfo_Parms, NULL );

	pFnGetLootContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetLootContentInfo_Parms.Info;

	if ( LootName )
		memcpy ( LootName, &GetLootContentInfo_Parms.LootName, 0xC );

	if ( itemQuantity )
		*itemQuantity = GetLootContentInfo_Parms.itemQuantity;
};

// Function NowGame.OnlineSubsystemNowGame.GetEquipSlotContentInfo
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sEquipSlot                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FPointer                pPlayer                        ( CPF_OptionalParm | CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// unsigned char                  bLocked                        ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetEquipSlotContentInfo ( struct FString sEquipSlot, struct FPointer pPlayer, class UContentInfo** Info, unsigned char* bLocked )
{
	static UFunction* pFnGetEquipSlotContentInfo = NULL;

	if ( ! pFnGetEquipSlotContentInfo )
		pFnGetEquipSlotContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetEquipSlotContentInfo" );

	UOnlineSubsystemNowGame_execGetEquipSlotContentInfo_Parms GetEquipSlotContentInfo_Parms;
	memcpy ( &GetEquipSlotContentInfo_Parms.sEquipSlot, &sEquipSlot, 0xC );
	memcpy ( &GetEquipSlotContentInfo_Parms.pPlayer, &pPlayer, 0x4 );

	pFnGetEquipSlotContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEquipSlotContentInfo, &GetEquipSlotContentInfo_Parms, NULL );

	pFnGetEquipSlotContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetEquipSlotContentInfo_Parms.Info;

	if ( bLocked )
		*bLocked = GetEquipSlotContentInfo_Parms.bLocked;
};

// Function NowGame.OnlineSubsystemNowGame.GetVendorContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Int                            ( CPF_Parm | CPF_OutParm )
// int                            ItemCost                       ( CPF_Parm | CPF_OutParm )
// int                            itemQuantity                   ( CPF_Parm | CPF_OutParm )
// struct FString                 ItemName                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            MaxQuantity                    ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetVendorContentInfo ( int iSlot, class UContentInfo** Int, int* ItemCost, int* itemQuantity, struct FString* ItemName, int* MaxQuantity )
{
	static UFunction* pFnGetVendorContentInfo = NULL;

	if ( ! pFnGetVendorContentInfo )
		pFnGetVendorContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetVendorContentInfo" );

	UOnlineSubsystemNowGame_execGetVendorContentInfo_Parms GetVendorContentInfo_Parms;
	GetVendorContentInfo_Parms.iSlot = iSlot;

	pFnGetVendorContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVendorContentInfo, &GetVendorContentInfo_Parms, NULL );

	pFnGetVendorContentInfo->FunctionFlags |= 0x400;

	if ( Int )
		*Int = GetVendorContentInfo_Parms.Int;

	if ( ItemCost )
		*ItemCost = GetVendorContentInfo_Parms.ItemCost;

	if ( itemQuantity )
		*itemQuantity = GetVendorContentInfo_Parms.itemQuantity;

	if ( ItemName )
		memcpy ( ItemName, &GetVendorContentInfo_Parms.ItemName, 0xC );

	if ( MaxQuantity )
		*MaxQuantity = GetVendorContentInfo_Parms.MaxQuantity;
};

// Function NowGame.OnlineSubsystemNowGame.CanIReadThisBook
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ContentName                    ( CPF_Parm | CPF_NeedCtorLink )

int UOnlineSubsystemNowGame::CanIReadThisBook ( struct FString ContentName )
{
	static UFunction* pFnCanIReadThisBook = NULL;

	if ( ! pFnCanIReadThisBook )
		pFnCanIReadThisBook = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.CanIReadThisBook" );

	UOnlineSubsystemNowGame_execCanIReadThisBook_Parms CanIReadThisBook_Parms;
	memcpy ( &CanIReadThisBook_Parms.ContentName, &ContentName, 0xC );

	pFnCanIReadThisBook->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanIReadThisBook, &CanIReadThisBook_Parms, NULL );

	pFnCanIReadThisBook->FunctionFlags |= 0x400;

	return CanIReadThisBook_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetBookInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ContentName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 BookName                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            Cost                           ( CPF_Parm | CPF_OutParm )
// struct FString                 skillName                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 Author                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetBookInfo ( struct FString ContentName, struct FString* BookName, int* Cost, struct FString* skillName, struct FString* Author )
{
	static UFunction* pFnGetBookInfo = NULL;

	if ( ! pFnGetBookInfo )
		pFnGetBookInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetBookInfo" );

	UOnlineSubsystemNowGame_execGetBookInfo_Parms GetBookInfo_Parms;
	memcpy ( &GetBookInfo_Parms.ContentName, &ContentName, 0xC );

	pFnGetBookInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBookInfo, &GetBookInfo_Parms, NULL );

	pFnGetBookInfo->FunctionFlags |= 0x400;

	if ( BookName )
		memcpy ( BookName, &GetBookInfo_Parms.BookName, 0xC );

	if ( Cost )
		*Cost = GetBookInfo_Parms.Cost;

	if ( skillName )
		memcpy ( skillName, &GetBookInfo_Parms.skillName, 0xC );

	if ( Author )
		memcpy ( Author, &GetBookInfo_Parms.Author, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.TakeLootItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::TakeLootItem ( int iSlot )
{
	static UFunction* pFnTakeLootItem = NULL;

	if ( ! pFnTakeLootItem )
		pFnTakeLootItem = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.TakeLootItem" );

	UOnlineSubsystemNowGame_execTakeLootItem_Parms TakeLootItem_Parms;
	TakeLootItem_Parms.iSlot = iSlot;

	pFnTakeLootItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTakeLootItem, &TakeLootItem_Parms, NULL );

	pFnTakeLootItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemNameFromContent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 strContentGuid                 ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetItemNameFromContent ( struct FString strContentGuid )
{
	static UFunction* pFnGetItemNameFromContent = NULL;

	if ( ! pFnGetItemNameFromContent )
		pFnGetItemNameFromContent = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetItemNameFromContent" );

	UOnlineSubsystemNowGame_execGetItemNameFromContent_Parms GetItemNameFromContent_Parms;
	memcpy ( &GetItemNameFromContent_Parms.strContentGuid, &strContentGuid, 0xC );

	pFnGetItemNameFromContent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemNameFromContent, &GetItemNameFromContent_Parms, NULL );

	pFnGetItemNameFromContent->FunctionFlags |= 0x400;

	return GetItemNameFromContent_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 strguid                        ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetItemName ( struct FString strguid )
{
	static UFunction* pFnGetItemName = NULL;

	if ( ! pFnGetItemName )
		pFnGetItemName = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetItemName" );

	UOnlineSubsystemNowGame_execGetItemName_Parms GetItemName_Parms;
	memcpy ( &GetItemName_Parms.strguid, &strguid, 0xC );

	pFnGetItemName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemName, &GetItemName_Parms, NULL );

	pFnGetItemName->FunctionFlags |= 0x400;

	return GetItemName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemContentInfo
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// int                            ItemId                         ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// struct FString                 strguid                        ( CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetItemContentInfo ( int ItemId, class UContentInfo** Info, struct FString* strguid )
{
	static UFunction* pFnGetItemContentInfo = NULL;

	if ( ! pFnGetItemContentInfo )
		pFnGetItemContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetItemContentInfo" );

	UOnlineSubsystemNowGame_execGetItemContentInfo_Parms GetItemContentInfo_Parms;
	GetItemContentInfo_Parms.ItemId = ItemId;

	pFnGetItemContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemContentInfo, &GetItemContentInfo_Parms, NULL );

	pFnGetItemContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetItemContentInfo_Parms.Info;

	if ( strguid )
		memcpy ( strguid, &GetItemContentInfo_Parms.strguid, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.LocalPickItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ItemId                         ( CPF_Parm )

void UOnlineSubsystemNowGame::LocalPickItem ( int ItemId )
{
	static UFunction* pFnLocalPickItem = NULL;

	if ( ! pFnLocalPickItem )
		pFnLocalPickItem = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.LocalPickItem" );

	UOnlineSubsystemNowGame_execLocalPickItem_Parms LocalPickItem_Parms;
	LocalPickItem_Parms.ItemId = ItemId;

	pFnLocalPickItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLocalPickItem, &LocalPickItem_Parms, NULL );

	pFnLocalPickItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetItemContentInfoByCGUID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UContentInfo*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 strguid                        ( CPF_Parm | CPF_NeedCtorLink )

class UContentInfo* UOnlineSubsystemNowGame::GetItemContentInfoByCGUID ( struct FString strguid )
{
	static UFunction* pFnGetItemContentInfoByCGUID = NULL;

	if ( ! pFnGetItemContentInfoByCGUID )
		pFnGetItemContentInfoByCGUID = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetItemContentInfoByCGUID" );

	UOnlineSubsystemNowGame_execGetItemContentInfoByCGUID_Parms GetItemContentInfoByCGUID_Parms;
	memcpy ( &GetItemContentInfoByCGUID_Parms.strguid, &strguid, 0xC );

	pFnGetItemContentInfoByCGUID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemContentInfoByCGUID, &GetItemContentInfoByCGUID_Parms, NULL );

	pFnGetItemContentInfoByCGUID->FunctionFlags |= 0x400;

	return GetItemContentInfoByCGUID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.checkForItemsInInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iBag                           ( CPF_Parm )
// TArray< struct FString >       ItemNames                      ( CPF_Parm | CPF_NeedCtorLink )
// TArray< int >                  itemQty                        ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::checkForItemsInInventory ( int iBag, TArray< struct FString > ItemNames, TArray< int > itemQty )
{
	static UFunction* pFncheckForItemsInInventory = NULL;

	if ( ! pFncheckForItemsInInventory )
		pFncheckForItemsInInventory = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.checkForItemsInInventory" );

	UOnlineSubsystemNowGame_execcheckForItemsInInventory_Parms checkForItemsInInventory_Parms;
	checkForItemsInInventory_Parms.iBag = iBag;
	memcpy ( &checkForItemsInInventory_Parms.ItemNames, &ItemNames, 0xC );
	memcpy ( &checkForItemsInInventory_Parms.itemQty, &itemQty, 0xC );

	pFncheckForItemsInInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFncheckForItemsInInventory, &checkForItemsInInventory_Parms, NULL );

	pFncheckForItemsInInventory->FunctionFlags |= 0x400;

	return checkForItemsInInventory_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ItemIsClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::ItemIsClass ( int iBag, int iSlot, struct FString ClassName )
{
	static UFunction* pFnItemIsClass = NULL;

	if ( ! pFnItemIsClass )
		pFnItemIsClass = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ItemIsClass" );

	UOnlineSubsystemNowGame_execItemIsClass_Parms ItemIsClass_Parms;
	ItemIsClass_Parms.iBag = iBag;
	ItemIsClass_Parms.iSlot = iSlot;
	memcpy ( &ItemIsClass_Parms.ClassName, &ClassName, 0xC );

	pFnItemIsClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnItemIsClass, &ItemIsClass_Parms, NULL );

	pFnItemIsClass->FunctionFlags |= 0x400;

	return ItemIsClass_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.QueryItem_ContentName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ParamName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DefaultValue                   ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::QueryItem_ContentName ( int iBag, int iSlot, struct FString ParamName, struct FString DefaultValue )
{
	static UFunction* pFnQueryItem_ContentName = NULL;

	if ( ! pFnQueryItem_ContentName )
		pFnQueryItem_ContentName = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.QueryItem_ContentName" );

	UOnlineSubsystemNowGame_execQueryItem_ContentName_Parms QueryItem_ContentName_Parms;
	QueryItem_ContentName_Parms.iBag = iBag;
	QueryItem_ContentName_Parms.iSlot = iSlot;
	memcpy ( &QueryItem_ContentName_Parms.ParamName, &ParamName, 0xC );
	memcpy ( &QueryItem_ContentName_Parms.DefaultValue, &DefaultValue, 0xC );

	pFnQueryItem_ContentName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQueryItem_ContentName, &QueryItem_ContentName_Parms, NULL );

	pFnQueryItem_ContentName->FunctionFlags |= 0x400;

	return QueryItem_ContentName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.QueryItem_String
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ParamName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DefaultValue                   ( CPF_Parm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::QueryItem_String ( int iBag, int iSlot, struct FString ParamName, struct FString DefaultValue )
{
	static UFunction* pFnQueryItem_String = NULL;

	if ( ! pFnQueryItem_String )
		pFnQueryItem_String = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.QueryItem_String" );

	UOnlineSubsystemNowGame_execQueryItem_String_Parms QueryItem_String_Parms;
	QueryItem_String_Parms.iBag = iBag;
	QueryItem_String_Parms.iSlot = iSlot;
	memcpy ( &QueryItem_String_Parms.ParamName, &ParamName, 0xC );
	memcpy ( &QueryItem_String_Parms.DefaultValue, &DefaultValue, 0xC );

	pFnQueryItem_String->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQueryItem_String, &QueryItem_String_Parms, NULL );

	pFnQueryItem_String->FunctionFlags |= 0x400;

	return QueryItem_String_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.QueryItem_Int
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ParamName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            DefaultValue                   ( CPF_Parm )

int UOnlineSubsystemNowGame::QueryItem_Int ( int iBag, int iSlot, struct FString ParamName, int DefaultValue )
{
	static UFunction* pFnQueryItem_Int = NULL;

	if ( ! pFnQueryItem_Int )
		pFnQueryItem_Int = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.QueryItem_Int" );

	UOnlineSubsystemNowGame_execQueryItem_Int_Parms QueryItem_Int_Parms;
	QueryItem_Int_Parms.iBag = iBag;
	QueryItem_Int_Parms.iSlot = iSlot;
	memcpy ( &QueryItem_Int_Parms.ParamName, &ParamName, 0xC );
	QueryItem_Int_Parms.DefaultValue = DefaultValue;

	pFnQueryItem_Int->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQueryItem_Int, &QueryItem_Int_Parms, NULL );

	pFnQueryItem_Int->FunctionFlags |= 0x400;

	return QueryItem_Int_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetPickedSlotID
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iBag                           ( CPF_Parm | CPF_OutParm )
// int                            iSlot                          ( CPF_Parm | CPF_OutParm )

bool UOnlineSubsystemNowGame::GetPickedSlotID ( int* iBag, int* iSlot )
{
	static UFunction* pFnGetPickedSlotID = NULL;

	if ( ! pFnGetPickedSlotID )
		pFnGetPickedSlotID = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetPickedSlotID" );

	UOnlineSubsystemNowGame_execGetPickedSlotID_Parms GetPickedSlotID_Parms;

	pFnGetPickedSlotID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPickedSlotID, &GetPickedSlotID_Parms, NULL );

	pFnGetPickedSlotID->FunctionFlags |= 0x400;

	if ( iBag )
		*iBag = GetPickedSlotID_Parms.iBag;

	if ( iSlot )
		*iSlot = GetPickedSlotID_Parms.iSlot;

	return GetPickedSlotID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.SplitItemStack
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )

void UOnlineSubsystemNowGame::SplitItemStack ( int iBag, int iSlot, int iQuantity )
{
	static UFunction* pFnSplitItemStack = NULL;

	if ( ! pFnSplitItemStack )
		pFnSplitItemStack = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SplitItemStack" );

	UOnlineSubsystemNowGame_execSplitItemStack_Parms SplitItemStack_Parms;
	SplitItemStack_Parms.iBag = iBag;
	SplitItemStack_Parms.iSlot = iSlot;
	SplitItemStack_Parms.iQuantity = iQuantity;

	pFnSplitItemStack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSplitItemStack, &SplitItemStack_Parms, NULL );

	pFnSplitItemStack->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.IsItemSplittable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::IsItemSplittable ( int iBag, int iSlot )
{
	static UFunction* pFnIsItemSplittable = NULL;

	if ( ! pFnIsItemSplittable )
		pFnIsItemSplittable = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.IsItemSplittable" );

	UOnlineSubsystemNowGame_execIsItemSplittable_Parms IsItemSplittable_Parms;
	IsItemSplittable_Parms.iBag = iBag;
	IsItemSplittable_Parms.iSlot = iSlot;

	pFnIsItemSplittable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsItemSplittable, &IsItemSplittable_Parms, NULL );

	pFnIsItemSplittable->FunctionFlags |= 0x400;

	return IsItemSplittable_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ItemMatchesPicked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::ItemMatchesPicked ( int iBag, int iSlot )
{
	static UFunction* pFnItemMatchesPicked = NULL;

	if ( ! pFnItemMatchesPicked )
		pFnItemMatchesPicked = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ItemMatchesPicked" );

	UOnlineSubsystemNowGame_execItemMatchesPicked_Parms ItemMatchesPicked_Parms;
	ItemMatchesPicked_Parms.iBag = iBag;
	ItemMatchesPicked_Parms.iSlot = iSlot;

	pFnItemMatchesPicked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnItemMatchesPicked, &ItemMatchesPicked_Parms, NULL );

	pFnItemMatchesPicked->FunctionFlags |= 0x400;

	return ItemMatchesPicked_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetPetInventoryWeight
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )

float UOnlineSubsystemNowGame::GetPetInventoryWeight ( struct FString sPetGuid )
{
	static UFunction* pFnGetPetInventoryWeight = NULL;

	if ( ! pFnGetPetInventoryWeight )
		pFnGetPetInventoryWeight = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetPetInventoryWeight" );

	UOnlineSubsystemNowGame_execGetPetInventoryWeight_Parms GetPetInventoryWeight_Parms;
	memcpy ( &GetPetInventoryWeight_Parms.sPetGuid, &sPetGuid, 0xC );

	pFnGetPetInventoryWeight->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetInventoryWeight, &GetPetInventoryWeight_Parms, NULL );

	pFnGetPetInventoryWeight->FunctionFlags |= 0x400;

	return GetPetInventoryWeight_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetPetEquipmentMod
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sSlot                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )

float UOnlineSubsystemNowGame::GetPetEquipmentMod ( struct FString sSlot, struct FString sPetGuid )
{
	static UFunction* pFnGetPetEquipmentMod = NULL;

	if ( ! pFnGetPetEquipmentMod )
		pFnGetPetEquipmentMod = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetPetEquipmentMod" );

	UOnlineSubsystemNowGame_execGetPetEquipmentMod_Parms GetPetEquipmentMod_Parms;
	memcpy ( &GetPetEquipmentMod_Parms.sSlot, &sSlot, 0xC );
	memcpy ( &GetPetEquipmentMod_Parms.sPetGuid, &sPetGuid, 0xC );

	pFnGetPetEquipmentMod->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPetEquipmentMod, &GetPetEquipmentMod_Parms, NULL );

	pFnGetPetEquipmentMod->FunctionFlags |= 0x400;

	return GetPetEquipmentMod_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetUsingBank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UOnlineSubsystemNowGame::GetUsingBank ( )
{
	static UFunction* pFnGetUsingBank = NULL;

	if ( ! pFnGetUsingBank )
		pFnGetUsingBank = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetUsingBank" );

	UOnlineSubsystemNowGame_execGetUsingBank_Parms GetUsingBank_Parms;

	pFnGetUsingBank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUsingBank, &GetUsingBank_Parms, NULL );

	pFnGetUsingBank->FunctionFlags |= 0x400;

	return GetUsingBank_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.SetUsingBank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  banked                         ( CPF_Parm )

void UOnlineSubsystemNowGame::SetUsingBank ( unsigned long banked )
{
	static UFunction* pFnSetUsingBank = NULL;

	if ( ! pFnSetUsingBank )
		pFnSetUsingBank = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SetUsingBank" );

	UOnlineSubsystemNowGame_execSetUsingBank_Parms SetUsingBank_Parms;
	SetUsingBank_Parms.banked = banked;

	pFnSetUsingBank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetUsingBank, &SetUsingBank_Parms, NULL );

	pFnSetUsingBank->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PickupBankItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::PickupBankItem ( int iSlot )
{
	static UFunction* pFnPickupBankItem = NULL;

	if ( ! pFnPickupBankItem )
		pFnPickupBankItem = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.PickupBankItem" );

	UOnlineSubsystemNowGame_execPickupBankItem_Parms PickupBankItem_Parms;
	PickupBankItem_Parms.iSlot = iSlot;

	pFnPickupBankItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPickupBankItem, &PickupBankItem_Parms, NULL );

	pFnPickupBankItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PlacePickedInBank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::PlacePickedInBank ( int iSlot )
{
	static UFunction* pFnPlacePickedInBank = NULL;

	if ( ! pFnPlacePickedInBank )
		pFnPlacePickedInBank = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.PlacePickedInBank" );

	UOnlineSubsystemNowGame_execPlacePickedInBank_Parms PlacePickedInBank_Parms;
	PlacePickedInBank_Parms.iSlot = iSlot;

	pFnPlacePickedInBank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlacePickedInBank, &PlacePickedInBank_Parms, NULL );

	pFnPlacePickedInBank->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetBankContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// int                            itemQuantity                   ( CPF_Parm | CPF_OutParm )

void UOnlineSubsystemNowGame::GetBankContentInfo ( int iSlot, class UContentInfo** Info, int* itemQuantity )
{
	static UFunction* pFnGetBankContentInfo = NULL;

	if ( ! pFnGetBankContentInfo )
		pFnGetBankContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetBankContentInfo" );

	UOnlineSubsystemNowGame_execGetBankContentInfo_Parms GetBankContentInfo_Parms;
	GetBankContentInfo_Parms.iSlot = iSlot;

	pFnGetBankContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBankContentInfo, &GetBankContentInfo_Parms, NULL );

	pFnGetBankContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetBankContentInfo_Parms.Info;

	if ( itemQuantity )
		*itemQuantity = GetBankContentInfo_Parms.itemQuantity;
};

// Function NowGame.OnlineSubsystemNowGame.SplitInBag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBagGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNewSlot                       ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )

bool UOnlineSubsystemNowGame::SplitInBag ( struct FString sGuid, struct FString sBagGuid, int iNewSlot, int iQuantity )
{
	static UFunction* pFnSplitInBag = NULL;

	if ( ! pFnSplitInBag )
		pFnSplitInBag = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SplitInBag" );

	UOnlineSubsystemNowGame_execSplitInBag_Parms SplitInBag_Parms;
	memcpy ( &SplitInBag_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &SplitInBag_Parms.sBagGuid, &sBagGuid, 0xC );
	SplitInBag_Parms.iNewSlot = iNewSlot;
	SplitInBag_Parms.iQuantity = iQuantity;

	pFnSplitInBag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSplitInBag, &SplitInBag_Parms, NULL );

	pFnSplitInBag->FunctionFlags |= 0x400;

	return SplitInBag_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.SplitInInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iNewDeposit                    ( CPF_Parm )
// int                            iNewSlot                       ( CPF_Parm )
// int                            iQuantity                      ( CPF_Parm )

bool UOnlineSubsystemNowGame::SplitInInventory ( struct FString sGuid, int iNewDeposit, int iNewSlot, int iQuantity )
{
	static UFunction* pFnSplitInInventory = NULL;

	if ( ! pFnSplitInInventory )
		pFnSplitInInventory = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SplitInInventory" );

	UOnlineSubsystemNowGame_execSplitInInventory_Parms SplitInInventory_Parms;
	memcpy ( &SplitInInventory_Parms.sGuid, &sGuid, 0xC );
	SplitInInventory_Parms.iNewDeposit = iNewDeposit;
	SplitInInventory_Parms.iNewSlot = iNewSlot;
	SplitInInventory_Parms.iQuantity = iQuantity;

	pFnSplitInInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSplitInInventory, &SplitInInventory_Parms, NULL );

	pFnSplitInInventory->FunctionFlags |= 0x400;

	return SplitInInventory_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.PlaceInGuidBag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sBagGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::PlaceInGuidBag ( struct FString sGuid, struct FString sBagGuid, int iSlot )
{
	static UFunction* pFnPlaceInGuidBag = NULL;

	if ( ! pFnPlaceInGuidBag )
		pFnPlaceInGuidBag = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.PlaceInGuidBag" );

	UOnlineSubsystemNowGame_execPlaceInGuidBag_Parms PlaceInGuidBag_Parms;
	memcpy ( &PlaceInGuidBag_Parms.sGuid, &sGuid, 0xC );
	memcpy ( &PlaceInGuidBag_Parms.sBagGuid, &sBagGuid, 0xC );
	PlaceInGuidBag_Parms.iSlot = iSlot;

	pFnPlaceInGuidBag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaceInGuidBag, &PlaceInGuidBag_Parms, NULL );

	pFnPlaceInGuidBag->FunctionFlags |= 0x400;

	return PlaceInGuidBag_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.PlaceInInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            iDeposit                       ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::PlaceInInventory ( struct FString sGuid, int iDeposit, int iSlot )
{
	static UFunction* pFnPlaceInInventory = NULL;

	if ( ! pFnPlaceInInventory )
		pFnPlaceInInventory = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.PlaceInInventory" );

	UOnlineSubsystemNowGame_execPlaceInInventory_Parms PlaceInInventory_Parms;
	memcpy ( &PlaceInInventory_Parms.sGuid, &sGuid, 0xC );
	PlaceInInventory_Parms.iDeposit = iDeposit;
	PlaceInInventory_Parms.iSlot = iSlot;

	pFnPlaceInInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaceInInventory, &PlaceInInventory_Parms, NULL );

	pFnPlaceInInventory->FunctionFlags |= 0x400;

	return PlaceInInventory_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.ServerFixBrokenItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            ItemType                       ( CPF_Parm )
// struct FString                 TargetName                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ServerFixBrokenItem ( struct FString ItemGuid, int ItemType, struct FString TargetName )
{
	static UFunction* pFnServerFixBrokenItem = NULL;

	if ( ! pFnServerFixBrokenItem )
		pFnServerFixBrokenItem = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ServerFixBrokenItem" );

	UOnlineSubsystemNowGame_execServerFixBrokenItem_Parms ServerFixBrokenItem_Parms;
	memcpy ( &ServerFixBrokenItem_Parms.ItemGuid, &ItemGuid, 0xC );
	ServerFixBrokenItem_Parms.ItemType = ItemType;
	memcpy ( &ServerFixBrokenItem_Parms.TargetName, &TargetName, 0xC );

	pFnServerFixBrokenItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerFixBrokenItem, &ServerFixBrokenItem_Parms, NULL );

	pFnServerFixBrokenItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.RequestGMBrokenItemList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 TargetName                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::RequestGMBrokenItemList ( struct FString TargetName )
{
	static UFunction* pFnRequestGMBrokenItemList = NULL;

	if ( ! pFnRequestGMBrokenItemList )
		pFnRequestGMBrokenItemList = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.RequestGMBrokenItemList" );

	UOnlineSubsystemNowGame_execRequestGMBrokenItemList_Parms RequestGMBrokenItemList_Parms;
	memcpy ( &RequestGMBrokenItemList_Parms.TargetName, &TargetName, 0xC );

	pFnRequestGMBrokenItemList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestGMBrokenItemList, &RequestGMBrokenItemList_Parms, NULL );

	pFnRequestGMBrokenItemList->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ClaimGMPetition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sPetitionSource                ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::ClaimGMPetition ( struct FString sPetitionSource )
{
	static UFunction* pFnClaimGMPetition = NULL;

	if ( ! pFnClaimGMPetition )
		pFnClaimGMPetition = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ClaimGMPetition" );

	UOnlineSubsystemNowGame_execClaimGMPetition_Parms ClaimGMPetition_Parms;
	memcpy ( &ClaimGMPetition_Parms.sPetitionSource, &sPetitionSource, 0xC );

	pFnClaimGMPetition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClaimGMPetition, &ClaimGMPetition_Parms, NULL );

	pFnClaimGMPetition->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.EscalateGMPetition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sPetitionSourceName            ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::EscalateGMPetition ( struct FString sPetitionSourceName )
{
	static UFunction* pFnEscalateGMPetition = NULL;

	if ( ! pFnEscalateGMPetition )
		pFnEscalateGMPetition = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.EscalateGMPetition" );

	UOnlineSubsystemNowGame_execEscalateGMPetition_Parms EscalateGMPetition_Parms;
	memcpy ( &EscalateGMPetition_Parms.sPetitionSourceName, &sPetitionSourceName, 0xC );

	pFnEscalateGMPetition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEscalateGMPetition, &EscalateGMPetition_Parms, NULL );

	pFnEscalateGMPetition->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.CloseGMPetition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sPetitionSource                ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::CloseGMPetition ( struct FString sPetitionSource )
{
	static UFunction* pFnCloseGMPetition = NULL;

	if ( ! pFnCloseGMPetition )
		pFnCloseGMPetition = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.CloseGMPetition" );

	UOnlineSubsystemNowGame_execCloseGMPetition_Parms CloseGMPetition_Parms;
	memcpy ( &CloseGMPetition_Parms.sPetitionSource, &sPetitionSource, 0xC );

	pFnCloseGMPetition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCloseGMPetition, &CloseGMPetition_Parms, NULL );

	pFnCloseGMPetition->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.SendGMPetition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sCategory                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sDescription                   ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::SendGMPetition ( struct FString sCategory, struct FString sDescription )
{
	static UFunction* pFnSendGMPetition = NULL;

	if ( ! pFnSendGMPetition )
		pFnSendGMPetition = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SendGMPetition" );

	UOnlineSubsystemNowGame_execSendGMPetition_Parms SendGMPetition_Parms;
	memcpy ( &SendGMPetition_Parms.sCategory, &sCategory, 0xC );
	memcpy ( &SendGMPetition_Parms.sDescription, &sDescription, 0xC );

	pFnSendGMPetition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendGMPetition, &SendGMPetition_Parms, NULL );

	pFnSendGMPetition->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.DestroyItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::DestroyItem ( struct FString sItemGuid )
{
	static UFunction* pFnDestroyItem = NULL;

	if ( ! pFnDestroyItem )
		pFnDestroyItem = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.DestroyItem" );

	UOnlineSubsystemNowGame_execDestroyItem_Parms DestroyItem_Parms;
	memcpy ( &DestroyItem_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnDestroyItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDestroyItem, &DestroyItem_Parms, NULL );

	pFnDestroyItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.DestroyPickedItem
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            iQuantity                      ( CPF_OptionalParm | CPF_Parm )

void UOnlineSubsystemNowGame::DestroyPickedItem ( int iQuantity )
{
	static UFunction* pFnDestroyPickedItem = NULL;

	if ( ! pFnDestroyPickedItem )
		pFnDestroyPickedItem = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.DestroyPickedItem" );

	UOnlineSubsystemNowGame_execDestroyPickedItem_Parms DestroyPickedItem_Parms;
	DestroyPickedItem_Parms.iQuantity = iQuantity;

	pFnDestroyPickedItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDestroyPickedItem, &DestroyPickedItem_Parms, NULL );

	pFnDestroyPickedItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetPickedInventorySlot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetPickedInventorySlot ( )
{
	static UFunction* pFnGetPickedInventorySlot = NULL;

	if ( ! pFnGetPickedInventorySlot )
		pFnGetPickedInventorySlot = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetPickedInventorySlot" );

	UOnlineSubsystemNowGame_execGetPickedInventorySlot_Parms GetPickedInventorySlot_Parms;

	pFnGetPickedInventorySlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPickedInventorySlot, &GetPickedInventorySlot_Parms, NULL );

	pFnGetPickedInventorySlot->FunctionFlags |= 0x400;

	return GetPickedInventorySlot_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetMyGuildRank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetMyGuildRank ( )
{
	static UFunction* pFnGetMyGuildRank = NULL;

	if ( ! pFnGetMyGuildRank )
		pFnGetMyGuildRank = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetMyGuildRank" );

	UOnlineSubsystemNowGame_execGetMyGuildRank_Parms GetMyGuildRank_Parms;

	pFnGetMyGuildRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMyGuildRank, &GetMyGuildRank_Parms, NULL );

	pFnGetMyGuildRank->FunctionFlags |= 0x400;

	return GetMyGuildRank_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetMyFullGuildName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetMyFullGuildName ( )
{
	static UFunction* pFnGetMyFullGuildName = NULL;

	if ( ! pFnGetMyFullGuildName )
		pFnGetMyFullGuildName = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetMyFullGuildName" );

	UOnlineSubsystemNowGame_execGetMyFullGuildName_Parms GetMyFullGuildName_Parms;

	pFnGetMyFullGuildName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMyFullGuildName, &GetMyFullGuildName_Parms, NULL );

	pFnGetMyFullGuildName->FunctionFlags |= 0x400;

	return GetMyFullGuildName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetMyGuildName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UOnlineSubsystemNowGame::GetMyGuildName ( )
{
	static UFunction* pFnGetMyGuildName = NULL;

	if ( ! pFnGetMyGuildName )
		pFnGetMyGuildName = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetMyGuildName" );

	UOnlineSubsystemNowGame_execGetMyGuildName_Parms GetMyGuildName_Parms;

	pFnGetMyGuildName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMyGuildName, &GetMyGuildName_Parms, NULL );

	pFnGetMyGuildName->FunctionFlags |= 0x400;

	return GetMyGuildName_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.TellAvatar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         Avatar                         ( CPF_Parm )
// int                            tellEnum                       ( CPF_Parm )

void UOnlineSubsystemNowGame::TellAvatar ( class ANowAtlasAvatar* Avatar, int tellEnum )
{
	static UFunction* pFnTellAvatar = NULL;

	if ( ! pFnTellAvatar )
		pFnTellAvatar = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.TellAvatar" );

	UOnlineSubsystemNowGame_execTellAvatar_Parms TellAvatar_Parms;
	TellAvatar_Parms.Avatar = Avatar;
	TellAvatar_Parms.tellEnum = tellEnum;

	pFnTellAvatar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTellAvatar, &TellAvatar_Parms, NULL );

	pFnTellAvatar->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.EquipPetItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sEquipSlot                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPetGuid                       ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::EquipPetItem ( struct FString sItemGuid, struct FString sEquipSlot, struct FString sPetGuid )
{
	static UFunction* pFnEquipPetItem = NULL;

	if ( ! pFnEquipPetItem )
		pFnEquipPetItem = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.EquipPetItem" );

	UOnlineSubsystemNowGame_execEquipPetItem_Parms EquipPetItem_Parms;
	memcpy ( &EquipPetItem_Parms.sItemGuid, &sItemGuid, 0xC );
	memcpy ( &EquipPetItem_Parms.sEquipSlot, &sEquipSlot, 0xC );
	memcpy ( &EquipPetItem_Parms.sPetGuid, &sPetGuid, 0xC );

	pFnEquipPetItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquipPetItem, &EquipPetItem_Parms, NULL );

	pFnEquipPetItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.SwapItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sTargetGuid                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPickedGuid                    ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::SwapItem ( struct FString sTargetGuid, struct FString sPickedGuid )
{
	static UFunction* pFnSwapItem = NULL;

	if ( ! pFnSwapItem )
		pFnSwapItem = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SwapItem" );

	UOnlineSubsystemNowGame_execSwapItem_Parms SwapItem_Parms;
	memcpy ( &SwapItem_Parms.sTargetGuid, &sTargetGuid, 0xC );
	memcpy ( &SwapItem_Parms.sPickedGuid, &sPickedGuid, 0xC );

	pFnSwapItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSwapItem, &SwapItem_Parms, NULL );

	pFnSwapItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.EquipItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sEquipSlot                     ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::EquipItem ( struct FString sItemGuid, struct FString sEquipSlot )
{
	static UFunction* pFnEquipItem = NULL;

	if ( ! pFnEquipItem )
		pFnEquipItem = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.EquipItem" );

	UOnlineSubsystemNowGame_execEquipItem_Parms EquipItem_Parms;
	memcpy ( &EquipItem_Parms.sItemGuid, &sItemGuid, 0xC );
	memcpy ( &EquipItem_Parms.sEquipSlot, &sEquipSlot, 0xC );

	pFnEquipItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquipItem, &EquipItem_Parms, NULL );

	pFnEquipItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.UseItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sItemGuid                      ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::UseItem ( struct FString sItemGuid )
{
	static UFunction* pFnUseItem = NULL;

	if ( ! pFnUseItem )
		pFnUseItem = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.UseItem" );

	UOnlineSubsystemNowGame_execUseItem_Parms UseItem_Parms;
	memcpy ( &UseItem_Parms.sItemGuid, &sItemGuid, 0xC );

	pFnUseItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseItem, &UseItem_Parms, NULL );

	pFnUseItem->FunctionFlags |= 0x400;

	return UseItem_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.UseInventoryItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void UOnlineSubsystemNowGame::UseInventoryItem ( int iBag, int iSlot )
{
	static UFunction* pFnUseInventoryItem = NULL;

	if ( ! pFnUseInventoryItem )
		pFnUseInventoryItem = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.UseInventoryItem" );

	UOnlineSubsystemNowGame_execUseInventoryItem_Parms UseInventoryItem_Parms;
	UseInventoryItem_Parms.iBag = iBag;
	UseInventoryItem_Parms.iSlot = iSlot;

	pFnUseInventoryItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseInventoryItem, &UseInventoryItem_Parms, NULL );

	pFnUseInventoryItem->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetVendorCompactGuid
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetVendorCompactGuid ( int iSlot, struct FString* ItemGuid )
{
	static UFunction* pFnGetVendorCompactGuid = NULL;

	if ( ! pFnGetVendorCompactGuid )
		pFnGetVendorCompactGuid = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetVendorCompactGuid" );

	UOnlineSubsystemNowGame_execGetVendorCompactGuid_Parms GetVendorCompactGuid_Parms;
	GetVendorCompactGuid_Parms.iSlot = iSlot;

	pFnGetVendorCompactGuid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVendorCompactGuid, &GetVendorCompactGuid_Parms, NULL );

	pFnGetVendorCompactGuid->FunctionFlags |= 0x400;

	if ( ItemGuid )
		memcpy ( ItemGuid, &GetVendorCompactGuid_Parms.ItemGuid, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillOpenInterface
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )
// struct FString                 SceneStr                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            GFXEnum                        ( CPF_Parm | CPF_OutParm )

bool UOnlineSubsystemNowGame::GetSkillOpenInterface ( int iSlot, struct FString* SceneStr, int* GFXEnum )
{
	static UFunction* pFnGetSkillOpenInterface = NULL;

	if ( ! pFnGetSkillOpenInterface )
		pFnGetSkillOpenInterface = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillOpenInterface" );

	UOnlineSubsystemNowGame_execGetSkillOpenInterface_Parms GetSkillOpenInterface_Parms;
	GetSkillOpenInterface_Parms.iSlot = iSlot;

	pFnGetSkillOpenInterface->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillOpenInterface, &GetSkillOpenInterface_Parms, NULL );

	pFnGetSkillOpenInterface->FunctionFlags |= 0x400;

	if ( SceneStr )
		memcpy ( SceneStr, &GetSkillOpenInterface_Parms.SceneStr, 0xC );

	if ( GFXEnum )
		*GFXEnum = GetSkillOpenInterface_Parms.GFXEnum;

	return GetSkillOpenInterface_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillTargetRequierment
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::GetSkillTargetRequierment ( int iSlot )
{
	static UFunction* pFnGetSkillTargetRequierment = NULL;

	if ( ! pFnGetSkillTargetRequierment )
		pFnGetSkillTargetRequierment = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillTargetRequierment" );

	UOnlineSubsystemNowGame_execGetSkillTargetRequierment_Parms GetSkillTargetRequierment_Parms;
	GetSkillTargetRequierment_Parms.iSlot = iSlot;

	pFnGetSkillTargetRequierment->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillTargetRequierment, &GetSkillTargetRequierment_Parms, NULL );

	pFnGetSkillTargetRequierment->FunctionFlags |= 0x400;

	return GetSkillTargetRequierment_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillCombatMove
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

bool UOnlineSubsystemNowGame::GetSkillCombatMove ( int iSlot )
{
	static UFunction* pFnGetSkillCombatMove = NULL;

	if ( ! pFnGetSkillCombatMove )
		pFnGetSkillCombatMove = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillCombatMove" );

	UOnlineSubsystemNowGame_execGetSkillCombatMove_Parms GetSkillCombatMove_Parms;
	GetSkillCombatMove_Parms.iSlot = iSlot;

	pFnGetSkillCombatMove->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillCombatMove, &GetSkillCombatMove_Parms, NULL );

	pFnGetSkillCombatMove->FunctionFlags |= 0x400;

	return GetSkillCombatMove_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillTargetDistLimit
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

int UOnlineSubsystemNowGame::GetSkillTargetDistLimit ( int iSlot )
{
	static UFunction* pFnGetSkillTargetDistLimit = NULL;

	if ( ! pFnGetSkillTargetDistLimit )
		pFnGetSkillTargetDistLimit = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillTargetDistLimit" );

	UOnlineSubsystemNowGame_execGetSkillTargetDistLimit_Parms GetSkillTargetDistLimit_Parms;
	GetSkillTargetDistLimit_Parms.iSlot = iSlot;

	pFnGetSkillTargetDistLimit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillTargetDistLimit, &GetSkillTargetDistLimit_Parms, NULL );

	pFnGetSkillTargetDistLimit->FunctionFlags |= 0x400;

	return GetSkillTargetDistLimit_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetSkillTargetTypeID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlot                          ( CPF_Parm )

int UOnlineSubsystemNowGame::GetSkillTargetTypeID ( int iSlot )
{
	static UFunction* pFnGetSkillTargetTypeID = NULL;

	if ( ! pFnGetSkillTargetTypeID )
		pFnGetSkillTargetTypeID = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetSkillTargetTypeID" );

	UOnlineSubsystemNowGame_execGetSkillTargetTypeID_Parms GetSkillTargetTypeID_Parms;
	GetSkillTargetTypeID_Parms.iSlot = iSlot;

	pFnGetSkillTargetTypeID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillTargetTypeID, &GetSkillTargetTypeID_Parms, NULL );

	pFnGetSkillTargetTypeID->FunctionFlags |= 0x400;

	return GetSkillTargetTypeID_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.UpdateFriendsList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::UpdateFriendsList ( )
{
	static UFunction* pFnUpdateFriendsList = NULL;

	if ( ! pFnUpdateFriendsList )
		pFnUpdateFriendsList = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.UpdateFriendsList" );

	UOnlineSubsystemNowGame_execUpdateFriendsList_Parms UpdateFriendsList_Parms;

	pFnUpdateFriendsList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFriendsList, &UpdateFriendsList_Parms, NULL );

	pFnUpdateFriendsList->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.GetHouseSessionBag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UOnlineSubsystemNowGame::GetHouseSessionBag ( )
{
	static UFunction* pFnGetHouseSessionBag = NULL;

	if ( ! pFnGetHouseSessionBag )
		pFnGetHouseSessionBag = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetHouseSessionBag" );

	UOnlineSubsystemNowGame_execGetHouseSessionBag_Parms GetHouseSessionBag_Parms;

	pFnGetHouseSessionBag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHouseSessionBag, &GetHouseSessionBag_Parms, NULL );

	pFnGetHouseSessionBag->FunctionFlags |= 0x400;

	return GetHouseSessionBag_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.GetHouseItemContentInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )
// int                            SessionId                      ( CPF_Parm )
// class UContentInfo*            Info                           ( CPF_Parm | CPF_OutParm )
// int                            itemQuantity                   ( CPF_Parm | CPF_OutParm )
// struct FString                 Description                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 ItemGuid                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::GetHouseItemContentInfo ( int iSlot, int SessionId, class UContentInfo** Info, int* itemQuantity, struct FString* Description, struct FString* ItemGuid )
{
	static UFunction* pFnGetHouseItemContentInfo = NULL;

	if ( ! pFnGetHouseItemContentInfo )
		pFnGetHouseItemContentInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.GetHouseItemContentInfo" );

	UOnlineSubsystemNowGame_execGetHouseItemContentInfo_Parms GetHouseItemContentInfo_Parms;
	GetHouseItemContentInfo_Parms.iSlot = iSlot;
	GetHouseItemContentInfo_Parms.SessionId = SessionId;

	pFnGetHouseItemContentInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHouseItemContentInfo, &GetHouseItemContentInfo_Parms, NULL );

	pFnGetHouseItemContentInfo->FunctionFlags |= 0x400;

	if ( Info )
		*Info = GetHouseItemContentInfo_Parms.Info;

	if ( itemQuantity )
		*itemQuantity = GetHouseItemContentInfo_Parms.itemQuantity;

	if ( Description )
		memcpy ( Description, &GetHouseItemContentInfo_Parms.Description, 0xC );

	if ( ItemGuid )
		memcpy ( ItemGuid, &GetHouseItemContentInfo_Parms.ItemGuid, 0xC );
};

// Function NowGame.OnlineSubsystemNowGame.CancelLogin
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UOnlineSubsystemNowGame::CancelLogin ( )
{
	static UFunction* pFnCancelLogin = NULL;

	if ( ! pFnCancelLogin )
		pFnCancelLogin = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.CancelLogin" );

	UOnlineSubsystemNowGame_execCancelLogin_Parms CancelLogin_Parms;

	pFnCancelLogin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelLogin, &CancelLogin_Parms, NULL );

	pFnCancelLogin->FunctionFlags |= 0x400;

	return CancelLogin_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.AtlasLogin
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 UserName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Password                       ( CPF_Parm | CPF_NeedCtorLink )

bool UOnlineSubsystemNowGame::AtlasLogin ( struct FString UserName, struct FString Password )
{
	static UFunction* pFnAtlasLogin = NULL;

	if ( ! pFnAtlasLogin )
		pFnAtlasLogin = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AtlasLogin" );

	UOnlineSubsystemNowGame_execAtlasLogin_Parms AtlasLogin_Parms;
	memcpy ( &AtlasLogin_Parms.UserName, &UserName, 0xC );
	memcpy ( &AtlasLogin_Parms.Password, &Password, 0xC );

	pFnAtlasLogin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtlasLogin, &AtlasLogin_Parms, NULL );

	pFnAtlasLogin->FunctionFlags |= 0x400;

	return AtlasLogin_Parms.ReturnValue;
};

// Function NowGame.OnlineSubsystemNowGame.DanielAdd
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )

void UOnlineSubsystemNowGame::DanielAdd ( int X, int Y )
{
	static UFunction* pFnDanielAdd = NULL;

	if ( ! pFnDanielAdd )
		pFnDanielAdd = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.DanielAdd" );

	UOnlineSubsystemNowGame_execDanielAdd_Parms DanielAdd_Parms;
	DanielAdd_Parms.X = X;
	DanielAdd_Parms.Y = Y;

	pFnDanielAdd->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDanielAdd, &DanielAdd_Parms, NULL );

	pFnDanielAdd->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.DanielReset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::DanielReset ( )
{
	static UFunction* pFnDanielReset = NULL;

	if ( ! pFnDanielReset )
		pFnDanielReset = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.DanielReset" );

	UOnlineSubsystemNowGame_execDanielReset_Parms DanielReset_Parms;

	pFnDanielReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDanielReset, &DanielReset_Parms, NULL );

	pFnDanielReset->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.DumpTextToFile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 outFilename                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::DumpTextToFile ( struct FString outFilename, struct FString Text )
{
	static UFunction* pFnDumpTextToFile = NULL;

	if ( ! pFnDumpTextToFile )
		pFnDumpTextToFile = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.DumpTextToFile" );

	UOnlineSubsystemNowGame_execDumpTextToFile_Parms DumpTextToFile_Parms;
	memcpy ( &DumpTextToFile_Parms.outFilename, &outFilename, 0xC );
	memcpy ( &DumpTextToFile_Parms.Text, &Text, 0xC );

	pFnDumpTextToFile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDumpTextToFile, &DumpTextToFile_Parms, NULL );

	pFnDumpTextToFile->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.ForceTriggerEquipDelegate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystemNowGame::ForceTriggerEquipDelegate ( )
{
	static UFunction* pFnForceTriggerEquipDelegate = NULL;

	if ( ! pFnForceTriggerEquipDelegate )
		pFnForceTriggerEquipDelegate = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.ForceTriggerEquipDelegate" );

	UOnlineSubsystemNowGame_execForceTriggerEquipDelegate_Parms ForceTriggerEquipDelegate_Parms;

	pFnForceTriggerEquipDelegate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceTriggerEquipDelegate, &ForceTriggerEquipDelegate_Parms, NULL );

	pFnForceTriggerEquipDelegate->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PlaceKeepNpc
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Slot                           ( CPF_Parm )

void UOnlineSubsystemNowGame::PlaceKeepNpc ( int Slot )
{
	static UFunction* pFnPlaceKeepNpc = NULL;

	if ( ! pFnPlaceKeepNpc )
		pFnPlaceKeepNpc = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.PlaceKeepNpc" );

	UOnlineSubsystemNowGame_execPlaceKeepNpc_Parms PlaceKeepNpc_Parms;
	PlaceKeepNpc_Parms.Slot = Slot;

	pFnPlaceKeepNpc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaceKeepNpc, &PlaceKeepNpc_Parms, NULL );

	pFnPlaceKeepNpc->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.SetPylonName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarPylon*    targetPylon                    ( CPF_Parm )
// struct FString                 newValue                       ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::SetPylonName ( class ANowAtlasAvatarPylon* targetPylon, struct FString newValue )
{
	static UFunction* pFnSetPylonName = NULL;

	if ( ! pFnSetPylonName )
		pFnSetPylonName = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SetPylonName" );

	UOnlineSubsystemNowGame_execSetPylonName_Parms SetPylonName_Parms;
	SetPylonName_Parms.targetPylon = targetPylon;
	memcpy ( &SetPylonName_Parms.newValue, &newValue, 0xC );

	pFnSetPylonName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPylonName, &SetPylonName_Parms, NULL );

	pFnSetPylonName->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.SetPylonAttTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         targetPylon                    ( CPF_Parm )
// int                            newValue                       ( CPF_Parm )

void UOnlineSubsystemNowGame::SetPylonAttTarget ( class ANowAtlasAvatar* targetPylon, int newValue )
{
	static UFunction* pFnSetPylonAttTarget = NULL;

	if ( ! pFnSetPylonAttTarget )
		pFnSetPylonAttTarget = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SetPylonAttTarget" );

	UOnlineSubsystemNowGame_execSetPylonAttTarget_Parms SetPylonAttTarget_Parms;
	SetPylonAttTarget_Parms.targetPylon = targetPylon;
	SetPylonAttTarget_Parms.newValue = newValue;

	pFnSetPylonAttTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPylonAttTarget, &SetPylonAttTarget_Parms, NULL );

	pFnSetPylonAttTarget->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.SetPylonDefTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         targetPylon                    ( CPF_Parm )
// int                            newValue                       ( CPF_Parm )

void UOnlineSubsystemNowGame::SetPylonDefTarget ( class ANowAtlasAvatar* targetPylon, int newValue )
{
	static UFunction* pFnSetPylonDefTarget = NULL;

	if ( ! pFnSetPylonDefTarget )
		pFnSetPylonDefTarget = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SetPylonDefTarget" );

	UOnlineSubsystemNowGame_execSetPylonDefTarget_Parms SetPylonDefTarget_Parms;
	SetPylonDefTarget_Parms.targetPylon = targetPylon;
	SetPylonDefTarget_Parms.newValue = newValue;

	pFnSetPylonDefTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPylonDefTarget, &SetPylonDefTarget_Parms, NULL );

	pFnSetPylonDefTarget->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.SetPylonAoeTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatar*         targetPylon                    ( CPF_Parm )
// int                            newValue                       ( CPF_Parm )

void UOnlineSubsystemNowGame::SetPylonAoeTarget ( class ANowAtlasAvatar* targetPylon, int newValue )
{
	static UFunction* pFnSetPylonAoeTarget = NULL;

	if ( ! pFnSetPylonAoeTarget )
		pFnSetPylonAoeTarget = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.SetPylonAoeTarget" );

	UOnlineSubsystemNowGame_execSetPylonAoeTarget_Parms SetPylonAoeTarget_Parms;
	SetPylonAoeTarget_Parms.targetPylon = targetPylon;
	SetPylonAoeTarget_Parms.newValue = newValue;

	pFnSetPylonAoeTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPylonAoeTarget, &SetPylonAoeTarget_Parms, NULL );

	pFnSetPylonAoeTarget->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.UpgradePylon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowAtlasAvatarPylon*    targetPylon                    ( CPF_Parm )

void UOnlineSubsystemNowGame::UpgradePylon ( class ANowAtlasAvatarPylon* targetPylon )
{
	static UFunction* pFnUpgradePylon = NULL;

	if ( ! pFnUpgradePylon )
		pFnUpgradePylon = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.UpgradePylon" );

	UOnlineSubsystemNowGame_execUpgradePylon_Parms UpgradePylon_Parms;
	UpgradePylon_Parms.targetPylon = targetPylon;

	pFnUpgradePylon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpgradePylon, &UpgradePylon_Parms, NULL );

	pFnUpgradePylon->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.PlaceAvatar
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 newPylonLoc                    ( CPF_Parm )

void UOnlineSubsystemNowGame::PlaceAvatar ( struct FVector newPylonLoc )
{
	static UFunction* pFnPlaceAvatar = NULL;

	if ( ! pFnPlaceAvatar )
		pFnPlaceAvatar = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.PlaceAvatar" );

	UOnlineSubsystemNowGame_execPlaceAvatar_Parms PlaceAvatar_Parms;
	memcpy ( &PlaceAvatar_Parms.newPylonLoc, &newPylonLoc, 0xC );

	pFnPlaceAvatar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlaceAvatar, &PlaceAvatar_Parms, NULL );

	pFnPlaceAvatar->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.AddPylonInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 newPylonGuid                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 newPylonGuild                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 newPylonLoc                    ( CPF_Parm )
// int                            newPylonAOE                    ( CPF_Parm )
// int                            newPylonAOETgt                 ( CPF_Parm )
// int                            newPylonDef                    ( CPF_Parm )
// int                            newPylonDefTgt                 ( CPF_Parm )
// int                            newPylonAtt                    ( CPF_Parm )
// int                            newPylonAttTgt                 ( CPF_Parm )
// int                            newPylonTier                   ( CPF_Parm )
// int                            newPylonUpkeep                 ( CPF_Parm )

void UOnlineSubsystemNowGame::AddPylonInfo ( struct FString newPylonGuid, struct FString newPylonGuild, struct FVector newPylonLoc, int newPylonAOE, int newPylonAOETgt, int newPylonDef, int newPylonDefTgt, int newPylonAtt, int newPylonAttTgt, int newPylonTier, int newPylonUpkeep )
{
	static UFunction* pFnAddPylonInfo = NULL;

	if ( ! pFnAddPylonInfo )
		pFnAddPylonInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AddPylonInfo" );

	UOnlineSubsystemNowGame_execAddPylonInfo_Parms AddPylonInfo_Parms;
	memcpy ( &AddPylonInfo_Parms.newPylonGuid, &newPylonGuid, 0xC );
	memcpy ( &AddPylonInfo_Parms.newPylonGuild, &newPylonGuild, 0xC );
	memcpy ( &AddPylonInfo_Parms.newPylonLoc, &newPylonLoc, 0xC );
	AddPylonInfo_Parms.newPylonAOE = newPylonAOE;
	AddPylonInfo_Parms.newPylonAOETgt = newPylonAOETgt;
	AddPylonInfo_Parms.newPylonDef = newPylonDef;
	AddPylonInfo_Parms.newPylonDefTgt = newPylonDefTgt;
	AddPylonInfo_Parms.newPylonAtt = newPylonAtt;
	AddPylonInfo_Parms.newPylonAttTgt = newPylonAttTgt;
	AddPylonInfo_Parms.newPylonTier = newPylonTier;
	AddPylonInfo_Parms.newPylonUpkeep = newPylonUpkeep;

	pFnAddPylonInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPylonInfo, &AddPylonInfo_Parms, NULL );

	pFnAddPylonInfo->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.AddPetInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 sPetName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 sPetType                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            iPetLevel                      ( CPF_Parm )
// int                            iPetLoyalty                    ( CPF_Parm )
// int                            iPetHP                         ( CPF_Parm )
// int                            iStableIndex                   ( CPF_Parm )
// struct FString                 sState                         ( CPF_Parm | CPF_NeedCtorLink )

void UOnlineSubsystemNowGame::AddPetInfo ( struct FString sPetName, struct FString sPetType, int iPetLevel, int iPetLoyalty, int iPetHP, int iStableIndex, struct FString sState )
{
	static UFunction* pFnAddPetInfo = NULL;

	if ( ! pFnAddPetInfo )
		pFnAddPetInfo = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.AddPetInfo" );

	UOnlineSubsystemNowGame_execAddPetInfo_Parms AddPetInfo_Parms;
	memcpy ( &AddPetInfo_Parms.sPetName, &sPetName, 0xC );
	memcpy ( &AddPetInfo_Parms.sPetType, &sPetType, 0xC );
	AddPetInfo_Parms.iPetLevel = iPetLevel;
	AddPetInfo_Parms.iPetLoyalty = iPetLoyalty;
	AddPetInfo_Parms.iPetHP = iPetHP;
	AddPetInfo_Parms.iStableIndex = iStableIndex;
	memcpy ( &AddPetInfo_Parms.sState, &sState, 0xC );

	pFnAddPetInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPetInfo, &AddPetInfo_Parms, NULL );

	pFnAddPetInfo->FunctionFlags |= 0x400;
};

// Function NowGame.OnlineSubsystemNowGame.OnNameCheck
// [0x00120000] 
// Parameters infos:
// unsigned long                  Check                          ( CPF_Parm )

void UOnlineSubsystemNowGame::OnNameCheck ( unsigned long Check )
{
	static UFunction* pFnOnNameCheck = NULL;

	if ( ! pFnOnNameCheck )
		pFnOnNameCheck = UObject::FindObject< UFunction > ( "Function NowGame.OnlineSubsystemNowGame.OnNameCheck" );

	UOnlineSubsystemNowGame_execOnNameCheck_Parms OnNameCheck_Parms;
	OnNameCheck_Parms.Check = Check;

	this->ProcessEvent ( pFnOnNameCheck, &OnNameCheck_Parms, NULL );
};

// Function NowGame.SkelControlDrawScale.TriggerDrawScale
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          NewDriverDrawScale             ( CPF_Parm )
// float                          NewMountDrawScale              ( CPF_Parm )

void USkelControlDrawScale::TriggerDrawScale ( float NewDriverDrawScale, float NewMountDrawScale )
{
	static UFunction* pFnTriggerDrawScale = NULL;

	if ( ! pFnTriggerDrawScale )
		pFnTriggerDrawScale = UObject::FindObject< UFunction > ( "Function NowGame.SkelControlDrawScale.TriggerDrawScale" );

	USkelControlDrawScale_execTriggerDrawScale_Parms TriggerDrawScale_Parms;
	TriggerDrawScale_Parms.NewDriverDrawScale = NewDriverDrawScale;
	TriggerDrawScale_Parms.NewMountDrawScale = NewMountDrawScale;

	pFnTriggerDrawScale->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerDrawScale, &TriggerDrawScale_Parms, NULL );

	pFnTriggerDrawScale->FunctionFlags |= 0x400;
};

// Function NowGame.SkelControlDynamicCreature.CreateParentInfo
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FParentInfo             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            I                              ( CPF_Parm )

struct FParentInfo USkelControlDynamicCreature::eventCreateParentInfo ( int I )
{
	static UFunction* pFnCreateParentInfo = NULL;

	if ( ! pFnCreateParentInfo )
		pFnCreateParentInfo = UObject::FindObject< UFunction > ( "Function NowGame.SkelControlDynamicCreature.CreateParentInfo" );

	USkelControlDynamicCreature_eventCreateParentInfo_Parms CreateParentInfo_Parms;
	CreateParentInfo_Parms.I = I;

	this->ProcessEvent ( pFnCreateParentInfo, &CreateParentInfo_Parms, NULL );

	return CreateParentInfo_Parms.ReturnValue;
};

// Function NowGame.SkelControlDynamicCreature.UpdateInput
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkelControlDynamicCreature::UpdateInput ( )
{
	static UFunction* pFnUpdateInput = NULL;

	if ( ! pFnUpdateInput )
		pFnUpdateInput = UObject::FindObject< UFunction > ( "Function NowGame.SkelControlDynamicCreature.UpdateInput" );

	USkelControlDynamicCreature_execUpdateInput_Parms UpdateInput_Parms;

	pFnUpdateInput->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateInput, &UpdateInput_Parms, NULL );

	pFnUpdateInput->FunctionFlags |= 0x400;
};

// Function NowGame.SkelControlDynamicCreature.SetDynamicIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            NewIndex                       ( CPF_Parm )

void USkelControlDynamicCreature::SetDynamicIndex ( int NewIndex )
{
	static UFunction* pFnSetDynamicIndex = NULL;

	if ( ! pFnSetDynamicIndex )
		pFnSetDynamicIndex = UObject::FindObject< UFunction > ( "Function NowGame.SkelControlDynamicCreature.SetDynamicIndex" );

	USkelControlDynamicCreature_execSetDynamicIndex_Parms SetDynamicIndex_Parms;
	SetDynamicIndex_Parms.NewIndex = NewIndex;

	pFnSetDynamicIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDynamicIndex, &SetDynamicIndex_Parms, NULL );

	pFnSetDynamicIndex->FunctionFlags |= 0x400;
};

// Function NowGame.StatTracker.Tick
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UStatTracker::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.StatTracker.Tick" );

	UStatTracker_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.StatTracker.IsTimerActive
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

bool UStatTracker::IsTimerActive ( struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnIsTimerActive = NULL;

	if ( ! pFnIsTimerActive )
		pFnIsTimerActive = UObject::FindObject< UFunction > ( "Function NowGame.StatTracker.IsTimerActive" );

	UStatTracker_execIsTimerActive_Parms IsTimerActive_Parms;
	memcpy ( &IsTimerActive_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	IsTimerActive_Parms.inObj = inObj;

	this->ProcessEvent ( pFnIsTimerActive, &IsTimerActive_Parms, NULL );

	return IsTimerActive_Parms.ReturnValue;
};

// Function NowGame.StatTracker.ClearTimer
// [0x00024002] 
// Parameters infos:
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

void UStatTracker::ClearTimer ( struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnClearTimer = NULL;

	if ( ! pFnClearTimer )
		pFnClearTimer = UObject::FindObject< UFunction > ( "Function NowGame.StatTracker.ClearTimer" );

	UStatTracker_execClearTimer_Parms ClearTimer_Parms;
	memcpy ( &ClearTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	ClearTimer_Parms.inObj = inObj;

	this->ProcessEvent ( pFnClearTimer, &ClearTimer_Parms, NULL );
};

// Function NowGame.StatTracker.SetTimer
// [0x00024002] 
// Parameters infos:
// float                          InRate                         ( CPF_Parm )
// unsigned long                  inbLoop                        ( CPF_OptionalParm | CPF_Parm )
// struct FName                   inTimerFunc                    ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 inObj                          ( CPF_OptionalParm | CPF_Parm )

void UStatTracker::SetTimer ( float InRate, unsigned long inbLoop, struct FName inTimerFunc, class UObject* inObj )
{
	static UFunction* pFnSetTimer = NULL;

	if ( ! pFnSetTimer )
		pFnSetTimer = UObject::FindObject< UFunction > ( "Function NowGame.StatTracker.SetTimer" );

	UStatTracker_execSetTimer_Parms SetTimer_Parms;
	SetTimer_Parms.InRate = InRate;
	SetTimer_Parms.inbLoop = inbLoop;
	memcpy ( &SetTimer_Parms.inTimerFunc, &inTimerFunc, 0x8 );
	SetTimer_Parms.inObj = inObj;

	this->ProcessEvent ( pFnSetTimer, &SetTimer_Parms, NULL );
};

// Function NowGame.StatTracker.ResetLongterm
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UStatTracker::eventResetLongterm ( )
{
	static UFunction* pFnResetLongterm = NULL;

	if ( ! pFnResetLongterm )
		pFnResetLongterm = UObject::FindObject< UFunction > ( "Function NowGame.StatTracker.ResetLongterm" );

	UStatTracker_eventResetLongterm_Parms ResetLongterm_Parms;

	this->ProcessEvent ( pFnResetLongterm, &ResetLongterm_Parms, NULL );
};

// Function NowGame.StatTracker.AddLongTerm
// [0x00020002] 
// Parameters infos:
// int                            addWhat                        ( CPF_Parm )

void UStatTracker::AddLongTerm ( int addWhat )
{
	static UFunction* pFnAddLongTerm = NULL;

	if ( ! pFnAddLongTerm )
		pFnAddLongTerm = UObject::FindObject< UFunction > ( "Function NowGame.StatTracker.AddLongTerm" );

	UStatTracker_execAddLongTerm_Parms AddLongTerm_Parms;
	AddLongTerm_Parms.addWhat = addWhat;

	this->ProcessEvent ( pFnAddLongTerm, &AddLongTerm_Parms, NULL );
};

// Function NowGame.StatTracker.ResetStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UStatTracker::eventResetStats ( )
{
	static UFunction* pFnResetStats = NULL;

	if ( ! pFnResetStats )
		pFnResetStats = UObject::FindObject< UFunction > ( "Function NowGame.StatTracker.ResetStats" );

	UStatTracker_eventResetStats_Parms ResetStats_Parms;

	this->ProcessEvent ( pFnResetStats, &ResetStats_Parms, NULL );
};

// Function NowGame.StatTracker.CollectInfo
// [0x00020002] 
// Parameters infos:

void UStatTracker::CollectInfo ( )
{
	static UFunction* pFnCollectInfo = NULL;

	if ( ! pFnCollectInfo )
		pFnCollectInfo = UObject::FindObject< UFunction > ( "Function NowGame.StatTracker.CollectInfo" );

	UStatTracker_execCollectInfo_Parms CollectInfo_Parms;

	this->ProcessEvent ( pFnCollectInfo, &CollectInfo_Parms, NULL );
};

// Function NowGame.StatTracker.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UStatTracker::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.StatTracker.AttachTo" );

	UStatTracker_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.StatTracker.SendLongterm
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            Add                            ( CPF_OptionalParm | CPF_Parm )

void UStatTracker::SendLongterm ( int Add )
{
	static UFunction* pFnSendLongterm = NULL;

	if ( ! pFnSendLongterm )
		pFnSendLongterm = UObject::FindObject< UFunction > ( "Function NowGame.StatTracker.SendLongterm" );

	UStatTracker_execSendLongterm_Parms SendLongterm_Parms;
	SendLongterm_Parms.Add = Add;

	pFnSendLongterm->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendLongterm, &SendLongterm_Parms, NULL );

	pFnSendLongterm->FunctionFlags |= 0x400;
};

// Function NowGame.StatTracker.SendStats
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            Add                            ( CPF_OptionalParm | CPF_Parm )

void UStatTracker::SendStats ( int Add )
{
	static UFunction* pFnSendStats = NULL;

	if ( ! pFnSendStats )
		pFnSendStats = UObject::FindObject< UFunction > ( "Function NowGame.StatTracker.SendStats" );

	UStatTracker_execSendStats_Parms SendStats_Parms;
	SendStats_Parms.Add = Add;

	pFnSendStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendStats, &SendStats_Parms, NULL );

	pFnSendStats->FunctionFlags |= 0x400;
};

// Function NowGame.UIAction_TellTargetNpc.SendTell
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIAction_TellTargetNpc::eventSendTell ( )
{
	static UFunction* pFnSendTell = NULL;

	if ( ! pFnSendTell )
		pFnSendTell = UObject::FindObject< UFunction > ( "Function NowGame.UIAction_TellTargetNpc.SendTell" );

	UUIAction_TellTargetNpc_eventSendTell_Parms SendTell_Parms;

	this->ProcessEvent ( pFnSendTell, &SendTell_Parms, NULL );
};

// Function NowGame.UIInfo.InitInfo
// [0x00020000] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfo::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = UObject::FindObject< UFunction > ( "Function NowGame.UIInfo.InitInfo" );

	UUIInfo_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalker.AddRespToArray
// [0x00820002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )
// int                            iTargetIndex                   ( CPF_Parm )
// struct FString                 Script                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Chat                           ( CPF_Parm | CPF_NeedCtorLink )

void UUIInfoTalker::AddRespToArray ( int iIndex, int iTargetIndex, struct FString Script, struct FString Chat )
{
	static UFunction* pFnAddRespToArray = NULL;

	if ( ! pFnAddRespToArray )
		pFnAddRespToArray = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalker.AddRespToArray" );

	UUIInfoTalker_execAddRespToArray_Parms AddRespToArray_Parms;
	AddRespToArray_Parms.iIndex = iIndex;
	AddRespToArray_Parms.iTargetIndex = iTargetIndex;
	memcpy ( &AddRespToArray_Parms.Script, &Script, 0xC );
	memcpy ( &AddRespToArray_Parms.Chat, &Chat, 0xC );

	this->ProcessEvent ( pFnAddRespToArray, &AddRespToArray_Parms, NULL );
};

// Function NowGame.UIInfoTalker.AddChatToArray
// [0x00820002] 
// Parameters infos:
// int                            iIndex                         ( CPF_Parm )
// struct FString                 Chat                           ( CPF_Parm | CPF_NeedCtorLink )

void UUIInfoTalker::AddChatToArray ( int iIndex, struct FString Chat )
{
	static UFunction* pFnAddChatToArray = NULL;

	if ( ! pFnAddChatToArray )
		pFnAddChatToArray = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalker.AddChatToArray" );

	UUIInfoTalker_execAddChatToArray_Parms AddChatToArray_Parms;
	AddChatToArray_Parms.iIndex = iIndex;
	memcpy ( &AddChatToArray_Parms.Chat, &Chat, 0xC );

	this->ProcessEvent ( pFnAddChatToArray, &AddChatToArray_Parms, NULL );
};

// Function NowGame.UIInfoTalkerCityBrain.GenerateResponse
// [0x00020002] 
// Parameters infos:

void UUIInfoTalkerCityBrain::GenerateResponse ( )
{
	static UFunction* pFnGenerateResponse = NULL;

	if ( ! pFnGenerateResponse )
		pFnGenerateResponse = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerCityBrain.GenerateResponse" );

	UUIInfoTalkerCityBrain_execGenerateResponse_Parms GenerateResponse_Parms;

	this->ProcessEvent ( pFnGenerateResponse, &GenerateResponse_Parms, NULL );
};

// Function NowGame.UIInfoTalkerCityBrain.GenerateIntro
// [0x00020002] 
// Parameters infos:

void UUIInfoTalkerCityBrain::GenerateIntro ( )
{
	static UFunction* pFnGenerateIntro = NULL;

	if ( ! pFnGenerateIntro )
		pFnGenerateIntro = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerCityBrain.GenerateIntro" );

	UUIInfoTalkerCityBrain_execGenerateIntro_Parms GenerateIntro_Parms;

	this->ProcessEvent ( pFnGenerateIntro, &GenerateIntro_Parms, NULL );
};

// Function NowGame.UIInfoTalkerCityBrain.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerCityBrain::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerCityBrain.InitInfo" );

	UUIInfoTalkerCityBrain_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerCityBrain.GetKeeperStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIInfoTalkerCityBrain::GetKeeperStats ( )
{
	static UFunction* pFnGetKeeperStats = NULL;

	if ( ! pFnGetKeeperStats )
		pFnGetKeeperStats = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerCityBrain.GetKeeperStats" );

	UUIInfoTalkerCityBrain_execGetKeeperStats_Parms GetKeeperStats_Parms;

	pFnGetKeeperStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetKeeperStats, &GetKeeperStats_Parms, NULL );

	pFnGetKeeperStats->FunctionFlags |= 0x400;
};

// Function NowGame.UIInfoTalkerFromContent.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerFromContent::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerFromContent.InitInfo" );

	UUIInfoTalkerFromContent_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerGuard.InitInfo
// [0x00020000] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerGuard::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerGuard.InitInfo" );

	UUIInfoTalkerGuard_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerNoobHelp.HasRabbit
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUIInfoTalkerNoobHelp::HasRabbit ( )
{
	static UFunction* pFnHasRabbit = NULL;

	if ( ! pFnHasRabbit )
		pFnHasRabbit = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerNoobHelp.HasRabbit" );

	UUIInfoTalkerNoobHelp_execHasRabbit_Parms HasRabbit_Parms;

	this->ProcessEvent ( pFnHasRabbit, &HasRabbit_Parms, NULL );

	return HasRabbit_Parms.ReturnValue;
};

// Function NowGame.UIInfoTalkerNoobHelp.GenerateResponseD
// [0x00020002] 
// Parameters infos:
// int                            iState                         ( CPF_Parm )

void UUIInfoTalkerNoobHelp::GenerateResponseD ( int iState )
{
	static UFunction* pFnGenerateResponseD = NULL;

	if ( ! pFnGenerateResponseD )
		pFnGenerateResponseD = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerNoobHelp.GenerateResponseD" );

	UUIInfoTalkerNoobHelp_execGenerateResponseD_Parms GenerateResponseD_Parms;
	GenerateResponseD_Parms.iState = iState;

	this->ProcessEvent ( pFnGenerateResponseD, &GenerateResponseD_Parms, NULL );
};

// Function NowGame.UIInfoTalkerNoobHelp.GenerateResponseC
// [0x00020002] 
// Parameters infos:
// int                            iState                         ( CPF_Parm )

void UUIInfoTalkerNoobHelp::GenerateResponseC ( int iState )
{
	static UFunction* pFnGenerateResponseC = NULL;

	if ( ! pFnGenerateResponseC )
		pFnGenerateResponseC = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerNoobHelp.GenerateResponseC" );

	UUIInfoTalkerNoobHelp_execGenerateResponseC_Parms GenerateResponseC_Parms;
	GenerateResponseC_Parms.iState = iState;

	this->ProcessEvent ( pFnGenerateResponseC, &GenerateResponseC_Parms, NULL );
};

// Function NowGame.UIInfoTalkerNoobHelp.GenerateResponseB
// [0x00020002] 
// Parameters infos:
// int                            iState                         ( CPF_Parm )

void UUIInfoTalkerNoobHelp::GenerateResponseB ( int iState )
{
	static UFunction* pFnGenerateResponseB = NULL;

	if ( ! pFnGenerateResponseB )
		pFnGenerateResponseB = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerNoobHelp.GenerateResponseB" );

	UUIInfoTalkerNoobHelp_execGenerateResponseB_Parms GenerateResponseB_Parms;
	GenerateResponseB_Parms.iState = iState;

	this->ProcessEvent ( pFnGenerateResponseB, &GenerateResponseB_Parms, NULL );
};

// Function NowGame.UIInfoTalkerNoobHelp.GenerateResponseA
// [0x00020002] 
// Parameters infos:
// int                            iState                         ( CPF_Parm )

void UUIInfoTalkerNoobHelp::GenerateResponseA ( int iState )
{
	static UFunction* pFnGenerateResponseA = NULL;

	if ( ! pFnGenerateResponseA )
		pFnGenerateResponseA = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerNoobHelp.GenerateResponseA" );

	UUIInfoTalkerNoobHelp_execGenerateResponseA_Parms GenerateResponseA_Parms;
	GenerateResponseA_Parms.iState = iState;

	this->ProcessEvent ( pFnGenerateResponseA, &GenerateResponseA_Parms, NULL );
};

// Function NowGame.UIInfoTalkerNoobHelp.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerNoobHelp::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerNoobHelp.InitInfo" );

	UUIInfoTalkerNoobHelp_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerNoobHelp.HasRobe
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIInfoTalkerNoobHelp::HasRobe ( )
{
	static UFunction* pFnHasRobe = NULL;

	if ( ! pFnHasRobe )
		pFnHasRobe = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerNoobHelp.HasRobe" );

	UUIInfoTalkerNoobHelp_execHasRobe_Parms HasRobe_Parms;

	pFnHasRobe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasRobe, &HasRobe_Parms, NULL );

	pFnHasRobe->FunctionFlags |= 0x400;

	return HasRobe_Parms.ReturnValue;
};

// Function NowGame.UIInfoTalkerNoobHelp.HasLeather
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIInfoTalkerNoobHelp::HasLeather ( )
{
	static UFunction* pFnHasLeather = NULL;

	if ( ! pFnHasLeather )
		pFnHasLeather = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerNoobHelp.HasLeather" );

	UUIInfoTalkerNoobHelp_execHasLeather_Parms HasLeather_Parms;

	pFnHasLeather->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasLeather, &HasLeather_Parms, NULL );

	pFnHasLeather->FunctionFlags |= 0x400;

	return HasLeather_Parms.ReturnValue;
};

// Function NowGame.UIInfoTalkerStable.GeneratePetResponse
// [0x00020002] 
// Parameters infos:

void UUIInfoTalkerStable::GeneratePetResponse ( )
{
	static UFunction* pFnGeneratePetResponse = NULL;

	if ( ! pFnGeneratePetResponse )
		pFnGeneratePetResponse = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerStable.GeneratePetResponse" );

	UUIInfoTalkerStable_execGeneratePetResponse_Parms GeneratePetResponse_Parms;

	this->ProcessEvent ( pFnGeneratePetResponse, &GeneratePetResponse_Parms, NULL );
};

// Function NowGame.UIInfoTalkerStable.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerStable::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerStable.InitInfo" );

	UUIInfoTalkerStable_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerTaxManager.GetAKeep
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarPlayerKeep* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerKeep* UUIInfoTalkerTaxManager::eventGetAKeep ( )
{
	static UFunction* pFnGetAKeep = NULL;

	if ( ! pFnGetAKeep )
		pFnGetAKeep = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerTaxManager.GetAKeep" );

	UUIInfoTalkerTaxManager_eventGetAKeep_Parms GetAKeep_Parms;

	this->ProcessEvent ( pFnGetAKeep, &GetAKeep_Parms, NULL );

	return GetAKeep_Parms.ReturnValue;
};

// Function NowGame.UIInfoTalkerTaxManager.GenerateResponse
// [0x00020002] 
// Parameters infos:

void UUIInfoTalkerTaxManager::GenerateResponse ( )
{
	static UFunction* pFnGenerateResponse = NULL;

	if ( ! pFnGenerateResponse )
		pFnGenerateResponse = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerTaxManager.GenerateResponse" );

	UUIInfoTalkerTaxManager_execGenerateResponse_Parms GenerateResponse_Parms;

	this->ProcessEvent ( pFnGenerateResponse, &GenerateResponse_Parms, NULL );
};

// Function NowGame.UIInfoTalkerTaxManager.GenerateIntro
// [0x00020002] 
// Parameters infos:

void UUIInfoTalkerTaxManager::GenerateIntro ( )
{
	static UFunction* pFnGenerateIntro = NULL;

	if ( ! pFnGenerateIntro )
		pFnGenerateIntro = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerTaxManager.GenerateIntro" );

	UUIInfoTalkerTaxManager_execGenerateIntro_Parms GenerateIntro_Parms;

	this->ProcessEvent ( pFnGenerateIntro, &GenerateIntro_Parms, NULL );
};

// Function NowGame.UIInfoTalkerTaxManager.InitInfo
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    pOwner                         ( CPF_Parm )

void UUIInfoTalkerTaxManager::InitInfo ( class ANowPlayerController* pOwner )
{
	static UFunction* pFnInitInfo = NULL;

	if ( ! pFnInitInfo )
		pFnInitInfo = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerTaxManager.InitInfo" );

	UUIInfoTalkerTaxManager_execInitInfo_Parms InitInfo_Parms;
	InitInfo_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnInitInfo, &InitInfo_Parms, NULL );
};

// Function NowGame.UIInfoTalkerTaxManager.GetTaxManagerStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIInfoTalkerTaxManager::GetTaxManagerStats ( )
{
	static UFunction* pFnGetTaxManagerStats = NULL;

	if ( ! pFnGetTaxManagerStats )
		pFnGetTaxManagerStats = UObject::FindObject< UFunction > ( "Function NowGame.UIInfoTalkerTaxManager.GetTaxManagerStats" );

	UUIInfoTalkerTaxManager_execGetTaxManagerStats_Parms GetTaxManagerStats_Parms;

	pFnGetTaxManagerStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTaxManagerStats, &GetTaxManagerStats_Parms, NULL );

	pFnGetTaxManagerStats->FunctionFlags |= 0x400;
};

// Function NowGame.UINow_ContentButton.SetLabel
// [0x00020002] 
// Parameters infos:
// struct FString                 NewLabel                       ( CPF_Parm | CPF_NeedCtorLink )

void UUINow_ContentButton::SetLabel ( struct FString NewLabel )
{
	static UFunction* pFnSetLabel = NULL;

	if ( ! pFnSetLabel )
		pFnSetLabel = UObject::FindObject< UFunction > ( "Function NowGame.UINow_ContentButton.SetLabel" );

	UUINow_ContentButton_execSetLabel_Parms SetLabel_Parms;
	memcpy ( &SetLabel_Parms.NewLabel, &NewLabel, 0xC );

	this->ProcessEvent ( pFnSetLabel, &SetLabel_Parms, NULL );
};

// Function NowGame.UINow_SkeletalMeshWidget.UpdateSkeletalComponents
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANowPawn*                FromWhatPawn                   ( CPF_Parm )

void UUINow_SkeletalMeshWidget::UpdateSkeletalComponents ( class ANowPawn* FromWhatPawn )
{
	static UFunction* pFnUpdateSkeletalComponents = NULL;

	if ( ! pFnUpdateSkeletalComponents )
		pFnUpdateSkeletalComponents = UObject::FindObject< UFunction > ( "Function NowGame.UINow_SkeletalMeshWidget.UpdateSkeletalComponents" );

	UUINow_SkeletalMeshWidget_execUpdateSkeletalComponents_Parms UpdateSkeletalComponents_Parms;
	UpdateSkeletalComponents_Parms.FromWhatPawn = FromWhatPawn;

	pFnUpdateSkeletalComponents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSkeletalComponents, &UpdateSkeletalComponents_Parms, NULL );

	pFnUpdateSkeletalComponents->FunctionFlags |= 0x400;
};

// Function NowGame.UINow_SkillBar.GetEnabledValue
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UUINow_SkillBar::GetEnabledValue ( )
{
	static UFunction* pFnGetEnabledValue = NULL;

	if ( ! pFnGetEnabledValue )
		pFnGetEnabledValue = UObject::FindObject< UFunction > ( "Function NowGame.UINow_SkillBar.GetEnabledValue" );

	UUINow_SkillBar_execGetEnabledValue_Parms GetEnabledValue_Parms;

	pFnGetEnabledValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEnabledValue, &GetEnabledValue_Parms, NULL );

	pFnGetEnabledValue->FunctionFlags |= 0x400;

	return GetEnabledValue_Parms.ReturnValue;
};

// Function NowGame.UINow_SkillBar.GetSkillValue
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UUINow_SkillBar::GetSkillValue ( )
{
	static UFunction* pFnGetSkillValue = NULL;

	if ( ! pFnGetSkillValue )
		pFnGetSkillValue = UObject::FindObject< UFunction > ( "Function NowGame.UINow_SkillBar.GetSkillValue" );

	UUINow_SkillBar_execGetSkillValue_Parms GetSkillValue_Parms;

	pFnGetSkillValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSkillValue, &GetSkillValue_Parms, NULL );

	pFnGetSkillValue->FunctionFlags |= 0x400;

	return GetSkillValue_Parms.ReturnValue;
};

// Function NowGame.UINow_SkillBar.GetAttributeValue
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UUINow_SkillBar::GetAttributeValue ( )
{
	static UFunction* pFnGetAttributeValue = NULL;

	if ( ! pFnGetAttributeValue )
		pFnGetAttributeValue = UObject::FindObject< UFunction > ( "Function NowGame.UINow_SkillBar.GetAttributeValue" );

	UUINow_SkillBar_execGetAttributeValue_Parms GetAttributeValue_Parms;

	pFnGetAttributeValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAttributeValue, &GetAttributeValue_Parms, NULL );

	pFnGetAttributeValue->FunctionFlags |= 0x400;

	return GetAttributeValue_Parms.ReturnValue;
};

// Function NowGame.UINow_StatsBar.GetValue
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bPercentageValue               ( CPF_Parm )

float UUINow_StatsBar::GetValue ( unsigned long bPercentageValue )
{
	static UFunction* pFnGetValue = NULL;

	if ( ! pFnGetValue )
		pFnGetValue = UObject::FindObject< UFunction > ( "Function NowGame.UINow_StatsBar.GetValue" );

	UUINow_StatsBar_execGetValue_Parms GetValue_Parms;
	GetValue_Parms.bPercentageValue = bPercentageValue;

	pFnGetValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );

	pFnGetValue->FunctionFlags |= 0x400;

	return GetValue_Parms.ReturnValue;
};

// Function NowGame.UIScene_Now_BaseScene.StopMoveWindow
// [0x00020002] 
// Parameters infos:
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

void UUIScene_Now_BaseScene::StopMoveWindow ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnStopMoveWindow = NULL;

	if ( ! pFnStopMoveWindow )
		pFnStopMoveWindow = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.StopMoveWindow" );

	UUIScene_Now_BaseScene_execStopMoveWindow_Parms StopMoveWindow_Parms;
	StopMoveWindow_Parms.O = O;
	StopMoveWindow_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnStopMoveWindow, &StopMoveWindow_Parms, NULL );
};

// Function NowGame.UIScene_Now_BaseScene.StartMoveWindow
// [0x00020002] 
// Parameters infos:
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

void UUIScene_Now_BaseScene::StartMoveWindow ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnStartMoveWindow = NULL;

	if ( ! pFnStartMoveWindow )
		pFnStartMoveWindow = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.StartMoveWindow" );

	UUIScene_Now_BaseScene_execStartMoveWindow_Parms StartMoveWindow_Parms;
	StartMoveWindow_Parms.O = O;
	StartMoveWindow_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnStartMoveWindow, &StartMoveWindow_Parms, NULL );
};

// Function NowGame.UIScene_Now_BaseScene.SetDragComponentButton
// [0x00020002] 
// Parameters infos:
// class UUIButton*               Button                         ( CPF_Parm )
// class UUIScreenObject*         InMoveObj                      ( CPF_Parm )

void UUIScene_Now_BaseScene::SetDragComponentButton ( class UUIButton* Button, class UUIScreenObject* InMoveObj )
{
	static UFunction* pFnSetDragComponentButton = NULL;

	if ( ! pFnSetDragComponentButton )
		pFnSetDragComponentButton = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.SetDragComponentButton" );

	UUIScene_Now_BaseScene_execSetDragComponentButton_Parms SetDragComponentButton_Parms;
	SetDragComponentButton_Parms.Button = Button;
	SetDragComponentButton_Parms.InMoveObj = InMoveObj;

	this->ProcessEvent ( pFnSetDragComponentButton, &SetDragComponentButton_Parms, NULL );
};

// Function NowGame.UIScene_Now_BaseScene.GetOptionsDS
// [0x00020002] 
// Parameters infos:
// class UNowOptionsDatastore*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowOptionsDatastore* UUIScene_Now_BaseScene::GetOptionsDS ( )
{
	static UFunction* pFnGetOptionsDS = NULL;

	if ( ! pFnGetOptionsDS )
		pFnGetOptionsDS = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.GetOptionsDS" );

	UUIScene_Now_BaseScene_execGetOptionsDS_Parms GetOptionsDS_Parms;

	this->ProcessEvent ( pFnGetOptionsDS, &GetOptionsDS_Parms, NULL );

	return GetOptionsDS_Parms.ReturnValue;
};

// Function NowGame.UIScene_Now_BaseScene.GetPlayerDS
// [0x00020002] 
// Parameters infos:
// class UNowPlayerDatastore*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowPlayerDatastore* UUIScene_Now_BaseScene::GetPlayerDS ( )
{
	static UFunction* pFnGetPlayerDS = NULL;

	if ( ! pFnGetPlayerDS )
		pFnGetPlayerDS = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.GetPlayerDS" );

	UUIScene_Now_BaseScene_execGetPlayerDS_Parms GetPlayerDS_Parms;

	this->ProcessEvent ( pFnGetPlayerDS, &GetPlayerDS_Parms, NULL );

	return GetPlayerDS_Parms.ReturnValue;
};

// Function NowGame.UIScene_Now_BaseScene.GetEntryDS
// [0x00020002] 
// Parameters infos:
// class UNowEntryDatastore*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowEntryDatastore* UUIScene_Now_BaseScene::GetEntryDS ( )
{
	static UFunction* pFnGetEntryDS = NULL;

	if ( ! pFnGetEntryDS )
		pFnGetEntryDS = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.GetEntryDS" );

	UUIScene_Now_BaseScene_execGetEntryDS_Parms GetEntryDS_Parms;

	this->ProcessEvent ( pFnGetEntryDS, &GetEntryDS_Parms, NULL );

	return GetEntryDS_Parms.ReturnValue;
};

// Function NowGame.UIScene_Now_BaseScene.StateChangeCB
// [0x00824002] 
// Parameters infos:
// class UUIScreenObject*         Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIState*                NewlyActiveState               ( CPF_Parm )
// class UUIState*                PreviouslyActiveState          ( CPF_OptionalParm | CPF_Parm )

void UUIScene_Now_BaseScene::StateChangeCB ( class UUIScreenObject* Sender, int PlayerIndex, class UUIState* NewlyActiveState, class UUIState* PreviouslyActiveState )
{
	static UFunction* pFnStateChangeCB = NULL;

	if ( ! pFnStateChangeCB )
		pFnStateChangeCB = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.StateChangeCB" );

	UUIScene_Now_BaseScene_execStateChangeCB_Parms StateChangeCB_Parms;
	StateChangeCB_Parms.Sender = Sender;
	StateChangeCB_Parms.PlayerIndex = PlayerIndex;
	StateChangeCB_Parms.NewlyActiveState = NewlyActiveState;
	StateChangeCB_Parms.PreviouslyActiveState = PreviouslyActiveState;

	this->ProcessEvent ( pFnStateChangeCB, &StateChangeCB_Parms, NULL );
};

// Function NowGame.UIScene_Now_BaseScene.EmptyOnClicked
// [0x00020000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Now_BaseScene::EmptyOnClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnEmptyOnClicked = NULL;

	if ( ! pFnEmptyOnClicked )
		pFnEmptyOnClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.EmptyOnClicked" );

	UUIScene_Now_BaseScene_execEmptyOnClicked_Parms EmptyOnClicked_Parms;
	EmptyOnClicked_Parms.EventObject = EventObject;
	EmptyOnClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnEmptyOnClicked, &EmptyOnClicked_Parms, NULL );

	return EmptyOnClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Now_BaseScene.EmptyOnContextMenu
// [0x00420000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_Now_BaseScene::EmptyOnContextMenu ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnEmptyOnContextMenu = NULL;

	if ( ! pFnEmptyOnContextMenu )
		pFnEmptyOnContextMenu = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.EmptyOnContextMenu" );

	UUIScene_Now_BaseScene_execEmptyOnContextMenu_Parms EmptyOnContextMenu_Parms;
	EmptyOnContextMenu_Parms.Sender = Sender;
	EmptyOnContextMenu_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnEmptyOnContextMenu, &EmptyOnContextMenu_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = EmptyOnContextMenu_Parms.CustomContextMenu;

	return EmptyOnContextMenu_Parms.ReturnValue;
};

// Function NowGame.UIScene_Now_BaseScene.LoadWindowPosition
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Now_BaseScene::eventLoadWindowPosition ( )
{
	static UFunction* pFnLoadWindowPosition = NULL;

	if ( ! pFnLoadWindowPosition )
		pFnLoadWindowPosition = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.LoadWindowPosition" );

	UUIScene_Now_BaseScene_eventLoadWindowPosition_Parms LoadWindowPosition_Parms;

	this->ProcessEvent ( pFnLoadWindowPosition, &LoadWindowPosition_Parms, NULL );
};

// Function NowGame.UIScene_Now_BaseScene.SaveWindowPosition
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Now_BaseScene::eventSaveWindowPosition ( )
{
	static UFunction* pFnSaveWindowPosition = NULL;

	if ( ! pFnSaveWindowPosition )
		pFnSaveWindowPosition = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.SaveWindowPosition" );

	UUIScene_Now_BaseScene_eventSaveWindowPosition_Parms SaveWindowPosition_Parms;

	this->ProcessEvent ( pFnSaveWindowPosition, &SaveWindowPosition_Parms, NULL );
};

// Function NowGame.UIScene_Now_BaseScene.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Now_BaseScene::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.SceneDeactivated" );

	UUIScene_Now_BaseScene_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Now_BaseScene.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Now_BaseScene::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.SceneActivated" );

	UUIScene_Now_BaseScene_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Now_BaseScene.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Now_BaseScene::OnClose ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.OnClose" );

	UUIScene_Now_BaseScene_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.EventObject = EventObject;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_Now_BaseScene.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_Now_BaseScene::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.PostInitUpdate" );

	UUIScene_Now_BaseScene_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_Now_BaseScene.UpdateTooltip
// [0x00420002] 
// Parameters infos:
// class UUINow_ContentButton*    ItemButton                     ( CPF_Parm | CPF_OutParm )

void UUIScene_Now_BaseScene::UpdateTooltip ( class UUINow_ContentButton** ItemButton )
{
	static UFunction* pFnUpdateTooltip = NULL;

	if ( ! pFnUpdateTooltip )
		pFnUpdateTooltip = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.UpdateTooltip" );

	UUIScene_Now_BaseScene_execUpdateTooltip_Parms UpdateTooltip_Parms;

	this->ProcessEvent ( pFnUpdateTooltip, &UpdateTooltip_Parms, NULL );

	if ( ItemButton )
		*ItemButton = UpdateTooltip_Parms.ItemButton;
};

// Function NowGame.UIScene_Now_BaseScene.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Now_BaseScene::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.InitScene" );

	UUIScene_Now_BaseScene_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Now_BaseScene.GetNowPC
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* UUIScene_Now_BaseScene::GetNowPC ( )
{
	static UFunction* pFnGetNowPC = NULL;

	if ( ! pFnGetNowPC )
		pFnGetNowPC = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.GetNowPC" );

	UUIScene_Now_BaseScene_execGetNowPC_Parms GetNowPC_Parms;

	this->ProcessEvent ( pFnGetNowPC, &GetNowPC_Parms, NULL );

	return GetNowPC_Parms.ReturnValue;
};

// Function NowGame.UIScene_Now_BaseScene.RemoveDistanceClose
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Now_BaseScene::eventRemoveDistanceClose ( )
{
	static UFunction* pFnRemoveDistanceClose = NULL;

	if ( ! pFnRemoveDistanceClose )
		pFnRemoveDistanceClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.RemoveDistanceClose" );

	UUIScene_Now_BaseScene_eventRemoveDistanceClose_Parms RemoveDistanceClose_Parms;

	this->ProcessEvent ( pFnRemoveDistanceClose, &RemoveDistanceClose_Parms, NULL );
};

// Function NowGame.UIScene_Now_BaseScene.DistanceCloseInit
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Now_BaseScene::eventDistanceCloseInit ( )
{
	static UFunction* pFnDistanceCloseInit = NULL;

	if ( ! pFnDistanceCloseInit )
		pFnDistanceCloseInit = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.DistanceCloseInit" );

	UUIScene_Now_BaseScene_eventDistanceCloseInit_Parms DistanceCloseInit_Parms;

	this->ProcessEvent ( pFnDistanceCloseInit, &DistanceCloseInit_Parms, NULL );
};

// Function NowGame.UIScene_Now_BaseScene.rightClickUse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            bag                            ( CPF_Parm )
// int                            Slot                           ( CPF_Parm )

bool UUIScene_Now_BaseScene::eventrightClickUse ( int bag, int Slot )
{
	static UFunction* pFnrightClickUse = NULL;

	if ( ! pFnrightClickUse )
		pFnrightClickUse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.rightClickUse" );

	UUIScene_Now_BaseScene_eventrightClickUse_Parms rightClickUse_Parms;
	rightClickUse_Parms.bag = bag;
	rightClickUse_Parms.Slot = Slot;

	this->ProcessEvent ( pFnrightClickUse, &rightClickUse_Parms, NULL );

	return rightClickUse_Parms.ReturnValue;
};

// Function NowGame.UIScene_Now_BaseScene.CheckCoolDown
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_Now_BaseScene::eventCheckCoolDown ( )
{
	static UFunction* pFnCheckCoolDown = NULL;

	if ( ! pFnCheckCoolDown )
		pFnCheckCoolDown = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.CheckCoolDown" );

	UUIScene_Now_BaseScene_eventCheckCoolDown_Parms CheckCoolDown_Parms;

	this->ProcessEvent ( pFnCheckCoolDown, &CheckCoolDown_Parms, NULL );

	return CheckCoolDown_Parms.ReturnValue;
};

// Function NowGame.UIScene_Now_BaseScene.PlayClickSound
// [0x00020002] 
// Parameters infos:

void UUIScene_Now_BaseScene::PlayClickSound ( )
{
	static UFunction* pFnPlayClickSound = NULL;

	if ( ! pFnPlayClickSound )
		pFnPlayClickSound = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.PlayClickSound" );

	UUIScene_Now_BaseScene_execPlayClickSound_Parms PlayClickSound_Parms;

	this->ProcessEvent ( pFnPlayClickSound, &PlayClickSound_Parms, NULL );
};

// Function NowGame.UIScene_Now_BaseScene.CanUiRightClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_Now_BaseScene::CanUiRightClick ( )
{
	static UFunction* pFnCanUiRightClick = NULL;

	if ( ! pFnCanUiRightClick )
		pFnCanUiRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.CanUiRightClick" );

	UUIScene_Now_BaseScene_execCanUiRightClick_Parms CanUiRightClick_Parms;

	this->ProcessEvent ( pFnCanUiRightClick, &CanUiRightClick_Parms, NULL );

	return CanUiRightClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_Now_BaseScene.GetChatTextSize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WhatString                     ( CPF_Parm | CPF_NeedCtorLink )

float UUIScene_Now_BaseScene::GetChatTextSize ( struct FString WhatString )
{
	static UFunction* pFnGetChatTextSize = NULL;

	if ( ! pFnGetChatTextSize )
		pFnGetChatTextSize = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.GetChatTextSize" );

	UUIScene_Now_BaseScene_execGetChatTextSize_Parms GetChatTextSize_Parms;
	memcpy ( &GetChatTextSize_Parms.WhatString, &WhatString, 0xC );

	pFnGetChatTextSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetChatTextSize, &GetChatTextSize_Parms, NULL );

	pFnGetChatTextSize->FunctionFlags |= 0x400;

	return GetChatTextSize_Parms.ReturnValue;
};

// Function NowGame.UIScene_Now_BaseScene.ShiftDown
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_Now_BaseScene::ShiftDown ( )
{
	static UFunction* pFnShiftDown = NULL;

	if ( ! pFnShiftDown )
		pFnShiftDown = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Now_BaseScene.ShiftDown" );

	UUIScene_Now_BaseScene_execShiftDown_Parms ShiftDown_Parms;

	pFnShiftDown->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShiftDown, &ShiftDown_Parms, NULL );

	pFnShiftDown->FunctionFlags |= 0x400;

	return ShiftDown_Parms.ReturnValue;
};

// Function NowGame.UIScene_BlacksmithWindow.Craft
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BlacksmithWindow::Craft ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnCraft = NULL;

	if ( ! pFnCraft )
		pFnCraft = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BlacksmithWindow.Craft" );

	UUIScene_BlacksmithWindow_execCraft_Parms Craft_Parms;
	Craft_Parms.O = O;
	Craft_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCraft, &Craft_Parms, NULL );

	return Craft_Parms.ReturnValue;
};

// Function NowGame.UIScene_BlacksmithWindow.InitRecipes
// [0x00020002] 
// Parameters infos:

void UUIScene_BlacksmithWindow::InitRecipes ( )
{
	static UFunction* pFnInitRecipes = NULL;

	if ( ! pFnInitRecipes )
		pFnInitRecipes = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BlacksmithWindow.InitRecipes" );

	UUIScene_BlacksmithWindow_execInitRecipes_Parms InitRecipes_Parms;

	this->ProcessEvent ( pFnInitRecipes, &InitRecipes_Parms, NULL );
};

// Function NowGame.UIScene_BlacksmithWindow.InitializeButtons
// [0x00020002] 
// Parameters infos:

void UUIScene_BlacksmithWindow::InitializeButtons ( )
{
	static UFunction* pFnInitializeButtons = NULL;

	if ( ! pFnInitializeButtons )
		pFnInitializeButtons = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BlacksmithWindow.InitializeButtons" );

	UUIScene_BlacksmithWindow_execInitializeButtons_Parms InitializeButtons_Parms;

	this->ProcessEvent ( pFnInitializeButtons, &InitializeButtons_Parms, NULL );
};

// Function NowGame.UIScene_BlacksmithWindow.PostUpdateInitialize
// [0x00020002] 
// Parameters infos:

void UUIScene_BlacksmithWindow::PostUpdateInitialize ( )
{
	static UFunction* pFnPostUpdateInitialize = NULL;

	if ( ! pFnPostUpdateInitialize )
		pFnPostUpdateInitialize = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BlacksmithWindow.PostUpdateInitialize" );

	UUIScene_BlacksmithWindow_execPostUpdateInitialize_Parms PostUpdateInitialize_Parms;

	this->ProcessEvent ( pFnPostUpdateInitialize, &PostUpdateInitialize_Parms, NULL );
};

// Function NowGame.UIScene_BlacksmithWindow.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_BlacksmithWindow::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BlacksmithWindow.InitScene" );

	UUIScene_BlacksmithWindow_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_BlacksmithWindow.SendServerMessage
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_BlacksmithWindow::SendServerMessage ( struct FString msg )
{
	static UFunction* pFnSendServerMessage = NULL;

	if ( ! pFnSendServerMessage )
		pFnSendServerMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BlacksmithWindow.SendServerMessage" );

	UUIScene_BlacksmithWindow_execSendServerMessage_Parms SendServerMessage_Parms;
	memcpy ( &SendServerMessage_Parms.msg, &msg, 0xC );

	pFnSendServerMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendServerMessage, &SendServerMessage_Parms, NULL );

	pFnSendServerMessage->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_Books.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Books::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Books.UpdateScene" );

	UUIScene_Books_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Books.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Books::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Books.SceneDeactivated" );

	UUIScene_Books_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Books.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Books::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Books.SceneActivated" );

	UUIScene_Books_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Books.ItemListChanged
// [0x00020002] 
// Parameters infos:
// TArray< struct FString >       ItemData                       ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Books::ItemListChanged ( TArray< struct FString > ItemData )
{
	static UFunction* pFnItemListChanged = NULL;

	if ( ! pFnItemListChanged )
		pFnItemListChanged = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Books.ItemListChanged" );

	UUIScene_Books_execItemListChanged_Parms ItemListChanged_Parms;
	memcpy ( &ItemListChanged_Parms.ItemData, &ItemData, 0xC );

	this->ProcessEvent ( pFnItemListChanged, &ItemListChanged_Parms, NULL );
};

// Function NowGame.UIScene_Books.ResetMyBooks
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Books::eventResetMyBooks ( )
{
	static UFunction* pFnResetMyBooks = NULL;

	if ( ! pFnResetMyBooks )
		pFnResetMyBooks = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Books.ResetMyBooks" );

	UUIScene_Books_eventResetMyBooks_Parms ResetMyBooks_Parms;

	this->ProcessEvent ( pFnResetMyBooks, &ResetMyBooks_Parms, NULL );
};

// Function NowGame.UIScene_Books.UpdateMyBooks
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UContentInfo*            NewIcon                        ( CPF_Parm )
// struct FString                 NewBookName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 NewAuthor                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 NewTime                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 NewSkill                       ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Books::eventUpdateMyBooks ( class UContentInfo* NewIcon, struct FString NewBookName, struct FString NewAuthor, struct FString NewTime, struct FString NewSkill )
{
	static UFunction* pFnUpdateMyBooks = NULL;

	if ( ! pFnUpdateMyBooks )
		pFnUpdateMyBooks = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Books.UpdateMyBooks" );

	UUIScene_Books_eventUpdateMyBooks_Parms UpdateMyBooks_Parms;
	UpdateMyBooks_Parms.NewIcon = NewIcon;
	memcpy ( &UpdateMyBooks_Parms.NewBookName, &NewBookName, 0xC );
	memcpy ( &UpdateMyBooks_Parms.NewAuthor, &NewAuthor, 0xC );
	memcpy ( &UpdateMyBooks_Parms.NewTime, &NewTime, 0xC );
	memcpy ( &UpdateMyBooks_Parms.NewSkill, &NewSkill, 0xC );

	this->ProcessEvent ( pFnUpdateMyBooks, &UpdateMyBooks_Parms, NULL );
};

// Function NowGame.UIScene_Books.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Books::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Books.InitScene" );

	UUIScene_Books_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Books.GetBookInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_Books::GetBookInfo ( )
{
	static UFunction* pFnGetBookInfo = NULL;

	if ( ! pFnGetBookInfo )
		pFnGetBookInfo = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Books.GetBookInfo" );

	UUIScene_Books_execGetBookInfo_Parms GetBookInfo_Parms;

	pFnGetBookInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBookInfo, &GetBookInfo_Parms, NULL );

	pFnGetBookInfo->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_Cooking.UpdateWorkBench
// [0x00020002] 
// Parameters infos:

void UUIScene_Cooking::UpdateWorkBench ( )
{
	static UFunction* pFnUpdateWorkBench = NULL;

	if ( ! pFnUpdateWorkBench )
		pFnUpdateWorkBench = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.UpdateWorkBench" );

	UUIScene_Cooking_execUpdateWorkBench_Parms UpdateWorkBench_Parms;

	this->ProcessEvent ( pFnUpdateWorkBench, &UpdateWorkBench_Parms, NULL );
};

// Function NowGame.UIScene_Cooking.UpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_Cooking::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.UpdatePage" );

	UUIScene_Cooking_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_Cooking.CheckSkills
// [0x00020002] 
// Parameters infos:

void UUIScene_Cooking::CheckSkills ( )
{
	static UFunction* pFnCheckSkills = NULL;

	if ( ! pFnCheckSkills )
		pFnCheckSkills = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.CheckSkills" );

	UUIScene_Cooking_execCheckSkills_Parms CheckSkills_Parms;

	this->ProcessEvent ( pFnCheckSkills, &CheckSkills_Parms, NULL );
};

// Function NowGame.UIScene_Cooking.VerifyItems
// [0x00020002] 
// Parameters infos:

void UUIScene_Cooking::VerifyItems ( )
{
	static UFunction* pFnVerifyItems = NULL;

	if ( ! pFnVerifyItems )
		pFnVerifyItems = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.VerifyItems" );

	UUIScene_Cooking_execVerifyItems_Parms VerifyItems_Parms;

	this->ProcessEvent ( pFnVerifyItems, &VerifyItems_Parms, NULL );
};

// Function NowGame.UIScene_Cooking.UpdateMessage
// [0x00020002] 
// Parameters infos:

void UUIScene_Cooking::UpdateMessage ( )
{
	static UFunction* pFnUpdateMessage = NULL;

	if ( ! pFnUpdateMessage )
		pFnUpdateMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.UpdateMessage" );

	UUIScene_Cooking_execUpdateMessage_Parms UpdateMessage_Parms;

	this->ProcessEvent ( pFnUpdateMessage, &UpdateMessage_Parms, NULL );
};

// Function NowGame.UIScene_Cooking.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Cooking::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.UpdateScene" );

	UUIScene_Cooking_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Cooking.SetToolText
// [0x00020002] 
// Parameters infos:
// struct FString                 Tool                           ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Cooking::SetToolText ( struct FString Tool )
{
	static UFunction* pFnSetToolText = NULL;

	if ( ! pFnSetToolText )
		pFnSetToolText = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.SetToolText" );

	UUIScene_Cooking_execSetToolText_Parms SetToolText_Parms;
	memcpy ( &SetToolText_Parms.Tool, &Tool, 0xC );

	this->ProcessEvent ( pFnSetToolText, &SetToolText_Parms, NULL );
};

// Function NowGame.UIScene_Cooking.SetMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Cooking::SetMessage ( struct FString Text )
{
	static UFunction* pFnSetMessage = NULL;

	if ( ! pFnSetMessage )
		pFnSetMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.SetMessage" );

	UUIScene_Cooking_execSetMessage_Parms SetMessage_Parms;
	memcpy ( &SetMessage_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnSetMessage, &SetMessage_Parms, NULL );
};

// Function NowGame.UIScene_Cooking.IsValidTool
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// TArray< struct FString >       Tools                          ( CPF_Parm | CPF_NeedCtorLink )

bool UUIScene_Cooking::IsValidTool ( TArray< struct FString > Tools )
{
	static UFunction* pFnIsValidTool = NULL;

	if ( ! pFnIsValidTool )
		pFnIsValidTool = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.IsValidTool" );

	UUIScene_Cooking_execIsValidTool_Parms IsValidTool_Parms;
	memcpy ( &IsValidTool_Parms.Tools, &Tools, 0xC );

	this->ProcessEvent ( pFnIsValidTool, &IsValidTool_Parms, NULL );

	return IsValidTool_Parms.ReturnValue;
};

// Function NowGame.UIScene_Cooking.OnOpenContextMenu
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_Cooking::OnOpenContextMenu ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnOpenContextMenu = NULL;

	if ( ! pFnOnOpenContextMenu )
		pFnOnOpenContextMenu = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.OnOpenContextMenu" );

	UUIScene_Cooking_execOnOpenContextMenu_Parms OnOpenContextMenu_Parms;
	OnOpenContextMenu_Parms.Sender = Sender;
	OnOpenContextMenu_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnOpenContextMenu, &OnOpenContextMenu_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnOpenContextMenu_Parms.CustomContextMenu;

	return OnOpenContextMenu_Parms.ReturnValue;
};

// Function NowGame.UIScene_Cooking.OnDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Cooking::OnDragDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnDragDrop = NULL;

	if ( ! pFnOnDragDrop )
		pFnOnDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.OnDragDrop" );

	UUIScene_Cooking_execOnDragDrop_Parms OnDragDrop_Parms;
	OnDragDrop_Parms.Target = Target;
	OnDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnOnDragDrop, &OnDragDrop_Parms, NULL );

	return OnDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_Cooking.OnClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Cooking::OnClick ( class UUIScreenObject* Target, int PlayerIndex )
{
	static UFunction* pFnOnClick = NULL;

	if ( ! pFnOnClick )
		pFnOnClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.OnClick" );

	UUIScene_Cooking_execOnClick_Parms OnClick_Parms;
	OnClick_Parms.Target = Target;
	OnClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClick, &OnClick_Parms, NULL );

	return OnClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_Cooking.VerifyWorkbench
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_Cooking::VerifyWorkbench ( )
{
	static UFunction* pFnVerifyWorkbench = NULL;

	if ( ! pFnVerifyWorkbench )
		pFnVerifyWorkbench = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.VerifyWorkbench" );

	UUIScene_Cooking_execVerifyWorkbench_Parms VerifyWorkbench_Parms;

	this->ProcessEvent ( pFnVerifyWorkbench, &VerifyWorkbench_Parms, NULL );

	return VerifyWorkbench_Parms.ReturnValue;
};

// Function NowGame.UIScene_Cooking.OnCook
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Cooking::OnCook ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnCook = NULL;

	if ( ! pFnOnCook )
		pFnOnCook = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.OnCook" );

	UUIScene_Cooking_execOnCook_Parms OnCook_Parms;
	OnCook_Parms.EventObject = EventObject;
	OnCook_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnCook, &OnCook_Parms, NULL );

	return OnCook_Parms.ReturnValue;
};

// Function NowGame.UIScene_Cooking.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Cooking::OnClose ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.OnClose" );

	UUIScene_Cooking_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.EventObject = EventObject;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_Cooking.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Cooking::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.SceneDeactivated" );

	UUIScene_Cooking_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Cooking.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Cooking::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.SceneActivated" );

	UUIScene_Cooking_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Cooking.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Cooking::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.InitScene" );

	UUIScene_Cooking_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Cooking.DoCook
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_Cooking::DoCook ( )
{
	static UFunction* pFnDoCook = NULL;

	if ( ! pFnDoCook )
		pFnDoCook = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Cooking.DoCook" );

	UUIScene_Cooking_execDoCook_Parms DoCook_Parms;

	pFnDoCook->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoCook, &DoCook_Parms, NULL );

	pFnDoCook->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_CreationBase.CreateClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_CreationBase::CreateClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCreateClicked = NULL;

	if ( ! pFnCreateClicked )
		pFnCreateClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CreationBase.CreateClicked" );

	UUIScene_CreationBase_execCreateClicked_Parms CreateClicked_Parms;
	CreateClicked_Parms.EventObject = EventObject;
	CreateClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateClicked, &CreateClicked_Parms, NULL );

	return CreateClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_CreationBase.DoneClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_CreationBase::DoneClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnDoneClicked = NULL;

	if ( ! pFnDoneClicked )
		pFnDoneClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CreationBase.DoneClicked" );

	UUIScene_CreationBase_execDoneClicked_Parms DoneClicked_Parms;
	DoneClicked_Parms.EventObject = EventObject;
	DoneClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnDoneClicked, &DoneClicked_Parms, NULL );

	return DoneClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_CreationBase.GetItemName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UUIScene_CreationBase::GetItemName ( )
{
	static UFunction* pFnGetItemName = NULL;

	if ( ! pFnGetItemName )
		pFnGetItemName = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CreationBase.GetItemName" );

	UUIScene_CreationBase_execGetItemName_Parms GetItemName_Parms;

	this->ProcessEvent ( pFnGetItemName, &GetItemName_Parms, NULL );

	return GetItemName_Parms.ReturnValue;
};

// Function NowGame.UIScene_CreationBase.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_CreationBase::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CreationBase.InitScene" );

	UUIScene_CreationBase_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_ArmorCreation.CreateClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreation::CreateClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCreateClicked = NULL;

	if ( ! pFnCreateClicked )
		pFnCreateClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreation.CreateClicked" );

	UUIScene_ArmorCreation_execCreateClicked_Parms CreateClicked_Parms;
	CreateClicked_Parms.EventObject = EventObject;
	CreateClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateClicked, &CreateClicked_Parms, NULL );

	return CreateClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreation.BackPageClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreation::BackPageClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackPageClicked = NULL;

	if ( ! pFnBackPageClicked )
		pFnBackPageClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreation.BackPageClicked" );

	UUIScene_ArmorCreation_execBackPageClicked_Parms BackPageClicked_Parms;
	BackPageClicked_Parms.EventObject = EventObject;
	BackPageClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackPageClicked, &BackPageClicked_Parms, NULL );

	return BackPageClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreation.NextPageClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreation::NextPageClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextPageClicked = NULL;

	if ( ! pFnNextPageClicked )
		pFnNextPageClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreation.NextPageClicked" );

	UUIScene_ArmorCreation_execNextPageClicked_Parms NextPageClicked_Parms;
	NextPageClicked_Parms.EventObject = EventObject;
	NextPageClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextPageClicked, &NextPageClicked_Parms, NULL );

	return NextPageClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreation.BackValueClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreation::BackValueClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackValueClicked = NULL;

	if ( ! pFnBackValueClicked )
		pFnBackValueClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreation.BackValueClicked" );

	UUIScene_ArmorCreation_execBackValueClicked_Parms BackValueClicked_Parms;
	BackValueClicked_Parms.EventObject = EventObject;
	BackValueClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackValueClicked, &BackValueClicked_Parms, NULL );

	return BackValueClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreation.NextValueClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreation::NextValueClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextValueClicked = NULL;

	if ( ! pFnNextValueClicked )
		pFnNextValueClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreation.NextValueClicked" );

	UUIScene_ArmorCreation_execNextValueClicked_Parms NextValueClicked_Parms;
	NextValueClicked_Parms.EventObject = EventObject;
	NextValueClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextValueClicked, &NextValueClicked_Parms, NULL );

	return NextValueClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreation.BackClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreation::BackClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackClicked = NULL;

	if ( ! pFnBackClicked )
		pFnBackClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreation.BackClicked" );

	UUIScene_ArmorCreation_execBackClicked_Parms BackClicked_Parms;
	BackClicked_Parms.EventObject = EventObject;
	BackClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackClicked, &BackClicked_Parms, NULL );

	return BackClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreation.GetValidVisibleArmorMaterial
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Current                        ( CPF_Parm )
// unsigned long                  Backwards                      ( CPF_Parm )

int UUIScene_ArmorCreation::GetValidVisibleArmorMaterial ( int Current, unsigned long Backwards )
{
	static UFunction* pFnGetValidVisibleArmorMaterial = NULL;

	if ( ! pFnGetValidVisibleArmorMaterial )
		pFnGetValidVisibleArmorMaterial = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreation.GetValidVisibleArmorMaterial" );

	UUIScene_ArmorCreation_execGetValidVisibleArmorMaterial_Parms GetValidVisibleArmorMaterial_Parms;
	GetValidVisibleArmorMaterial_Parms.Current = Current;
	GetValidVisibleArmorMaterial_Parms.Backwards = Backwards;

	this->ProcessEvent ( pFnGetValidVisibleArmorMaterial, &GetValidVisibleArmorMaterial_Parms, NULL );

	return GetValidVisibleArmorMaterial_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreation.GetArmorMaterialTypeForArmorType
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            inArmorType                    ( CPF_Parm )

int UUIScene_ArmorCreation::GetArmorMaterialTypeForArmorType ( int inArmorType )
{
	static UFunction* pFnGetArmorMaterialTypeForArmorType = NULL;

	if ( ! pFnGetArmorMaterialTypeForArmorType )
		pFnGetArmorMaterialTypeForArmorType = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreation.GetArmorMaterialTypeForArmorType" );

	UUIScene_ArmorCreation_execGetArmorMaterialTypeForArmorType_Parms GetArmorMaterialTypeForArmorType_Parms;
	GetArmorMaterialTypeForArmorType_Parms.inArmorType = inArmorType;

	this->ProcessEvent ( pFnGetArmorMaterialTypeForArmorType, &GetArmorMaterialTypeForArmorType_Parms, NULL );

	return GetArmorMaterialTypeForArmorType_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreation.GetValidArmorPiece
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            CurrentPiece                   ( CPF_Parm )
// unsigned long                  Backwards                      ( CPF_Parm )

int UUIScene_ArmorCreation::GetValidArmorPiece ( int CurrentPiece, unsigned long Backwards )
{
	static UFunction* pFnGetValidArmorPiece = NULL;

	if ( ! pFnGetValidArmorPiece )
		pFnGetValidArmorPiece = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreation.GetValidArmorPiece" );

	UUIScene_ArmorCreation_execGetValidArmorPiece_Parms GetValidArmorPiece_Parms;
	GetValidArmorPiece_Parms.CurrentPiece = CurrentPiece;
	GetValidArmorPiece_Parms.Backwards = Backwards;

	pFnGetValidArmorPiece->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetValidArmorPiece, &GetValidArmorPiece_Parms, NULL );

	pFnGetValidArmorPiece->FunctionFlags |= 0x400;

	return GetValidArmorPiece_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreation.NextClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreation::NextClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextClicked = NULL;

	if ( ! pFnNextClicked )
		pFnNextClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreation.NextClicked" );

	UUIScene_ArmorCreation_execNextClicked_Parms NextClicked_Parms;
	NextClicked_Parms.EventObject = EventObject;
	NextClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextClicked, &NextClicked_Parms, NULL );

	return NextClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreation.AbortClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreation::AbortClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAbortClicked = NULL;

	if ( ! pFnAbortClicked )
		pFnAbortClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreation.AbortClicked" );

	UUIScene_ArmorCreation_execAbortClicked_Parms AbortClicked_Parms;
	AbortClicked_Parms.EventObject = EventObject;
	AbortClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAbortClicked, &AbortClicked_Parms, NULL );

	return AbortClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreation.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_ArmorCreation::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreation.PostInitUpdate" );

	UUIScene_ArmorCreation_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_ArmorCreation.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_ArmorCreation::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreation.InitScene" );

	UUIScene_ArmorCreation_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Deva.CheckLastInputTime
// [0x00020000] 
// Parameters infos:

void UUIScene_Deva::CheckLastInputTime ( )
{
	static UFunction* pFnCheckLastInputTime = NULL;

	if ( ! pFnCheckLastInputTime )
		pFnCheckLastInputTime = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.CheckLastInputTime" );

	UUIScene_Deva_execCheckLastInputTime_Parms CheckLastInputTime_Parms;

	this->ProcessEvent ( pFnCheckLastInputTime, &CheckLastInputTime_Parms, NULL );
};

// Function NowGame.UIScene_Deva.SendPing
// [0x00020000] 
// Parameters infos:

void UUIScene_Deva::SendPing ( )
{
	static UFunction* pFnSendPing = NULL;

	if ( ! pFnSendPing )
		pFnSendPing = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.SendPing" );

	UUIScene_Deva_execSendPing_Parms SendPing_Parms;

	this->ProcessEvent ( pFnSendPing, &SendPing_Parms, NULL );
};

// Function NowGame.UIScene_Deva.TouchLastInputTime
// [0x00020000] 
// Parameters infos:

void UUIScene_Deva::TouchLastInputTime ( )
{
	static UFunction* pFnTouchLastInputTime = NULL;

	if ( ! pFnTouchLastInputTime )
		pFnTouchLastInputTime = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.TouchLastInputTime" );

	UUIScene_Deva_execTouchLastInputTime_Parms TouchLastInputTime_Parms;

	this->ProcessEvent ( pFnTouchLastInputTime, &TouchLastInputTime_Parms, NULL );
};

// Function NowGame.UIScene_Deva.LoadCharacters
// [0x00020002] 
// Parameters infos:
// int                            Num                            ( CPF_Parm )

void UUIScene_Deva::LoadCharacters ( int Num )
{
	static UFunction* pFnLoadCharacters = NULL;

	if ( ! pFnLoadCharacters )
		pFnLoadCharacters = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.LoadCharacters" );

	UUIScene_Deva_execLoadCharacters_Parms LoadCharacters_Parms;
	LoadCharacters_Parms.Num = Num;

	this->ProcessEvent ( pFnLoadCharacters, &LoadCharacters_Parms, NULL );
};

// Function NowGame.UIScene_Deva.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Deva::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.UpdateScene" );

	UUIScene_Deva_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Deva.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Deva::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.SceneDeactivated" );

	UUIScene_Deva_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Deva.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Deva::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.SceneActivated" );

	UUIScene_Deva_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Deva.GetSubSystem
// [0x00020002] 
// Parameters infos:
// class UOnlineSubsystemNowGame* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UOnlineSubsystemNowGame* UUIScene_Deva::GetSubSystem ( )
{
	static UFunction* pFnGetSubSystem = NULL;

	if ( ! pFnGetSubSystem )
		pFnGetSubSystem = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.GetSubSystem" );

	UUIScene_Deva_execGetSubSystem_Parms GetSubSystem_Parms;

	this->ProcessEvent ( pFnGetSubSystem, &GetSubSystem_Parms, NULL );

	return GetSubSystem_Parms.ReturnValue;
};

// Function NowGame.UIScene_Deva.OnLogout
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Deva::OnLogout ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnLogout = NULL;

	if ( ! pFnOnLogout )
		pFnOnLogout = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.OnLogout" );

	UUIScene_Deva_execOnLogout_Parms OnLogout_Parms;
	OnLogout_Parms.O = O;
	OnLogout_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnLogout, &OnLogout_Parms, NULL );

	return OnLogout_Parms.ReturnValue;
};

// Function NowGame.UIScene_Deva.EnterGameClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Deva::EnterGameClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnEnterGameClicked = NULL;

	if ( ! pFnEnterGameClicked )
		pFnEnterGameClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.EnterGameClicked" );

	UUIScene_Deva_execEnterGameClicked_Parms EnterGameClicked_Parms;
	EnterGameClicked_Parms.EventObject = EventObject;
	EnterGameClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnEnterGameClicked, &EnterGameClicked_Parms, NULL );

	return EnterGameClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Deva.OnCreate
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Deva::OnCreate ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnCreate = NULL;

	if ( ! pFnOnCreate )
		pFnOnCreate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.OnCreate" );

	UUIScene_Deva_execOnCreate_Parms OnCreate_Parms;
	OnCreate_Parms.EventObject = EventObject;
	OnCreate_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnCreate, &OnCreate_Parms, NULL );

	return OnCreate_Parms.ReturnValue;
};

// Function NowGame.UIScene_Deva.OnCharacterSelect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Deva::OnCharacterSelect ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnCharacterSelect = NULL;

	if ( ! pFnOnCharacterSelect )
		pFnOnCharacterSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.OnCharacterSelect" );

	UUIScene_Deva_execOnCharacterSelect_Parms OnCharacterSelect_Parms;
	OnCharacterSelect_Parms.EventObject = EventObject;
	OnCharacterSelect_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnCharacterSelect, &OnCharacterSelect_Parms, NULL );

	return OnCharacterSelect_Parms.ReturnValue;
};

// Function NowGame.UIScene_Deva.OnDeleteCharacterNok
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Deva::OnDeleteCharacterNok ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnDeleteCharacterNok = NULL;

	if ( ! pFnOnDeleteCharacterNok )
		pFnOnDeleteCharacterNok = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.OnDeleteCharacterNok" );

	UUIScene_Deva_execOnDeleteCharacterNok_Parms OnDeleteCharacterNok_Parms;
	OnDeleteCharacterNok_Parms.EventObject = EventObject;
	OnDeleteCharacterNok_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnDeleteCharacterNok, &OnDeleteCharacterNok_Parms, NULL );

	return OnDeleteCharacterNok_Parms.ReturnValue;
};

// Function NowGame.UIScene_Deva.OnDeleteCharacterOk
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Deva::OnDeleteCharacterOk ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnDeleteCharacterOk = NULL;

	if ( ! pFnOnDeleteCharacterOk )
		pFnOnDeleteCharacterOk = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.OnDeleteCharacterOk" );

	UUIScene_Deva_execOnDeleteCharacterOk_Parms OnDeleteCharacterOk_Parms;
	OnDeleteCharacterOk_Parms.EventObject = EventObject;
	OnDeleteCharacterOk_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnDeleteCharacterOk, &OnDeleteCharacterOk_Parms, NULL );

	return OnDeleteCharacterOk_Parms.ReturnValue;
};

// Function NowGame.UIScene_Deva.OnDeleteCharacter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Deva::OnDeleteCharacter ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnDeleteCharacter = NULL;

	if ( ! pFnOnDeleteCharacter )
		pFnOnDeleteCharacter = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.OnDeleteCharacter" );

	UUIScene_Deva_execOnDeleteCharacter_Parms OnDeleteCharacter_Parms;
	OnDeleteCharacter_Parms.EventObject = EventObject;
	OnDeleteCharacter_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnDeleteCharacter, &OnDeleteCharacter_Parms, NULL );

	return OnDeleteCharacter_Parms.ReturnValue;
};

// Function NowGame.UIScene_Deva.OnMessageboxCancel
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Deva::OnMessageboxCancel ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnMessageboxCancel = NULL;

	if ( ! pFnOnMessageboxCancel )
		pFnOnMessageboxCancel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.OnMessageboxCancel" );

	UUIScene_Deva_execOnMessageboxCancel_Parms OnMessageboxCancel_Parms;
	OnMessageboxCancel_Parms.EventObject = EventObject;
	OnMessageboxCancel_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnMessageboxCancel, &OnMessageboxCancel_Parms, NULL );

	return OnMessageboxCancel_Parms.ReturnValue;
};

// Function NowGame.UIScene_Deva.OnMessageboxOk
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Deva::OnMessageboxOk ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnMessageboxOk = NULL;

	if ( ! pFnOnMessageboxOk )
		pFnOnMessageboxOk = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.OnMessageboxOk" );

	UUIScene_Deva_execOnMessageboxOk_Parms OnMessageboxOk_Parms;
	OnMessageboxOk_Parms.EventObject = EventObject;
	OnMessageboxOk_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnMessageboxOk, &OnMessageboxOk_Parms, NULL );

	return OnMessageboxOk_Parms.ReturnValue;
};

// Function NowGame.UIScene_Deva.OnMessageboxYes
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Deva::OnMessageboxYes ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnMessageboxYes = NULL;

	if ( ! pFnOnMessageboxYes )
		pFnOnMessageboxYes = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.OnMessageboxYes" );

	UUIScene_Deva_execOnMessageboxYes_Parms OnMessageboxYes_Parms;
	OnMessageboxYes_Parms.EventObject = EventObject;
	OnMessageboxYes_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnMessageboxYes, &OnMessageboxYes_Parms, NULL );

	return OnMessageboxYes_Parms.ReturnValue;
};

// Function NowGame.UIScene_Deva.OnGenericOK
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Deva::OnGenericOK ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnGenericOK = NULL;

	if ( ! pFnOnGenericOK )
		pFnOnGenericOK = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.OnGenericOK" );

	UUIScene_Deva_execOnGenericOK_Parms OnGenericOK_Parms;
	OnGenericOK_Parms.EventObject = EventObject;
	OnGenericOK_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnGenericOK, &OnGenericOK_Parms, NULL );

	return OnGenericOK_Parms.ReturnValue;
};

// Function NowGame.UIScene_Deva.OnOptionsClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Deva::OnOptionsClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnOptionsClicked = NULL;

	if ( ! pFnOnOptionsClicked )
		pFnOnOptionsClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.OnOptionsClicked" );

	UUIScene_Deva_execOnOptionsClicked_Parms OnOptionsClicked_Parms;
	OnOptionsClicked_Parms.EventObject = EventObject;
	OnOptionsClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnOptionsClicked, &OnOptionsClicked_Parms, NULL );

	return OnOptionsClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Deva.CharacterTimedOut
// [0x00020002] 
// Parameters infos:

void UUIScene_Deva::CharacterTimedOut ( )
{
	static UFunction* pFnCharacterTimedOut = NULL;

	if ( ! pFnCharacterTimedOut )
		pFnCharacterTimedOut = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.CharacterTimedOut" );

	UUIScene_Deva_execCharacterTimedOut_Parms CharacterTimedOut_Parms;

	this->ProcessEvent ( pFnCharacterTimedOut, &CharacterTimedOut_Parms, NULL );
};

// Function NowGame.UIScene_Deva.CharLoadedTimerUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_Deva::CharLoadedTimerUpdate ( )
{
	static UFunction* pFnCharLoadedTimerUpdate = NULL;

	if ( ! pFnCharLoadedTimerUpdate )
		pFnCharLoadedTimerUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.CharLoadedTimerUpdate" );

	UUIScene_Deva_execCharLoadedTimerUpdate_Parms CharLoadedTimerUpdate_Parms;

	this->ProcessEvent ( pFnCharLoadedTimerUpdate, &CharLoadedTimerUpdate_Parms, NULL );
};

// Function NowGame.UIScene_Deva.CharactersLoaded
// [0x00020002] 
// Parameters infos:

void UUIScene_Deva::CharactersLoaded ( )
{
	static UFunction* pFnCharactersLoaded = NULL;

	if ( ! pFnCharactersLoaded )
		pFnCharactersLoaded = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.CharactersLoaded" );

	UUIScene_Deva_execCharactersLoaded_Parms CharactersLoaded_Parms;

	this->ProcessEvent ( pFnCharactersLoaded, &CharactersLoaded_Parms, NULL );
};

// Function NowGame.UIScene_Deva.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Deva::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.InitScene" );

	UUIScene_Deva_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Deva.AvatarSelect
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 avatarName                     ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Deva::AvatarSelect ( struct FString avatarName )
{
	static UFunction* pFnAvatarSelect = NULL;

	if ( ! pFnAvatarSelect )
		pFnAvatarSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.AvatarSelect" );

	UUIScene_Deva_execAvatarSelect_Parms AvatarSelect_Parms;
	memcpy ( &AvatarSelect_Parms.avatarName, &avatarName, 0xC );

	pFnAvatarSelect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAvatarSelect, &AvatarSelect_Parms, NULL );

	pFnAvatarSelect->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_Deva.DeleteCharacter
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 avatarName                     ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Deva::DeleteCharacter ( struct FString avatarName )
{
	static UFunction* pFnDeleteCharacter = NULL;

	if ( ! pFnDeleteCharacter )
		pFnDeleteCharacter = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.DeleteCharacter" );

	UUIScene_Deva_execDeleteCharacter_Parms DeleteCharacter_Parms;
	memcpy ( &DeleteCharacter_Parms.avatarName, &avatarName, 0xC );

	pFnDeleteCharacter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeleteCharacter, &DeleteCharacter_Parms, NULL );

	pFnDeleteCharacter->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_Deva.LoadCurrentSelectedMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Selection                      ( CPF_Parm )

void UUIScene_Deva::LoadCurrentSelectedMesh ( int Selection )
{
	static UFunction* pFnLoadCurrentSelectedMesh = NULL;

	if ( ! pFnLoadCurrentSelectedMesh )
		pFnLoadCurrentSelectedMesh = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Deva.LoadCurrentSelectedMesh" );

	UUIScene_Deva_execLoadCurrentSelectedMesh_Parms LoadCurrentSelectedMesh_Parms;
	LoadCurrentSelectedMesh_Parms.Selection = Selection;

	pFnLoadCurrentSelectedMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadCurrentSelectedMesh, &LoadCurrentSelectedMesh_Parms, NULL );

	pFnLoadCurrentSelectedMesh->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_Finnish.MessageCancel
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Finnish::MessageCancel ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnMessageCancel = NULL;

	if ( ! pFnMessageCancel )
		pFnMessageCancel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.MessageCancel" );

	UUIScene_Finnish_execMessageCancel_Parms MessageCancel_Parms;
	MessageCancel_Parms.O = O;
	MessageCancel_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnMessageCancel, &MessageCancel_Parms, NULL );

	return MessageCancel_Parms.ReturnValue;
};

// Function NowGame.UIScene_Finnish.ChooseLocation
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Finnish::ChooseLocation ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnChooseLocation = NULL;

	if ( ! pFnChooseLocation )
		pFnChooseLocation = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.ChooseLocation" );

	UUIScene_Finnish_execChooseLocation_Parms ChooseLocation_Parms;
	ChooseLocation_Parms.O = O;
	ChooseLocation_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnChooseLocation, &ChooseLocation_Parms, NULL );

	return ChooseLocation_Parms.ReturnValue;
};

// Function NowGame.UIScene_Finnish.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Finnish::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.UpdateScene" );

	UUIScene_Finnish_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Finnish.CharacterUpdate
// [0x00020002] 
// Parameters infos:
// int                            Num                            ( CPF_Parm )

void UUIScene_Finnish::CharacterUpdate ( int Num )
{
	static UFunction* pFnCharacterUpdate = NULL;

	if ( ! pFnCharacterUpdate )
		pFnCharacterUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.CharacterUpdate" );

	UUIScene_Finnish_execCharacterUpdate_Parms CharacterUpdate_Parms;
	CharacterUpdate_Parms.Num = Num;

	this->ProcessEvent ( pFnCharacterUpdate, &CharacterUpdate_Parms, NULL );
};

// Function NowGame.UIScene_Finnish.OnNameCompleat
// [0x00020002] 
// Parameters infos:
// unsigned long                  NameAvialable                  ( CPF_Parm )

void UUIScene_Finnish::OnNameCompleat ( unsigned long NameAvialable )
{
	static UFunction* pFnOnNameCompleat = NULL;

	if ( ! pFnOnNameCompleat )
		pFnOnNameCompleat = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.OnNameCompleat" );

	UUIScene_Finnish_execOnNameCompleat_Parms OnNameCompleat_Parms;
	OnNameCompleat_Parms.NameAvialable = NameAvialable;

	this->ProcessEvent ( pFnOnNameCompleat, &OnNameCompleat_Parms, NULL );
};

// Function NowGame.UIScene_Finnish.OnBack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Finnish::OnBack ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnBack = NULL;

	if ( ! pFnOnBack )
		pFnOnBack = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.OnBack" );

	UUIScene_Finnish_execOnBack_Parms OnBack_Parms;
	OnBack_Parms.EventObject = EventObject;
	OnBack_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnBack, &OnBack_Parms, NULL );

	return OnBack_Parms.ReturnValue;
};

// Function NowGame.UIScene_Finnish.OnExit
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Finnish::OnExit ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnExit = NULL;

	if ( ! pFnOnExit )
		pFnOnExit = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.OnExit" );

	UUIScene_Finnish_execOnExit_Parms OnExit_Parms;
	OnExit_Parms.EventObject = EventObject;
	OnExit_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnExit, &OnExit_Parms, NULL );

	return OnExit_Parms.ReturnValue;
};

// Function NowGame.UIScene_Finnish.OnSave
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Finnish::OnSave ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSave = NULL;

	if ( ! pFnOnSave )
		pFnOnSave = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.OnSave" );

	UUIScene_Finnish_execOnSave_Parms OnSave_Parms;
	OnSave_Parms.EventObject = EventObject;
	OnSave_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSave, &OnSave_Parms, NULL );

	return OnSave_Parms.ReturnValue;
};

// Function NowGame.UIScene_Finnish.OnEnterGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Finnish::OnEnterGame ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnEnterGame = NULL;

	if ( ! pFnOnEnterGame )
		pFnOnEnterGame = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.OnEnterGame" );

	UUIScene_Finnish_execOnEnterGame_Parms OnEnterGame_Parms;
	OnEnterGame_Parms.EventObject = EventObject;
	OnEnterGame_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnEnterGame, &OnEnterGame_Parms, NULL );

	return OnEnterGame_Parms.ReturnValue;
};

// Function NowGame.UIScene_Finnish.ValidateNames
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_Finnish::ValidateNames ( )
{
	static UFunction* pFnValidateNames = NULL;

	if ( ! pFnValidateNames )
		pFnValidateNames = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.ValidateNames" );

	UUIScene_Finnish_execValidateNames_Parms ValidateNames_Parms;

	this->ProcessEvent ( pFnValidateNames, &ValidateNames_Parms, NULL );

	return ValidateNames_Parms.ReturnValue;
};

// Function NowGame.UIScene_Finnish.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Finnish::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.SceneDeactivated" );

	UUIScene_Finnish_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Finnish.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Finnish::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.SceneActivated" );

	UUIScene_Finnish_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Finnish.ValidateName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 avatarName                     ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Finnish::ValidateName ( struct FString avatarName )
{
	static UFunction* pFnValidateName = NULL;

	if ( ! pFnValidateName )
		pFnValidateName = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.ValidateName" );

	UUIScene_Finnish_execValidateName_Parms ValidateName_Parms;
	memcpy ( &ValidateName_Parms.avatarName, &avatarName, 0xC );

	pFnValidateName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnValidateName, &ValidateName_Parms, NULL );

	pFnValidateName->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_Finnish.AvatarSelect
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 avatarName                     ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Finnish::AvatarSelect ( struct FString avatarName )
{
	static UFunction* pFnAvatarSelect = NULL;

	if ( ! pFnAvatarSelect )
		pFnAvatarSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.AvatarSelect" );

	UUIScene_Finnish_execAvatarSelect_Parms AvatarSelect_Parms;
	memcpy ( &AvatarSelect_Parms.avatarName, &avatarName, 0xC );

	pFnAvatarSelect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAvatarSelect, &AvatarSelect_Parms, NULL );

	pFnAvatarSelect->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_Finnish.CreateCaracter
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_Finnish::CreateCaracter ( )
{
	static UFunction* pFnCreateCaracter = NULL;

	if ( ! pFnCreateCaracter )
		pFnCreateCaracter = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.CreateCaracter" );

	UUIScene_Finnish_execCreateCaracter_Parms CreateCaracter_Parms;

	pFnCreateCaracter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateCaracter, &CreateCaracter_Parms, NULL );

	pFnCreateCaracter->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_Finnish.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Finnish::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Finnish.InitScene" );

	UUIScene_Finnish_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_FishingCombat.LockEquipment
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_FishingCombat::LockEquipment ( )
{
	static UFunction* pFnLockEquipment = NULL;

	if ( ! pFnLockEquipment )
		pFnLockEquipment = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_FishingCombat.LockEquipment" );

	UUIScene_FishingCombat_execLockEquipment_Parms LockEquipment_Parms;

	this->ProcessEvent ( pFnLockEquipment, &LockEquipment_Parms, NULL );

	return LockEquipment_Parms.ReturnValue;
};

// Function NowGame.UIScene_FishingCombat.UnLockEquipment
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_FishingCombat::UnLockEquipment ( )
{
	static UFunction* pFnUnLockEquipment = NULL;

	if ( ! pFnUnLockEquipment )
		pFnUnLockEquipment = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_FishingCombat.UnLockEquipment" );

	UUIScene_FishingCombat_execUnLockEquipment_Parms UnLockEquipment_Parms;

	this->ProcessEvent ( pFnUnLockEquipment, &UnLockEquipment_Parms, NULL );

	return UnLockEquipment_Parms.ReturnValue;
};

// Function NowGame.UIScene_FishingCombat.GotFishEquipment
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_FishingCombat::GotFishEquipment ( )
{
	static UFunction* pFnGotFishEquipment = NULL;

	if ( ! pFnGotFishEquipment )
		pFnGotFishEquipment = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_FishingCombat.GotFishEquipment" );

	UUIScene_FishingCombat_execGotFishEquipment_Parms GotFishEquipment_Parms;

	this->ProcessEvent ( pFnGotFishEquipment, &GotFishEquipment_Parms, NULL );

	return GotFishEquipment_Parms.ReturnValue;
};

// Function NowGame.UIScene_FishingCombat.OnSlotDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_FishingCombat::OnSlotDragDrop ( class UUIScreenObject* EventObject, class UUIScreenObject* Source )
{
	static UFunction* pFnOnSlotDragDrop = NULL;

	if ( ! pFnOnSlotDragDrop )
		pFnOnSlotDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_FishingCombat.OnSlotDragDrop" );

	UUIScene_FishingCombat_execOnSlotDragDrop_Parms OnSlotDragDrop_Parms;
	OnSlotDragDrop_Parms.EventObject = EventObject;
	OnSlotDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnOnSlotDragDrop, &OnSlotDragDrop_Parms, NULL );

	return OnSlotDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_FishingCombat.OnSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_FishingCombat::OnSlotClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSlotClicked = NULL;

	if ( ! pFnOnSlotClicked )
		pFnOnSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_FishingCombat.OnSlotClicked" );

	UUIScene_FishingCombat_execOnSlotClicked_Parms OnSlotClicked_Parms;
	OnSlotClicked_Parms.EventObject = EventObject;
	OnSlotClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSlotClicked, &OnSlotClicked_Parms, NULL );

	return OnSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_FishingCombat.OnClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_FishingCombat::OnClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClicked = NULL;

	if ( ! pFnOnClicked )
		pFnOnClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_FishingCombat.OnClicked" );

	UUIScene_FishingCombat_execOnClicked_Parms OnClicked_Parms;
	OnClicked_Parms.EventObject = EventObject;
	OnClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClicked, &OnClicked_Parms, NULL );

	return OnClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_FishingCombat.AddItem
// [0x00020002] 
// Parameters infos:
// class UUIScreenObject*         EventObject                    ( CPF_Parm )

void UUIScene_FishingCombat::AddItem ( class UUIScreenObject* EventObject )
{
	static UFunction* pFnAddItem = NULL;

	if ( ! pFnAddItem )
		pFnAddItem = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_FishingCombat.AddItem" );

	UUIScene_FishingCombat_execAddItem_Parms AddItem_Parms;
	AddItem_Parms.EventObject = EventObject;

	this->ProcessEvent ( pFnAddItem, &AddItem_Parms, NULL );
};

// Function NowGame.UIScene_FishingCombat.ItemListChanged
// [0x00020002] 
// Parameters infos:
// TArray< struct FString >       ItemData                       ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_FishingCombat::ItemListChanged ( TArray< struct FString > ItemData )
{
	static UFunction* pFnItemListChanged = NULL;

	if ( ! pFnItemListChanged )
		pFnItemListChanged = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_FishingCombat.ItemListChanged" );

	UUIScene_FishingCombat_execItemListChanged_Parms ItemListChanged_Parms;
	memcpy ( &ItemListChanged_Parms.ItemData, &ItemData, 0xC );

	this->ProcessEvent ( pFnItemListChanged, &ItemListChanged_Parms, NULL );
};

// Function NowGame.UIScene_FishingCombat.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_FishingCombat::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_FishingCombat.SceneDeactivated" );

	UUIScene_FishingCombat_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_FishingCombat.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_FishingCombat::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_FishingCombat.SceneActivated" );

	UUIScene_FishingCombat_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_FishingCombat.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_FishingCombat::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_FishingCombat.InitScene" );

	UUIScene_FishingCombat_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_GuildCreateNew.FinishedCreatingGuild
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildCreateNew::eventFinishedCreatingGuild ( )
{
	static UFunction* pFnFinishedCreatingGuild = NULL;

	if ( ! pFnFinishedCreatingGuild )
		pFnFinishedCreatingGuild = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildCreateNew.FinishedCreatingGuild" );

	UUIScene_GuildCreateNew_eventFinishedCreatingGuild_Parms FinishedCreatingGuild_Parms;

	this->ProcessEvent ( pFnFinishedCreatingGuild, &FinishedCreatingGuild_Parms, NULL );
};

// Function NowGame.UIScene_GuildCreateNew.CreateGuild
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildCreateNew::CreateGuild ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnCreateGuild = NULL;

	if ( ! pFnCreateGuild )
		pFnCreateGuild = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildCreateNew.CreateGuild" );

	UUIScene_GuildCreateNew_execCreateGuild_Parms CreateGuild_Parms;
	CreateGuild_Parms.O = O;
	CreateGuild_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateGuild, &CreateGuild_Parms, NULL );

	return CreateGuild_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildCreateNew.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildCreateNew::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildCreateNew.SceneDeactivated" );

	UUIScene_GuildCreateNew_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_GuildCreateNew.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_GuildCreateNew::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildCreateNew.SceneActivated" );

	UUIScene_GuildCreateNew_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_GuildCreateNew.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildCreateNew::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildCreateNew.InitScene" );

	UUIScene_GuildCreateNew_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_GuildCreateNew.getPlayerHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerHouse* UUIScene_GuildCreateNew::getPlayerHouse ( )
{
	static UFunction* pFngetPlayerHouse = NULL;

	if ( ! pFngetPlayerHouse )
		pFngetPlayerHouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildCreateNew.getPlayerHouse" );

	UUIScene_GuildCreateNew_execgetPlayerHouse_Parms getPlayerHouse_Parms;

	this->ProcessEvent ( pFngetPlayerHouse, &getPlayerHouse_Parms, NULL );

	return getPlayerHouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildCreateNew.SendServerMessage
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_GuildCreateNew::SendServerMessage ( struct FString msg )
{
	static UFunction* pFnSendServerMessage = NULL;

	if ( ! pFnSendServerMessage )
		pFnSendServerMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildCreateNew.SendServerMessage" );

	UUIScene_GuildCreateNew_execSendServerMessage_Parms SendServerMessage_Parms;
	memcpy ( &SendServerMessage_Parms.msg, &msg, 0xC );

	pFnSendServerMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendServerMessage, &SendServerMessage_Parms, NULL );

	pFnSendServerMessage->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_GuildCreateNew.ClientAvatarUpdated
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FPointer                pClient                        ( CPF_Parm )
// struct FPointer                pAvatar                        ( CPF_Parm )
// TArray< struct FPointer >      tParams                        ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_GuildCreateNew::ClientAvatarUpdated ( struct FPointer pClient, struct FPointer pAvatar, TArray< struct FPointer > tParams )
{
	static UFunction* pFnClientAvatarUpdated = NULL;

	if ( ! pFnClientAvatarUpdated )
		pFnClientAvatarUpdated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildCreateNew.ClientAvatarUpdated" );

	UUIScene_GuildCreateNew_execClientAvatarUpdated_Parms ClientAvatarUpdated_Parms;
	memcpy ( &ClientAvatarUpdated_Parms.pClient, &pClient, 0x4 );
	memcpy ( &ClientAvatarUpdated_Parms.pAvatar, &pAvatar, 0x4 );
	memcpy ( &ClientAvatarUpdated_Parms.tParams, &tParams, 0xC );

	pFnClientAvatarUpdated->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientAvatarUpdated, &ClientAvatarUpdated_Parms, NULL );

	pFnClientAvatarUpdated->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_GuildDiplomacy.OnChatRawInputKey
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FInputEventParameters   EventParms                     ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UUIScene_GuildDiplomacy::OnChatRawInputKey ( struct FInputEventParameters* EventParms )
{
	static UFunction* pFnOnChatRawInputKey = NULL;

	if ( ! pFnOnChatRawInputKey )
		pFnOnChatRawInputKey = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.OnChatRawInputKey" );

	UUIScene_GuildDiplomacy_execOnChatRawInputKey_Parms OnChatRawInputKey_Parms;

	this->ProcessEvent ( pFnOnChatRawInputKey, &OnChatRawInputKey_Parms, NULL );

	if ( EventParms )
		memcpy ( EventParms, &OnChatRawInputKey_Parms.EventParms, 0x20 );

	return OnChatRawInputKey_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildDiplomacy.setCurrentWarLabels
// [0x00020002] 
// Parameters infos:

void UUIScene_GuildDiplomacy::setCurrentWarLabels ( )
{
	static UFunction* pFnsetCurrentWarLabels = NULL;

	if ( ! pFnsetCurrentWarLabels )
		pFnsetCurrentWarLabels = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.setCurrentWarLabels" );

	UUIScene_GuildDiplomacy_execsetCurrentWarLabels_Parms setCurrentWarLabels_Parms;

	this->ProcessEvent ( pFnsetCurrentWarLabels, &setCurrentWarLabels_Parms, NULL );
};

// Function NowGame.UIScene_GuildDiplomacy.getOutGoingWarProposals
// [0x00020000] 
// Parameters infos:

void UUIScene_GuildDiplomacy::getOutGoingWarProposals ( )
{
	static UFunction* pFngetOutGoingWarProposals = NULL;

	if ( ! pFngetOutGoingWarProposals )
		pFngetOutGoingWarProposals = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.getOutGoingWarProposals" );

	UUIScene_GuildDiplomacy_execgetOutGoingWarProposals_Parms getOutGoingWarProposals_Parms;

	this->ProcessEvent ( pFngetOutGoingWarProposals, &getOutGoingWarProposals_Parms, NULL );
};

// Function NowGame.UIScene_GuildDiplomacy.getCurrentlyAtWarWith
// [0x00020000] 
// Parameters infos:

void UUIScene_GuildDiplomacy::getCurrentlyAtWarWith ( )
{
	static UFunction* pFngetCurrentlyAtWarWith = NULL;

	if ( ! pFngetCurrentlyAtWarWith )
		pFngetCurrentlyAtWarWith = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.getCurrentlyAtWarWith" );

	UUIScene_GuildDiplomacy_execgetCurrentlyAtWarWith_Parms getCurrentlyAtWarWith_Parms;

	this->ProcessEvent ( pFngetCurrentlyAtWarWith, &getCurrentlyAtWarWith_Parms, NULL );
};

// Function NowGame.UIScene_GuildDiplomacy.getWarProposals
// [0x00020002] 
// Parameters infos:

void UUIScene_GuildDiplomacy::getWarProposals ( )
{
	static UFunction* pFngetWarProposals = NULL;

	if ( ! pFngetWarProposals )
		pFngetWarProposals = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.getWarProposals" );

	UUIScene_GuildDiplomacy_execgetWarProposals_Parms getWarProposals_Parms;

	this->ProcessEvent ( pFngetWarProposals, &getWarProposals_Parms, NULL );
};

// Function NowGame.UIScene_GuildDiplomacy.AddOutgoingGuildWar
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_GuildDiplomacy::eventAddOutgoingGuildWar ( struct FString guildName )
{
	static UFunction* pFnAddOutgoingGuildWar = NULL;

	if ( ! pFnAddOutgoingGuildWar )
		pFnAddOutgoingGuildWar = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.AddOutgoingGuildWar" );

	UUIScene_GuildDiplomacy_eventAddOutgoingGuildWar_Parms AddOutgoingGuildWar_Parms;
	memcpy ( &AddOutgoingGuildWar_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnAddOutgoingGuildWar, &AddOutgoingGuildWar_Parms, NULL );
};

// Function NowGame.UIScene_GuildDiplomacy.AddInComingGuildWar
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_GuildDiplomacy::eventAddInComingGuildWar ( struct FString guildName )
{
	static UFunction* pFnAddInComingGuildWar = NULL;

	if ( ! pFnAddInComingGuildWar )
		pFnAddInComingGuildWar = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.AddInComingGuildWar" );

	UUIScene_GuildDiplomacy_eventAddInComingGuildWar_Parms AddInComingGuildWar_Parms;
	memcpy ( &AddInComingGuildWar_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnAddInComingGuildWar, &AddInComingGuildWar_Parms, NULL );
};

// Function NowGame.UIScene_GuildDiplomacy.AddGuildWar
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_GuildDiplomacy::eventAddGuildWar ( struct FString guildName )
{
	static UFunction* pFnAddGuildWar = NULL;

	if ( ! pFnAddGuildWar )
		pFnAddGuildWar = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.AddGuildWar" );

	UUIScene_GuildDiplomacy_eventAddGuildWar_Parms AddGuildWar_Parms;
	memcpy ( &AddGuildWar_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnAddGuildWar, &AddGuildWar_Parms, NULL );
};

// Function NowGame.UIScene_GuildDiplomacy.clearWars
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildDiplomacy::eventclearWars ( )
{
	static UFunction* pFnclearWars = NULL;

	if ( ! pFnclearWars )
		pFnclearWars = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.clearWars" );

	UUIScene_GuildDiplomacy_eventclearWars_Parms clearWars_Parms;

	this->ProcessEvent ( pFnclearWars, &clearWars_Parms, NULL );
};

// Function NowGame.UIScene_GuildDiplomacy.ChallengeGuild
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildDiplomacy::ChallengeGuild ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnChallengeGuild = NULL;

	if ( ! pFnChallengeGuild )
		pFnChallengeGuild = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.ChallengeGuild" );

	UUIScene_GuildDiplomacy_execChallengeGuild_Parms ChallengeGuild_Parms;
	ChallengeGuild_Parms.O = O;
	ChallengeGuild_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnChallengeGuild, &ChallengeGuild_Parms, NULL );

	return ChallengeGuild_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildDiplomacy.HardCodedMuthafucka2
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildDiplomacy::HardCodedMuthafucka2 ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnHardCodedMuthafucka2 = NULL;

	if ( ! pFnHardCodedMuthafucka2 )
		pFnHardCodedMuthafucka2 = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.HardCodedMuthafucka2" );

	UUIScene_GuildDiplomacy_execHardCodedMuthafucka2_Parms HardCodedMuthafucka2_Parms;
	HardCodedMuthafucka2_Parms.O = O;
	HardCodedMuthafucka2_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnHardCodedMuthafucka2, &HardCodedMuthafucka2_Parms, NULL );

	return HardCodedMuthafucka2_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildDiplomacy.sendMessageToClient
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_GuildDiplomacy::eventsendMessageToClient ( struct FString Message )
{
	static UFunction* pFnsendMessageToClient = NULL;

	if ( ! pFnsendMessageToClient )
		pFnsendMessageToClient = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.sendMessageToClient" );

	UUIScene_GuildDiplomacy_eventsendMessageToClient_Parms sendMessageToClient_Parms;
	memcpy ( &sendMessageToClient_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnsendMessageToClient, &sendMessageToClient_Parms, NULL );
};

// Function NowGame.UIScene_GuildDiplomacy.SurrenderClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildDiplomacy::SurrenderClicked ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnSurrenderClicked = NULL;

	if ( ! pFnSurrenderClicked )
		pFnSurrenderClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.SurrenderClicked" );

	UUIScene_GuildDiplomacy_execSurrenderClicked_Parms SurrenderClicked_Parms;
	SurrenderClicked_Parms.O = O;
	SurrenderClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnSurrenderClicked, &SurrenderClicked_Parms, NULL );

	return SurrenderClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildDiplomacy.HardCodedMuthafucka
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildDiplomacy::HardCodedMuthafucka ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnHardCodedMuthafucka = NULL;

	if ( ! pFnHardCodedMuthafucka )
		pFnHardCodedMuthafucka = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.HardCodedMuthafucka" );

	UUIScene_GuildDiplomacy_execHardCodedMuthafucka_Parms HardCodedMuthafucka_Parms;
	HardCodedMuthafucka_Parms.O = O;
	HardCodedMuthafucka_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnHardCodedMuthafucka, &HardCodedMuthafucka_Parms, NULL );

	return HardCodedMuthafucka_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildDiplomacy.HideItems
// [0x00020002] 
// Parameters infos:

void UUIScene_GuildDiplomacy::HideItems ( )
{
	static UFunction* pFnHideItems = NULL;

	if ( ! pFnHideItems )
		pFnHideItems = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.HideItems" );

	UUIScene_GuildDiplomacy_execHideItems_Parms HideItems_Parms;

	this->ProcessEvent ( pFnHideItems, &HideItems_Parms, NULL );
};

// Function NowGame.UIScene_GuildDiplomacy.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_GuildDiplomacy::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.SceneActivated" );

	UUIScene_GuildDiplomacy_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_GuildDiplomacy.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildDiplomacy::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.InitScene" );

	UUIScene_GuildDiplomacy_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_GuildDiplomacy.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildDiplomacy::OnClose ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.OnClose" );

	UUIScene_GuildDiplomacy_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.EventObject = EventObject;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildDiplomacy.setStunn
// [0x00020002] 
// Parameters infos:
// float                          Time                           ( CPF_Parm )

void UUIScene_GuildDiplomacy::setStunn ( float Time )
{
	static UFunction* pFnsetStunn = NULL;

	if ( ! pFnsetStunn )
		pFnsetStunn = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.setStunn" );

	UUIScene_GuildDiplomacy_execsetStunn_Parms setStunn_Parms;
	setStunn_Parms.Time = Time;

	this->ProcessEvent ( pFnsetStunn, &setStunn_Parms, NULL );
};

// Function NowGame.UIScene_GuildDiplomacy.getPlayerGuildRank
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUIScene_GuildDiplomacy::getPlayerGuildRank ( )
{
	static UFunction* pFngetPlayerGuildRank = NULL;

	if ( ! pFngetPlayerGuildRank )
		pFngetPlayerGuildRank = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.getPlayerGuildRank" );

	UUIScene_GuildDiplomacy_execgetPlayerGuildRank_Parms getPlayerGuildRank_Parms;

	this->ProcessEvent ( pFngetPlayerGuildRank, &getPlayerGuildRank_Parms, NULL );

	return getPlayerGuildRank_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildDiplomacy.getIncomingGuildWars
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       _guildWars                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UUIScene_GuildDiplomacy::getIncomingGuildWars ( TArray< struct FString >* _guildWars )
{
	static UFunction* pFngetIncomingGuildWars = NULL;

	if ( ! pFngetIncomingGuildWars )
		pFngetIncomingGuildWars = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.getIncomingGuildWars" );

	UUIScene_GuildDiplomacy_execgetIncomingGuildWars_Parms getIncomingGuildWars_Parms;

	pFngetIncomingGuildWars->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetIncomingGuildWars, &getIncomingGuildWars_Parms, NULL );

	pFngetIncomingGuildWars->FunctionFlags |= 0x400;

	if ( _guildWars )
		memcpy ( _guildWars, &getIncomingGuildWars_Parms._guildWars, 0xC );
};

// Function NowGame.UIScene_GuildDiplomacy.getOutGoingGuildWars
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       _guildWars                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UUIScene_GuildDiplomacy::getOutGoingGuildWars ( TArray< struct FString >* _guildWars )
{
	static UFunction* pFngetOutGoingGuildWars = NULL;

	if ( ! pFngetOutGoingGuildWars )
		pFngetOutGoingGuildWars = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.getOutGoingGuildWars" );

	UUIScene_GuildDiplomacy_execgetOutGoingGuildWars_Parms getOutGoingGuildWars_Parms;

	pFngetOutGoingGuildWars->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetOutGoingGuildWars, &getOutGoingGuildWars_Parms, NULL );

	pFngetOutGoingGuildWars->FunctionFlags |= 0x400;

	if ( _guildWars )
		memcpy ( _guildWars, &getOutGoingGuildWars_Parms._guildWars, 0xC );
};

// Function NowGame.UIScene_GuildDiplomacy.getGuildWars
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       _guildWars                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UUIScene_GuildDiplomacy::getGuildWars ( TArray< struct FString >* _guildWars )
{
	static UFunction* pFngetGuildWars = NULL;

	if ( ! pFngetGuildWars )
		pFngetGuildWars = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.getGuildWars" );

	UUIScene_GuildDiplomacy_execgetGuildWars_Parms getGuildWars_Parms;

	pFngetGuildWars->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetGuildWars, &getGuildWars_Parms, NULL );

	pFngetGuildWars->FunctionFlags |= 0x400;

	if ( _guildWars )
		memcpy ( _guildWars, &getGuildWars_Parms._guildWars, 0xC );
};

// Function NowGame.UIScene_GuildDiplomacy.SendServerMessage
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_GuildDiplomacy::SendServerMessage ( struct FString msg )
{
	static UFunction* pFnSendServerMessage = NULL;

	if ( ! pFnSendServerMessage )
		pFnSendServerMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDiplomacy.SendServerMessage" );

	UUIScene_GuildDiplomacy_execSendServerMessage_Parms SendServerMessage_Parms;
	memcpy ( &SendServerMessage_Parms.msg, &msg, 0xC );

	pFnSendServerMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendServerMessage, &SendServerMessage_Parms, NULL );

	pFnSendServerMessage->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_GuildDisband.Cancel
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildDisband::Cancel ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnCancel = NULL;

	if ( ! pFnCancel )
		pFnCancel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDisband.Cancel" );

	UUIScene_GuildDisband_execCancel_Parms Cancel_Parms;
	Cancel_Parms.O = O;
	Cancel_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCancel, &Cancel_Parms, NULL );

	return Cancel_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildDisband.sendMessageToClient
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_GuildDisband::eventsendMessageToClient ( struct FString Message )
{
	static UFunction* pFnsendMessageToClient = NULL;

	if ( ! pFnsendMessageToClient )
		pFnsendMessageToClient = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDisband.sendMessageToClient" );

	UUIScene_GuildDisband_eventsendMessageToClient_Parms sendMessageToClient_Parms;
	memcpy ( &sendMessageToClient_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnsendMessageToClient, &sendMessageToClient_Parms, NULL );
};

// Function NowGame.UIScene_GuildDisband.Accept
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildDisband::Accept ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnAccept = NULL;

	if ( ! pFnAccept )
		pFnAccept = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDisband.Accept" );

	UUIScene_GuildDisband_execAccept_Parms Accept_Parms;
	Accept_Parms.O = O;
	Accept_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAccept, &Accept_Parms, NULL );

	return Accept_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildDisband.setStunn
// [0x00020002] 
// Parameters infos:
// float                          Time                           ( CPF_Parm )

void UUIScene_GuildDisband::setStunn ( float Time )
{
	static UFunction* pFnsetStunn = NULL;

	if ( ! pFnsetStunn )
		pFnsetStunn = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDisband.setStunn" );

	UUIScene_GuildDisband_execsetStunn_Parms setStunn_Parms;
	setStunn_Parms.Time = Time;

	this->ProcessEvent ( pFnsetStunn, &setStunn_Parms, NULL );
};

// Function NowGame.UIScene_GuildDisband.getPlayerHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerHouse* UUIScene_GuildDisband::getPlayerHouse ( )
{
	static UFunction* pFngetPlayerHouse = NULL;

	if ( ! pFngetPlayerHouse )
		pFngetPlayerHouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDisband.getPlayerHouse" );

	UUIScene_GuildDisband_execgetPlayerHouse_Parms getPlayerHouse_Parms;

	this->ProcessEvent ( pFngetPlayerHouse, &getPlayerHouse_Parms, NULL );

	return getPlayerHouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildDisband.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildDisband::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDisband.InitScene" );

	UUIScene_GuildDisband_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_GuildDisband.getPlayerGuildRank
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUIScene_GuildDisband::getPlayerGuildRank ( )
{
	static UFunction* pFngetPlayerGuildRank = NULL;

	if ( ! pFngetPlayerGuildRank )
		pFngetPlayerGuildRank = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildDisband.getPlayerGuildRank" );

	UUIScene_GuildDisband_execgetPlayerGuildRank_Parms getPlayerGuildRank_Parms;

	pFngetPlayerGuildRank->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetPlayerGuildRank, &getPlayerGuildRank_Parms, NULL );

	pFngetPlayerGuildRank->FunctionFlags |= 0x400;

	return getPlayerGuildRank_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildInvitedMessage.GetTargetAvatarName
// [0x00820002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Idx                            ( CPF_Parm )

struct FString UUIScene_GuildInvitedMessage::GetTargetAvatarName ( int Idx )
{
	static UFunction* pFnGetTargetAvatarName = NULL;

	if ( ! pFnGetTargetAvatarName )
		pFnGetTargetAvatarName = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildInvitedMessage.GetTargetAvatarName" );

	UUIScene_GuildInvitedMessage_execGetTargetAvatarName_Parms GetTargetAvatarName_Parms;
	GetTargetAvatarName_Parms.Idx = Idx;

	this->ProcessEvent ( pFnGetTargetAvatarName, &GetTargetAvatarName_Parms, NULL );

	return GetTargetAvatarName_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildInvitedMessage.setInformationLabel
// [0x00020002] 
// Parameters infos:
// struct FString                 ParamLabel                     ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_GuildInvitedMessage::setInformationLabel ( struct FString ParamLabel )
{
	static UFunction* pFnsetInformationLabel = NULL;

	if ( ! pFnsetInformationLabel )
		pFnsetInformationLabel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildInvitedMessage.setInformationLabel" );

	UUIScene_GuildInvitedMessage_execsetInformationLabel_Parms setInformationLabel_Parms;
	memcpy ( &setInformationLabel_Parms.ParamLabel, &ParamLabel, 0xC );

	this->ProcessEvent ( pFnsetInformationLabel, &setInformationLabel_Parms, NULL );
};

// Function NowGame.UIScene_GuildInvitedMessage.Cleanup
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildInvitedMessage::eventCleanup ( )
{
	static UFunction* pFnCleanup = NULL;

	if ( ! pFnCleanup )
		pFnCleanup = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildInvitedMessage.Cleanup" );

	UUIScene_GuildInvitedMessage_eventCleanup_Parms Cleanup_Parms;

	this->ProcessEvent ( pFnCleanup, &Cleanup_Parms, NULL );
};

// Function NowGame.UIScene_GuildInvitedMessage.SetInvitingGuild
// [0x00020002] 
// Parameters infos:
// struct FString                 srcGuild                       ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_GuildInvitedMessage::SetInvitingGuild ( struct FString srcGuild )
{
	static UFunction* pFnSetInvitingGuild = NULL;

	if ( ! pFnSetInvitingGuild )
		pFnSetInvitingGuild = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildInvitedMessage.SetInvitingGuild" );

	UUIScene_GuildInvitedMessage_execSetInvitingGuild_Parms SetInvitingGuild_Parms;
	memcpy ( &SetInvitingGuild_Parms.srcGuild, &srcGuild, 0xC );

	this->ProcessEvent ( pFnSetInvitingGuild, &SetInvitingGuild_Parms, NULL );
};

// Function NowGame.UIScene_GuildInvitedMessage.AcceptInvitation
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildInvitedMessage::AcceptInvitation ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnAcceptInvitation = NULL;

	if ( ! pFnAcceptInvitation )
		pFnAcceptInvitation = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildInvitedMessage.AcceptInvitation" );

	UUIScene_GuildInvitedMessage_execAcceptInvitation_Parms AcceptInvitation_Parms;
	AcceptInvitation_Parms.O = O;
	AcceptInvitation_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAcceptInvitation, &AcceptInvitation_Parms, NULL );

	return AcceptInvitation_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildInvitedMessage.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildInvitedMessage::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildInvitedMessage.InitScene" );

	UUIScene_GuildInvitedMessage_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_GuildInvitedMessage.setStunn
// [0x00020002] 
// Parameters infos:
// float                          Time                           ( CPF_Parm )

void UUIScene_GuildInvitedMessage::setStunn ( float Time )
{
	static UFunction* pFnsetStunn = NULL;

	if ( ! pFnsetStunn )
		pFnsetStunn = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildInvitedMessage.setStunn" );

	UUIScene_GuildInvitedMessage_execsetStunn_Parms setStunn_Parms;
	setStunn_Parms.Time = Time;

	this->ProcessEvent ( pFnsetStunn, &setStunn_Parms, NULL );
};

// Function NowGame.UIScene_GuildInvitedMessage.GetGuildName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UUIScene_GuildInvitedMessage::GetGuildName ( )
{
	static UFunction* pFnGetGuildName = NULL;

	if ( ! pFnGetGuildName )
		pFnGetGuildName = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildInvitedMessage.GetGuildName" );

	UUIScene_GuildInvitedMessage_execGetGuildName_Parms GetGuildName_Parms;

	pFnGetGuildName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuildName, &GetGuildName_Parms, NULL );

	pFnGetGuildName->FunctionFlags |= 0x400;

	return GetGuildName_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildInvitedMessage.ClientAvatarUpdated
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FPointer                pClient                        ( CPF_Parm )
// struct FPointer                pAvatar                        ( CPF_Parm )
// TArray< struct FPointer >      tParams                        ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_GuildInvitedMessage::ClientAvatarUpdated ( struct FPointer pClient, struct FPointer pAvatar, TArray< struct FPointer > tParams )
{
	static UFunction* pFnClientAvatarUpdated = NULL;

	if ( ! pFnClientAvatarUpdated )
		pFnClientAvatarUpdated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildInvitedMessage.ClientAvatarUpdated" );

	UUIScene_GuildInvitedMessage_execClientAvatarUpdated_Parms ClientAvatarUpdated_Parms;
	memcpy ( &ClientAvatarUpdated_Parms.pClient, &pClient, 0x4 );
	memcpy ( &ClientAvatarUpdated_Parms.pAvatar, &pAvatar, 0x4 );
	memcpy ( &ClientAvatarUpdated_Parms.tParams, &tParams, 0xC );

	pFnClientAvatarUpdated->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientAvatarUpdated, &ClientAvatarUpdated_Parms, NULL );

	pFnClientAvatarUpdated->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_GuildLeaveGuild.Cancel
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildLeaveGuild::Cancel ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnCancel = NULL;

	if ( ! pFnCancel )
		pFnCancel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildLeaveGuild.Cancel" );

	UUIScene_GuildLeaveGuild_execCancel_Parms Cancel_Parms;
	Cancel_Parms.O = O;
	Cancel_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCancel, &Cancel_Parms, NULL );

	return Cancel_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildLeaveGuild.sendMessageToClient
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_GuildLeaveGuild::eventsendMessageToClient ( struct FString Message )
{
	static UFunction* pFnsendMessageToClient = NULL;

	if ( ! pFnsendMessageToClient )
		pFnsendMessageToClient = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildLeaveGuild.sendMessageToClient" );

	UUIScene_GuildLeaveGuild_eventsendMessageToClient_Parms sendMessageToClient_Parms;
	memcpy ( &sendMessageToClient_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnsendMessageToClient, &sendMessageToClient_Parms, NULL );
};

// Function NowGame.UIScene_GuildLeaveGuild.Accept
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildLeaveGuild::Accept ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnAccept = NULL;

	if ( ! pFnAccept )
		pFnAccept = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildLeaveGuild.Accept" );

	UUIScene_GuildLeaveGuild_execAccept_Parms Accept_Parms;
	Accept_Parms.O = O;
	Accept_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAccept, &Accept_Parms, NULL );

	return Accept_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildLeaveGuild.setStunn
// [0x00020002] 
// Parameters infos:
// float                          Time                           ( CPF_Parm )

void UUIScene_GuildLeaveGuild::setStunn ( float Time )
{
	static UFunction* pFnsetStunn = NULL;

	if ( ! pFnsetStunn )
		pFnsetStunn = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildLeaveGuild.setStunn" );

	UUIScene_GuildLeaveGuild_execsetStunn_Parms setStunn_Parms;
	setStunn_Parms.Time = Time;

	this->ProcessEvent ( pFnsetStunn, &setStunn_Parms, NULL );
};

// Function NowGame.UIScene_GuildLeaveGuild.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildLeaveGuild::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildLeaveGuild.InitScene" );

	UUIScene_GuildLeaveGuild_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_GuildLeaveGuild.getPlayerGuildRank
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUIScene_GuildLeaveGuild::getPlayerGuildRank ( )
{
	static UFunction* pFngetPlayerGuildRank = NULL;

	if ( ! pFngetPlayerGuildRank )
		pFngetPlayerGuildRank = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildLeaveGuild.getPlayerGuildRank" );

	UUIScene_GuildLeaveGuild_execgetPlayerGuildRank_Parms getPlayerGuildRank_Parms;

	this->ProcessEvent ( pFngetPlayerGuildRank, &getPlayerGuildRank_Parms, NULL );

	return getPlayerGuildRank_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMainMenu.OptionsButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildMainMenu::OptionsButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOptionsButtonClicked = NULL;

	if ( ! pFnOptionsButtonClicked )
		pFnOptionsButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMainMenu.OptionsButtonClicked" );

	UUIScene_GuildMainMenu_execOptionsButtonClicked_Parms OptionsButtonClicked_Parms;
	OptionsButtonClicked_Parms.EventObject = EventObject;
	OptionsButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOptionsButtonClicked, &OptionsButtonClicked_Parms, NULL );

	return OptionsButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMainMenu.LeaveButtonButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildMainMenu::LeaveButtonButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnLeaveButtonButtonClicked = NULL;

	if ( ! pFnLeaveButtonButtonClicked )
		pFnLeaveButtonButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMainMenu.LeaveButtonButtonClicked" );

	UUIScene_GuildMainMenu_execLeaveButtonButtonClicked_Parms LeaveButtonButtonClicked_Parms;
	LeaveButtonButtonClicked_Parms.EventObject = EventObject;
	LeaveButtonButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnLeaveButtonButtonClicked, &LeaveButtonButtonClicked_Parms, NULL );

	return LeaveButtonButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMainMenu.MemberButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildMainMenu::MemberButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnMemberButtonClicked = NULL;

	if ( ! pFnMemberButtonClicked )
		pFnMemberButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMainMenu.MemberButtonClicked" );

	UUIScene_GuildMainMenu_execMemberButtonClicked_Parms MemberButtonClicked_Parms;
	MemberButtonClicked_Parms.EventObject = EventObject;
	MemberButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnMemberButtonClicked, &MemberButtonClicked_Parms, NULL );

	return MemberButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMainMenu.DiplomacyButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildMainMenu::DiplomacyButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnDiplomacyButtonClicked = NULL;

	if ( ! pFnDiplomacyButtonClicked )
		pFnDiplomacyButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMainMenu.DiplomacyButtonClicked" );

	UUIScene_GuildMainMenu_execDiplomacyButtonClicked_Parms DiplomacyButtonClicked_Parms;
	DiplomacyButtonClicked_Parms.EventObject = EventObject;
	DiplomacyButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnDiplomacyButtonClicked, &DiplomacyButtonClicked_Parms, NULL );

	return DiplomacyButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMainMenu.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_GuildMainMenu::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMainMenu.SceneActivated" );

	UUIScene_GuildMainMenu_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_GuildMainMenu.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_GuildMainMenu::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMainMenu.PostInitUpdate" );

	UUIScene_GuildMainMenu_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_GuildMainMenu.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildMainMenu::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMainMenu.InitScene" );

	UUIScene_GuildMainMenu_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_GuildMainMenu.getPlayerGuildRank
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUIScene_GuildMainMenu::getPlayerGuildRank ( )
{
	static UFunction* pFngetPlayerGuildRank = NULL;

	if ( ! pFngetPlayerGuildRank )
		pFngetPlayerGuildRank = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMainMenu.getPlayerGuildRank" );

	UUIScene_GuildMainMenu_execgetPlayerGuildRank_Parms getPlayerGuildRank_Parms;

	this->ProcessEvent ( pFngetPlayerGuildRank, &getPlayerGuildRank_Parms, NULL );

	return getPlayerGuildRank_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMainMenu.GetGuildName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UUIScene_GuildMainMenu::GetGuildName ( )
{
	static UFunction* pFnGetGuildName = NULL;

	if ( ! pFnGetGuildName )
		pFnGetGuildName = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMainMenu.GetGuildName" );

	UUIScene_GuildMainMenu_execGetGuildName_Parms GetGuildName_Parms;

	pFnGetGuildName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGuildName, &GetGuildName_Parms, NULL );

	pFnGetGuildName->FunctionFlags |= 0x400;

	return GetGuildName_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildManager.Invited
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildManager::eventInvited ( )
{
	static UFunction* pFnInvited = NULL;

	if ( ! pFnInvited )
		pFnInvited = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildManager.Invited" );

	UUIScene_GuildManager_eventInvited_Parms Invited_Parms;

	this->ProcessEvent ( pFnInvited, &Invited_Parms, NULL );
};

// Function NowGame.UIScene_GuildManager.NotAMember
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildManager::eventNotAMember ( )
{
	static UFunction* pFnNotAMember = NULL;

	if ( ! pFnNotAMember )
		pFnNotAMember = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildManager.NotAMember" );

	UUIScene_GuildManager_eventNotAMember_Parms NotAMember_Parms;

	this->ProcessEvent ( pFnNotAMember, &NotAMember_Parms, NULL );
};

// Function NowGame.UIScene_GuildManager.CreateNewGuild
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildManager::eventCreateNewGuild ( )
{
	static UFunction* pFnCreateNewGuild = NULL;

	if ( ! pFnCreateNewGuild )
		pFnCreateNewGuild = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildManager.CreateNewGuild" );

	UUIScene_GuildManager_eventCreateNewGuild_Parms CreateNewGuild_Parms;

	this->ProcessEvent ( pFnCreateNewGuild, &CreateNewGuild_Parms, NULL );
};

// Function NowGame.UIScene_GuildManager.LeaveCurrentGuild
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildManager::eventLeaveCurrentGuild ( )
{
	static UFunction* pFnLeaveCurrentGuild = NULL;

	if ( ! pFnLeaveCurrentGuild )
		pFnLeaveCurrentGuild = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildManager.LeaveCurrentGuild" );

	UUIScene_GuildManager_eventLeaveCurrentGuild_Parms LeaveCurrentGuild_Parms;

	this->ProcessEvent ( pFnLeaveCurrentGuild, &LeaveCurrentGuild_Parms, NULL );
};

// Function NowGame.UIScene_GuildManager.OpenGuildMenu
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildManager::eventOpenGuildMenu ( )
{
	static UFunction* pFnOpenGuildMenu = NULL;

	if ( ! pFnOpenGuildMenu )
		pFnOpenGuildMenu = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildManager.OpenGuildMenu" );

	UUIScene_GuildManager_eventOpenGuildMenu_Parms OpenGuildMenu_Parms;

	this->ProcessEvent ( pFnOpenGuildMenu, &OpenGuildMenu_Parms, NULL );
};

// Function NowGame.UIScene_GuildManager.DynamicOpenScene
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// struct FString                 SceneName                      ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_GuildManager::eventDynamicOpenScene ( struct FString SceneName )
{
	static UFunction* pFnDynamicOpenScene = NULL;

	if ( ! pFnDynamicOpenScene )
		pFnDynamicOpenScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildManager.DynamicOpenScene" );

	UUIScene_GuildManager_eventDynamicOpenScene_Parms DynamicOpenScene_Parms;
	memcpy ( &DynamicOpenScene_Parms.SceneName, &SceneName, 0xC );

	this->ProcessEvent ( pFnDynamicOpenScene, &DynamicOpenScene_Parms, NULL );
};

// Function NowGame.UIScene_GuildManager.IsGuildMember
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_GuildManager::IsGuildMember ( )
{
	static UFunction* pFnIsGuildMember = NULL;

	if ( ! pFnIsGuildMember )
		pFnIsGuildMember = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildManager.IsGuildMember" );

	UUIScene_GuildManager_execIsGuildMember_Parms IsGuildMember_Parms;

	pFnIsGuildMember->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsGuildMember, &IsGuildMember_Parms, NULL );

	pFnIsGuildMember->FunctionFlags |= 0x400;

	return IsGuildMember_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseAddWorkBench.getPlayerHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerHouse* UUIScene_HouseAddWorkBench::getPlayerHouse ( )
{
	static UFunction* pFngetPlayerHouse = NULL;

	if ( ! pFngetPlayerHouse )
		pFngetPlayerHouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseAddWorkBench.getPlayerHouse" );

	UUIScene_HouseAddWorkBench_execgetPlayerHouse_Parms getPlayerHouse_Parms;

	this->ProcessEvent ( pFngetPlayerHouse, &getPlayerHouse_Parms, NULL );

	return getPlayerHouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseAddWorkBench.closeSceneClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseAddWorkBench::closeSceneClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFncloseSceneClicked = NULL;

	if ( ! pFncloseSceneClicked )
		pFncloseSceneClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseAddWorkBench.closeSceneClicked" );

	UUIScene_HouseAddWorkBench_execcloseSceneClicked_Parms closeSceneClicked_Parms;
	closeSceneClicked_Parms.EventObject = EventObject;
	closeSceneClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFncloseSceneClicked, &closeSceneClicked_Parms, NULL );

	return closeSceneClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseAddWorkBench.sendMessageToPlayer
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_HouseAddWorkBench::sendMessageToPlayer ( struct FString Message )
{
	static UFunction* pFnsendMessageToPlayer = NULL;

	if ( ! pFnsendMessageToPlayer )
		pFnsendMessageToPlayer = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseAddWorkBench.sendMessageToPlayer" );

	UUIScene_HouseAddWorkBench_execsendMessageToPlayer_Parms sendMessageToPlayer_Parms;
	memcpy ( &sendMessageToPlayer_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnsendMessageToPlayer, &sendMessageToPlayer_Parms, NULL );
};

// Function NowGame.UIScene_HouseAddWorkBench.setModuleButtons
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseAddWorkBench::setModuleButtons ( )
{
	static UFunction* pFnsetModuleButtons = NULL;

	if ( ! pFnsetModuleButtons )
		pFnsetModuleButtons = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseAddWorkBench.setModuleButtons" );

	UUIScene_HouseAddWorkBench_execsetModuleButtons_Parms setModuleButtons_Parms;

	this->ProcessEvent ( pFnsetModuleButtons, &setModuleButtons_Parms, NULL );
};

// Function NowGame.UIScene_HouseAddWorkBench.ResetMyWorkBench
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_HouseAddWorkBench::eventResetMyWorkBench ( )
{
	static UFunction* pFnResetMyWorkBench = NULL;

	if ( ! pFnResetMyWorkBench )
		pFnResetMyWorkBench = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseAddWorkBench.ResetMyWorkBench" );

	UUIScene_HouseAddWorkBench_eventResetMyWorkBench_Parms ResetMyWorkBench_Parms;

	this->ProcessEvent ( pFnResetMyWorkBench, &ResetMyWorkBench_Parms, NULL );
};

// Function NowGame.UIScene_HouseAddWorkBench.UpdateMyWorkBench
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UContentInfo*            NewIcon                        ( CPF_Parm )
// struct FString                 workBenchName                  ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_HouseAddWorkBench::eventUpdateMyWorkBench ( class UContentInfo* NewIcon, struct FString workBenchName )
{
	static UFunction* pFnUpdateMyWorkBench = NULL;

	if ( ! pFnUpdateMyWorkBench )
		pFnUpdateMyWorkBench = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseAddWorkBench.UpdateMyWorkBench" );

	UUIScene_HouseAddWorkBench_eventUpdateMyWorkBench_Parms UpdateMyWorkBench_Parms;
	UpdateMyWorkBench_Parms.NewIcon = NewIcon;
	memcpy ( &UpdateMyWorkBench_Parms.workBenchName, &workBenchName, 0xC );

	this->ProcessEvent ( pFnUpdateMyWorkBench, &UpdateMyWorkBench_Parms, NULL );
};

// Function NowGame.UIScene_HouseAddWorkBench.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseAddWorkBench::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseAddWorkBench.PostInitUpdate" );

	UUIScene_HouseAddWorkBench_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_HouseAddWorkBench.setWorkBenchInfo
// [0x00020002] 
// Parameters infos:
// struct FString                 Info                           ( CPF_Parm | CPF_NeedCtorLink )
// class ANowAtlasAvatarPlayerHouse* myHouse                        ( CPF_Parm )

void UUIScene_HouseAddWorkBench::setWorkBenchInfo ( struct FString Info, class ANowAtlasAvatarPlayerHouse* myHouse )
{
	static UFunction* pFnsetWorkBenchInfo = NULL;

	if ( ! pFnsetWorkBenchInfo )
		pFnsetWorkBenchInfo = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseAddWorkBench.setWorkBenchInfo" );

	UUIScene_HouseAddWorkBench_execsetWorkBenchInfo_Parms setWorkBenchInfo_Parms;
	memcpy ( &setWorkBenchInfo_Parms.Info, &Info, 0xC );
	setWorkBenchInfo_Parms.myHouse = myHouse;

	this->ProcessEvent ( pFnsetWorkBenchInfo, &setWorkBenchInfo_Parms, NULL );
};

// Function NowGame.UIScene_HouseAddWorkBench.ModuleSelected
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseAddWorkBench::ModuleSelected ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnModuleSelected = NULL;

	if ( ! pFnModuleSelected )
		pFnModuleSelected = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseAddWorkBench.ModuleSelected" );

	UUIScene_HouseAddWorkBench_execModuleSelected_Parms ModuleSelected_Parms;
	ModuleSelected_Parms.EventObject = EventObject;
	ModuleSelected_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnModuleSelected, &ModuleSelected_Parms, NULL );

	return ModuleSelected_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseAddWorkBench.PlaceWorkbench
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseAddWorkBench::PlaceWorkbench ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnPlaceWorkbench = NULL;

	if ( ! pFnPlaceWorkbench )
		pFnPlaceWorkbench = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseAddWorkBench.PlaceWorkbench" );

	UUIScene_HouseAddWorkBench_execPlaceWorkbench_Parms PlaceWorkbench_Parms;
	PlaceWorkbench_Parms.EventObject = EventObject;
	PlaceWorkbench_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnPlaceWorkbench, &PlaceWorkbench_Parms, NULL );

	return PlaceWorkbench_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseAddWorkBench.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_HouseAddWorkBench::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseAddWorkBench.InitScene" );

	UUIScene_HouseAddWorkBench_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_HouseAddWorkBench.GetWorkBenchInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 workBenchInfo                  ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_HouseAddWorkBench::GetWorkBenchInfo ( struct FString workBenchInfo )
{
	static UFunction* pFnGetWorkBenchInfo = NULL;

	if ( ! pFnGetWorkBenchInfo )
		pFnGetWorkBenchInfo = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseAddWorkBench.GetWorkBenchInfo" );

	UUIScene_HouseAddWorkBench_execGetWorkBenchInfo_Parms GetWorkBenchInfo_Parms;
	memcpy ( &GetWorkBenchInfo_Parms.workBenchInfo, &workBenchInfo, 0xC );

	pFnGetWorkBenchInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWorkBenchInfo, &GetWorkBenchInfo_Parms, NULL );

	pFnGetWorkBenchInfo->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_HouseSign.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseSign::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseSign.PostInitUpdate" );

	UUIScene_HouseSign_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_HouseSign.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_HouseSign::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseSign.SceneDeactivated" );

	UUIScene_HouseSign_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_HouseSign.setHouseCompleteSignVisible
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseSign::setHouseCompleteSignVisible ( )
{
	static UFunction* pFnsetHouseCompleteSignVisible = NULL;

	if ( ! pFnsetHouseCompleteSignVisible )
		pFnsetHouseCompleteSignVisible = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseSign.setHouseCompleteSignVisible" );

	UUIScene_HouseSign_execsetHouseCompleteSignVisible_Parms setHouseCompleteSignVisible_Parms;

	this->ProcessEvent ( pFnsetHouseCompleteSignVisible, &setHouseCompleteSignVisible_Parms, NULL );
};

// Function NowGame.UIScene_HouseSign.getConstructionMaterials
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseSign::getConstructionMaterials ( )
{
	static UFunction* pFngetConstructionMaterials = NULL;

	if ( ! pFngetConstructionMaterials )
		pFngetConstructionMaterials = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseSign.getConstructionMaterials" );

	UUIScene_HouseSign_execgetConstructionMaterials_Parms getConstructionMaterials_Parms;

	this->ProcessEvent ( pFngetConstructionMaterials, &getConstructionMaterials_Parms, NULL );
};

// Function NowGame.UIScene_HouseSign.updateRescources
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseSign::updateRescources ( )
{
	static UFunction* pFnupdateRescources = NULL;

	if ( ! pFnupdateRescources )
		pFnupdateRescources = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseSign.updateRescources" );

	UUIScene_HouseSign_execupdateRescources_Parms updateRescources_Parms;

	this->ProcessEvent ( pFnupdateRescources, &updateRescources_Parms, NULL );
};

// Function NowGame.UIScene_HouseSign.AbortClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseSign::AbortClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAbortClicked = NULL;

	if ( ! pFnAbortClicked )
		pFnAbortClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseSign.AbortClicked" );

	UUIScene_HouseSign_execAbortClicked_Parms AbortClicked_Parms;
	AbortClicked_Parms.EventObject = EventObject;
	AbortClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAbortClicked, &AbortClicked_Parms, NULL );

	return AbortClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseSign.GetNewKey
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseSign::GetNewKey ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnGetNewKey = NULL;

	if ( ! pFnGetNewKey )
		pFnGetNewKey = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseSign.GetNewKey" );

	UUIScene_HouseSign_execGetNewKey_Parms GetNewKey_Parms;
	GetNewKey_Parms.EventObject = EventObject;
	GetNewKey_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnGetNewKey, &GetNewKey_Parms, NULL );

	return GetNewKey_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseSign.getPlayerHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerHouse* UUIScene_HouseSign::getPlayerHouse ( )
{
	static UFunction* pFngetPlayerHouse = NULL;

	if ( ! pFngetPlayerHouse )
		pFngetPlayerHouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseSign.getPlayerHouse" );

	UUIScene_HouseSign_execgetPlayerHouse_Parms getPlayerHouse_Parms;

	this->ProcessEvent ( pFngetPlayerHouse, &getPlayerHouse_Parms, NULL );

	return getPlayerHouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseSign.ChangeLock
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseSign::ChangeLock ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnChangeLock = NULL;

	if ( ! pFnChangeLock )
		pFnChangeLock = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseSign.ChangeLock" );

	UUIScene_HouseSign_execChangeLock_Parms ChangeLock_Parms;
	ChangeLock_Parms.EventObject = EventObject;
	ChangeLock_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnChangeLock, &ChangeLock_Parms, NULL );

	return ChangeLock_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseSign.OptionsClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseSign::OptionsClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOptionsClicked = NULL;

	if ( ! pFnOptionsClicked )
		pFnOptionsClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseSign.OptionsClicked" );

	UUIScene_HouseSign_execOptionsClicked_Parms OptionsClicked_Parms;
	OptionsClicked_Parms.EventObject = EventObject;
	OptionsClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOptionsClicked, &OptionsClicked_Parms, NULL );

	return OptionsClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseSign.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_HouseSign::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseSign.InitScene" );

	UUIScene_HouseSign_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_HouseSign.RemoveFriend
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 _friend                        ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_HouseSign::RemoveFriend ( struct FString _friend )
{
	static UFunction* pFnRemoveFriend = NULL;

	if ( ! pFnRemoveFriend )
		pFnRemoveFriend = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseSign.RemoveFriend" );

	UUIScene_HouseSign_execRemoveFriend_Parms RemoveFriend_Parms;
	memcpy ( &RemoveFriend_Parms._friend, &_friend, 0xC );

	pFnRemoveFriend->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFriend, &RemoveFriend_Parms, NULL );

	pFnRemoveFriend->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_HouseSign.AddFriend
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 _friend                        ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_HouseSign::AddFriend ( struct FString _friend )
{
	static UFunction* pFnAddFriend = NULL;

	if ( ! pFnAddFriend )
		pFnAddFriend = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseSign.AddFriend" );

	UUIScene_HouseSign_execAddFriend_Parms AddFriend_Parms;
	memcpy ( &AddFriend_Parms._friend, &_friend, 0xC );

	pFnAddFriend->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFriend, &AddFriend_Parms, NULL );

	pFnAddFriend->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_HouseTerritoryControll.CloseButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseTerritoryControll::CloseButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCloseButtonClicked = NULL;

	if ( ! pFnCloseButtonClicked )
		pFnCloseButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTerritoryControll.CloseButtonClicked" );

	UUIScene_HouseTerritoryControll_execCloseButtonClicked_Parms CloseButtonClicked_Parms;
	CloseButtonClicked_Parms.EventObject = EventObject;
	CloseButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCloseButtonClicked, &CloseButtonClicked_Parms, NULL );

	return CloseButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseTerritoryControll.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseTerritoryControll::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTerritoryControll.PostInitUpdate" );

	UUIScene_HouseTerritoryControll_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_HouseTerritoryControll.VoteClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseTerritoryControll::VoteClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnVoteClicked = NULL;

	if ( ! pFnVoteClicked )
		pFnVoteClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTerritoryControll.VoteClicked" );

	UUIScene_HouseTerritoryControll_execVoteClicked_Parms VoteClicked_Parms;
	VoteClicked_Parms.EventObject = EventObject;
	VoteClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnVoteClicked, &VoteClicked_Parms, NULL );

	return VoteClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseTerritoryControll.getPlayerHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerHouse* UUIScene_HouseTerritoryControll::getPlayerHouse ( )
{
	static UFunction* pFngetPlayerHouse = NULL;

	if ( ! pFngetPlayerHouse )
		pFngetPlayerHouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTerritoryControll.getPlayerHouse" );

	UUIScene_HouseTerritoryControll_execgetPlayerHouse_Parms getPlayerHouse_Parms;

	this->ProcessEvent ( pFngetPlayerHouse, &getPlayerHouse_Parms, NULL );

	return getPlayerHouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseTerritoryControll.UpdateStatus
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseTerritoryControll::UpdateStatus ( )
{
	static UFunction* pFnUpdateStatus = NULL;

	if ( ! pFnUpdateStatus )
		pFnUpdateStatus = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTerritoryControll.UpdateStatus" );

	UUIScene_HouseTerritoryControll_execUpdateStatus_Parms UpdateStatus_Parms;

	this->ProcessEvent ( pFnUpdateStatus, &UpdateStatus_Parms, NULL );
};

// Function NowGame.UIScene_HouseTerritoryControll.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_HouseTerritoryControll::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTerritoryControll.InitScene" );

	UUIScene_HouseTerritoryControll_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_HouseTerritoryControll.getVote
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UUIScene_HouseTerritoryControll::getVote ( )
{
	static UFunction* pFngetVote = NULL;

	if ( ! pFngetVote )
		pFngetVote = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTerritoryControll.getVote" );

	UUIScene_HouseTerritoryControll_execgetVote_Parms getVote_Parms;

	pFngetVote->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetVote, &getVote_Parms, NULL );

	pFngetVote->FunctionFlags |= 0x400;

	return getVote_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseTrade.UpdateTrade
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseTrade::UpdateTrade ( )
{
	static UFunction* pFnUpdateTrade = NULL;

	if ( ! pFnUpdateTrade )
		pFnUpdateTrade = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTrade.UpdateTrade" );

	UUIScene_HouseTrade_execUpdateTrade_Parms UpdateTrade_Parms;

	this->ProcessEvent ( pFnUpdateTrade, &UpdateTrade_Parms, NULL );
};

// Function NowGame.UIScene_HouseTrade.TradeRightClick
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_HouseTrade::TradeRightClick ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnTradeRightClick = NULL;

	if ( ! pFnTradeRightClick )
		pFnTradeRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTrade.TradeRightClick" );

	UUIScene_HouseTrade_execTradeRightClick_Parms TradeRightClick_Parms;
	TradeRightClick_Parms.Sender = Sender;
	TradeRightClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnTradeRightClick, &TradeRightClick_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = TradeRightClick_Parms.CustomContextMenu;

	return TradeRightClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseTrade.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseTrade::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTrade.PostInitUpdate" );

	UUIScene_HouseTrade_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_HouseTrade.OnInventoryItemRightClick
// [0x00020002] 
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void UUIScene_HouseTrade::OnInventoryItemRightClick ( int iBag, int iSlot )
{
	static UFunction* pFnOnInventoryItemRightClick = NULL;

	if ( ! pFnOnInventoryItemRightClick )
		pFnOnInventoryItemRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTrade.OnInventoryItemRightClick" );

	UUIScene_HouseTrade_execOnInventoryItemRightClick_Parms OnInventoryItemRightClick_Parms;
	OnInventoryItemRightClick_Parms.iBag = iBag;
	OnInventoryItemRightClick_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnOnInventoryItemRightClick, &OnInventoryItemRightClick_Parms, NULL );
};

// Function NowGame.UIScene_HouseTrade.CancelButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseTrade::CancelButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCancelButtonClicked = NULL;

	if ( ! pFnCancelButtonClicked )
		pFnCancelButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTrade.CancelButtonClicked" );

	UUIScene_HouseTrade_execCancelButtonClicked_Parms CancelButtonClicked_Parms;
	CancelButtonClicked_Parms.EventObject = EventObject;
	CancelButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCancelButtonClicked, &CancelButtonClicked_Parms, NULL );

	return CancelButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseTrade.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_HouseTrade::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTrade.SceneDeactivated" );

	UUIScene_HouseTrade_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_HouseTrade.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_HouseTrade::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTrade.SceneActivated" );

	UUIScene_HouseTrade_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_HouseTrade.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_HouseTrade::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTrade.InitScene" );

	UUIScene_HouseTrade_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_HouseTrade.CancelTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_HouseTrade::CancelTrade ( )
{
	static UFunction* pFnCancelTrade = NULL;

	if ( ! pFnCancelTrade )
		pFnCancelTrade = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseTrade.CancelTrade" );

	UUIScene_HouseTrade_execCancelTrade_Parms CancelTrade_Parms;

	pFnCancelTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelTrade, &CancelTrade_Parms, NULL );

	pFnCancelTrade->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_HUD.ShowMountPanel
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void UUIScene_HUD::eventShowMountPanel ( unsigned long bShow )
{
	static UFunction* pFnShowMountPanel = NULL;

	if ( ! pFnShowMountPanel )
		pFnShowMountPanel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HUD.ShowMountPanel" );

	UUIScene_HUD_eventShowMountPanel_Parms ShowMountPanel_Parms;
	ShowMountPanel_Parms.bShow = bShow;

	this->ProcessEvent ( pFnShowMountPanel, &ShowMountPanel_Parms, NULL );
};

// Function NowGame.UIScene_HUD.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_HUD::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HUD.SceneActivated" );

	UUIScene_HUD_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_HUD.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_HUD::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HUD.InitScene" );

	UUIScene_HUD_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_KeepTaxes.getPlayerHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerHouse* UUIScene_KeepTaxes::getPlayerHouse ( )
{
	static UFunction* pFngetPlayerHouse = NULL;

	if ( ! pFngetPlayerHouse )
		pFngetPlayerHouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTaxes.getPlayerHouse" );

	UUIScene_KeepTaxes_execgetPlayerHouse_Parms getPlayerHouse_Parms;

	this->ProcessEvent ( pFngetPlayerHouse, &getPlayerHouse_Parms, NULL );

	return getPlayerHouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_KeepTaxes.CloseButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_KeepTaxes::CloseButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCloseButtonClicked = NULL;

	if ( ! pFnCloseButtonClicked )
		pFnCloseButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTaxes.CloseButtonClicked" );

	UUIScene_KeepTaxes_execCloseButtonClicked_Parms CloseButtonClicked_Parms;
	CloseButtonClicked_Parms.EventObject = EventObject;
	CloseButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCloseButtonClicked, &CloseButtonClicked_Parms, NULL );

	return CloseButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_KeepTaxes.PostInitUpdate
// [0x00020000] 
// Parameters infos:

void UUIScene_KeepTaxes::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTaxes.PostInitUpdate" );

	UUIScene_KeepTaxes_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_KeepTaxes.UpdateStatus
// [0x00020002] 
// Parameters infos:

void UUIScene_KeepTaxes::UpdateStatus ( )
{
	static UFunction* pFnUpdateStatus = NULL;

	if ( ! pFnUpdateStatus )
		pFnUpdateStatus = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTaxes.UpdateStatus" );

	UUIScene_KeepTaxes_execUpdateStatus_Parms UpdateStatus_Parms;

	this->ProcessEvent ( pFnUpdateStatus, &UpdateStatus_Parms, NULL );
};

// Function NowGame.UIScene_KeepTaxes.btnTaxesClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_KeepTaxes::btnTaxesClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnbtnTaxesClicked = NULL;

	if ( ! pFnbtnTaxesClicked )
		pFnbtnTaxesClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTaxes.btnTaxesClicked" );

	UUIScene_KeepTaxes_execbtnTaxesClicked_Parms btnTaxesClicked_Parms;
	btnTaxesClicked_Parms.EventObject = EventObject;
	btnTaxesClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnbtnTaxesClicked, &btnTaxesClicked_Parms, NULL );

	return btnTaxesClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_KeepTaxes.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_KeepTaxes::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTaxes.InitScene" );

	UUIScene_KeepTaxes_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_KeepTaxes.getHousesInTerritor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUIScene_KeepTaxes::getHousesInTerritor ( )
{
	static UFunction* pFngetHousesInTerritor = NULL;

	if ( ! pFngetHousesInTerritor )
		pFngetHousesInTerritor = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTaxes.getHousesInTerritor" );

	UUIScene_KeepTaxes_execgetHousesInTerritor_Parms getHousesInTerritor_Parms;

	pFngetHousesInTerritor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetHousesInTerritor, &getHousesInTerritor_Parms, NULL );

	pFngetHousesInTerritor->FunctionFlags |= 0x400;

	return getHousesInTerritor_Parms.ReturnValue;
};

// Function NowGame.UIScene_KeepTaxes.getTax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUIScene_KeepTaxes::getTax ( )
{
	static UFunction* pFngetTax = NULL;

	if ( ! pFngetTax )
		pFngetTax = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTaxes.getTax" );

	UUIScene_KeepTaxes_execgetTax_Parms getTax_Parms;

	pFngetTax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetTax, &getTax_Parms, NULL );

	pFngetTax->FunctionFlags |= 0x400;

	return getTax_Parms.ReturnValue;
};

// Function NowGame.UIScene_KeepTerritoryControll.getPlayerHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerHouse* UUIScene_KeepTerritoryControll::getPlayerHouse ( )
{
	static UFunction* pFngetPlayerHouse = NULL;

	if ( ! pFngetPlayerHouse )
		pFngetPlayerHouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTerritoryControll.getPlayerHouse" );

	UUIScene_KeepTerritoryControll_execgetPlayerHouse_Parms getPlayerHouse_Parms;

	this->ProcessEvent ( pFngetPlayerHouse, &getPlayerHouse_Parms, NULL );

	return getPlayerHouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_KeepTerritoryControll.CloseButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_KeepTerritoryControll::CloseButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCloseButtonClicked = NULL;

	if ( ! pFnCloseButtonClicked )
		pFnCloseButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTerritoryControll.CloseButtonClicked" );

	UUIScene_KeepTerritoryControll_execCloseButtonClicked_Parms CloseButtonClicked_Parms;
	CloseButtonClicked_Parms.EventObject = EventObject;
	CloseButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCloseButtonClicked, &CloseButtonClicked_Parms, NULL );

	return CloseButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_KeepTerritoryControll.PostInitUpdate
// [0x00020000] 
// Parameters infos:

void UUIScene_KeepTerritoryControll::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTerritoryControll.PostInitUpdate" );

	UUIScene_KeepTerritoryControll_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_KeepTerritoryControll.UpdateStatus
// [0x00020002] 
// Parameters infos:

void UUIScene_KeepTerritoryControll::UpdateStatus ( )
{
	static UFunction* pFnUpdateStatus = NULL;

	if ( ! pFnUpdateStatus )
		pFnUpdateStatus = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTerritoryControll.UpdateStatus" );

	UUIScene_KeepTerritoryControll_execUpdateStatus_Parms UpdateStatus_Parms;

	this->ProcessEvent ( pFnUpdateStatus, &UpdateStatus_Parms, NULL );
};

// Function NowGame.UIScene_KeepTerritoryControll.btnNoClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_KeepTerritoryControll::btnNoClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnbtnNoClicked = NULL;

	if ( ! pFnbtnNoClicked )
		pFnbtnNoClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTerritoryControll.btnNoClicked" );

	UUIScene_KeepTerritoryControll_execbtnNoClicked_Parms btnNoClicked_Parms;
	btnNoClicked_Parms.EventObject = EventObject;
	btnNoClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnbtnNoClicked, &btnNoClicked_Parms, NULL );

	return btnNoClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_KeepTerritoryControll.btnYesClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_KeepTerritoryControll::btnYesClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnbtnYesClicked = NULL;

	if ( ! pFnbtnYesClicked )
		pFnbtnYesClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTerritoryControll.btnYesClicked" );

	UUIScene_KeepTerritoryControll_execbtnYesClicked_Parms btnYesClicked_Parms;
	btnYesClicked_Parms.EventObject = EventObject;
	btnYesClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnbtnYesClicked, &btnYesClicked_Parms, NULL );

	return btnYesClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_KeepTerritoryControll.btnTaxesClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_KeepTerritoryControll::btnTaxesClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnbtnTaxesClicked = NULL;

	if ( ! pFnbtnTaxesClicked )
		pFnbtnTaxesClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTerritoryControll.btnTaxesClicked" );

	UUIScene_KeepTerritoryControll_execbtnTaxesClicked_Parms btnTaxesClicked_Parms;
	btnTaxesClicked_Parms.EventObject = EventObject;
	btnTaxesClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnbtnTaxesClicked, &btnTaxesClicked_Parms, NULL );

	return btnTaxesClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_KeepTerritoryControll.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_KeepTerritoryControll::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTerritoryControll.InitScene" );

	UUIScene_KeepTerritoryControll_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_KeepTerritoryControll.IsTerritoryOwner
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UUIScene_KeepTerritoryControll::IsTerritoryOwner ( )
{
	static UFunction* pFnIsTerritoryOwner = NULL;

	if ( ! pFnIsTerritoryOwner )
		pFnIsTerritoryOwner = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTerritoryControll.IsTerritoryOwner" );

	UUIScene_KeepTerritoryControll_execIsTerritoryOwner_Parms IsTerritoryOwner_Parms;

	pFnIsTerritoryOwner->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTerritoryOwner, &IsTerritoryOwner_Parms, NULL );

	pFnIsTerritoryOwner->FunctionFlags |= 0x400;

	return IsTerritoryOwner_Parms.ReturnValue;
};

// Function NowGame.UIScene_KeepTerritoryControll.IsVotingAllowed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_KeepTerritoryControll::IsVotingAllowed ( )
{
	static UFunction* pFnIsVotingAllowed = NULL;

	if ( ! pFnIsVotingAllowed )
		pFnIsVotingAllowed = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_KeepTerritoryControll.IsVotingAllowed" );

	UUIScene_KeepTerritoryControll_execIsVotingAllowed_Parms IsVotingAllowed_Parms;

	pFnIsVotingAllowed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsVotingAllowed, &IsVotingAllowed_Parms, NULL );

	pFnIsVotingAllowed->FunctionFlags |= 0x400;

	return IsVotingAllowed_Parms.ReturnValue;
};

// Function NowGame.UIScene_Loading.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Loading::OnClose ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Loading.OnClose" );

	UUIScene_Loading_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.EventObject = EventObject;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_Loading.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Loading::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Loading.SceneActivated" );

	UUIScene_Loading_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Loading.Tick
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UUIScene_Loading::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Loading.Tick" );

	UUIScene_Loading_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.UIScene_Loading.SetState
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// int                            WhatState                      ( CPF_Parm )
// struct FString                 Info                           ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Loading::eventSetState ( int WhatState, struct FString Info )
{
	static UFunction* pFnSetState = NULL;

	if ( ! pFnSetState )
		pFnSetState = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Loading.SetState" );

	UUIScene_Loading_eventSetState_Parms SetState_Parms;
	SetState_Parms.WhatState = WhatState;
	memcpy ( &SetState_Parms.Info, &Info, 0xC );

	this->ProcessEvent ( pFnSetState, &SetState_Parms, NULL );
};

// Function NowGame.UIScene_Loading.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Loading::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Loading.InitScene" );

	UUIScene_Loading_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Login.CancelLogin
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Login::CancelLogin ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnCancelLogin = NULL;

	if ( ! pFnCancelLogin )
		pFnCancelLogin = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.CancelLogin" );

	UUIScene_Login_execCancelLogin_Parms CancelLogin_Parms;
	CancelLogin_Parms.O = O;
	CancelLogin_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCancelLogin, &CancelLogin_Parms, NULL );

	return CancelLogin_Parms.ReturnValue;
};

// Function NowGame.UIScene_Login.OnChatSubmitText
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIEditBox*              Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Login::OnChatSubmitText ( class UUIEditBox* Sender, int PlayerIndex )
{
	static UFunction* pFnOnChatSubmitText = NULL;

	if ( ! pFnOnChatSubmitText )
		pFnOnChatSubmitText = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.OnChatSubmitText" );

	UUIScene_Login_execOnChatSubmitText_Parms OnChatSubmitText_Parms;
	OnChatSubmitText_Parms.Sender = Sender;
	OnChatSubmitText_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnChatSubmitText, &OnChatSubmitText_Parms, NULL );

	return OnChatSubmitText_Parms.ReturnValue;
};

// Function NowGame.UIScene_Login.DoSaveUn
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// int                            Source                         ( CPF_Parm )

bool UUIScene_Login::DoSaveUn ( class UUIScreenObject* Target, int Source )
{
	static UFunction* pFnDoSaveUn = NULL;

	if ( ! pFnDoSaveUn )
		pFnDoSaveUn = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.DoSaveUn" );

	UUIScene_Login_execDoSaveUn_Parms DoSaveUn_Parms;
	DoSaveUn_Parms.Target = Target;
	DoSaveUn_Parms.Source = Source;

	this->ProcessEvent ( pFnDoSaveUn, &DoSaveUn_Parms, NULL );

	return DoSaveUn_Parms.ReturnValue;
};

// Function NowGame.UIScene_Login.ClearDelegates
// [0x00020002] 
// Parameters infos:

void UUIScene_Login::ClearDelegates ( )
{
	static UFunction* pFnClearDelegates = NULL;

	if ( ! pFnClearDelegates )
		pFnClearDelegates = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.ClearDelegates" );

	UUIScene_Login_execClearDelegates_Parms ClearDelegates_Parms;

	this->ProcessEvent ( pFnClearDelegates, &ClearDelegates_Parms, NULL );
};

// Function NowGame.UIScene_Login.Dologin
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Login::Dologin ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnDologin = NULL;

	if ( ! pFnDologin )
		pFnDologin = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.Dologin" );

	UUIScene_Login_execDologin_Parms Dologin_Parms;
	Dologin_Parms.O = O;
	Dologin_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnDologin, &Dologin_Parms, NULL );

	return Dologin_Parms.ReturnValue;
};

// Function NowGame.UIScene_Login.OnConnectionComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UUIScene_Login::OnConnectionComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnConnectionComplete = NULL;

	if ( ! pFnOnConnectionComplete )
		pFnOnConnectionComplete = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.OnConnectionComplete" );

	UUIScene_Login_execOnConnectionComplete_Parms OnConnectionComplete_Parms;
	OnConnectionComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnConnectionComplete, &OnConnectionComplete_Parms, NULL );
};

// Function NowGame.UIScene_Login.OnLoginComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UUIScene_Login::OnLoginComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnLoginComplete = NULL;

	if ( ! pFnOnLoginComplete )
		pFnOnLoginComplete = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.OnLoginComplete" );

	UUIScene_Login_execOnLoginComplete_Parms OnLoginComplete_Parms;
	OnLoginComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnLoginComplete, &OnLoginComplete_Parms, NULL );
};

// Function NowGame.UIScene_Login.OnClientMismatch
// [0x00020002] 
// Parameters infos:

void UUIScene_Login::OnClientMismatch ( )
{
	static UFunction* pFnOnClientMismatch = NULL;

	if ( ! pFnOnClientMismatch )
		pFnOnClientMismatch = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.OnClientMismatch" );

	UUIScene_Login_execOnClientMismatch_Parms OnClientMismatch_Parms;

	this->ProcessEvent ( pFnOnClientMismatch, &OnClientMismatch_Parms, NULL );
};

// Function NowGame.UIScene_Login.OnClientNoShard
// [0x00020002] 
// Parameters infos:

void UUIScene_Login::OnClientNoShard ( )
{
	static UFunction* pFnOnClientNoShard = NULL;

	if ( ! pFnOnClientNoShard )
		pFnOnClientNoShard = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.OnClientNoShard" );

	UUIScene_Login_execOnClientNoShard_Parms OnClientNoShard_Parms;

	this->ProcessEvent ( pFnOnClientNoShard, &OnClientNoShard_Parms, NULL );
};

// Function NowGame.UIScene_Login.LoginRetryUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_Login::LoginRetryUpdate ( )
{
	static UFunction* pFnLoginRetryUpdate = NULL;

	if ( ! pFnLoginRetryUpdate )
		pFnLoginRetryUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.LoginRetryUpdate" );

	UUIScene_Login_execLoginRetryUpdate_Parms LoginRetryUpdate_Parms;

	this->ProcessEvent ( pFnLoginRetryUpdate, &LoginRetryUpdate_Parms, NULL );
};

// Function NowGame.UIScene_Login.OnClientServDown
// [0x00020002] 
// Parameters infos:

void UUIScene_Login::OnClientServDown ( )
{
	static UFunction* pFnOnClientServDown = NULL;

	if ( ! pFnOnClientServDown )
		pFnOnClientServDown = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.OnClientServDown" );

	UUIScene_Login_execOnClientServDown_Parms OnClientServDown_Parms;

	this->ProcessEvent ( pFnOnClientServDown, &OnClientServDown_Parms, NULL );
};

// Function NowGame.UIScene_Login.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Login::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.UpdateScene" );

	UUIScene_Login_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Login.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Login::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.SceneActivated" );

	UUIScene_Login_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Login.initConfigValues
// [0x00020002] 
// Parameters infos:

void UUIScene_Login::initConfigValues ( )
{
	static UFunction* pFninitConfigValues = NULL;

	if ( ! pFninitConfigValues )
		pFninitConfigValues = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.initConfigValues" );

	UUIScene_Login_execinitConfigValues_Parms initConfigValues_Parms;

	this->ProcessEvent ( pFninitConfigValues, &initConfigValues_Parms, NULL );
};

// Function NowGame.UIScene_Login.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Login::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Login.InitScene" );

	UUIScene_Login_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_LootWindow.UpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_LootWindow::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LootWindow.UpdatePage" );

	UUIScene_LootWindow_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_LootWindow.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_LootWindow::OnClose ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LootWindow.OnClose" );

	UUIScene_LootWindow_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.EventObject = EventObject;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_LootWindow.OnLootClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_LootWindow::OnLootClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnLootClicked = NULL;

	if ( ! pFnOnLootClicked )
		pFnOnLootClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LootWindow.OnLootClicked" );

	UUIScene_LootWindow_execOnLootClicked_Parms OnLootClicked_Parms;
	OnLootClicked_Parms.EventObject = EventObject;
	OnLootClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnLootClicked, &OnLootClicked_Parms, NULL );

	return OnLootClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_LootWindow.OnItemDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_LootWindow::OnItemDragDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnItemDragDrop = NULL;

	if ( ! pFnOnItemDragDrop )
		pFnOnItemDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LootWindow.OnItemDragDrop" );

	UUIScene_LootWindow_execOnItemDragDrop_Parms OnItemDragDrop_Parms;
	OnItemDragDrop_Parms.Target = Target;
	OnItemDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnOnItemDragDrop, &OnItemDragDrop_Parms, NULL );

	return OnItemDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_LootWindow.OnLootRightClicked
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_LootWindow::OnLootRightClicked ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnLootRightClicked = NULL;

	if ( ! pFnOnLootRightClicked )
		pFnOnLootRightClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LootWindow.OnLootRightClicked" );

	UUIScene_LootWindow_execOnLootRightClicked_Parms OnLootRightClicked_Parms;
	OnLootRightClicked_Parms.Sender = Sender;
	OnLootRightClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnLootRightClicked, &OnLootRightClicked_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnLootRightClicked_Parms.CustomContextMenu;

	return OnLootRightClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_LootWindow.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_LootWindow::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LootWindow.UpdateScene" );

	UUIScene_LootWindow_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_LootWindow.LootChanged
// [0x00020002] 
// Parameters infos:

void UUIScene_LootWindow::LootChanged ( )
{
	static UFunction* pFnLootChanged = NULL;

	if ( ! pFnLootChanged )
		pFnLootChanged = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LootWindow.LootChanged" );

	UUIScene_LootWindow_execLootChanged_Parms LootChanged_Parms;

	this->ProcessEvent ( pFnLootChanged, &LootChanged_Parms, NULL );
};

// Function NowGame.UIScene_LootWindow.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_LootWindow::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LootWindow.SceneDeactivated" );

	UUIScene_LootWindow_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_LootWindow.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_LootWindow::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LootWindow.SceneActivated" );

	UUIScene_LootWindow_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_LootWindow.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_LootWindow::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LootWindow.InitScene" );

	UUIScene_LootWindow_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_LootWindow.NowLeaveLootSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_LootWindow::NowLeaveLootSession ( )
{
	static UFunction* pFnNowLeaveLootSession = NULL;

	if ( ! pFnNowLeaveLootSession )
		pFnNowLeaveLootSession = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LootWindow.NowLeaveLootSession" );

	UUIScene_LootWindow_execNowLeaveLootSession_Parms NowLeaveLootSession_Parms;

	pFnNowLeaveLootSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNowLeaveLootSession, &NowLeaveLootSession_Parms, NULL );

	pFnNowLeaveLootSession->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_NewLoot.UpdateTrade
// [0x00020002] 
// Parameters infos:

void UUIScene_NewLoot::UpdateTrade ( )
{
	static UFunction* pFnUpdateTrade = NULL;

	if ( ! pFnUpdateTrade )
		pFnUpdateTrade = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NewLoot.UpdateTrade" );

	UUIScene_NewLoot_execUpdateTrade_Parms UpdateTrade_Parms;

	this->ProcessEvent ( pFnUpdateTrade, &UpdateTrade_Parms, NULL );
};

// Function NowGame.UIScene_NewLoot.TradeRightClick
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_NewLoot::TradeRightClick ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnTradeRightClick = NULL;

	if ( ! pFnTradeRightClick )
		pFnTradeRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NewLoot.TradeRightClick" );

	UUIScene_NewLoot_execTradeRightClick_Parms TradeRightClick_Parms;
	TradeRightClick_Parms.Sender = Sender;
	TradeRightClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnTradeRightClick, &TradeRightClick_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = TradeRightClick_Parms.CustomContextMenu;

	return TradeRightClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_NewLoot.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_NewLoot::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NewLoot.PostInitUpdate" );

	UUIScene_NewLoot_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_NewLoot.OnInventoryItemRightClick
// [0x00020002] 
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void UUIScene_NewLoot::OnInventoryItemRightClick ( int iBag, int iSlot )
{
	static UFunction* pFnOnInventoryItemRightClick = NULL;

	if ( ! pFnOnInventoryItemRightClick )
		pFnOnInventoryItemRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NewLoot.OnInventoryItemRightClick" );

	UUIScene_NewLoot_execOnInventoryItemRightClick_Parms OnInventoryItemRightClick_Parms;
	OnInventoryItemRightClick_Parms.iBag = iBag;
	OnInventoryItemRightClick_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnOnInventoryItemRightClick, &OnInventoryItemRightClick_Parms, NULL );
};

// Function NowGame.UIScene_NewLoot.CancelButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_NewLoot::CancelButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCancelButtonClicked = NULL;

	if ( ! pFnCancelButtonClicked )
		pFnCancelButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NewLoot.CancelButtonClicked" );

	UUIScene_NewLoot_execCancelButtonClicked_Parms CancelButtonClicked_Parms;
	CancelButtonClicked_Parms.EventObject = EventObject;
	CancelButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCancelButtonClicked, &CancelButtonClicked_Parms, NULL );

	return CancelButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_NewLoot.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_NewLoot::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NewLoot.SceneDeactivated" );

	UUIScene_NewLoot_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_NewLoot.OnItemDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_NewLoot::OnItemDragDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnItemDragDrop = NULL;

	if ( ! pFnOnItemDragDrop )
		pFnOnItemDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NewLoot.OnItemDragDrop" );

	UUIScene_NewLoot_execOnItemDragDrop_Parms OnItemDragDrop_Parms;
	OnItemDragDrop_Parms.Target = Target;
	OnItemDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnOnItemDragDrop, &OnItemDragDrop_Parms, NULL );

	return OnItemDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_NewLoot.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_NewLoot::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NewLoot.SceneActivated" );

	UUIScene_NewLoot_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_NewLoot.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_NewLoot::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NewLoot.InitScene" );

	UUIScene_NewLoot_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_NewLoot.CancelTrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_NewLoot::CancelTrade ( )
{
	static UFunction* pFnCancelTrade = NULL;

	if ( ! pFnCancelTrade )
		pFnCancelTrade = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NewLoot.CancelTrade" );

	UUIScene_NewLoot_execCancelTrade_Parms CancelTrade_Parms;

	pFnCancelTrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelTrade, &CancelTrade_Parms, NULL );

	pFnCancelTrade->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_NPCTerritoryControll.CloseButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_NPCTerritoryControll::CloseButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCloseButtonClicked = NULL;

	if ( ! pFnCloseButtonClicked )
		pFnCloseButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NPCTerritoryControll.CloseButtonClicked" );

	UUIScene_NPCTerritoryControll_execCloseButtonClicked_Parms CloseButtonClicked_Parms;
	CloseButtonClicked_Parms.EventObject = EventObject;
	CloseButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCloseButtonClicked, &CloseButtonClicked_Parms, NULL );

	return CloseButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_NPCTerritoryControll.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_NPCTerritoryControll::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NPCTerritoryControll.PostInitUpdate" );

	UUIScene_NPCTerritoryControll_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_NPCTerritoryControll.VoteClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_NPCTerritoryControll::VoteClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnVoteClicked = NULL;

	if ( ! pFnVoteClicked )
		pFnVoteClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NPCTerritoryControll.VoteClicked" );

	UUIScene_NPCTerritoryControll_execVoteClicked_Parms VoteClicked_Parms;
	VoteClicked_Parms.EventObject = EventObject;
	VoteClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnVoteClicked, &VoteClicked_Parms, NULL );

	return VoteClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_NPCTerritoryControll.UpdateStatus
// [0x00020002] 
// Parameters infos:

void UUIScene_NPCTerritoryControll::UpdateStatus ( )
{
	static UFunction* pFnUpdateStatus = NULL;

	if ( ! pFnUpdateStatus )
		pFnUpdateStatus = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NPCTerritoryControll.UpdateStatus" );

	UUIScene_NPCTerritoryControll_execUpdateStatus_Parms UpdateStatus_Parms;

	this->ProcessEvent ( pFnUpdateStatus, &UpdateStatus_Parms, NULL );
};

// Function NowGame.UIScene_NPCTerritoryControll.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_NPCTerritoryControll::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NPCTerritoryControll.InitScene" );

	UUIScene_NPCTerritoryControll_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_NPCTerritoryControll.getVote
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UUIScene_NPCTerritoryControll::getVote ( )
{
	static UFunction* pFngetVote = NULL;

	if ( ! pFngetVote )
		pFngetVote = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_NPCTerritoryControll.getVote" );

	UUIScene_NPCTerritoryControll_execgetVote_Parms getVote_Parms;

	pFngetVote->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetVote, &getVote_Parms, NULL );

	pFngetVote->FunctionFlags |= 0x400;

	return getVote_Parms.ReturnValue;
};

// Function NowGame.UIScene_Overlay.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Overlay::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Overlay.UpdateScene" );

	UUIScene_Overlay_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Overlay.ChangeScene
// [0x00020002] 
// Parameters infos:
// struct FString                 Scene                          ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  closecurrent                   ( CPF_Parm )

void UUIScene_Overlay::ChangeScene ( struct FString Scene, unsigned long closecurrent )
{
	static UFunction* pFnChangeScene = NULL;

	if ( ! pFnChangeScene )
		pFnChangeScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Overlay.ChangeScene" );

	UUIScene_Overlay_execChangeScene_Parms ChangeScene_Parms;
	memcpy ( &ChangeScene_Parms.Scene, &Scene, 0xC );
	ChangeScene_Parms.closecurrent = closecurrent;

	this->ProcessEvent ( pFnChangeScene, &ChangeScene_Parms, NULL );
};

// Function NowGame.UIScene_Overlay.UpdateCurrentStep
// [0x00020002] 
// Parameters infos:
// int                            Step                           ( CPF_Parm )

void UUIScene_Overlay::UpdateCurrentStep ( int Step )
{
	static UFunction* pFnUpdateCurrentStep = NULL;

	if ( ! pFnUpdateCurrentStep )
		pFnUpdateCurrentStep = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Overlay.UpdateCurrentStep" );

	UUIScene_Overlay_execUpdateCurrentStep_Parms UpdateCurrentStep_Parms;
	UpdateCurrentStep_Parms.Step = Step;

	this->ProcessEvent ( pFnUpdateCurrentStep, &UpdateCurrentStep_Parms, NULL );
};

// Function NowGame.UIScene_Overlay.OnBackClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Overlay::OnBackClick ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnBackClick = NULL;

	if ( ! pFnOnBackClick )
		pFnOnBackClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Overlay.OnBackClick" );

	UUIScene_Overlay_execOnBackClick_Parms OnBackClick_Parms;
	OnBackClick_Parms.O = O;
	OnBackClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnBackClick, &OnBackClick_Parms, NULL );

	return OnBackClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_Overlay.OnNextClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Overlay::OnNextClick ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnNextClick = NULL;

	if ( ! pFnOnNextClick )
		pFnOnNextClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Overlay.OnNextClick" );

	UUIScene_Overlay_execOnNextClick_Parms OnNextClick_Parms;
	OnNextClick_Parms.O = O;
	OnNextClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnNextClick, &OnNextClick_Parms, NULL );

	return OnNextClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_Overlay.OnCloseClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Overlay::OnCloseClick ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnCloseClick = NULL;

	if ( ! pFnOnCloseClick )
		pFnOnCloseClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Overlay.OnCloseClick" );

	UUIScene_Overlay_execOnCloseClick_Parms OnCloseClick_Parms;
	OnCloseClick_Parms.O = O;
	OnCloseClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnCloseClick, &OnCloseClick_Parms, NULL );

	return OnCloseClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_Overlay.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Overlay::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Overlay.SceneDeactivated" );

	UUIScene_Overlay_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Overlay.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Overlay::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Overlay.SceneActivated" );

	UUIScene_Overlay_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Overlay.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Overlay::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Overlay.InitScene" );

	UUIScene_Overlay_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_PetBank.SetMountBagSize
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            newValue                       ( CPF_Parm )

void UUIScene_PetBank::eventSetMountBagSize ( int newValue )
{
	static UFunction* pFnSetMountBagSize = NULL;

	if ( ! pFnSetMountBagSize )
		pFnSetMountBagSize = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.SetMountBagSize" );

	UUIScene_PetBank_eventSetMountBagSize_Parms SetMountBagSize_Parms;
	SetMountBagSize_Parms.newValue = newValue;

	this->ProcessEvent ( pFnSetMountBagSize, &SetMountBagSize_Parms, NULL );
};

// Function NowGame.UIScene_PetBank.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_PetBank::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.PostInitUpdate" );

	UUIScene_PetBank_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_PetBank.OnItemOpenContextMenu
// [0x00420000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_PetBank::OnItemOpenContextMenu ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnItemOpenContextMenu = NULL;

	if ( ! pFnOnItemOpenContextMenu )
		pFnOnItemOpenContextMenu = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.OnItemOpenContextMenu" );

	UUIScene_PetBank_execOnItemOpenContextMenu_Parms OnItemOpenContextMenu_Parms;
	OnItemOpenContextMenu_Parms.Sender = Sender;
	OnItemOpenContextMenu_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnItemOpenContextMenu, &OnItemOpenContextMenu_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnItemOpenContextMenu_Parms.CustomContextMenu;

	return OnItemOpenContextMenu_Parms.ReturnValue;
};

// Function NowGame.UIScene_PetBank.OnSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PetBank::OnSlotClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSlotClicked = NULL;

	if ( ! pFnOnSlotClicked )
		pFnOnSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.OnSlotClicked" );

	UUIScene_PetBank_execOnSlotClicked_Parms OnSlotClicked_Parms;
	OnSlotClicked_Parms.EventObject = EventObject;
	OnSlotClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSlotClicked, &OnSlotClicked_Parms, NULL );

	return OnSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_PetBank.OnItemDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_PetBank::OnItemDragDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnItemDragDrop = NULL;

	if ( ! pFnOnItemDragDrop )
		pFnOnItemDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.OnItemDragDrop" );

	UUIScene_PetBank_execOnItemDragDrop_Parms OnItemDragDrop_Parms;
	OnItemDragDrop_Parms.Target = Target;
	OnItemDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnOnItemDragDrop, &OnItemDragDrop_Parms, NULL );

	return OnItemDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_PetBank.OnItemDragBegin
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_PetBank::OnItemDragBegin ( class UUIScreenObject* Source )
{
	static UFunction* pFnOnItemDragBegin = NULL;

	if ( ! pFnOnItemDragBegin )
		pFnOnItemDragBegin = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.OnItemDragBegin" );

	UUIScene_PetBank_execOnItemDragBegin_Parms OnItemDragBegin_Parms;
	OnItemDragBegin_Parms.Source = Source;

	this->ProcessEvent ( pFnOnItemDragBegin, &OnItemDragBegin_Parms, NULL );

	return OnItemDragBegin_Parms.ReturnValue;
};

// Function NowGame.UIScene_PetBank.OnItemClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PetBank::OnItemClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnItemClicked = NULL;

	if ( ! pFnOnItemClicked )
		pFnOnItemClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.OnItemClicked" );

	UUIScene_PetBank_execOnItemClicked_Parms OnItemClicked_Parms;
	OnItemClicked_Parms.EventObject = EventObject;
	OnItemClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnItemClicked, &OnItemClicked_Parms, NULL );

	return OnItemClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_PetBank.UpdateArmorSlots
// [0x00020000] 
// Parameters infos:

void UUIScene_PetBank::UpdateArmorSlots ( )
{
	static UFunction* pFnUpdateArmorSlots = NULL;

	if ( ! pFnUpdateArmorSlots )
		pFnUpdateArmorSlots = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.UpdateArmorSlots" );

	UUIScene_PetBank_execUpdateArmorSlots_Parms UpdateArmorSlots_Parms;

	this->ProcessEvent ( pFnUpdateArmorSlots, &UpdateArmorSlots_Parms, NULL );
};

// Function NowGame.UIScene_PetBank.UpdatePage
// [0x00020000] 
// Parameters infos:

void UUIScene_PetBank::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.UpdatePage" );

	UUIScene_PetBank_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_PetBank.ItemListChanged
// [0x00020002] 
// Parameters infos:
// TArray< struct FString >       ItemData                       ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_PetBank::ItemListChanged ( TArray< struct FString > ItemData )
{
	static UFunction* pFnItemListChanged = NULL;

	if ( ! pFnItemListChanged )
		pFnItemListChanged = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.ItemListChanged" );

	UUIScene_PetBank_execItemListChanged_Parms ItemListChanged_Parms;
	memcpy ( &ItemListChanged_Parms.ItemData, &ItemData, 0xC );

	this->ProcessEvent ( pFnItemListChanged, &ItemListChanged_Parms, NULL );
};

// Function NowGame.UIScene_PetBank.FadeIn
// [0x00020002] 
// Parameters infos:
// unsigned long                  bResetOpacity                  ( CPF_Parm )

void UUIScene_PetBank::FadeIn ( unsigned long bResetOpacity )
{
	static UFunction* pFnFadeIn = NULL;

	if ( ! pFnFadeIn )
		pFnFadeIn = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.FadeIn" );

	UUIScene_PetBank_execFadeIn_Parms FadeIn_Parms;
	FadeIn_Parms.bResetOpacity = bResetOpacity;

	this->ProcessEvent ( pFnFadeIn, &FadeIn_Parms, NULL );
};

// Function NowGame.UIScene_PetBank.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_PetBank::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.SceneDeactivated" );

	UUIScene_PetBank_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_PetBank.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_PetBank::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.SceneActivated" );

	UUIScene_PetBank_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_PetBank.CloseClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PetBank::CloseClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCloseClicked = NULL;

	if ( ! pFnCloseClicked )
		pFnCloseClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.CloseClicked" );

	UUIScene_PetBank_execCloseClicked_Parms CloseClicked_Parms;
	CloseClicked_Parms.EventObject = EventObject;
	CloseClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCloseClicked, &CloseClicked_Parms, NULL );

	return CloseClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_PetBank.ContentUpdated
// [0x00020002] 
// Parameters infos:

void UUIScene_PetBank::ContentUpdated ( )
{
	static UFunction* pFnContentUpdated = NULL;

	if ( ! pFnContentUpdated )
		pFnContentUpdated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.ContentUpdated" );

	UUIScene_PetBank_execContentUpdated_Parms ContentUpdated_Parms;

	this->ProcessEvent ( pFnContentUpdated, &ContentUpdated_Parms, NULL );
};

// Function NowGame.UIScene_PetBank.GetAndSetStatInfo
// [0x00020002] 
// Parameters infos:

void UUIScene_PetBank::GetAndSetStatInfo ( )
{
	static UFunction* pFnGetAndSetStatInfo = NULL;

	if ( ! pFnGetAndSetStatInfo )
		pFnGetAndSetStatInfo = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.GetAndSetStatInfo" );

	UUIScene_PetBank_execGetAndSetStatInfo_Parms GetAndSetStatInfo_Parms;

	this->ProcessEvent ( pFnGetAndSetStatInfo, &GetAndSetStatInfo_Parms, NULL );
};

// Function NowGame.UIScene_PetBank.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_PetBank::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.InitScene" );

	UUIScene_PetBank_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_PetBank.GetAndSetProfileStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_PetBank::GetAndSetProfileStats ( )
{
	static UFunction* pFnGetAndSetProfileStats = NULL;

	if ( ! pFnGetAndSetProfileStats )
		pFnGetAndSetProfileStats = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetBank.GetAndSetProfileStats" );

	UUIScene_PetBank_execGetAndSetProfileStats_Parms GetAndSetProfileStats_Parms;

	pFnGetAndSetProfileStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAndSetProfileStats, &GetAndSetProfileStats_Parms, NULL );

	pFnGetAndSetProfileStats->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.getHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatar*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatar* UUIScene_PlayerVendorOwnerBrowse::getHouse ( )
{
	static UFunction* pFngetHouse = NULL;

	if ( ! pFngetHouse )
		pFngetHouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.getHouse" );

	UUIScene_PlayerVendorOwnerBrowse_execgetHouse_Parms getHouse_Parms;

	this->ProcessEvent ( pFngetHouse, &getHouse_Parms, NULL );

	return getHouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.PostRefineMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_PlayerVendorOwnerBrowse::PostRefineMessage ( struct FString msg )
{
	static UFunction* pFnPostRefineMessage = NULL;

	if ( ! pFnPostRefineMessage )
		pFnPostRefineMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.PostRefineMessage" );

	UUIScene_PlayerVendorOwnerBrowse_execPostRefineMessage_Parms PostRefineMessage_Parms;
	memcpy ( &PostRefineMessage_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnPostRefineMessage, &PostRefineMessage_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.UpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_PlayerVendorOwnerBrowse::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.UpdatePage" );

	UUIScene_PlayerVendorOwnerBrowse_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.UpdateTrade
// [0x00020002] 
// Parameters infos:

void UUIScene_PlayerVendorOwnerBrowse::UpdateTrade ( )
{
	static UFunction* pFnUpdateTrade = NULL;

	if ( ! pFnUpdateTrade )
		pFnUpdateTrade = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.UpdateTrade" );

	UUIScene_PlayerVendorOwnerBrowse_execUpdateTrade_Parms UpdateTrade_Parms;

	this->ProcessEvent ( pFnUpdateTrade, &UpdateTrade_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.MessageEvent
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_PlayerVendorOwnerBrowse::MessageEvent ( struct FString msg )
{
	static UFunction* pFnMessageEvent = NULL;

	if ( ! pFnMessageEvent )
		pFnMessageEvent = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.MessageEvent" );

	UUIScene_PlayerVendorOwnerBrowse_execMessageEvent_Parms MessageEvent_Parms;
	memcpy ( &MessageEvent_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnMessageEvent, &MessageEvent_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnWantedItemSlotDropped
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_PlayerVendorOwnerBrowse::OnWantedItemSlotDropped ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnWantedItemSlotDropped = NULL;

	if ( ! pFnOnWantedItemSlotDropped )
		pFnOnWantedItemSlotDropped = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnWantedItemSlotDropped" );

	UUIScene_PlayerVendorOwnerBrowse_execOnWantedItemSlotDropped_Parms OnWantedItemSlotDropped_Parms;
	OnWantedItemSlotDropped_Parms.Target = Target;
	OnWantedItemSlotDropped_Parms.Source = Source;

	this->ProcessEvent ( pFnOnWantedItemSlotDropped, &OnWantedItemSlotDropped_Parms, NULL );

	return OnWantedItemSlotDropped_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnWantedItemSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PlayerVendorOwnerBrowse::OnWantedItemSlotClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnWantedItemSlotClicked = NULL;

	if ( ! pFnOnWantedItemSlotClicked )
		pFnOnWantedItemSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnWantedItemSlotClicked" );

	UUIScene_PlayerVendorOwnerBrowse_execOnWantedItemSlotClicked_Parms OnWantedItemSlotClicked_Parms;
	OnWantedItemSlotClicked_Parms.EventObject = EventObject;
	OnWantedItemSlotClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnWantedItemSlotClicked, &OnWantedItemSlotClicked_Parms, NULL );

	return OnWantedItemSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnSellSlotDropped
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_PlayerVendorOwnerBrowse::OnSellSlotDropped ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnSellSlotDropped = NULL;

	if ( ! pFnOnSellSlotDropped )
		pFnOnSellSlotDropped = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnSellSlotDropped" );

	UUIScene_PlayerVendorOwnerBrowse_execOnSellSlotDropped_Parms OnSellSlotDropped_Parms;
	OnSellSlotDropped_Parms.Target = Target;
	OnSellSlotDropped_Parms.Source = Source;

	this->ProcessEvent ( pFnOnSellSlotDropped, &OnSellSlotDropped_Parms, NULL );

	return OnSellSlotDropped_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnSellSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PlayerVendorOwnerBrowse::OnSellSlotClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSellSlotClicked = NULL;

	if ( ! pFnOnSellSlotClicked )
		pFnOnSellSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnSellSlotClicked" );

	UUIScene_PlayerVendorOwnerBrowse_execOnSellSlotClicked_Parms OnSellSlotClicked_Parms;
	OnSellSlotClicked_Parms.EventObject = EventObject;
	OnSellSlotClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSellSlotClicked, &OnSellSlotClicked_Parms, NULL );

	return OnSellSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnPostItem
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PlayerVendorOwnerBrowse::OnPostItem ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnPostItem = NULL;

	if ( ! pFnOnPostItem )
		pFnOnPostItem = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnPostItem" );

	UUIScene_PlayerVendorOwnerBrowse_execOnPostItem_Parms OnPostItem_Parms;
	OnPostItem_Parms.EventObject = EventObject;
	OnPostItem_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnPostItem, &OnPostItem_Parms, NULL );

	return OnPostItem_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.sendMessageToVendor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 VendorMessage                  ( CPF_Parm | CPF_NeedCtorLink )

bool UUIScene_PlayerVendorOwnerBrowse::sendMessageToVendor ( struct FString VendorMessage )
{
	static UFunction* pFnsendMessageToVendor = NULL;

	if ( ! pFnsendMessageToVendor )
		pFnsendMessageToVendor = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.sendMessageToVendor" );

	UUIScene_PlayerVendorOwnerBrowse_execsendMessageToVendor_Parms sendMessageToVendor_Parms;
	memcpy ( &sendMessageToVendor_Parms.VendorMessage, &VendorMessage, 0xC );

	this->ProcessEvent ( pFnsendMessageToVendor, &sendMessageToVendor_Parms, NULL );

	return sendMessageToVendor_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.TradeRightClick
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_PlayerVendorOwnerBrowse::TradeRightClick ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnTradeRightClick = NULL;

	if ( ! pFnTradeRightClick )
		pFnTradeRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.TradeRightClick" );

	UUIScene_PlayerVendorOwnerBrowse_execTradeRightClick_Parms TradeRightClick_Parms;
	TradeRightClick_Parms.Sender = Sender;
	TradeRightClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnTradeRightClick, &TradeRightClick_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = TradeRightClick_Parms.CustomContextMenu;

	return TradeRightClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PlayerVendorOwnerBrowse::OnClose ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnClose" );

	UUIScene_PlayerVendorOwnerBrowse_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.EventObject = EventObject;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_PlayerVendorOwnerBrowse::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.SceneDeactivated" );

	UUIScene_PlayerVendorOwnerBrowse_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_PlayerVendorOwnerBrowse::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.SceneActivated" );

	UUIScene_PlayerVendorOwnerBrowse_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnChatRawInputKey
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FInputEventParameters   EventParms                     ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UUIScene_PlayerVendorOwnerBrowse::OnChatRawInputKey ( struct FInputEventParameters* EventParms )
{
	static UFunction* pFnOnChatRawInputKey = NULL;

	if ( ! pFnOnChatRawInputKey )
		pFnOnChatRawInputKey = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.OnChatRawInputKey" );

	UUIScene_PlayerVendorOwnerBrowse_execOnChatRawInputKey_Parms OnChatRawInputKey_Parms;

	this->ProcessEvent ( pFnOnChatRawInputKey, &OnChatRawInputKey_Parms, NULL );

	if ( EventParms )
		memcpy ( EventParms, &OnChatRawInputKey_Parms.EventParms, 0x20 );

	return OnChatRawInputKey_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_PlayerVendorOwnerBrowse::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.InitScene" );

	UUIScene_PlayerVendorOwnerBrowse_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.getVendor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_PlayerVendorOwnerBrowse::getVendor ( )
{
	static UFunction* pFngetVendor = NULL;

	if ( ! pFngetVendor )
		pFngetVendor = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.getVendor" );

	UUIScene_PlayerVendorOwnerBrowse_execgetVendor_Parms getVendor_Parms;

	pFngetVendor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFngetVendor, &getVendor_Parms, NULL );

	pFngetVendor->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_PlayerVendorOwnerBrowse.AddItemToVendor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 _sellItemGuid                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 _wantedItemGuid                ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 _Quantity                      ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_PlayerVendorOwnerBrowse::AddItemToVendor ( struct FString _sellItemGuid, struct FString _wantedItemGuid, struct FString _Quantity )
{
	static UFunction* pFnAddItemToVendor = NULL;

	if ( ! pFnAddItemToVendor )
		pFnAddItemToVendor = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorOwnerBrowse.AddItemToVendor" );

	UUIScene_PlayerVendorOwnerBrowse_execAddItemToVendor_Parms AddItemToVendor_Parms;
	memcpy ( &AddItemToVendor_Parms._sellItemGuid, &_sellItemGuid, 0xC );
	memcpy ( &AddItemToVendor_Parms._wantedItemGuid, &_wantedItemGuid, 0xC );
	memcpy ( &AddItemToVendor_Parms._Quantity, &_Quantity, 0xC );

	pFnAddItemToVendor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddItemToVendor, &AddItemToVendor_Parms, NULL );

	pFnAddItemToVendor->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_PotionMaking.UpdateWorkBench
// [0x00020002] 
// Parameters infos:

void UUIScene_PotionMaking::UpdateWorkBench ( )
{
	static UFunction* pFnUpdateWorkBench = NULL;

	if ( ! pFnUpdateWorkBench )
		pFnUpdateWorkBench = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.UpdateWorkBench" );

	UUIScene_PotionMaking_execUpdateWorkBench_Parms UpdateWorkBench_Parms;

	this->ProcessEvent ( pFnUpdateWorkBench, &UpdateWorkBench_Parms, NULL );
};

// Function NowGame.UIScene_PotionMaking.UpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_PotionMaking::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.UpdatePage" );

	UUIScene_PotionMaking_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_PotionMaking.CheckSkills
// [0x00020002] 
// Parameters infos:

void UUIScene_PotionMaking::CheckSkills ( )
{
	static UFunction* pFnCheckSkills = NULL;

	if ( ! pFnCheckSkills )
		pFnCheckSkills = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.CheckSkills" );

	UUIScene_PotionMaking_execCheckSkills_Parms CheckSkills_Parms;

	this->ProcessEvent ( pFnCheckSkills, &CheckSkills_Parms, NULL );
};

// Function NowGame.UIScene_PotionMaking.VerifyItems
// [0x00020002] 
// Parameters infos:

void UUIScene_PotionMaking::VerifyItems ( )
{
	static UFunction* pFnVerifyItems = NULL;

	if ( ! pFnVerifyItems )
		pFnVerifyItems = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.VerifyItems" );

	UUIScene_PotionMaking_execVerifyItems_Parms VerifyItems_Parms;

	this->ProcessEvent ( pFnVerifyItems, &VerifyItems_Parms, NULL );
};

// Function NowGame.UIScene_PotionMaking.UpdateMessage
// [0x00020002] 
// Parameters infos:

void UUIScene_PotionMaking::UpdateMessage ( )
{
	static UFunction* pFnUpdateMessage = NULL;

	if ( ! pFnUpdateMessage )
		pFnUpdateMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.UpdateMessage" );

	UUIScene_PotionMaking_execUpdateMessage_Parms UpdateMessage_Parms;

	this->ProcessEvent ( pFnUpdateMessage, &UpdateMessage_Parms, NULL );
};

// Function NowGame.UIScene_PotionMaking.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_PotionMaking::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.UpdateScene" );

	UUIScene_PotionMaking_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_PotionMaking.SetVialText
// [0x00020002] 
// Parameters infos:

void UUIScene_PotionMaking::SetVialText ( )
{
	static UFunction* pFnSetVialText = NULL;

	if ( ! pFnSetVialText )
		pFnSetVialText = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.SetVialText" );

	UUIScene_PotionMaking_execSetVialText_Parms SetVialText_Parms;

	this->ProcessEvent ( pFnSetVialText, &SetVialText_Parms, NULL );
};

// Function NowGame.UIScene_PotionMaking.SetMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_PotionMaking::SetMessage ( struct FString Text )
{
	static UFunction* pFnSetMessage = NULL;

	if ( ! pFnSetMessage )
		pFnSetMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.SetMessage" );

	UUIScene_PotionMaking_execSetMessage_Parms SetMessage_Parms;
	memcpy ( &SetMessage_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnSetMessage, &SetMessage_Parms, NULL );
};

// Function NowGame.UIScene_PotionMaking.OnOpenContextMenu
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_PotionMaking::OnOpenContextMenu ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnOpenContextMenu = NULL;

	if ( ! pFnOnOpenContextMenu )
		pFnOnOpenContextMenu = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.OnOpenContextMenu" );

	UUIScene_PotionMaking_execOnOpenContextMenu_Parms OnOpenContextMenu_Parms;
	OnOpenContextMenu_Parms.Sender = Sender;
	OnOpenContextMenu_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnOpenContextMenu, &OnOpenContextMenu_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnOpenContextMenu_Parms.CustomContextMenu;

	return OnOpenContextMenu_Parms.ReturnValue;
};

// Function NowGame.UIScene_PotionMaking.OnDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_PotionMaking::OnDragDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnDragDrop = NULL;

	if ( ! pFnOnDragDrop )
		pFnOnDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.OnDragDrop" );

	UUIScene_PotionMaking_execOnDragDrop_Parms OnDragDrop_Parms;
	OnDragDrop_Parms.Target = Target;
	OnDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnOnDragDrop, &OnDragDrop_Parms, NULL );

	return OnDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_PotionMaking.OnClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PotionMaking::OnClick ( class UUIScreenObject* Target, int PlayerIndex )
{
	static UFunction* pFnOnClick = NULL;

	if ( ! pFnOnClick )
		pFnOnClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.OnClick" );

	UUIScene_PotionMaking_execOnClick_Parms OnClick_Parms;
	OnClick_Parms.Target = Target;
	OnClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClick, &OnClick_Parms, NULL );

	return OnClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_PotionMaking.VerifyWorkbench
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_PotionMaking::VerifyWorkbench ( )
{
	static UFunction* pFnVerifyWorkbench = NULL;

	if ( ! pFnVerifyWorkbench )
		pFnVerifyWorkbench = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.VerifyWorkbench" );

	UUIScene_PotionMaking_execVerifyWorkbench_Parms VerifyWorkbench_Parms;

	this->ProcessEvent ( pFnVerifyWorkbench, &VerifyWorkbench_Parms, NULL );

	return VerifyWorkbench_Parms.ReturnValue;
};

// Function NowGame.UIScene_PotionMaking.OnCreate
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PotionMaking::OnCreate ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnCreate = NULL;

	if ( ! pFnOnCreate )
		pFnOnCreate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.OnCreate" );

	UUIScene_PotionMaking_execOnCreate_Parms OnCreate_Parms;
	OnCreate_Parms.EventObject = EventObject;
	OnCreate_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnCreate, &OnCreate_Parms, NULL );

	return OnCreate_Parms.ReturnValue;
};

// Function NowGame.UIScene_PotionMaking.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PotionMaking::OnClose ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.OnClose" );

	UUIScene_PotionMaking_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.EventObject = EventObject;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_PotionMaking.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_PotionMaking::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.SceneDeactivated" );

	UUIScene_PotionMaking_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_PotionMaking.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_PotionMaking::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.SceneActivated" );

	UUIScene_PotionMaking_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_PotionMaking.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_PotionMaking::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.InitScene" );

	UUIScene_PotionMaking_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_PotionMaking.DoCreate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_PotionMaking::DoCreate ( )
{
	static UFunction* pFnDoCreate = NULL;

	if ( ! pFnDoCreate )
		pFnDoCreate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PotionMaking.DoCreate" );

	UUIScene_PotionMaking_execDoCreate_Parms DoCreate_Parms;

	pFnDoCreate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoCreate, &DoCreate_Parms, NULL );

	pFnDoCreate->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_ScreenOptions.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_ScreenOptions::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.SceneDeactivated" );

	UUIScene_ScreenOptions_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_ScreenOptions.UpdateLabels
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_ScreenOptions::eventUpdateLabels ( )
{
	static UFunction* pFnUpdateLabels = NULL;

	if ( ! pFnUpdateLabels )
		pFnUpdateLabels = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.UpdateLabels" );

	UUIScene_ScreenOptions_eventUpdateLabels_Parms UpdateLabels_Parms;

	this->ProcessEvent ( pFnUpdateLabels, &UpdateLabels_Parms, NULL );
};

// Function NowGame.UIScene_ScreenOptions.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_ScreenOptions::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.SceneActivated" );

	UUIScene_ScreenOptions_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_ScreenOptions.OnEffectsTextureClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ScreenOptions::OnEffectsTextureClicked ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnEffectsTextureClicked = NULL;

	if ( ! pFnOnEffectsTextureClicked )
		pFnOnEffectsTextureClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.OnEffectsTextureClicked" );

	UUIScene_ScreenOptions_execOnEffectsTextureClicked_Parms OnEffectsTextureClicked_Parms;
	OnEffectsTextureClicked_Parms.Caller = Caller;
	OnEffectsTextureClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnEffectsTextureClicked, &OnEffectsTextureClicked_Parms, NULL );

	return OnEffectsTextureClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ScreenOptions.OnEffectsTextureSelect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ScreenOptions::OnEffectsTextureSelect ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnEffectsTextureSelect = NULL;

	if ( ! pFnOnEffectsTextureSelect )
		pFnOnEffectsTextureSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.OnEffectsTextureSelect" );

	UUIScene_ScreenOptions_execOnEffectsTextureSelect_Parms OnEffectsTextureSelect_Parms;
	OnEffectsTextureSelect_Parms.Caller = Caller;
	OnEffectsTextureSelect_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnEffectsTextureSelect, &OnEffectsTextureSelect_Parms, NULL );

	return OnEffectsTextureSelect_Parms.ReturnValue;
};

// Function NowGame.UIScene_ScreenOptions.OnCharacterTextureClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ScreenOptions::OnCharacterTextureClicked ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnCharacterTextureClicked = NULL;

	if ( ! pFnOnCharacterTextureClicked )
		pFnOnCharacterTextureClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.OnCharacterTextureClicked" );

	UUIScene_ScreenOptions_execOnCharacterTextureClicked_Parms OnCharacterTextureClicked_Parms;
	OnCharacterTextureClicked_Parms.Caller = Caller;
	OnCharacterTextureClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnCharacterTextureClicked, &OnCharacterTextureClicked_Parms, NULL );

	return OnCharacterTextureClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ScreenOptions.OnCharacterTextureSelect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ScreenOptions::OnCharacterTextureSelect ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnCharacterTextureSelect = NULL;

	if ( ! pFnOnCharacterTextureSelect )
		pFnOnCharacterTextureSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.OnCharacterTextureSelect" );

	UUIScene_ScreenOptions_execOnCharacterTextureSelect_Parms OnCharacterTextureSelect_Parms;
	OnCharacterTextureSelect_Parms.Caller = Caller;
	OnCharacterTextureSelect_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnCharacterTextureSelect, &OnCharacterTextureSelect_Parms, NULL );

	return OnCharacterTextureSelect_Parms.ReturnValue;
};

// Function NowGame.UIScene_ScreenOptions.OnShadowQualityClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ScreenOptions::OnShadowQualityClicked ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnShadowQualityClicked = NULL;

	if ( ! pFnOnShadowQualityClicked )
		pFnOnShadowQualityClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.OnShadowQualityClicked" );

	UUIScene_ScreenOptions_execOnShadowQualityClicked_Parms OnShadowQualityClicked_Parms;
	OnShadowQualityClicked_Parms.Caller = Caller;
	OnShadowQualityClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnShadowQualityClicked, &OnShadowQualityClicked_Parms, NULL );

	return OnShadowQualityClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ScreenOptions.OnShadowQualitySelect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ScreenOptions::OnShadowQualitySelect ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnShadowQualitySelect = NULL;

	if ( ! pFnOnShadowQualitySelect )
		pFnOnShadowQualitySelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.OnShadowQualitySelect" );

	UUIScene_ScreenOptions_execOnShadowQualitySelect_Parms OnShadowQualitySelect_Parms;
	OnShadowQualitySelect_Parms.Caller = Caller;
	OnShadowQualitySelect_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnShadowQualitySelect, &OnShadowQualitySelect_Parms, NULL );

	return OnShadowQualitySelect_Parms.ReturnValue;
};

// Function NowGame.UIScene_ScreenOptions.OnWorldTextureClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ScreenOptions::OnWorldTextureClicked ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnWorldTextureClicked = NULL;

	if ( ! pFnOnWorldTextureClicked )
		pFnOnWorldTextureClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.OnWorldTextureClicked" );

	UUIScene_ScreenOptions_execOnWorldTextureClicked_Parms OnWorldTextureClicked_Parms;
	OnWorldTextureClicked_Parms.Caller = Caller;
	OnWorldTextureClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnWorldTextureClicked, &OnWorldTextureClicked_Parms, NULL );

	return OnWorldTextureClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ScreenOptions.OnWorldTextureSelect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ScreenOptions::OnWorldTextureSelect ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnWorldTextureSelect = NULL;

	if ( ! pFnOnWorldTextureSelect )
		pFnOnWorldTextureSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.OnWorldTextureSelect" );

	UUIScene_ScreenOptions_execOnWorldTextureSelect_Parms OnWorldTextureSelect_Parms;
	OnWorldTextureSelect_Parms.Caller = Caller;
	OnWorldTextureSelect_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnWorldTextureSelect, &OnWorldTextureSelect_Parms, NULL );

	return OnWorldTextureSelect_Parms.ReturnValue;
};

// Function NowGame.UIScene_ScreenOptions.OnResClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ScreenOptions::OnResClicked ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnResClicked = NULL;

	if ( ! pFnOnResClicked )
		pFnOnResClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.OnResClicked" );

	UUIScene_ScreenOptions_execOnResClicked_Parms OnResClicked_Parms;
	OnResClicked_Parms.Caller = Caller;
	OnResClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnResClicked, &OnResClicked_Parms, NULL );

	return OnResClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ScreenOptions.OnSelectRes
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ScreenOptions::OnSelectRes ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnSelectRes = NULL;

	if ( ! pFnOnSelectRes )
		pFnOnSelectRes = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.OnSelectRes" );

	UUIScene_ScreenOptions_execOnSelectRes_Parms OnSelectRes_Parms;
	OnSelectRes_Parms.Caller = Caller;
	OnSelectRes_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSelectRes, &OnSelectRes_Parms, NULL );

	return OnSelectRes_Parms.ReturnValue;
};

// Function NowGame.UIScene_ScreenOptions.OnWindowMode
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ScreenOptions::OnWindowMode ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnWindowMode = NULL;

	if ( ! pFnOnWindowMode )
		pFnOnWindowMode = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.OnWindowMode" );

	UUIScene_ScreenOptions_execOnWindowMode_Parms OnWindowMode_Parms;
	OnWindowMode_Parms.Caller = Caller;
	OnWindowMode_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnWindowMode, &OnWindowMode_Parms, NULL );

	return OnWindowMode_Parms.ReturnValue;
};

// Function NowGame.UIScene_ScreenOptions.OnMotionBlur
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ScreenOptions::OnMotionBlur ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnMotionBlur = NULL;

	if ( ! pFnOnMotionBlur )
		pFnOnMotionBlur = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.OnMotionBlur" );

	UUIScene_ScreenOptions_execOnMotionBlur_Parms OnMotionBlur_Parms;
	OnMotionBlur_Parms.Caller = Caller;
	OnMotionBlur_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnMotionBlur, &OnMotionBlur_Parms, NULL );

	return OnMotionBlur_Parms.ReturnValue;
};

// Function NowGame.UIScene_ScreenOptions.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_ScreenOptions::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.InitScene" );

	UUIScene_ScreenOptions_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_ScreenOptions.SetShadowSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            I                              ( CPF_Parm )

void UUIScene_ScreenOptions::SetShadowSettings ( int I )
{
	static UFunction* pFnSetShadowSettings = NULL;

	if ( ! pFnSetShadowSettings )
		pFnSetShadowSettings = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.SetShadowSettings" );

	UUIScene_ScreenOptions_execSetShadowSettings_Parms SetShadowSettings_Parms;
	SetShadowSettings_Parms.I = I;

	pFnSetShadowSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetShadowSettings, &SetShadowSettings_Parms, NULL );

	pFnSetShadowSettings->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_ScreenOptions.ToggleMotionBlur
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_ScreenOptions::ToggleMotionBlur ( )
{
	static UFunction* pFnToggleMotionBlur = NULL;

	if ( ! pFnToggleMotionBlur )
		pFnToggleMotionBlur = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.ToggleMotionBlur" );

	UUIScene_ScreenOptions_execToggleMotionBlur_Parms ToggleMotionBlur_Parms;

	pFnToggleMotionBlur->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleMotionBlur, &ToggleMotionBlur_Parms, NULL );

	pFnToggleMotionBlur->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_ScreenOptions.SetEffectsTexture
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_ScreenOptions::SetEffectsTexture ( )
{
	static UFunction* pFnSetEffectsTexture = NULL;

	if ( ! pFnSetEffectsTexture )
		pFnSetEffectsTexture = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.SetEffectsTexture" );

	UUIScene_ScreenOptions_execSetEffectsTexture_Parms SetEffectsTexture_Parms;

	pFnSetEffectsTexture->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetEffectsTexture, &SetEffectsTexture_Parms, NULL );

	pFnSetEffectsTexture->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_ScreenOptions.SetCharacterTexture
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_ScreenOptions::SetCharacterTexture ( )
{
	static UFunction* pFnSetCharacterTexture = NULL;

	if ( ! pFnSetCharacterTexture )
		pFnSetCharacterTexture = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.SetCharacterTexture" );

	UUIScene_ScreenOptions_execSetCharacterTexture_Parms SetCharacterTexture_Parms;

	pFnSetCharacterTexture->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCharacterTexture, &SetCharacterTexture_Parms, NULL );

	pFnSetCharacterTexture->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_ScreenOptions.SetWorldTexture
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_ScreenOptions::SetWorldTexture ( )
{
	static UFunction* pFnSetWorldTexture = NULL;

	if ( ! pFnSetWorldTexture )
		pFnSetWorldTexture = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.SetWorldTexture" );

	UUIScene_ScreenOptions_execSetWorldTexture_Parms SetWorldTexture_Parms;

	pFnSetWorldTexture->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetWorldTexture, &SetWorldTexture_Parms, NULL );

	pFnSetWorldTexture->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_ScreenOptions.SetFullScreen
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_ScreenOptions::SetFullScreen ( )
{
	static UFunction* pFnSetFullScreen = NULL;

	if ( ! pFnSetFullScreen )
		pFnSetFullScreen = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.SetFullScreen" );

	UUIScene_ScreenOptions_execSetFullScreen_Parms SetFullScreen_Parms;

	pFnSetFullScreen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFullScreen, &SetFullScreen_Parms, NULL );

	pFnSetFullScreen->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_ScreenOptions.SetResolution
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_ScreenOptions::SetResolution ( )
{
	static UFunction* pFnSetResolution = NULL;

	if ( ! pFnSetResolution )
		pFnSetResolution = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.SetResolution" );

	UUIScene_ScreenOptions_execSetResolution_Parms SetResolution_Parms;

	pFnSetResolution->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetResolution, &SetResolution_Parms, NULL );

	pFnSetResolution->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_ScreenOptions.LoadResolution
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIScene_ScreenOptions::LoadResolution ( )
{
	static UFunction* pFnLoadResolution = NULL;

	if ( ! pFnLoadResolution )
		pFnLoadResolution = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ScreenOptions.LoadResolution" );

	UUIScene_ScreenOptions_execLoadResolution_Parms LoadResolution_Parms;

	pFnLoadResolution->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadResolution, &LoadResolution_Parms, NULL );

	pFnLoadResolution->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_SendGuildMessage.SendMessage
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_SendGuildMessage::SendMessage ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnSendMessage = NULL;

	if ( ! pFnSendMessage )
		pFnSendMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SendGuildMessage.SendMessage" );

	UUIScene_SendGuildMessage_execSendMessage_Parms SendMessage_Parms;
	SendMessage_Parms.O = O;
	SendMessage_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnSendMessage, &SendMessage_Parms, NULL );

	return SendMessage_Parms.ReturnValue;
};

// Function NowGame.UIScene_SendGuildMessage.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_SendGuildMessage::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SendGuildMessage.InitScene" );

	UUIScene_SendGuildMessage_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_SendGuildMessage.SendServerMessage
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_SendGuildMessage::SendServerMessage ( struct FString msg )
{
	static UFunction* pFnSendServerMessage = NULL;

	if ( ! pFnSendServerMessage )
		pFnSendServerMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SendGuildMessage.SendServerMessage" );

	UUIScene_SendGuildMessage_execSendServerMessage_Parms SendServerMessage_Parms;
	memcpy ( &SendServerMessage_Parms.msg, &msg, 0xC );

	pFnSendServerMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendServerMessage, &SendServerMessage_Parms, NULL );

	pFnSendServerMessage->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_StableWindow.ItemListChanged
// [0x00020002] 
// Parameters infos:
// TArray< struct FString >       ItemNames                      ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_StableWindow::ItemListChanged ( TArray< struct FString > ItemNames )
{
	static UFunction* pFnItemListChanged = NULL;

	if ( ! pFnItemListChanged )
		pFnItemListChanged = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StableWindow.ItemListChanged" );

	UUIScene_StableWindow_execItemListChanged_Parms ItemListChanged_Parms;
	memcpy ( &ItemListChanged_Parms.ItemNames, &ItemNames, 0xC );

	this->ProcessEvent ( pFnItemListChanged, &ItemListChanged_Parms, NULL );
};

// Function NowGame.UIScene_StableWindow.PerformClaim
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_StableWindow::PerformClaim ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnPerformClaim = NULL;

	if ( ! pFnPerformClaim )
		pFnPerformClaim = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StableWindow.PerformClaim" );

	UUIScene_StableWindow_execPerformClaim_Parms PerformClaim_Parms;
	PerformClaim_Parms.O = O;
	PerformClaim_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnPerformClaim, &PerformClaim_Parms, NULL );

	return PerformClaim_Parms.ReturnValue;
};

// Function NowGame.UIScene_StableWindow.PerformStable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_StableWindow::PerformStable ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnPerformStable = NULL;

	if ( ! pFnPerformStable )
		pFnPerformStable = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StableWindow.PerformStable" );

	UUIScene_StableWindow_execPerformStable_Parms PerformStable_Parms;
	PerformStable_Parms.O = O;
	PerformStable_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnPerformStable, &PerformStable_Parms, NULL );

	return PerformStable_Parms.ReturnValue;
};

// Function NowGame.UIScene_StableWindow.InitClaimMounts
// [0x00820002] 
// Parameters infos:

void UUIScene_StableWindow::InitClaimMounts ( )
{
	static UFunction* pFnInitClaimMounts = NULL;

	if ( ! pFnInitClaimMounts )
		pFnInitClaimMounts = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StableWindow.InitClaimMounts" );

	UUIScene_StableWindow_execInitClaimMounts_Parms InitClaimMounts_Parms;

	this->ProcessEvent ( pFnInitClaimMounts, &InitClaimMounts_Parms, NULL );
};

// Function NowGame.UIScene_StableWindow.InitStableMounts
// [0x00820002] 
// Parameters infos:

void UUIScene_StableWindow::InitStableMounts ( )
{
	static UFunction* pFnInitStableMounts = NULL;

	if ( ! pFnInitStableMounts )
		pFnInitStableMounts = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StableWindow.InitStableMounts" );

	UUIScene_StableWindow_execInitStableMounts_Parms InitStableMounts_Parms;

	this->ProcessEvent ( pFnInitStableMounts, &InitStableMounts_Parms, NULL );
};

// Function NowGame.UIScene_StableWindow.InitializeButtons
// [0x00020002] 
// Parameters infos:

void UUIScene_StableWindow::InitializeButtons ( )
{
	static UFunction* pFnInitializeButtons = NULL;

	if ( ! pFnInitializeButtons )
		pFnInitializeButtons = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StableWindow.InitializeButtons" );

	UUIScene_StableWindow_execInitializeButtons_Parms InitializeButtons_Parms;

	this->ProcessEvent ( pFnInitializeButtons, &InitializeButtons_Parms, NULL );
};

// Function NowGame.UIScene_StableWindow.PostUpdateInitialize
// [0x00020002] 
// Parameters infos:

void UUIScene_StableWindow::PostUpdateInitialize ( )
{
	static UFunction* pFnPostUpdateInitialize = NULL;

	if ( ! pFnPostUpdateInitialize )
		pFnPostUpdateInitialize = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StableWindow.PostUpdateInitialize" );

	UUIScene_StableWindow_execPostUpdateInitialize_Parms PostUpdateInitialize_Parms;

	this->ProcessEvent ( pFnPostUpdateInitialize, &PostUpdateInitialize_Parms, NULL );
};

// Function NowGame.UIScene_StableWindow.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_StableWindow::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StableWindow.InitScene" );

	UUIScene_StableWindow_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_StableWindow.SendServerMessage
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_StableWindow::SendServerMessage ( struct FString msg )
{
	static UFunction* pFnSendServerMessage = NULL;

	if ( ! pFnSendServerMessage )
		pFnSendServerMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StableWindow.SendServerMessage" );

	UUIScene_StableWindow_execSendServerMessage_Parms SendServerMessage_Parms;
	memcpy ( &SendServerMessage_Parms.msg, &msg, 0xC );

	pFnSendServerMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendServerMessage, &SendServerMessage_Parms, NULL );

	pFnSendServerMessage->FunctionFlags |= 0x400;
};

// Function NowGame.UIScene_Tree.InitOghmir
// [0x00020002] 
// Parameters infos:

void UUIScene_Tree::InitOghmir ( )
{
	static UFunction* pFnInitOghmir = NULL;

	if ( ! pFnInitOghmir )
		pFnInitOghmir = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Tree.InitOghmir" );

	UUIScene_Tree_execInitOghmir_Parms InitOghmir_Parms;

	this->ProcessEvent ( pFnInitOghmir, &InitOghmir_Parms, NULL );
};

// Function NowGame.UIScene_Tree.InitHalfbreed
// [0x00020002] 
// Parameters infos:

void UUIScene_Tree::InitHalfbreed ( )
{
	static UFunction* pFnInitHalfbreed = NULL;

	if ( ! pFnInitHalfbreed )
		pFnInitHalfbreed = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Tree.InitHalfbreed" );

	UUIScene_Tree_execInitHalfbreed_Parms InitHalfbreed_Parms;

	this->ProcessEvent ( pFnInitHalfbreed, &InitHalfbreed_Parms, NULL );
};

// Function NowGame.UIScene_Tree.InitAlvarin
// [0x00020002] 
// Parameters infos:

void UUIScene_Tree::InitAlvarin ( )
{
	static UFunction* pFnInitAlvarin = NULL;

	if ( ! pFnInitAlvarin )
		pFnInitAlvarin = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Tree.InitAlvarin" );

	UUIScene_Tree_execInitAlvarin_Parms InitAlvarin_Parms;

	this->ProcessEvent ( pFnInitAlvarin, &InitAlvarin_Parms, NULL );
};

// Function NowGame.UIScene_Tree.InitHumans
// [0x00020002] 
// Parameters infos:

void UUIScene_Tree::InitHumans ( )
{
	static UFunction* pFnInitHumans = NULL;

	if ( ! pFnInitHumans )
		pFnInitHumans = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Tree.InitHumans" );

	UUIScene_Tree_execInitHumans_Parms InitHumans_Parms;

	this->ProcessEvent ( pFnInitHumans, &InitHumans_Parms, NULL );
};

// Function NowGame.UIScene_Tree.CalculateMainblood
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Tree::eventCalculateMainblood ( )
{
	static UFunction* pFnCalculateMainblood = NULL;

	if ( ! pFnCalculateMainblood )
		pFnCalculateMainblood = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Tree.CalculateMainblood" );

	UUIScene_Tree_eventCalculateMainblood_Parms CalculateMainblood_Parms;

	this->ProcessEvent ( pFnCalculateMainblood, &CalculateMainblood_Parms, NULL );
};

// Function NowGame.UIScene_Tree.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Tree::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Tree.UpdateScene" );

	UUIScene_Tree_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Tree.SceneDeactivated
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UUIScene_Tree::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Tree.SceneDeactivated" );

	UUIScene_Tree_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Tree.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Tree::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Tree.SceneActivated" );

	UUIScene_Tree_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Tree.OnBloodSelect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Tree::OnBloodSelect ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnBloodSelect = NULL;

	if ( ! pFnOnBloodSelect )
		pFnOnBloodSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Tree.OnBloodSelect" );

	UUIScene_Tree_execOnBloodSelect_Parms OnBloodSelect_Parms;
	OnBloodSelect_Parms.EventObject = EventObject;
	OnBloodSelect_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnBloodSelect, &OnBloodSelect_Parms, NULL );

	return OnBloodSelect_Parms.ReturnValue;
};

// Function NowGame.UIScene_Tree.OnGender
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Tree::OnGender ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnGender = NULL;

	if ( ! pFnOnGender )
		pFnOnGender = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Tree.OnGender" );

	UUIScene_Tree_execOnGender_Parms OnGender_Parms;
	OnGender_Parms.EventObject = EventObject;
	OnGender_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnGender, &OnGender_Parms, NULL );

	return OnGender_Parms.ReturnValue;
};

// Function NowGame.UIScene_Tree.OnAgeRightClick
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_Tree::OnAgeRightClick ( class UUIObject* EventObject, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnAgeRightClick = NULL;

	if ( ! pFnOnAgeRightClick )
		pFnOnAgeRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Tree.OnAgeRightClick" );

	UUIScene_Tree_execOnAgeRightClick_Parms OnAgeRightClick_Parms;
	OnAgeRightClick_Parms.EventObject = EventObject;
	OnAgeRightClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnAgeRightClick, &OnAgeRightClick_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnAgeRightClick_Parms.CustomContextMenu;

	return OnAgeRightClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_Tree.OnAge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Tree::OnAge ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnAge = NULL;

	if ( ! pFnOnAge )
		pFnOnAge = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Tree.OnAge" );

	UUIScene_Tree_execOnAge_Parms OnAge_Parms;
	OnAge_Parms.EventObject = EventObject;
	OnAge_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnAge, &OnAge_Parms, NULL );

	return OnAge_Parms.ReturnValue;
};

// Function NowGame.UIScene_Tree.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Tree::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Tree.InitScene" );

	UUIScene_Tree_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_VendorWindow.TakeItems
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_VendorWindow::TakeItems ( )
{
	static UFunction* pFnTakeItems = NULL;

	if ( ! pFnTakeItems )
		pFnTakeItems = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.TakeItems" );

	UUIScene_VendorWindow_execTakeItems_Parms TakeItems_Parms;

	this->ProcessEvent ( pFnTakeItems, &TakeItems_Parms, NULL );

	return TakeItems_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.ProcessInputKey
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FInputEventParameters   EventParms                     ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UUIScene_VendorWindow::ProcessInputKey ( struct FInputEventParameters* EventParms )
{
	static UFunction* pFnProcessInputKey = NULL;

	if ( ! pFnProcessInputKey )
		pFnProcessInputKey = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.ProcessInputKey" );

	UUIScene_VendorWindow_execProcessInputKey_Parms ProcessInputKey_Parms;

	this->ProcessEvent ( pFnProcessInputKey, &ProcessInputKey_Parms, NULL );

	if ( EventParms )
		memcpy ( EventParms, &ProcessInputKey_Parms.EventParms, 0x20 );

	return ProcessInputKey_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.UpdateVendorBuy
// [0x00020002] 
// Parameters infos:

void UUIScene_VendorWindow::UpdateVendorBuy ( )
{
	static UFunction* pFnUpdateVendorBuy = NULL;

	if ( ! pFnUpdateVendorBuy )
		pFnUpdateVendorBuy = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.UpdateVendorBuy" );

	UUIScene_VendorWindow_execUpdateVendorBuy_Parms UpdateVendorBuy_Parms;

	this->ProcessEvent ( pFnUpdateVendorBuy, &UpdateVendorBuy_Parms, NULL );
};

// Function NowGame.UIScene_VendorWindow.UpdateVendorSell
// [0x00020002] 
// Parameters infos:

void UUIScene_VendorWindow::UpdateVendorSell ( )
{
	static UFunction* pFnUpdateVendorSell = NULL;

	if ( ! pFnUpdateVendorSell )
		pFnUpdateVendorSell = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.UpdateVendorSell" );

	UUIScene_VendorWindow_execUpdateVendorSell_Parms UpdateVendorSell_Parms;

	this->ProcessEvent ( pFnUpdateVendorSell, &UpdateVendorSell_Parms, NULL );
};

// Function NowGame.UIScene_VendorWindow.UpdateInventory
// [0x00020002] 
// Parameters infos:

void UUIScene_VendorWindow::UpdateInventory ( )
{
	static UFunction* pFnUpdateInventory = NULL;

	if ( ! pFnUpdateInventory )
		pFnUpdateInventory = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.UpdateInventory" );

	UUIScene_VendorWindow_execUpdateInventory_Parms UpdateInventory_Parms;

	this->ProcessEvent ( pFnUpdateInventory, &UpdateInventory_Parms, NULL );
};

// Function NowGame.UIScene_VendorWindow.UpdateAll
// [0x00020000] 
// Parameters infos:

void UUIScene_VendorWindow::UpdateAll ( )
{
	static UFunction* pFnUpdateAll = NULL;

	if ( ! pFnUpdateAll )
		pFnUpdateAll = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.UpdateAll" );

	UUIScene_VendorWindow_execUpdateAll_Parms UpdateAll_Parms;

	this->ProcessEvent ( pFnUpdateAll, &UpdateAll_Parms, NULL );
};

// Function NowGame.UIScene_VendorWindow.OnVendorBuyButtonRightClick
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_VendorWindow::OnVendorBuyButtonRightClick ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnVendorBuyButtonRightClick = NULL;

	if ( ! pFnOnVendorBuyButtonRightClick )
		pFnOnVendorBuyButtonRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.OnVendorBuyButtonRightClick" );

	UUIScene_VendorWindow_execOnVendorBuyButtonRightClick_Parms OnVendorBuyButtonRightClick_Parms;
	OnVendorBuyButtonRightClick_Parms.Sender = Sender;
	OnVendorBuyButtonRightClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnVendorBuyButtonRightClick, &OnVendorBuyButtonRightClick_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnVendorBuyButtonRightClick_Parms.CustomContextMenu;

	return OnVendorBuyButtonRightClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.OnVendorSellButtonLeftClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_VendorWindow::OnVendorSellButtonLeftClick ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnVendorSellButtonLeftClick = NULL;

	if ( ! pFnOnVendorSellButtonLeftClick )
		pFnOnVendorSellButtonLeftClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.OnVendorSellButtonLeftClick" );

	UUIScene_VendorWindow_execOnVendorSellButtonLeftClick_Parms OnVendorSellButtonLeftClick_Parms;
	OnVendorSellButtonLeftClick_Parms.EventObject = EventObject;
	OnVendorSellButtonLeftClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnVendorSellButtonLeftClick, &OnVendorSellButtonLeftClick_Parms, NULL );

	return OnVendorSellButtonLeftClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.OnVendorSellButtonRightClick
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_VendorWindow::OnVendorSellButtonRightClick ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnVendorSellButtonRightClick = NULL;

	if ( ! pFnOnVendorSellButtonRightClick )
		pFnOnVendorSellButtonRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.OnVendorSellButtonRightClick" );

	UUIScene_VendorWindow_execOnVendorSellButtonRightClick_Parms OnVendorSellButtonRightClick_Parms;
	OnVendorSellButtonRightClick_Parms.Sender = Sender;
	OnVendorSellButtonRightClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnVendorSellButtonRightClick, &OnVendorSellButtonRightClick_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnVendorSellButtonRightClick_Parms.CustomContextMenu;

	return OnVendorSellButtonRightClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.OnVendorButtonRightClick
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_VendorWindow::OnVendorButtonRightClick ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnVendorButtonRightClick = NULL;

	if ( ! pFnOnVendorButtonRightClick )
		pFnOnVendorButtonRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.OnVendorButtonRightClick" );

	UUIScene_VendorWindow_execOnVendorButtonRightClick_Parms OnVendorButtonRightClick_Parms;
	OnVendorButtonRightClick_Parms.Sender = Sender;
	OnVendorButtonRightClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnVendorButtonRightClick, &OnVendorButtonRightClick_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnVendorButtonRightClick_Parms.CustomContextMenu;

	return OnVendorButtonRightClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.OnVendorButtonLeftClick
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_VendorWindow::OnVendorButtonLeftClick ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnVendorButtonLeftClick = NULL;

	if ( ! pFnOnVendorButtonLeftClick )
		pFnOnVendorButtonLeftClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.OnVendorButtonLeftClick" );

	UUIScene_VendorWindow_execOnVendorButtonLeftClick_Parms OnVendorButtonLeftClick_Parms;
	OnVendorButtonLeftClick_Parms.EventObject = EventObject;
	OnVendorButtonLeftClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnVendorButtonLeftClick, &OnVendorButtonLeftClick_Parms, NULL );

	return OnVendorButtonLeftClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.OnInventoryItemRightClick
// [0x00020002] 
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void UUIScene_VendorWindow::OnInventoryItemRightClick ( int iBag, int iSlot )
{
	static UFunction* pFnOnInventoryItemRightClick = NULL;

	if ( ! pFnOnInventoryItemRightClick )
		pFnOnInventoryItemRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.OnInventoryItemRightClick" );

	UUIScene_VendorWindow_execOnInventoryItemRightClick_Parms OnInventoryItemRightClick_Parms;
	OnInventoryItemRightClick_Parms.iBag = iBag;
	OnInventoryItemRightClick_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnOnInventoryItemRightClick, &OnInventoryItemRightClick_Parms, NULL );
};

// Function NowGame.UIScene_VendorWindow.DoCancelTrade
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_VendorWindow::DoCancelTrade ( )
{
	static UFunction* pFnDoCancelTrade = NULL;

	if ( ! pFnDoCancelTrade )
		pFnDoCancelTrade = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.DoCancelTrade" );

	UUIScene_VendorWindow_execDoCancelTrade_Parms DoCancelTrade_Parms;

	this->ProcessEvent ( pFnDoCancelTrade, &DoCancelTrade_Parms, NULL );

	return DoCancelTrade_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.DoVendorTrade
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_VendorWindow::DoVendorTrade ( )
{
	static UFunction* pFnDoVendorTrade = NULL;

	if ( ! pFnDoVendorTrade )
		pFnDoVendorTrade = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.DoVendorTrade" );

	UUIScene_VendorWindow_execDoVendorTrade_Parms DoVendorTrade_Parms;

	this->ProcessEvent ( pFnDoVendorTrade, &DoVendorTrade_Parms, NULL );

	return DoVendorTrade_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.CancelButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_VendorWindow::CancelButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCancelButtonClicked = NULL;

	if ( ! pFnCancelButtonClicked )
		pFnCancelButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.CancelButtonClicked" );

	UUIScene_VendorWindow_execCancelButtonClicked_Parms CancelButtonClicked_Parms;
	CancelButtonClicked_Parms.EventObject = EventObject;
	CancelButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCancelButtonClicked, &CancelButtonClicked_Parms, NULL );

	return CancelButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.ConfCancelButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_VendorWindow::ConfCancelButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnConfCancelButtonClicked = NULL;

	if ( ! pFnConfCancelButtonClicked )
		pFnConfCancelButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.ConfCancelButtonClicked" );

	UUIScene_VendorWindow_execConfCancelButtonClicked_Parms ConfCancelButtonClicked_Parms;
	ConfCancelButtonClicked_Parms.EventObject = EventObject;
	ConfCancelButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnConfCancelButtonClicked, &ConfCancelButtonClicked_Parms, NULL );

	return ConfCancelButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.AcceptButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_VendorWindow::AcceptButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAcceptButtonClicked = NULL;

	if ( ! pFnAcceptButtonClicked )
		pFnAcceptButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.AcceptButtonClicked" );

	UUIScene_VendorWindow_execAcceptButtonClicked_Parms AcceptButtonClicked_Parms;
	AcceptButtonClicked_Parms.EventObject = EventObject;
	AcceptButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAcceptButtonClicked, &AcceptButtonClicked_Parms, NULL );

	return AcceptButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.ConfAcceptButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_VendorWindow::ConfAcceptButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnConfAcceptButtonClicked = NULL;

	if ( ! pFnConfAcceptButtonClicked )
		pFnConfAcceptButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.ConfAcceptButtonClicked" );

	UUIScene_VendorWindow_execConfAcceptButtonClicked_Parms ConfAcceptButtonClicked_Parms;
	ConfAcceptButtonClicked_Parms.EventObject = EventObject;
	ConfAcceptButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnConfAcceptButtonClicked, &ConfAcceptButtonClicked_Parms, NULL );

	return ConfAcceptButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.ItemListChanged
// [0x00020002] 
// Parameters infos:
// TArray< struct FString >       ItemData                       ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_VendorWindow::ItemListChanged ( TArray< struct FString > ItemData )
{
	static UFunction* pFnItemListChanged = NULL;

	if ( ! pFnItemListChanged )
		pFnItemListChanged = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.ItemListChanged" );

	UUIScene_VendorWindow_execItemListChanged_Parms ItemListChanged_Parms;
	memcpy ( &ItemListChanged_Parms.ItemData, &ItemData, 0xC );

	this->ProcessEvent ( pFnItemListChanged, &ItemListChanged_Parms, NULL );
};

// Function NowGame.UIScene_VendorWindow.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_VendorWindow::OnClose ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.OnClose" );

	UUIScene_VendorWindow_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.EventObject = EventObject;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_VendorWindow.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_VendorWindow::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.SceneDeactivated" );

	UUIScene_VendorWindow_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_VendorWindow.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_VendorWindow::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.SceneActivated" );

	UUIScene_VendorWindow_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_VendorWindow.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_VendorWindow::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_VendorWindow.InitScene" );

	UUIScene_VendorWindow_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_TutorialVendor.OnInventoryItemRightClick
// [0x00020002] 
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void UUIScene_TutorialVendor::OnInventoryItemRightClick ( int iBag, int iSlot )
{
	static UFunction* pFnOnInventoryItemRightClick = NULL;

	if ( ! pFnOnInventoryItemRightClick )
		pFnOnInventoryItemRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_TutorialVendor.OnInventoryItemRightClick" );

	UUIScene_TutorialVendor_execOnInventoryItemRightClick_Parms OnInventoryItemRightClick_Parms;
	OnInventoryItemRightClick_Parms.iBag = iBag;
	OnInventoryItemRightClick_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnOnInventoryItemRightClick, &OnInventoryItemRightClick_Parms, NULL );
};

// Function NowGame.UIScene_TutorialVendor.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_TutorialVendor::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_TutorialVendor.InitScene" );

	UUIScene_TutorialVendor_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.NowChildHudGM.SendCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 WhatCommand                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::SendCommand ( struct FString WhatCommand )
{
	static UFunction* pFnSendCommand = NULL;

	if ( ! pFnSendCommand )
		pFnSendCommand = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.SendCommand" );

	UNowChildHudGM_execSendCommand_Parms SendCommand_Parms;
	memcpy ( &SendCommand_Parms.WhatCommand, &WhatCommand, 0xC );

	this->ProcessEvent ( pFnSendCommand, &SendCommand_Parms, NULL );
};

// Function NowGame.NowChildHudGM.HandleCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WhatCommand                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 fullString                     ( CPF_Parm | CPF_NeedCtorLink )

bool UNowChildHudGM::HandleCommand ( struct FString WhatCommand, struct FString fullString )
{
	static UFunction* pFnHandleCommand = NULL;

	if ( ! pFnHandleCommand )
		pFnHandleCommand = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.HandleCommand" );

	UNowChildHudGM_execHandleCommand_Parms HandleCommand_Parms;
	memcpy ( &HandleCommand_Parms.WhatCommand, &WhatCommand, 0xC );
	memcpy ( &HandleCommand_Parms.fullString, &fullString, 0xC );

	this->ProcessEvent ( pFnHandleCommand, &HandleCommand_Parms, NULL );

	return HandleCommand_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.NewAnnouncement
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::NewAnnouncement ( struct FString Message )
{
	static UFunction* pFnNewAnnouncement = NULL;

	if ( ! pFnNewAnnouncement )
		pFnNewAnnouncement = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.NewAnnouncement" );

	UNowChildHudGM_execNewAnnouncement_Parms NewAnnouncement_Parms;
	memcpy ( &NewAnnouncement_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnNewAnnouncement, &NewAnnouncement_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ClearPetitions
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ClearPetitions ( )
{
	static UFunction* pFnClearPetitions = NULL;

	if ( ! pFnClearPetitions )
		pFnClearPetitions = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ClearPetitions" );

	UNowChildHudGM_execClearPetitions_Parms ClearPetitions_Parms;

	this->ProcessEvent ( pFnClearPetitions, &ClearPetitions_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ClearMsg
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ClearMsg ( )
{
	static UFunction* pFnClearMsg = NULL;

	if ( ! pFnClearMsg )
		pFnClearMsg = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ClearMsg" );

	UNowChildHudGM_execClearMsg_Parms ClearMsg_Parms;

	this->ProcessEvent ( pFnClearMsg, &ClearMsg_Parms, NULL );
};

// Function NowGame.NowChildHudGM.GetIndexOfPetitionSource
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PetitionSource                 ( CPF_Parm | CPF_NeedCtorLink )

int UNowChildHudGM::GetIndexOfPetitionSource ( struct FString PetitionSource )
{
	static UFunction* pFnGetIndexOfPetitionSource = NULL;

	if ( ! pFnGetIndexOfPetitionSource )
		pFnGetIndexOfPetitionSource = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.GetIndexOfPetitionSource" );

	UNowChildHudGM_execGetIndexOfPetitionSource_Parms GetIndexOfPetitionSource_Parms;
	memcpy ( &GetIndexOfPetitionSource_Parms.PetitionSource, &PetitionSource, 0xC );

	this->ProcessEvent ( pFnGetIndexOfPetitionSource, &GetIndexOfPetitionSource_Parms, NULL );

	return GetIndexOfPetitionSource_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.ExecQuick
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowChildHudGM::ExecQuick ( int Index )
{
	static UFunction* pFnExecQuick = NULL;

	if ( ! pFnExecQuick )
		pFnExecQuick = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ExecQuick" );

	UNowChildHudGM_execExecQuick_Parms ExecQuick_Parms;
	ExecQuick_Parms.Index = Index;

	this->ProcessEvent ( pFnExecQuick, &ExecQuick_Parms, NULL );
};

// Function NowGame.NowChildHudGM.RemQuick
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowChildHudGM::RemQuick ( int Index )
{
	static UFunction* pFnRemQuick = NULL;

	if ( ! pFnRemQuick )
		pFnRemQuick = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.RemQuick" );

	UNowChildHudGM_execRemQuick_Parms RemQuick_Parms;
	RemQuick_Parms.Index = Index;

	this->ProcessEvent ( pFnRemQuick, &RemQuick_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ShowQuick
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ShowQuick ( )
{
	static UFunction* pFnShowQuick = NULL;

	if ( ! pFnShowQuick )
		pFnShowQuick = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ShowQuick" );

	UNowChildHudGM_execShowQuick_Parms ShowQuick_Parms;

	this->ProcessEvent ( pFnShowQuick, &ShowQuick_Parms, NULL );
};

// Function NowGame.NowChildHudGM.FindQuickSpot
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowChildHudGM::FindQuickSpot ( )
{
	static UFunction* pFnFindQuickSpot = NULL;

	if ( ! pFnFindQuickSpot )
		pFnFindQuickSpot = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.FindQuickSpot" );

	UNowChildHudGM_execFindQuickSpot_Parms FindQuickSpot_Parms;

	this->ProcessEvent ( pFnFindQuickSpot, &FindQuickSpot_Parms, NULL );

	return FindQuickSpot_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.AddQuick
// [0x00020002] 
// Parameters infos:
// struct FString                 NewCommand                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::AddQuick ( struct FString NewCommand )
{
	static UFunction* pFnAddQuick = NULL;

	if ( ! pFnAddQuick )
		pFnAddQuick = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.AddQuick" );

	UNowChildHudGM_execAddQuick_Parms AddQuick_Parms;
	memcpy ( &AddQuick_Parms.NewCommand, &NewCommand, 0xC );

	this->ProcessEvent ( pFnAddQuick, &AddQuick_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ExecTP
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowChildHudGM::ExecTP ( int Index )
{
	static UFunction* pFnExecTP = NULL;

	if ( ! pFnExecTP )
		pFnExecTP = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ExecTP" );

	UNowChildHudGM_execExecTP_Parms ExecTP_Parms;
	ExecTP_Parms.Index = Index;

	this->ProcessEvent ( pFnExecTP, &ExecTP_Parms, NULL );
};

// Function NowGame.NowChildHudGM.RemTP
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowChildHudGM::RemTP ( int Index )
{
	static UFunction* pFnRemTP = NULL;

	if ( ! pFnRemTP )
		pFnRemTP = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.RemTP" );

	UNowChildHudGM_execRemTP_Parms RemTP_Parms;
	RemTP_Parms.Index = Index;

	this->ProcessEvent ( pFnRemTP, &RemTP_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ShowTP
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ShowTP ( )
{
	static UFunction* pFnShowTP = NULL;

	if ( ! pFnShowTP )
		pFnShowTP = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ShowTP" );

	UNowChildHudGM_execShowTP_Parms ShowTP_Parms;

	this->ProcessEvent ( pFnShowTP, &ShowTP_Parms, NULL );
};

// Function NowGame.NowChildHudGM.FindTPSpot
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowChildHudGM::FindTPSpot ( )
{
	static UFunction* pFnFindTPSpot = NULL;

	if ( ! pFnFindTPSpot )
		pFnFindTPSpot = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.FindTPSpot" );

	UNowChildHudGM_execFindTPSpot_Parms FindTPSpot_Parms;

	this->ProcessEvent ( pFnFindTPSpot, &FindTPSpot_Parms, NULL );

	return FindTPSpot_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.AddTP
// [0x00020002] 
// Parameters infos:
// struct FString                 newDesc                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::AddTP ( struct FString newDesc )
{
	static UFunction* pFnAddTP = NULL;

	if ( ! pFnAddTP )
		pFnAddTP = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.AddTP" );

	UNowChildHudGM_execAddTP_Parms AddTP_Parms;
	memcpy ( &AddTP_Parms.newDesc, &newDesc, 0xC );

	this->ProcessEvent ( pFnAddTP, &AddTP_Parms, NULL );
};

// Function NowGame.NowChildHudGM.FindNoteSpot
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UNowChildHudGM::FindNoteSpot ( )
{
	static UFunction* pFnFindNoteSpot = NULL;

	if ( ! pFnFindNoteSpot )
		pFnFindNoteSpot = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.FindNoteSpot" );

	UNowChildHudGM_execFindNoteSpot_Parms FindNoteSpot_Parms;

	this->ProcessEvent ( pFnFindNoteSpot, &FindNoteSpot_Parms, NULL );

	return FindNoteSpot_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.AddNote
// [0x00020002] 
// Parameters infos:
// struct FString                 newMsg                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::AddNote ( struct FString newMsg )
{
	static UFunction* pFnAddNote = NULL;

	if ( ! pFnAddNote )
		pFnAddNote = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.AddNote" );

	UNowChildHudGM_execAddNote_Parms AddNote_Parms;
	memcpy ( &AddNote_Parms.newMsg, &newMsg, 0xC );

	this->ProcessEvent ( pFnAddNote, &AddNote_Parms, NULL );
};

// Function NowGame.NowChildHudGM.RemNote
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UNowChildHudGM::RemNote ( int Index )
{
	static UFunction* pFnRemNote = NULL;

	if ( ! pFnRemNote )
		pFnRemNote = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.RemNote" );

	UNowChildHudGM_execRemNote_Parms RemNote_Parms;
	RemNote_Parms.Index = Index;

	this->ProcessEvent ( pFnRemNote, &RemNote_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ShowNotes
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ShowNotes ( )
{
	static UFunction* pFnShowNotes = NULL;

	if ( ! pFnShowNotes )
		pFnShowNotes = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ShowNotes" );

	UNowChildHudGM_execShowNotes_Parms ShowNotes_Parms;

	this->ProcessEvent ( pFnShowNotes, &ShowNotes_Parms, NULL );
};

// Function NowGame.NowChildHudGM.GetItemTypeReadable
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Type                           ( CPF_Parm )

struct FString UNowChildHudGM::GetItemTypeReadable ( int Type )
{
	static UFunction* pFnGetItemTypeReadable = NULL;

	if ( ! pFnGetItemTypeReadable )
		pFnGetItemTypeReadable = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.GetItemTypeReadable" );

	UNowChildHudGM_execGetItemTypeReadable_Parms GetItemTypeReadable_Parms;
	GetItemTypeReadable_Parms.Type = Type;

	this->ProcessEvent ( pFnGetItemTypeReadable, &GetItemTypeReadable_Parms, NULL );

	return GetItemTypeReadable_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.FixBrokenItem
// [0x00824002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FString                 TargetName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            ItemType                       ( CPF_OptionalParm | CPF_Parm )

void UNowChildHudGM::FixBrokenItem ( int Index, struct FString TargetName, int ItemType )
{
	static UFunction* pFnFixBrokenItem = NULL;

	if ( ! pFnFixBrokenItem )
		pFnFixBrokenItem = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.FixBrokenItem" );

	UNowChildHudGM_execFixBrokenItem_Parms FixBrokenItem_Parms;
	FixBrokenItem_Parms.Index = Index;
	memcpy ( &FixBrokenItem_Parms.TargetName, &TargetName, 0xC );
	FixBrokenItem_Parms.ItemType = ItemType;

	this->ProcessEvent ( pFnFixBrokenItem, &FixBrokenItem_Parms, NULL );
};

// Function NowGame.NowChildHudGM.IdentifyItem
// [0x00020002] 
// Parameters infos:
// struct FBrokenItem             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FBrokenItem             Item                           ( CPF_Parm | CPF_NeedCtorLink )

struct FBrokenItem UNowChildHudGM::IdentifyItem ( struct FBrokenItem Item )
{
	static UFunction* pFnIdentifyItem = NULL;

	if ( ! pFnIdentifyItem )
		pFnIdentifyItem = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.IdentifyItem" );

	UNowChildHudGM_execIdentifyItem_Parms IdentifyItem_Parms;
	memcpy ( &IdentifyItem_Parms.Item, &Item, 0x28 );

	this->ProcessEvent ( pFnIdentifyItem, &IdentifyItem_Parms, NULL );

	return IdentifyItem_Parms.ReturnValue;
};

// Function NowGame.NowChildHudGM.ParseBrokenItem
// [0x00820002] 
// Parameters infos:
// struct FString                 RawString                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::ParseBrokenItem ( struct FString RawString )
{
	static UFunction* pFnParseBrokenItem = NULL;

	if ( ! pFnParseBrokenItem )
		pFnParseBrokenItem = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ParseBrokenItem" );

	UNowChildHudGM_execParseBrokenItem_Parms ParseBrokenItem_Parms;
	memcpy ( &ParseBrokenItem_Parms.RawString, &RawString, 0xC );

	this->ProcessEvent ( pFnParseBrokenItem, &ParseBrokenItem_Parms, NULL );
};

// Function NowGame.NowChildHudGM.GetBrokenItems
// [0x00020002] 
// Parameters infos:
// struct FString                 TargetName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::GetBrokenItems ( struct FString TargetName )
{
	static UFunction* pFnGetBrokenItems = NULL;

	if ( ! pFnGetBrokenItems )
		pFnGetBrokenItems = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.GetBrokenItems" );

	UNowChildHudGM_execGetBrokenItems_Parms GetBrokenItems_Parms;
	memcpy ( &GetBrokenItems_Parms.TargetName, &TargetName, 0xC );

	this->ProcessEvent ( pFnGetBrokenItems, &GetBrokenItems_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ShowBrokenItems
// [0x00820002] 
// Parameters infos:

void UNowChildHudGM::ShowBrokenItems ( )
{
	static UFunction* pFnShowBrokenItems = NULL;

	if ( ! pFnShowBrokenItems )
		pFnShowBrokenItems = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ShowBrokenItems" );

	UNowChildHudGM_execShowBrokenItems_Parms ShowBrokenItems_Parms;

	this->ProcessEvent ( pFnShowBrokenItems, &ShowBrokenItems_Parms, NULL );
};

// Function NowGame.NowChildHudGM.SetPetitionFilter
// [0x00020002] 
// Parameters infos:
// struct FString                 Filter                         ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::SetPetitionFilter ( struct FString Filter )
{
	static UFunction* pFnSetPetitionFilter = NULL;

	if ( ! pFnSetPetitionFilter )
		pFnSetPetitionFilter = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.SetPetitionFilter" );

	UNowChildHudGM_execSetPetitionFilter_Parms SetPetitionFilter_Parms;
	memcpy ( &SetPetitionFilter_Parms.Filter, &Filter, 0xC );

	this->ProcessEvent ( pFnSetPetitionFilter, &SetPetitionFilter_Parms, NULL );
};

// Function NowGame.NowChildHudGM.WhisperToPetitionSource
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 SourceName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::WhisperToPetitionSource ( struct FString Message, struct FString SourceName )
{
	static UFunction* pFnWhisperToPetitionSource = NULL;

	if ( ! pFnWhisperToPetitionSource )
		pFnWhisperToPetitionSource = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.WhisperToPetitionSource" );

	UNowChildHudGM_execWhisperToPetitionSource_Parms WhisperToPetitionSource_Parms;
	memcpy ( &WhisperToPetitionSource_Parms.Message, &Message, 0xC );
	memcpy ( &WhisperToPetitionSource_Parms.SourceName, &SourceName, 0xC );

	this->ProcessEvent ( pFnWhisperToPetitionSource, &WhisperToPetitionSource_Parms, NULL );
};

// Function NowGame.NowChildHudGM.GotoPetitionSource
// [0x00020002] 
// Parameters infos:
// struct FString                 SourceName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::GotoPetitionSource ( struct FString SourceName )
{
	static UFunction* pFnGotoPetitionSource = NULL;

	if ( ! pFnGotoPetitionSource )
		pFnGotoPetitionSource = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.GotoPetitionSource" );

	UNowChildHudGM_execGotoPetitionSource_Parms GotoPetitionSource_Parms;
	memcpy ( &GotoPetitionSource_Parms.SourceName, &SourceName, 0xC );

	this->ProcessEvent ( pFnGotoPetitionSource, &GotoPetitionSource_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ClaimPetition
// [0x00020002] 
// Parameters infos:
// struct FString                 SourceName                     ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::ClaimPetition ( struct FString SourceName )
{
	static UFunction* pFnClaimPetition = NULL;

	if ( ! pFnClaimPetition )
		pFnClaimPetition = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ClaimPetition" );

	UNowChildHudGM_execClaimPetition_Parms ClaimPetition_Parms;
	memcpy ( &ClaimPetition_Parms.SourceName, &SourceName, 0xC );

	this->ProcessEvent ( pFnClaimPetition, &ClaimPetition_Parms, NULL );
};

// Function NowGame.NowChildHudGM.RemPetition
// [0x00020002] 
// Parameters infos:
// struct FString                 PetitionSource                 ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::RemPetition ( struct FString PetitionSource )
{
	static UFunction* pFnRemPetition = NULL;

	if ( ! pFnRemPetition )
		pFnRemPetition = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.RemPetition" );

	UNowChildHudGM_execRemPetition_Parms RemPetition_Parms;
	memcpy ( &RemPetition_Parms.PetitionSource, &PetitionSource, 0xC );

	this->ProcessEvent ( pFnRemPetition, &RemPetition_Parms, NULL );
};

// Function NowGame.NowChildHudGM.PetitionUpdate
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::PetitionUpdate ( )
{
	static UFunction* pFnPetitionUpdate = NULL;

	if ( ! pFnPetitionUpdate )
		pFnPetitionUpdate = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.PetitionUpdate" );

	UNowChildHudGM_execPetitionUpdate_Parms PetitionUpdate_Parms;

	this->ProcessEvent ( pFnPetitionUpdate, &PetitionUpdate_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ShowPetitions
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ShowPetitions ( )
{
	static UFunction* pFnShowPetitions = NULL;

	if ( ! pFnShowPetitions )
		pFnShowPetitions = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ShowPetitions" );

	UNowChildHudGM_execShowPetitions_Parms ShowPetitions_Parms;

	this->ProcessEvent ( pFnShowPetitions, &ShowPetitions_Parms, NULL );
};

// Function NowGame.NowChildHudGM.DumpChatLog
// [0x00020002] 
// Parameters infos:
// struct FString                 outFile                        ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::DumpChatLog ( struct FString outFile )
{
	static UFunction* pFnDumpChatLog = NULL;

	if ( ! pFnDumpChatLog )
		pFnDumpChatLog = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.DumpChatLog" );

	UNowChildHudGM_execDumpChatLog_Parms DumpChatLog_Parms;
	memcpy ( &DumpChatLog_Parms.outFile, &outFile, 0xC );

	this->ProcessEvent ( pFnDumpChatLog, &DumpChatLog_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ShowText
// [0x00020002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::ShowText ( struct FString Text )
{
	static UFunction* pFnShowText = NULL;

	if ( ! pFnShowText )
		pFnShowText = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ShowText" );

	UNowChildHudGM_execShowText_Parms ShowText_Parms;
	memcpy ( &ShowText_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnShowText, &ShowText_Parms, NULL );
};

// Function NowGame.NowChildHudGM.InitChildHud
// [0x00020002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHudGM::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.InitChildHud" );

	UNowChildHudGM_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudGM.DrawAnnouncements
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudGM::DrawAnnouncements ( class UCanvas* C )
{
	static UFunction* pFnDrawAnnouncements = NULL;

	if ( ! pFnDrawAnnouncements )
		pFnDrawAnnouncements = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.DrawAnnouncements" );

	UNowChildHudGM_execDrawAnnouncements_Parms DrawAnnouncements_Parms;
	DrawAnnouncements_Parms.C = C;

	this->ProcessEvent ( pFnDrawAnnouncements, &DrawAnnouncements_Parms, NULL );
};

// Function NowGame.NowChildHudGM.LastParamPage
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::LastParamPage ( )
{
	static UFunction* pFnLastParamPage = NULL;

	if ( ! pFnLastParamPage )
		pFnLastParamPage = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.LastParamPage" );

	UNowChildHudGM_execLastParamPage_Parms LastParamPage_Parms;

	this->ProcessEvent ( pFnLastParamPage, &LastParamPage_Parms, NULL );
};

// Function NowGame.NowChildHudGM.NextParamPage
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::NextParamPage ( )
{
	static UFunction* pFnNextParamPage = NULL;

	if ( ! pFnNextParamPage )
		pFnNextParamPage = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.NextParamPage" );

	UNowChildHudGM_execNextParamPage_Parms NextParamPage_Parms;

	this->ProcessEvent ( pFnNextParamPage, &NextParamPage_Parms, NULL );
};

// Function NowGame.NowChildHudGM.SetParamPage
// [0x00020002] 
// Parameters infos:
// int                            iParamPage                     ( CPF_Parm )

void UNowChildHudGM::SetParamPage ( int iParamPage )
{
	static UFunction* pFnSetParamPage = NULL;

	if ( ! pFnSetParamPage )
		pFnSetParamPage = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.SetParamPage" );

	UNowChildHudGM_execSetParamPage_Parms SetParamPage_Parms;
	SetParamPage_Parms.iParamPage = iParamPage;

	this->ProcessEvent ( pFnSetParamPage, &SetParamPage_Parms, NULL );
};

// Function NowGame.NowChildHudGM.AddParamToViewList
// [0x00020002] 
// Parameters infos:
// struct FString                 StringValue                    ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudGM::AddParamToViewList ( struct FString StringValue )
{
	static UFunction* pFnAddParamToViewList = NULL;

	if ( ! pFnAddParamToViewList )
		pFnAddParamToViewList = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.AddParamToViewList" );

	UNowChildHudGM_execAddParamToViewList_Parms AddParamToViewList_Parms;
	memcpy ( &AddParamToViewList_Parms.StringValue, &StringValue, 0xC );

	this->ProcessEvent ( pFnAddParamToViewList, &AddParamToViewList_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ClearAndShowPetList
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ClearAndShowPetList ( )
{
	static UFunction* pFnClearAndShowPetList = NULL;

	if ( ! pFnClearAndShowPetList )
		pFnClearAndShowPetList = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ClearAndShowPetList" );

	UNowChildHudGM_execClearAndShowPetList_Parms ClearAndShowPetList_Parms;

	this->ProcessEvent ( pFnClearAndShowPetList, &ClearAndShowPetList_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ClearAndShowViewParamList
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ClearAndShowViewParamList ( )
{
	static UFunction* pFnClearAndShowViewParamList = NULL;

	if ( ! pFnClearAndShowViewParamList )
		pFnClearAndShowViewParamList = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ClearAndShowViewParamList" );

	UNowChildHudGM_execClearAndShowViewParamList_Parms ClearAndShowViewParamList_Parms;

	this->ProcessEvent ( pFnClearAndShowViewParamList, &ClearAndShowViewParamList_Parms, NULL );
};

// Function NowGame.NowChildHudGM.AddLastCommandTime
// [0x00020002] 
// Parameters infos:
// struct FString                 GMAvatarName                   ( CPF_Parm | CPF_NeedCtorLink )
// int                            Time                           ( CPF_Parm )

void UNowChildHudGM::AddLastCommandTime ( struct FString GMAvatarName, int Time )
{
	static UFunction* pFnAddLastCommandTime = NULL;

	if ( ! pFnAddLastCommandTime )
		pFnAddLastCommandTime = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.AddLastCommandTime" );

	UNowChildHudGM_execAddLastCommandTime_Parms AddLastCommandTime_Parms;
	memcpy ( &AddLastCommandTime_Parms.GMAvatarName, &GMAvatarName, 0xC );
	AddLastCommandTime_Parms.Time = Time;

	this->ProcessEvent ( pFnAddLastCommandTime, &AddLastCommandTime_Parms, NULL );
};

// Function NowGame.NowChildHudGM.ClearAndShowLastCommandList
// [0x00020002] 
// Parameters infos:

void UNowChildHudGM::ClearAndShowLastCommandList ( )
{
	static UFunction* pFnClearAndShowLastCommandList = NULL;

	if ( ! pFnClearAndShowLastCommandList )
		pFnClearAndShowLastCommandList = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.ClearAndShowLastCommandList" );

	UNowChildHudGM_execClearAndShowLastCommandList_Parms ClearAndShowLastCommandList_Parms;

	this->ProcessEvent ( pFnClearAndShowLastCommandList, &ClearAndShowLastCommandList_Parms, NULL );
};

// Function NowGame.NowChildHudGM.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudGM::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudGM.DrawChildHud" );

	UNowChildHudGM_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHud.DumpDebugHudInfo
// [0x00020002] 
// Parameters infos:

void UNowChildHud::DumpDebugHudInfo ( )
{
	static UFunction* pFnDumpDebugHudInfo = NULL;

	if ( ! pFnDumpDebugHudInfo )
		pFnDumpDebugHudInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHud.DumpDebugHudInfo" );

	UNowChildHud_execDumpDebugHudInfo_Parms DumpDebugHudInfo_Parms;

	this->ProcessEvent ( pFnDumpDebugHudInfo, &DumpDebugHudInfo_Parms, NULL );
};

// Function NowGame.NowChildHud.DrawChildHud
// [0x00020000] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHud::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHud.DrawChildHud" );

	UNowChildHud_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHud.UseDebugHudB
// [0x00020000] 
// Parameters infos:

void UNowChildHud::UseDebugHudB ( )
{
	static UFunction* pFnUseDebugHudB = NULL;

	if ( ! pFnUseDebugHudB )
		pFnUseDebugHudB = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHud.UseDebugHudB" );

	UNowChildHud_execUseDebugHudB_Parms UseDebugHudB_Parms;

	this->ProcessEvent ( pFnUseDebugHudB, &UseDebugHudB_Parms, NULL );
};

// Function NowGame.NowChildHud.UseDebugHud
// [0x00020000] 
// Parameters infos:

void UNowChildHud::UseDebugHud ( )
{
	static UFunction* pFnUseDebugHud = NULL;

	if ( ! pFnUseDebugHud )
		pFnUseDebugHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHud.UseDebugHud" );

	UNowChildHud_execUseDebugHud_Parms UseDebugHud_Parms;

	this->ProcessEvent ( pFnUseDebugHud, &UseDebugHud_Parms, NULL );
};

// Function NowGame.NowChildHud.InitChildHud
// [0x00020002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHud::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHud.InitChildHud" );

	UNowChildHud_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.DefaultPostProcess
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::DefaultPostProcess ( )
{
	static UFunction* pFnDefaultPostProcess = NULL;

	if ( ! pFnDefaultPostProcess )
		pFnDefaultPostProcess = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.DefaultPostProcess" );

	ANowPlayerCamera_execDefaultPostProcess_Parms DefaultPostProcess_Parms;

	this->ProcessEvent ( pFnDefaultPostProcess, &DefaultPostProcess_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.BlurPostProcess
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::BlurPostProcess ( )
{
	static UFunction* pFnBlurPostProcess = NULL;

	if ( ! pFnBlurPostProcess )
		pFnBlurPostProcess = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.BlurPostProcess" );

	ANowPlayerCamera_execBlurPostProcess_Parms BlurPostProcess_Parms;

	this->ProcessEvent ( pFnBlurPostProcess, &BlurPostProcess_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.StopCameraFx
// [0x00020102] 
// Parameters infos:

void ANowPlayerCamera::StopCameraFx ( )
{
	static UFunction* pFnStopCameraFx = NULL;

	if ( ! pFnStopCameraFx )
		pFnStopCameraFx = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.StopCameraFx" );

	ANowPlayerCamera_execStopCameraFx_Parms StopCameraFx_Parms;

	this->ProcessEvent ( pFnStopCameraFx, &StopCameraFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.SetCameraFX
// [0x00024102] 
// Parameters infos:
// class UPostProcessChain*       newFX                          ( CPF_Parm )
// float                          Time                           ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerCamera::SetCameraFX ( class UPostProcessChain* newFX, float Time )
{
	static UFunction* pFnSetCameraFX = NULL;

	if ( ! pFnSetCameraFX )
		pFnSetCameraFX = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.SetCameraFX" );

	ANowPlayerCamera_execSetCameraFX_Parms SetCameraFX_Parms;
	SetCameraFX_Parms.newFX = newFX;
	SetCameraFX_Parms.Time = Time;

	this->ProcessEvent ( pFnSetCameraFX, &SetCameraFX_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.FadePostProcess
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::FadePostProcess ( )
{
	static UFunction* pFnFadePostProcess = NULL;

	if ( ! pFnFadePostProcess )
		pFnFadePostProcess = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.FadePostProcess" );

	ANowPlayerCamera_execFadePostProcess_Parms FadePostProcess_Parms;

	this->ProcessEvent ( pFnFadePostProcess, &FadePostProcess_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.StopFadePostProcess
// [0x00020000] 
// Parameters infos:

void ANowPlayerCamera::StopFadePostProcess ( )
{
	static UFunction* pFnStopFadePostProcess = NULL;

	if ( ! pFnStopFadePostProcess )
		pFnStopFadePostProcess = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.StopFadePostProcess" );

	ANowPlayerCamera_execStopFadePostProcess_Parms StopFadePostProcess_Parms;

	this->ProcessEvent ( pFnStopFadePostProcess, &StopFadePostProcess_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.Tick
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowPlayerCamera::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.Tick" );

	ANowPlayerCamera_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.RemoveUnderwaterFx
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::RemoveUnderwaterFx ( )
{
	static UFunction* pFnRemoveUnderwaterFx = NULL;

	if ( ! pFnRemoveUnderwaterFx )
		pFnRemoveUnderwaterFx = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.RemoveUnderwaterFx" );

	ANowPlayerCamera_execRemoveUnderwaterFx_Parms RemoveUnderwaterFx_Parms;

	this->ProcessEvent ( pFnRemoveUnderwaterFx, &RemoveUnderwaterFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.AddUnderwaterFx
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::AddUnderwaterFx ( )
{
	static UFunction* pFnAddUnderwaterFx = NULL;

	if ( ! pFnAddUnderwaterFx )
		pFnAddUnderwaterFx = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.AddUnderwaterFx" );

	ANowPlayerCamera_execAddUnderwaterFx_Parms AddUnderwaterFx_Parms;

	this->ProcessEvent ( pFnAddUnderwaterFx, &AddUnderwaterFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.PlayDeathFx
// [0x00020002] 
// Parameters infos:
// unsigned long                  bManifested                    ( CPF_Parm )

void ANowPlayerCamera::PlayDeathFx ( unsigned long bManifested )
{
	static UFunction* pFnPlayDeathFx = NULL;

	if ( ! pFnPlayDeathFx )
		pFnPlayDeathFx = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.PlayDeathFx" );

	ANowPlayerCamera_execPlayDeathFx_Parms PlayDeathFx_Parms;
	PlayDeathFx_Parms.bManifested = bManifested;

	this->ProcessEvent ( pFnPlayDeathFx, &PlayDeathFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.FindPriestBeacon
// [0x00020002] 
// Parameters infos:
// unsigned long                  TurnOn                         ( CPF_Parm )

void ANowPlayerCamera::FindPriestBeacon ( unsigned long TurnOn )
{
	static UFunction* pFnFindPriestBeacon = NULL;

	if ( ! pFnFindPriestBeacon )
		pFnFindPriestBeacon = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.FindPriestBeacon" );

	ANowPlayerCamera_execFindPriestBeacon_Parms FindPriestBeacon_Parms;
	FindPriestBeacon_Parms.TurnOn = TurnOn;

	this->ProcessEvent ( pFnFindPriestBeacon, &FindPriestBeacon_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.StopHitFx
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::StopHitFx ( )
{
	static UFunction* pFnStopHitFx = NULL;

	if ( ! pFnStopHitFx )
		pFnStopHitFx = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.StopHitFx" );

	ANowPlayerCamera_execStopHitFx_Parms StopHitFx_Parms;

	this->ProcessEvent ( pFnStopHitFx, &StopHitFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.PlayHitFx
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::PlayHitFx ( )
{
	static UFunction* pFnPlayHitFx = NULL;

	if ( ! pFnPlayHitFx )
		pFnPlayHitFx = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.PlayHitFx" );

	ANowPlayerCamera_execPlayHitFx_Parms PlayHitFx_Parms;

	this->ProcessEvent ( pFnPlayHitFx, &PlayHitFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.RemoveBloodOnCameraFx
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::RemoveBloodOnCameraFx ( )
{
	static UFunction* pFnRemoveBloodOnCameraFx = NULL;

	if ( ! pFnRemoveBloodOnCameraFx )
		pFnRemoveBloodOnCameraFx = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.RemoveBloodOnCameraFx" );

	ANowPlayerCamera_execRemoveBloodOnCameraFx_Parms RemoveBloodOnCameraFx_Parms;

	this->ProcessEvent ( pFnRemoveBloodOnCameraFx, &RemoveBloodOnCameraFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.PlayBloodCameraFx
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::PlayBloodCameraFx ( )
{
	static UFunction* pFnPlayBloodCameraFx = NULL;

	if ( ! pFnPlayBloodCameraFx )
		pFnPlayBloodCameraFx = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.PlayBloodCameraFx" );

	ANowPlayerCamera_execPlayBloodCameraFx_Parms PlayBloodCameraFx_Parms;

	this->ProcessEvent ( pFnPlayBloodCameraFx, &PlayBloodCameraFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.RemoveConfusedCamera
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::RemoveConfusedCamera ( )
{
	static UFunction* pFnRemoveConfusedCamera = NULL;

	if ( ! pFnRemoveConfusedCamera )
		pFnRemoveConfusedCamera = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.RemoveConfusedCamera" );

	ANowPlayerCamera_execRemoveConfusedCamera_Parms RemoveConfusedCamera_Parms;

	this->ProcessEvent ( pFnRemoveConfusedCamera, &RemoveConfusedCamera_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.PlayConfusedCameraFx
// [0x00020002] 
// Parameters infos:
// float                          Time                           ( CPF_Parm )

void ANowPlayerCamera::PlayConfusedCameraFx ( float Time )
{
	static UFunction* pFnPlayConfusedCameraFx = NULL;

	if ( ! pFnPlayConfusedCameraFx )
		pFnPlayConfusedCameraFx = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.PlayConfusedCameraFx" );

	ANowPlayerCamera_execPlayConfusedCameraFx_Parms PlayConfusedCameraFx_Parms;
	PlayConfusedCameraFx_Parms.Time = Time;

	this->ProcessEvent ( pFnPlayConfusedCameraFx, &PlayConfusedCameraFx_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.StopOnScreenMaterialFX
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::StopOnScreenMaterialFX ( )
{
	static UFunction* pFnStopOnScreenMaterialFX = NULL;

	if ( ! pFnStopOnScreenMaterialFX )
		pFnStopOnScreenMaterialFX = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.StopOnScreenMaterialFX" );

	ANowPlayerCamera_execStopOnScreenMaterialFX_Parms StopOnScreenMaterialFX_Parms;

	this->ProcessEvent ( pFnStopOnScreenMaterialFX, &StopOnScreenMaterialFX_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.PlayOnScreenMaterialFX
// [0x00024002] 
// Parameters infos:
// class UMaterialInstance*       WhatFX                         ( CPF_Parm )
// float                          Timer                          ( CPF_Parm )
// float                          BlendOutTime                   ( CPF_Parm )
// unsigned long                  bIsDominantMatFX               ( CPF_OptionalParm | CPF_Parm )

void ANowPlayerCamera::PlayOnScreenMaterialFX ( class UMaterialInstance* WhatFX, float Timer, float BlendOutTime, unsigned long bIsDominantMatFX )
{
	static UFunction* pFnPlayOnScreenMaterialFX = NULL;

	if ( ! pFnPlayOnScreenMaterialFX )
		pFnPlayOnScreenMaterialFX = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.PlayOnScreenMaterialFX" );

	ANowPlayerCamera_execPlayOnScreenMaterialFX_Parms PlayOnScreenMaterialFX_Parms;
	PlayOnScreenMaterialFX_Parms.WhatFX = WhatFX;
	PlayOnScreenMaterialFX_Parms.Timer = Timer;
	PlayOnScreenMaterialFX_Parms.BlendOutTime = BlendOutTime;
	PlayOnScreenMaterialFX_Parms.bIsDominantMatFX = bIsDominantMatFX;

	this->ProcessEvent ( pFnPlayOnScreenMaterialFX, &PlayOnScreenMaterialFX_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.TrackToggle
// [0x00020002] 
// Parameters infos:

void ANowPlayerCamera::TrackToggle ( )
{
	static UFunction* pFnTrackToggle = NULL;

	if ( ! pFnTrackToggle )
		pFnTrackToggle = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.TrackToggle" );

	ANowPlayerCamera_execTrackToggle_Parms TrackToggle_Parms;

	this->ProcessEvent ( pFnTrackToggle, &TrackToggle_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.UpdateViewTarget
// [0x00C20002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FTViewTarget            OutVT                          ( CPF_Parm | CPF_OutParm )

void ANowPlayerCamera::UpdateViewTarget ( float DeltaTime, struct FTViewTarget* OutVT )
{
	static UFunction* pFnUpdateViewTarget = NULL;

	if ( ! pFnUpdateViewTarget )
		pFnUpdateViewTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.UpdateViewTarget" );

	ANowPlayerCamera_execUpdateViewTarget_Parms UpdateViewTarget_Parms;
	UpdateViewTarget_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateViewTarget, &UpdateViewTarget_Parms, NULL );

	if ( OutVT )
		memcpy ( OutVT, &UpdateViewTarget_Parms.OutVT, 0x2C );
};

// Function NowGame.NowPlayerCamera.SetCameraTarget
// [0x00020000] 
// Parameters infos:

void ANowPlayerCamera::SetCameraTarget ( )
{
	static UFunction* pFnSetCameraTarget = NULL;

	if ( ! pFnSetCameraTarget )
		pFnSetCameraTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.SetCameraTarget" );

	ANowPlayerCamera_execSetCameraTarget_Parms SetCameraTarget_Parms;

	this->ProcessEvent ( pFnSetCameraTarget, &SetCameraTarget_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.InitializeFor
// [0x00020002] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void ANowPlayerCamera::InitializeFor ( class APlayerController* PC )
{
	static UFunction* pFnInitializeFor = NULL;

	if ( ! pFnInitializeFor )
		pFnInitializeFor = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.InitializeFor" );

	ANowPlayerCamera_execInitializeFor_Parms InitializeFor_Parms;
	InitializeFor_Parms.PC = PC;

	this->ProcessEvent ( pFnInitializeFor, &InitializeFor_Parms, NULL );
};

// Function NowGame.NowPlayerCamera.SetPPFader
// [0x00020002] 
// Parameters infos:
// struct FVector                 NewFadeCenter                  ( CPF_Parm )
// float                          New_EffectMaxRange             ( CPF_Parm )
// struct FVector                 HighLights                     ( CPF_Parm )
// struct FVector                 MidTones                       ( CPF_Parm )
// struct FVector                 Shadows                        ( CPF_Parm )

void ANowPlayerCamera::SetPPFader ( struct FVector NewFadeCenter, float New_EffectMaxRange, struct FVector HighLights, struct FVector MidTones, struct FVector Shadows )
{
	static UFunction* pFnSetPPFader = NULL;

	if ( ! pFnSetPPFader )
		pFnSetPPFader = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerCamera.SetPPFader" );

	ANowPlayerCamera_execSetPPFader_Parms SetPPFader_Parms;
	memcpy ( &SetPPFader_Parms.NewFadeCenter, &NewFadeCenter, 0xC );
	SetPPFader_Parms.New_EffectMaxRange = New_EffectMaxRange;
	memcpy ( &SetPPFader_Parms.HighLights, &HighLights, 0xC );
	memcpy ( &SetPPFader_Parms.MidTones, &MidTones, 0xC );
	memcpy ( &SetPPFader_Parms.Shadows, &Shadows, 0xC );

	this->ProcessEvent ( pFnSetPPFader, &SetPPFader_Parms, NULL );
};

// Function NowGame.ClientViewModeAiControl.Escape
// [0x00020002] 
// Parameters infos:

void UClientViewModeAiControl::Escape ( )
{
	static UFunction* pFnEscape = NULL;

	if ( ! pFnEscape )
		pFnEscape = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeAiControl.Escape" );

	UClientViewModeAiControl_execEscape_Parms Escape_Parms;

	this->ProcessEvent ( pFnEscape, &Escape_Parms, NULL );
};

// Function NowGame.ClientViewModeAiControl.RightClick
// [0x00020002] 
// Parameters infos:

void UClientViewModeAiControl::RightClick ( )
{
	static UFunction* pFnRightClick = NULL;

	if ( ! pFnRightClick )
		pFnRightClick = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeAiControl.RightClick" );

	UClientViewModeAiControl_execRightClick_Parms RightClick_Parms;

	this->ProcessEvent ( pFnRightClick, &RightClick_Parms, NULL );
};

// Function NowGame.ClientViewModeAiControl.LeftClick
// [0x00020002] 
// Parameters infos:

void UClientViewModeAiControl::LeftClick ( )
{
	static UFunction* pFnLeftClick = NULL;

	if ( ! pFnLeftClick )
		pFnLeftClick = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeAiControl.LeftClick" );

	UClientViewModeAiControl_execLeftClick_Parms LeftClick_Parms;

	this->ProcessEvent ( pFnLeftClick, &LeftClick_Parms, NULL );
};

// Function NowGame.ClientViewModeAiControl.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeAiControl::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeAiControl.PressedUse" );

	UClientViewModeAiControl_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeAiControl.Remove
// [0x00020002] 
// Parameters infos:

void UClientViewModeAiControl::Remove ( )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeAiControl.Remove" );

	UClientViewModeAiControl_execRemove_Parms Remove_Parms;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function NowGame.ClientViewModeAiControl.CanvasTick
// [0x00820002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UClientViewModeAiControl::CanvasTick ( class UCanvas* C )
{
	static UFunction* pFnCanvasTick = NULL;

	if ( ! pFnCanvasTick )
		pFnCanvasTick = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeAiControl.CanvasTick" );

	UClientViewModeAiControl_execCanvasTick_Parms CanvasTick_Parms;
	CanvasTick_Parms.C = C;

	this->ProcessEvent ( pFnCanvasTick, &CanvasTick_Parms, NULL );
};

// Function NowGame.ClientViewModeAiControl.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModeAiControl::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeAiControl.Tick" );

	UClientViewModeAiControl_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModeAiControl.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModeAiControl::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeAiControl.AttachTo" );

	UClientViewModeAiControl_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewMode.NumberPress
// [0x00020000] 
// Parameters infos:
// int                            iNumber                        ( CPF_Parm )

void UClientViewMode::NumberPress ( int iNumber )
{
	static UFunction* pFnNumberPress = NULL;

	if ( ! pFnNumberPress )
		pFnNumberPress = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewMode.NumberPress" );

	UClientViewMode_execNumberPress_Parms NumberPress_Parms;
	NumberPress_Parms.iNumber = iNumber;

	this->ProcessEvent ( pFnNumberPress, &NumberPress_Parms, NULL );
};

// Function NowGame.ClientViewMode.Escape
// [0x00020000] 
// Parameters infos:

void UClientViewMode::Escape ( )
{
	static UFunction* pFnEscape = NULL;

	if ( ! pFnEscape )
		pFnEscape = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewMode.Escape" );

	UClientViewMode_execEscape_Parms Escape_Parms;

	this->ProcessEvent ( pFnEscape, &Escape_Parms, NULL );
};

// Function NowGame.ClientViewMode.RightClick
// [0x00020000] 
// Parameters infos:

void UClientViewMode::RightClick ( )
{
	static UFunction* pFnRightClick = NULL;

	if ( ! pFnRightClick )
		pFnRightClick = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewMode.RightClick" );

	UClientViewMode_execRightClick_Parms RightClick_Parms;

	this->ProcessEvent ( pFnRightClick, &RightClick_Parms, NULL );
};

// Function NowGame.ClientViewMode.LeftClick
// [0x00020000] 
// Parameters infos:

void UClientViewMode::LeftClick ( )
{
	static UFunction* pFnLeftClick = NULL;

	if ( ! pFnLeftClick )
		pFnLeftClick = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewMode.LeftClick" );

	UClientViewMode_execLeftClick_Parms LeftClick_Parms;

	this->ProcessEvent ( pFnLeftClick, &LeftClick_Parms, NULL );
};

// Function NowGame.ClientViewMode.CanvasTick
// [0x00020000] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UClientViewMode::CanvasTick ( class UCanvas* C )
{
	static UFunction* pFnCanvasTick = NULL;

	if ( ! pFnCanvasTick )
		pFnCanvasTick = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewMode.CanvasTick" );

	UClientViewMode_execCanvasTick_Parms CanvasTick_Parms;
	CanvasTick_Parms.C = C;

	this->ProcessEvent ( pFnCanvasTick, &CanvasTick_Parms, NULL );
};

// Function NowGame.ClientViewMode.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewMode::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewMode.PressedUse" );

	UClientViewMode_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewMode.Remove
// [0x00020002] 
// Parameters infos:

void UClientViewMode::Remove ( )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewMode.Remove" );

	UClientViewMode_execRemove_Parms Remove_Parms;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function NowGame.ClientViewMode.Tick
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewMode::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewMode.Tick" );

	UClientViewMode_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewMode.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewMode::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewMode.AttachTo" );

	UClientViewMode_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.NowPlayerInput.ToggleMOUI
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UNowPlayerInput::ToggleMOUI ( )
{
	static UFunction* pFnToggleMOUI = NULL;

	if ( ! pFnToggleMOUI )
		pFnToggleMOUI = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerInput.ToggleMOUI" );

	UNowPlayerInput_execToggleMOUI_Parms ToggleMOUI_Parms;

	this->ProcessEvent ( pFnToggleMOUI, &ToggleMOUI_Parms, NULL );
};

// Function NowGame.NowPlayerInput.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void UNowPlayerInput::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerInput.PostBeginPlay" );

	UNowPlayerInput_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowPlayerInput.GetMount
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANowAtlasAvatarAiDynamicMount* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarAiDynamicMount* UNowPlayerInput::eventGetMount ( )
{
	static UFunction* pFnGetMount = NULL;

	if ( ! pFnGetMount )
		pFnGetMount = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerInput.GetMount" );

	UNowPlayerInput_eventGetMount_Parms GetMount_Parms;

	this->ProcessEvent ( pFnGetMount, &GetMount_Parms, NULL );

	return GetMount_Parms.ReturnValue;
};

// Function NowGame.NowPlayerInput.ToggleAutoMove
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UNowPlayerInput::ToggleAutoMove ( )
{
	static UFunction* pFnToggleAutoMove = NULL;

	if ( ! pFnToggleAutoMove )
		pFnToggleAutoMove = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerInput.ToggleAutoMove" );

	UNowPlayerInput_execToggleAutoMove_Parms ToggleAutoMove_Parms;

	this->ProcessEvent ( pFnToggleAutoMove, &ToggleAutoMove_Parms, NULL );
};

// Function NowGame.NowPlayerInput.ShowMouseOff
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void UNowPlayerInput::ShowMouseOff ( )
{
	static UFunction* pFnShowMouseOff = NULL;

	if ( ! pFnShowMouseOff )
		pFnShowMouseOff = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerInput.ShowMouseOff" );

	UNowPlayerInput_execShowMouseOff_Parms ShowMouseOff_Parms;

	this->ProcessEvent ( pFnShowMouseOff, &ShowMouseOff_Parms, NULL );
};

// Function NowGame.NowPlayerInput.ShowMouseOn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UNowPlayerInput::ShowMouseOn ( )
{
	static UFunction* pFnShowMouseOn = NULL;

	if ( ! pFnShowMouseOn )
		pFnShowMouseOn = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerInput.ShowMouseOn" );

	UNowPlayerInput_execShowMouseOn_Parms ShowMouseOn_Parms;

	this->ProcessEvent ( pFnShowMouseOn, &ShowMouseOn_Parms, NULL );
};

// Function NowGame.NowPlayerInput.GetGFXHud
// [0x00020002] 
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* UNowPlayerInput::GetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerInput.GetGFXHud" );

	UNowPlayerInput_execGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.NowPlayerInput.SetShowMouse
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void UNowPlayerInput::SetShowMouse ( unsigned long bShow )
{
	static UFunction* pFnSetShowMouse = NULL;

	if ( ! pFnSetShowMouse )
		pFnSetShowMouse = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerInput.SetShowMouse" );

	UNowPlayerInput_execSetShowMouse_Parms SetShowMouse_Parms;
	SetShowMouse_Parms.bShow = bShow;

	this->ProcessEvent ( pFnSetShowMouse, &SetShowMouse_Parms, NULL );
};

// Function NowGame.NowPlayerInput.ToggleMouse
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UNowPlayerInput::ToggleMouse ( )
{
	static UFunction* pFnToggleMouse = NULL;

	if ( ! pFnToggleMouse )
		pFnToggleMouse = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerInput.ToggleMouse" );

	UNowPlayerInput_execToggleMouse_Parms ToggleMouse_Parms;

	this->ProcessEvent ( pFnToggleMouse, &ToggleMouse_Parms, NULL );
};

// Function NowGame.NowPlayerInput.CheckForDoubleClickMove
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

unsigned char UNowPlayerInput::CheckForDoubleClickMove ( float DeltaTime )
{
	static UFunction* pFnCheckForDoubleClickMove = NULL;

	if ( ! pFnCheckForDoubleClickMove )
		pFnCheckForDoubleClickMove = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerInput.CheckForDoubleClickMove" );

	UNowPlayerInput_execCheckForDoubleClickMove_Parms CheckForDoubleClickMove_Parms;
	CheckForDoubleClickMove_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnCheckForDoubleClickMove, &CheckForDoubleClickMove_Parms, NULL );

	return CheckForDoubleClickMove_Parms.ReturnValue;
};

// Function NowGame.NowPlayerInput.PlayerInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UNowPlayerInput::eventPlayerInput ( float DeltaTime )
{
	static UFunction* pFnPlayerInput = NULL;

	if ( ! pFnPlayerInput )
		pFnPlayerInput = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerInput.PlayerInput" );

	UNowPlayerInput_eventPlayerInput_Parms PlayerInput_Parms;
	PlayerInput_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPlayerInput, &PlayerInput_Parms, NULL );
};

// Function NowGame.NowPlayerInput.HasLookInput
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowPlayerInput::HasLookInput ( )
{
	static UFunction* pFnHasLookInput = NULL;

	if ( ! pFnHasLookInput )
		pFnHasLookInput = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerInput.HasLookInput" );

	UNowPlayerInput_execHasLookInput_Parms HasLookInput_Parms;

	this->ProcessEvent ( pFnHasLookInput, &HasLookInput_Parms, NULL );

	return HasLookInput_Parms.ReturnValue;
};

// Function NowGame.NowPlayerInput.HasMoveInput
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowPlayerInput::HasMoveInput ( )
{
	static UFunction* pFnHasMoveInput = NULL;

	if ( ! pFnHasMoveInput )
		pFnHasMoveInput = UObject::FindObject< UFunction > ( "Function NowGame.NowPlayerInput.HasMoveInput" );

	UNowPlayerInput_execHasMoveInput_Parms HasMoveInput_Parms;

	this->ProcessEvent ( pFnHasMoveInput, &HasMoveInput_Parms, NULL );

	return HasMoveInput_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeCreatureControl.SendCommand
// [0x00020002] 
// Parameters infos:
// int                            FinalCommand                   ( CPF_Parm )

void UClientViewModeCreatureControl::SendCommand ( int FinalCommand )
{
	static UFunction* pFnSendCommand = NULL;

	if ( ! pFnSendCommand )
		pFnSendCommand = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeCreatureControl.SendCommand" );

	UClientViewModeCreatureControl_execSendCommand_Parms SendCommand_Parms;
	SendCommand_Parms.FinalCommand = FinalCommand;

	this->ProcessEvent ( pFnSendCommand, &SendCommand_Parms, NULL );
};

// Function NowGame.ClientViewModeCreatureControl.NumberPress
// [0x00020002] 
// Parameters infos:
// int                            iNumber                        ( CPF_Parm )

void UClientViewModeCreatureControl::NumberPress ( int iNumber )
{
	static UFunction* pFnNumberPress = NULL;

	if ( ! pFnNumberPress )
		pFnNumberPress = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeCreatureControl.NumberPress" );

	UClientViewModeCreatureControl_execNumberPress_Parms NumberPress_Parms;
	NumberPress_Parms.iNumber = iNumber;

	this->ProcessEvent ( pFnNumberPress, &NumberPress_Parms, NULL );
};

// Function NowGame.ClientViewModeCreatureControl.CanvasTick
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UClientViewModeCreatureControl::CanvasTick ( class UCanvas* C )
{
	static UFunction* pFnCanvasTick = NULL;

	if ( ! pFnCanvasTick )
		pFnCanvasTick = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeCreatureControl.CanvasTick" );

	UClientViewModeCreatureControl_execCanvasTick_Parms CanvasTick_Parms;
	CanvasTick_Parms.C = C;

	this->ProcessEvent ( pFnCanvasTick, &CanvasTick_Parms, NULL );
};

// Function NowGame.ClientViewModeCreatureControl.Escape
// [0x00020002] 
// Parameters infos:

void UClientViewModeCreatureControl::Escape ( )
{
	static UFunction* pFnEscape = NULL;

	if ( ! pFnEscape )
		pFnEscape = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeCreatureControl.Escape" );

	UClientViewModeCreatureControl_execEscape_Parms Escape_Parms;

	this->ProcessEvent ( pFnEscape, &Escape_Parms, NULL );
};

// Function NowGame.ClientViewModeCreatureControl.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModeCreatureControl::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeCreatureControl.AttachTo" );

	UClientViewModeCreatureControl_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModeKeepNpcPlace.Remove
// [0x00020002] 
// Parameters infos:

void UClientViewModeKeepNpcPlace::Remove ( )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeKeepNpcPlace.Remove" );

	UClientViewModeKeepNpcPlace_execRemove_Parms Remove_Parms;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function NowGame.ClientViewModeKeepNpcPlace.UpdateSelected
// [0x00020002] 
// Parameters infos:

void UClientViewModeKeepNpcPlace::UpdateSelected ( )
{
	static UFunction* pFnUpdateSelected = NULL;

	if ( ! pFnUpdateSelected )
		pFnUpdateSelected = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeKeepNpcPlace.UpdateSelected" );

	UClientViewModeKeepNpcPlace_execUpdateSelected_Parms UpdateSelected_Parms;

	this->ProcessEvent ( pFnUpdateSelected, &UpdateSelected_Parms, NULL );
};

// Function NowGame.ClientViewModeKeepNpcPlace.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModeKeepNpcPlace::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeKeepNpcPlace.Tick" );

	UClientViewModeKeepNpcPlace_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModeKeepNpcPlace.ConnectToKeep
// [0x00820002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerKeep* WhatKeep                       ( CPF_Parm )

void UClientViewModeKeepNpcPlace::ConnectToKeep ( class ANowAtlasAvatarPlayerKeep* WhatKeep )
{
	static UFunction* pFnConnectToKeep = NULL;

	if ( ! pFnConnectToKeep )
		pFnConnectToKeep = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeKeepNpcPlace.ConnectToKeep" );

	UClientViewModeKeepNpcPlace_execConnectToKeep_Parms ConnectToKeep_Parms;
	ConnectToKeep_Parms.WhatKeep = WhatKeep;

	this->ProcessEvent ( pFnConnectToKeep, &ConnectToKeep_Parms, NULL );
};

// Function NowGame.ClientViewModeKeepNpcPlace.FindKeep
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerKeep* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerKeep* UClientViewModeKeepNpcPlace::FindKeep ( )
{
	static UFunction* pFnFindKeep = NULL;

	if ( ! pFnFindKeep )
		pFnFindKeep = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeKeepNpcPlace.FindKeep" );

	UClientViewModeKeepNpcPlace_execFindKeep_Parms FindKeep_Parms;

	this->ProcessEvent ( pFnFindKeep, &FindKeep_Parms, NULL );

	return FindKeep_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeKeepNpcPlace.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModeKeepNpcPlace::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeKeepNpcPlace.AttachTo" );

	UClientViewModeKeepNpcPlace_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModeKeepNpcPlace.GetSlot
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UClientViewModeKeepNpcPlace::GetSlot ( )
{
	static UFunction* pFnGetSlot = NULL;

	if ( ! pFnGetSlot )
		pFnGetSlot = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeKeepNpcPlace.GetSlot" );

	UClientViewModeKeepNpcPlace_execGetSlot_Parms GetSlot_Parms;

	this->ProcessEvent ( pFnGetSlot, &GetSlot_Parms, NULL );

	return GetSlot_Parms.ReturnValue;
};

// Function NowGame.ClientViewModeKeepNpcPlace.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModeKeepNpcPlace::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModeKeepNpcPlace.PressedUse" );

	UClientViewModeKeepNpcPlace_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.Remove
// [0x00020002] 
// Parameters infos:

void UClientViewModePlace::Remove ( )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePlace.Remove" );

	UClientViewModePlace_execRemove_Parms Remove_Parms;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function NowGame.ClientViewModePlace.DrawDebugCylinder
// [0x00024002] 
// Parameters infos:
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 End                            ( CPF_Parm )
// float                          Radius                         ( CPF_Parm )
// int                            Segments                       ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UClientViewModePlace::DrawDebugCylinder ( struct FVector Start, struct FVector End, float Radius, int Segments, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawDebugCylinder = NULL;

	if ( ! pFnDrawDebugCylinder )
		pFnDrawDebugCylinder = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePlace.DrawDebugCylinder" );

	UClientViewModePlace_execDrawDebugCylinder_Parms DrawDebugCylinder_Parms;
	memcpy ( &DrawDebugCylinder_Parms.Start, &Start, 0xC );
	memcpy ( &DrawDebugCylinder_Parms.End, &End, 0xC );
	DrawDebugCylinder_Parms.Radius = Radius;
	DrawDebugCylinder_Parms.Segments = Segments;
	DrawDebugCylinder_Parms.R = R;
	DrawDebugCylinder_Parms.G = G;
	DrawDebugCylinder_Parms.B = B;
	DrawDebugCylinder_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawDebugCylinder, &DrawDebugCylinder_Parms, NULL );
};

// Function NowGame.ClientViewModePlace.DrawMoDebugLine
// [0x00024002] 
// Parameters infos:
// struct FVector                 LineStart                      ( CPF_Parm )
// struct FVector                 LineEnd                        ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UClientViewModePlace::DrawMoDebugLine ( struct FVector LineStart, struct FVector LineEnd, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawMoDebugLine = NULL;

	if ( ! pFnDrawMoDebugLine )
		pFnDrawMoDebugLine = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePlace.DrawMoDebugLine" );

	UClientViewModePlace_execDrawMoDebugLine_Parms DrawMoDebugLine_Parms;
	memcpy ( &DrawMoDebugLine_Parms.LineStart, &LineStart, 0xC );
	memcpy ( &DrawMoDebugLine_Parms.LineEnd, &LineEnd, 0xC );
	DrawMoDebugLine_Parms.R = R;
	DrawMoDebugLine_Parms.G = G;
	DrawMoDebugLine_Parms.B = B;
	DrawMoDebugLine_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawMoDebugLine, &DrawMoDebugLine_Parms, NULL );
};

// Function NowGame.ClientViewModePlace.VerifyPoint
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm )

bool UClientViewModePlace::VerifyPoint ( struct FVector WhatPoint )
{
	static UFunction* pFnVerifyPoint = NULL;

	if ( ! pFnVerifyPoint )
		pFnVerifyPoint = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePlace.VerifyPoint" );

	UClientViewModePlace_execVerifyPoint_Parms VerifyPoint_Parms;
	memcpy ( &VerifyPoint_Parms.WhatPoint, &WhatPoint, 0xC );

	this->ProcessEvent ( pFnVerifyPoint, &VerifyPoint_Parms, NULL );

	return VerifyPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.GroundPoint
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm | CPF_OutParm )

bool UClientViewModePlace::GroundPoint ( struct FVector* WhatPoint )
{
	static UFunction* pFnGroundPoint = NULL;

	if ( ! pFnGroundPoint )
		pFnGroundPoint = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePlace.GroundPoint" );

	UClientViewModePlace_execGroundPoint_Parms GroundPoint_Parms;

	this->ProcessEvent ( pFnGroundPoint, &GroundPoint_Parms, NULL );

	if ( WhatPoint )
		memcpy ( WhatPoint, &GroundPoint_Parms.WhatPoint, 0xC );

	return GroundPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.ResetPreviewMaterials
// [0x00020002] 
// Parameters infos:

void UClientViewModePlace::ResetPreviewMaterials ( )
{
	static UFunction* pFnResetPreviewMaterials = NULL;

	if ( ! pFnResetPreviewMaterials )
		pFnResetPreviewMaterials = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePlace.ResetPreviewMaterials" );

	UClientViewModePlace_execResetPreviewMaterials_Parms ResetPreviewMaterials_Parms;

	this->ProcessEvent ( pFnResetPreviewMaterials, &ResetPreviewMaterials_Parms, NULL );
};

// Function NowGame.ClientViewModePlace.GetPlacePoint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UClientViewModePlace::GetPlacePoint ( )
{
	static UFunction* pFnGetPlacePoint = NULL;

	if ( ! pFnGetPlacePoint )
		pFnGetPlacePoint = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePlace.GetPlacePoint" );

	UClientViewModePlace_execGetPlacePoint_Parms GetPlacePoint_Parms;

	this->ProcessEvent ( pFnGetPlacePoint, &GetPlacePoint_Parms, NULL );

	return GetPlacePoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.CornerCheck
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm )

bool UClientViewModePlace::CornerCheck ( struct FVector WhatPoint )
{
	static UFunction* pFnCornerCheck = NULL;

	if ( ! pFnCornerCheck )
		pFnCornerCheck = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePlace.CornerCheck" );

	UClientViewModePlace_execCornerCheck_Parms CornerCheck_Parms;
	memcpy ( &CornerCheck_Parms.WhatPoint, &WhatPoint, 0xC );

	this->ProcessEvent ( pFnCornerCheck, &CornerCheck_Parms, NULL );

	return CornerCheck_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.CanPlaceAvatar
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModePlace::CanPlaceAvatar ( )
{
	static UFunction* pFnCanPlaceAvatar = NULL;

	if ( ! pFnCanPlaceAvatar )
		pFnCanPlaceAvatar = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePlace.CanPlaceAvatar" );

	UClientViewModePlace_execCanPlaceAvatar_Parms CanPlaceAvatar_Parms;

	this->ProcessEvent ( pFnCanPlaceAvatar, &CanPlaceAvatar_Parms, NULL );

	return CanPlaceAvatar_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModePlace::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePlace.Tick" );

	UClientViewModePlace_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModePlace.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModePlace::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePlace.AttachTo" );

	UClientViewModePlace_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModePlace.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModePlace::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePlace.PressedUse" );

	UClientViewModePlace_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePlace.InitPlaceMode
// [0x00020002] 
// Parameters infos:
// struct FString                 sContentInfo                   ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bPlaceInGuardZone              ( CPF_Parm )

void UClientViewModePlace::InitPlaceMode ( struct FString sContentInfo, unsigned long bPlaceInGuardZone )
{
	static UFunction* pFnInitPlaceMode = NULL;

	if ( ! pFnInitPlaceMode )
		pFnInitPlaceMode = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePlace.InitPlaceMode" );

	UClientViewModePlace_execInitPlaceMode_Parms InitPlaceMode_Parms;
	memcpy ( &InitPlaceMode_Parms.sContentInfo, &sContentInfo, 0xC );
	InitPlaceMode_Parms.bPlaceInGuardZone = bPlaceInGuardZone;

	this->ProcessEvent ( pFnInitPlaceMode, &InitPlaceMode_Parms, NULL );
};

// Function NowGame.NowVolumeWater.GetANowPawn
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* ANowVolumeWater::GetANowPawn ( )
{
	static UFunction* pFnGetANowPawn = NULL;

	if ( ! pFnGetANowPawn )
		pFnGetANowPawn = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.GetANowPawn" );

	ANowVolumeWater_execGetANowPawn_Parms GetANowPawn_Parms;

	this->ProcessEvent ( pFnGetANowPawn, &GetANowPawn_Parms, NULL );

	return GetANowPawn_Parms.ReturnValue;
};

// Function NowGame.NowVolumeWater.GetANowController
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowVolumeWater::GetANowController ( )
{
	static UFunction* pFnGetANowController = NULL;

	if ( ! pFnGetANowController )
		pFnGetANowController = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.GetANowController" );

	ANowVolumeWater_execGetANowController_Parms GetANowController_Parms;

	this->ProcessEvent ( pFnGetANowController, &GetANowController_Parms, NULL );

	return GetANowController_Parms.ReturnValue;
};

// Function NowGame.NowVolumeWater.Splash
// [0x00820102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumeWater::Splash ( class AActor* Other )
{
	static UFunction* pFnSplash = NULL;

	if ( ! pFnSplash )
		pFnSplash = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.Splash" );

	ANowVolumeWater_execSplash_Parms Splash_Parms;
	Splash_Parms.Other = Other;

	this->ProcessEvent ( pFnSplash, &Splash_Parms, NULL );
};

// Function NowGame.NowVolumeWater.PlayExitSplash
// [0x00020002] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumeWater::PlayExitSplash ( class AActor* Other )
{
	static UFunction* pFnPlayExitSplash = NULL;

	if ( ! pFnPlayExitSplash )
		pFnPlayExitSplash = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.PlayExitSplash" );

	ANowVolumeWater_execPlayExitSplash_Parms PlayExitSplash_Parms;
	PlayExitSplash_Parms.Other = Other;

	this->ProcessEvent ( pFnPlayExitSplash, &PlayExitSplash_Parms, NULL );
};

// Function NowGame.NowVolumeWater.PlayEntrySplash
// [0x00020002] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumeWater::PlayEntrySplash ( class AActor* Other )
{
	static UFunction* pFnPlayEntrySplash = NULL;

	if ( ! pFnPlayEntrySplash )
		pFnPlayEntrySplash = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.PlayEntrySplash" );

	ANowVolumeWater_execPlayEntrySplash_Parms PlayEntrySplash_Parms;
	PlayEntrySplash_Parms.Other = Other;

	this->ProcessEvent ( pFnPlayEntrySplash, &PlayEntrySplash_Parms, NULL );
};

// Function NowGame.NowVolumeWater.PawnLeavingVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ANowVolumeWater::eventPawnLeavingVolume ( class APawn* Other )
{
	static UFunction* pFnPawnLeavingVolume = NULL;

	if ( ! pFnPawnLeavingVolume )
		pFnPawnLeavingVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.PawnLeavingVolume" );

	ANowVolumeWater_eventPawnLeavingVolume_Parms PawnLeavingVolume_Parms;
	PawnLeavingVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnLeavingVolume, &PawnLeavingVolume_Parms, NULL );
};

// Function NowGame.NowVolumeWater.PawnEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ANowVolumeWater::eventPawnEnteredVolume ( class APawn* Other )
{
	static UFunction* pFnPawnEnteredVolume = NULL;

	if ( ! pFnPawnEnteredVolume )
		pFnPawnEnteredVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.PawnEnteredVolume" );

	ANowVolumeWater_eventPawnEnteredVolume_Parms PawnEnteredVolume_Parms;
	PawnEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnEnteredVolume, &PawnEnteredVolume_Parms, NULL );
};

// Function NowGame.NowVolumeWater.ActorLeavingVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumeWater::eventActorLeavingVolume ( class AActor* Other )
{
	static UFunction* pFnActorLeavingVolume = NULL;

	if ( ! pFnActorLeavingVolume )
		pFnActorLeavingVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.ActorLeavingVolume" );

	ANowVolumeWater_eventActorLeavingVolume_Parms ActorLeavingVolume_Parms;
	ActorLeavingVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorLeavingVolume, &ActorLeavingVolume_Parms, NULL );
};

// Function NowGame.NowVolumeWater.CheckSwimmers
// [0x00020002] 
// Parameters infos:

void ANowVolumeWater::CheckSwimmers ( )
{
	static UFunction* pFnCheckSwimmers = NULL;

	if ( ! pFnCheckSwimmers )
		pFnCheckSwimmers = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.CheckSwimmers" );

	ANowVolumeWater_execCheckSwimmers_Parms CheckSwimmers_Parms;

	this->ProcessEvent ( pFnCheckSwimmers, &CheckSwimmers_Parms, NULL );
};

// Function NowGame.NowVolumeWater.ClientDrowning
// [0x00020002] 
// Parameters infos:

void ANowVolumeWater::ClientDrowning ( )
{
	static UFunction* pFnClientDrowning = NULL;

	if ( ! pFnClientDrowning )
		pFnClientDrowning = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.ClientDrowning" );

	ANowVolumeWater_execClientDrowning_Parms ClientDrowning_Parms;

	this->ProcessEvent ( pFnClientDrowning, &ClientDrowning_Parms, NULL );
};

// Function NowGame.NowVolumeWater.SurfaceCheckClient
// [0x00020002] 
// Parameters infos:

void ANowVolumeWater::SurfaceCheckClient ( )
{
	static UFunction* pFnSurfaceCheckClient = NULL;

	if ( ! pFnSurfaceCheckClient )
		pFnSurfaceCheckClient = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.SurfaceCheckClient" );

	ANowVolumeWater_execSurfaceCheckClient_Parms SurfaceCheckClient_Parms;

	this->ProcessEvent ( pFnSurfaceCheckClient, &SurfaceCheckClient_Parms, NULL );
};

// Function NowGame.NowVolumeWater.CanSink
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANowPawn*                P                              ( CPF_Parm )

bool ANowVolumeWater::CanSink ( class ANowPawn* P )
{
	static UFunction* pFnCanSink = NULL;

	if ( ! pFnCanSink )
		pFnCanSink = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.CanSink" );

	ANowVolumeWater_execCanSink_Parms CanSink_Parms;
	CanSink_Parms.P = P;

	this->ProcessEvent ( pFnCanSink, &CanSink_Parms, NULL );

	return CanSink_Parms.ReturnValue;
};

// Function NowGame.NowVolumeWater.ActorEnteredVolume
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumeWater::eventActorEnteredVolume ( class AActor* Other )
{
	static UFunction* pFnActorEnteredVolume = NULL;

	if ( ! pFnActorEnteredVolume )
		pFnActorEnteredVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.ActorEnteredVolume" );

	ANowVolumeWater_eventActorEnteredVolume_Parms ActorEnteredVolume_Parms;
	ActorEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorEnteredVolume, &ActorEnteredVolume_Parms, NULL );
};

// Function NowGame.NowVolumeWater.MountDrowned
// [0x00020000] 
// Parameters infos:

void ANowVolumeWater::MountDrowned ( )
{
	static UFunction* pFnMountDrowned = NULL;

	if ( ! pFnMountDrowned )
		pFnMountDrowned = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.MountDrowned" );

	ANowVolumeWater_execMountDrowned_Parms MountDrowned_Parms;

	this->ProcessEvent ( pFnMountDrowned, &MountDrowned_Parms, NULL );
};

// Function NowGame.NowVolumeWater.CheckMountSwimming
// [0x00020002] 
// Parameters infos:

void ANowVolumeWater::CheckMountSwimming ( )
{
	static UFunction* pFnCheckMountSwimming = NULL;

	if ( ! pFnCheckMountSwimming )
		pFnCheckMountSwimming = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.CheckMountSwimming" );

	ANowVolumeWater_execCheckMountSwimming_Parms CheckMountSwimming_Parms;

	this->ProcessEvent ( pFnCheckMountSwimming, &CheckMountSwimming_Parms, NULL );
};

// Function NowGame.NowVolumeWater.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowVolumeWater::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeWater.Touch" );

	ANowVolumeWater_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.Remove
// [0x00020002] 
// Parameters infos:

void UClientViewModePylonBuild::Remove ( )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.Remove" );

	UClientViewModePylonBuild_execRemove_Parms Remove_Parms;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.DrawDebugCylinder
// [0x00024002] 
// Parameters infos:
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 End                            ( CPF_Parm )
// float                          Radius                         ( CPF_Parm )
// int                            Segments                       ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UClientViewModePylonBuild::DrawDebugCylinder ( struct FVector Start, struct FVector End, float Radius, int Segments, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawDebugCylinder = NULL;

	if ( ! pFnDrawDebugCylinder )
		pFnDrawDebugCylinder = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.DrawDebugCylinder" );

	UClientViewModePylonBuild_execDrawDebugCylinder_Parms DrawDebugCylinder_Parms;
	memcpy ( &DrawDebugCylinder_Parms.Start, &Start, 0xC );
	memcpy ( &DrawDebugCylinder_Parms.End, &End, 0xC );
	DrawDebugCylinder_Parms.Radius = Radius;
	DrawDebugCylinder_Parms.Segments = Segments;
	DrawDebugCylinder_Parms.R = R;
	DrawDebugCylinder_Parms.G = G;
	DrawDebugCylinder_Parms.B = B;
	DrawDebugCylinder_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawDebugCylinder, &DrawDebugCylinder_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.DrawMoDebugLine
// [0x00024002] 
// Parameters infos:
// struct FVector                 LineStart                      ( CPF_Parm )
// struct FVector                 LineEnd                        ( CPF_Parm )
// unsigned char                  R                              ( CPF_Parm )
// unsigned char                  G                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )
// unsigned long                  bPersistentLines               ( CPF_OptionalParm | CPF_Parm )

void UClientViewModePylonBuild::DrawMoDebugLine ( struct FVector LineStart, struct FVector LineEnd, unsigned char R, unsigned char G, unsigned char B, unsigned long bPersistentLines )
{
	static UFunction* pFnDrawMoDebugLine = NULL;

	if ( ! pFnDrawMoDebugLine )
		pFnDrawMoDebugLine = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.DrawMoDebugLine" );

	UClientViewModePylonBuild_execDrawMoDebugLine_Parms DrawMoDebugLine_Parms;
	memcpy ( &DrawMoDebugLine_Parms.LineStart, &LineStart, 0xC );
	memcpy ( &DrawMoDebugLine_Parms.LineEnd, &LineEnd, 0xC );
	DrawMoDebugLine_Parms.R = R;
	DrawMoDebugLine_Parms.G = G;
	DrawMoDebugLine_Parms.B = B;
	DrawMoDebugLine_Parms.bPersistentLines = bPersistentLines;

	this->ProcessEvent ( pFnDrawMoDebugLine, &DrawMoDebugLine_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.VerifyPoint
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm )

bool UClientViewModePylonBuild::VerifyPoint ( struct FVector WhatPoint )
{
	static UFunction* pFnVerifyPoint = NULL;

	if ( ! pFnVerifyPoint )
		pFnVerifyPoint = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.VerifyPoint" );

	UClientViewModePylonBuild_execVerifyPoint_Parms VerifyPoint_Parms;
	memcpy ( &VerifyPoint_Parms.WhatPoint, &WhatPoint, 0xC );

	this->ProcessEvent ( pFnVerifyPoint, &VerifyPoint_Parms, NULL );

	return VerifyPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonBuild.GroundPoint
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm | CPF_OutParm )

bool UClientViewModePylonBuild::GroundPoint ( struct FVector* WhatPoint )
{
	static UFunction* pFnGroundPoint = NULL;

	if ( ! pFnGroundPoint )
		pFnGroundPoint = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.GroundPoint" );

	UClientViewModePylonBuild_execGroundPoint_Parms GroundPoint_Parms;

	this->ProcessEvent ( pFnGroundPoint, &GroundPoint_Parms, NULL );

	if ( WhatPoint )
		memcpy ( WhatPoint, &GroundPoint_Parms.WhatPoint, 0xC );

	return GroundPoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonBuild.ResetPreviewMaterials
// [0x00020002] 
// Parameters infos:

void UClientViewModePylonBuild::ResetPreviewMaterials ( )
{
	static UFunction* pFnResetPreviewMaterials = NULL;

	if ( ! pFnResetPreviewMaterials )
		pFnResetPreviewMaterials = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.ResetPreviewMaterials" );

	UClientViewModePylonBuild_execResetPreviewMaterials_Parms ResetPreviewMaterials_Parms;

	this->ProcessEvent ( pFnResetPreviewMaterials, &ResetPreviewMaterials_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.GetPlacePoint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UClientViewModePylonBuild::GetPlacePoint ( )
{
	static UFunction* pFnGetPlacePoint = NULL;

	if ( ! pFnGetPlacePoint )
		pFnGetPlacePoint = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.GetPlacePoint" );

	UClientViewModePylonBuild_execGetPlacePoint_Parms GetPlacePoint_Parms;

	this->ProcessEvent ( pFnGetPlacePoint, &GetPlacePoint_Parms, NULL );

	return GetPlacePoint_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonBuild.CornerCheck
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 WhatPoint                      ( CPF_Parm )

bool UClientViewModePylonBuild::CornerCheck ( struct FVector WhatPoint )
{
	static UFunction* pFnCornerCheck = NULL;

	if ( ! pFnCornerCheck )
		pFnCornerCheck = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.CornerCheck" );

	UClientViewModePylonBuild_execCornerCheck_Parms CornerCheck_Parms;
	memcpy ( &CornerCheck_Parms.WhatPoint, &WhatPoint, 0xC );

	this->ProcessEvent ( pFnCornerCheck, &CornerCheck_Parms, NULL );

	return CornerCheck_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonBuild.UpdatePylonHelpers
// [0x00820002] 
// Parameters infos:

void UClientViewModePylonBuild::UpdatePylonHelpers ( )
{
	static UFunction* pFnUpdatePylonHelpers = NULL;

	if ( ! pFnUpdatePylonHelpers )
		pFnUpdatePylonHelpers = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.UpdatePylonHelpers" );

	UClientViewModePylonBuild_execUpdatePylonHelpers_Parms UpdatePylonHelpers_Parms;

	this->ProcessEvent ( pFnUpdatePylonHelpers, &UpdatePylonHelpers_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.CanPlacePylon
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModePylonBuild::CanPlacePylon ( )
{
	static UFunction* pFnCanPlacePylon = NULL;

	if ( ! pFnCanPlacePylon )
		pFnCanPlacePylon = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.CanPlacePylon" );

	UClientViewModePylonBuild_execCanPlacePylon_Parms CanPlacePylon_Parms;

	this->ProcessEvent ( pFnCanPlacePylon, &CanPlacePylon_Parms, NULL );

	return CanPlacePylon_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonBuild.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModePylonBuild::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.Tick" );

	UClientViewModePylonBuild_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.ShowLinkMeshes
// [0x00020000] 
// Parameters infos:

void UClientViewModePylonBuild::ShowLinkMeshes ( )
{
	static UFunction* pFnShowLinkMeshes = NULL;

	if ( ! pFnShowLinkMeshes )
		pFnShowLinkMeshes = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.ShowLinkMeshes" );

	UClientViewModePylonBuild_execShowLinkMeshes_Parms ShowLinkMeshes_Parms;

	this->ProcessEvent ( pFnShowLinkMeshes, &ShowLinkMeshes_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.InitPylonInfo
// [0x00020002] 
// Parameters infos:

void UClientViewModePylonBuild::InitPylonInfo ( )
{
	static UFunction* pFnInitPylonInfo = NULL;

	if ( ! pFnInitPylonInfo )
		pFnInitPylonInfo = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.InitPylonInfo" );

	UClientViewModePylonBuild_execInitPylonInfo_Parms InitPylonInfo_Parms;

	this->ProcessEvent ( pFnInitPylonInfo, &InitPylonInfo_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModePylonBuild::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.AttachTo" );

	UClientViewModePylonBuild_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModePylonBuild.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModePylonBuild::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonBuild.PressedUse" );

	UClientViewModePylonBuild_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonUpgrade.Remove
// [0x00020002] 
// Parameters infos:

void UClientViewModePylonUpgrade::Remove ( )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonUpgrade.Remove" );

	UClientViewModePylonUpgrade_execRemove_Parms Remove_Parms;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function NowGame.ClientViewModePylonUpgrade.GetSlot
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UClientViewModePylonUpgrade::GetSlot ( )
{
	static UFunction* pFnGetSlot = NULL;

	if ( ! pFnGetSlot )
		pFnGetSlot = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonUpgrade.GetSlot" );

	UClientViewModePylonUpgrade_execGetSlot_Parms GetSlot_Parms;

	this->ProcessEvent ( pFnGetSlot, &GetSlot_Parms, NULL );

	return GetSlot_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonUpgrade.UpdateSelected
// [0x00020002] 
// Parameters infos:

void UClientViewModePylonUpgrade::UpdateSelected ( )
{
	static UFunction* pFnUpdateSelected = NULL;

	if ( ! pFnUpdateSelected )
		pFnUpdateSelected = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonUpgrade.UpdateSelected" );

	UClientViewModePylonUpgrade_execUpdateSelected_Parms UpdateSelected_Parms;

	this->ProcessEvent ( pFnUpdateSelected, &UpdateSelected_Parms, NULL );
};

// Function NowGame.ClientViewModePylonUpgrade.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UClientViewModePylonUpgrade::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonUpgrade.Tick" );

	UClientViewModePylonUpgrade_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.ClientViewModePylonUpgrade.CreatePreviewMesh
// [0x00820002] 
// Parameters infos:

void UClientViewModePylonUpgrade::CreatePreviewMesh ( )
{
	static UFunction* pFnCreatePreviewMesh = NULL;

	if ( ! pFnCreatePreviewMesh )
		pFnCreatePreviewMesh = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonUpgrade.CreatePreviewMesh" );

	UClientViewModePylonUpgrade_execCreatePreviewMesh_Parms CreatePreviewMesh_Parms;

	this->ProcessEvent ( pFnCreatePreviewMesh, &CreatePreviewMesh_Parms, NULL );
};

// Function NowGame.ClientViewModePylonUpgrade.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UClientViewModePylonUpgrade::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonUpgrade.AttachTo" );

	UClientViewModePylonUpgrade_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.ClientViewModePylonUpgrade.GetPylonActor
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPylon*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPylon* UClientViewModePylonUpgrade::GetPylonActor ( )
{
	static UFunction* pFnGetPylonActor = NULL;

	if ( ! pFnGetPylonActor )
		pFnGetPylonActor = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonUpgrade.GetPylonActor" );

	UClientViewModePylonUpgrade_execGetPylonActor_Parms GetPylonActor_Parms;

	this->ProcessEvent ( pFnGetPylonActor, &GetPylonActor_Parms, NULL );

	return GetPylonActor_Parms.ReturnValue;
};

// Function NowGame.ClientViewModePylonUpgrade.PressedUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UClientViewModePylonUpgrade::PressedUse ( )
{
	static UFunction* pFnPressedUse = NULL;

	if ( ! pFnPressedUse )
		pFnPressedUse = UObject::FindObject< UFunction > ( "Function NowGame.ClientViewModePylonUpgrade.PressedUse" );

	UClientViewModePylonUpgrade_execPressedUse_Parms PressedUse_Parms;

	this->ProcessEvent ( pFnPressedUse, &PressedUse_Parms, NULL );

	return PressedUse_Parms.ReturnValue;
};

// Function NowGame.CombatSystemRangedNew.TickAim
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemRangedNew::TickAim ( float DeltaTime )
{
	static UFunction* pFnTickAim = NULL;

	if ( ! pFnTickAim )
		pFnTickAim = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.TickAim" );

	UCombatSystemRangedNew_execTickAim_Parms TickAim_Parms;
	TickAim_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickAim, &TickAim_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.ResetShakeBlend
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::ResetShakeBlend ( )
{
	static UFunction* pFnResetShakeBlend = NULL;

	if ( ! pFnResetShakeBlend )
		pFnResetShakeBlend = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.ResetShakeBlend" );

	UCombatSystemRangedNew_execResetShakeBlend_Parms ResetShakeBlend_Parms;

	this->ProcessEvent ( pFnResetShakeBlend, &ResetShakeBlend_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.UpdateShakeBlend
// [0x00020002] 
// Parameters infos:
// float                          addValue                       ( CPF_Parm )

void UCombatSystemRangedNew::UpdateShakeBlend ( float addValue )
{
	static UFunction* pFnUpdateShakeBlend = NULL;

	if ( ! pFnUpdateShakeBlend )
		pFnUpdateShakeBlend = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.UpdateShakeBlend" );

	UCombatSystemRangedNew_execUpdateShakeBlend_Parms UpdateShakeBlend_Parms;
	UpdateShakeBlend_Parms.addValue = addValue;

	this->ProcessEvent ( pFnUpdateShakeBlend, &UpdateShakeBlend_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.setProjectileVars
// [0x00C20002] 
// Parameters infos:
// int                            shotSpeed                      ( CPF_Parm | CPF_OutParm )
// struct FVector                 shotDir                        ( CPF_Parm | CPF_OutParm )

void UCombatSystemRangedNew::setProjectileVars ( int* shotSpeed, struct FVector* shotDir )
{
	static UFunction* pFnsetProjectileVars = NULL;

	if ( ! pFnsetProjectileVars )
		pFnsetProjectileVars = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.setProjectileVars" );

	UCombatSystemRangedNew_execsetProjectileVars_Parms setProjectileVars_Parms;

	this->ProcessEvent ( pFnsetProjectileVars, &setProjectileVars_Parms, NULL );

	if ( shotSpeed )
		*shotSpeed = setProjectileVars_Parms.shotSpeed;

	if ( shotDir )
		memcpy ( shotDir, &setProjectileVars_Parms.shotDir, 0xC );
};

// Function NowGame.CombatSystemRangedNew.resetEverything
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::resetEverything ( )
{
	static UFunction* pFnresetEverything = NULL;

	if ( ! pFnresetEverything )
		pFnresetEverything = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.resetEverything" );

	UCombatSystemRangedNew_execresetEverything_Parms resetEverything_Parms;

	this->ProcessEvent ( pFnresetEverything, &resetEverything_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.TickAndCalcNewVelocity
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::TickAndCalcNewVelocity ( )
{
	static UFunction* pFnTickAndCalcNewVelocity = NULL;

	if ( ! pFnTickAndCalcNewVelocity )
		pFnTickAndCalcNewVelocity = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.TickAndCalcNewVelocity" );

	UCombatSystemRangedNew_execTickAndCalcNewVelocity_Parms TickAndCalcNewVelocity_Parms;

	this->ProcessEvent ( pFnTickAndCalcNewVelocity, &TickAndCalcNewVelocity_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.StopAltFire
// [0x00024002] 
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemRangedNew::StopAltFire ( unsigned long bForce )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.StopAltFire" );

	UCombatSystemRangedNew_execStopAltFire_Parms StopAltFire_Parms;
	StopAltFire_Parms.bForce = bForce;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.StartAltFire
// [0x00020000] 
// Parameters infos:

void UCombatSystemRangedNew::StartAltFire ( )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.StartAltFire" );

	UCombatSystemRangedNew_execStartAltFire_Parms StartAltFire_Parms;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.CancelCharge
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::CancelCharge ( )
{
	static UFunction* pFnCancelCharge = NULL;

	if ( ! pFnCancelCharge )
		pFnCancelCharge = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.CancelCharge" );

	UCombatSystemRangedNew_execCancelCharge_Parms CancelCharge_Parms;

	this->ProcessEvent ( pFnCancelCharge, &CancelCharge_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.modifyMaxRangeFromChargeTime
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UCombatSystemRangedNew::modifyMaxRangeFromChargeTime ( )
{
	static UFunction* pFnmodifyMaxRangeFromChargeTime = NULL;

	if ( ! pFnmodifyMaxRangeFromChargeTime )
		pFnmodifyMaxRangeFromChargeTime = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.modifyMaxRangeFromChargeTime" );

	UCombatSystemRangedNew_execmodifyMaxRangeFromChargeTime_Parms modifyMaxRangeFromChargeTime_Parms;

	this->ProcessEvent ( pFnmodifyMaxRangeFromChargeTime, &modifyMaxRangeFromChargeTime_Parms, NULL );

	return modifyMaxRangeFromChargeTime_Parms.ReturnValue;
};

// Function NowGame.CombatSystemRangedNew.getPercentOfStrengthReq
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UCombatSystemRangedNew::getPercentOfStrengthReq ( )
{
	static UFunction* pFngetPercentOfStrengthReq = NULL;

	if ( ! pFngetPercentOfStrengthReq )
		pFngetPercentOfStrengthReq = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.getPercentOfStrengthReq" );

	UCombatSystemRangedNew_execgetPercentOfStrengthReq_Parms getPercentOfStrengthReq_Parms;

	this->ProcessEvent ( pFngetPercentOfStrengthReq, &getPercentOfStrengthReq_Parms, NULL );

	return getPercentOfStrengthReq_Parms.ReturnValue;
};

// Function NowGame.CombatSystemRangedNew.getStrength
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UCombatSystemRangedNew::getStrength ( )
{
	static UFunction* pFngetStrength = NULL;

	if ( ! pFngetStrength )
		pFngetStrength = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.getStrength" );

	UCombatSystemRangedNew_execgetStrength_Parms getStrength_Parms;

	this->ProcessEvent ( pFngetStrength, &getStrength_Parms, NULL );

	return getStrength_Parms.ReturnValue;
};

// Function NowGame.CombatSystemRangedNew.registerProjectileHit
// [0x00020002] 
// Parameters infos:
// class AActor*                  pHitActorTmp                   ( CPF_Parm )
// struct FTraceHitInfo           hitInfoTmp                     ( CPF_Parm )
// struct FVector                 StartTrace                     ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// struct FVector                 HitLocTmp                      ( CPF_Parm )

void UCombatSystemRangedNew::registerProjectileHit ( class AActor* pHitActorTmp, struct FTraceHitInfo hitInfoTmp, struct FVector StartTrace, struct FVector EndTrace, struct FVector HitLocTmp )
{
	static UFunction* pFnregisterProjectileHit = NULL;

	if ( ! pFnregisterProjectileHit )
		pFnregisterProjectileHit = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.registerProjectileHit" );

	UCombatSystemRangedNew_execregisterProjectileHit_Parms registerProjectileHit_Parms;
	registerProjectileHit_Parms.pHitActorTmp = pHitActorTmp;
	memcpy ( &registerProjectileHit_Parms.hitInfoTmp, &hitInfoTmp, 0x1C );
	memcpy ( &registerProjectileHit_Parms.StartTrace, &StartTrace, 0xC );
	memcpy ( &registerProjectileHit_Parms.EndTrace, &EndTrace, 0xC );
	memcpy ( &registerProjectileHit_Parms.HitLocTmp, &HitLocTmp, 0xC );

	this->ProcessEvent ( pFnregisterProjectileHit, &registerProjectileHit_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.PhatTrace
// [0x00820002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USkeletalMeshComponent*  SkelMeshComp                   ( CPF_Parm | CPF_EditInline )
// struct FVector                 vStartTrace                    ( CPF_Parm )
// struct FVector                 vEndTrace                      ( CPF_Parm )

struct FName UCombatSystemRangedNew::PhatTrace ( class USkeletalMeshComponent* SkelMeshComp, struct FVector vStartTrace, struct FVector vEndTrace )
{
	static UFunction* pFnPhatTrace = NULL;

	if ( ! pFnPhatTrace )
		pFnPhatTrace = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.PhatTrace" );

	UCombatSystemRangedNew_execPhatTrace_Parms PhatTrace_Parms;
	PhatTrace_Parms.SkelMeshComp = SkelMeshComp;
	memcpy ( &PhatTrace_Parms.vStartTrace, &vStartTrace, 0xC );
	memcpy ( &PhatTrace_Parms.vEndTrace, &vEndTrace, 0xC );

	this->ProcessEvent ( pFnPhatTrace, &PhatTrace_Parms, NULL );

	return PhatTrace_Parms.ReturnValue;
};

// Function NowGame.CombatSystemRangedNew.registerProjectileLanded
// [0x00020000] 
// Parameters infos:
// struct FVector                 HitLocTmp                      ( CPF_Parm )

void UCombatSystemRangedNew::registerProjectileLanded ( struct FVector HitLocTmp )
{
	static UFunction* pFnregisterProjectileLanded = NULL;

	if ( ! pFnregisterProjectileLanded )
		pFnregisterProjectileLanded = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.registerProjectileLanded" );

	UCombatSystemRangedNew_execregisterProjectileLanded_Parms registerProjectileLanded_Parms;
	memcpy ( &registerProjectileLanded_Parms.HitLocTmp, &HitLocTmp, 0xC );

	this->ProcessEvent ( pFnregisterProjectileLanded, &registerProjectileLanded_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.StopFire
// [0x00824002] 
// Parameters infos:
// unsigned long                  TargetSelf                     ( CPF_OptionalParm | CPF_Parm )

void UCombatSystemRangedNew::StopFire ( unsigned long TargetSelf )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.StopFire" );

	UCombatSystemRangedNew_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.TargetSelf = TargetSelf;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.ChargeReady
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::ChargeReady ( )
{
	static UFunction* pFnChargeReady = NULL;

	if ( ! pFnChargeReady )
		pFnChargeReady = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.ChargeReady" );

	UCombatSystemRangedNew_execChargeReady_Parms ChargeReady_Parms;

	this->ProcessEvent ( pFnChargeReady, &ChargeReady_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.setChargeTimesinHUD
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::setChargeTimesinHUD ( )
{
	static UFunction* pFnsetChargeTimesinHUD = NULL;

	if ( ! pFnsetChargeTimesinHUD )
		pFnsetChargeTimesinHUD = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.setChargeTimesinHUD" );

	UCombatSystemRangedNew_execsetChargeTimesinHUD_Parms setChargeTimesinHUD_Parms;

	this->ProcessEvent ( pFnsetChargeTimesinHUD, &setChargeTimesinHUD_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.StartFire
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.StartFire" );

	UCombatSystemRangedNew_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.GetShakeBlendNodes
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::GetShakeBlendNodes ( )
{
	static UFunction* pFnGetShakeBlendNodes = NULL;

	if ( ! pFnGetShakeBlendNodes )
		pFnGetShakeBlendNodes = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.GetShakeBlendNodes" );

	UCombatSystemRangedNew_execGetShakeBlendNodes_Parms GetShakeBlendNodes_Parms;

	this->ProcessEvent ( pFnGetShakeBlendNodes, &GetShakeBlendNodes_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.TickStaminaDrain
// [0x00020002] 
// Parameters infos:

void UCombatSystemRangedNew::TickStaminaDrain ( )
{
	static UFunction* pFnTickStaminaDrain = NULL;

	if ( ! pFnTickStaminaDrain )
		pFnTickStaminaDrain = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.TickStaminaDrain" );

	UCombatSystemRangedNew_execTickStaminaDrain_Parms TickStaminaDrain_Parms;

	this->ProcessEvent ( pFnTickStaminaDrain, &TickStaminaDrain_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.AttachTo
// [0x00020002] 
// Parameters infos:
// class AController*             aController                    ( CPF_Parm )

void UCombatSystemRangedNew::AttachTo ( class AController* aController )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.AttachTo" );

	UCombatSystemRangedNew_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.aController = aController;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.UpdateWeaponStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   MyPawn                         ( CPF_Parm )

void UCombatSystemRangedNew::eventUpdateWeaponStats ( class APawn* MyPawn )
{
	static UFunction* pFnUpdateWeaponStats = NULL;

	if ( ! pFnUpdateWeaponStats )
		pFnUpdateWeaponStats = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.UpdateWeaponStats" );

	UCombatSystemRangedNew_eventUpdateWeaponStats_Parms UpdateWeaponStats_Parms;
	UpdateWeaponStats_Parms.MyPawn = MyPawn;

	this->ProcessEvent ( pFnUpdateWeaponStats, &UpdateWeaponStats_Parms, NULL );
};

// Function NowGame.CombatSystemRangedNew.TickCombat
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UCombatSystemRangedNew::TickCombat ( float DeltaTime )
{
	static UFunction* pFnTickCombat = NULL;

	if ( ! pFnTickCombat )
		pFnTickCombat = UObject::FindObject< UFunction > ( "Function NowGame.CombatSystemRangedNew.TickCombat" );

	UCombatSystemRangedNew_execTickCombat_Parms TickCombat_Parms;
	TickCombat_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickCombat, &TickCombat_Parms, NULL );
};

// Function NowGame.NowGFXSceneLoading.startHints
// [0x00020002] 
// Parameters infos:

void UNowGFXSceneLoading::startHints ( )
{
	static UFunction* pFnstartHints = NULL;

	if ( ! pFnstartHints )
		pFnstartHints = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneLoading.startHints" );

	UNowGFXSceneLoading_execstartHints_Parms startHints_Parms;

	this->ProcessEvent ( pFnstartHints, &startHints_Parms, NULL );
};

// Function NowGame.NowGFXSceneLoading.setProgress
// [0x00020002] 
// Parameters infos:
// int                            Percent                        ( CPF_Parm )
// unsigned long                  skipTween                      ( CPF_Parm )

void UNowGFXSceneLoading::setProgress ( int Percent, unsigned long skipTween )
{
	static UFunction* pFnsetProgress = NULL;

	if ( ! pFnsetProgress )
		pFnsetProgress = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneLoading.setProgress" );

	UNowGFXSceneLoading_execsetProgress_Parms setProgress_Parms;
	setProgress_Parms.Percent = Percent;
	setProgress_Parms.skipTween = skipTween;

	this->ProcessEvent ( pFnsetProgress, &setProgress_Parms, NULL );
};

// Function NowGame.NowGFXSceneLoading.addHint
// [0x00020002] 
// Parameters infos:
// struct FString                 hint                           ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXSceneLoading::addHint ( struct FString hint )
{
	static UFunction* pFnaddHint = NULL;

	if ( ! pFnaddHint )
		pFnaddHint = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneLoading.addHint" );

	UNowGFXSceneLoading_execaddHint_Parms addHint_Parms;
	memcpy ( &addHint_Parms.hint, &hint, 0xC );

	this->ProcessEvent ( pFnaddHint, &addHint_Parms, NULL );
};

// Function NowGame.NowGFXSceneLoading.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXSceneLoading::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXSceneLoading.Init" );

	UNowGFXSceneLoading_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.MortalActorInitializer.Tick
// [0x00020002] 
// Parameters infos:

void UMortalActorInitializer::Tick ( )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.MortalActorInitializer.Tick" );

	UMortalActorInitializer_execTick_Parms Tick_Parms;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.MortalActorInitializer.MoveToGround
// [0x00820002] 
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )

void UMortalActorInitializer::MoveToGround ( class AActor* A )
{
	static UFunction* pFnMoveToGround = NULL;

	if ( ! pFnMoveToGround )
		pFnMoveToGround = UObject::FindObject< UFunction > ( "Function NowGame.MortalActorInitializer.MoveToGround" );

	UMortalActorInitializer_execMoveToGround_Parms MoveToGround_Parms;
	MoveToGround_Parms.A = A;

	this->ProcessEvent ( pFnMoveToGround, &MoveToGround_Parms, NULL );
};

// Function NowGame.MortalActorInitializer.RemoveActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )

void UMortalActorInitializer::RemoveActor ( class AActor* A )
{
	static UFunction* pFnRemoveActor = NULL;

	if ( ! pFnRemoveActor )
		pFnRemoveActor = UObject::FindObject< UFunction > ( "Function NowGame.MortalActorInitializer.RemoveActor" );

	UMortalActorInitializer_execRemoveActor_Parms RemoveActor_Parms;
	RemoveActor_Parms.A = A;

	this->ProcessEvent ( pFnRemoveActor, &RemoveActor_Parms, NULL );
};

// Function NowGame.MortalActorInitializer.AddActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )

void UMortalActorInitializer::AddActor ( class AActor* A )
{
	static UFunction* pFnAddActor = NULL;

	if ( ! pFnAddActor )
		pFnAddActor = UObject::FindObject< UFunction > ( "Function NowGame.MortalActorInitializer.AddActor" );

	UMortalActorInitializer_execAddActor_Parms AddActor_Parms;
	AddActor_Parms.A = A;

	this->ProcessEvent ( pFnAddActor, &AddActor_Parms, NULL );
};

// Function NowGame.NowAiEffect.SetTargetActor
// [0x00020000] 
// Parameters infos:
// class AActor*                  NewActor                       ( CPF_Parm )

void ANowAiEffect::SetTargetActor ( class AActor* NewActor )
{
	static UFunction* pFnSetTargetActor = NULL;

	if ( ! pFnSetTargetActor )
		pFnSetTargetActor = UObject::FindObject< UFunction > ( "Function NowGame.NowAiEffect.SetTargetActor" );

	ANowAiEffect_execSetTargetActor_Parms SetTargetActor_Parms;
	SetTargetActor_Parms.NewActor = NewActor;

	this->ProcessEvent ( pFnSetTargetActor, &SetTargetActor_Parms, NULL );
};

// Function NowGame.NowAiEffect.SetTargetVect
// [0x00020000] 
// Parameters infos:
// struct FVector                 NewVector                      ( CPF_Parm )

void ANowAiEffect::SetTargetVect ( struct FVector NewVector )
{
	static UFunction* pFnSetTargetVect = NULL;

	if ( ! pFnSetTargetVect )
		pFnSetTargetVect = UObject::FindObject< UFunction > ( "Function NowGame.NowAiEffect.SetTargetVect" );

	ANowAiEffect_execSetTargetVect_Parms SetTargetVect_Parms;
	memcpy ( &SetTargetVect_Parms.NewVector, &NewVector, 0xC );

	this->ProcessEvent ( pFnSetTargetVect, &SetTargetVect_Parms, NULL );
};

// Function NowGame.NowAiEffect.InitEffectProjectile
// [0x00024000] 
// Parameters infos:
// unsigned long                  bDuped                         ( CPF_OptionalParm | CPF_Parm )

void ANowAiEffect::InitEffectProjectile ( unsigned long bDuped )
{
	static UFunction* pFnInitEffectProjectile = NULL;

	if ( ! pFnInitEffectProjectile )
		pFnInitEffectProjectile = UObject::FindObject< UFunction > ( "Function NowGame.NowAiEffect.InitEffectProjectile" );

	ANowAiEffect_execInitEffectProjectile_Parms InitEffectProjectile_Parms;
	InitEffectProjectile_Parms.bDuped = bDuped;

	this->ProcessEvent ( pFnInitEffectProjectile, &InitEffectProjectile_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectileEffect::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileEffect.Tick" );

	ANowProjectileEffect_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.Destroyed
// [0x00020102] 
// Parameters infos:

void ANowProjectileEffect::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileEffect.Destroyed" );

	ANowProjectileEffect_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.SetTargetActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  NewActor                       ( CPF_Parm )

void ANowProjectileEffect::SetTargetActor ( class AActor* NewActor )
{
	static UFunction* pFnSetTargetActor = NULL;

	if ( ! pFnSetTargetActor )
		pFnSetTargetActor = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileEffect.SetTargetActor" );

	ANowProjectileEffect_execSetTargetActor_Parms SetTargetActor_Parms;
	SetTargetActor_Parms.NewActor = NewActor;

	this->ProcessEvent ( pFnSetTargetActor, &SetTargetActor_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.SetTargetVect
// [0x00020002] 
// Parameters infos:
// struct FVector                 NewVector                      ( CPF_Parm )

void ANowProjectileEffect::SetTargetVect ( struct FVector NewVector )
{
	static UFunction* pFnSetTargetVect = NULL;

	if ( ! pFnSetTargetVect )
		pFnSetTargetVect = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileEffect.SetTargetVect" );

	ANowProjectileEffect_execSetTargetVect_Parms SetTargetVect_Parms;
	memcpy ( &SetTargetVect_Parms.NewVector, &NewVector, 0xC );

	this->ProcessEvent ( pFnSetTargetVect, &SetTargetVect_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.EffectProjectileHit
// [0x00020002] 
// Parameters infos:

void ANowProjectileEffect::EffectProjectileHit ( )
{
	static UFunction* pFnEffectProjectileHit = NULL;

	if ( ! pFnEffectProjectileHit )
		pFnEffectProjectileHit = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileEffect.EffectProjectileHit" );

	ANowProjectileEffect_execEffectProjectileHit_Parms EffectProjectileHit_Parms;

	this->ProcessEvent ( pFnEffectProjectileHit, &EffectProjectileHit_Parms, NULL );
};

// Function NowGame.NowProjectileEffect.InitEffectProjectile
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDuped                         ( CPF_OptionalParm | CPF_Parm )

void ANowProjectileEffect::InitEffectProjectile ( unsigned long bDuped )
{
	static UFunction* pFnInitEffectProjectile = NULL;

	if ( ! pFnInitEffectProjectile )
		pFnInitEffectProjectile = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileEffect.InitEffectProjectile" );

	ANowProjectileEffect_execInitEffectProjectile_Parms InitEffectProjectile_Parms;
	InitEffectProjectile_Parms.bDuped = bDuped;

	this->ProcessEvent ( pFnInitEffectProjectile, &InitEffectProjectile_Parms, NULL );
};

// Function NowGame.NowAiEffectAcidSuicide.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowAiEffectAcidSuicide::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowAiEffectAcidSuicide.Destroyed" );

	ANowAiEffectAcidSuicide_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAiEffectAcidSuicide.InitEffectProjectile
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDuped                         ( CPF_OptionalParm | CPF_Parm )

void ANowAiEffectAcidSuicide::InitEffectProjectile ( unsigned long bDuped )
{
	static UFunction* pFnInitEffectProjectile = NULL;

	if ( ! pFnInitEffectProjectile )
		pFnInitEffectProjectile = UObject::FindObject< UFunction > ( "Function NowGame.NowAiEffectAcidSuicide.InitEffectProjectile" );

	ANowAiEffectAcidSuicide_execInitEffectProjectile_Parms InitEffectProjectile_Parms;
	InitEffectProjectile_Parms.bDuped = bDuped;

	this->ProcessEvent ( pFnInitEffectProjectile, &InitEffectProjectile_Parms, NULL );
};

// Function NowGame.NowAiEffectLight.InitEffectProjectile
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDuped                         ( CPF_OptionalParm | CPF_Parm )

void ANowAiEffectLight::InitEffectProjectile ( unsigned long bDuped )
{
	static UFunction* pFnInitEffectProjectile = NULL;

	if ( ! pFnInitEffectProjectile )
		pFnInitEffectProjectile = UObject::FindObject< UFunction > ( "Function NowGame.NowAiEffectLight.InitEffectProjectile" );

	ANowAiEffectLight_execInitEffectProjectile_Parms InitEffectProjectile_Parms;
	InitEffectProjectile_Parms.bDuped = bDuped;

	this->ProcessEvent ( pFnInitEffectProjectile, &InitEffectProjectile_Parms, NULL );
};

// Function NowGame.NowAiEffectPortalProj.InitEffectProjectile
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDuped                         ( CPF_OptionalParm | CPF_Parm )

void ANowAiEffectPortalProj::InitEffectProjectile ( unsigned long bDuped )
{
	static UFunction* pFnInitEffectProjectile = NULL;

	if ( ! pFnInitEffectProjectile )
		pFnInitEffectProjectile = UObject::FindObject< UFunction > ( "Function NowGame.NowAiEffectPortalProj.InitEffectProjectile" );

	ANowAiEffectPortalProj_execInitEffectProjectile_Parms InitEffectProjectile_Parms;
	InitEffectProjectile_Parms.bDuped = bDuped;

	this->ProcessEvent ( pFnInitEffectProjectile, &InitEffectProjectile_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawn.Tick
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAiEffectSpawn::Tick ( float DT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowAiEffectSpawn.Tick" );

	ANowAiEffectSpawn_execTick_Parms Tick_Parms;
	Tick_Parms.DT = DT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawn.UnHideEffect
// [0x00020002] 
// Parameters infos:

void ANowAiEffectSpawn::UnHideEffect ( )
{
	static UFunction* pFnUnHideEffect = NULL;

	if ( ! pFnUnHideEffect )
		pFnUnHideEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAiEffectSpawn.UnHideEffect" );

	ANowAiEffectSpawn_execUnHideEffect_Parms UnHideEffect_Parms;

	this->ProcessEvent ( pFnUnHideEffect, &UnHideEffect_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawn.InitEffect
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAi*       NewOwner                       ( CPF_Parm )

void ANowAiEffectSpawn::InitEffect ( class ANowAtlasAvatarAi* NewOwner )
{
	static UFunction* pFnInitEffect = NULL;

	if ( ! pFnInitEffect )
		pFnInitEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAiEffectSpawn.InitEffect" );

	ANowAiEffectSpawn_execInitEffect_Parms InitEffect_Parms;
	InitEffect_Parms.NewOwner = NewOwner;

	this->ProcessEvent ( pFnInitEffect, &InitEffect_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawnFromGround.Tick
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowAiEffectSpawnFromGround::Tick ( float DT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowAiEffectSpawnFromGround.Tick" );

	ANowAiEffectSpawnFromGround_execTick_Parms Tick_Parms;
	Tick_Parms.DT = DT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAiEffectSpawnFromGround.InitEffect
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarAi*       NewOwner                       ( CPF_Parm )

void ANowAiEffectSpawnFromGround::InitEffect ( class ANowAtlasAvatarAi* NewOwner )
{
	static UFunction* pFnInitEffect = NULL;

	if ( ! pFnInitEffect )
		pFnInitEffect = UObject::FindObject< UFunction > ( "Function NowGame.NowAiEffectSpawnFromGround.InitEffect" );

	ANowAiEffectSpawnFromGround_execInitEffect_Parms InitEffect_Parms;
	InitEffect_Parms.NewOwner = NewOwner;

	this->ProcessEvent ( pFnInitEffect, &InitEffect_Parms, NULL );
};

// Function NowGame.NowCorpse.AiGibHead
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UParticleSystem*         DecapBlood                     ( CPF_Parm )

void ANowCorpse::eventAiGibHead ( class UParticleSystem* DecapBlood )
{
	static UFunction* pFnAiGibHead = NULL;

	if ( ! pFnAiGibHead )
		pFnAiGibHead = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.AiGibHead" );

	ANowCorpse_eventAiGibHead_Parms AiGibHead_Parms;
	AiGibHead_Parms.DecapBlood = DecapBlood;

	this->ProcessEvent ( pFnAiGibHead, &AiGibHead_Parms, NULL );
};

// Function NowGame.NowCorpse.GetNowOptionsDS
// [0x00020002] 
// Parameters infos:
// class UNowOptionsDatastore*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowOptionsDatastore* ANowCorpse::GetNowOptionsDS ( )
{
	static UFunction* pFnGetNowOptionsDS = NULL;

	if ( ! pFnGetNowOptionsDS )
		pFnGetNowOptionsDS = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.GetNowOptionsDS" );

	ANowCorpse_execGetNowOptionsDS_Parms GetNowOptionsDS_Parms;

	this->ProcessEvent ( pFnGetNowOptionsDS, &GetNowOptionsDS_Parms, NULL );

	return GetNowOptionsDS_Parms.ReturnValue;
};

// Function NowGame.NowCorpse.Timer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowCorpse::eventTimer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.Timer" );

	ANowCorpse_eventTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function NowGame.NowCorpse.LeaveADecal
// [0x00824102] 
// Parameters infos:
// struct FVector                 HitLoc                         ( CPF_Parm )
// struct FVector                 HitNorm                        ( CPF_Parm )
// unsigned long                  bSmall                         ( CPF_OptionalParm | CPF_Parm )

void ANowCorpse::LeaveADecal ( struct FVector HitLoc, struct FVector HitNorm, unsigned long bSmall )
{
	static UFunction* pFnLeaveADecal = NULL;

	if ( ! pFnLeaveADecal )
		pFnLeaveADecal = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.LeaveADecal" );

	ANowCorpse_execLeaveADecal_Parms LeaveADecal_Parms;
	memcpy ( &LeaveADecal_Parms.HitLoc, &HitLoc, 0xC );
	memcpy ( &LeaveADecal_Parms.HitNorm, &HitNorm, 0xC );
	LeaveADecal_Parms.bSmall = bSmall;

	this->ProcessEvent ( pFnLeaveADecal, &LeaveADecal_Parms, NULL );
};

// Function NowGame.NowCorpse.AddDecal
// [0x00824002] 
// Parameters infos:
// struct FVector                 StartPos                       ( CPF_Parm )
// unsigned long                  bSmall                         ( CPF_OptionalParm | CPF_Parm )

void ANowCorpse::AddDecal ( struct FVector StartPos, unsigned long bSmall )
{
	static UFunction* pFnAddDecal = NULL;

	if ( ! pFnAddDecal )
		pFnAddDecal = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.AddDecal" );

	ANowCorpse_execAddDecal_Parms AddDecal_Parms;
	memcpy ( &AddDecal_Parms.StartPos, &StartPos, 0xC );
	AddDecal_Parms.bSmall = bSmall;

	this->ProcessEvent ( pFnAddDecal, &AddDecal_Parms, NULL );
};

// Function NowGame.NowCorpse.SpawnLimbMesh
// [0x00020002] 
// Parameters infos:
// int                            WhatIndex                      ( CPF_Parm )
// class AActor*                  WhatActor                      ( CPF_Parm )

void ANowCorpse::SpawnLimbMesh ( int WhatIndex, class AActor* WhatActor )
{
	static UFunction* pFnSpawnLimbMesh = NULL;

	if ( ! pFnSpawnLimbMesh )
		pFnSpawnLimbMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.SpawnLimbMesh" );

	ANowCorpse_execSpawnLimbMesh_Parms SpawnLimbMesh_Parms;
	SpawnLimbMesh_Parms.WhatIndex = WhatIndex;
	SpawnLimbMesh_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnSpawnLimbMesh, &SpawnLimbMesh_Parms, NULL );
};

// Function NowGame.NowCorpse.SpawnBloodPS
// [0x00820002] 
// Parameters infos:
// int                            WhatIndex                      ( CPF_Parm )
// class AActor*                  WhatActor                      ( CPF_Parm )

void ANowCorpse::SpawnBloodPS ( int WhatIndex, class AActor* WhatActor )
{
	static UFunction* pFnSpawnBloodPS = NULL;

	if ( ! pFnSpawnBloodPS )
		pFnSpawnBloodPS = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.SpawnBloodPS" );

	ANowCorpse_execSpawnBloodPS_Parms SpawnBloodPS_Parms;
	SpawnBloodPS_Parms.WhatIndex = WhatIndex;
	SpawnBloodPS_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnSpawnBloodPS, &SpawnBloodPS_Parms, NULL );
};

// Function NowGame.NowCorpse.RemoveLimb
// [0x00020002] 
// Parameters infos:
// int                            WhatIndex                      ( CPF_Parm )
// class AActor*                  WhatActor                      ( CPF_Parm )

void ANowCorpse::RemoveLimb ( int WhatIndex, class AActor* WhatActor )
{
	static UFunction* pFnRemoveLimb = NULL;

	if ( ! pFnRemoveLimb )
		pFnRemoveLimb = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.RemoveLimb" );

	ANowCorpse_execRemoveLimb_Parms RemoveLimb_Parms;
	RemoveLimb_Parms.WhatIndex = WhatIndex;
	RemoveLimb_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnRemoveLimb, &RemoveLimb_Parms, NULL );
};

// Function NowGame.NowCorpse.GetFinalBlowImpulse
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  MyActor                        ( CPF_Parm )
// struct FVector                 LastHitPos                     ( CPF_Parm )
// struct FVector                 AddVelocity                    ( CPF_Parm )
// float                          LastDmg                        ( CPF_Parm )

struct FVector ANowCorpse::GetFinalBlowImpulse ( class AActor* MyActor, struct FVector LastHitPos, struct FVector AddVelocity, float LastDmg )
{
	static UFunction* pFnGetFinalBlowImpulse = NULL;

	if ( ! pFnGetFinalBlowImpulse )
		pFnGetFinalBlowImpulse = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.GetFinalBlowImpulse" );

	ANowCorpse_execGetFinalBlowImpulse_Parms GetFinalBlowImpulse_Parms;
	GetFinalBlowImpulse_Parms.MyActor = MyActor;
	memcpy ( &GetFinalBlowImpulse_Parms.LastHitPos, &LastHitPos, 0xC );
	memcpy ( &GetFinalBlowImpulse_Parms.AddVelocity, &AddVelocity, 0xC );
	GetFinalBlowImpulse_Parms.LastDmg = LastDmg;

	this->ProcessEvent ( pFnGetFinalBlowImpulse, &GetFinalBlowImpulse_Parms, NULL );

	return GetFinalBlowImpulse_Parms.ReturnValue;
};

// Function NowGame.NowCorpse.TurnOnCollision
// [0x00020102] 
// Parameters infos:

void ANowCorpse::TurnOnCollision ( )
{
	static UFunction* pFnTurnOnCollision = NULL;

	if ( ! pFnTurnOnCollision )
		pFnTurnOnCollision = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.TurnOnCollision" );

	ANowCorpse_execTurnOnCollision_Parms TurnOnCollision_Parms;

	this->ProcessEvent ( pFnTurnOnCollision, &TurnOnCollision_Parms, NULL );
};

// Function NowGame.NowCorpse.RigidBodyCollision
// [0x00C20902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ANowCorpse::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.RigidBodyCollision" );

	ANowCorpse_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x24 );
};

// Function NowGame.NowCorpse.CheckForGibs
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WhatHitBone                    ( CPF_Parm )
// class AActor*                  WhatActor                      ( CPF_Parm )

bool ANowCorpse::CheckForGibs ( struct FName WhatHitBone, class AActor* WhatActor )
{
	static UFunction* pFnCheckForGibs = NULL;

	if ( ! pFnCheckForGibs )
		pFnCheckForGibs = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.CheckForGibs" );

	ANowCorpse_execCheckForGibs_Parms CheckForGibs_Parms;
	memcpy ( &CheckForGibs_Parms.WhatHitBone, &WhatHitBone, 0x8 );
	CheckForGibs_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnCheckForGibs, &CheckForGibs_Parms, NULL );

	return CheckForGibs_Parms.ReturnValue;
};

// Function NowGame.NowCorpse.GrabMaterials
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatar*         WhatActor                      ( CPF_Parm )

void ANowCorpse::GrabMaterials ( class ANowAtlasAvatar* WhatActor )
{
	static UFunction* pFnGrabMaterials = NULL;

	if ( ! pFnGrabMaterials )
		pFnGrabMaterials = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.GrabMaterials" );

	ANowCorpse_execGrabMaterials_Parms GrabMaterials_Parms;
	GrabMaterials_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnGrabMaterials, &GrabMaterials_Parms, NULL );
};

// Function NowGame.NowCorpse.GiveMeRandomBoneName
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPhysicsAsset*           TestPhys                       ( CPF_Parm )

struct FName ANowCorpse::GiveMeRandomBoneName ( class UPhysicsAsset* TestPhys )
{
	static UFunction* pFnGiveMeRandomBoneName = NULL;

	if ( ! pFnGiveMeRandomBoneName )
		pFnGiveMeRandomBoneName = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.GiveMeRandomBoneName" );

	ANowCorpse_execGiveMeRandomBoneName_Parms GiveMeRandomBoneName_Parms;
	GiveMeRandomBoneName_Parms.TestPhys = TestPhys;

	this->ProcessEvent ( pFnGiveMeRandomBoneName, &GiveMeRandomBoneName_Parms, NULL );

	return GiveMeRandomBoneName_Parms.ReturnValue;
};

// Function NowGame.NowCorpse.TouchingWaterVolume
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  pOwner                         ( CPF_Parm )

bool ANowCorpse::TouchingWaterVolume ( class AActor* pOwner )
{
	static UFunction* pFnTouchingWaterVolume = NULL;

	if ( ! pFnTouchingWaterVolume )
		pFnTouchingWaterVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.TouchingWaterVolume" );

	ANowCorpse_execTouchingWaterVolume_Parms TouchingWaterVolume_Parms;
	TouchingWaterVolume_Parms.pOwner = pOwner;

	this->ProcessEvent ( pFnTouchingWaterVolume, &TouchingWaterVolume_Parms, NULL );

	return TouchingWaterVolume_Parms.ReturnValue;
};

// Function NowGame.NowCorpse.StartCorpse
// [0x00824002] 
// Parameters infos:
// class AActor*                  FromActor                      ( CPF_Parm )
// struct FName                   LastHitBoneName                ( CPF_Parm )
// struct FVector                 AddVelocity                    ( CPF_OptionalParm | CPF_Parm )
// float                          LastDmg                        ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )

void ANowCorpse::StartCorpse ( class AActor* FromActor, struct FName LastHitBoneName, struct FVector AddVelocity, float LastDmg, unsigned long bFromMercyMode )
{
	static UFunction* pFnStartCorpse = NULL;

	if ( ! pFnStartCorpse )
		pFnStartCorpse = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.StartCorpse" );

	ANowCorpse_execStartCorpse_Parms StartCorpse_Parms;
	StartCorpse_Parms.FromActor = FromActor;
	memcpy ( &StartCorpse_Parms.LastHitBoneName, &LastHitBoneName, 0x8 );
	memcpy ( &StartCorpse_Parms.AddVelocity, &AddVelocity, 0xC );
	StartCorpse_Parms.LastDmg = LastDmg;
	StartCorpse_Parms.bFromMercyMode = bFromMercyMode;

	this->ProcessEvent ( pFnStartCorpse, &StartCorpse_Parms, NULL );
};

// Function NowGame.NowCorpse.FullGibCorpse
// [0x00820002] 
// Parameters infos:
// class AActor*                  FromActor                      ( CPF_Parm )

void ANowCorpse::FullGibCorpse ( class AActor* FromActor )
{
	static UFunction* pFnFullGibCorpse = NULL;

	if ( ! pFnFullGibCorpse )
		pFnFullGibCorpse = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpse.FullGibCorpse" );

	ANowCorpse_execFullGibCorpse_Parms FullGibCorpse_Parms;
	FullGibCorpse_Parms.FromActor = FromActor;

	this->ProcessEvent ( pFnFullGibCorpse, &FullGibCorpse_Parms, NULL );
};

// Function NowGame.VectorQueue.IsEmpty
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UVectorQueue::IsEmpty ( )
{
	static UFunction* pFnIsEmpty = NULL;

	if ( ! pFnIsEmpty )
		pFnIsEmpty = UObject::FindObject< UFunction > ( "Function NowGame.VectorQueue.IsEmpty" );

	UVectorQueue_execIsEmpty_Parms IsEmpty_Parms;

	this->ProcessEvent ( pFnIsEmpty, &IsEmpty_Parms, NULL );

	return IsEmpty_Parms.ReturnValue;
};

// Function NowGame.VectorQueue.Length
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UVectorQueue::Length ( )
{
	static UFunction* pFnLength = NULL;

	if ( ! pFnLength )
		pFnLength = UObject::FindObject< UFunction > ( "Function NowGame.VectorQueue.Length" );

	UVectorQueue_execLength_Parms Length_Parms;

	this->ProcessEvent ( pFnLength, &Length_Parms, NULL );

	return Length_Parms.ReturnValue;
};

// Function NowGame.VectorQueue.Size
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UVectorQueue::Size ( )
{
	static UFunction* pFnSize = NULL;

	if ( ! pFnSize )
		pFnSize = UObject::FindObject< UFunction > ( "Function NowGame.VectorQueue.Size" );

	UVectorQueue_execSize_Parms Size_Parms;

	this->ProcessEvent ( pFnSize, &Size_Parms, NULL );

	return Size_Parms.ReturnValue;
};

// Function NowGame.VectorQueue.Clear
// [0x00020002] 
// Parameters infos:

void UVectorQueue::Clear ( )
{
	static UFunction* pFnClear = NULL;

	if ( ! pFnClear )
		pFnClear = UObject::FindObject< UFunction > ( "Function NowGame.VectorQueue.Clear" );

	UVectorQueue_execClear_Parms Clear_Parms;

	this->ProcessEvent ( pFnClear, &Clear_Parms, NULL );
};

// Function NowGame.VectorQueue.Pop
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UVectorQueue::Pop ( )
{
	static UFunction* pFnPop = NULL;

	if ( ! pFnPop )
		pFnPop = UObject::FindObject< UFunction > ( "Function NowGame.VectorQueue.Pop" );

	UVectorQueue_execPop_Parms Pop_Parms;

	this->ProcessEvent ( pFnPop, &Pop_Parms, NULL );

	return Pop_Parms.ReturnValue;
};

// Function NowGame.VectorQueue.Peek
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UVectorQueue::Peek ( )
{
	static UFunction* pFnPeek = NULL;

	if ( ! pFnPeek )
		pFnPeek = UObject::FindObject< UFunction > ( "Function NowGame.VectorQueue.Peek" );

	UVectorQueue_execPeek_Parms Peek_Parms;

	this->ProcessEvent ( pFnPeek, &Peek_Parms, NULL );

	return Peek_Parms.ReturnValue;
};

// Function NowGame.VectorQueue.Push
// [0x00020002] 
// Parameters infos:
// struct FVector                 V                              ( CPF_Parm )

void UVectorQueue::Push ( struct FVector V )
{
	static UFunction* pFnPush = NULL;

	if ( ! pFnPush )
		pFnPush = UObject::FindObject< UFunction > ( "Function NowGame.VectorQueue.Push" );

	UVectorQueue_execPush_Parms Push_Parms;
	memcpy ( &Push_Parms.V, &V, 0xC );

	this->ProcessEvent ( pFnPush, &Push_Parms, NULL );
};

// Function NowGame.NowCorpseDynamic.GrabMaterials
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatar*         WhatActor                      ( CPF_Parm )

void ANowCorpseDynamic::GrabMaterials ( class ANowAtlasAvatar* WhatActor )
{
	static UFunction* pFnGrabMaterials = NULL;

	if ( ! pFnGrabMaterials )
		pFnGrabMaterials = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpseDynamic.GrabMaterials" );

	ANowCorpseDynamic_execGrabMaterials_Parms GrabMaterials_Parms;
	GrabMaterials_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnGrabMaterials, &GrabMaterials_Parms, NULL );
};

// Function NowGame.NowCorpseDynamic.StartCorpse
// [0x00024002] 
// Parameters infos:
// class AActor*                  FromActor                      ( CPF_Parm )
// struct FName                   LastHitBoneName                ( CPF_Parm )
// struct FVector                 AddVelocity                    ( CPF_OptionalParm | CPF_Parm )
// float                          LastDmg                        ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFromMercyMode                 ( CPF_OptionalParm | CPF_Parm )

void ANowCorpseDynamic::StartCorpse ( class AActor* FromActor, struct FName LastHitBoneName, struct FVector AddVelocity, float LastDmg, unsigned long bFromMercyMode )
{
	static UFunction* pFnStartCorpse = NULL;

	if ( ! pFnStartCorpse )
		pFnStartCorpse = UObject::FindObject< UFunction > ( "Function NowGame.NowCorpseDynamic.StartCorpse" );

	ANowCorpseDynamic_execStartCorpse_Parms StartCorpse_Parms;
	StartCorpse_Parms.FromActor = FromActor;
	memcpy ( &StartCorpse_Parms.LastHitBoneName, &LastHitBoneName, 0x8 );
	memcpy ( &StartCorpse_Parms.AddVelocity, &AddVelocity, 0xC );
	StartCorpse_Parms.LastDmg = LastDmg;
	StartCorpse_Parms.bFromMercyMode = bFromMercyMode;

	this->ProcessEvent ( pFnStartCorpse, &StartCorpse_Parms, NULL );
};

// Function NowGame.NowTCPLink.TcpReceived
// [0x00120000] 
// Parameters infos:
// struct FString                 jsonData                       ( CPF_Parm | CPF_NeedCtorLink )

void ANowTCPLink::TcpReceived ( struct FString jsonData )
{
	static UFunction* pFnTcpReceived = NULL;

	if ( ! pFnTcpReceived )
		pFnTcpReceived = UObject::FindObject< UFunction > ( "Function NowGame.NowTCPLink.TcpReceived" );

	ANowTCPLink_execTcpReceived_Parms TcpReceived_Parms;
	memcpy ( &TcpReceived_Parms.jsonData, &jsonData, 0xC );

	this->ProcessEvent ( pFnTcpReceived, &TcpReceived_Parms, NULL );
};

// Function NowGame.NowTCPLink.IsCompleteJSon
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sString                        ( CPF_Parm | CPF_NeedCtorLink )

bool ANowTCPLink::IsCompleteJSon ( struct FString sString )
{
	static UFunction* pFnIsCompleteJSon = NULL;

	if ( ! pFnIsCompleteJSon )
		pFnIsCompleteJSon = UObject::FindObject< UFunction > ( "Function NowGame.NowTCPLink.IsCompleteJSon" );

	ANowTCPLink_execIsCompleteJSon_Parms IsCompleteJSon_Parms;
	memcpy ( &IsCompleteJSon_Parms.sString, &sString, 0xC );

	this->ProcessEvent ( pFnIsCompleteJSon, &IsCompleteJSon_Parms, NULL );

	return IsCompleteJSon_Parms.ReturnValue;
};

// Function NowGame.NowTCPLink.ReceivedText
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void ANowTCPLink::eventReceivedText ( struct FString Text )
{
	static UFunction* pFnReceivedText = NULL;

	if ( ! pFnReceivedText )
		pFnReceivedText = UObject::FindObject< UFunction > ( "Function NowGame.NowTCPLink.ReceivedText" );

	ANowTCPLink_eventReceivedText_Parms ReceivedText_Parms;
	memcpy ( &ReceivedText_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnReceivedText, &ReceivedText_Parms, NULL );
};

// Function NowGame.NowTCPLink.Closed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowTCPLink::eventClosed ( )
{
	static UFunction* pFnClosed = NULL;

	if ( ! pFnClosed )
		pFnClosed = UObject::FindObject< UFunction > ( "Function NowGame.NowTCPLink.Closed" );

	ANowTCPLink_eventClosed_Parms Closed_Parms;

	this->ProcessEvent ( pFnClosed, &Closed_Parms, NULL );
};

// Function NowGame.NowTCPLink.Opened
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowTCPLink::eventOpened ( )
{
	static UFunction* pFnOpened = NULL;

	if ( ! pFnOpened )
		pFnOpened = UObject::FindObject< UFunction > ( "Function NowGame.NowTCPLink.Opened" );

	ANowTCPLink_eventOpened_Parms Opened_Parms;

	this->ProcessEvent ( pFnOpened, &Opened_Parms, NULL );
};

// Function NowGame.NowTCPLink.ResolveFailed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowTCPLink::eventResolveFailed ( )
{
	static UFunction* pFnResolveFailed = NULL;

	if ( ! pFnResolveFailed )
		pFnResolveFailed = UObject::FindObject< UFunction > ( "Function NowGame.NowTCPLink.ResolveFailed" );

	ANowTCPLink_eventResolveFailed_Parms ResolveFailed_Parms;

	this->ProcessEvent ( pFnResolveFailed, &ResolveFailed_Parms, NULL );
};

// Function NowGame.NowTCPLink.Resolved
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FIpAddr                 Addr                           ( CPF_Parm )

void ANowTCPLink::eventResolved ( struct FIpAddr Addr )
{
	static UFunction* pFnResolved = NULL;

	if ( ! pFnResolved )
		pFnResolved = UObject::FindObject< UFunction > ( "Function NowGame.NowTCPLink.Resolved" );

	ANowTCPLink_eventResolved_Parms Resolved_Parms;
	memcpy ( &Resolved_Parms.Addr, &Addr, 0x8 );

	this->ProcessEvent ( pFnResolved, &Resolved_Parms, NULL );
};

// Function NowGame.NowTCPLink.SendQuery
// [0x00020002] 
// Parameters infos:
// struct FString                 Script                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Query                          ( CPF_Parm | CPF_NeedCtorLink )

void ANowTCPLink::SendQuery ( struct FString Script, struct FString Query )
{
	static UFunction* pFnSendQuery = NULL;

	if ( ! pFnSendQuery )
		pFnSendQuery = UObject::FindObject< UFunction > ( "Function NowGame.NowTCPLink.SendQuery" );

	ANowTCPLink_execSendQuery_Parms SendQuery_Parms;
	memcpy ( &SendQuery_Parms.Script, &Script, 0xC );
	memcpy ( &SendQuery_Parms.Query, &Query, 0xC );

	this->ProcessEvent ( pFnSendQuery, &SendQuery_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAnimatedDoor.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarAnimatedDoor::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAnimatedDoor.Destroyed" );

	ANowAtlasAvatarAnimatedDoor_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAnimatedDoor.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowAtlasAvatarAnimatedDoor::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAnimatedDoor.Tick" );

	ANowAtlasAvatarAnimatedDoor_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarAnimatedDoor.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarAnimatedDoor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarAnimatedDoor.PostBeginPlay" );

	ANowAtlasAvatarAnimatedDoor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventAnim.UnTriggerMe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEventAnim::eventUnTriggerMe ( )
{
	static UFunction* pFnUnTriggerMe = NULL;

	if ( ! pFnUnTriggerMe )
		pFnUnTriggerMe = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarEventAnim.UnTriggerMe" );

	ANowAtlasAvatarEventAnim_eventUnTriggerMe_Parms UnTriggerMe_Parms;

	this->ProcessEvent ( pFnUnTriggerMe, &UnTriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventAnim.TriggerMe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEventAnim::eventTriggerMe ( )
{
	static UFunction* pFnTriggerMe = NULL;

	if ( ! pFnTriggerMe )
		pFnTriggerMe = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarEventAnim.TriggerMe" );

	ANowAtlasAvatarEventAnim_eventTriggerMe_Parms TriggerMe_Parms;

	this->ProcessEvent ( pFnTriggerMe, &TriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventAnim.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowAtlasAvatarEventAnim::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarEventAnim.PostBeginPlay" );

	ANowAtlasAvatarEventAnim_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventAnimVisible.UnTriggerMe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEventAnimVisible::eventUnTriggerMe ( )
{
	static UFunction* pFnUnTriggerMe = NULL;

	if ( ! pFnUnTriggerMe )
		pFnUnTriggerMe = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarEventAnimVisible.UnTriggerMe" );

	ANowAtlasAvatarEventAnimVisible_eventUnTriggerMe_Parms UnTriggerMe_Parms;

	this->ProcessEvent ( pFnUnTriggerMe, &UnTriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventAnimVisible.TriggerMe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEventAnimVisible::eventTriggerMe ( )
{
	static UFunction* pFnTriggerMe = NULL;

	if ( ! pFnTriggerMe )
		pFnTriggerMe = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarEventAnimVisible.TriggerMe" );

	ANowAtlasAvatarEventAnimVisible_eventTriggerMe_Parms TriggerMe_Parms;

	this->ProcessEvent ( pFnTriggerMe, &TriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventDoor.UnTriggerMe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEventDoor::eventUnTriggerMe ( )
{
	static UFunction* pFnUnTriggerMe = NULL;

	if ( ! pFnUnTriggerMe )
		pFnUnTriggerMe = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarEventDoor.UnTriggerMe" );

	ANowAtlasAvatarEventDoor_eventUnTriggerMe_Parms UnTriggerMe_Parms;

	this->ProcessEvent ( pFnUnTriggerMe, &UnTriggerMe_Parms, NULL );
};

// Function NowGame.NowAtlasAvatarEventDoor.TriggerMe
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowAtlasAvatarEventDoor::eventTriggerMe ( )
{
	static UFunction* pFnTriggerMe = NULL;

	if ( ! pFnTriggerMe )
		pFnTriggerMe = UObject::FindObject< UFunction > ( "Function NowGame.NowAtlasAvatarEventDoor.TriggerMe" );

	ANowAtlasAvatarEventDoor_eventTriggerMe_Parms TriggerMe_Parms;

	this->ProcessEvent ( pFnTriggerMe, &TriggerMe_Parms, NULL );
};

// Function NowGame.NowBlockingVolume.setVolumeCollision
// [0x00020002] 
// Parameters infos:
// unsigned long                  isCollision                    ( CPF_Parm )

void ANowBlockingVolume::setVolumeCollision ( unsigned long isCollision )
{
	static UFunction* pFnsetVolumeCollision = NULL;

	if ( ! pFnsetVolumeCollision )
		pFnsetVolumeCollision = UObject::FindObject< UFunction > ( "Function NowGame.NowBlockingVolume.setVolumeCollision" );

	ANowBlockingVolume_execsetVolumeCollision_Parms setVolumeCollision_Parms;
	setVolumeCollision_Parms.isCollision = isCollision;

	this->ProcessEvent ( pFnsetVolumeCollision, &setVolumeCollision_Parms, NULL );
};

// Function NowGame.UIScene_Library.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Library::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Library.SceneDeactivated" );

	UUIScene_Library_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Library.UpdateBooklist
// [0x00020002] 
// Parameters infos:

void UUIScene_Library::UpdateBooklist ( )
{
	static UFunction* pFnUpdateBooklist = NULL;

	if ( ! pFnUpdateBooklist )
		pFnUpdateBooklist = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Library.UpdateBooklist" );

	UUIScene_Library_execUpdateBooklist_Parms UpdateBooklist_Parms;

	this->ProcessEvent ( pFnUpdateBooklist, &UpdateBooklist_Parms, NULL );
};

// Function NowGame.UIScene_Library.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Library::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Library.SceneActivated" );

	UUIScene_Library_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Library.OnPrev
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Library::OnPrev ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnPrev = NULL;

	if ( ! pFnOnPrev )
		pFnOnPrev = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Library.OnPrev" );

	UUIScene_Library_execOnPrev_Parms OnPrev_Parms;
	OnPrev_Parms.Caller = Caller;
	OnPrev_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnPrev, &OnPrev_Parms, NULL );

	return OnPrev_Parms.ReturnValue;
};

// Function NowGame.UIScene_Library.OnNext
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Library::OnNext ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnNext = NULL;

	if ( ! pFnOnNext )
		pFnOnNext = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Library.OnNext" );

	UUIScene_Library_execOnNext_Parms OnNext_Parms;
	OnNext_Parms.Caller = Caller;
	OnNext_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnNext, &OnNext_Parms, NULL );

	return OnNext_Parms.ReturnValue;
};

// Function NowGame.UIScene_Library.OnBookCancel
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Library::OnBookCancel ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnBookCancel = NULL;

	if ( ! pFnOnBookCancel )
		pFnOnBookCancel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Library.OnBookCancel" );

	UUIScene_Library_execOnBookCancel_Parms OnBookCancel_Parms;
	OnBookCancel_Parms.Caller = Caller;
	OnBookCancel_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnBookCancel, &OnBookCancel_Parms, NULL );

	return OnBookCancel_Parms.ReturnValue;
};

// Function NowGame.UIScene_Library.OnBookBuy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Library::OnBookBuy ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnBookBuy = NULL;

	if ( ! pFnOnBookBuy )
		pFnOnBookBuy = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Library.OnBookBuy" );

	UUIScene_Library_execOnBookBuy_Parms OnBookBuy_Parms;
	OnBookBuy_Parms.Caller = Caller;
	OnBookBuy_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnBookBuy, &OnBookBuy_Parms, NULL );

	return OnBookBuy_Parms.ReturnValue;
};

// Function NowGame.UIScene_Library.OnBookItemClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Library::OnBookItemClicked ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnBookItemClicked = NULL;

	if ( ! pFnOnBookItemClicked )
		pFnOnBookItemClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Library.OnBookItemClicked" );

	UUIScene_Library_execOnBookItemClicked_Parms OnBookItemClicked_Parms;
	OnBookItemClicked_Parms.Caller = Caller;
	OnBookItemClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnBookItemClicked, &OnBookItemClicked_Parms, NULL );

	return OnBookItemClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Library.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Library::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Library.InitScene" );

	UUIScene_Library_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.NowStaticMeshcomponentDoor.TurnOnCollisionOnDoor
// [0x00020002] 
// Parameters infos:

void UNowStaticMeshcomponentDoor::TurnOnCollisionOnDoor ( )
{
	static UFunction* pFnTurnOnCollisionOnDoor = NULL;

	if ( ! pFnTurnOnCollisionOnDoor )
		pFnTurnOnCollisionOnDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshcomponentDoor.TurnOnCollisionOnDoor" );

	UNowStaticMeshcomponentDoor_execTurnOnCollisionOnDoor_Parms TurnOnCollisionOnDoor_Parms;

	this->ProcessEvent ( pFnTurnOnCollisionOnDoor, &TurnOnCollisionOnDoor_Parms, NULL );
};

// Function NowGame.NowStaticMeshcomponentDoor.TurnOffCollisionOnDoor
// [0x00020002] 
// Parameters infos:

void UNowStaticMeshcomponentDoor::TurnOffCollisionOnDoor ( )
{
	static UFunction* pFnTurnOffCollisionOnDoor = NULL;

	if ( ! pFnTurnOffCollisionOnDoor )
		pFnTurnOffCollisionOnDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshcomponentDoor.TurnOffCollisionOnDoor" );

	UNowStaticMeshcomponentDoor_execTurnOffCollisionOnDoor_Parms TurnOffCollisionOnDoor_Parms;

	this->ProcessEvent ( pFnTurnOffCollisionOnDoor, &TurnOffCollisionOnDoor_Parms, NULL );
};

// Function NowGame.NowStaticMeshcomponentDoor.EncroachingOn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool UNowStaticMeshcomponentDoor::eventEncroachingOn ( class AActor* Other )
{
	static UFunction* pFnEncroachingOn = NULL;

	if ( ! pFnEncroachingOn )
		pFnEncroachingOn = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshcomponentDoor.EncroachingOn" );

	UNowStaticMeshcomponentDoor_eventEncroachingOn_Parms EncroachingOn_Parms;
	EncroachingOn_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachingOn, &EncroachingOn_Parms, NULL );

	return EncroachingOn_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshcomponentDoor.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void UNowStaticMeshcomponentDoor::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshcomponentDoor.UnTouch" );

	UNowStaticMeshcomponentDoor_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function NowGame.NowStaticMeshcomponentDoor.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void UNowStaticMeshcomponentDoor::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshcomponentDoor.Touch" );

	UNowStaticMeshcomponentDoor_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.NowStaticMeshcomponentDoor.isPlayerInHouse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Player                         ( CPF_Parm )

bool UNowStaticMeshcomponentDoor::isPlayerInHouse ( class AActor* Player )
{
	static UFunction* pFnisPlayerInHouse = NULL;

	if ( ! pFnisPlayerInHouse )
		pFnisPlayerInHouse = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshcomponentDoor.isPlayerInHouse" );

	UNowStaticMeshcomponentDoor_execisPlayerInHouse_Parms isPlayerInHouse_Parms;
	isPlayerInHouse_Parms.Player = Player;

	this->ProcessEvent ( pFnisPlayerInHouse, &isPlayerInHouse_Parms, NULL );

	return isPlayerInHouse_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshcomponentDoor.getClientActor
// [0x00020002] 
// Parameters infos:

void UNowStaticMeshcomponentDoor::getClientActor ( )
{
	static UFunction* pFngetClientActor = NULL;

	if ( ! pFngetClientActor )
		pFngetClientActor = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshcomponentDoor.getClientActor" );

	UNowStaticMeshcomponentDoor_execgetClientActor_Parms getClientActor_Parms;

	this->ProcessEvent ( pFngetClientActor, &getClientActor_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.GetNowPC
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPlayerController* ANowStaticMeshActorKeepMap::GetNowPC ( )
{
	static UFunction* pFnGetNowPC = NULL;

	if ( ! pFnGetNowPC )
		pFnGetNowPC = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorKeepMap.GetNowPC" );

	ANowStaticMeshActorKeepMap_execGetNowPC_Parms GetNowPC_Parms;

	this->ProcessEvent ( pFnGetNowPC, &GetNowPC_Parms, NULL );

	return GetNowPC_Parms.ReturnValue;
};

// Function NowGame.NowStaticMeshActorKeepMap.DrawPylons
// [0x00820002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::DrawPylons ( )
{
	static UFunction* pFnDrawPylons = NULL;

	if ( ! pFnDrawPylons )
		pFnDrawPylons = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorKeepMap.DrawPylons" );

	ANowStaticMeshActorKeepMap_execDrawPylons_Parms DrawPylons_Parms;

	this->ProcessEvent ( pFnDrawPylons, &DrawPylons_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.ClearPylonMeshs
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::ClearPylonMeshs ( )
{
	static UFunction* pFnClearPylonMeshs = NULL;

	if ( ! pFnClearPylonMeshs )
		pFnClearPylonMeshs = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorKeepMap.ClearPylonMeshs" );

	ANowStaticMeshActorKeepMap_execClearPylonMeshs_Parms ClearPylonMeshs_Parms;

	this->ProcessEvent ( pFnClearPylonMeshs, &ClearPylonMeshs_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.InitPylons
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::InitPylons ( )
{
	static UFunction* pFnInitPylons = NULL;

	if ( ! pFnInitPylons )
		pFnInitPylons = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorKeepMap.InitPylons" );

	ANowStaticMeshActorKeepMap_execInitPylons_Parms InitPylons_Parms;

	this->ProcessEvent ( pFnInitPylons, &InitPylons_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.UpdatePylons
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::UpdatePylons ( )
{
	static UFunction* pFnUpdatePylons = NULL;

	if ( ! pFnUpdatePylons )
		pFnUpdatePylons = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorKeepMap.UpdatePylons" );

	ANowStaticMeshActorKeepMap_execUpdatePylons_Parms UpdatePylons_Parms;

	this->ProcessEvent ( pFnUpdatePylons, &UpdatePylons_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.Destroyed
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorKeepMap.Destroyed" );

	ANowStaticMeshActorKeepMap_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.CheckPlayerDist
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::CheckPlayerDist ( )
{
	static UFunction* pFnCheckPlayerDist = NULL;

	if ( ! pFnCheckPlayerDist )
		pFnCheckPlayerDist = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorKeepMap.CheckPlayerDist" );

	ANowStaticMeshActorKeepMap_execCheckPlayerDist_Parms CheckPlayerDist_Parms;

	this->ProcessEvent ( pFnCheckPlayerDist, &CheckPlayerDist_Parms, NULL );
};

// Function NowGame.NowStaticMeshActorKeepMap.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowStaticMeshActorKeepMap::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowStaticMeshActorKeepMap.PostBeginPlay" );

	ANowStaticMeshActorKeepMap_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowFractureStaticMeshActor.PartExplosion
// [0x00820002] 
// Parameters infos:

void ANowFractureStaticMeshActor::PartExplosion ( )
{
	static UFunction* pFnPartExplosion = NULL;

	if ( ! pFnPartExplosion )
		pFnPartExplosion = UObject::FindObject< UFunction > ( "Function NowGame.NowFractureStaticMeshActor.PartExplosion" );

	ANowFractureStaticMeshActor_execPartExplosion_Parms PartExplosion_Parms;

	this->ProcessEvent ( pFnPartExplosion, &PartExplosion_Parms, NULL );
};

// Function NowGame.NowFractureStaticMeshActor.TierExplosion
// [0x00820002] 
// Parameters infos:

void ANowFractureStaticMeshActor::TierExplosion ( )
{
	static UFunction* pFnTierExplosion = NULL;

	if ( ! pFnTierExplosion )
		pFnTierExplosion = UObject::FindObject< UFunction > ( "Function NowGame.NowFractureStaticMeshActor.TierExplosion" );

	ANowFractureStaticMeshActor_execTierExplosion_Parms TierExplosion_Parms;

	this->ProcessEvent ( pFnTierExplosion, &TierExplosion_Parms, NULL );
};

// Function NowGame.NowFractureStaticMeshActor.Tick
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowFractureStaticMeshActor::Tick ( float DT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowFractureStaticMeshActor.Tick" );

	ANowFractureStaticMeshActor_execTick_Parms Tick_Parms;
	Tick_Parms.DT = DT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowFractureStaticMeshActor.SetStaticMesh
// [0x00020002] 
// Parameters infos:
// class UStaticMesh*             NewStaticMesh                  ( CPF_Parm )

void ANowFractureStaticMeshActor::SetStaticMesh ( class UStaticMesh* NewStaticMesh )
{
	static UFunction* pFnSetStaticMesh = NULL;

	if ( ! pFnSetStaticMesh )
		pFnSetStaticMesh = UObject::FindObject< UFunction > ( "Function NowGame.NowFractureStaticMeshActor.SetStaticMesh" );

	ANowFractureStaticMeshActor_execSetStaticMesh_Parms SetStaticMesh_Parms;
	SetStaticMesh_Parms.NewStaticMesh = NewStaticMesh;

	this->ProcessEvent ( pFnSetStaticMesh, &SetStaticMesh_Parms, NULL );
};

// Function NowGame.NowFractureStaticMeshActor.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowFractureStaticMeshActor::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowFractureStaticMeshActor.PostBeginPlay" );

	ANowFractureStaticMeshActor_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectileGeneric::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileGeneric.Tick" );

	ANowProjectileGeneric_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.RemoveMyComponents
// [0x00020000] 
// Parameters infos:

void ANowProjectileGeneric::RemoveMyComponents ( )
{
	static UFunction* pFnRemoveMyComponents = NULL;

	if ( ! pFnRemoveMyComponents )
		pFnRemoveMyComponents = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileGeneric.RemoveMyComponents" );

	ANowProjectileGeneric_execRemoveMyComponents_Parms RemoveMyComponents_Parms;

	this->ProcessEvent ( pFnRemoveMyComponents, &RemoveMyComponents_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.TickTargetPos
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ANowProjectileGeneric::TickTargetPos ( float DeltaTime )
{
	static UFunction* pFnTickTargetPos = NULL;

	if ( ! pFnTickTargetPos )
		pFnTickTargetPos = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileGeneric.TickTargetPos" );

	ANowProjectileGeneric_execTickTargetPos_Parms TickTargetPos_Parms;
	TickTargetPos_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickTargetPos, &TickTargetPos_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetVelRotaion
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ANowProjectileGeneric::SetVelRotaion ( struct FVector Direction )
{
	static UFunction* pFnSetVelRotaion = NULL;

	if ( ! pFnSetVelRotaion )
		pFnSetVelRotaion = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileGeneric.SetVelRotaion" );

	ANowProjectileGeneric_execSetVelRotaion_Parms SetVelRotaion_Parms;
	memcpy ( &SetVelRotaion_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnSetVelRotaion, &SetVelRotaion_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetTargetPosArray
// [0x00020002] 
// Parameters infos:
// TArray< struct FVector >       OutPos                         ( CPF_Parm | CPF_NeedCtorLink )

void ANowProjectileGeneric::SetTargetPosArray ( TArray< struct FVector > OutPos )
{
	static UFunction* pFnSetTargetPosArray = NULL;

	if ( ! pFnSetTargetPosArray )
		pFnSetTargetPosArray = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileGeneric.SetTargetPosArray" );

	ANowProjectileGeneric_execSetTargetPosArray_Parms SetTargetPosArray_Parms;
	memcpy ( &SetTargetPosArray_Parms.OutPos, &OutPos, 0xC );

	this->ProcessEvent ( pFnSetTargetPosArray, &SetTargetPosArray_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetNextTargetPos
// [0x00020002] 
// Parameters infos:

void ANowProjectileGeneric::SetNextTargetPos ( )
{
	static UFunction* pFnSetNextTargetPos = NULL;

	if ( ! pFnSetNextTargetPos )
		pFnSetNextTargetPos = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileGeneric.SetNextTargetPos" );

	ANowProjectileGeneric_execSetNextTargetPos_Parms SetNextTargetPos_Parms;

	this->ProcessEvent ( pFnSetNextTargetPos, &SetNextTargetPos_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.Landed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

void ANowProjectileGeneric::eventLanded ( struct FVector HitNormal, class AActor* HitActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileGeneric.Landed" );

	ANowProjectileGeneric_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.CalcSpeedMulti
// [0x00820002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowProjectileGeneric::CalcSpeedMulti ( )
{
	static UFunction* pFnCalcSpeedMulti = NULL;

	if ( ! pFnCalcSpeedMulti )
		pFnCalcSpeedMulti = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileGeneric.CalcSpeedMulti" );

	ANowProjectileGeneric_execCalcSpeedMulti_Parms CalcSpeedMulti_Parms;

	this->ProcessEvent ( pFnCalcSpeedMulti, &CalcSpeedMulti_Parms, NULL );

	return CalcSpeedMulti_Parms.ReturnValue;
};

// Function NowGame.NowProjectileGeneric.Init
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ANowProjectileGeneric::Init ( struct FVector Direction )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileGeneric.Init" );

	ANowProjectileGeneric_execInit_Parms Init_Parms;
	memcpy ( &Init_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetImpactSoundFromString
// [0x00020002] 
// Parameters infos:
// struct FString                 BaseString                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowProjectileGeneric::SetImpactSoundFromString ( struct FString BaseString )
{
	static UFunction* pFnSetImpactSoundFromString = NULL;

	if ( ! pFnSetImpactSoundFromString )
		pFnSetImpactSoundFromString = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileGeneric.SetImpactSoundFromString" );

	ANowProjectileGeneric_execSetImpactSoundFromString_Parms SetImpactSoundFromString_Parms;
	memcpy ( &SetImpactSoundFromString_Parms.BaseString, &BaseString, 0xC );

	this->ProcessEvent ( pFnSetImpactSoundFromString, &SetImpactSoundFromString_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetFlySoundFromString
// [0x00020002] 
// Parameters infos:
// struct FString                 BaseString                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowProjectileGeneric::SetFlySoundFromString ( struct FString BaseString )
{
	static UFunction* pFnSetFlySoundFromString = NULL;

	if ( ! pFnSetFlySoundFromString )
		pFnSetFlySoundFromString = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileGeneric.SetFlySoundFromString" );

	ANowProjectileGeneric_execSetFlySoundFromString_Parms SetFlySoundFromString_Parms;
	memcpy ( &SetFlySoundFromString_Parms.BaseString, &BaseString, 0xC );

	this->ProcessEvent ( pFnSetFlySoundFromString, &SetFlySoundFromString_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetImpactParticleFromString
// [0x00020002] 
// Parameters infos:
// struct FString                 BaseString                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowProjectileGeneric::SetImpactParticleFromString ( struct FString BaseString )
{
	static UFunction* pFnSetImpactParticleFromString = NULL;

	if ( ! pFnSetImpactParticleFromString )
		pFnSetImpactParticleFromString = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileGeneric.SetImpactParticleFromString" );

	ANowProjectileGeneric_execSetImpactParticleFromString_Parms SetImpactParticleFromString_Parms;
	memcpy ( &SetImpactParticleFromString_Parms.BaseString, &BaseString, 0xC );

	this->ProcessEvent ( pFnSetImpactParticleFromString, &SetImpactParticleFromString_Parms, NULL );
};

// Function NowGame.NowProjectileGeneric.SetStaticMeshFromString
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 BaseString                     ( CPF_Parm | CPF_NeedCtorLink )

void ANowProjectileGeneric::eventSetStaticMeshFromString ( struct FString BaseString )
{
	static UFunction* pFnSetStaticMeshFromString = NULL;

	if ( ! pFnSetStaticMeshFromString )
		pFnSetStaticMeshFromString = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileGeneric.SetStaticMeshFromString" );

	ANowProjectileGeneric_eventSetStaticMeshFromString_Parms SetStaticMeshFromString_Parms;
	memcpy ( &SetStaticMeshFromString_Parms.BaseString, &BaseString, 0xC );

	this->ProcessEvent ( pFnSetStaticMeshFromString, &SetStaticMeshFromString_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.RHoldTab
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::RHoldTab ( )
{
	static UFunction* pFnRHoldTab = NULL;

	if ( ! pFnRHoldTab )
		pFnRHoldTab = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.RHoldTab" );

	UNowChildHudCreate_execRHoldTab_Parms RHoldTab_Parms;

	this->ProcessEvent ( pFnRHoldTab, &RHoldTab_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.ToggleCombatMode
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::ToggleCombatMode ( )
{
	static UFunction* pFnToggleCombatMode = NULL;

	if ( ! pFnToggleCombatMode )
		pFnToggleCombatMode = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.ToggleCombatMode" );

	UNowChildHudCreate_execToggleCombatMode_Parms ToggleCombatMode_Parms;

	this->ProcessEvent ( pFnToggleCombatMode, &ToggleCombatMode_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.SprintOn
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::SprintOn ( )
{
	static UFunction* pFnSprintOn = NULL;

	if ( ! pFnSprintOn )
		pFnSprintOn = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.SprintOn" );

	UNowChildHudCreate_execSprintOn_Parms SprintOn_Parms;

	this->ProcessEvent ( pFnSprintOn, &SprintOn_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.StopAltFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::StopAltFire ( )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.StopAltFire" );

	UNowChildHudCreate_execStopAltFire_Parms StopAltFire_Parms;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.StartAltFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::StartAltFire ( )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.StartAltFire" );

	UNowChildHudCreate_execStartAltFire_Parms StartAltFire_Parms;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.StopFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::StopFire ( )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.StopFire" );

	UNowChildHudCreate_execStopFire_Parms StopFire_Parms;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.StartFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudCreate::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.StartFire" );

	UNowChildHudCreate_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.UpdateMouseMove
// [0x00020000] 
// Parameters infos:
// float                          newTurn                        ( CPF_Parm )
// float                          newUp                          ( CPF_Parm )

void UNowChildHudCreate::UpdateMouseMove ( float newTurn, float newUp )
{
	static UFunction* pFnUpdateMouseMove = NULL;

	if ( ! pFnUpdateMouseMove )
		pFnUpdateMouseMove = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.UpdateMouseMove" );

	UNowChildHudCreate_execUpdateMouseMove_Parms UpdateMouseMove_Parms;
	UpdateMouseMove_Parms.newTurn = newTurn;
	UpdateMouseMove_Parms.newUp = newUp;

	this->ProcessEvent ( pFnUpdateMouseMove, &UpdateMouseMove_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.AddToActiveBtn
// [0x00020002] 
// Parameters infos:
// int                            Add                            ( CPF_Parm )

void UNowChildHudCreate::AddToActiveBtn ( int Add )
{
	static UFunction* pFnAddToActiveBtn = NULL;

	if ( ! pFnAddToActiveBtn )
		pFnAddToActiveBtn = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.AddToActiveBtn" );

	UNowChildHudCreate_execAddToActiveBtn_Parms AddToActiveBtn_Parms;
	AddToActiveBtn_Parms.Add = Add;

	this->ProcessEvent ( pFnAddToActiveBtn, &AddToActiveBtn_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.AddToValue
// [0x00020002] 
// Parameters infos:
// int                            Add                            ( CPF_Parm )

void UNowChildHudCreate::AddToValue ( int Add )
{
	static UFunction* pFnAddToValue = NULL;

	if ( ! pFnAddToValue )
		pFnAddToValue = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.AddToValue" );

	UNowChildHudCreate_execAddToValue_Parms AddToValue_Parms;
	AddToValue_Parms.Add = Add;

	this->ProcessEvent ( pFnAddToValue, &AddToValue_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.InputTimer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowChildHudCreate::InputTimer ( )
{
	static UFunction* pFnInputTimer = NULL;

	if ( ! pFnInputTimer )
		pFnInputTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.InputTimer" );

	UNowChildHudCreate_execInputTimer_Parms InputTimer_Parms;

	this->ProcessEvent ( pFnInputTimer, &InputTimer_Parms, NULL );

	return InputTimer_Parms.ReturnValue;
};

// Function NowGame.NowChildHudCreate.DrawParamBox
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

void UNowChildHudCreate::DrawParamBox ( class UCanvas* C, int Index )
{
	static UFunction* pFnDrawParamBox = NULL;

	if ( ! pFnDrawParamBox )
		pFnDrawParamBox = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.DrawParamBox" );

	UNowChildHudCreate_execDrawParamBox_Parms DrawParamBox_Parms;
	DrawParamBox_Parms.C = C;
	DrawParamBox_Parms.Index = Index;

	this->ProcessEvent ( pFnDrawParamBox, &DrawParamBox_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.ActionBarSlot
// [0x00020000] 
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UNowChildHudCreate::ActionBarSlot ( int iSlot )
{
	static UFunction* pFnActionBarSlot = NULL;

	if ( ! pFnActionBarSlot )
		pFnActionBarSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.ActionBarSlot" );

	UNowChildHudCreate_execActionBarSlot_Parms ActionBarSlot_Parms;
	ActionBarSlot_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnActionBarSlot, &ActionBarSlot_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudCreate::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.DrawChildHud" );

	UNowChildHudCreate_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.InitChildHud
// [0x00020002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHudCreate::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.InitChildHud" );

	UNowChildHudCreate_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.DrawMessages
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudCreate::DrawMessages ( class UCanvas* C )
{
	static UFunction* pFnDrawMessages = NULL;

	if ( ! pFnDrawMessages )
		pFnDrawMessages = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.DrawMessages" );

	UNowChildHudCreate_execDrawMessages_Parms DrawMessages_Parms;
	DrawMessages_Parms.C = C;

	this->ProcessEvent ( pFnDrawMessages, &DrawMessages_Parms, NULL );
};

// Function NowGame.NowChildHudCreate.AddMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudCreate::AddMessage ( struct FString msg )
{
	static UFunction* pFnAddMessage = NULL;

	if ( ! pFnAddMessage )
		pFnAddMessage = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudCreate.AddMessage" );

	UNowChildHudCreate_execAddMessage_Parms AddMessage_Parms;
	memcpy ( &AddMessage_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnAddMessage, &AddMessage_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.GetFollowPawn
// [0x00020002] 
// Parameters infos:
// class ANowPawn*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowPawn* UNowChildHudDebug::GetFollowPawn ( )
{
	static UFunction* pFnGetFollowPawn = NULL;

	if ( ! pFnGetFollowPawn )
		pFnGetFollowPawn = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebug.GetFollowPawn" );

	UNowChildHudDebug_execGetFollowPawn_Parms GetFollowPawn_Parms;

	this->ProcessEvent ( pFnGetFollowPawn, &GetFollowPawn_Parms, NULL );

	return GetFollowPawn_Parms.ReturnValue;
};

// Function NowGame.NowChildHudDebug.DrawMessages
// [0x00020000] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebug::DrawMessages ( class UCanvas* C )
{
	static UFunction* pFnDrawMessages = NULL;

	if ( ! pFnDrawMessages )
		pFnDrawMessages = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebug.DrawMessages" );

	UNowChildHudDebug_execDrawMessages_Parms DrawMessages_Parms;
	DrawMessages_Parms.C = C;

	this->ProcessEvent ( pFnDrawMessages, &DrawMessages_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.DrawDebugLines
// [0x00820002] 
// Parameters infos:

void UNowChildHudDebug::DrawDebugLines ( )
{
	static UFunction* pFnDrawDebugLines = NULL;

	if ( ! pFnDrawDebugLines )
		pFnDrawDebugLines = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebug.DrawDebugLines" );

	UNowChildHudDebug_execDrawDebugLines_Parms DrawDebugLines_Parms;

	this->ProcessEvent ( pFnDrawDebugLines, &DrawDebugLines_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.DrawTargetInfo
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebug::DrawTargetInfo ( class UCanvas* C )
{
	static UFunction* pFnDrawTargetInfo = NULL;

	if ( ! pFnDrawTargetInfo )
		pFnDrawTargetInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebug.DrawTargetInfo" );

	UNowChildHudDebug_execDrawTargetInfo_Parms DrawTargetInfo_Parms;
	DrawTargetInfo_Parms.C = C;

	this->ProcessEvent ( pFnDrawTargetInfo, &DrawTargetInfo_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.DrawGraph
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebug::DrawGraph ( class UCanvas* C )
{
	static UFunction* pFnDrawGraph = NULL;

	if ( ! pFnDrawGraph )
		pFnDrawGraph = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebug.DrawGraph" );

	UNowChildHudDebug_execDrawGraph_Parms DrawGraph_Parms;
	DrawGraph_Parms.C = C;

	this->ProcessEvent ( pFnDrawGraph, &DrawGraph_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.ClearGraph
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebug::ClearGraph ( )
{
	static UFunction* pFnClearGraph = NULL;

	if ( ! pFnClearGraph )
		pFnClearGraph = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebug.ClearGraph" );

	UNowChildHudDebug_execClearGraph_Parms ClearGraph_Parms;

	this->ProcessEvent ( pFnClearGraph, &ClearGraph_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.DumpGraphDebug
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebug::DumpGraphDebug ( )
{
	static UFunction* pFnDumpGraphDebug = NULL;

	if ( ! pFnDumpGraphDebug )
		pFnDumpGraphDebug = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebug.DumpGraphDebug" );

	UNowChildHudDebug_execDumpGraphDebug_Parms DumpGraphDebug_Parms;

	this->ProcessEvent ( pFnDumpGraphDebug, &DumpGraphDebug_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.ReCalcAverage
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebug::ReCalcAverage ( )
{
	static UFunction* pFnReCalcAverage = NULL;

	if ( ! pFnReCalcAverage )
		pFnReCalcAverage = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebug.ReCalcAverage" );

	UNowChildHudDebug_execReCalcAverage_Parms ReCalcAverage_Parms;

	this->ProcessEvent ( pFnReCalcAverage, &ReCalcAverage_Parms, NULL );
};

// Function NowGame.NowChildHudDebug.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebug::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebug.DrawChildHud" );

	UNowChildHudDebug_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDebugCount.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebugCount::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugCount.DrawChildHud" );

	UNowChildHudDebugCount_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDebugCount.LogEmitterBase
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugCount::LogEmitterBase ( )
{
	static UFunction* pFnLogEmitterBase = NULL;

	if ( ! pFnLogEmitterBase )
		pFnLogEmitterBase = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugCount.LogEmitterBase" );

	UNowChildHudDebugCount_execLogEmitterBase_Parms LogEmitterBase_Parms;

	this->ProcessEvent ( pFnLogEmitterBase, &LogEmitterBase_Parms, NULL );
};

// Function NowGame.NowChildHudDebugCount.LogEmitterPool
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugCount::LogEmitterPool ( )
{
	static UFunction* pFnLogEmitterPool = NULL;

	if ( ! pFnLogEmitterPool )
		pFnLogEmitterPool = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugCount.LogEmitterPool" );

	UNowChildHudDebugCount_execLogEmitterPool_Parms LogEmitterPool_Parms;

	this->ProcessEvent ( pFnLogEmitterPool, &LogEmitterPool_Parms, NULL );
};

// Function NowGame.NowEmitter.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowEmitter::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowEmitter.Destroyed" );

	ANowEmitter_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.SaveCollisionToFile
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::SaveCollisionToFile ( )
{
	static UFunction* pFnSaveCollisionToFile = NULL;

	if ( ! pFnSaveCollisionToFile )
		pFnSaveCollisionToFile = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugHouseCollision.SaveCollisionToFile" );

	UNowChildHudDebugHouseCollision_execSaveCollisionToFile_Parms SaveCollisionToFile_Parms;

	this->ProcessEvent ( pFnSaveCollisionToFile, &SaveCollisionToFile_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.DumpDebugHudInfo
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::DumpDebugHudInfo ( )
{
	static UFunction* pFnDumpDebugHudInfo = NULL;

	if ( ! pFnDumpDebugHudInfo )
		pFnDumpDebugHudInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugHouseCollision.DumpDebugHudInfo" );

	UNowChildHudDebugHouseCollision_execDumpDebugHudInfo_Parms DumpDebugHudInfo_Parms;

	this->ProcessEvent ( pFnDumpDebugHudInfo, &DumpDebugHudInfo_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDebugHouseCollision::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugHouseCollision.DrawChildHud" );

	UNowChildHudDebugHouseCollision_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.FindClosePoints
// [0x00420002] 
// Parameters infos:
// struct FVector                 PlayerVect                     ( CPF_Parm )
// int                            IndexA                         ( CPF_Parm | CPF_OutParm )
// int                            IndexB                         ( CPF_Parm | CPF_OutParm )
// int                            IndexC                         ( CPF_Parm | CPF_OutParm )

void UNowChildHudDebugHouseCollision::FindClosePoints ( struct FVector PlayerVect, int* IndexA, int* IndexB, int* IndexC )
{
	static UFunction* pFnFindClosePoints = NULL;

	if ( ! pFnFindClosePoints )
		pFnFindClosePoints = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugHouseCollision.FindClosePoints" );

	UNowChildHudDebugHouseCollision_execFindClosePoints_Parms FindClosePoints_Parms;
	memcpy ( &FindClosePoints_Parms.PlayerVect, &PlayerVect, 0xC );

	this->ProcessEvent ( pFnFindClosePoints, &FindClosePoints_Parms, NULL );

	if ( IndexA )
		*IndexA = FindClosePoints_Parms.IndexA;

	if ( IndexB )
		*IndexB = FindClosePoints_Parms.IndexB;

	if ( IndexC )
		*IndexC = FindClosePoints_Parms.IndexC;
};

// Function NowGame.NowChildHudDebugHouseCollision.TestInside
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 PlayerVect                     ( CPF_Parm )
// unsigned long                  bDrawLines                     ( CPF_OptionalParm | CPF_Parm )

bool UNowChildHudDebugHouseCollision::TestInside ( struct FVector PlayerVect, unsigned long bDrawLines )
{
	static UFunction* pFnTestInside = NULL;

	if ( ! pFnTestInside )
		pFnTestInside = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugHouseCollision.TestInside" );

	UNowChildHudDebugHouseCollision_execTestInside_Parms TestInside_Parms;
	memcpy ( &TestInside_Parms.PlayerVect, &PlayerVect, 0xC );
	TestInside_Parms.bDrawLines = bDrawLines;

	this->ProcessEvent ( pFnTestInside, &TestInside_Parms, NULL );

	return TestInside_Parms.ReturnValue;
};

// Function NowGame.NowChildHudDebugHouseCollision.CheckThisPoint
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::CheckThisPoint ( )
{
	static UFunction* pFnCheckThisPoint = NULL;

	if ( ! pFnCheckThisPoint )
		pFnCheckThisPoint = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugHouseCollision.CheckThisPoint" );

	UNowChildHudDebugHouseCollision_execCheckThisPoint_Parms CheckThisPoint_Parms;

	this->ProcessEvent ( pFnCheckThisPoint, &CheckThisPoint_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.DoTestInside
// [0x00820002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::DoTestInside ( )
{
	static UFunction* pFnDoTestInside = NULL;

	if ( ! pFnDoTestInside )
		pFnDoTestInside = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugHouseCollision.DoTestInside" );

	UNowChildHudDebugHouseCollision_execDoTestInside_Parms DoTestInside_Parms;

	this->ProcessEvent ( pFnDoTestInside, &DoTestInside_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.RefinePoints
// [0x00820002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::RefinePoints ( )
{
	static UFunction* pFnRefinePoints = NULL;

	if ( ! pFnRefinePoints )
		pFnRefinePoints = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugHouseCollision.RefinePoints" );

	UNowChildHudDebugHouseCollision_execRefinePoints_Parms RefinePoints_Parms;

	this->ProcessEvent ( pFnRefinePoints, &RefinePoints_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.UseDebugHudB
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::UseDebugHudB ( )
{
	static UFunction* pFnUseDebugHudB = NULL;

	if ( ! pFnUseDebugHudB )
		pFnUseDebugHudB = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugHouseCollision.UseDebugHudB" );

	UNowChildHudDebugHouseCollision_execUseDebugHudB_Parms UseDebugHudB_Parms;

	this->ProcessEvent ( pFnUseDebugHudB, &UseDebugHudB_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.UseDebugHud
// [0x00020002] 
// Parameters infos:

void UNowChildHudDebugHouseCollision::UseDebugHud ( )
{
	static UFunction* pFnUseDebugHud = NULL;

	if ( ! pFnUseDebugHud )
		pFnUseDebugHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugHouseCollision.UseDebugHud" );

	UNowChildHudDebugHouseCollision_execUseDebugHud_Parms UseDebugHud_Parms;

	this->ProcessEvent ( pFnUseDebugHud, &UseDebugHud_Parms, NULL );
};

// Function NowGame.NowChildHudDebugHouseCollision.InitChildHud
// [0x00020002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHudDebugHouseCollision::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDebugHouseCollision.InitChildHud" );

	UNowChildHudDebugHouseCollision_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.RHoldTab
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::RHoldTab ( )
{
	static UFunction* pFnRHoldTab = NULL;

	if ( ! pFnRHoldTab )
		pFnRHoldTab = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.RHoldTab" );

	UNowChildHudDynamicCreature_execRHoldTab_Parms RHoldTab_Parms;

	this->ProcessEvent ( pFnRHoldTab, &RHoldTab_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.FetchDataFromHorse
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::FetchDataFromHorse ( )
{
	static UFunction* pFnFetchDataFromHorse = NULL;

	if ( ! pFnFetchDataFromHorse )
		pFnFetchDataFromHorse = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.FetchDataFromHorse" );

	UNowChildHudDynamicCreature_execFetchDataFromHorse_Parms FetchDataFromHorse_Parms;

	this->ProcessEvent ( pFnFetchDataFromHorse, &FetchDataFromHorse_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.ToggleCombatMode
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::ToggleCombatMode ( )
{
	static UFunction* pFnToggleCombatMode = NULL;

	if ( ! pFnToggleCombatMode )
		pFnToggleCombatMode = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.ToggleCombatMode" );

	UNowChildHudDynamicCreature_execToggleCombatMode_Parms ToggleCombatMode_Parms;

	this->ProcessEvent ( pFnToggleCombatMode, &ToggleCombatMode_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.SprintOn
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::SprintOn ( )
{
	static UFunction* pFnSprintOn = NULL;

	if ( ! pFnSprintOn )
		pFnSprintOn = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.SprintOn" );

	UNowChildHudDynamicCreature_execSprintOn_Parms SprintOn_Parms;

	this->ProcessEvent ( pFnSprintOn, &SprintOn_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.StopAltFire
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::StopAltFire ( )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.StopAltFire" );

	UNowChildHudDynamicCreature_execStopAltFire_Parms StopAltFire_Parms;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.StartAltFire
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::StartAltFire ( )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.StartAltFire" );

	UNowChildHudDynamicCreature_execStartAltFire_Parms StartAltFire_Parms;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.StopFire
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::StopFire ( )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.StopFire" );

	UNowChildHudDynamicCreature_execStopFire_Parms StopFire_Parms;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.StartFire
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.StartFire" );

	UNowChildHudDynamicCreature_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.UpdateMouseMove
// [0x00820002] 
// Parameters infos:
// float                          newTurn                        ( CPF_Parm )
// float                          newUp                          ( CPF_Parm )

void UNowChildHudDynamicCreature::UpdateMouseMove ( float newTurn, float newUp )
{
	static UFunction* pFnUpdateMouseMove = NULL;

	if ( ! pFnUpdateMouseMove )
		pFnUpdateMouseMove = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.UpdateMouseMove" );

	UNowChildHudDynamicCreature_execUpdateMouseMove_Parms UpdateMouseMove_Parms;
	UpdateMouseMove_Parms.newTurn = newTurn;
	UpdateMouseMove_Parms.newUp = newUp;

	this->ProcessEvent ( pFnUpdateMouseMove, &UpdateMouseMove_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.AddToActiveBtn
// [0x00020002] 
// Parameters infos:
// int                            Add                            ( CPF_Parm )

void UNowChildHudDynamicCreature::AddToActiveBtn ( int Add )
{
	static UFunction* pFnAddToActiveBtn = NULL;

	if ( ! pFnAddToActiveBtn )
		pFnAddToActiveBtn = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.AddToActiveBtn" );

	UNowChildHudDynamicCreature_execAddToActiveBtn_Parms AddToActiveBtn_Parms;
	AddToActiveBtn_Parms.Add = Add;

	this->ProcessEvent ( pFnAddToActiveBtn, &AddToActiveBtn_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.AddToValue
// [0x00020002] 
// Parameters infos:
// int                            Add                            ( CPF_Parm )

void UNowChildHudDynamicCreature::AddToValue ( int Add )
{
	static UFunction* pFnAddToValue = NULL;

	if ( ! pFnAddToValue )
		pFnAddToValue = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.AddToValue" );

	UNowChildHudDynamicCreature_execAddToValue_Parms AddToValue_Parms;
	AddToValue_Parms.Add = Add;

	this->ProcessEvent ( pFnAddToValue, &AddToValue_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.InputTimer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowChildHudDynamicCreature::InputTimer ( )
{
	static UFunction* pFnInputTimer = NULL;

	if ( ! pFnInputTimer )
		pFnInputTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.InputTimer" );

	UNowChildHudDynamicCreature_execInputTimer_Parms InputTimer_Parms;

	this->ProcessEvent ( pFnInputTimer, &InputTimer_Parms, NULL );

	return InputTimer_Parms.ReturnValue;
};

// Function NowGame.NowChildHudDynamicCreature.DrawParamBox
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

void UNowChildHudDynamicCreature::DrawParamBox ( class UCanvas* C, int Index )
{
	static UFunction* pFnDrawParamBox = NULL;

	if ( ! pFnDrawParamBox )
		pFnDrawParamBox = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.DrawParamBox" );

	UNowChildHudDynamicCreature_execDrawParamBox_Parms DrawParamBox_Parms;
	DrawParamBox_Parms.C = C;
	DrawParamBox_Parms.Index = Index;

	this->ProcessEvent ( pFnDrawParamBox, &DrawParamBox_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.DrawCollisionCylinder
// [0x00820002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDynamicCreature::DrawCollisionCylinder ( class UCanvas* C )
{
	static UFunction* pFnDrawCollisionCylinder = NULL;

	if ( ! pFnDrawCollisionCylinder )
		pFnDrawCollisionCylinder = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.DrawCollisionCylinder" );

	UNowChildHudDynamicCreature_execDrawCollisionCylinder_Parms DrawCollisionCylinder_Parms;
	DrawCollisionCylinder_Parms.C = C;

	this->ProcessEvent ( pFnDrawCollisionCylinder, &DrawCollisionCylinder_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.ActionBarSlot
// [0x00820002] 
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UNowChildHudDynamicCreature::ActionBarSlot ( int iSlot )
{
	static UFunction* pFnActionBarSlot = NULL;

	if ( ! pFnActionBarSlot )
		pFnActionBarSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.ActionBarSlot" );

	UNowChildHudDynamicCreature_execActionBarSlot_Parms ActionBarSlot_Parms;
	ActionBarSlot_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnActionBarSlot, &ActionBarSlot_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.DrawChildHud
// [0x00820002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDynamicCreature::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.DrawChildHud" );

	UNowChildHudDynamicCreature_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.InitChildHud
// [0x00820002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHudDynamicCreature::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.InitChildHud" );

	UNowChildHudDynamicCreature_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.DrawMessages
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudDynamicCreature::DrawMessages ( class UCanvas* C )
{
	static UFunction* pFnDrawMessages = NULL;

	if ( ! pFnDrawMessages )
		pFnDrawMessages = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.DrawMessages" );

	UNowChildHudDynamicCreature_execDrawMessages_Parms DrawMessages_Parms;
	DrawMessages_Parms.C = C;

	this->ProcessEvent ( pFnDrawMessages, &DrawMessages_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.AddMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UNowChildHudDynamicCreature::AddMessage ( struct FString msg )
{
	static UFunction* pFnAddMessage = NULL;

	if ( ! pFnAddMessage )
		pFnAddMessage = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.AddMessage" );

	UNowChildHudDynamicCreature_execAddMessage_Parms AddMessage_Parms;
	memcpy ( &AddMessage_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnAddMessage, &AddMessage_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.FancyShot
// [0x00820002] 
// Parameters infos:

void UNowChildHudDynamicCreature::FancyShot ( )
{
	static UFunction* pFnFancyShot = NULL;

	if ( ! pFnFancyShot )
		pFnFancyShot = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.FancyShot" );

	UNowChildHudDynamicCreature_execFancyShot_Parms FancyShot_Parms;

	this->ProcessEvent ( pFnFancyShot, &FancyShot_Parms, NULL );
};

// Function NowGame.NowChildHudDynamicCreature.DoFancyStuff
// [0x00020002] 
// Parameters infos:

void UNowChildHudDynamicCreature::DoFancyStuff ( )
{
	static UFunction* pFnDoFancyStuff = NULL;

	if ( ! pFnDoFancyStuff )
		pFnDoFancyStuff = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudDynamicCreature.DoFancyStuff" );

	UNowChildHudDynamicCreature_execDoFancyStuff_Parms DoFancyStuff_Parms;

	this->ProcessEvent ( pFnDoFancyStuff, &DoFancyStuff_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.GetGFXHud
// [0x00020002] 
// Parameters infos:
// class UNowGFXHudScene*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UNowGFXHudScene* UUIScene_LogWindow::GetGFXHud ( )
{
	static UFunction* pFnGetGFXHud = NULL;

	if ( ! pFnGetGFXHud )
		pFnGetGFXHud = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.GetGFXHud" );

	UUIScene_LogWindow_execGetGFXHud_Parms GetGFXHud_Parms;

	this->ProcessEvent ( pFnGetGFXHud, &GetGFXHud_Parms, NULL );

	return GetGFXHud_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.CheckCommandOk
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WhatCommand                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool UUIScene_LogWindow::CheckCommandOk ( struct FString WhatCommand )
{
	static UFunction* pFnCheckCommandOk = NULL;

	if ( ! pFnCheckCommandOk )
		pFnCheckCommandOk = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.CheckCommandOk" );

	UUIScene_LogWindow_execCheckCommandOk_Parms CheckCommandOk_Parms;
	memcpy ( &CheckCommandOk_Parms.WhatCommand, &WhatCommand, 0xC );

	this->ProcessEvent ( pFnCheckCommandOk, &CheckCommandOk_Parms, NULL );

	return CheckCommandOk_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.DoFriends
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoFriends ( )
{
	static UFunction* pFnDoFriends = NULL;

	if ( ! pFnDoFriends )
		pFnDoFriends = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoFriends" );

	UUIScene_LogWindow_execDoFriends_Parms DoFriends_Parms;

	this->ProcessEvent ( pFnDoFriends, &DoFriends_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoResetUI
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoResetUI ( )
{
	static UFunction* pFnDoResetUI = NULL;

	if ( ! pFnDoResetUI )
		pFnDoResetUI = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoResetUI" );

	UUIScene_LogWindow_execDoResetUI_Parms DoResetUI_Parms;

	this->ProcessEvent ( pFnDoResetUI, &DoResetUI_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoPetInventory
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoPetInventory ( )
{
	static UFunction* pFnDoPetInventory = NULL;

	if ( ! pFnDoPetInventory )
		pFnDoPetInventory = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoPetInventory" );

	UUIScene_LogWindow_execDoPetInventory_Parms DoPetInventory_Parms;

	this->ProcessEvent ( pFnDoPetInventory, &DoPetInventory_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoCallGuards
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoCallGuards ( )
{
	static UFunction* pFnDoCallGuards = NULL;

	if ( ! pFnDoCallGuards )
		pFnDoCallGuards = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoCallGuards" );

	UUIScene_LogWindow_execDoCallGuards_Parms DoCallGuards_Parms;

	this->ProcessEvent ( pFnDoCallGuards, &DoCallGuards_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoShowStatLossCount
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoShowStatLossCount ( )
{
	static UFunction* pFnDoShowStatLossCount = NULL;

	if ( ! pFnDoShowStatLossCount )
		pFnDoShowStatLossCount = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoShowStatLossCount" );

	UUIScene_LogWindow_execDoShowStatLossCount_Parms DoShowStatLossCount_Parms;

	this->ProcessEvent ( pFnDoShowStatLossCount, &DoShowStatLossCount_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoShowMurderCount
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoShowMurderCount ( )
{
	static UFunction* pFnDoShowMurderCount = NULL;

	if ( ! pFnDoShowMurderCount )
		pFnDoShowMurderCount = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoShowMurderCount" );

	UUIScene_LogWindow_execDoShowMurderCount_Parms DoShowMurderCount_Parms;

	this->ProcessEvent ( pFnDoShowMurderCount, &DoShowMurderCount_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoLoot
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoLoot ( )
{
	static UFunction* pFnDoLoot = NULL;

	if ( ! pFnDoLoot )
		pFnDoLoot = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoLoot" );

	UUIScene_LogWindow_execDoLoot_Parms DoLoot_Parms;

	this->ProcessEvent ( pFnDoLoot, &DoLoot_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoResetMC
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoResetMC ( )
{
	static UFunction* pFnDoResetMC = NULL;

	if ( ! pFnDoResetMC )
		pFnDoResetMC = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoResetMC" );

	UUIScene_LogWindow_execDoResetMC_Parms DoResetMC_Parms;

	this->ProcessEvent ( pFnDoResetMC, &DoResetMC_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoCancel
// [0x00020002] 
// Parameters infos:
// TArray< struct FString >       msgParts                       ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::DoCancel ( TArray< struct FString > msgParts )
{
	static UFunction* pFnDoCancel = NULL;

	if ( ! pFnDoCancel )
		pFnDoCancel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoCancel" );

	UUIScene_LogWindow_execDoCancel_Parms DoCancel_Parms;
	memcpy ( &DoCancel_Parms.msgParts, &msgParts, 0xC );

	this->ProcessEvent ( pFnDoCancel, &DoCancel_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.CheckValidTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  TargetActor                    ( CPF_Parm )
// class ANowPawn*                MyPawn                         ( CPF_Parm )

bool UUIScene_LogWindow::CheckValidTarget ( class AActor* TargetActor, class ANowPawn* MyPawn )
{
	static UFunction* pFnCheckValidTarget = NULL;

	if ( ! pFnCheckValidTarget )
		pFnCheckValidTarget = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.CheckValidTarget" );

	UUIScene_LogWindow_execCheckValidTarget_Parms CheckValidTarget_Parms;
	CheckValidTarget_Parms.TargetActor = TargetActor;
	CheckValidTarget_Parms.MyPawn = MyPawn;

	this->ProcessEvent ( pFnCheckValidTarget, &CheckValidTarget_Parms, NULL );

	return CheckValidTarget_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.CheckValidName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 NewName                        ( CPF_Parm | CPF_NeedCtorLink )

struct FString UUIScene_LogWindow::CheckValidName ( struct FString NewName )
{
	static UFunction* pFnCheckValidName = NULL;

	if ( ! pFnCheckValidName )
		pFnCheckValidName = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.CheckValidName" );

	UUIScene_LogWindow_execCheckValidName_Parms CheckValidName_Parms;
	memcpy ( &CheckValidName_Parms.NewName, &NewName, 0xC );

	this->ProcessEvent ( pFnCheckValidName, &CheckValidName_Parms, NULL );

	return CheckValidName_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.IsNumber
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Number                         ( CPF_Parm | CPF_NeedCtorLink )

bool UUIScene_LogWindow::IsNumber ( struct FString Number )
{
	static UFunction* pFnIsNumber = NULL;

	if ( ! pFnIsNumber )
		pFnIsNumber = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.IsNumber" );

	UUIScene_LogWindow_execIsNumber_Parms IsNumber_Parms;
	memcpy ( &IsNumber_Parms.Number, &Number, 0xC );

	this->ProcessEvent ( pFnIsNumber, &IsNumber_Parms, NULL );

	return IsNumber_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.PetCommand
// [0x00024002] 
// Parameters infos:
// TArray< struct FString >       msgParts                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 petName                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::PetCommand ( TArray< struct FString > msgParts, struct FString petName )
{
	static UFunction* pFnPetCommand = NULL;

	if ( ! pFnPetCommand )
		pFnPetCommand = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.PetCommand" );

	UUIScene_LogWindow_execPetCommand_Parms PetCommand_Parms;
	memcpy ( &PetCommand_Parms.msgParts, &msgParts, 0xC );
	memcpy ( &PetCommand_Parms.petName, &petName, 0xC );

	this->ProcessEvent ( pFnPetCommand, &PetCommand_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoEmote
// [0x00020002] 
// Parameters infos:
// TArray< struct FString >       msgParts                       ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::DoEmote ( TArray< struct FString > msgParts )
{
	static UFunction* pFnDoEmote = NULL;

	if ( ! pFnDoEmote )
		pFnDoEmote = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoEmote" );

	UUIScene_LogWindow_execDoEmote_Parms DoEmote_Parms;
	memcpy ( &DoEmote_Parms.msgParts, &msgParts, 0xC );

	this->ProcessEvent ( pFnDoEmote, &DoEmote_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoWhoSetSurName
// [0x00020002] 
// Parameters infos:
// TArray< struct FString >       msgParts                       ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::DoWhoSetSurName ( TArray< struct FString > msgParts )
{
	static UFunction* pFnDoWhoSetSurName = NULL;

	if ( ! pFnDoWhoSetSurName )
		pFnDoWhoSetSurName = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoWhoSetSurName" );

	UUIScene_LogWindow_execDoWhoSetSurName_Parms DoWhoSetSurName_Parms;
	memcpy ( &DoWhoSetSurName_Parms.msgParts, &msgParts, 0xC );

	this->ProcessEvent ( pFnDoWhoSetSurName, &DoWhoSetSurName_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoVersionInfoPrint
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoVersionInfoPrint ( )
{
	static UFunction* pFnDoVersionInfoPrint = NULL;

	if ( ! pFnDoVersionInfoPrint )
		pFnDoVersionInfoPrint = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoVersionInfoPrint" );

	UUIScene_LogWindow_execDoVersionInfoPrint_Parms DoVersionInfoPrint_Parms;

	this->ProcessEvent ( pFnDoVersionInfoPrint, &DoVersionInfoPrint_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.OpenGameMenu
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::OpenGameMenu ( )
{
	static UFunction* pFnOpenGameMenu = NULL;

	if ( ! pFnOpenGameMenu )
		pFnOpenGameMenu = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.OpenGameMenu" );

	UUIScene_LogWindow_execOpenGameMenu_Parms OpenGameMenu_Parms;

	this->ProcessEvent ( pFnOpenGameMenu, &OpenGameMenu_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoTame
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoTame ( )
{
	static UFunction* pFnDoTame = NULL;

	if ( ! pFnDoTame )
		pFnDoTame = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoTame" );

	UUIScene_LogWindow_execDoTame_Parms DoTame_Parms;

	this->ProcessEvent ( pFnDoTame, &DoTame_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoSpellAction
// [0x00020002] 
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )

void UUIScene_LogWindow::DoSpellAction ( int SpellID )
{
	static UFunction* pFnDoSpellAction = NULL;

	if ( ! pFnDoSpellAction )
		pFnDoSpellAction = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoSpellAction" );

	UUIScene_LogWindow_execDoSpellAction_Parms DoSpellAction_Parms;
	DoSpellAction_Parms.SpellID = SpellID;

	this->ProcessEvent ( pFnDoSpellAction, &DoSpellAction_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoTrade
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoTrade ( )
{
	static UFunction* pFnDoTrade = NULL;

	if ( ! pFnDoTrade )
		pFnDoTrade = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoTrade" );

	UUIScene_LogWindow_execDoTrade_Parms DoTrade_Parms;

	this->ProcessEvent ( pFnDoTrade, &DoTrade_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoWhoMePrint
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoWhoMePrint ( )
{
	static UFunction* pFnDoWhoMePrint = NULL;

	if ( ! pFnDoWhoMePrint )
		pFnDoWhoMePrint = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoWhoMePrint" );

	UUIScene_LogWindow_execDoWhoMePrint_Parms DoWhoMePrint_Parms;

	this->ProcessEvent ( pFnDoWhoMePrint, &DoWhoMePrint_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoWhoPrint
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoWhoPrint ( )
{
	static UFunction* pFnDoWhoPrint = NULL;

	if ( ! pFnDoWhoPrint )
		pFnDoWhoPrint = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoWhoPrint" );

	UUIScene_LogWindow_execDoWhoPrint_Parms DoWhoPrint_Parms;

	this->ProcessEvent ( pFnDoWhoPrint, &DoWhoPrint_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoStable
// [0x00020000] 
// Parameters infos:

void UUIScene_LogWindow::DoStable ( )
{
	static UFunction* pFnDoStable = NULL;

	if ( ! pFnDoStable )
		pFnDoStable = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoStable" );

	UUIScene_LogWindow_execDoStable_Parms DoStable_Parms;

	this->ProcessEvent ( pFnDoStable, &DoStable_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoClaim
// [0x00020000] 
// Parameters infos:

void UUIScene_LogWindow::DoClaim ( )
{
	static UFunction* pFnDoClaim = NULL;

	if ( ! pFnDoClaim )
		pFnDoClaim = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoClaim" );

	UUIScene_LogWindow_execDoClaim_Parms DoClaim_Parms;

	this->ProcessEvent ( pFnDoClaim, &DoClaim_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoStuck
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoStuck ( )
{
	static UFunction* pFnDoStuck = NULL;

	if ( ! pFnDoStuck )
		pFnDoStuck = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoStuck" );

	UUIScene_LogWindow_execDoStuck_Parms DoStuck_Parms;

	this->ProcessEvent ( pFnDoStuck, &DoStuck_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoFindUse
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoFindUse ( )
{
	static UFunction* pFnDoFindUse = NULL;

	if ( ! pFnDoFindUse )
		pFnDoFindUse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoFindUse" );

	UUIScene_LogWindow_execDoFindUse_Parms DoFindUse_Parms;

	this->ProcessEvent ( pFnDoFindUse, &DoFindUse_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.HandleAiCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )

bool UUIScene_LogWindow::HandleAiCommand ( struct FString sCommand )
{
	static UFunction* pFnHandleAiCommand = NULL;

	if ( ! pFnHandleAiCommand )
		pFnHandleAiCommand = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.HandleAiCommand" );

	UUIScene_LogWindow_execHandleAiCommand_Parms HandleAiCommand_Parms;
	memcpy ( &HandleAiCommand_Parms.sCommand, &sCommand, 0xC );

	this->ProcessEvent ( pFnHandleAiCommand, &HandleAiCommand_Parms, NULL );

	return HandleAiCommand_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.DoModCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::DoModCommand ( struct FString sCommand, struct FString msg )
{
	static UFunction* pFnDoModCommand = NULL;

	if ( ! pFnDoModCommand )
		pFnDoModCommand = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoModCommand" );

	UUIScene_LogWindow_execDoModCommand_Parms DoModCommand_Parms;
	memcpy ( &DoModCommand_Parms.sCommand, &sCommand, 0xC );
	memcpy ( &DoModCommand_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnDoModCommand, &DoModCommand_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoYell
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::DoYell ( struct FString msg )
{
	static UFunction* pFnDoYell = NULL;

	if ( ! pFnDoYell )
		pFnDoYell = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoYell" );

	UUIScene_LogWindow_execDoYell_Parms DoYell_Parms;
	memcpy ( &DoYell_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnDoYell, &DoYell_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoReplyToWhisper
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::DoReplyToWhisper ( struct FString msg )
{
	static UFunction* pFnDoReplyToWhisper = NULL;

	if ( ! pFnDoReplyToWhisper )
		pFnDoReplyToWhisper = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoReplyToWhisper" );

	UUIScene_LogWindow_execDoReplyToWhisper_Parms DoReplyToWhisper_Parms;
	memcpy ( &DoReplyToWhisper_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnDoReplyToWhisper, &DoReplyToWhisper_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoWhisper
// [0x00020002] 
// Parameters infos:
// struct FString                 sTarget                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::DoWhisper ( struct FString sTarget, struct FString msg )
{
	static UFunction* pFnDoWhisper = NULL;

	if ( ! pFnDoWhisper )
		pFnDoWhisper = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoWhisper" );

	UUIScene_LogWindow_execDoWhisper_Parms DoWhisper_Parms;
	memcpy ( &DoWhisper_Parms.sTarget, &sTarget, 0xC );
	memcpy ( &DoWhisper_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnDoWhisper, &DoWhisper_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoFriendCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 sTarget                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::DoFriendCommand ( struct FString sTarget, struct FString msg )
{
	static UFunction* pFnDoFriendCommand = NULL;

	if ( ! pFnDoFriendCommand )
		pFnDoFriendCommand = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoFriendCommand" );

	UUIScene_LogWindow_execDoFriendCommand_Parms DoFriendCommand_Parms;
	memcpy ( &DoFriendCommand_Parms.sTarget, &sTarget, 0xC );
	memcpy ( &DoFriendCommand_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnDoFriendCommand, &DoFriendCommand_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoGMChat
// [0x00020002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::DoGMChat ( struct FString sCommand, struct FString msg )
{
	static UFunction* pFnDoGMChat = NULL;

	if ( ! pFnDoGMChat )
		pFnDoGMChat = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoGMChat" );

	UUIScene_LogWindow_execDoGMChat_Parms DoGMChat_Parms;
	memcpy ( &DoGMChat_Parms.sCommand, &sCommand, 0xC );
	memcpy ( &DoGMChat_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnDoGMChat, &DoGMChat_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoHelpCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::DoHelpCommand ( struct FString msg )
{
	static UFunction* pFnDoHelpCommand = NULL;

	if ( ! pFnDoHelpCommand )
		pFnDoHelpCommand = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoHelpCommand" );

	UUIScene_LogWindow_execDoHelpCommand_Parms DoHelpCommand_Parms;
	memcpy ( &DoHelpCommand_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnDoHelpCommand, &DoHelpCommand_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoGuildCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::DoGuildCommand ( struct FString sCommand, struct FString msg )
{
	static UFunction* pFnDoGuildCommand = NULL;

	if ( ! pFnDoGuildCommand )
		pFnDoGuildCommand = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoGuildCommand" );

	UUIScene_LogWindow_execDoGuildCommand_Parms DoGuildCommand_Parms;
	memcpy ( &DoGuildCommand_Parms.sCommand, &sCommand, 0xC );
	memcpy ( &DoGuildCommand_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnDoGuildCommand, &DoGuildCommand_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoTerritoryCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 sCommand                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::DoTerritoryCommand ( struct FString sCommand, struct FString msg )
{
	static UFunction* pFnDoTerritoryCommand = NULL;

	if ( ! pFnDoTerritoryCommand )
		pFnDoTerritoryCommand = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoTerritoryCommand" );

	UUIScene_LogWindow_execDoTerritoryCommand_Parms DoTerritoryCommand_Parms;
	memcpy ( &DoTerritoryCommand_Parms.sCommand, &sCommand, 0xC );
	memcpy ( &DoTerritoryCommand_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnDoTerritoryCommand, &DoTerritoryCommand_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoOpenPetitionListScene
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoOpenPetitionListScene ( )
{
	static UFunction* pFnDoOpenPetitionListScene = NULL;

	if ( ! pFnDoOpenPetitionListScene )
		pFnDoOpenPetitionListScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoOpenPetitionListScene" );

	UUIScene_LogWindow_execDoOpenPetitionListScene_Parms DoOpenPetitionListScene_Parms;

	this->ProcessEvent ( pFnDoOpenPetitionListScene, &DoOpenPetitionListScene_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DoOpenPetitionScene
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::DoOpenPetitionScene ( )
{
	static UFunction* pFnDoOpenPetitionScene = NULL;

	if ( ! pFnDoOpenPetitionScene )
		pFnDoOpenPetitionScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DoOpenPetitionScene" );

	UUIScene_LogWindow_execDoOpenPetitionScene_Parms DoOpenPetitionScene_Parms;

	this->ProcessEvent ( pFnDoOpenPetitionScene, &DoOpenPetitionScene_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.CommandParser
// [0x00020002] 
// Parameters infos:
// struct FString                 InText                         ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::CommandParser ( struct FString InText )
{
	static UFunction* pFnCommandParser = NULL;

	if ( ! pFnCommandParser )
		pFnCommandParser = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.CommandParser" );

	UUIScene_LogWindow_execCommandParser_Parms CommandParser_Parms;
	memcpy ( &CommandParser_Parms.InText, &InText, 0xC );

	this->ProcessEvent ( pFnCommandParser, &CommandParser_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.UpdateLastWhereAmITime
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::UpdateLastWhereAmITime ( )
{
	static UFunction* pFnUpdateLastWhereAmITime = NULL;

	if ( ! pFnUpdateLastWhereAmITime )
		pFnUpdateLastWhereAmITime = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.UpdateLastWhereAmITime" );

	UUIScene_LogWindow_execUpdateLastWhereAmITime_Parms UpdateLastWhereAmITime_Parms;

	this->ProcessEvent ( pFnUpdateLastWhereAmITime, &UpdateLastWhereAmITime_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.UpdateLastChatCommandTime
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::UpdateLastChatCommandTime ( )
{
	static UFunction* pFnUpdateLastChatCommandTime = NULL;

	if ( ! pFnUpdateLastChatCommandTime )
		pFnUpdateLastChatCommandTime = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.UpdateLastChatCommandTime" );

	UUIScene_LogWindow_execUpdateLastChatCommandTime_Parms UpdateLastChatCommandTime_Parms;

	this->ProcessEvent ( pFnUpdateLastChatCommandTime, &UpdateLastChatCommandTime_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.CancelTyping
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::CancelTyping ( )
{
	static UFunction* pFnCancelTyping = NULL;

	if ( ! pFnCancelTyping )
		pFnCancelTyping = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.CancelTyping" );

	UUIScene_LogWindow_execCancelTyping_Parms CancelTyping_Parms;

	this->ProcessEvent ( pFnCancelTyping, &CancelTyping_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.PreFillChatMsg
// [0x00020002] 
// Parameters infos:
// struct FString                 preFill                        ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::PreFillChatMsg ( struct FString preFill )
{
	static UFunction* pFnPreFillChatMsg = NULL;

	if ( ! pFnPreFillChatMsg )
		pFnPreFillChatMsg = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.PreFillChatMsg" );

	UUIScene_LogWindow_execPreFillChatMsg_Parms PreFillChatMsg_Parms;
	memcpy ( &PreFillChatMsg_Parms.preFill, &preFill, 0xC );

	this->ProcessEvent ( pFnPreFillChatMsg, &PreFillChatMsg_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.HandleInputText
// [0x00020002] 
// Parameters infos:
// struct FString                 InText                         ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::HandleInputText ( struct FString InText )
{
	static UFunction* pFnHandleInputText = NULL;

	if ( ! pFnHandleInputText )
		pFnHandleInputText = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.HandleInputText" );

	UUIScene_LogWindow_execHandleInputText_Parms HandleInputText_Parms;
	memcpy ( &HandleInputText_Parms.InText, &InText, 0xC );

	this->ProcessEvent ( pFnHandleInputText, &HandleInputText_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.CheckChatText
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 InText                         ( CPF_Parm | CPF_NeedCtorLink )

bool UUIScene_LogWindow::CheckChatText ( struct FString InText )
{
	static UFunction* pFnCheckChatText = NULL;

	if ( ! pFnCheckChatText )
		pFnCheckChatText = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.CheckChatText" );

	UUIScene_LogWindow_execCheckChatText_Parms CheckChatText_Parms;
	memcpy ( &CheckChatText_Parms.InText, &InText, 0xC );

	this->ProcessEvent ( pFnCheckChatText, &CheckChatText_Parms, NULL );

	return CheckChatText_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.CheckOkChar
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 InText                         ( CPF_Parm | CPF_NeedCtorLink )

bool UUIScene_LogWindow::CheckOkChar ( struct FString InText )
{
	static UFunction* pFnCheckOkChar = NULL;

	if ( ! pFnCheckOkChar )
		pFnCheckOkChar = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.CheckOkChar" );

	UUIScene_LogWindow_execCheckOkChar_Parms CheckOkChar_Parms;
	memcpy ( &CheckOkChar_Parms.InText, &InText, 0xC );

	this->ProcessEvent ( pFnCheckOkChar, &CheckOkChar_Parms, NULL );

	return CheckOkChar_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.TestSetFocus
// [0x00024002] 
// Parameters infos:
// struct FString                 preFill                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::TestSetFocus ( struct FString preFill )
{
	static UFunction* pFnTestSetFocus = NULL;

	if ( ! pFnTestSetFocus )
		pFnTestSetFocus = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.TestSetFocus" );

	UUIScene_LogWindow_execTestSetFocus_Parms TestSetFocus_Parms;
	memcpy ( &TestSetFocus_Parms.preFill, &preFill, 0xC );

	this->ProcessEvent ( pFnTestSetFocus, &TestSetFocus_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.OnChatSubmitText
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIEditBox*              Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_LogWindow::OnChatSubmitText ( class UUIEditBox* Sender, int PlayerIndex )
{
	static UFunction* pFnOnChatSubmitText = NULL;

	if ( ! pFnOnChatSubmitText )
		pFnOnChatSubmitText = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.OnChatSubmitText" );

	UUIScene_LogWindow_execOnChatSubmitText_Parms OnChatSubmitText_Parms;
	OnChatSubmitText_Parms.Sender = Sender;
	OnChatSubmitText_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnChatSubmitText, &OnChatSubmitText_Parms, NULL );

	return OnChatSubmitText_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.OnChatRawInputKey
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FInputEventParameters   EventParms                     ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UUIScene_LogWindow::OnChatRawInputKey ( struct FInputEventParameters* EventParms )
{
	static UFunction* pFnOnChatRawInputKey = NULL;

	if ( ! pFnOnChatRawInputKey )
		pFnOnChatRawInputKey = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.OnChatRawInputKey" );

	UUIScene_LogWindow_execOnChatRawInputKey_Parms OnChatRawInputKey_Parms;

	this->ProcessEvent ( pFnOnChatRawInputKey, &OnChatRawInputKey_Parms, NULL );

	if ( EventParms )
		memcpy ( EventParms, &OnChatRawInputKey_Parms.EventParms, 0x20 );

	return OnChatRawInputKey_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.Clicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_LogWindow::Clicked ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnClicked = NULL;

	if ( ! pFnClicked )
		pFnClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.Clicked" );

	UUIScene_LogWindow_execClicked_Parms Clicked_Parms;
	Clicked_Parms.O = O;
	Clicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnClicked, &Clicked_Parms, NULL );

	return Clicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.SetTextFontByType
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 InTextType                     ( CPF_Parm | CPF_NeedCtorLink )

bool UUIScene_LogWindow::SetTextFontByType ( struct FString InTextType )
{
	static UFunction* pFnSetTextFontByType = NULL;

	if ( ! pFnSetTextFontByType )
		pFnSetTextFontByType = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.SetTextFontByType" );

	UUIScene_LogWindow_execSetTextFontByType_Parms SetTextFontByType_Parms;
	memcpy ( &SetTextFontByType_Parms.InTextType, &InTextType, 0xC );

	this->ProcessEvent ( pFnSetTextFontByType, &SetTextFontByType_Parms, NULL );

	return SetTextFontByType_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.GetTextFontCode
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UUIScene_LogWindow::GetTextFontCode ( )
{
	static UFunction* pFnGetTextFontCode = NULL;

	if ( ! pFnGetTextFontCode )
		pFnGetTextFontCode = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.GetTextFontCode" );

	UUIScene_LogWindow_execGetTextFontCode_Parms GetTextFontCode_Parms;

	this->ProcessEvent ( pFnGetTextFontCode, &GetTextFontCode_Parms, NULL );

	return GetTextFontCode_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.SetTextColorByType
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 InTextType                     ( CPF_Parm | CPF_NeedCtorLink )

bool UUIScene_LogWindow::SetTextColorByType ( struct FString InTextType )
{
	static UFunction* pFnSetTextColorByType = NULL;

	if ( ! pFnSetTextColorByType )
		pFnSetTextColorByType = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.SetTextColorByType" );

	UUIScene_LogWindow_execSetTextColorByType_Parms SetTextColorByType_Parms;
	memcpy ( &SetTextColorByType_Parms.InTextType, &InTextType, 0xC );

	this->ProcessEvent ( pFnSetTextColorByType, &SetTextColorByType_Parms, NULL );

	return SetTextColorByType_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.GetTextColorCode
// [0x00820002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UUIScene_LogWindow::GetTextColorCode ( )
{
	static UFunction* pFnGetTextColorCode = NULL;

	if ( ! pFnGetTextColorCode )
		pFnGetTextColorCode = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.GetTextColorCode" );

	UUIScene_LogWindow_execGetTextColorCode_Parms GetTextColorCode_Parms;

	this->ProcessEvent ( pFnGetTextColorCode, &GetTextColorCode_Parms, NULL );

	return GetTextColorCode_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.SendEvent
// [0x00024002] 
// Parameters infos:
// struct FName                   InEvent                        ( CPF_Parm )
// struct FString                 InType                         ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct FString                 InMsg                          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::SendEvent ( struct FName InEvent, struct FString InType, struct FString InMsg )
{
	static UFunction* pFnSendEvent = NULL;

	if ( ! pFnSendEvent )
		pFnSendEvent = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.SendEvent" );

	UUIScene_LogWindow_execSendEvent_Parms SendEvent_Parms;
	memcpy ( &SendEvent_Parms.InEvent, &InEvent, 0x8 );
	memcpy ( &SendEvent_Parms.InType, &InType, 0xC );
	memcpy ( &SendEvent_Parms.InMsg, &InMsg, 0xC );

	this->ProcessEvent ( pFnSendEvent, &SendEvent_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.ClearParseCommands
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::ClearParseCommands ( )
{
	static UFunction* pFnClearParseCommands = NULL;

	if ( ! pFnClearParseCommands )
		pFnClearParseCommands = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.ClearParseCommands" );

	UUIScene_LogWindow_execClearParseCommands_Parms ClearParseCommands_Parms;

	this->ProcessEvent ( pFnClearParseCommands, &ClearParseCommands_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.PrevParseCommand
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::PrevParseCommand ( )
{
	static UFunction* pFnPrevParseCommand = NULL;

	if ( ! pFnPrevParseCommand )
		pFnPrevParseCommand = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.PrevParseCommand" );

	UUIScene_LogWindow_execPrevParseCommand_Parms PrevParseCommand_Parms;

	this->ProcessEvent ( pFnPrevParseCommand, &PrevParseCommand_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.NextParseCommand
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::NextParseCommand ( )
{
	static UFunction* pFnNextParseCommand = NULL;

	if ( ! pFnNextParseCommand )
		pFnNextParseCommand = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.NextParseCommand" );

	UUIScene_LogWindow_execNextParseCommand_Parms NextParseCommand_Parms;

	this->ProcessEvent ( pFnNextParseCommand, &NextParseCommand_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.InsertParseCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 NewCommand                     ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::InsertParseCommand ( struct FString NewCommand )
{
	static UFunction* pFnInsertParseCommand = NULL;

	if ( ! pFnInsertParseCommand )
		pFnInsertParseCommand = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.InsertParseCommand" );

	UUIScene_LogWindow_execInsertParseCommand_Parms InsertParseCommand_Parms;
	memcpy ( &InsertParseCommand_Parms.NewCommand, &NewCommand, 0xC );

	this->ProcessEvent ( pFnInsertParseCommand, &InsertParseCommand_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.DrawParseCommands
// [0x00020002] 
// Parameters infos:
// int                            WhatCommand                    ( CPF_Parm )

void UUIScene_LogWindow::DrawParseCommands ( int WhatCommand )
{
	static UFunction* pFnDrawParseCommands = NULL;

	if ( ! pFnDrawParseCommands )
		pFnDrawParseCommands = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.DrawParseCommands" );

	UUIScene_LogWindow_execDrawParseCommands_Parms DrawParseCommands_Parms;
	DrawParseCommands_Parms.WhatCommand = WhatCommand;

	this->ProcessEvent ( pFnDrawParseCommands, &DrawParseCommands_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.ParseInput
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::ParseInput ( )
{
	static UFunction* pFnParseInput = NULL;

	if ( ! pFnParseInput )
		pFnParseInput = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.ParseInput" );

	UUIScene_LogWindow_execParseInput_Parms ParseInput_Parms;

	this->ProcessEvent ( pFnParseInput, &ParseInput_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.CalcManualChat
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::CalcManualChat ( )
{
	static UFunction* pFnCalcManualChat = NULL;

	if ( ! pFnCalcManualChat )
		pFnCalcManualChat = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.CalcManualChat" );

	UUIScene_LogWindow_execCalcManualChat_Parms CalcManualChat_Parms;

	this->ProcessEvent ( pFnCalcManualChat, &CalcManualChat_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.CalculateFormatLines
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::CalculateFormatLines ( )
{
	static UFunction* pFnCalculateFormatLines = NULL;

	if ( ! pFnCalculateFormatLines )
		pFnCalculateFormatLines = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.CalculateFormatLines" );

	UUIScene_LogWindow_execCalculateFormatLines_Parms CalculateFormatLines_Parms;

	this->ProcessEvent ( pFnCalculateFormatLines, &CalculateFormatLines_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.CalcChatSize
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::CalcChatSize ( )
{
	static UFunction* pFnCalcChatSize = NULL;

	if ( ! pFnCalcChatSize )
		pFnCalcChatSize = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.CalcChatSize" );

	UUIScene_LogWindow_execCalcChatSize_Parms CalcChatSize_Parms;

	this->ProcessEvent ( pFnCalcChatSize, &CalcChatSize_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.OutputTextLine
// [0x00024002] 
// Parameters infos:
// struct FString                 InText                         ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// struct FString                 InTextType                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::OutputTextLine ( struct FString InText, struct FString InTextType )
{
	static UFunction* pFnOutputTextLine = NULL;

	if ( ! pFnOutputTextLine )
		pFnOutputTextLine = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.OutputTextLine" );

	UUIScene_LogWindow_execOutputTextLine_Parms OutputTextLine_Parms;
	memcpy ( &OutputTextLine_Parms.InText, &InText, 0xC );
	memcpy ( &OutputTextLine_Parms.InTextType, &InTextType, 0xC );

	this->ProcessEvent ( pFnOutputTextLine, &OutputTextLine_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.formatStringIntoChat
// [0x00020002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_LogWindow::formatStringIntoChat ( struct FString Text )
{
	static UFunction* pFnformatStringIntoChat = NULL;

	if ( ! pFnformatStringIntoChat )
		pFnformatStringIntoChat = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.formatStringIntoChat" );

	UUIScene_LogWindow_execformatStringIntoChat_Parms formatStringIntoChat_Parms;
	memcpy ( &formatStringIntoChat_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnformatStringIntoChat, &formatStringIntoChat_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.incrementBottomChatLine
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::incrementBottomChatLine ( )
{
	static UFunction* pFnincrementBottomChatLine = NULL;

	if ( ! pFnincrementBottomChatLine )
		pFnincrementBottomChatLine = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.incrementBottomChatLine" );

	UUIScene_LogWindow_execincrementBottomChatLine_Parms incrementBottomChatLine_Parms;

	this->ProcessEvent ( pFnincrementBottomChatLine, &incrementBottomChatLine_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.LogClientRegionCalculated
// [0x00020002] 
// Parameters infos:

void UUIScene_LogWindow::LogClientRegionCalculated ( )
{
	static UFunction* pFnLogClientRegionCalculated = NULL;

	if ( ! pFnLogClientRegionCalculated )
		pFnLogClientRegionCalculated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.LogClientRegionCalculated" );

	UUIScene_LogWindow_execLogClientRegionCalculated_Parms LogClientRegionCalculated_Parms;

	this->ProcessEvent ( pFnLogClientRegionCalculated, &LogClientRegionCalculated_Parms, NULL );
};

// Function NowGame.UIScene_LogWindow.GoUp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_LogWindow::GoUp ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnGoUp = NULL;

	if ( ! pFnGoUp )
		pFnGoUp = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.GoUp" );

	UUIScene_LogWindow_execGoUp_Parms GoUp_Parms;
	GoUp_Parms.EventObject = EventObject;
	GoUp_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnGoUp, &GoUp_Parms, NULL );

	return GoUp_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.SetBot
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_LogWindow::SetBot ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnSetBot = NULL;

	if ( ! pFnSetBot )
		pFnSetBot = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.SetBot" );

	UUIScene_LogWindow_execSetBot_Parms SetBot_Parms;
	SetBot_Parms.EventObject = EventObject;
	SetBot_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnSetBot, &SetBot_Parms, NULL );

	return SetBot_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.GoDown
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_LogWindow::GoDown ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnGoDown = NULL;

	if ( ! pFnGoDown )
		pFnGoDown = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.GoDown" );

	UUIScene_LogWindow_execGoDown_Parms GoDown_Parms;
	GoDown_Parms.EventObject = EventObject;
	GoDown_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnGoDown, &GoDown_Parms, NULL );

	return GoDown_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.OnToggleBackground
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_LogWindow::OnToggleBackground ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnToggleBackground = NULL;

	if ( ! pFnOnToggleBackground )
		pFnOnToggleBackground = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.OnToggleBackground" );

	UUIScene_LogWindow_execOnToggleBackground_Parms OnToggleBackground_Parms;
	OnToggleBackground_Parms.EventObject = EventObject;
	OnToggleBackground_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnToggleBackground, &OnToggleBackground_Parms, NULL );

	return OnToggleBackground_Parms.ReturnValue;
};

// Function NowGame.UIScene_LogWindow.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_LogWindow::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LogWindow.InitScene" );

	UUIScene_LogWindow_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.NowChildHudMath.DrawCircle
// [0x00820002] 
// Parameters infos:
// struct FVector                 pos                            ( CPF_Parm )
// float                          area                           ( CPF_Parm )
// int                            R                              ( CPF_Parm )
// int                            G                              ( CPF_Parm )
// int                            B                              ( CPF_Parm )
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudMath::DrawCircle ( struct FVector pos, float area, int R, int G, int B, class UCanvas* C )
{
	static UFunction* pFnDrawCircle = NULL;

	if ( ! pFnDrawCircle )
		pFnDrawCircle = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudMath.DrawCircle" );

	UNowChildHudMath_execDrawCircle_Parms DrawCircle_Parms;
	memcpy ( &DrawCircle_Parms.pos, &pos, 0xC );
	DrawCircle_Parms.area = area;
	DrawCircle_Parms.R = R;
	DrawCircle_Parms.G = G;
	DrawCircle_Parms.B = B;
	DrawCircle_Parms.C = C;

	this->ProcessEvent ( pFnDrawCircle, &DrawCircle_Parms, NULL );
};

// Function NowGame.NowChildHudMath.CalcArea
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UCanvas*                 C                              ( CPF_Parm )

float UNowChildHudMath::CalcArea ( class UCanvas* C )
{
	static UFunction* pFnCalcArea = NULL;

	if ( ! pFnCalcArea )
		pFnCalcArea = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudMath.CalcArea" );

	UNowChildHudMath_execCalcArea_Parms CalcArea_Parms;
	CalcArea_Parms.C = C;

	this->ProcessEvent ( pFnCalcArea, &CalcArea_Parms, NULL );

	return CalcArea_Parms.ReturnValue;
};

// Function NowGame.NowChildHudMath.MonteCarloCalc
// [0x00820002] 
// Parameters infos:

void UNowChildHudMath::MonteCarloCalc ( )
{
	static UFunction* pFnMonteCarloCalc = NULL;

	if ( ! pFnMonteCarloCalc )
		pFnMonteCarloCalc = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudMath.MonteCarloCalc" );

	UNowChildHudMath_execMonteCarloCalc_Parms MonteCarloCalc_Parms;

	this->ProcessEvent ( pFnMonteCarloCalc, &MonteCarloCalc_Parms, NULL );
};

// Function NowGame.NowChildHudMath.ResetMonteCarloCalc
// [0x00020002] 
// Parameters infos:
// int                            NrTest                         ( CPF_Parm )

void UNowChildHudMath::ResetMonteCarloCalc ( int NrTest )
{
	static UFunction* pFnResetMonteCarloCalc = NULL;

	if ( ! pFnResetMonteCarloCalc )
		pFnResetMonteCarloCalc = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudMath.ResetMonteCarloCalc" );

	UNowChildHudMath_execResetMonteCarloCalc_Parms ResetMonteCarloCalc_Parms;
	ResetMonteCarloCalc_Parms.NrTest = NrTest;

	this->ProcessEvent ( pFnResetMonteCarloCalc, &ResetMonteCarloCalc_Parms, NULL );
};

// Function NowGame.NowChildHudMath.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudMath::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudMath.DrawChildHud" );

	UNowChildHudMath_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.RHoldTab
// [0x00020000] 
// Parameters infos:

void UNowChildHudProjectile::RHoldTab ( )
{
	static UFunction* pFnRHoldTab = NULL;

	if ( ! pFnRHoldTab )
		pFnRHoldTab = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.RHoldTab" );

	UNowChildHudProjectile_execRHoldTab_Parms RHoldTab_Parms;

	this->ProcessEvent ( pFnRHoldTab, &RHoldTab_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.ToggleCombatMode
// [0x00020002] 
// Parameters infos:

void UNowChildHudProjectile::ToggleCombatMode ( )
{
	static UFunction* pFnToggleCombatMode = NULL;

	if ( ! pFnToggleCombatMode )
		pFnToggleCombatMode = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.ToggleCombatMode" );

	UNowChildHudProjectile_execToggleCombatMode_Parms ToggleCombatMode_Parms;

	this->ProcessEvent ( pFnToggleCombatMode, &ToggleCombatMode_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.SprintOn
// [0x00020000] 
// Parameters infos:

void UNowChildHudProjectile::SprintOn ( )
{
	static UFunction* pFnSprintOn = NULL;

	if ( ! pFnSprintOn )
		pFnSprintOn = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.SprintOn" );

	UNowChildHudProjectile_execSprintOn_Parms SprintOn_Parms;

	this->ProcessEvent ( pFnSprintOn, &SprintOn_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.StopAltFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudProjectile::StopAltFire ( )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.StopAltFire" );

	UNowChildHudProjectile_execStopAltFire_Parms StopAltFire_Parms;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.StartAltFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudProjectile::StartAltFire ( )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.StartAltFire" );

	UNowChildHudProjectile_execStartAltFire_Parms StartAltFire_Parms;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.StopFire
// [0x00020002] 
// Parameters infos:

void UNowChildHudProjectile::StopFire ( )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.StopFire" );

	UNowChildHudProjectile_execStopFire_Parms StopFire_Parms;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.StartFire
// [0x00020000] 
// Parameters infos:

void UNowChildHudProjectile::StartFire ( )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.StartFire" );

	UNowChildHudProjectile_execStartFire_Parms StartFire_Parms;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.UpdateMouseMove
// [0x00820002] 
// Parameters infos:
// float                          newTurn                        ( CPF_Parm )
// float                          newUp                          ( CPF_Parm )

void UNowChildHudProjectile::UpdateMouseMove ( float newTurn, float newUp )
{
	static UFunction* pFnUpdateMouseMove = NULL;

	if ( ! pFnUpdateMouseMove )
		pFnUpdateMouseMove = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.UpdateMouseMove" );

	UNowChildHudProjectile_execUpdateMouseMove_Parms UpdateMouseMove_Parms;
	UpdateMouseMove_Parms.newTurn = newTurn;
	UpdateMouseMove_Parms.newUp = newUp;

	this->ProcessEvent ( pFnUpdateMouseMove, &UpdateMouseMove_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.AddToActiveBtn
// [0x00020002] 
// Parameters infos:
// int                            Add                            ( CPF_Parm )

void UNowChildHudProjectile::AddToActiveBtn ( int Add )
{
	static UFunction* pFnAddToActiveBtn = NULL;

	if ( ! pFnAddToActiveBtn )
		pFnAddToActiveBtn = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.AddToActiveBtn" );

	UNowChildHudProjectile_execAddToActiveBtn_Parms AddToActiveBtn_Parms;
	AddToActiveBtn_Parms.Add = Add;

	this->ProcessEvent ( pFnAddToActiveBtn, &AddToActiveBtn_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.AddToValue
// [0x00020002] 
// Parameters infos:
// int                            Add                            ( CPF_Parm )

void UNowChildHudProjectile::AddToValue ( int Add )
{
	static UFunction* pFnAddToValue = NULL;

	if ( ! pFnAddToValue )
		pFnAddToValue = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.AddToValue" );

	UNowChildHudProjectile_execAddToValue_Parms AddToValue_Parms;
	AddToValue_Parms.Add = Add;

	this->ProcessEvent ( pFnAddToValue, &AddToValue_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.InputTimer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UNowChildHudProjectile::InputTimer ( )
{
	static UFunction* pFnInputTimer = NULL;

	if ( ! pFnInputTimer )
		pFnInputTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.InputTimer" );

	UNowChildHudProjectile_execInputTimer_Parms InputTimer_Parms;

	this->ProcessEvent ( pFnInputTimer, &InputTimer_Parms, NULL );

	return InputTimer_Parms.ReturnValue;
};

// Function NowGame.NowChildHudProjectile.DrawParamBox
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

void UNowChildHudProjectile::DrawParamBox ( class UCanvas* C, int Index )
{
	static UFunction* pFnDrawParamBox = NULL;

	if ( ! pFnDrawParamBox )
		pFnDrawParamBox = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.DrawParamBox" );

	UNowChildHudProjectile_execDrawParamBox_Parms DrawParamBox_Parms;
	DrawParamBox_Parms.C = C;
	DrawParamBox_Parms.Index = Index;

	this->ProcessEvent ( pFnDrawParamBox, &DrawParamBox_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.ActionBarSlot
// [0x00020002] 
// Parameters infos:
// int                            iSlot                          ( CPF_Parm )

void UNowChildHudProjectile::ActionBarSlot ( int iSlot )
{
	static UFunction* pFnActionBarSlot = NULL;

	if ( ! pFnActionBarSlot )
		pFnActionBarSlot = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.ActionBarSlot" );

	UNowChildHudProjectile_execActionBarSlot_Parms ActionBarSlot_Parms;
	ActionBarSlot_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnActionBarSlot, &ActionBarSlot_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.DrawChildHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 C                              ( CPF_Parm )

void UNowChildHudProjectile::DrawChildHud ( class UCanvas* C )
{
	static UFunction* pFnDrawChildHud = NULL;

	if ( ! pFnDrawChildHud )
		pFnDrawChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.DrawChildHud" );

	UNowChildHudProjectile_execDrawChildHud_Parms DrawChildHud_Parms;
	DrawChildHud_Parms.C = C;

	this->ProcessEvent ( pFnDrawChildHud, &DrawChildHud_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.SpawnProjectile
// [0x00020002] 
// Parameters infos:

void UNowChildHudProjectile::SpawnProjectile ( )
{
	static UFunction* pFnSpawnProjectile = NULL;

	if ( ! pFnSpawnProjectile )
		pFnSpawnProjectile = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.SpawnProjectile" );

	UNowChildHudProjectile_execSpawnProjectile_Parms SpawnProjectile_Parms;

	this->ProcessEvent ( pFnSpawnProjectile, &SpawnProjectile_Parms, NULL );
};

// Function NowGame.NowChildHudProjectile.InitChildHud
// [0x00020002] 
// Parameters infos:
// class ANowHUD*                 InitParentHud                  ( CPF_Parm )

void UNowChildHudProjectile::InitChildHud ( class ANowHUD* InitParentHud )
{
	static UFunction* pFnInitChildHud = NULL;

	if ( ! pFnInitChildHud )
		pFnInitChildHud = UObject::FindObject< UFunction > ( "Function NowGame.NowChildHudProjectile.InitChildHud" );

	UNowChildHudProjectile_execInitChildHud_Parms InitChildHud_Parms;
	InitChildHud_Parms.InitParentHud = InitParentHud;

	this->ProcessEvent ( pFnInitChildHud, &InitChildHud_Parms, NULL );
};

// Function NowGame.NowProjectileBase.DidImpact
// [0x00020002] 
// Parameters infos:

void ANowProjectileBase::DidImpact ( )
{
	static UFunction* pFnDidImpact = NULL;

	if ( ! pFnDidImpact )
		pFnDidImpact = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileBase.DidImpact" );

	ANowProjectileBase_execDidImpact_Parms DidImpact_Parms;

	this->ProcessEvent ( pFnDidImpact, &DidImpact_Parms, NULL );
};

// Function NowGame.NowProjectileBase.TickMainParticles
// [0x00020000] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowProjectileBase::TickMainParticles ( float DT )
{
	static UFunction* pFnTickMainParticles = NULL;

	if ( ! pFnTickMainParticles )
		pFnTickMainParticles = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileBase.TickMainParticles" );

	ANowProjectileBase_execTickMainParticles_Parms TickMainParticles_Parms;
	TickMainParticles_Parms.DT = DT;

	this->ProcessEvent ( pFnTickMainParticles, &TickMainParticles_Parms, NULL );
};

// Function NowGame.NowProjectileBase.TickInitParticles
// [0x00020000] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowProjectileBase::TickInitParticles ( float DT )
{
	static UFunction* pFnTickInitParticles = NULL;

	if ( ! pFnTickInitParticles )
		pFnTickInitParticles = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileBase.TickInitParticles" );

	ANowProjectileBase_execTickInitParticles_Parms TickInitParticles_Parms;
	TickInitParticles_Parms.DT = DT;

	this->ProcessEvent ( pFnTickInitParticles, &TickInitParticles_Parms, NULL );
};

// Function NowGame.NowProjectileBase.TickTrails
// [0x00020000] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowProjectileBase::TickTrails ( float DT )
{
	static UFunction* pFnTickTrails = NULL;

	if ( ! pFnTickTrails )
		pFnTickTrails = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileBase.TickTrails" );

	ANowProjectileBase_execTickTrails_Parms TickTrails_Parms;
	TickTrails_Parms.DT = DT;

	this->ProcessEvent ( pFnTickTrails, &TickTrails_Parms, NULL );
};

// Function NowGame.NowProjectileBase.TickRot
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowProjectileBase::TickRot ( float DT )
{
	static UFunction* pFnTickRot = NULL;

	if ( ! pFnTickRot )
		pFnTickRot = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileBase.TickRot" );

	ANowProjectileBase_execTickRot_Parms TickRot_Parms;
	TickRot_Parms.DT = DT;

	this->ProcessEvent ( pFnTickRot, &TickRot_Parms, NULL );
};

// Function NowGame.NowProjectileBase.TickVel
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowProjectileBase::TickVel ( float DT )
{
	static UFunction* pFnTickVel = NULL;

	if ( ! pFnTickVel )
		pFnTickVel = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileBase.TickVel" );

	ANowProjectileBase_execTickVel_Parms TickVel_Parms;
	TickVel_Parms.DT = DT;

	this->ProcessEvent ( pFnTickVel, &TickVel_Parms, NULL );
};

// Function NowGame.NowProjectileBase.GetDist
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ANowProjectileBase::GetDist ( )
{
	static UFunction* pFnGetDist = NULL;

	if ( ! pFnGetDist )
		pFnGetDist = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileBase.GetDist" );

	ANowProjectileBase_execGetDist_Parms GetDist_Parms;

	this->ProcessEvent ( pFnGetDist, &GetDist_Parms, NULL );

	return GetDist_Parms.ReturnValue;
};

// Function NowGame.NowProjectileBase.Tick
// [0x00020002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void ANowProjectileBase::Tick ( float DT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileBase.Tick" );

	ANowProjectileBase_execTick_Parms Tick_Parms;
	Tick_Parms.DT = DT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function NowGame.NowProjectileBase.InitProjectile
// [0x00020002] 
// Parameters infos:
// float                          FlySpeed                       ( CPF_Parm )

void ANowProjectileBase::InitProjectile ( float FlySpeed )
{
	static UFunction* pFnInitProjectile = NULL;

	if ( ! pFnInitProjectile )
		pFnInitProjectile = UObject::FindObject< UFunction > ( "Function NowGame.NowProjectileBase.InitProjectile" );

	ANowProjectileBase_execInitProjectile_Parms InitProjectile_Parms;
	InitProjectile_Parms.FlySpeed = FlySpeed;

	this->ProcessEvent ( pFnInitProjectile, &InitProjectile_Parms, NULL );
};

// Function NowGame.NowClientDoor.closeDoor
// [0x00020002] 
// Parameters infos:

void ANowClientDoor::closeDoor ( )
{
	static UFunction* pFncloseDoor = NULL;

	if ( ! pFncloseDoor )
		pFncloseDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowClientDoor.closeDoor" );

	ANowClientDoor_execcloseDoor_Parms closeDoor_Parms;

	this->ProcessEvent ( pFncloseDoor, &closeDoor_Parms, NULL );
};

// Function NowGame.NowClientDoor.openDoor
// [0x00020002] 
// Parameters infos:

void ANowClientDoor::openDoor ( )
{
	static UFunction* pFnopenDoor = NULL;

	if ( ! pFnopenDoor )
		pFnopenDoor = UObject::FindObject< UFunction > ( "Function NowGame.NowClientDoor.openDoor" );

	ANowClientDoor_execopenDoor_Parms openDoor_Parms;

	this->ProcessEvent ( pFnopenDoor, &openDoor_Parms, NULL );
};

// Function NowGame.NowClientDoor.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowClientDoor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowClientDoor.PostBeginPlay" );

	ANowClientDoor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowEffectMeatChunk.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANowEffectMeatChunk::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowEffectMeatChunk.Destroyed" );

	ANowEffectMeatChunk_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowEffectMeatChunk.HitWall
// [0x00020922] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ANowEffectMeatChunk::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = UObject::FindObject< UFunction > ( "Function NowGame.NowEffectMeatChunk.HitWall" );

	ANowEffectMeatChunk_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function NowGame.NowEffectMeatChunk.RandSpin
// [0x00020103] ( FUNC_Final )
// Parameters infos:
// float                          spinRate                       ( CPF_Parm )

void ANowEffectMeatChunk::RandSpin ( float spinRate )
{
	static UFunction* pFnRandSpin = NULL;

	if ( ! pFnRandSpin )
		pFnRandSpin = UObject::FindObject< UFunction > ( "Function NowGame.NowEffectMeatChunk.RandSpin" );

	ANowEffectMeatChunk_execRandSpin_Parms RandSpin_Parms;
	RandSpin_Parms.spinRate = spinRate;

	this->ProcessEvent ( pFnRandSpin, &RandSpin_Parms, NULL );
};

// Function NowGame.NowEffectMeatChunk.Init
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ANowEffectMeatChunk::Init ( struct FVector Direction )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowEffectMeatChunk.Init" );

	ANowEffectMeatChunk_execInit_Parms Init_Parms;
	memcpy ( &Init_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.CheckValidName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 NewName                        ( CPF_Parm | CPF_NeedCtorLink )

struct FString UNowGFXScenePylon::CheckValidName ( struct FString NewName )
{
	static UFunction* pFnCheckValidName = NULL;

	if ( ! pFnCheckValidName )
		pFnCheckValidName = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.CheckValidName" );

	UNowGFXScenePylon_execCheckValidName_Parms CheckValidName_Parms;
	memcpy ( &CheckValidName_Parms.NewName, &NewName, 0xC );

	this->ProcessEvent ( pFnCheckValidName, &CheckValidName_Parms, NULL );

	return CheckValidName_Parms.ReturnValue;
};

// Function NowGame.NowGFXScenePylon.gfxTick
// [0x00020002] 
// Parameters infos:
// float                          dTime                          ( CPF_Parm )

void UNowGFXScenePylon::gfxTick ( float dTime )
{
	static UFunction* pFngfxTick = NULL;

	if ( ! pFngfxTick )
		pFngfxTick = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.gfxTick" );

	UNowGFXScenePylon_execgfxTick_Parms gfxTick_Parms;
	gfxTick_Parms.dTime = dTime;

	this->ProcessEvent ( pFngfxTick, &gfxTick_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.toggleSetters
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UNowGFXScenePylon::toggleSetters ( unsigned long bVisible )
{
	static UFunction* pFntoggleSetters = NULL;

	if ( ! pFntoggleSetters )
		pFntoggleSetters = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.toggleSetters" );

	UNowGFXScenePylon_exectoggleSetters_Parms toggleSetters_Parms;
	toggleSetters_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFntoggleSetters, &toggleSetters_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.setClusterStats
// [0x00020002] 
// Parameters infos:
// int                            structures                     ( CPF_Parm )
// int                            area                           ( CPF_Parm )
// int                            overlapArea                    ( CPF_Parm )
// int                            totalArea                      ( CPF_Parm )

void UNowGFXScenePylon::setClusterStats ( int structures, int area, int overlapArea, int totalArea )
{
	static UFunction* pFnsetClusterStats = NULL;

	if ( ! pFnsetClusterStats )
		pFnsetClusterStats = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.setClusterStats" );

	UNowGFXScenePylon_execsetClusterStats_Parms setClusterStats_Parms;
	setClusterStats_Parms.structures = structures;
	setClusterStats_Parms.area = area;
	setClusterStats_Parms.overlapArea = overlapArea;
	setClusterStats_Parms.totalArea = totalArea;

	this->ProcessEvent ( pFnsetClusterStats, &setClusterStats_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.setMaxTarget
// [0x00020002] 
// Parameters infos:
// int                            targetRadius                   ( CPF_Parm )
// int                            targetDefense                  ( CPF_Parm )
// int                            targetOffense                  ( CPF_Parm )

void UNowGFXScenePylon::setMaxTarget ( int targetRadius, int targetDefense, int targetOffense )
{
	static UFunction* pFnsetMaxTarget = NULL;

	if ( ! pFnsetMaxTarget )
		pFnsetMaxTarget = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.setMaxTarget" );

	UNowGFXScenePylon_execsetMaxTarget_Parms setMaxTarget_Parms;
	setMaxTarget_Parms.targetRadius = targetRadius;
	setMaxTarget_Parms.targetDefense = targetDefense;
	setMaxTarget_Parms.targetOffense = targetOffense;

	this->ProcessEvent ( pFnsetMaxTarget, &setMaxTarget_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.setProgress
// [0x00020002] 
// Parameters infos:
// int                            Pct                            ( CPF_Parm )

void UNowGFXScenePylon::setProgress ( int Pct )
{
	static UFunction* pFnsetProgress = NULL;

	if ( ! pFnsetProgress )
		pFnsetProgress = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.setProgress" );

	UNowGFXScenePylon_execsetProgress_Parms setProgress_Parms;
	setProgress_Parms.Pct = Pct;

	this->ProcessEvent ( pFnsetProgress, &setProgress_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.setTierHP
// [0x00020002] 
// Parameters infos:
// int                            tier1                          ( CPF_Parm )
// int                            tier2                          ( CPF_Parm )
// int                            tier3                          ( CPF_Parm )
// int                            tier1Max                       ( CPF_Parm )
// int                            tier2Max                       ( CPF_Parm )
// int                            tier3Max                       ( CPF_Parm )

void UNowGFXScenePylon::setTierHP ( int tier1, int tier2, int tier3, int tier1Max, int tier2Max, int tier3Max )
{
	static UFunction* pFnsetTierHP = NULL;

	if ( ! pFnsetTierHP )
		pFnsetTierHP = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.setTierHP" );

	UNowGFXScenePylon_execsetTierHP_Parms setTierHP_Parms;
	setTierHP_Parms.tier1 = tier1;
	setTierHP_Parms.tier2 = tier2;
	setTierHP_Parms.tier3 = tier3;
	setTierHP_Parms.tier1Max = tier1Max;
	setTierHP_Parms.tier2Max = tier2Max;
	setTierHP_Parms.tier3Max = tier3Max;

	this->ProcessEvent ( pFnsetTierHP, &setTierHP_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.setPylonStats
// [0x00020002] 
// Parameters infos:
// unsigned long                  bCanModifyTargets              ( CPF_Parm )
// int                            Radius                         ( CPF_Parm )
// int                            radiusTarget                   ( CPF_Parm )
// int                            defense                        ( CPF_Parm )
// int                            defenseTarget                  ( CPF_Parm )
// int                            offense                        ( CPF_Parm )
// int                            offenseTarget                  ( CPF_Parm )
// int                            tierCost                       ( CPF_Parm )
// int                            npcCost                        ( CPF_Parm )
// int                            totalCost                      ( CPF_Parm )
// int                            clusterIncome                  ( CPF_Parm )
// int                            clusterCost                    ( CPF_Parm )
// int                            totalCP                        ( CPF_Parm )

void UNowGFXScenePylon::setPylonStats ( unsigned long bCanModifyTargets, int Radius, int radiusTarget, int defense, int defenseTarget, int offense, int offenseTarget, int tierCost, int npcCost, int totalCost, int clusterIncome, int clusterCost, int totalCP )
{
	static UFunction* pFnsetPylonStats = NULL;

	if ( ! pFnsetPylonStats )
		pFnsetPylonStats = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.setPylonStats" );

	UNowGFXScenePylon_execsetPylonStats_Parms setPylonStats_Parms;
	setPylonStats_Parms.bCanModifyTargets = bCanModifyTargets;
	setPylonStats_Parms.Radius = Radius;
	setPylonStats_Parms.radiusTarget = radiusTarget;
	setPylonStats_Parms.defense = defense;
	setPylonStats_Parms.defenseTarget = defenseTarget;
	setPylonStats_Parms.offense = offense;
	setPylonStats_Parms.offenseTarget = offenseTarget;
	setPylonStats_Parms.tierCost = tierCost;
	setPylonStats_Parms.npcCost = npcCost;
	setPylonStats_Parms.totalCost = totalCost;
	setPylonStats_Parms.clusterIncome = clusterIncome;
	setPylonStats_Parms.clusterCost = clusterCost;
	setPylonStats_Parms.totalCP = totalCP;

	this->ProcessEvent ( pFnsetPylonStats, &setPylonStats_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.setStats
// [0x00020002] 
// Parameters infos:
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bNameEditable                  ( CPF_Parm )
// int                            Tier                           ( CPF_Parm )
// int                            currentHP                      ( CPF_Parm )
// int                            maxHP                          ( CPF_Parm )
// unsigned long                  linked                         ( CPF_Parm )

void UNowGFXScenePylon::setStats ( struct FString DisplayName, unsigned long bNameEditable, int Tier, int currentHP, int maxHP, unsigned long linked )
{
	static UFunction* pFnsetStats = NULL;

	if ( ! pFnsetStats )
		pFnsetStats = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.setStats" );

	UNowGFXScenePylon_execsetStats_Parms setStats_Parms;
	memcpy ( &setStats_Parms.DisplayName, &DisplayName, 0xC );
	setStats_Parms.bNameEditable = bNameEditable;
	setStats_Parms.Tier = Tier;
	setStats_Parms.currentHP = currentHP;
	setStats_Parms.maxHP = maxHP;
	setStats_Parms.linked = linked;

	this->ProcessEvent ( pFnsetStats, &setStats_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.addPylon
// [0x00020002] 
// Parameters infos:
// int                            XPos                           ( CPF_Parm )
// int                            YPos                           ( CPF_Parm )
// int                            zPos                           ( CPF_Parm )
// int                            Radius                         ( CPF_Parm )
// int                            guildID                        ( CPF_Parm )
// unsigned long                  bIsActive                      ( CPF_Parm )

void UNowGFXScenePylon::addPylon ( int XPos, int YPos, int zPos, int Radius, int guildID, unsigned long bIsActive )
{
	static UFunction* pFnaddPylon = NULL;

	if ( ! pFnaddPylon )
		pFnaddPylon = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.addPylon" );

	UNowGFXScenePylon_execaddPylon_Parms addPylon_Parms;
	addPylon_Parms.XPos = XPos;
	addPylon_Parms.YPos = YPos;
	addPylon_Parms.zPos = zPos;
	addPylon_Parms.Radius = Radius;
	addPylon_Parms.guildID = guildID;
	addPylon_Parms.bIsActive = bIsActive;

	this->ProcessEvent ( pFnaddPylon, &addPylon_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.GFXClose
// [0x00020002] 
// Parameters infos:

void UNowGFXScenePylon::GFXClose ( )
{
	static UFunction* pFnGFXClose = NULL;

	if ( ! pFnGFXClose )
		pFnGFXClose = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.GFXClose" );

	UNowGFXScenePylon_execGFXClose_Parms GFXClose_Parms;

	this->ProcessEvent ( pFnGFXClose, &GFXClose_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.setTargets
// [0x00020002] 
// Parameters infos:
// int                            radiusTarget                   ( CPF_Parm )
// int                            defenseTarget                  ( CPF_Parm )
// int                            offenseTarget                  ( CPF_Parm )

void UNowGFXScenePylon::setTargets ( int radiusTarget, int defenseTarget, int offenseTarget )
{
	static UFunction* pFnsetTargets = NULL;

	if ( ! pFnsetTargets )
		pFnsetTargets = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.setTargets" );

	UNowGFXScenePylon_execsetTargets_Parms setTargets_Parms;
	setTargets_Parms.radiusTarget = radiusTarget;
	setTargets_Parms.defenseTarget = defenseTarget;
	setTargets_Parms.offenseTarget = offenseTarget;

	this->ProcessEvent ( pFnsetTargets, &setTargets_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.SetName
// [0x00020002] 
// Parameters infos:
// struct FString                 guildName                      ( CPF_Parm | CPF_NeedCtorLink )

void UNowGFXScenePylon::SetName ( struct FString guildName )
{
	static UFunction* pFnSetName = NULL;

	if ( ! pFnSetName )
		pFnSetName = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.SetName" );

	UNowGFXScenePylon_execSetName_Parms SetName_Parms;
	memcpy ( &SetName_Parms.guildName, &guildName, 0xC );

	this->ProcessEvent ( pFnSetName, &SetName_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.ShowMouseToggle
// [0x00020002] 
// Parameters infos:

void UNowGFXScenePylon::ShowMouseToggle ( )
{
	static UFunction* pFnShowMouseToggle = NULL;

	if ( ! pFnShowMouseToggle )
		pFnShowMouseToggle = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.ShowMouseToggle" );

	UNowGFXScenePylon_execShowMouseToggle_Parms ShowMouseToggle_Parms;

	this->ProcessEvent ( pFnShowMouseToggle, &ShowMouseToggle_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.AddExtendedPylonInfo
// [0x00020002] 
// Parameters infos:
// int                            I                              ( CPF_Parm )

void UNowGFXScenePylon::AddExtendedPylonInfo ( int I )
{
	static UFunction* pFnAddExtendedPylonInfo = NULL;

	if ( ! pFnAddExtendedPylonInfo )
		pFnAddExtendedPylonInfo = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.AddExtendedPylonInfo" );

	UNowGFXScenePylon_execAddExtendedPylonInfo_Parms AddExtendedPylonInfo_Parms;
	AddExtendedPylonInfo_Parms.I = I;

	this->ProcessEvent ( pFnAddExtendedPylonInfo, &AddExtendedPylonInfo_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.DoKeepInit
// [0x00020002] 
// Parameters infos:

void UNowGFXScenePylon::DoKeepInit ( )
{
	static UFunction* pFnDoKeepInit = NULL;

	if ( ! pFnDoKeepInit )
		pFnDoKeepInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.DoKeepInit" );

	UNowGFXScenePylon_execDoKeepInit_Parms DoKeepInit_Parms;

	this->ProcessEvent ( pFnDoKeepInit, &DoKeepInit_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.DoPylonInit
// [0x00020002] 
// Parameters infos:

void UNowGFXScenePylon::DoPylonInit ( )
{
	static UFunction* pFnDoPylonInit = NULL;

	if ( ! pFnDoPylonInit )
		pFnDoPylonInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.DoPylonInit" );

	UNowGFXScenePylon_execDoPylonInit_Parms DoPylonInit_Parms;

	this->ProcessEvent ( pFnDoPylonInit, &DoPylonInit_Parms, NULL );
};

// Function NowGame.NowGFXScenePylon.Init
// [0x00020002] 
// Parameters infos:
// class APlayerController*       Player                         ( CPF_Parm )
// class UNowGFXHud*              NewGFXHud                      ( CPF_Parm )

void UNowGFXScenePylon::Init ( class APlayerController* Player, class UNowGFXHud* NewGFXHud )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = UObject::FindObject< UFunction > ( "Function NowGame.NowGFXScenePylon.Init" );

	UNowGFXScenePylon_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;
	Init_Parms.NewGFXHud = NewGFXHud;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function NowGame.UIScene_WeatherAwareness.InitGatherDataLoop
// [0x00020002] 
// Parameters infos:

void UUIScene_WeatherAwareness::InitGatherDataLoop ( )
{
	static UFunction* pFnInitGatherDataLoop = NULL;

	if ( ! pFnInitGatherDataLoop )
		pFnInitGatherDataLoop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeatherAwareness.InitGatherDataLoop" );

	UUIScene_WeatherAwareness_execInitGatherDataLoop_Parms InitGatherDataLoop_Parms;

	this->ProcessEvent ( pFnInitGatherDataLoop, &InitGatherDataLoop_Parms, NULL );
};

// Function NowGame.UIScene_WeatherAwareness.StopGatherDataLoop
// [0x00020002] 
// Parameters infos:

void UUIScene_WeatherAwareness::StopGatherDataLoop ( )
{
	static UFunction* pFnStopGatherDataLoop = NULL;

	if ( ! pFnStopGatherDataLoop )
		pFnStopGatherDataLoop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeatherAwareness.StopGatherDataLoop" );

	UUIScene_WeatherAwareness_execStopGatherDataLoop_Parms StopGatherDataLoop_Parms;

	this->ProcessEvent ( pFnStopGatherDataLoop, &StopGatherDataLoop_Parms, NULL );
};

// Function NowGame.UIScene_WeatherAwareness.UpdateWeatherAwareness
// [0x00020002] 
// Parameters infos:
// int                            windDir                        ( CPF_Parm )
// float                          windMagnitude                  ( CPF_Parm )
// int                            rainMagnitude                  ( CPF_Parm )
// struct FRotator                windRotation                   ( CPF_Parm )
// struct FRotator                playerRotation                 ( CPF_Parm )

void UUIScene_WeatherAwareness::UpdateWeatherAwareness ( int windDir, float windMagnitude, int rainMagnitude, struct FRotator windRotation, struct FRotator playerRotation )
{
	static UFunction* pFnUpdateWeatherAwareness = NULL;

	if ( ! pFnUpdateWeatherAwareness )
		pFnUpdateWeatherAwareness = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeatherAwareness.UpdateWeatherAwareness" );

	UUIScene_WeatherAwareness_execUpdateWeatherAwareness_Parms UpdateWeatherAwareness_Parms;
	UpdateWeatherAwareness_Parms.windDir = windDir;
	UpdateWeatherAwareness_Parms.windMagnitude = windMagnitude;
	UpdateWeatherAwareness_Parms.rainMagnitude = rainMagnitude;
	memcpy ( &UpdateWeatherAwareness_Parms.windRotation, &windRotation, 0xC );
	memcpy ( &UpdateWeatherAwareness_Parms.playerRotation, &playerRotation, 0xC );

	this->ProcessEvent ( pFnUpdateWeatherAwareness, &UpdateWeatherAwareness_Parms, NULL );
};

// Function NowGame.UIScene_WeatherAwareness.PlayerRotatedGUIUpdate
// [0x00020000] 
// Parameters infos:
// struct FRotator                playersNewRotation             ( CPF_Parm )

void UUIScene_WeatherAwareness::PlayerRotatedGUIUpdate ( struct FRotator playersNewRotation )
{
	static UFunction* pFnPlayerRotatedGUIUpdate = NULL;

	if ( ! pFnPlayerRotatedGUIUpdate )
		pFnPlayerRotatedGUIUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeatherAwareness.PlayerRotatedGUIUpdate" );

	UUIScene_WeatherAwareness_execPlayerRotatedGUIUpdate_Parms PlayerRotatedGUIUpdate_Parms;
	memcpy ( &PlayerRotatedGUIUpdate_Parms.playersNewRotation, &playersNewRotation, 0xC );

	this->ProcessEvent ( pFnPlayerRotatedGUIUpdate, &PlayerRotatedGUIUpdate_Parms, NULL );
};

// Function NowGame.UIScene_WeatherAwareness.PostInitUpdate
// [0x00020000] 
// Parameters infos:

void UUIScene_WeatherAwareness::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeatherAwareness.PostInitUpdate" );

	UUIScene_WeatherAwareness_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_WeatherAwareness.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_WeatherAwareness::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeatherAwareness.SceneDeactivated" );

	UUIScene_WeatherAwareness_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_WeatherAwareness.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_WeatherAwareness::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeatherAwareness.SceneActivated" );

	UUIScene_WeatherAwareness_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_WeatherAwareness.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_WeatherAwareness::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeatherAwareness.InitScene" );

	UUIScene_WeatherAwareness_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_GameMessages.CloseSceneTimer
// [0x00020002] 
// Parameters infos:

void UUIScene_GameMessages::CloseSceneTimer ( )
{
	static UFunction* pFnCloseSceneTimer = NULL;

	if ( ! pFnCloseSceneTimer )
		pFnCloseSceneTimer = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GameMessages.CloseSceneTimer" );

	UUIScene_GameMessages_execCloseSceneTimer_Parms CloseSceneTimer_Parms;

	this->ProcessEvent ( pFnCloseSceneTimer, &CloseSceneTimer_Parms, NULL );
};

// Function NowGame.UIScene_GameMessages.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GameMessages::OnClose ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GameMessages.OnClose" );

	UUIScene_GameMessages_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.O = O;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_GameMessages.AcceptResurrect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GameMessages::AcceptResurrect ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnAcceptResurrect = NULL;

	if ( ! pFnAcceptResurrect )
		pFnAcceptResurrect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GameMessages.AcceptResurrect" );

	UUIScene_GameMessages_execAcceptResurrect_Parms AcceptResurrect_Parms;
	AcceptResurrect_Parms.O = O;
	AcceptResurrect_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAcceptResurrect, &AcceptResurrect_Parms, NULL );

	return AcceptResurrect_Parms.ReturnValue;
};

// Function NowGame.UIScene_GameMessages.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_GameMessages::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GameMessages.SceneActivated" );

	UUIScene_GameMessages_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_GameMessages.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GameMessages::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GameMessages.InitScene" );

	UUIScene_GameMessages_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.NowLoginDecorationActor.DeSelect
// [0x00020002] 
// Parameters infos:

void ANowLoginDecorationActor::DeSelect ( )
{
	static UFunction* pFnDeSelect = NULL;

	if ( ! pFnDeSelect )
		pFnDeSelect = UObject::FindObject< UFunction > ( "Function NowGame.NowLoginDecorationActor.DeSelect" );

	ANowLoginDecorationActor_execDeSelect_Parms DeSelect_Parms;

	this->ProcessEvent ( pFnDeSelect, &DeSelect_Parms, NULL );
};

// Function NowGame.NowLoginDecorationActor.Select
// [0x00020002] 
// Parameters infos:

void ANowLoginDecorationActor::Select ( )
{
	static UFunction* pFnSelect = NULL;

	if ( ! pFnSelect )
		pFnSelect = UObject::FindObject< UFunction > ( "Function NowGame.NowLoginDecorationActor.Select" );

	ANowLoginDecorationActor_execSelect_Parms Select_Parms;

	this->ProcessEvent ( pFnSelect, &Select_Parms, NULL );
};

// Function NowGame.NowLoginDecorationActor.SetFlag
// [0x00020002] 
// Parameters infos:
// int                            iFlag                          ( CPF_Parm )

void ANowLoginDecorationActor::SetFlag ( int iFlag )
{
	static UFunction* pFnSetFlag = NULL;

	if ( ! pFnSetFlag )
		pFnSetFlag = UObject::FindObject< UFunction > ( "Function NowGame.NowLoginDecorationActor.SetFlag" );

	ANowLoginDecorationActor_execSetFlag_Parms SetFlag_Parms;
	SetFlag_Parms.iFlag = iFlag;

	this->ProcessEvent ( pFnSetFlag, &SetFlag_Parms, NULL );
};

// Function NowGame.NowMusicBank.FindMusicManager
// [0x00020002] 
// Parameters infos:

void ANowMusicBank::FindMusicManager ( )
{
	static UFunction* pFnFindMusicManager = NULL;

	if ( ! pFnFindMusicManager )
		pFnFindMusicManager = UObject::FindObject< UFunction > ( "Function NowGame.NowMusicBank.FindMusicManager" );

	ANowMusicBank_execFindMusicManager_Parms FindMusicManager_Parms;

	this->ProcessEvent ( pFnFindMusicManager, &FindMusicManager_Parms, NULL );
};

// Function NowGame.NowMusicBank.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ANowMusicBank::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = UObject::FindObject< UFunction > ( "Function NowGame.NowMusicBank.PostBeginPlay" );

	ANowMusicBank_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function NowGame.NowPhysManager.AddToManager
// [0x00020002] 
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )

void UNowPhysManager::AddToManager ( class AActor* WhatActor )
{
	static UFunction* pFnAddToManager = NULL;

	if ( ! pFnAddToManager )
		pFnAddToManager = UObject::FindObject< UFunction > ( "Function NowGame.NowPhysManager.AddToManager" );

	UNowPhysManager_execAddToManager_Parms AddToManager_Parms;
	AddToManager_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnAddToManager, &AddToManager_Parms, NULL );
};

// Function NowGame.NowPhysManager.SortDel
// [0x00920002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )
// class AActor*                  B                              ( CPF_Parm )

int UNowPhysManager::SortDel ( class AActor* A, class AActor* B )
{
	static UFunction* pFnSortDel = NULL;

	if ( ! pFnSortDel )
		pFnSortDel = UObject::FindObject< UFunction > ( "Function NowGame.NowPhysManager.SortDel" );

	UNowPhysManager_execSortDel_Parms SortDel_Parms;
	SortDel_Parms.A = A;
	SortDel_Parms.B = B;

	this->ProcessEvent ( pFnSortDel, &SortDel_Parms, NULL );

	return SortDel_Parms.ReturnValue;
};

// Function NowGame.NowPhysManager.TickManager
// [0x00020002] 
// Parameters infos:

void UNowPhysManager::TickManager ( )
{
	static UFunction* pFnTickManager = NULL;

	if ( ! pFnTickManager )
		pFnTickManager = UObject::FindObject< UFunction > ( "Function NowGame.NowPhysManager.TickManager" );

	UNowPhysManager_execTickManager_Parms TickManager_Parms;

	this->ProcessEvent ( pFnTickManager, &TickManager_Parms, NULL );
};

// Function NowGame.NowPhysManager.InitManager
// [0x00020002] 
// Parameters infos:

void UNowPhysManager::InitManager ( )
{
	static UFunction* pFnInitManager = NULL;

	if ( ! pFnInitManager )
		pFnInitManager = UObject::FindObject< UFunction > ( "Function NowGame.NowPhysManager.InitManager" );

	UNowPhysManager_execInitManager_Parms InitManager_Parms;

	this->ProcessEvent ( pFnInitManager, &InitManager_Parms, NULL );
};

// Function NowGame.PriestBeacon.ShowBeacon
// [0x00020002] 
// Parameters infos:
// unsigned long                  DoShow                         ( CPF_Parm )

void APriestBeacon::ShowBeacon ( unsigned long DoShow )
{
	static UFunction* pFnShowBeacon = NULL;

	if ( ! pFnShowBeacon )
		pFnShowBeacon = UObject::FindObject< UFunction > ( "Function NowGame.PriestBeacon.ShowBeacon" );

	APriestBeacon_execShowBeacon_Parms ShowBeacon_Parms;
	ShowBeacon_Parms.DoShow = DoShow;

	this->ProcessEvent ( pFnShowBeacon, &ShowBeacon_Parms, NULL );
};

// Function NowGame.NowTempleSpot.ReturnPosition
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ANowTempleSpot::ReturnPosition ( )
{
	static UFunction* pFnReturnPosition = NULL;

	if ( ! pFnReturnPosition )
		pFnReturnPosition = UObject::FindObject< UFunction > ( "Function NowGame.NowTempleSpot.ReturnPosition" );

	ANowTempleSpot_execReturnPosition_Parms ReturnPosition_Parms;

	this->ProcessEvent ( pFnReturnPosition, &ReturnPosition_Parms, NULL );

	return ReturnPosition_Parms.ReturnValue;
};

// Function NowGame.NowUFO.Timer
// [0x00020102] 
// Parameters infos:

void ANowUFO::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = UObject::FindObject< UFunction > ( "Function NowGame.NowUFO.Timer" );

	ANowUFO_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function NowGame.NowUFO.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANowUFO::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = UObject::FindObject< UFunction > ( "Function NowGame.NowUFO.Destroyed" );

	ANowUFO_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function NowGame.NowUFO.setUFOLocation
// [0x00020000] 
// Parameters infos:
// struct FVector                 UFOLoc                         ( CPF_Parm )

void ANowUFO::setUFOLocation ( struct FVector UFOLoc )
{
	static UFunction* pFnsetUFOLocation = NULL;

	if ( ! pFnsetUFOLocation )
		pFnsetUFOLocation = UObject::FindObject< UFunction > ( "Function NowGame.NowUFO.setUFOLocation" );

	ANowUFO_execsetUFOLocation_Parms setUFOLocation_Parms;
	memcpy ( &setUFOLocation_Parms.UFOLoc, &UFOLoc, 0xC );

	this->ProcessEvent ( pFnsetUFOLocation, &setUFOLocation_Parms, NULL );
};

// Function NowGame.NowUFO.HitWall
// [0x00020922] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ANowUFO::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = UObject::FindObject< UFunction > ( "Function NowGame.NowUFO.HitWall" );

	ANowUFO_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function NowGame.NowUFO.SetTossVelocity
// [0x00020002] 
// Parameters infos:
// struct FVector                 TossVelocity                   ( CPF_Parm )

void ANowUFO::SetTossVelocity ( struct FVector TossVelocity )
{
	static UFunction* pFnSetTossVelocity = NULL;

	if ( ! pFnSetTossVelocity )
		pFnSetTossVelocity = UObject::FindObject< UFunction > ( "Function NowGame.NowUFO.SetTossVelocity" );

	ANowUFO_execSetTossVelocity_Parms SetTossVelocity_Parms;
	memcpy ( &SetTossVelocity_Parms.TossVelocity, &TossVelocity, 0xC );

	this->ProcessEvent ( pFnSetTossVelocity, &SetTossVelocity_Parms, NULL );
};

// Function NowGame.NowUFO.SpawnTrailFX
// [0x00020002] 
// Parameters infos:

void ANowUFO::SpawnTrailFX ( )
{
	static UFunction* pFnSpawnTrailFX = NULL;

	if ( ! pFnSpawnTrailFX )
		pFnSpawnTrailFX = UObject::FindObject< UFunction > ( "Function NowGame.NowUFO.SpawnTrailFX" );

	ANowUFO_execSpawnTrailFX_Parms SpawnTrailFX_Parms;

	this->ProcessEvent ( pFnSpawnTrailFX, &SpawnTrailFX_Parms, NULL );
};

// Function NowGame.NowUFO.SetInitialState
// [0x00020102] 
// Parameters infos:

void ANowUFO::SetInitialState ( )
{
	static UFunction* pFnSetInitialState = NULL;

	if ( ! pFnSetInitialState )
		pFnSetInitialState = UObject::FindObject< UFunction > ( "Function NowGame.NowUFO.SetInitialState" );

	ANowUFO_execSetInitialState_Parms SetInitialState_Parms;

	this->ProcessEvent ( pFnSetInitialState, &SetInitialState_Parms, NULL );
};

// Function NowGame.NowUnCoolSpotVolume.MoveToSafeSpot
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  WhatActor                      ( CPF_Parm )

void ANowUnCoolSpotVolume::eventMoveToSafeSpot ( class AActor* WhatActor )
{
	static UFunction* pFnMoveToSafeSpot = NULL;

	if ( ! pFnMoveToSafeSpot )
		pFnMoveToSafeSpot = UObject::FindObject< UFunction > ( "Function NowGame.NowUnCoolSpotVolume.MoveToSafeSpot" );

	ANowUnCoolSpotVolume_eventMoveToSafeSpot_Parms MoveToSafeSpot_Parms;
	MoveToSafeSpot_Parms.WhatActor = WhatActor;

	this->ProcessEvent ( pFnMoveToSafeSpot, &MoveToSafeSpot_Parms, NULL );
};

// Function NowGame.NowUnCoolSpotVolume.PawnEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ANowUnCoolSpotVolume::eventPawnEnteredVolume ( class APawn* Other )
{
	static UFunction* pFnPawnEnteredVolume = NULL;

	if ( ! pFnPawnEnteredVolume )
		pFnPawnEnteredVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowUnCoolSpotVolume.PawnEnteredVolume" );

	ANowUnCoolSpotVolume_eventPawnEnteredVolume_Parms PawnEnteredVolume_Parms;
	PawnEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnEnteredVolume, &PawnEnteredVolume_Parms, NULL );
};

// Function NowGame.NowUnCoolSpotVolume.ActorEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowUnCoolSpotVolume::eventActorEnteredVolume ( class AActor* Other )
{
	static UFunction* pFnActorEnteredVolume = NULL;

	if ( ! pFnActorEnteredVolume )
		pFnActorEnteredVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowUnCoolSpotVolume.ActorEnteredVolume" );

	ANowUnCoolSpotVolume_eventActorEnteredVolume_Parms ActorEnteredVolume_Parms;
	ActorEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorEnteredVolume, &ActorEnteredVolume_Parms, NULL );
};

// Function NowGame.NowUnCoolSpotVolume.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowUnCoolSpotVolume::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = UObject::FindObject< UFunction > ( "Function NowGame.NowUnCoolSpotVolume.Touch" );

	ANowUnCoolSpotVolume_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.NowVolumeDamage.DealDamage
// [0x00020002] 
// Parameters infos:
// class ANowPlayerController*    DamageTaker                    ( CPF_Parm )

void ANowVolumeDamage::DealDamage ( class ANowPlayerController* DamageTaker )
{
	static UFunction* pFnDealDamage = NULL;

	if ( ! pFnDealDamage )
		pFnDealDamage = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeDamage.DealDamage" );

	ANowVolumeDamage_execDealDamage_Parms DealDamage_Parms;
	DealDamage_Parms.DamageTaker = DamageTaker;

	this->ProcessEvent ( pFnDealDamage, &DealDamage_Parms, NULL );
};

// Function NowGame.NowVolumeDamage.MovePlayer
// [0x00820002] 
// Parameters infos:

void ANowVolumeDamage::MovePlayer ( )
{
	static UFunction* pFnMovePlayer = NULL;

	if ( ! pFnMovePlayer )
		pFnMovePlayer = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeDamage.MovePlayer" );

	ANowVolumeDamage_execMovePlayer_Parms MovePlayer_Parms;

	this->ProcessEvent ( pFnMovePlayer, &MovePlayer_Parms, NULL );
};

// Function NowGame.NowVolumeDamage.ActorEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumeDamage::eventActorEnteredVolume ( class AActor* Other )
{
	static UFunction* pFnActorEnteredVolume = NULL;

	if ( ! pFnActorEnteredVolume )
		pFnActorEnteredVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeDamage.ActorEnteredVolume" );

	ANowVolumeDamage_eventActorEnteredVolume_Parms ActorEnteredVolume_Parms;
	ActorEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorEnteredVolume, &ActorEnteredVolume_Parms, NULL );
};

// Function NowGame.NowVolumeDamage.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowVolumeDamage::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeDamage.Touch" );

	ANowVolumeDamage_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.NowVolumePostProcess.ActorLeavingVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumePostProcess::eventActorLeavingVolume ( class AActor* Other )
{
	static UFunction* pFnActorLeavingVolume = NULL;

	if ( ! pFnActorLeavingVolume )
		pFnActorLeavingVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumePostProcess.ActorLeavingVolume" );

	ANowVolumePostProcess_eventActorLeavingVolume_Parms ActorLeavingVolume_Parms;
	ActorLeavingVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorLeavingVolume, &ActorLeavingVolume_Parms, NULL );
};

// Function NowGame.NowVolumePostProcess.ActorEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ANowVolumePostProcess::eventActorEnteredVolume ( class AActor* Other )
{
	static UFunction* pFnActorEnteredVolume = NULL;

	if ( ! pFnActorEnteredVolume )
		pFnActorEnteredVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumePostProcess.ActorEnteredVolume" );

	ANowVolumePostProcess_eventActorEnteredVolume_Parms ActorEnteredVolume_Parms;
	ActorEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorEnteredVolume, &ActorEnteredVolume_Parms, NULL );
};

// Function NowGame.NowVolumePostProcess.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ANowVolumePostProcess::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumePostProcess.Touch" );

	ANowVolumePostProcess_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function NowGame.NowVolumeUnderground.PawnLeavingVolume
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ANowVolumeUnderground::eventPawnLeavingVolume ( class APawn* P )
{
	static UFunction* pFnPawnLeavingVolume = NULL;

	if ( ! pFnPawnLeavingVolume )
		pFnPawnLeavingVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeUnderground.PawnLeavingVolume" );

	ANowVolumeUnderground_eventPawnLeavingVolume_Parms PawnLeavingVolume_Parms;
	PawnLeavingVolume_Parms.P = P;

	this->ProcessEvent ( pFnPawnLeavingVolume, &PawnLeavingVolume_Parms, NULL );
};

// Function NowGame.NowVolumeUnderground.PawnEnteredVolume
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ANowVolumeUnderground::eventPawnEnteredVolume ( class APawn* P )
{
	static UFunction* pFnPawnEnteredVolume = NULL;

	if ( ! pFnPawnEnteredVolume )
		pFnPawnEnteredVolume = UObject::FindObject< UFunction > ( "Function NowGame.NowVolumeUnderground.PawnEnteredVolume" );

	ANowVolumeUnderground_eventPawnEnteredVolume_Parms PawnEnteredVolume_Parms;
	PawnEnteredVolume_Parms.P = P;

	this->ProcessEvent ( pFnPawnEnteredVolume, &PawnEnteredVolume_Parms, NULL );
};

// Function NowGame.PathNodePoop.LogMe
// [0x00020000] 
// Parameters infos:
// int                            MyNumber                       ( CPF_Parm )

void APathNodePoop::LogMe ( int MyNumber )
{
	static UFunction* pFnLogMe = NULL;

	if ( ! pFnLogMe )
		pFnLogMe = UObject::FindObject< UFunction > ( "Function NowGame.PathNodePoop.LogMe" );

	APathNodePoop_execLogMe_Parms LogMe_Parms;
	LogMe_Parms.MyNumber = MyNumber;

	this->ProcessEvent ( pFnLogMe, &LogMe_Parms, NULL );
};

// Function NowGame.PathNodePoop.MoveToGround
// [0x00824002] 
// Parameters infos:
// struct FName                   WhatMeshName                   ( CPF_OptionalParm | CPF_Parm )

void APathNodePoop::MoveToGround ( struct FName WhatMeshName )
{
	static UFunction* pFnMoveToGround = NULL;

	if ( ! pFnMoveToGround )
		pFnMoveToGround = UObject::FindObject< UFunction > ( "Function NowGame.PathNodePoop.MoveToGround" );

	APathNodePoop_execMoveToGround_Parms MoveToGround_Parms;
	memcpy ( &MoveToGround_Parms.WhatMeshName, &WhatMeshName, 0x8 );

	this->ProcessEvent ( pFnMoveToGround, &MoveToGround_Parms, NULL );
};

// Function NowGame.UIScene_ArenaManager.SendTellCmd
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )

bool UUIScene_ArenaManager::SendTellCmd ( struct FString Command )
{
	static UFunction* pFnSendTellCmd = NULL;

	if ( ! pFnSendTellCmd )
		pFnSendTellCmd = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArenaManager.SendTellCmd" );

	UUIScene_ArenaManager_execSendTellCmd_Parms SendTellCmd_Parms;
	memcpy ( &SendTellCmd_Parms.Command, &Command, 0xC );

	this->ProcessEvent ( pFnSendTellCmd, &SendTellCmd_Parms, NULL );

	return SendTellCmd_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArenaManager.InitializeButtons
// [0x00020000] 
// Parameters infos:

void UUIScene_ArenaManager::InitializeButtons ( )
{
	static UFunction* pFnInitializeButtons = NULL;

	if ( ! pFnInitializeButtons )
		pFnInitializeButtons = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArenaManager.InitializeButtons" );

	UUIScene_ArenaManager_execInitializeButtons_Parms InitializeButtons_Parms;

	this->ProcessEvent ( pFnInitializeButtons, &InitializeButtons_Parms, NULL );
};

// Function NowGame.UIScene_ArenaManager.PostUpdateInitialize
// [0x00020000] 
// Parameters infos:

void UUIScene_ArenaManager::PostUpdateInitialize ( )
{
	static UFunction* pFnPostUpdateInitialize = NULL;

	if ( ! pFnPostUpdateInitialize )
		pFnPostUpdateInitialize = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArenaManager.PostUpdateInitialize" );

	UUIScene_ArenaManager_execPostUpdateInitialize_Parms PostUpdateInitialize_Parms;

	this->ProcessEvent ( pFnPostUpdateInitialize, &PostUpdateInitialize_Parms, NULL );
};

// Function NowGame.UIScene_ArenaManager.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_ArenaManager::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArenaManager.InitScene" );

	UUIScene_ArenaManager_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_ArmorCreationNew.CreateClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreationNew::CreateClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCreateClicked = NULL;

	if ( ! pFnCreateClicked )
		pFnCreateClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.CreateClicked" );

	UUIScene_ArmorCreationNew_execCreateClicked_Parms CreateClicked_Parms;
	CreateClicked_Parms.EventObject = EventObject;
	CreateClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateClicked, &CreateClicked_Parms, NULL );

	return CreateClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreationNew.SetupSliders
// [0x00020002] 
// Parameters infos:

void UUIScene_ArmorCreationNew::SetupSliders ( )
{
	static UFunction* pFnSetupSliders = NULL;

	if ( ! pFnSetupSliders )
		pFnSetupSliders = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.SetupSliders" );

	UUIScene_ArmorCreationNew_execSetupSliders_Parms SetupSliders_Parms;

	this->ProcessEvent ( pFnSetupSliders, &SetupSliders_Parms, NULL );
};

// Function NowGame.UIScene_ArmorCreationNew.GetNextPiece
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bBack                          ( CPF_Parm )

int UUIScene_ArmorCreationNew::GetNextPiece ( unsigned long bBack )
{
	static UFunction* pFnGetNextPiece = NULL;

	if ( ! pFnGetNextPiece )
		pFnGetNextPiece = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.GetNextPiece" );

	UUIScene_ArmorCreationNew_execGetNextPiece_Parms GetNextPiece_Parms;
	GetNextPiece_Parms.bBack = bBack;

	this->ProcessEvent ( pFnGetNextPiece, &GetNextPiece_Parms, NULL );

	return GetNextPiece_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreationNew.GetNextArmor
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bBack                          ( CPF_Parm )

int UUIScene_ArmorCreationNew::GetNextArmor ( unsigned long bBack )
{
	static UFunction* pFnGetNextArmor = NULL;

	if ( ! pFnGetNextArmor )
		pFnGetNextArmor = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.GetNextArmor" );

	UUIScene_ArmorCreationNew_execGetNextArmor_Parms GetNextArmor_Parms;
	GetNextArmor_Parms.bBack = bBack;

	this->ProcessEvent ( pFnGetNextArmor, &GetNextArmor_Parms, NULL );

	return GetNextArmor_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreationNew.SetDoneVisibility
// [0x00020002] 
// Parameters infos:

void UUIScene_ArmorCreationNew::SetDoneVisibility ( )
{
	static UFunction* pFnSetDoneVisibility = NULL;

	if ( ! pFnSetDoneVisibility )
		pFnSetDoneVisibility = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.SetDoneVisibility" );

	UUIScene_ArmorCreationNew_execSetDoneVisibility_Parms SetDoneVisibility_Parms;

	this->ProcessEvent ( pFnSetDoneVisibility, &SetDoneVisibility_Parms, NULL );
};

// Function NowGame.UIScene_ArmorCreationNew.SetMaterial
// [0x00020002] 
// Parameters infos:
// class UUINow_ContentButton*    Target                         ( CPF_Parm )
// int                            CheckFlag                      ( CPF_Parm )
// unsigned long                  Visible                        ( CPF_Parm )

void UUIScene_ArmorCreationNew::SetMaterial ( class UUINow_ContentButton* Target, int CheckFlag, unsigned long Visible )
{
	static UFunction* pFnSetMaterial = NULL;

	if ( ! pFnSetMaterial )
		pFnSetMaterial = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.SetMaterial" );

	UUIScene_ArmorCreationNew_execSetMaterial_Parms SetMaterial_Parms;
	SetMaterial_Parms.Target = Target;
	SetMaterial_Parms.CheckFlag = CheckFlag;
	SetMaterial_Parms.Visible = Visible;

	this->ProcessEvent ( pFnSetMaterial, &SetMaterial_Parms, NULL );
};

// Function NowGame.UIScene_ArmorCreationNew.nVisDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_ArmorCreationNew::nVisDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnnVisDrop = NULL;

	if ( ! pFnnVisDrop )
		pFnnVisDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.nVisDrop" );

	UUIScene_ArmorCreationNew_execnVisDrop_Parms nVisDrop_Parms;
	nVisDrop_Parms.Target = Target;
	nVisDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnnVisDrop, &nVisDrop_Parms, NULL );

	return nVisDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreationNew.VisDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_ArmorCreationNew::VisDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnVisDrop = NULL;

	if ( ! pFnVisDrop )
		pFnVisDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.VisDrop" );

	UUIScene_ArmorCreationNew_execVisDrop_Parms VisDrop_Parms;
	VisDrop_Parms.Target = Target;
	VisDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnVisDrop, &VisDrop_Parms, NULL );

	return VisDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreationNew.nVisClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreationNew::nVisClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnnVisClicked = NULL;

	if ( ! pFnnVisClicked )
		pFnnVisClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.nVisClicked" );

	UUIScene_ArmorCreationNew_execnVisClicked_Parms nVisClicked_Parms;
	nVisClicked_Parms.EventObject = EventObject;
	nVisClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnnVisClicked, &nVisClicked_Parms, NULL );

	return nVisClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreationNew.VisClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreationNew::VisClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnVisClicked = NULL;

	if ( ! pFnVisClicked )
		pFnVisClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.VisClicked" );

	UUIScene_ArmorCreationNew_execVisClicked_Parms VisClicked_Parms;
	VisClicked_Parms.EventObject = EventObject;
	VisClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnVisClicked, &VisClicked_Parms, NULL );

	return VisClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreationNew.BackPieceClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreationNew::BackPieceClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackPieceClicked = NULL;

	if ( ! pFnBackPieceClicked )
		pFnBackPieceClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.BackPieceClicked" );

	UUIScene_ArmorCreationNew_execBackPieceClicked_Parms BackPieceClicked_Parms;
	BackPieceClicked_Parms.EventObject = EventObject;
	BackPieceClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackPieceClicked, &BackPieceClicked_Parms, NULL );

	return BackPieceClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreationNew.NextPieceClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreationNew::NextPieceClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextPieceClicked = NULL;

	if ( ! pFnNextPieceClicked )
		pFnNextPieceClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.NextPieceClicked" );

	UUIScene_ArmorCreationNew_execNextPieceClicked_Parms NextPieceClicked_Parms;
	NextPieceClicked_Parms.EventObject = EventObject;
	NextPieceClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextPieceClicked, &NextPieceClicked_Parms, NULL );

	return NextPieceClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreationNew.BackArmorClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreationNew::BackArmorClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackArmorClicked = NULL;

	if ( ! pFnBackArmorClicked )
		pFnBackArmorClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.BackArmorClicked" );

	UUIScene_ArmorCreationNew_execBackArmorClicked_Parms BackArmorClicked_Parms;
	BackArmorClicked_Parms.EventObject = EventObject;
	BackArmorClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackArmorClicked, &BackArmorClicked_Parms, NULL );

	return BackArmorClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreationNew.NextArmorClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreationNew::NextArmorClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextArmorClicked = NULL;

	if ( ! pFnNextArmorClicked )
		pFnNextArmorClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.NextArmorClicked" );

	UUIScene_ArmorCreationNew_execNextArmorClicked_Parms NextArmorClicked_Parms;
	NextArmorClicked_Parms.EventObject = EventObject;
	NextArmorClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextArmorClicked, &NextArmorClicked_Parms, NULL );

	return NextArmorClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreationNew.AbortClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ArmorCreationNew::AbortClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAbortClicked = NULL;

	if ( ! pFnAbortClicked )
		pFnAbortClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.AbortClicked" );

	UUIScene_ArmorCreationNew_execAbortClicked_Parms AbortClicked_Parms;
	AbortClicked_Parms.EventObject = EventObject;
	AbortClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAbortClicked, &AbortClicked_Parms, NULL );

	return AbortClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ArmorCreationNew.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_ArmorCreationNew::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.PostInitUpdate" );

	UUIScene_ArmorCreationNew_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_ArmorCreationNew.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_ArmorCreationNew::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ArmorCreationNew.InitScene" );

	UUIScene_ArmorCreationNew_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Attributes.OnRightClickRemove
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_Attributes::OnRightClickRemove ( class UUIObject* O, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnRightClickRemove = NULL;

	if ( ! pFnOnRightClickRemove )
		pFnOnRightClickRemove = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Attributes.OnRightClickRemove" );

	UUIScene_Attributes_execOnRightClickRemove_Parms OnRightClickRemove_Parms;
	OnRightClickRemove_Parms.O = O;
	OnRightClickRemove_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnRightClickRemove, &OnRightClickRemove_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnRightClickRemove_Parms.CustomContextMenu;

	return OnRightClickRemove_Parms.ReturnValue;
};

// Function NowGame.UIScene_Attributes.OnRightClickAdd
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_Attributes::OnRightClickAdd ( class UUIObject* O, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnRightClickAdd = NULL;

	if ( ! pFnOnRightClickAdd )
		pFnOnRightClickAdd = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Attributes.OnRightClickAdd" );

	UUIScene_Attributes_execOnRightClickAdd_Parms OnRightClickAdd_Parms;
	OnRightClickAdd_Parms.O = O;
	OnRightClickAdd_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnRightClickAdd, &OnRightClickAdd_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnRightClickAdd_Parms.CustomContextMenu;

	return OnRightClickAdd_Parms.ReturnValue;
};

// Function NowGame.UIScene_Attributes.StatRemove
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Attributes::StatRemove ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnStatRemove = NULL;

	if ( ! pFnStatRemove )
		pFnStatRemove = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Attributes.StatRemove" );

	UUIScene_Attributes_execStatRemove_Parms StatRemove_Parms;
	StatRemove_Parms.O = O;
	StatRemove_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnStatRemove, &StatRemove_Parms, NULL );

	return StatRemove_Parms.ReturnValue;
};

// Function NowGame.UIScene_Attributes.StatAdd
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Attributes::StatAdd ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnStatAdd = NULL;

	if ( ! pFnStatAdd )
		pFnStatAdd = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Attributes.StatAdd" );

	UUIScene_Attributes_execStatAdd_Parms StatAdd_Parms;
	StatAdd_Parms.O = O;
	StatAdd_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnStatAdd, &StatAdd_Parms, NULL );

	return StatAdd_Parms.ReturnValue;
};

// Function NowGame.UIScene_Attributes.ProcessInputAxis
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FInputEventParameters   EventParms                     ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UUIScene_Attributes::ProcessInputAxis ( struct FInputEventParameters* EventParms )
{
	static UFunction* pFnProcessInputAxis = NULL;

	if ( ! pFnProcessInputAxis )
		pFnProcessInputAxis = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Attributes.ProcessInputAxis" );

	UUIScene_Attributes_execProcessInputAxis_Parms ProcessInputAxis_Parms;

	this->ProcessEvent ( pFnProcessInputAxis, &ProcessInputAxis_Parms, NULL );

	if ( EventParms )
		memcpy ( EventParms, &ProcessInputAxis_Parms.EventParms, 0x20 );

	return ProcessInputAxis_Parms.ReturnValue;
};

// Function NowGame.UIScene_Attributes.ProcessInputKey
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FInputEventParameters   EventParms                     ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UUIScene_Attributes::ProcessInputKey ( struct FInputEventParameters* EventParms )
{
	static UFunction* pFnProcessInputKey = NULL;

	if ( ! pFnProcessInputKey )
		pFnProcessInputKey = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Attributes.ProcessInputKey" );

	UUIScene_Attributes_execProcessInputKey_Parms ProcessInputKey_Parms;

	this->ProcessEvent ( pFnProcessInputKey, &ProcessInputKey_Parms, NULL );

	if ( EventParms )
		memcpy ( EventParms, &ProcessInputKey_Parms.EventParms, 0x20 );

	return ProcessInputKey_Parms.ReturnValue;
};

// Function NowGame.UIScene_Attributes.UpdateScene
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Attributes::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Attributes.UpdateScene" );

	UUIScene_Attributes_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Attributes.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Attributes::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Attributes.SceneDeactivated" );

	UUIScene_Attributes_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Attributes.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Attributes::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Attributes.SceneActivated" );

	UUIScene_Attributes_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Attributes.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Attributes::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Attributes.InitScene" );

	UUIScene_Attributes_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Bank.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_Bank::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.PostInitUpdate" );

	UUIScene_Bank_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_Bank.OnItemOpenContextMenu
// [0x00420000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_Bank::OnItemOpenContextMenu ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnItemOpenContextMenu = NULL;

	if ( ! pFnOnItemOpenContextMenu )
		pFnOnItemOpenContextMenu = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.OnItemOpenContextMenu" );

	UUIScene_Bank_execOnItemOpenContextMenu_Parms OnItemOpenContextMenu_Parms;
	OnItemOpenContextMenu_Parms.Sender = Sender;
	OnItemOpenContextMenu_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnItemOpenContextMenu, &OnItemOpenContextMenu_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnItemOpenContextMenu_Parms.CustomContextMenu;

	return OnItemOpenContextMenu_Parms.ReturnValue;
};

// Function NowGame.UIScene_Bank.OnSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Bank::OnSlotClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSlotClicked = NULL;

	if ( ! pFnOnSlotClicked )
		pFnOnSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.OnSlotClicked" );

	UUIScene_Bank_execOnSlotClicked_Parms OnSlotClicked_Parms;
	OnSlotClicked_Parms.EventObject = EventObject;
	OnSlotClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSlotClicked, &OnSlotClicked_Parms, NULL );

	return OnSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Bank.OnItemDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Bank::OnItemDragDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnItemDragDrop = NULL;

	if ( ! pFnOnItemDragDrop )
		pFnOnItemDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.OnItemDragDrop" );

	UUIScene_Bank_execOnItemDragDrop_Parms OnItemDragDrop_Parms;
	OnItemDragDrop_Parms.Target = Target;
	OnItemDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnOnItemDragDrop, &OnItemDragDrop_Parms, NULL );

	return OnItemDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_Bank.OnItemDragBegin
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Bank::OnItemDragBegin ( class UUIScreenObject* Source )
{
	static UFunction* pFnOnItemDragBegin = NULL;

	if ( ! pFnOnItemDragBegin )
		pFnOnItemDragBegin = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.OnItemDragBegin" );

	UUIScene_Bank_execOnItemDragBegin_Parms OnItemDragBegin_Parms;
	OnItemDragBegin_Parms.Source = Source;

	this->ProcessEvent ( pFnOnItemDragBegin, &OnItemDragBegin_Parms, NULL );

	return OnItemDragBegin_Parms.ReturnValue;
};

// Function NowGame.UIScene_Bank.OnItemClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Bank::OnItemClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnItemClicked = NULL;

	if ( ! pFnOnItemClicked )
		pFnOnItemClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.OnItemClicked" );

	UUIScene_Bank_execOnItemClicked_Parms OnItemClicked_Parms;
	OnItemClicked_Parms.EventObject = EventObject;
	OnItemClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnItemClicked, &OnItemClicked_Parms, NULL );

	return OnItemClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Bank.UpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_Bank::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.UpdatePage" );

	UUIScene_Bank_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_Bank.ItemListChanged
// [0x00020002] 
// Parameters infos:
// TArray< struct FString >       ItemData                       ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Bank::ItemListChanged ( TArray< struct FString > ItemData )
{
	static UFunction* pFnItemListChanged = NULL;

	if ( ! pFnItemListChanged )
		pFnItemListChanged = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.ItemListChanged" );

	UUIScene_Bank_execItemListChanged_Parms ItemListChanged_Parms;
	memcpy ( &ItemListChanged_Parms.ItemData, &ItemData, 0xC );

	this->ProcessEvent ( pFnItemListChanged, &ItemListChanged_Parms, NULL );
};

// Function NowGame.UIScene_Bank.FadeIn
// [0x00020002] 
// Parameters infos:
// unsigned long                  bResetOpacity                  ( CPF_Parm )

void UUIScene_Bank::FadeIn ( unsigned long bResetOpacity )
{
	static UFunction* pFnFadeIn = NULL;

	if ( ! pFnFadeIn )
		pFnFadeIn = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.FadeIn" );

	UUIScene_Bank_execFadeIn_Parms FadeIn_Parms;
	FadeIn_Parms.bResetOpacity = bResetOpacity;

	this->ProcessEvent ( pFnFadeIn, &FadeIn_Parms, NULL );
};

// Function NowGame.UIScene_Bank.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Bank::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.SceneDeactivated" );

	UUIScene_Bank_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Bank.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Bank::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.SceneActivated" );

	UUIScene_Bank_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Bank.RemoveDistanceClose
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Bank::eventRemoveDistanceClose ( )
{
	static UFunction* pFnRemoveDistanceClose = NULL;

	if ( ! pFnRemoveDistanceClose )
		pFnRemoveDistanceClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.RemoveDistanceClose" );

	UUIScene_Bank_eventRemoveDistanceClose_Parms RemoveDistanceClose_Parms;

	this->ProcessEvent ( pFnRemoveDistanceClose, &RemoveDistanceClose_Parms, NULL );
};

// Function NowGame.UIScene_Bank.CloseClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Bank::CloseClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCloseClicked = NULL;

	if ( ! pFnCloseClicked )
		pFnCloseClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.CloseClicked" );

	UUIScene_Bank_execCloseClicked_Parms CloseClicked_Parms;
	CloseClicked_Parms.EventObject = EventObject;
	CloseClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCloseClicked, &CloseClicked_Parms, NULL );

	return CloseClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Bank.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Bank::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Bank.InitScene" );

	UUIScene_Bank_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_BowCreation.CreateClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreation::CreateClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCreateClicked = NULL;

	if ( ! pFnCreateClicked )
		pFnCreateClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreation.CreateClicked" );

	UUIScene_BowCreation_execCreateClicked_Parms CreateClicked_Parms;
	CreateClicked_Parms.EventObject = EventObject;
	CreateClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateClicked, &CreateClicked_Parms, NULL );

	return CreateClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreation.BackPageClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreation::BackPageClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackPageClicked = NULL;

	if ( ! pFnBackPageClicked )
		pFnBackPageClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreation.BackPageClicked" );

	UUIScene_BowCreation_execBackPageClicked_Parms BackPageClicked_Parms;
	BackPageClicked_Parms.EventObject = EventObject;
	BackPageClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackPageClicked, &BackPageClicked_Parms, NULL );

	return BackPageClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreation.NextPageClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreation::NextPageClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextPageClicked = NULL;

	if ( ! pFnNextPageClicked )
		pFnNextPageClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreation.NextPageClicked" );

	UUIScene_BowCreation_execNextPageClicked_Parms NextPageClicked_Parms;
	NextPageClicked_Parms.EventObject = EventObject;
	NextPageClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextPageClicked, &NextPageClicked_Parms, NULL );

	return NextPageClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreation.BackValueClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreation::BackValueClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackValueClicked = NULL;

	if ( ! pFnBackValueClicked )
		pFnBackValueClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreation.BackValueClicked" );

	UUIScene_BowCreation_execBackValueClicked_Parms BackValueClicked_Parms;
	BackValueClicked_Parms.EventObject = EventObject;
	BackValueClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackValueClicked, &BackValueClicked_Parms, NULL );

	return BackValueClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreation.NextValueClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreation::NextValueClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextValueClicked = NULL;

	if ( ! pFnNextValueClicked )
		pFnNextValueClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreation.NextValueClicked" );

	UUIScene_BowCreation_execNextValueClicked_Parms NextValueClicked_Parms;
	NextValueClicked_Parms.EventObject = EventObject;
	NextValueClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextValueClicked, &NextValueClicked_Parms, NULL );

	return NextValueClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreation.BackClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreation::BackClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackClicked = NULL;

	if ( ! pFnBackClicked )
		pFnBackClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreation.BackClicked" );

	UUIScene_BowCreation_execBackClicked_Parms BackClicked_Parms;
	BackClicked_Parms.EventObject = EventObject;
	BackClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackClicked, &BackClicked_Parms, NULL );

	return BackClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreation.NextClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreation::NextClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextClicked = NULL;

	if ( ! pFnNextClicked )
		pFnNextClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreation.NextClicked" );

	UUIScene_BowCreation_execNextClicked_Parms NextClicked_Parms;
	NextClicked_Parms.EventObject = EventObject;
	NextClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextClicked, &NextClicked_Parms, NULL );

	return NextClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreation.AbortClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreation::AbortClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAbortClicked = NULL;

	if ( ! pFnAbortClicked )
		pFnAbortClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreation.AbortClicked" );

	UUIScene_BowCreation_execAbortClicked_Parms AbortClicked_Parms;
	AbortClicked_Parms.EventObject = EventObject;
	AbortClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAbortClicked, &AbortClicked_Parms, NULL );

	return AbortClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreation.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_BowCreation::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreation.PostInitUpdate" );

	UUIScene_BowCreation_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_BowCreation.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_BowCreation::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreation.InitScene" );

	UUIScene_BowCreation_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_BowCreationNew.CreateClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreationNew::CreateClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCreateClicked = NULL;

	if ( ! pFnCreateClicked )
		pFnCreateClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.CreateClicked" );

	UUIScene_BowCreationNew_execCreateClicked_Parms CreateClicked_Parms;
	CreateClicked_Parms.EventObject = EventObject;
	CreateClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateClicked, &CreateClicked_Parms, NULL );

	return CreateClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreationNew.SetupSliders
// [0x00020002] 
// Parameters infos:

void UUIScene_BowCreationNew::SetupSliders ( )
{
	static UFunction* pFnSetupSliders = NULL;

	if ( ! pFnSetupSliders )
		pFnSetupSliders = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.SetupSliders" );

	UUIScene_BowCreationNew_execSetupSliders_Parms SetupSliders_Parms;

	this->ProcessEvent ( pFnSetupSliders, &SetupSliders_Parms, NULL );
};

// Function NowGame.UIScene_BowCreationNew.SetDoneVisibility
// [0x00020002] 
// Parameters infos:

void UUIScene_BowCreationNew::SetDoneVisibility ( )
{
	static UFunction* pFnSetDoneVisibility = NULL;

	if ( ! pFnSetDoneVisibility )
		pFnSetDoneVisibility = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.SetDoneVisibility" );

	UUIScene_BowCreationNew_execSetDoneVisibility_Parms SetDoneVisibility_Parms;

	this->ProcessEvent ( pFnSetDoneVisibility, &SetDoneVisibility_Parms, NULL );
};

// Function NowGame.UIScene_BowCreationNew.SetMaterial
// [0x00020002] 
// Parameters infos:
// class UUINow_ContentButton*    Target                         ( CPF_Parm )
// unsigned long                  bBack                          ( CPF_Parm )

void UUIScene_BowCreationNew::SetMaterial ( class UUINow_ContentButton* Target, unsigned long bBack )
{
	static UFunction* pFnSetMaterial = NULL;

	if ( ! pFnSetMaterial )
		pFnSetMaterial = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.SetMaterial" );

	UUIScene_BowCreationNew_execSetMaterial_Parms SetMaterial_Parms;
	SetMaterial_Parms.Target = Target;
	SetMaterial_Parms.bBack = bBack;

	this->ProcessEvent ( pFnSetMaterial, &SetMaterial_Parms, NULL );
};

// Function NowGame.UIScene_BowCreationNew.BellyDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_BowCreationNew::BellyDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnBellyDrop = NULL;

	if ( ! pFnBellyDrop )
		pFnBellyDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.BellyDrop" );

	UUIScene_BowCreationNew_execBellyDrop_Parms BellyDrop_Parms;
	BellyDrop_Parms.Target = Target;
	BellyDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnBellyDrop, &BellyDrop_Parms, NULL );

	return BellyDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreationNew.BackDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_BowCreationNew::BackDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnBackDrop = NULL;

	if ( ! pFnBackDrop )
		pFnBackDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.BackDrop" );

	UUIScene_BowCreationNew_execBackDrop_Parms BackDrop_Parms;
	BackDrop_Parms.Target = Target;
	BackDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnBackDrop, &BackDrop_Parms, NULL );

	return BackDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreationNew.BellyClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreationNew::BellyClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBellyClicked = NULL;

	if ( ! pFnBellyClicked )
		pFnBellyClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.BellyClicked" );

	UUIScene_BowCreationNew_execBellyClicked_Parms BellyClicked_Parms;
	BellyClicked_Parms.EventObject = EventObject;
	BellyClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBellyClicked, &BellyClicked_Parms, NULL );

	return BellyClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreationNew.BackClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreationNew::BackClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackClicked = NULL;

	if ( ! pFnBackClicked )
		pFnBackClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.BackClicked" );

	UUIScene_BowCreationNew_execBackClicked_Parms BackClicked_Parms;
	BackClicked_Parms.EventObject = EventObject;
	BackClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackClicked, &BackClicked_Parms, NULL );

	return BackClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreationNew.TypeClick
// [0x00020002] 
// Parameters infos:
// unsigned long                  bBack                          ( CPF_Parm )

void UUIScene_BowCreationNew::TypeClick ( unsigned long bBack )
{
	static UFunction* pFnTypeClick = NULL;

	if ( ! pFnTypeClick )
		pFnTypeClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.TypeClick" );

	UUIScene_BowCreationNew_execTypeClick_Parms TypeClick_Parms;
	TypeClick_Parms.bBack = bBack;

	this->ProcessEvent ( pFnTypeClick, &TypeClick_Parms, NULL );
};

// Function NowGame.UIScene_BowCreationNew.BackTypeClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreationNew::BackTypeClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackTypeClicked = NULL;

	if ( ! pFnBackTypeClicked )
		pFnBackTypeClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.BackTypeClicked" );

	UUIScene_BowCreationNew_execBackTypeClicked_Parms BackTypeClicked_Parms;
	BackTypeClicked_Parms.EventObject = EventObject;
	BackTypeClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackTypeClicked, &BackTypeClicked_Parms, NULL );

	return BackTypeClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreationNew.NextTypeClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreationNew::NextTypeClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextTypeClicked = NULL;

	if ( ! pFnNextTypeClicked )
		pFnNextTypeClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.NextTypeClicked" );

	UUIScene_BowCreationNew_execNextTypeClicked_Parms NextTypeClicked_Parms;
	NextTypeClicked_Parms.EventObject = EventObject;
	NextTypeClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextTypeClicked, &NextTypeClicked_Parms, NULL );

	return NextTypeClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreationNew.ShapeClick
// [0x00020002] 
// Parameters infos:
// unsigned long                  bBack                          ( CPF_Parm )

void UUIScene_BowCreationNew::ShapeClick ( unsigned long bBack )
{
	static UFunction* pFnShapeClick = NULL;

	if ( ! pFnShapeClick )
		pFnShapeClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.ShapeClick" );

	UUIScene_BowCreationNew_execShapeClick_Parms ShapeClick_Parms;
	ShapeClick_Parms.bBack = bBack;

	this->ProcessEvent ( pFnShapeClick, &ShapeClick_Parms, NULL );
};

// Function NowGame.UIScene_BowCreationNew.BackShapeClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreationNew::BackShapeClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackShapeClicked = NULL;

	if ( ! pFnBackShapeClicked )
		pFnBackShapeClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.BackShapeClicked" );

	UUIScene_BowCreationNew_execBackShapeClicked_Parms BackShapeClicked_Parms;
	BackShapeClicked_Parms.EventObject = EventObject;
	BackShapeClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackShapeClicked, &BackShapeClicked_Parms, NULL );

	return BackShapeClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreationNew.NextShapeClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreationNew::NextShapeClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextShapeClicked = NULL;

	if ( ! pFnNextShapeClicked )
		pFnNextShapeClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.NextShapeClicked" );

	UUIScene_BowCreationNew_execNextShapeClicked_Parms NextShapeClicked_Parms;
	NextShapeClicked_Parms.EventObject = EventObject;
	NextShapeClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextShapeClicked, &NextShapeClicked_Parms, NULL );

	return NextShapeClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreationNew.SetMaterialVisibility
// [0x00020002] 
// Parameters infos:

void UUIScene_BowCreationNew::SetMaterialVisibility ( )
{
	static UFunction* pFnSetMaterialVisibility = NULL;

	if ( ! pFnSetMaterialVisibility )
		pFnSetMaterialVisibility = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.SetMaterialVisibility" );

	UUIScene_BowCreationNew_execSetMaterialVisibility_Parms SetMaterialVisibility_Parms;

	this->ProcessEvent ( pFnSetMaterialVisibility, &SetMaterialVisibility_Parms, NULL );
};

// Function NowGame.UIScene_BowCreationNew.CompClick
// [0x00020002] 
// Parameters infos:
// unsigned long                  bBack                          ( CPF_Parm )

void UUIScene_BowCreationNew::CompClick ( unsigned long bBack )
{
	static UFunction* pFnCompClick = NULL;

	if ( ! pFnCompClick )
		pFnCompClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.CompClick" );

	UUIScene_BowCreationNew_execCompClick_Parms CompClick_Parms;
	CompClick_Parms.bBack = bBack;

	this->ProcessEvent ( pFnCompClick, &CompClick_Parms, NULL );
};

// Function NowGame.UIScene_BowCreationNew.BackCompClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreationNew::BackCompClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackCompClicked = NULL;

	if ( ! pFnBackCompClicked )
		pFnBackCompClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.BackCompClicked" );

	UUIScene_BowCreationNew_execBackCompClicked_Parms BackCompClicked_Parms;
	BackCompClicked_Parms.EventObject = EventObject;
	BackCompClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackCompClicked, &BackCompClicked_Parms, NULL );

	return BackCompClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreationNew.NextCompClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreationNew::NextCompClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextCompClicked = NULL;

	if ( ! pFnNextCompClicked )
		pFnNextCompClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.NextCompClicked" );

	UUIScene_BowCreationNew_execNextCompClicked_Parms NextCompClicked_Parms;
	NextCompClicked_Parms.EventObject = EventObject;
	NextCompClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextCompClicked, &NextCompClicked_Parms, NULL );

	return NextCompClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreationNew.AbortClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BowCreationNew::AbortClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAbortClicked = NULL;

	if ( ! pFnAbortClicked )
		pFnAbortClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.AbortClicked" );

	UUIScene_BowCreationNew_execAbortClicked_Parms AbortClicked_Parms;
	AbortClicked_Parms.EventObject = EventObject;
	AbortClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAbortClicked, &AbortClicked_Parms, NULL );

	return AbortClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BowCreationNew.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_BowCreationNew::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.PostInitUpdate" );

	UUIScene_BowCreationNew_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_BowCreationNew.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_BowCreationNew::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BowCreationNew.InitScene" );

	UUIScene_BowCreationNew_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_BuySiegeWeapon.getPlayerHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerHouse* UUIScene_BuySiegeWeapon::getPlayerHouse ( )
{
	static UFunction* pFngetPlayerHouse = NULL;

	if ( ! pFngetPlayerHouse )
		pFngetPlayerHouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BuySiegeWeapon.getPlayerHouse" );

	UUIScene_BuySiegeWeapon_execgetPlayerHouse_Parms getPlayerHouse_Parms;

	this->ProcessEvent ( pFngetPlayerHouse, &getPlayerHouse_Parms, NULL );

	return getPlayerHouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_BuySiegeWeapon.CloseButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BuySiegeWeapon::CloseButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCloseButtonClicked = NULL;

	if ( ! pFnCloseButtonClicked )
		pFnCloseButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BuySiegeWeapon.CloseButtonClicked" );

	UUIScene_BuySiegeWeapon_execCloseButtonClicked_Parms CloseButtonClicked_Parms;
	CloseButtonClicked_Parms.EventObject = EventObject;
	CloseButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCloseButtonClicked, &CloseButtonClicked_Parms, NULL );

	return CloseButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BuySiegeWeapon.PostInitUpdate
// [0x00020000] 
// Parameters infos:

void UUIScene_BuySiegeWeapon::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BuySiegeWeapon.PostInitUpdate" );

	UUIScene_BuySiegeWeapon_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_BuySiegeWeapon.btnHailClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BuySiegeWeapon::btnHailClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnbtnHailClicked = NULL;

	if ( ! pFnbtnHailClicked )
		pFnbtnHailClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BuySiegeWeapon.btnHailClicked" );

	UUIScene_BuySiegeWeapon_execbtnHailClicked_Parms btnHailClicked_Parms;
	btnHailClicked_Parms.EventObject = EventObject;
	btnHailClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnbtnHailClicked, &btnHailClicked_Parms, NULL );

	return btnHailClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BuySiegeWeapon.btnCatapultClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_BuySiegeWeapon::btnCatapultClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnbtnCatapultClicked = NULL;

	if ( ! pFnbtnCatapultClicked )
		pFnbtnCatapultClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BuySiegeWeapon.btnCatapultClicked" );

	UUIScene_BuySiegeWeapon_execbtnCatapultClicked_Parms btnCatapultClicked_Parms;
	btnCatapultClicked_Parms.EventObject = EventObject;
	btnCatapultClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnbtnCatapultClicked, &btnCatapultClicked_Parms, NULL );

	return btnCatapultClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_BuySiegeWeapon.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_BuySiegeWeapon::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_BuySiegeWeapon.InitScene" );

	UUIScene_BuySiegeWeapon_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_CharacterSheet.LongtermHoverChange
// [0x00024002] 
// Parameters infos:
// class UUIScreenObject*         Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIState*                NewlyActiveState               ( CPF_Parm )
// class UUIState*                PreviouslyActiveState          ( CPF_OptionalParm | CPF_Parm )

void UUIScene_CharacterSheet::LongtermHoverChange ( class UUIScreenObject* Sender, int PlayerIndex, class UUIState* NewlyActiveState, class UUIState* PreviouslyActiveState )
{
	static UFunction* pFnLongtermHoverChange = NULL;

	if ( ! pFnLongtermHoverChange )
		pFnLongtermHoverChange = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.LongtermHoverChange" );

	UUIScene_CharacterSheet_execLongtermHoverChange_Parms LongtermHoverChange_Parms;
	LongtermHoverChange_Parms.Sender = Sender;
	LongtermHoverChange_Parms.PlayerIndex = PlayerIndex;
	LongtermHoverChange_Parms.NewlyActiveState = NewlyActiveState;
	LongtermHoverChange_Parms.PreviouslyActiveState = PreviouslyActiveState;

	this->ProcessEvent ( pFnLongtermHoverChange, &LongtermHoverChange_Parms, NULL );
};

// Function NowGame.UIScene_CharacterSheet.SetupLockState
// [0x00020002] 
// Parameters infos:
// class UUIAtlas_ContentButton*  Button                         ( CPF_Parm )
// int                            lockState                      ( CPF_Parm )

void UUIScene_CharacterSheet::SetupLockState ( class UUIAtlas_ContentButton* Button, int lockState )
{
	static UFunction* pFnSetupLockState = NULL;

	if ( ! pFnSetupLockState )
		pFnSetupLockState = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.SetupLockState" );

	UUIScene_CharacterSheet_execSetupLockState_Parms SetupLockState_Parms;
	SetupLockState_Parms.Button = Button;
	SetupLockState_Parms.lockState = lockState;

	this->ProcessEvent ( pFnSetupLockState, &SetupLockState_Parms, NULL );
};

// Function NowGame.UIScene_CharacterSheet.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_CharacterSheet::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.PostInitUpdate" );

	UUIScene_CharacterSheet_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_CharacterSheet.TabClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_CharacterSheet::TabClick ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnTabClick = NULL;

	if ( ! pFnTabClick )
		pFnTabClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.TabClick" );

	UUIScene_CharacterSheet_execTabClick_Parms TabClick_Parms;
	TabClick_Parms.O = O;
	TabClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnTabClick, &TabClick_Parms, NULL );

	return TabClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_CharacterSheet.MountClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_CharacterSheet::MountClick ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnMountClick = NULL;

	if ( ! pFnMountClick )
		pFnMountClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.MountClick" );

	UUIScene_CharacterSheet_execMountClick_Parms MountClick_Parms;
	MountClick_Parms.O = O;
	MountClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnMountClick, &MountClick_Parms, NULL );

	return MountClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_CharacterSheet.SuicideClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_CharacterSheet::SuicideClick ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnSuicideClick = NULL;

	if ( ! pFnSuicideClick )
		pFnSuicideClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.SuicideClick" );

	UUIScene_CharacterSheet_execSuicideClick_Parms SuicideClick_Parms;
	SuicideClick_Parms.O = O;
	SuicideClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnSuicideClick, &SuicideClick_Parms, NULL );

	return SuicideClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_CharacterSheet.UpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_CharacterSheet::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.UpdatePage" );

	UUIScene_CharacterSheet_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_CharacterSheet.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_CharacterSheet::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.UpdateScene" );

	UUIScene_CharacterSheet_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_CharacterSheet.OnSpecial
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_CharacterSheet::OnSpecial ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSpecial = NULL;

	if ( ! pFnOnSpecial )
		pFnOnSpecial = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.OnSpecial" );

	UUIScene_CharacterSheet_execOnSpecial_Parms OnSpecial_Parms;
	OnSpecial_Parms.EventObject = EventObject;
	OnSpecial_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSpecial, &OnSpecial_Parms, NULL );

	return OnSpecial_Parms.ReturnValue;
};

// Function NowGame.UIScene_CharacterSheet.OnSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_CharacterSheet::OnSlotClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSlotClicked = NULL;

	if ( ! pFnOnSlotClicked )
		pFnOnSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.OnSlotClicked" );

	UUIScene_CharacterSheet_execOnSlotClicked_Parms OnSlotClicked_Parms;
	OnSlotClicked_Parms.EventObject = EventObject;
	OnSlotClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSlotClicked, &OnSlotClicked_Parms, NULL );

	return OnSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_CharacterSheet.OnEquipOpenContextMenu
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_CharacterSheet::OnEquipOpenContextMenu ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnEquipOpenContextMenu = NULL;

	if ( ! pFnOnEquipOpenContextMenu )
		pFnOnEquipOpenContextMenu = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.OnEquipOpenContextMenu" );

	UUIScene_CharacterSheet_execOnEquipOpenContextMenu_Parms OnEquipOpenContextMenu_Parms;
	OnEquipOpenContextMenu_Parms.Sender = Sender;
	OnEquipOpenContextMenu_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnEquipOpenContextMenu, &OnEquipOpenContextMenu_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnEquipOpenContextMenu_Parms.CustomContextMenu;

	return OnEquipOpenContextMenu_Parms.ReturnValue;
};

// Function NowGame.UIScene_CharacterSheet.OnEquipDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_CharacterSheet::OnEquipDragDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnEquipDragDrop = NULL;

	if ( ! pFnOnEquipDragDrop )
		pFnOnEquipDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.OnEquipDragDrop" );

	UUIScene_CharacterSheet_execOnEquipDragDrop_Parms OnEquipDragDrop_Parms;
	OnEquipDragDrop_Parms.Target = Target;
	OnEquipDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnOnEquipDragDrop, &OnEquipDragDrop_Parms, NULL );

	return OnEquipDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_CharacterSheet.OnEquipDragBegin
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_CharacterSheet::OnEquipDragBegin ( class UUIScreenObject* Source )
{
	static UFunction* pFnOnEquipDragBegin = NULL;

	if ( ! pFnOnEquipDragBegin )
		pFnOnEquipDragBegin = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.OnEquipDragBegin" );

	UUIScene_CharacterSheet_execOnEquipDragBegin_Parms OnEquipDragBegin_Parms;
	OnEquipDragBegin_Parms.Source = Source;

	this->ProcessEvent ( pFnOnEquipDragBegin, &OnEquipDragBegin_Parms, NULL );

	return OnEquipDragBegin_Parms.ReturnValue;
};

// Function NowGame.UIScene_CharacterSheet.OnEquipClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_CharacterSheet::OnEquipClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnEquipClicked = NULL;

	if ( ! pFnOnEquipClicked )
		pFnOnEquipClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.OnEquipClicked" );

	UUIScene_CharacterSheet_execOnEquipClicked_Parms OnEquipClicked_Parms;
	OnEquipClicked_Parms.EventObject = EventObject;
	OnEquipClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnEquipClicked, &OnEquipClicked_Parms, NULL );

	return OnEquipClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_CharacterSheet.OnAttributeState
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_CharacterSheet::OnAttributeState ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnAttributeState = NULL;

	if ( ! pFnOnAttributeState )
		pFnOnAttributeState = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.OnAttributeState" );

	UUIScene_CharacterSheet_execOnAttributeState_Parms OnAttributeState_Parms;
	OnAttributeState_Parms.EventObject = EventObject;
	OnAttributeState_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnAttributeState, &OnAttributeState_Parms, NULL );

	return OnAttributeState_Parms.ReturnValue;
};

// Function NowGame.UIScene_CharacterSheet.EquipmentChanged
// [0x00020002] 
// Parameters infos:

void UUIScene_CharacterSheet::EquipmentChanged ( )
{
	static UFunction* pFnEquipmentChanged = NULL;

	if ( ! pFnEquipmentChanged )
		pFnEquipmentChanged = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.EquipmentChanged" );

	UUIScene_CharacterSheet_execEquipmentChanged_Parms EquipmentChanged_Parms;

	this->ProcessEvent ( pFnEquipmentChanged, &EquipmentChanged_Parms, NULL );
};

// Function NowGame.UIScene_CharacterSheet.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_CharacterSheet::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.SceneDeactivated" );

	UUIScene_CharacterSheet_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_CharacterSheet.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_CharacterSheet::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.SceneActivated" );

	UUIScene_CharacterSheet_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_CharacterSheet.FadeIn
// [0x00020002] 
// Parameters infos:
// unsigned long                  bResetOpacity                  ( CPF_Parm )

void UUIScene_CharacterSheet::FadeIn ( unsigned long bResetOpacity )
{
	static UFunction* pFnFadeIn = NULL;

	if ( ! pFnFadeIn )
		pFnFadeIn = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.FadeIn" );

	UUIScene_CharacterSheet_execFadeIn_Parms FadeIn_Parms;
	FadeIn_Parms.bResetOpacity = bResetOpacity;

	this->ProcessEvent ( pFnFadeIn, &FadeIn_Parms, NULL );
};

// Function NowGame.UIScene_CharacterSheet.UpdateDoll
// [0x00020002] 
// Parameters infos:

void UUIScene_CharacterSheet::UpdateDoll ( )
{
	static UFunction* pFnUpdateDoll = NULL;

	if ( ! pFnUpdateDoll )
		pFnUpdateDoll = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.UpdateDoll" );

	UUIScene_CharacterSheet_execUpdateDoll_Parms UpdateDoll_Parms;

	this->ProcessEvent ( pFnUpdateDoll, &UpdateDoll_Parms, NULL );
};

// Function NowGame.UIScene_CharacterSheet.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_CharacterSheet::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.InitScene" );

	UUIScene_CharacterSheet_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_CharacterSheet.SetVisibility
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bIsVisible                     ( CPF_Parm )

void UUIScene_CharacterSheet::eventSetVisibility ( unsigned long bIsVisible )
{
	static UFunction* pFnSetVisibility = NULL;

	if ( ! pFnSetVisibility )
		pFnSetVisibility = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CharacterSheet.SetVisibility" );

	UUIScene_CharacterSheet_eventSetVisibility_Parms SetVisibility_Parms;
	SetVisibility_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnSetVisibility, &SetVisibility_Parms, NULL );
};

// Function NowGame.UIScene_CladeSelect.OnInfoSelect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_CladeSelect::OnInfoSelect ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnInfoSelect = NULL;

	if ( ! pFnOnInfoSelect )
		pFnOnInfoSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CladeSelect.OnInfoSelect" );

	UUIScene_CladeSelect_execOnInfoSelect_Parms OnInfoSelect_Parms;
	OnInfoSelect_Parms.O = O;
	OnInfoSelect_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnInfoSelect, &OnInfoSelect_Parms, NULL );

	return OnInfoSelect_Parms.ReturnValue;
};

// Function NowGame.UIScene_CladeSelect.OnCladeSelect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_CladeSelect::OnCladeSelect ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnCladeSelect = NULL;

	if ( ! pFnOnCladeSelect )
		pFnOnCladeSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CladeSelect.OnCladeSelect" );

	UUIScene_CladeSelect_execOnCladeSelect_Parms OnCladeSelect_Parms;
	OnCladeSelect_Parms.O = O;
	OnCladeSelect_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnCladeSelect, &OnCladeSelect_Parms, NULL );

	return OnCladeSelect_Parms.ReturnValue;
};

// Function NowGame.UIScene_CladeSelect.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_CladeSelect::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CladeSelect.SceneDeactivated" );

	UUIScene_CladeSelect_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_CladeSelect.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_CladeSelect::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CladeSelect.SceneActivated" );

	UUIScene_CladeSelect_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_CladeSelect.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_CladeSelect::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CladeSelect.InitScene" );

	UUIScene_CladeSelect_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_ConnectionLost.UpdateScene
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_ConnectionLost::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ConnectionLost.UpdateScene" );

	UUIScene_ConnectionLost_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_ConnectionLost.btnOkClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ConnectionLost::btnOkClicked ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnbtnOkClicked = NULL;

	if ( ! pFnbtnOkClicked )
		pFnbtnOkClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ConnectionLost.btnOkClicked" );

	UUIScene_ConnectionLost_execbtnOkClicked_Parms btnOkClicked_Parms;
	btnOkClicked_Parms.O = O;
	btnOkClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnbtnOkClicked, &btnOkClicked_Parms, NULL );

	return btnOkClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ConnectionLost.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_ConnectionLost::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ConnectionLost.SceneActivated" );

	UUIScene_ConnectionLost_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_ConnectionLost.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_ConnectionLost::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ConnectionLost.InitScene" );

	UUIScene_ConnectionLost_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_CreatePetition.disableAllOtherCheckboxes
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_CreatePetition::disableAllOtherCheckboxes ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFndisableAllOtherCheckboxes = NULL;

	if ( ! pFndisableAllOtherCheckboxes )
		pFndisableAllOtherCheckboxes = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CreatePetition.disableAllOtherCheckboxes" );

	UUIScene_CreatePetition_execdisableAllOtherCheckboxes_Parms disableAllOtherCheckboxes_Parms;
	disableAllOtherCheckboxes_Parms.O = O;
	disableAllOtherCheckboxes_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFndisableAllOtherCheckboxes, &disableAllOtherCheckboxes_Parms, NULL );

	return disableAllOtherCheckboxes_Parms.ReturnValue;
};

// Function NowGame.UIScene_CreatePetition.CreatePetition
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_CreatePetition::CreatePetition ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnCreatePetition = NULL;

	if ( ! pFnCreatePetition )
		pFnCreatePetition = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CreatePetition.CreatePetition" );

	UUIScene_CreatePetition_execCreatePetition_Parms CreatePetition_Parms;
	CreatePetition_Parms.O = O;
	CreatePetition_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreatePetition, &CreatePetition_Parms, NULL );

	return CreatePetition_Parms.ReturnValue;
};

// Function NowGame.UIScene_CreatePetition.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_CreatePetition::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_CreatePetition.InitScene" );

	UUIScene_CreatePetition_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Family.Select
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Family::Select ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnSelect = NULL;

	if ( ! pFnSelect )
		pFnSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Family.Select" );

	UUIScene_Family_execSelect_Parms Select_Parms;
	Select_Parms.EventObject = EventObject;
	Select_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnSelect, &Select_Parms, NULL );

	return Select_Parms.ReturnValue;
};

// Function NowGame.UIScene_Family.UpdateScene
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Family::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Family.UpdateScene" );

	UUIScene_Family_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Family.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Family::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Family.SceneDeactivated" );

	UUIScene_Family_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Family.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Family::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Family.SceneActivated" );

	UUIScene_Family_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Family.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Family::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Family.InitScene" );

	UUIScene_Family_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Features.OnStyle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Features::OnStyle ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnStyle = NULL;

	if ( ! pFnOnStyle )
		pFnOnStyle = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Features.OnStyle" );

	UUIScene_Features_execOnStyle_Parms OnStyle_Parms;
	OnStyle_Parms.O = O;
	OnStyle_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnStyle, &OnStyle_Parms, NULL );

	return OnStyle_Parms.ReturnValue;
};

// Function NowGame.UIScene_Features.OnColor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Features::OnColor ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnColor = NULL;

	if ( ! pFnOnColor )
		pFnOnColor = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Features.OnColor" );

	UUIScene_Features_execOnColor_Parms OnColor_Parms;
	OnColor_Parms.O = O;
	OnColor_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnColor, &OnColor_Parms, NULL );

	return OnColor_Parms.ReturnValue;
};

// Function NowGame.UIScene_Features.OnFacial
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Features::OnFacial ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnFacial = NULL;

	if ( ! pFnOnFacial )
		pFnOnFacial = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Features.OnFacial" );

	UUIScene_Features_execOnFacial_Parms OnFacial_Parms;
	OnFacial_Parms.O = O;
	OnFacial_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnFacial, &OnFacial_Parms, NULL );

	return OnFacial_Parms.ReturnValue;
};

// Function NowGame.UIScene_Features.OnTattoo
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Features::OnTattoo ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnTattoo = NULL;

	if ( ! pFnOnTattoo )
		pFnOnTattoo = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Features.OnTattoo" );

	UUIScene_Features_execOnTattoo_Parms OnTattoo_Parms;
	OnTattoo_Parms.O = O;
	OnTattoo_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnTattoo, &OnTattoo_Parms, NULL );

	return OnTattoo_Parms.ReturnValue;
};

// Function NowGame.UIScene_Features.OnFace
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Features::OnFace ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnFace = NULL;

	if ( ! pFnOnFace )
		pFnOnFace = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Features.OnFace" );

	UUIScene_Features_execOnFace_Parms OnFace_Parms;
	OnFace_Parms.O = O;
	OnFace_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnFace, &OnFace_Parms, NULL );

	return OnFace_Parms.ReturnValue;
};

// Function NowGame.UIScene_Features.OnSkintone
// [0x00020002] 
// Parameters infos:
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

void UUIScene_Features::OnSkintone ( class UUIObject* Sender, int PlayerIndex )
{
	static UFunction* pFnOnSkintone = NULL;

	if ( ! pFnOnSkintone )
		pFnOnSkintone = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Features.OnSkintone" );

	UUIScene_Features_execOnSkintone_Parms OnSkintone_Parms;
	OnSkintone_Parms.Sender = Sender;
	OnSkintone_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSkintone, &OnSkintone_Parms, NULL );
};

// Function NowGame.UIScene_Features.SliderValueChanged
// [0x00020002] 
// Parameters infos:
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

void UUIScene_Features::SliderValueChanged ( class UUIObject* Sender, int PlayerIndex )
{
	static UFunction* pFnSliderValueChanged = NULL;

	if ( ! pFnSliderValueChanged )
		pFnSliderValueChanged = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Features.SliderValueChanged" );

	UUIScene_Features_execSliderValueChanged_Parms SliderValueChanged_Parms;
	SliderValueChanged_Parms.Sender = Sender;
	SliderValueChanged_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnSliderValueChanged, &SliderValueChanged_Parms, NULL );
};

// Function NowGame.UIScene_Features.ProcessInputAxis
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FInputEventParameters   EventParms                     ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UUIScene_Features::ProcessInputAxis ( struct FInputEventParameters* EventParms )
{
	static UFunction* pFnProcessInputAxis = NULL;

	if ( ! pFnProcessInputAxis )
		pFnProcessInputAxis = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Features.ProcessInputAxis" );

	UUIScene_Features_execProcessInputAxis_Parms ProcessInputAxis_Parms;

	this->ProcessEvent ( pFnProcessInputAxis, &ProcessInputAxis_Parms, NULL );

	if ( EventParms )
		memcpy ( EventParms, &ProcessInputAxis_Parms.EventParms, 0x20 );

	return ProcessInputAxis_Parms.ReturnValue;
};

// Function NowGame.UIScene_Features.ProcessInputKey
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FInputEventParameters   EventParms                     ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UUIScene_Features::ProcessInputKey ( struct FInputEventParameters* EventParms )
{
	static UFunction* pFnProcessInputKey = NULL;

	if ( ! pFnProcessInputKey )
		pFnProcessInputKey = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Features.ProcessInputKey" );

	UUIScene_Features_execProcessInputKey_Parms ProcessInputKey_Parms;

	this->ProcessEvent ( pFnProcessInputKey, &ProcessInputKey_Parms, NULL );

	if ( EventParms )
		memcpy ( EventParms, &ProcessInputKey_Parms.EventParms, 0x20 );

	return ProcessInputKey_Parms.ReturnValue;
};

// Function NowGame.UIScene_Features.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Features::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Features.SceneDeactivated" );

	UUIScene_Features_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Features.UpdateScene
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Features::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Features.UpdateScene" );

	UUIScene_Features_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Features.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Features::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Features.SceneActivated" );

	UUIScene_Features_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Features.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Features::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Features.InitScene" );

	UUIScene_Features_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_GMHouseMain.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_GMHouseMain::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GMHouseMain.PostInitUpdate" );

	UUIScene_GMHouseMain_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_GMHouseMain.getPlayerHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerHouse* UUIScene_GMHouseMain::getPlayerHouse ( )
{
	static UFunction* pFngetPlayerHouse = NULL;

	if ( ! pFngetPlayerHouse )
		pFngetPlayerHouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GMHouseMain.getPlayerHouse" );

	UUIScene_GMHouseMain_execgetPlayerHouse_Parms getPlayerHouse_Parms;

	this->ProcessEvent ( pFngetPlayerHouse, &getPlayerHouse_Parms, NULL );

	return getPlayerHouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_GMHouseMain.btnClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GMHouseMain::btnClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnbtnClicked = NULL;

	if ( ! pFnbtnClicked )
		pFnbtnClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GMHouseMain.btnClicked" );

	UUIScene_GMHouseMain_execbtnClicked_Parms btnClicked_Parms;
	btnClicked_Parms.EventObject = EventObject;
	btnClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnbtnClicked, &btnClicked_Parms, NULL );

	return btnClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_GMHouseMain.setHouseLabels
// [0x00020002] 
// Parameters infos:

void UUIScene_GMHouseMain::setHouseLabels ( )
{
	static UFunction* pFnsetHouseLabels = NULL;

	if ( ! pFnsetHouseLabels )
		pFnsetHouseLabels = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GMHouseMain.setHouseLabels" );

	UUIScene_GMHouseMain_execsetHouseLabels_Parms setHouseLabels_Parms;

	this->ProcessEvent ( pFnsetHouseLabels, &setHouseLabels_Parms, NULL );
};

// Function NowGame.UIScene_GMHouseMain.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GMHouseMain::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GMHouseMain.InitScene" );

	UUIScene_GMHouseMain_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_GuildMembers.OnChatRawInputKey
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FInputEventParameters   EventParms                     ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UUIScene_GuildMembers::OnChatRawInputKey ( struct FInputEventParameters* EventParms )
{
	static UFunction* pFnOnChatRawInputKey = NULL;

	if ( ! pFnOnChatRawInputKey )
		pFnOnChatRawInputKey = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.OnChatRawInputKey" );

	UUIScene_GuildMembers_execOnChatRawInputKey_Parms OnChatRawInputKey_Parms;

	this->ProcessEvent ( pFnOnChatRawInputKey, &OnChatRawInputKey_Parms, NULL );

	if ( EventParms )
		memcpy ( EventParms, &OnChatRawInputKey_Parms.EventParms, 0x20 );

	return OnChatRawInputKey_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMembers.KickAvatars
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildMembers::KickAvatars ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnKickAvatars = NULL;

	if ( ! pFnKickAvatars )
		pFnKickAvatars = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.KickAvatars" );

	UUIScene_GuildMembers_execKickAvatars_Parms KickAvatars_Parms;
	KickAvatars_Parms.O = O;
	KickAvatars_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnKickAvatars, &KickAvatars_Parms, NULL );

	return KickAvatars_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMembers.InviteAvatars
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildMembers::InviteAvatars ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnInviteAvatars = NULL;

	if ( ! pFnInviteAvatars )
		pFnInviteAvatars = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.InviteAvatars" );

	UUIScene_GuildMembers_execInviteAvatars_Parms InviteAvatars_Parms;
	InviteAvatars_Parms.O = O;
	InviteAvatars_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnInviteAvatars, &InviteAvatars_Parms, NULL );

	return InviteAvatars_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMembers.GuildHasBeenUpdated
// [0x00020002] 
// Parameters infos:

void UUIScene_GuildMembers::GuildHasBeenUpdated ( )
{
	static UFunction* pFnGuildHasBeenUpdated = NULL;

	if ( ! pFnGuildHasBeenUpdated )
		pFnGuildHasBeenUpdated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.GuildHasBeenUpdated" );

	UUIScene_GuildMembers_execGuildHasBeenUpdated_Parms GuildHasBeenUpdated_Parms;

	this->ProcessEvent ( pFnGuildHasBeenUpdated, &GuildHasBeenUpdated_Parms, NULL );
};

// Function NowGame.UIScene_GuildMembers.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildMembers::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.SceneDeactivated" );

	UUIScene_GuildMembers_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_GuildMembers.setStunn
// [0x00020002] 
// Parameters infos:
// float                          Time                           ( CPF_Parm )

void UUIScene_GuildMembers::setStunn ( float Time )
{
	static UFunction* pFnsetStunn = NULL;

	if ( ! pFnsetStunn )
		pFnsetStunn = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.setStunn" );

	UUIScene_GuildMembers_execsetStunn_Parms setStunn_Parms;
	setStunn_Parms.Time = Time;

	this->ProcessEvent ( pFnsetStunn, &setStunn_Parms, NULL );
};

// Function NowGame.UIScene_GuildMembers.PostUpdateInitialize
// [0x00820002] 
// Parameters infos:

void UUIScene_GuildMembers::PostUpdateInitialize ( )
{
	static UFunction* pFnPostUpdateInitialize = NULL;

	if ( ! pFnPostUpdateInitialize )
		pFnPostUpdateInitialize = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.PostUpdateInitialize" );

	UUIScene_GuildMembers_execPostUpdateInitialize_Parms PostUpdateInitialize_Parms;

	this->ProcessEvent ( pFnPostUpdateInitialize, &PostUpdateInitialize_Parms, NULL );
};

// Function NowGame.UIScene_GuildMembers.downBtnPushed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildMembers::downBtnPushed ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFndownBtnPushed = NULL;

	if ( ! pFndownBtnPushed )
		pFndownBtnPushed = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.downBtnPushed" );

	UUIScene_GuildMembers_execdownBtnPushed_Parms downBtnPushed_Parms;
	downBtnPushed_Parms.O = O;
	downBtnPushed_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFndownBtnPushed, &downBtnPushed_Parms, NULL );

	return downBtnPushed_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMembers.upBtnPushed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildMembers::upBtnPushed ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnupBtnPushed = NULL;

	if ( ! pFnupBtnPushed )
		pFnupBtnPushed = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.upBtnPushed" );

	UUIScene_GuildMembers_execupBtnPushed_Parms upBtnPushed_Parms;
	upBtnPushed_Parms.O = O;
	upBtnPushed_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnupBtnPushed, &upBtnPushed_Parms, NULL );

	return upBtnPushed_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMembers.Demote
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildMembers::Demote ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnDemote = NULL;

	if ( ! pFnDemote )
		pFnDemote = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.Demote" );

	UUIScene_GuildMembers_execDemote_Parms Demote_Parms;
	Demote_Parms.O = O;
	Demote_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnDemote, &Demote_Parms, NULL );

	return Demote_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMembers.Promote
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildMembers::Promote ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnPromote = NULL;

	if ( ! pFnPromote )
		pFnPromote = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.Promote" );

	UUIScene_GuildMembers_execPromote_Parms Promote_Parms;
	Promote_Parms.O = O;
	Promote_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnPromote, &Promote_Parms, NULL );

	return Promote_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMembers.disableAllOtherCheckboxes
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildMembers::disableAllOtherCheckboxes ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFndisableAllOtherCheckboxes = NULL;

	if ( ! pFndisableAllOtherCheckboxes )
		pFndisableAllOtherCheckboxes = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.disableAllOtherCheckboxes" );

	UUIScene_GuildMembers_execdisableAllOtherCheckboxes_Parms disableAllOtherCheckboxes_Parms;
	disableAllOtherCheckboxes_Parms.O = O;
	disableAllOtherCheckboxes_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFndisableAllOtherCheckboxes, &disableAllOtherCheckboxes_Parms, NULL );

	return disableAllOtherCheckboxes_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildMembers.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildMembers::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.InitScene" );

	UUIScene_GuildMembers_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_GuildMembers.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildMembers::OnClose ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildMembers.OnClose" );

	UUIScene_GuildMembers_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.EventObject = EventObject;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildOptions.GetShortName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UUIScene_GuildOptions::GetShortName ( )
{
	static UFunction* pFnGetShortName = NULL;

	if ( ! pFnGetShortName )
		pFnGetShortName = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildOptions.GetShortName" );

	UUIScene_GuildOptions_execGetShortName_Parms GetShortName_Parms;

	this->ProcessEvent ( pFnGetShortName, &GetShortName_Parms, NULL );

	return GetShortName_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildOptions.TestShortName
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_GuildOptions::TestShortName ( )
{
	static UFunction* pFnTestShortName = NULL;

	if ( ! pFnTestShortName )
		pFnTestShortName = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildOptions.TestShortName" );

	UUIScene_GuildOptions_execTestShortName_Parms TestShortName_Parms;

	this->ProcessEvent ( pFnTestShortName, &TestShortName_Parms, NULL );

	return TestShortName_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildOptions.OnAcronymConfirm
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildOptions::OnAcronymConfirm ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnAcronymConfirm = NULL;

	if ( ! pFnOnAcronymConfirm )
		pFnOnAcronymConfirm = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildOptions.OnAcronymConfirm" );

	UUIScene_GuildOptions_execOnAcronymConfirm_Parms OnAcronymConfirm_Parms;
	OnAcronymConfirm_Parms.EventObject = EventObject;
	OnAcronymConfirm_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnAcronymConfirm, &OnAcronymConfirm_Parms, NULL );

	return OnAcronymConfirm_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildOptions.OnOptionConfirm
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_GuildOptions::OnOptionConfirm ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnOptionConfirm = NULL;

	if ( ! pFnOnOptionConfirm )
		pFnOnOptionConfirm = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildOptions.OnOptionConfirm" );

	UUIScene_GuildOptions_execOnOptionConfirm_Parms OnOptionConfirm_Parms;
	OnOptionConfirm_Parms.EventObject = EventObject;
	OnOptionConfirm_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnOptionConfirm, &OnOptionConfirm_Parms, NULL );

	return OnOptionConfirm_Parms.ReturnValue;
};

// Function NowGame.UIScene_GuildOptions.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_GuildOptions::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_GuildOptions.InitScene" );

	UUIScene_GuildOptions_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_HackFlagList.Select
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HackFlagList::Select ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnSelect = NULL;

	if ( ! pFnSelect )
		pFnSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HackFlagList.Select" );

	UUIScene_HackFlagList_execSelect_Parms Select_Parms;
	Select_Parms.EventObject = EventObject;
	Select_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnSelect, &Select_Parms, NULL );

	return Select_Parms.ReturnValue;
};

// Function NowGame.UIScene_HackFlagList.CloseHackFlag
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HackFlagList::CloseHackFlag ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnCloseHackFlag = NULL;

	if ( ! pFnCloseHackFlag )
		pFnCloseHackFlag = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HackFlagList.CloseHackFlag" );

	UUIScene_HackFlagList_execCloseHackFlag_Parms CloseHackFlag_Parms;
	CloseHackFlag_Parms.O = O;
	CloseHackFlag_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCloseHackFlag, &CloseHackFlag_Parms, NULL );

	return CloseHackFlag_Parms.ReturnValue;
};

// Function NowGame.UIScene_HackFlagList.LastPage
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HackFlagList::LastPage ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnLastPage = NULL;

	if ( ! pFnLastPage )
		pFnLastPage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HackFlagList.LastPage" );

	UUIScene_HackFlagList_execLastPage_Parms LastPage_Parms;
	LastPage_Parms.O = O;
	LastPage_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnLastPage, &LastPage_Parms, NULL );

	return LastPage_Parms.ReturnValue;
};

// Function NowGame.UIScene_HackFlagList.NextPage
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HackFlagList::NextPage ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnNextPage = NULL;

	if ( ! pFnNextPage )
		pFnNextPage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HackFlagList.NextPage" );

	UUIScene_HackFlagList_execNextPage_Parms NextPage_Parms;
	NextPage_Parms.O = O;
	NextPage_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextPage, &NextPage_Parms, NULL );

	return NextPage_Parms.ReturnValue;
};

// Function NowGame.UIScene_HackFlagList.ClaimHackFlag
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HackFlagList::ClaimHackFlag ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnClaimHackFlag = NULL;

	if ( ! pFnClaimHackFlag )
		pFnClaimHackFlag = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HackFlagList.ClaimHackFlag" );

	UUIScene_HackFlagList_execClaimHackFlag_Parms ClaimHackFlag_Parms;
	ClaimHackFlag_Parms.O = O;
	ClaimHackFlag_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnClaimHackFlag, &ClaimHackFlag_Parms, NULL );

	return ClaimHackFlag_Parms.ReturnValue;
};

// Function NowGame.UIScene_HackFlagList.displayDescription
// [0x00020000] 
// Parameters infos:
// int                            totalIndex                     ( CPF_Parm )

void UUIScene_HackFlagList::displayDescription ( int totalIndex )
{
	static UFunction* pFndisplayDescription = NULL;

	if ( ! pFndisplayDescription )
		pFndisplayDescription = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HackFlagList.displayDescription" );

	UUIScene_HackFlagList_execdisplayDescription_Parms displayDescription_Parms;
	displayDescription_Parms.totalIndex = totalIndex;

	this->ProcessEvent ( pFndisplayDescription, &displayDescription_Parms, NULL );
};

// Function NowGame.UIScene_HackFlagList.updateSceneList
// [0x00020002] 
// Parameters infos:
// int                            Page                           ( CPF_Parm )

void UUIScene_HackFlagList::updateSceneList ( int Page )
{
	static UFunction* pFnupdateSceneList = NULL;

	if ( ! pFnupdateSceneList )
		pFnupdateSceneList = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HackFlagList.updateSceneList" );

	UUIScene_HackFlagList_execupdateSceneList_Parms updateSceneList_Parms;
	updateSceneList_Parms.Page = Page;

	this->ProcessEvent ( pFnupdateSceneList, &updateSceneList_Parms, NULL );
};

// Function NowGame.UIScene_HackFlagList.HackFlagsUpdated
// [0x00020002] 
// Parameters infos:

void UUIScene_HackFlagList::HackFlagsUpdated ( )
{
	static UFunction* pFnHackFlagsUpdated = NULL;

	if ( ! pFnHackFlagsUpdated )
		pFnHackFlagsUpdated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HackFlagList.HackFlagsUpdated" );

	UUIScene_HackFlagList_execHackFlagsUpdated_Parms HackFlagsUpdated_Parms;

	this->ProcessEvent ( pFnHackFlagsUpdated, &HackFlagsUpdated_Parms, NULL );
};

// Function NowGame.UIScene_HackFlagList.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_HackFlagList::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HackFlagList.InitScene" );

	UUIScene_HackFlagList_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_HackFlagList.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_HackFlagList::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HackFlagList.SceneActivated" );

	UUIScene_HackFlagList_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_HouseCreation.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseCreation::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseCreation.PostInitUpdate" );

	UUIScene_HouseCreation_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_HouseCreation.AbortClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseCreation::AbortClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAbortClicked = NULL;

	if ( ! pFnAbortClicked )
		pFnAbortClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseCreation.AbortClicked" );

	UUIScene_HouseCreation_execAbortClicked_Parms AbortClicked_Parms;
	AbortClicked_Parms.EventObject = EventObject;
	AbortClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAbortClicked, &AbortClicked_Parms, NULL );

	return AbortClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseCreation.CloseConfirmScene
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseCreation::CloseConfirmScene ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCloseConfirmScene = NULL;

	if ( ! pFnCloseConfirmScene )
		pFnCloseConfirmScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseCreation.CloseConfirmScene" );

	UUIScene_HouseCreation_execCloseConfirmScene_Parms CloseConfirmScene_Parms;
	CloseConfirmScene_Parms.EventObject = EventObject;
	CloseConfirmScene_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCloseConfirmScene, &CloseConfirmScene_Parms, NULL );

	return CloseConfirmScene_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseCreation.CreateHouse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseCreation::CreateHouse ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCreateHouse = NULL;

	if ( ! pFnCreateHouse )
		pFnCreateHouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseCreation.CreateHouse" );

	UUIScene_HouseCreation_execCreateHouse_Parms CreateHouse_Parms;
	CreateHouse_Parms.EventObject = EventObject;
	CreateHouse_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateHouse, &CreateHouse_Parms, NULL );

	return CreateHouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseCreation.getPlayerHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerHouse* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerHouse* UUIScene_HouseCreation::getPlayerHouse ( )
{
	static UFunction* pFngetPlayerHouse = NULL;

	if ( ! pFngetPlayerHouse )
		pFngetPlayerHouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseCreation.getPlayerHouse" );

	UUIScene_HouseCreation_execgetPlayerHouse_Parms getPlayerHouse_Parms;

	this->ProcessEvent ( pFngetPlayerHouse, &getPlayerHouse_Parms, NULL );

	return getPlayerHouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseCreation.Clicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseCreation::Clicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnClicked = NULL;

	if ( ! pFnClicked )
		pFnClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseCreation.Clicked" );

	UUIScene_HouseCreation_execClicked_Parms Clicked_Parms;
	Clicked_Parms.EventObject = EventObject;
	Clicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnClicked, &Clicked_Parms, NULL );

	return Clicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseCreation.OnScrollActivity
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScrollbar*            Sender                         ( CPF_Parm )
// float                          PositionChange                 ( CPF_Parm )
// unsigned long                  bPositionMaxed                 ( CPF_OptionalParm | CPF_Parm )

bool UUIScene_HouseCreation::OnScrollActivity ( class UUIScrollbar* Sender, float PositionChange, unsigned long bPositionMaxed )
{
	static UFunction* pFnOnScrollActivity = NULL;

	if ( ! pFnOnScrollActivity )
		pFnOnScrollActivity = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseCreation.OnScrollActivity" );

	UUIScene_HouseCreation_execOnScrollActivity_Parms OnScrollActivity_Parms;
	OnScrollActivity_Parms.Sender = Sender;
	OnScrollActivity_Parms.PositionChange = PositionChange;
	OnScrollActivity_Parms.bPositionMaxed = bPositionMaxed;

	this->ProcessEvent ( pFnOnScrollActivity, &OnScrollActivity_Parms, NULL );

	return OnScrollActivity_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseCreation.RemoveRescource
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseCreation::RemoveRescource ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnRemoveRescource = NULL;

	if ( ! pFnRemoveRescource )
		pFnRemoveRescource = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseCreation.RemoveRescource" );

	UUIScene_HouseCreation_execRemoveRescource_Parms RemoveRescource_Parms;
	RemoveRescource_Parms.EventObject = EventObject;
	RemoveRescource_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnRemoveRescource, &RemoveRescource_Parms, NULL );

	return RemoveRescource_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseCreation.AddRescource
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseCreation::AddRescource ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAddRescource = NULL;

	if ( ! pFnAddRescource )
		pFnAddRescource = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseCreation.AddRescource" );

	UUIScene_HouseCreation_execAddRescource_Parms AddRescource_Parms;
	AddRescource_Parms.EventObject = EventObject;
	AddRescource_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAddRescource, &AddRescource_Parms, NULL );

	return AddRescource_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseCreation.HelpCreate
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseCreation::HelpCreate ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnHelpCreate = NULL;

	if ( ! pFnHelpCreate )
		pFnHelpCreate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseCreation.HelpCreate" );

	UUIScene_HouseCreation_execHelpCreate_Parms HelpCreate_Parms;
	HelpCreate_Parms.EventObject = EventObject;
	HelpCreate_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnHelpCreate, &HelpCreate_Parms, NULL );

	return HelpCreate_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseCreation.HelpConstruction
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_HouseCreation::HelpConstruction ( )
{
	static UFunction* pFnHelpConstruction = NULL;

	if ( ! pFnHelpConstruction )
		pFnHelpConstruction = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseCreation.HelpConstruction" );

	UUIScene_HouseCreation_execHelpConstruction_Parms HelpConstruction_Parms;

	this->ProcessEvent ( pFnHelpConstruction, &HelpConstruction_Parms, NULL );

	return HelpConstruction_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseCreation.stopWorking
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseCreation::stopWorking ( )
{
	static UFunction* pFnstopWorking = NULL;

	if ( ! pFnstopWorking )
		pFnstopWorking = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseCreation.stopWorking" );

	UUIScene_HouseCreation_execstopWorking_Parms stopWorking_Parms;

	this->ProcessEvent ( pFnstopWorking, &stopWorking_Parms, NULL );
};

// Function NowGame.UIScene_HouseCreation.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_HouseCreation::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseCreation.InitScene" );

	UUIScene_HouseCreation_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_HouseOptions.AbortClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseOptions::AbortClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAbortClicked = NULL;

	if ( ! pFnAbortClicked )
		pFnAbortClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseOptions.AbortClicked" );

	UUIScene_HouseOptions_execAbortClicked_Parms AbortClicked_Parms;
	AbortClicked_Parms.EventObject = EventObject;
	AbortClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAbortClicked, &AbortClicked_Parms, NULL );

	return AbortClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseOptions.closeConfirmFrame
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseOptions::closeConfirmFrame ( )
{
	static UFunction* pFncloseConfirmFrame = NULL;

	if ( ! pFncloseConfirmFrame )
		pFncloseConfirmFrame = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseOptions.closeConfirmFrame" );

	UUIScene_HouseOptions_execcloseConfirmFrame_Parms closeConfirmFrame_Parms;

	this->ProcessEvent ( pFncloseConfirmFrame, &closeConfirmFrame_Parms, NULL );
};

// Function NowGame.UIScene_HouseOptions.openConfirmFrame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseOptions::openConfirmFrame ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnopenConfirmFrame = NULL;

	if ( ! pFnopenConfirmFrame )
		pFnopenConfirmFrame = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseOptions.openConfirmFrame" );

	UUIScene_HouseOptions_execopenConfirmFrame_Parms openConfirmFrame_Parms;
	openConfirmFrame_Parms.EventObject = EventObject;
	openConfirmFrame_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnopenConfirmFrame, &openConfirmFrame_Parms, NULL );

	return openConfirmFrame_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseOptions.confirmClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseOptions::confirmClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnconfirmClicked = NULL;

	if ( ! pFnconfirmClicked )
		pFnconfirmClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseOptions.confirmClicked" );

	UUIScene_HouseOptions_execconfirmClicked_Parms confirmClicked_Parms;
	confirmClicked_Parms.EventObject = EventObject;
	confirmClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnconfirmClicked, &confirmClicked_Parms, NULL );

	return confirmClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseOptions.closeSceneClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseOptions::closeSceneClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFncloseSceneClicked = NULL;

	if ( ! pFncloseSceneClicked )
		pFncloseSceneClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseOptions.closeSceneClicked" );

	UUIScene_HouseOptions_execcloseSceneClicked_Parms closeSceneClicked_Parms;
	closeSceneClicked_Parms.EventObject = EventObject;
	closeSceneClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFncloseSceneClicked, &closeSceneClicked_Parms, NULL );

	return closeSceneClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseOptions.UpKeepClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseOptions::UpKeepClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnUpKeepClicked = NULL;

	if ( ! pFnUpKeepClicked )
		pFnUpKeepClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseOptions.UpKeepClicked" );

	UUIScene_HouseOptions_execUpKeepClicked_Parms UpKeepClicked_Parms;
	UpKeepClicked_Parms.EventObject = EventObject;
	UpKeepClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnUpKeepClicked, &UpKeepClicked_Parms, NULL );

	return UpKeepClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseOptions.FriendsClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseOptions::FriendsClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnFriendsClicked = NULL;

	if ( ! pFnFriendsClicked )
		pFnFriendsClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseOptions.FriendsClicked" );

	UUIScene_HouseOptions_execFriendsClicked_Parms FriendsClicked_Parms;
	FriendsClicked_Parms.EventObject = EventObject;
	FriendsClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnFriendsClicked, &FriendsClicked_Parms, NULL );

	return FriendsClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseOptions.DepositClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseOptions::DepositClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnDepositClicked = NULL;

	if ( ! pFnDepositClicked )
		pFnDepositClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseOptions.DepositClicked" );

	UUIScene_HouseOptions_execDepositClicked_Parms DepositClicked_Parms;
	DepositClicked_Parms.EventObject = EventObject;
	DepositClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnDepositClicked, &DepositClicked_Parms, NULL );

	return DepositClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseOptions.ConfirmDeposit
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseOptions::ConfirmDeposit ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnConfirmDeposit = NULL;

	if ( ! pFnConfirmDeposit )
		pFnConfirmDeposit = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseOptions.ConfirmDeposit" );

	UUIScene_HouseOptions_execConfirmDeposit_Parms ConfirmDeposit_Parms;
	ConfirmDeposit_Parms.EventObject = EventObject;
	ConfirmDeposit_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnConfirmDeposit, &ConfirmDeposit_Parms, NULL );

	return ConfirmDeposit_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseOptions.CancelDeposit
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseOptions::CancelDeposit ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCancelDeposit = NULL;

	if ( ! pFnCancelDeposit )
		pFnCancelDeposit = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseOptions.CancelDeposit" );

	UUIScene_HouseOptions_execCancelDeposit_Parms CancelDeposit_Parms;
	CancelDeposit_Parms.EventObject = EventObject;
	CancelDeposit_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCancelDeposit, &CancelDeposit_Parms, NULL );

	return CancelDeposit_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseOptions.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseOptions::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseOptions.PostInitUpdate" );

	UUIScene_HouseOptions_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_HouseOptions.setDepositInit
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseOptions::setDepositInit ( )
{
	static UFunction* pFnsetDepositInit = NULL;

	if ( ! pFnsetDepositInit )
		pFnsetDepositInit = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseOptions.setDepositInit" );

	UUIScene_HouseOptions_execsetDepositInit_Parms setDepositInit_Parms;

	this->ProcessEvent ( pFnsetDepositInit, &setDepositInit_Parms, NULL );
};

// Function NowGame.UIScene_HouseOptions.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_HouseOptions::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseOptions.InitScene" );

	UUIScene_HouseOptions_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_HouseUpKeep.CloseButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_HouseUpKeep::CloseButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCloseButtonClicked = NULL;

	if ( ! pFnCloseButtonClicked )
		pFnCloseButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseUpKeep.CloseButtonClicked" );

	UUIScene_HouseUpKeep_execCloseButtonClicked_Parms CloseButtonClicked_Parms;
	CloseButtonClicked_Parms.EventObject = EventObject;
	CloseButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCloseButtonClicked, &CloseButtonClicked_Parms, NULL );

	return CloseButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_HouseUpKeep.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_HouseUpKeep::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseUpKeep.PostInitUpdate" );

	UUIScene_HouseUpKeep_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_HouseUpKeep.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_HouseUpKeep::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_HouseUpKeep.InitScene" );

	UUIScene_HouseUpKeep_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Inventory.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_Inventory::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.PostInitUpdate" );

	UUIScene_Inventory_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_Inventory.SplitStack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_Inventory::SplitStack ( )
{
	static UFunction* pFnSplitStack = NULL;

	if ( ! pFnSplitStack )
		pFnSplitStack = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.SplitStack" );

	UUIScene_Inventory_execSplitStack_Parms SplitStack_Parms;

	this->ProcessEvent ( pFnSplitStack, &SplitStack_Parms, NULL );

	return SplitStack_Parms.ReturnValue;
};

// Function NowGame.UIScene_Inventory.ProcessInputKey
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FInputEventParameters   EventParms                     ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UUIScene_Inventory::ProcessInputKey ( struct FInputEventParameters* EventParms )
{
	static UFunction* pFnProcessInputKey = NULL;

	if ( ! pFnProcessInputKey )
		pFnProcessInputKey = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.ProcessInputKey" );

	UUIScene_Inventory_execProcessInputKey_Parms ProcessInputKey_Parms;

	this->ProcessEvent ( pFnProcessInputKey, &ProcessInputKey_Parms, NULL );

	if ( EventParms )
		memcpy ( EventParms, &ProcessInputKey_Parms.EventParms, 0x20 );

	return ProcessInputKey_Parms.ReturnValue;
};

// Function NowGame.UIScene_Inventory.OnSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Inventory::OnSlotClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSlotClicked = NULL;

	if ( ! pFnOnSlotClicked )
		pFnOnSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.OnSlotClicked" );

	UUIScene_Inventory_execOnSlotClicked_Parms OnSlotClicked_Parms;
	OnSlotClicked_Parms.EventObject = EventObject;
	OnSlotClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSlotClicked, &OnSlotClicked_Parms, NULL );

	return OnSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Inventory.OnItemOpenContextMenu
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_Inventory::OnItemOpenContextMenu ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnItemOpenContextMenu = NULL;

	if ( ! pFnOnItemOpenContextMenu )
		pFnOnItemOpenContextMenu = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.OnItemOpenContextMenu" );

	UUIScene_Inventory_execOnItemOpenContextMenu_Parms OnItemOpenContextMenu_Parms;
	OnItemOpenContextMenu_Parms.Sender = Sender;
	OnItemOpenContextMenu_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnItemOpenContextMenu, &OnItemOpenContextMenu_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnItemOpenContextMenu_Parms.CustomContextMenu;

	return OnItemOpenContextMenu_Parms.ReturnValue;
};

// Function NowGame.UIScene_Inventory.OnItemDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Inventory::OnItemDragDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnItemDragDrop = NULL;

	if ( ! pFnOnItemDragDrop )
		pFnOnItemDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.OnItemDragDrop" );

	UUIScene_Inventory_execOnItemDragDrop_Parms OnItemDragDrop_Parms;
	OnItemDragDrop_Parms.Target = Target;
	OnItemDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnOnItemDragDrop, &OnItemDragDrop_Parms, NULL );

	return OnItemDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_Inventory.OnItemDelete
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Inventory::OnItemDelete ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnItemDelete = NULL;

	if ( ! pFnOnItemDelete )
		pFnOnItemDelete = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.OnItemDelete" );

	UUIScene_Inventory_execOnItemDelete_Parms OnItemDelete_Parms;
	OnItemDelete_Parms.Target = Target;
	OnItemDelete_Parms.Source = Source;

	this->ProcessEvent ( pFnOnItemDelete, &OnItemDelete_Parms, NULL );

	return OnItemDelete_Parms.ReturnValue;
};

// Function NowGame.UIScene_Inventory.OnItemDeleteClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Inventory::OnItemDeleteClick ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnItemDeleteClick = NULL;

	if ( ! pFnOnItemDeleteClick )
		pFnOnItemDeleteClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.OnItemDeleteClick" );

	UUIScene_Inventory_execOnItemDeleteClick_Parms OnItemDeleteClick_Parms;
	OnItemDeleteClick_Parms.EventObject = EventObject;
	OnItemDeleteClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnItemDeleteClick, &OnItemDeleteClick_Parms, NULL );

	return OnItemDeleteClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_Inventory.OnItemDragBegin
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Inventory::OnItemDragBegin ( class UUIScreenObject* Source )
{
	static UFunction* pFnOnItemDragBegin = NULL;

	if ( ! pFnOnItemDragBegin )
		pFnOnItemDragBegin = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.OnItemDragBegin" );

	UUIScene_Inventory_execOnItemDragBegin_Parms OnItemDragBegin_Parms;
	OnItemDragBegin_Parms.Source = Source;

	this->ProcessEvent ( pFnOnItemDragBegin, &OnItemDragBegin_Parms, NULL );

	return OnItemDragBegin_Parms.ReturnValue;
};

// Function NowGame.UIScene_Inventory.OnItemClicked
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Inventory::OnItemClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnItemClicked = NULL;

	if ( ! pFnOnItemClicked )
		pFnOnItemClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.OnItemClicked" );

	UUIScene_Inventory_execOnItemClicked_Parms OnItemClicked_Parms;
	OnItemClicked_Parms.EventObject = EventObject;
	OnItemClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnItemClicked, &OnItemClicked_Parms, NULL );

	return OnItemClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Inventory.UpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_Inventory::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.UpdatePage" );

	UUIScene_Inventory_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_Inventory.ItemListChanged
// [0x00020002] 
// Parameters infos:
// TArray< struct FString >       ItemData                       ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Inventory::ItemListChanged ( TArray< struct FString > ItemData )
{
	static UFunction* pFnItemListChanged = NULL;

	if ( ! pFnItemListChanged )
		pFnItemListChanged = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.ItemListChanged" );

	UUIScene_Inventory_execItemListChanged_Parms ItemListChanged_Parms;
	memcpy ( &ItemListChanged_Parms.ItemData, &ItemData, 0xC );

	this->ProcessEvent ( pFnItemListChanged, &ItemListChanged_Parms, NULL );
};

// Function NowGame.UIScene_Inventory.FadeIn
// [0x00020002] 
// Parameters infos:
// unsigned long                  bResetOpacity                  ( CPF_Parm )

void UUIScene_Inventory::FadeIn ( unsigned long bResetOpacity )
{
	static UFunction* pFnFadeIn = NULL;

	if ( ! pFnFadeIn )
		pFnFadeIn = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.FadeIn" );

	UUIScene_Inventory_execFadeIn_Parms FadeIn_Parms;
	FadeIn_Parms.bResetOpacity = bResetOpacity;

	this->ProcessEvent ( pFnFadeIn, &FadeIn_Parms, NULL );
};

// Function NowGame.UIScene_Inventory.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Inventory::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.SceneDeactivated" );

	UUIScene_Inventory_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Inventory.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Inventory::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.SceneActivated" );

	UUIScene_Inventory_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Inventory.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Inventory::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Inventory.InitScene" );

	UUIScene_Inventory_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_ItemInspection.UpdateItemInfo
// [0x00020002] 
// Parameters infos:

void UUIScene_ItemInspection::UpdateItemInfo ( )
{
	static UFunction* pFnUpdateItemInfo = NULL;

	if ( ! pFnUpdateItemInfo )
		pFnUpdateItemInfo = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ItemInspection.UpdateItemInfo" );

	UUIScene_ItemInspection_execUpdateItemInfo_Parms UpdateItemInfo_Parms;

	this->ProcessEvent ( pFnUpdateItemInfo, &UpdateItemInfo_Parms, NULL );
};

// Function NowGame.UIScene_ItemInspection.SetItemGuid
// [0x00020002] 
// Parameters infos:
// struct FString                 sGuid                          ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_ItemInspection::SetItemGuid ( struct FString sGuid )
{
	static UFunction* pFnSetItemGuid = NULL;

	if ( ! pFnSetItemGuid )
		pFnSetItemGuid = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ItemInspection.SetItemGuid" );

	UUIScene_ItemInspection_execSetItemGuid_Parms SetItemGuid_Parms;
	memcpy ( &SetItemGuid_Parms.sGuid, &sGuid, 0xC );

	this->ProcessEvent ( pFnSetItemGuid, &SetItemGuid_Parms, NULL );
};

// Function NowGame.UIScene_ItemInspection.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_ItemInspection::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ItemInspection.SceneDeactivated" );

	UUIScene_ItemInspection_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_ItemInspection.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_ItemInspection::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ItemInspection.SceneActivated" );

	UUIScene_ItemInspection_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_ItemInspection.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_ItemInspection::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ItemInspection.InitScene" );

	UUIScene_ItemInspection_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Keybinds.ProcessInputKey
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FInputEventParameters   EventParms                     ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UUIScene_Keybinds::ProcessInputKey ( struct FInputEventParameters* EventParms )
{
	static UFunction* pFnProcessInputKey = NULL;

	if ( ! pFnProcessInputKey )
		pFnProcessInputKey = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Keybinds.ProcessInputKey" );

	UUIScene_Keybinds_execProcessInputKey_Parms ProcessInputKey_Parms;

	this->ProcessEvent ( pFnProcessInputKey, &ProcessInputKey_Parms, NULL );

	if ( EventParms )
		memcpy ( EventParms, &ProcessInputKey_Parms.EventParms, 0x20 );

	return ProcessInputKey_Parms.ReturnValue;
};

// Function NowGame.UIScene_Keybinds.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Keybinds::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Keybinds.SceneActivated" );

	UUIScene_Keybinds_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Keybinds.OnRightClicked
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_Keybinds::OnRightClicked ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnOnRightClicked = NULL;

	if ( ! pFnOnRightClicked )
		pFnOnRightClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Keybinds.OnRightClicked" );

	UUIScene_Keybinds_execOnRightClicked_Parms OnRightClicked_Parms;
	OnRightClicked_Parms.Sender = Sender;
	OnRightClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnRightClicked, &OnRightClicked_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = OnRightClicked_Parms.CustomContextMenu;

	return OnRightClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Keybinds.OnKeyClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// int                            Source                         ( CPF_Parm )

bool UUIScene_Keybinds::OnKeyClicked ( class UUIScreenObject* Target, int Source )
{
	static UFunction* pFnOnKeyClicked = NULL;

	if ( ! pFnOnKeyClicked )
		pFnOnKeyClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Keybinds.OnKeyClicked" );

	UUIScene_Keybinds_execOnKeyClicked_Parms OnKeyClicked_Parms;
	OnKeyClicked_Parms.Target = Target;
	OnKeyClicked_Parms.Source = Source;

	this->ProcessEvent ( pFnOnKeyClicked, &OnKeyClicked_Parms, NULL );

	return OnKeyClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Keybinds.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Keybinds::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Keybinds.InitScene" );

	UUIScene_Keybinds_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Keybinds.UpdateAltFunctionButton
// [0x00020002] 
// Parameters infos:

void UUIScene_Keybinds::UpdateAltFunctionButton ( )
{
	static UFunction* pFnUpdateAltFunctionButton = NULL;

	if ( ! pFnUpdateAltFunctionButton )
		pFnUpdateAltFunctionButton = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Keybinds.UpdateAltFunctionButton" );

	UUIScene_Keybinds_execUpdateAltFunctionButton_Parms UpdateAltFunctionButton_Parms;

	this->ProcessEvent ( pFnUpdateAltFunctionButton, &UpdateAltFunctionButton_Parms, NULL );
};

// Function NowGame.UIScene_Keybinds.SwapAlt
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// int                            Source                         ( CPF_Parm )

bool UUIScene_Keybinds::SwapAlt ( class UUIScreenObject* Target, int Source )
{
	static UFunction* pFnSwapAlt = NULL;

	if ( ! pFnSwapAlt )
		pFnSwapAlt = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Keybinds.SwapAlt" );

	UUIScene_Keybinds_execSwapAlt_Parms SwapAlt_Parms;
	SwapAlt_Parms.Target = Target;
	SwapAlt_Parms.Source = Source;

	this->ProcessEvent ( pFnSwapAlt, &SwapAlt_Parms, NULL );

	return SwapAlt_Parms.ReturnValue;
};

// Function NowGame.UIScene_LoginAlreadyLoggedIn.UpdateScene
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_LoginAlreadyLoggedIn::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LoginAlreadyLoggedIn.UpdateScene" );

	UUIScene_LoginAlreadyLoggedIn_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_LoginAlreadyLoggedIn.btnOkClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_LoginAlreadyLoggedIn::btnOkClicked ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnbtnOkClicked = NULL;

	if ( ! pFnbtnOkClicked )
		pFnbtnOkClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LoginAlreadyLoggedIn.btnOkClicked" );

	UUIScene_LoginAlreadyLoggedIn_execbtnOkClicked_Parms btnOkClicked_Parms;
	btnOkClicked_Parms.O = O;
	btnOkClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnbtnOkClicked, &btnOkClicked_Parms, NULL );

	return btnOkClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_LoginAlreadyLoggedIn.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_LoginAlreadyLoggedIn::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LoginAlreadyLoggedIn.SceneActivated" );

	UUIScene_LoginAlreadyLoggedIn_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_LoginAlreadyLoggedIn.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_LoginAlreadyLoggedIn::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LoginAlreadyLoggedIn.InitScene" );

	UUIScene_LoginAlreadyLoggedIn_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_LoginBannedAccount.UpdateScene
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_LoginBannedAccount::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LoginBannedAccount.UpdateScene" );

	UUIScene_LoginBannedAccount_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_LoginBannedAccount.btnOkClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_LoginBannedAccount::btnOkClicked ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnbtnOkClicked = NULL;

	if ( ! pFnbtnOkClicked )
		pFnbtnOkClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LoginBannedAccount.btnOkClicked" );

	UUIScene_LoginBannedAccount_execbtnOkClicked_Parms btnOkClicked_Parms;
	btnOkClicked_Parms.O = O;
	btnOkClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnbtnOkClicked, &btnOkClicked_Parms, NULL );

	return btnOkClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_LoginBannedAccount.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_LoginBannedAccount::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LoginBannedAccount.SceneActivated" );

	UUIScene_LoginBannedAccount_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_LoginBannedAccount.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_LoginBannedAccount::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_LoginBannedAccount.InitScene" );

	UUIScene_LoginBannedAccount_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_MaterialProcess.SendTellCmd
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )

bool UUIScene_MaterialProcess::SendTellCmd ( struct FString Command )
{
	static UFunction* pFnSendTellCmd = NULL;

	if ( ! pFnSendTellCmd )
		pFnSendTellCmd = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_MaterialProcess.SendTellCmd" );

	UUIScene_MaterialProcess_execSendTellCmd_Parms SendTellCmd_Parms;
	memcpy ( &SendTellCmd_Parms.Command, &Command, 0xC );

	this->ProcessEvent ( pFnSendTellCmd, &SendTellCmd_Parms, NULL );

	return SendTellCmd_Parms.ReturnValue;
};

// Function NowGame.UIScene_MaterialProcess.HideNotOreLabel
// [0x00020002] 
// Parameters infos:

void UUIScene_MaterialProcess::HideNotOreLabel ( )
{
	static UFunction* pFnHideNotOreLabel = NULL;

	if ( ! pFnHideNotOreLabel )
		pFnHideNotOreLabel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_MaterialProcess.HideNotOreLabel" );

	UUIScene_MaterialProcess_execHideNotOreLabel_Parms HideNotOreLabel_Parms;

	this->ProcessEvent ( pFnHideNotOreLabel, &HideNotOreLabel_Parms, NULL );
};

// Function NowGame.UIScene_MaterialProcess.OnInventoryItemRightClick
// [0x00020002] 
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void UUIScene_MaterialProcess::OnInventoryItemRightClick ( int iBag, int iSlot )
{
	static UFunction* pFnOnInventoryItemRightClick = NULL;

	if ( ! pFnOnInventoryItemRightClick )
		pFnOnInventoryItemRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_MaterialProcess.OnInventoryItemRightClick" );

	UUIScene_MaterialProcess_execOnInventoryItemRightClick_Parms OnInventoryItemRightClick_Parms;
	OnInventoryItemRightClick_Parms.iBag = iBag;
	OnInventoryItemRightClick_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnOnInventoryItemRightClick, &OnInventoryItemRightClick_Parms, NULL );
};

// Function NowGame.UIScene_MaterialProcess.DoneClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_MaterialProcess::DoneClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnDoneClicked = NULL;

	if ( ! pFnDoneClicked )
		pFnDoneClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_MaterialProcess.DoneClicked" );

	UUIScene_MaterialProcess_execDoneClicked_Parms DoneClicked_Parms;
	DoneClicked_Parms.EventObject = EventObject;
	DoneClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnDoneClicked, &DoneClicked_Parms, NULL );

	return DoneClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_MaterialProcess.ProcessClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_MaterialProcess::ProcessClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnProcessClicked = NULL;

	if ( ! pFnProcessClicked )
		pFnProcessClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_MaterialProcess.ProcessClicked" );

	UUIScene_MaterialProcess_execProcessClicked_Parms ProcessClicked_Parms;
	ProcessClicked_Parms.EventObject = EventObject;
	ProcessClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnProcessClicked, &ProcessClicked_Parms, NULL );

	return ProcessClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_MaterialProcess.LeaveClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_MaterialProcess::LeaveClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnLeaveClicked = NULL;

	if ( ! pFnLeaveClicked )
		pFnLeaveClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_MaterialProcess.LeaveClicked" );

	UUIScene_MaterialProcess_execLeaveClicked_Parms LeaveClicked_Parms;
	LeaveClicked_Parms.EventObject = EventObject;
	LeaveClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnLeaveClicked, &LeaveClicked_Parms, NULL );

	return LeaveClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_MaterialProcess.PostUpdateInitialize
// [0x00020002] 
// Parameters infos:

void UUIScene_MaterialProcess::PostUpdateInitialize ( )
{
	static UFunction* pFnPostUpdateInitialize = NULL;

	if ( ! pFnPostUpdateInitialize )
		pFnPostUpdateInitialize = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_MaterialProcess.PostUpdateInitialize" );

	UUIScene_MaterialProcess_execPostUpdateInitialize_Parms PostUpdateInitialize_Parms;

	this->ProcessEvent ( pFnPostUpdateInitialize, &PostUpdateInitialize_Parms, NULL );
};

// Function NowGame.UIScene_MaterialProcess.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_MaterialProcess::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_MaterialProcess.InitScene" );

	UUIScene_MaterialProcess_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Murdered.SkipClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Murdered::SkipClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnSkipClicked = NULL;

	if ( ! pFnSkipClicked )
		pFnSkipClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Murdered.SkipClicked" );

	UUIScene_Murdered_execSkipClicked_Parms SkipClicked_Parms;
	SkipClicked_Parms.EventObject = EventObject;
	SkipClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnSkipClicked, &SkipClicked_Parms, NULL );

	return SkipClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Murdered.AccuseClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Murdered::AccuseClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAccuseClicked = NULL;

	if ( ! pFnAccuseClicked )
		pFnAccuseClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Murdered.AccuseClicked" );

	UUIScene_Murdered_execAccuseClicked_Parms AccuseClicked_Parms;
	AccuseClicked_Parms.EventObject = EventObject;
	AccuseClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAccuseClicked, &AccuseClicked_Parms, NULL );

	return AccuseClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Murdered.UpdateNameLabel
// [0x00020002] 
// Parameters infos:

void UUIScene_Murdered::UpdateNameLabel ( )
{
	static UFunction* pFnUpdateNameLabel = NULL;

	if ( ! pFnUpdateNameLabel )
		pFnUpdateNameLabel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Murdered.UpdateNameLabel" );

	UUIScene_Murdered_execUpdateNameLabel_Parms UpdateNameLabel_Parms;

	this->ProcessEvent ( pFnUpdateNameLabel, &UpdateNameLabel_Parms, NULL );
};

// Function NowGame.UIScene_Murdered.NextName
// [0x00020002] 
// Parameters infos:

void UUIScene_Murdered::NextName ( )
{
	static UFunction* pFnNextName = NULL;

	if ( ! pFnNextName )
		pFnNextName = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Murdered.NextName" );

	UUIScene_Murdered_execNextName_Parms NextName_Parms;

	this->ProcessEvent ( pFnNextName, &NextName_Parms, NULL );
};

// Function NowGame.UIScene_Murdered.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Murdered::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Murdered.InitScene" );

	UUIScene_Murdered_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Options.OnInverseMouse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Options::OnInverseMouse ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnInverseMouse = NULL;

	if ( ! pFnOnInverseMouse )
		pFnOnInverseMouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Options.OnInverseMouse" );

	UUIScene_Options_execOnInverseMouse_Parms OnInverseMouse_Parms;
	OnInverseMouse_Parms.Caller = Caller;
	OnInverseMouse_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnInverseMouse, &OnInverseMouse_Parms, NULL );

	return OnInverseMouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_Options.OnToggleMusic
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Caller                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Options::OnToggleMusic ( class UUIScreenObject* Caller, int PlayerIndex )
{
	static UFunction* pFnOnToggleMusic = NULL;

	if ( ! pFnOnToggleMusic )
		pFnOnToggleMusic = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Options.OnToggleMusic" );

	UUIScene_Options_execOnToggleMusic_Parms OnToggleMusic_Parms;
	OnToggleMusic_Parms.Caller = Caller;
	OnToggleMusic_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnToggleMusic, &OnToggleMusic_Parms, NULL );

	return OnToggleMusic_Parms.ReturnValue;
};

// Function NowGame.UIScene_Options.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Options::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Options.SceneDeactivated" );

	UUIScene_Options_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Options.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Options::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Options.SceneActivated" );

	UUIScene_Options_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Options.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Options::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Options.InitScene" );

	UUIScene_Options_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Pet.SceneActivated
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Pet::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Pet.SceneActivated" );

	UUIScene_Pet_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Pet.ProcessInputKey
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FInputEventParameters   EventParms                     ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UUIScene_Pet::ProcessInputKey ( struct FInputEventParameters* EventParms )
{
	static UFunction* pFnProcessInputKey = NULL;

	if ( ! pFnProcessInputKey )
		pFnProcessInputKey = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Pet.ProcessInputKey" );

	UUIScene_Pet_execProcessInputKey_Parms ProcessInputKey_Parms;

	this->ProcessEvent ( pFnProcessInputKey, &ProcessInputKey_Parms, NULL );

	if ( EventParms )
		memcpy ( EventParms, &ProcessInputKey_Parms.EventParms, 0x20 );

	return ProcessInputKey_Parms.ReturnValue;
};

// Function NowGame.UIScene_Pet.OnToggleState
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Pet::OnToggleState ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnToggleState = NULL;

	if ( ! pFnOnToggleState )
		pFnOnToggleState = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Pet.OnToggleState" );

	UUIScene_Pet_execOnToggleState_Parms OnToggleState_Parms;
	OnToggleState_Parms.EventObject = EventObject;
	OnToggleState_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnToggleState, &OnToggleState_Parms, NULL );

	return OnToggleState_Parms.ReturnValue;
};

// Function NowGame.UIScene_Pet.OnAttackMe
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Pet::OnAttackMe ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnAttackMe = NULL;

	if ( ! pFnOnAttackMe )
		pFnOnAttackMe = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Pet.OnAttackMe" );

	UUIScene_Pet_execOnAttackMe_Parms OnAttackMe_Parms;
	OnAttackMe_Parms.EventObject = EventObject;
	OnAttackMe_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnAttackMe, &OnAttackMe_Parms, NULL );

	return OnAttackMe_Parms.ReturnValue;
};

// Function NowGame.UIScene_Pet.OnProtectMe
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Pet::OnProtectMe ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnProtectMe = NULL;

	if ( ! pFnOnProtectMe )
		pFnOnProtectMe = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Pet.OnProtectMe" );

	UUIScene_Pet_execOnProtectMe_Parms OnProtectMe_Parms;
	OnProtectMe_Parms.EventObject = EventObject;
	OnProtectMe_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnProtectMe, &OnProtectMe_Parms, NULL );

	return OnProtectMe_Parms.ReturnValue;
};

// Function NowGame.UIScene_Pet.OnFollowMe
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Pet::OnFollowMe ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnFollowMe = NULL;

	if ( ! pFnOnFollowMe )
		pFnOnFollowMe = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Pet.OnFollowMe" );

	UUIScene_Pet_execOnFollowMe_Parms OnFollowMe_Parms;
	OnFollowMe_Parms.EventObject = EventObject;
	OnFollowMe_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnFollowMe, &OnFollowMe_Parms, NULL );

	return OnFollowMe_Parms.ReturnValue;
};

// Function NowGame.UIScene_Pet.OnCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Pet::OnCommand ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnCommand = NULL;

	if ( ! pFnOnCommand )
		pFnOnCommand = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Pet.OnCommand" );

	UUIScene_Pet_execOnCommand_Parms OnCommand_Parms;
	OnCommand_Parms.EventObject = EventObject;
	OnCommand_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnCommand, &OnCommand_Parms, NULL );

	return OnCommand_Parms.ReturnValue;
};

// Function NowGame.UIScene_Pet.OnCancel
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Pet::OnCancel ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnCancel = NULL;

	if ( ! pFnOnCancel )
		pFnOnCancel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Pet.OnCancel" );

	UUIScene_Pet_execOnCancel_Parms OnCancel_Parms;
	OnCancel_Parms.EventObject = EventObject;
	OnCancel_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnCancel, &OnCancel_Parms, NULL );

	return OnCancel_Parms.ReturnValue;
};

// Function NowGame.UIScene_Pet.OnRename
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Pet::OnRename ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnRename = NULL;

	if ( ! pFnOnRename )
		pFnOnRename = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Pet.OnRename" );

	UUIScene_Pet_execOnRename_Parms OnRename_Parms;
	OnRename_Parms.EventObject = EventObject;
	OnRename_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnRename, &OnRename_Parms, NULL );

	return OnRename_Parms.ReturnValue;
};

// Function NowGame.UIScene_Pet.OnOpenPanel
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Pet::OnOpenPanel ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnOpenPanel = NULL;

	if ( ! pFnOnOpenPanel )
		pFnOnOpenPanel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Pet.OnOpenPanel" );

	UUIScene_Pet_execOnOpenPanel_Parms OnOpenPanel_Parms;
	OnOpenPanel_Parms.EventObject = EventObject;
	OnOpenPanel_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnOpenPanel, &OnOpenPanel_Parms, NULL );

	return OnOpenPanel_Parms.ReturnValue;
};

// Function NowGame.UIScene_Pet.OnPetInfo
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Pet::OnPetInfo ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnPetInfo = NULL;

	if ( ! pFnOnPetInfo )
		pFnOnPetInfo = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Pet.OnPetInfo" );

	UUIScene_Pet_execOnPetInfo_Parms OnPetInfo_Parms;
	OnPetInfo_Parms.EventObject = EventObject;
	OnPetInfo_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnPetInfo, &OnPetInfo_Parms, NULL );

	return OnPetInfo_Parms.ReturnValue;
};

// Function NowGame.UIScene_Pet.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Pet::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Pet.InitScene" );

	UUIScene_Pet_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_PetitionList.Select
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PetitionList::Select ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnSelect = NULL;

	if ( ! pFnSelect )
		pFnSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetitionList.Select" );

	UUIScene_PetitionList_execSelect_Parms Select_Parms;
	Select_Parms.EventObject = EventObject;
	Select_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnSelect, &Select_Parms, NULL );

	return Select_Parms.ReturnValue;
};

// Function NowGame.UIScene_PetitionList.EscalatePetition
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PetitionList::EscalatePetition ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnEscalatePetition = NULL;

	if ( ! pFnEscalatePetition )
		pFnEscalatePetition = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetitionList.EscalatePetition" );

	UUIScene_PetitionList_execEscalatePetition_Parms EscalatePetition_Parms;
	EscalatePetition_Parms.O = O;
	EscalatePetition_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnEscalatePetition, &EscalatePetition_Parms, NULL );

	return EscalatePetition_Parms.ReturnValue;
};

// Function NowGame.UIScene_PetitionList.ClosePetition
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PetitionList::ClosePetition ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnClosePetition = NULL;

	if ( ! pFnClosePetition )
		pFnClosePetition = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetitionList.ClosePetition" );

	UUIScene_PetitionList_execClosePetition_Parms ClosePetition_Parms;
	ClosePetition_Parms.O = O;
	ClosePetition_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnClosePetition, &ClosePetition_Parms, NULL );

	return ClosePetition_Parms.ReturnValue;
};

// Function NowGame.UIScene_PetitionList.LastPage
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PetitionList::LastPage ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnLastPage = NULL;

	if ( ! pFnLastPage )
		pFnLastPage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetitionList.LastPage" );

	UUIScene_PetitionList_execLastPage_Parms LastPage_Parms;
	LastPage_Parms.O = O;
	LastPage_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnLastPage, &LastPage_Parms, NULL );

	return LastPage_Parms.ReturnValue;
};

// Function NowGame.UIScene_PetitionList.NextPage
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PetitionList::NextPage ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnNextPage = NULL;

	if ( ! pFnNextPage )
		pFnNextPage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetitionList.NextPage" );

	UUIScene_PetitionList_execNextPage_Parms NextPage_Parms;
	NextPage_Parms.O = O;
	NextPage_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextPage, &NextPage_Parms, NULL );

	return NextPage_Parms.ReturnValue;
};

// Function NowGame.UIScene_PetitionList.ClaimPetition
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PetitionList::ClaimPetition ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnClaimPetition = NULL;

	if ( ! pFnClaimPetition )
		pFnClaimPetition = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetitionList.ClaimPetition" );

	UUIScene_PetitionList_execClaimPetition_Parms ClaimPetition_Parms;
	ClaimPetition_Parms.O = O;
	ClaimPetition_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnClaimPetition, &ClaimPetition_Parms, NULL );

	return ClaimPetition_Parms.ReturnValue;
};

// Function NowGame.UIScene_PetitionList.displayDescription
// [0x00020000] 
// Parameters infos:
// int                            totalIndex                     ( CPF_Parm )

void UUIScene_PetitionList::displayDescription ( int totalIndex )
{
	static UFunction* pFndisplayDescription = NULL;

	if ( ! pFndisplayDescription )
		pFndisplayDescription = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetitionList.displayDescription" );

	UUIScene_PetitionList_execdisplayDescription_Parms displayDescription_Parms;
	displayDescription_Parms.totalIndex = totalIndex;

	this->ProcessEvent ( pFndisplayDescription, &displayDescription_Parms, NULL );
};

// Function NowGame.UIScene_PetitionList.updateSceneList
// [0x00020002] 
// Parameters infos:
// int                            Page                           ( CPF_Parm )

void UUIScene_PetitionList::updateSceneList ( int Page )
{
	static UFunction* pFnupdateSceneList = NULL;

	if ( ! pFnupdateSceneList )
		pFnupdateSceneList = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetitionList.updateSceneList" );

	UUIScene_PetitionList_execupdateSceneList_Parms updateSceneList_Parms;
	updateSceneList_Parms.Page = Page;

	this->ProcessEvent ( pFnupdateSceneList, &updateSceneList_Parms, NULL );
};

// Function NowGame.UIScene_PetitionList.PetitionsUpdated
// [0x00020002] 
// Parameters infos:

void UUIScene_PetitionList::PetitionsUpdated ( )
{
	static UFunction* pFnPetitionsUpdated = NULL;

	if ( ! pFnPetitionsUpdated )
		pFnPetitionsUpdated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetitionList.PetitionsUpdated" );

	UUIScene_PetitionList_execPetitionsUpdated_Parms PetitionsUpdated_Parms;

	this->ProcessEvent ( pFnPetitionsUpdated, &PetitionsUpdated_Parms, NULL );
};

// Function NowGame.UIScene_PetitionList.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_PetitionList::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetitionList.InitScene" );

	UUIScene_PetitionList_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_PetitionList.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_PetitionList::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PetitionList.SceneActivated" );

	UUIScene_PetitionList_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorSelect.OnRemove
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PlayerVendorSelect::OnRemove ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnRemove = NULL;

	if ( ! pFnOnRemove )
		pFnOnRemove = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSelect.OnRemove" );

	UUIScene_PlayerVendorSelect_execOnRemove_Parms OnRemove_Parms;
	OnRemove_Parms.EventObject = EventObject;
	OnRemove_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnRemove, &OnRemove_Parms, NULL );

	return OnRemove_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorSelect.OnBrowse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PlayerVendorSelect::OnBrowse ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnBrowse = NULL;

	if ( ! pFnOnBrowse )
		pFnOnBrowse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSelect.OnBrowse" );

	UUIScene_PlayerVendorSelect_execOnBrowse_Parms OnBrowse_Parms;
	OnBrowse_Parms.EventObject = EventObject;
	OnBrowse_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnBrowse, &OnBrowse_Parms, NULL );

	return OnBrowse_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorSelect.OnRemoveVendor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PlayerVendorSelect::OnRemoveVendor ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnRemoveVendor = NULL;

	if ( ! pFnOnRemoveVendor )
		pFnOnRemoveVendor = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSelect.OnRemoveVendor" );

	UUIScene_PlayerVendorSelect_execOnRemoveVendor_Parms OnRemoveVendor_Parms;
	OnRemoveVendor_Parms.EventObject = EventObject;
	OnRemoveVendor_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnRemoveVendor, &OnRemoveVendor_Parms, NULL );

	return OnRemoveVendor_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorSelect.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PlayerVendorSelect::OnClose ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSelect.OnClose" );

	UUIScene_PlayerVendorSelect_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.EventObject = EventObject;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorSelect.getHouse
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatar*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatar* UUIScene_PlayerVendorSelect::getHouse ( )
{
	static UFunction* pFngetHouse = NULL;

	if ( ! pFngetHouse )
		pFngetHouse = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSelect.getHouse" );

	UUIScene_PlayerVendorSelect_execgetHouse_Parms getHouse_Parms;

	this->ProcessEvent ( pFngetHouse, &getHouse_Parms, NULL );

	return getHouse_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorSelect.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_PlayerVendorSelect::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSelect.SceneDeactivated" );

	UUIScene_PlayerVendorSelect_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorSelect.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_PlayerVendorSelect::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSelect.SceneActivated" );

	UUIScene_PlayerVendorSelect_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorSelect.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_PlayerVendorSelect::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSelect.InitScene" );

	UUIScene_PlayerVendorSelect_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorSell.getVendor
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatar*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatar* UUIScene_PlayerVendorSell::getVendor ( )
{
	static UFunction* pFngetVendor = NULL;

	if ( ! pFngetVendor )
		pFngetVendor = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSell.getVendor" );

	UUIScene_PlayerVendorSell_execgetVendor_Parms getVendor_Parms;

	this->ProcessEvent ( pFngetVendor, &getVendor_Parms, NULL );

	return getVendor_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorSell.PostRefineMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_PlayerVendorSell::PostRefineMessage ( struct FString msg )
{
	static UFunction* pFnPostRefineMessage = NULL;

	if ( ! pFnPostRefineMessage )
		pFnPostRefineMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSell.PostRefineMessage" );

	UUIScene_PlayerVendorSell_execPostRefineMessage_Parms PostRefineMessage_Parms;
	memcpy ( &PostRefineMessage_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnPostRefineMessage, &PostRefineMessage_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorSell.UpdateTrade
// [0x00020002] 
// Parameters infos:

void UUIScene_PlayerVendorSell::UpdateTrade ( )
{
	static UFunction* pFnUpdateTrade = NULL;

	if ( ! pFnUpdateTrade )
		pFnUpdateTrade = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSell.UpdateTrade" );

	UUIScene_PlayerVendorSell_execUpdateTrade_Parms UpdateTrade_Parms;

	this->ProcessEvent ( pFnUpdateTrade, &UpdateTrade_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorSell.MessageEvent
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_PlayerVendorSell::MessageEvent ( struct FString msg )
{
	static UFunction* pFnMessageEvent = NULL;

	if ( ! pFnMessageEvent )
		pFnMessageEvent = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSell.MessageEvent" );

	UUIScene_PlayerVendorSell_execMessageEvent_Parms MessageEvent_Parms;
	memcpy ( &MessageEvent_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnMessageEvent, &MessageEvent_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorSell.sendMessageToVendor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 VendorMessage                  ( CPF_Parm | CPF_NeedCtorLink )

bool UUIScene_PlayerVendorSell::sendMessageToVendor ( struct FString VendorMessage )
{
	static UFunction* pFnsendMessageToVendor = NULL;

	if ( ! pFnsendMessageToVendor )
		pFnsendMessageToVendor = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSell.sendMessageToVendor" );

	UUIScene_PlayerVendorSell_execsendMessageToVendor_Parms sendMessageToVendor_Parms;
	memcpy ( &sendMessageToVendor_Parms.VendorMessage, &VendorMessage, 0xC );

	this->ProcessEvent ( pFnsendMessageToVendor, &sendMessageToVendor_Parms, NULL );

	return sendMessageToVendor_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorSell.TradeRightClick
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_PlayerVendorSell::TradeRightClick ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnTradeRightClick = NULL;

	if ( ! pFnTradeRightClick )
		pFnTradeRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSell.TradeRightClick" );

	UUIScene_PlayerVendorSell_execTradeRightClick_Parms TradeRightClick_Parms;
	TradeRightClick_Parms.Sender = Sender;
	TradeRightClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnTradeRightClick, &TradeRightClick_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = TradeRightClick_Parms.CustomContextMenu;

	return TradeRightClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorSell.CloseButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PlayerVendorSell::CloseButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCloseButtonClicked = NULL;

	if ( ! pFnCloseButtonClicked )
		pFnCloseButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSell.CloseButtonClicked" );

	UUIScene_PlayerVendorSell_execCloseButtonClicked_Parms CloseButtonClicked_Parms;
	CloseButtonClicked_Parms.EventObject = EventObject;
	CloseButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCloseButtonClicked, &CloseButtonClicked_Parms, NULL );

	return CloseButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorSell.OkClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PlayerVendorSell::OkClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOkClicked = NULL;

	if ( ! pFnOkClicked )
		pFnOkClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSell.OkClicked" );

	UUIScene_PlayerVendorSell_execOkClicked_Parms OkClicked_Parms;
	OkClicked_Parms.EventObject = EventObject;
	OkClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOkClicked, &OkClicked_Parms, NULL );

	return OkClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorSell.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_PlayerVendorSell::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSell.SceneDeactivated" );

	UUIScene_PlayerVendorSell_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorSell.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_PlayerVendorSell::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSell.SceneActivated" );

	UUIScene_PlayerVendorSell_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorSell.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_PlayerVendorSell::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorSell.InitScene" );

	UUIScene_PlayerVendorSell_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorShopMain.getStable
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatar*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatar* UUIScene_PlayerVendorShopMain::getStable ( )
{
	static UFunction* pFngetStable = NULL;

	if ( ! pFngetStable )
		pFngetStable = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorShopMain.getStable" );

	UUIScene_PlayerVendorShopMain_execgetStable_Parms getStable_Parms;

	this->ProcessEvent ( pFngetStable, &getStable_Parms, NULL );

	return getStable_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorShopMain.PostRefineMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_PlayerVendorShopMain::PostRefineMessage ( struct FString msg )
{
	static UFunction* pFnPostRefineMessage = NULL;

	if ( ! pFnPostRefineMessage )
		pFnPostRefineMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorShopMain.PostRefineMessage" );

	UUIScene_PlayerVendorShopMain_execPostRefineMessage_Parms PostRefineMessage_Parms;
	memcpy ( &PostRefineMessage_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnPostRefineMessage, &PostRefineMessage_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorShopMain.UpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_PlayerVendorShopMain::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorShopMain.UpdatePage" );

	UUIScene_PlayerVendorShopMain_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorShopMain.MessageEvent
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_PlayerVendorShopMain::MessageEvent ( struct FString msg )
{
	static UFunction* pFnMessageEvent = NULL;

	if ( ! pFnMessageEvent )
		pFnMessageEvent = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorShopMain.MessageEvent" );

	UUIScene_PlayerVendorShopMain_execMessageEvent_Parms MessageEvent_Parms;
	memcpy ( &MessageEvent_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnMessageEvent, &MessageEvent_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorShopMain.OnRefineSlotDropped
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_PlayerVendorShopMain::OnRefineSlotDropped ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnRefineSlotDropped = NULL;

	if ( ! pFnOnRefineSlotDropped )
		pFnOnRefineSlotDropped = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorShopMain.OnRefineSlotDropped" );

	UUIScene_PlayerVendorShopMain_execOnRefineSlotDropped_Parms OnRefineSlotDropped_Parms;
	OnRefineSlotDropped_Parms.Target = Target;
	OnRefineSlotDropped_Parms.Source = Source;

	this->ProcessEvent ( pFnOnRefineSlotDropped, &OnRefineSlotDropped_Parms, NULL );

	return OnRefineSlotDropped_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorShopMain.OnRefineSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PlayerVendorShopMain::OnRefineSlotClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnRefineSlotClicked = NULL;

	if ( ! pFnOnRefineSlotClicked )
		pFnOnRefineSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorShopMain.OnRefineSlotClicked" );

	UUIScene_PlayerVendorShopMain_execOnRefineSlotClicked_Parms OnRefineSlotClicked_Parms;
	OnRefineSlotClicked_Parms.EventObject = EventObject;
	OnRefineSlotClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnRefineSlotClicked, &OnRefineSlotClicked_Parms, NULL );

	return OnRefineSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorShopMain.OnProcess
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_PlayerVendorShopMain::OnProcess ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnProcess = NULL;

	if ( ! pFnOnProcess )
		pFnOnProcess = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorShopMain.OnProcess" );

	UUIScene_PlayerVendorShopMain_execOnProcess_Parms OnProcess_Parms;
	OnProcess_Parms.EventObject = EventObject;
	OnProcess_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnProcess, &OnProcess_Parms, NULL );

	return OnProcess_Parms.ReturnValue;
};

// Function NowGame.UIScene_PlayerVendorShopMain.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_PlayerVendorShopMain::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorShopMain.SceneDeactivated" );

	UUIScene_PlayerVendorShopMain_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorShopMain.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_PlayerVendorShopMain::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorShopMain.SceneActivated" );

	UUIScene_PlayerVendorShopMain_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_PlayerVendorShopMain.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_PlayerVendorShopMain::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_PlayerVendorShopMain.InitScene" );

	UUIScene_PlayerVendorShopMain_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Quickbar.QuickButtonPressed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Object                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Quickbar::QuickButtonPressed ( class UUIScreenObject* Object, int PlayerIndex )
{
	static UFunction* pFnQuickButtonPressed = NULL;

	if ( ! pFnQuickButtonPressed )
		pFnQuickButtonPressed = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.QuickButtonPressed" );

	UUIScene_Quickbar_execQuickButtonPressed_Parms QuickButtonPressed_Parms;
	QuickButtonPressed_Parms.Object = Object;
	QuickButtonPressed_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnQuickButtonPressed, &QuickButtonPressed_Parms, NULL );

	return QuickButtonPressed_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.StateChange
// [0x00024002] 
// Parameters infos:
// class UUIScreenObject*         Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIState*                NewlyActiveState               ( CPF_Parm )
// class UUIState*                PreviouslyActiveState          ( CPF_OptionalParm | CPF_Parm )

void UUIScene_Quickbar::StateChange ( class UUIScreenObject* Sender, int PlayerIndex, class UUIState* NewlyActiveState, class UUIState* PreviouslyActiveState )
{
	static UFunction* pFnStateChange = NULL;

	if ( ! pFnStateChange )
		pFnStateChange = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.StateChange" );

	UUIScene_Quickbar_execStateChange_Parms StateChange_Parms;
	StateChange_Parms.Sender = Sender;
	StateChange_Parms.PlayerIndex = PlayerIndex;
	StateChange_Parms.NewlyActiveState = NewlyActiveState;
	StateChange_Parms.PreviouslyActiveState = PreviouslyActiveState;

	this->ProcessEvent ( pFnStateChange, &StateChange_Parms, NULL );
};

// Function NowGame.UIScene_Quickbar.SetVisibility
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UUIScene_Quickbar::eventSetVisibility ( unsigned long bVisible )
{
	static UFunction* pFnSetVisibility = NULL;

	if ( ! pFnSetVisibility )
		pFnSetVisibility = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.SetVisibility" );

	UUIScene_Quickbar_eventSetVisibility_Parms SetVisibility_Parms;
	SetVisibility_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnSetVisibility, &SetVisibility_Parms, NULL );
};

// Function NowGame.UIScene_Quickbar.BarDecrement
// [0x00020002] 
// Parameters infos:
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

void UUIScene_Quickbar::BarDecrement ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBarDecrement = NULL;

	if ( ! pFnBarDecrement )
		pFnBarDecrement = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.BarDecrement" );

	UUIScene_Quickbar_execBarDecrement_Parms BarDecrement_Parms;
	BarDecrement_Parms.EventObject = EventObject;
	BarDecrement_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBarDecrement, &BarDecrement_Parms, NULL );
};

// Function NowGame.UIScene_Quickbar.BarIncrement
// [0x00020002] 
// Parameters infos:
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

void UUIScene_Quickbar::BarIncrement ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBarIncrement = NULL;

	if ( ! pFnBarIncrement )
		pFnBarIncrement = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.BarIncrement" );

	UUIScene_Quickbar_execBarIncrement_Parms BarIncrement_Parms;
	BarIncrement_Parms.EventObject = EventObject;
	BarIncrement_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBarIncrement, &BarIncrement_Parms, NULL );
};

// Function NowGame.UIScene_Quickbar.SetBarOffset
// [0x00020002] 
// Parameters infos:
// int                            I                              ( CPF_Parm )

void UUIScene_Quickbar::SetBarOffset ( int I )
{
	static UFunction* pFnSetBarOffset = NULL;

	if ( ! pFnSetBarOffset )
		pFnSetBarOffset = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.SetBarOffset" );

	UUIScene_Quickbar_execSetBarOffset_Parms SetBarOffset_Parms;
	SetBarOffset_Parms.I = I;

	this->ProcessEvent ( pFnSetBarOffset, &SetBarOffset_Parms, NULL );
};

// Function NowGame.UIScene_Quickbar.NewUpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_Quickbar::NewUpdatePage ( )
{
	static UFunction* pFnNewUpdatePage = NULL;

	if ( ! pFnNewUpdatePage )
		pFnNewUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.NewUpdatePage" );

	UUIScene_Quickbar_execNewUpdatePage_Parms NewUpdatePage_Parms;

	this->ProcessEvent ( pFnNewUpdatePage, &NewUpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_Quickbar.UseTimer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_Quickbar::UseTimer ( )
{
	static UFunction* pFnUseTimer = NULL;

	if ( ! pFnUseTimer )
		pFnUseTimer = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.UseTimer" );

	UUIScene_Quickbar_execUseTimer_Parms UseTimer_Parms;

	this->ProcessEvent ( pFnUseTimer, &UseTimer_Parms, NULL );

	return UseTimer_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.ItemListChanged
// [0x00020002] 
// Parameters infos:
// TArray< struct FString >       ItemData                       ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Quickbar::ItemListChanged ( TArray< struct FString > ItemData )
{
	static UFunction* pFnItemListChanged = NULL;

	if ( ! pFnItemListChanged )
		pFnItemListChanged = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.ItemListChanged" );

	UUIScene_Quickbar_execItemListChanged_Parms ItemListChanged_Parms;
	memcpy ( &ItemListChanged_Parms.ItemData, &ItemData, 0xC );

	this->ProcessEvent ( pFnItemListChanged, &ItemListChanged_Parms, NULL );
};

// Function NowGame.UIScene_Quickbar.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Quickbar::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.UpdateScene" );

	UUIScene_Quickbar_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Quickbar.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Quickbar::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.SceneDeactivated" );

	UUIScene_Quickbar_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Quickbar.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Quickbar::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.SceneActivated" );

	UUIScene_Quickbar_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Quickbar.ClearActionbar
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_Quickbar::ClearActionbar ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnClearActionbar = NULL;

	if ( ! pFnClearActionbar )
		pFnClearActionbar = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.ClearActionbar" );

	UUIScene_Quickbar_execClearActionbar_Parms ClearActionbar_Parms;
	ClearActionbar_Parms.Sender = Sender;
	ClearActionbar_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnClearActionbar, &ClearActionbar_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = ClearActionbar_Parms.CustomContextMenu;

	return ClearActionbar_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.OnActionButtonDragBegin
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Quickbar::OnActionButtonDragBegin ( class UUIScreenObject* Source )
{
	static UFunction* pFnOnActionButtonDragBegin = NULL;

	if ( ! pFnOnActionButtonDragBegin )
		pFnOnActionButtonDragBegin = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.OnActionButtonDragBegin" );

	UUIScene_Quickbar_execOnActionButtonDragBegin_Parms OnActionButtonDragBegin_Parms;
	OnActionButtonDragBegin_Parms.Source = Source;

	this->ProcessEvent ( pFnOnActionButtonDragBegin, &OnActionButtonDragBegin_Parms, NULL );

	return OnActionButtonDragBegin_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.OnSkillActionClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Quickbar::OnSkillActionClicked ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnSkillActionClicked = NULL;

	if ( ! pFnOnSkillActionClicked )
		pFnOnSkillActionClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.OnSkillActionClicked" );

	UUIScene_Quickbar_execOnSkillActionClicked_Parms OnSkillActionClicked_Parms;
	OnSkillActionClicked_Parms.O = O;
	OnSkillActionClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSkillActionClicked, &OnSkillActionClicked_Parms, NULL );

	return OnSkillActionClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.OnSpellButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Quickbar::OnSpellButtonClicked ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnSpellButtonClicked = NULL;

	if ( ! pFnOnSpellButtonClicked )
		pFnOnSpellButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.OnSpellButtonClicked" );

	UUIScene_Quickbar_execOnSpellButtonClicked_Parms OnSpellButtonClicked_Parms;
	OnSpellButtonClicked_Parms.O = O;
	OnSpellButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSpellButtonClicked, &OnSpellButtonClicked_Parms, NULL );

	return OnSpellButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.OnItemButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Quickbar::OnItemButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnItemButtonClicked = NULL;

	if ( ! pFnOnItemButtonClicked )
		pFnOnItemButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.OnItemButtonClicked" );

	UUIScene_Quickbar_execOnItemButtonClicked_Parms OnItemButtonClicked_Parms;
	OnItemButtonClicked_Parms.EventObject = EventObject;
	OnItemButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnItemButtonClicked, &OnItemButtonClicked_Parms, NULL );

	return OnItemButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.OnCombatMoveButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Quickbar::OnCombatMoveButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnCombatMoveButtonClicked = NULL;

	if ( ! pFnOnCombatMoveButtonClicked )
		pFnOnCombatMoveButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.OnCombatMoveButtonClicked" );

	UUIScene_Quickbar_execOnCombatMoveButtonClicked_Parms OnCombatMoveButtonClicked_Parms;
	OnCombatMoveButtonClicked_Parms.EventObject = EventObject;
	OnCombatMoveButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnCombatMoveButtonClicked, &OnCombatMoveButtonClicked_Parms, NULL );

	return OnCombatMoveButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.OnActionButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Quickbar::OnActionButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnActionButtonClicked = NULL;

	if ( ! pFnOnActionButtonClicked )
		pFnOnActionButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.OnActionButtonClicked" );

	UUIScene_Quickbar_execOnActionButtonClicked_Parms OnActionButtonClicked_Parms;
	OnActionButtonClicked_Parms.EventObject = EventObject;
	OnActionButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnActionButtonClicked, &OnActionButtonClicked_Parms, NULL );

	return OnActionButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.OnSlotDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Quickbar::OnSlotDragDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnSlotDragDrop = NULL;

	if ( ! pFnOnSlotDragDrop )
		pFnOnSlotDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.OnSlotDragDrop" );

	UUIScene_Quickbar_execOnSlotDragDrop_Parms OnSlotDragDrop_Parms;
	OnSlotDragDrop_Parms.Target = Target;
	OnSlotDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnOnSlotDragDrop, &OnSlotDragDrop_Parms, NULL );

	return OnSlotDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.OnSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Quickbar::OnSlotClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSlotClicked = NULL;

	if ( ! pFnOnSlotClicked )
		pFnOnSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.OnSlotClicked" );

	UUIScene_Quickbar_execOnSlotClicked_Parms OnSlotClicked_Parms;
	OnSlotClicked_Parms.EventObject = EventObject;
	OnSlotClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSlotClicked, &OnSlotClicked_Parms, NULL );

	return OnSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.ProcessInputKey
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FInputEventParameters   EventParms                     ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UUIScene_Quickbar::ProcessInputKey ( struct FInputEventParameters* EventParms )
{
	static UFunction* pFnProcessInputKey = NULL;

	if ( ! pFnProcessInputKey )
		pFnProcessInputKey = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.ProcessInputKey" );

	UUIScene_Quickbar_execProcessInputKey_Parms ProcessInputKey_Parms;

	this->ProcessEvent ( pFnProcessInputKey, &ProcessInputKey_Parms, NULL );

	if ( EventParms )
		memcpy ( EventParms, &ProcessInputKey_Parms.EventParms, 0x20 );

	return ProcessInputKey_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.ExecSlot
// [0x00020002] 
// Parameters infos:
// int                            I                              ( CPF_Parm )

void UUIScene_Quickbar::ExecSlot ( int I )
{
	static UFunction* pFnExecSlot = NULL;

	if ( ! pFnExecSlot )
		pFnExecSlot = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.ExecSlot" );

	UUIScene_Quickbar_execExecSlot_Parms ExecSlot_Parms;
	ExecSlot_Parms.I = I;

	this->ProcessEvent ( pFnExecSlot, &ExecSlot_Parms, NULL );
};

// Function NowGame.UIScene_Quickbar.NewOnSlotDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Quickbar::NewOnSlotDragDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnNewOnSlotDragDrop = NULL;

	if ( ! pFnNewOnSlotDragDrop )
		pFnNewOnSlotDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.NewOnSlotDragDrop" );

	UUIScene_Quickbar_execNewOnSlotDragDrop_Parms NewOnSlotDragDrop_Parms;
	NewOnSlotDragDrop_Parms.Target = Target;
	NewOnSlotDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnNewOnSlotDragDrop, &NewOnSlotDragDrop_Parms, NULL );

	return NewOnSlotDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.NewOnSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Quickbar::NewOnSlotClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNewOnSlotClicked = NULL;

	if ( ! pFnNewOnSlotClicked )
		pFnNewOnSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.NewOnSlotClicked" );

	UUIScene_Quickbar_execNewOnSlotClicked_Parms NewOnSlotClicked_Parms;
	NewOnSlotClicked_Parms.EventObject = EventObject;
	NewOnSlotClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNewOnSlotClicked, &NewOnSlotClicked_Parms, NULL );

	return NewOnSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.MinimizeQuickbar
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Quickbar::MinimizeQuickbar ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnMinimizeQuickbar = NULL;

	if ( ! pFnMinimizeQuickbar )
		pFnMinimizeQuickbar = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.MinimizeQuickbar" );

	UUIScene_Quickbar_execMinimizeQuickbar_Parms MinimizeQuickbar_Parms;
	MinimizeQuickbar_Parms.EventObject = EventObject;
	MinimizeQuickbar_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnMinimizeQuickbar, &MinimizeQuickbar_Parms, NULL );

	return MinimizeQuickbar_Parms.ReturnValue;
};

// Function NowGame.UIScene_Quickbar.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Quickbar::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Quickbar.InitScene" );

	UUIScene_Quickbar_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Refine.PostRefineMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Refine::PostRefineMessage ( struct FString msg )
{
	static UFunction* pFnPostRefineMessage = NULL;

	if ( ! pFnPostRefineMessage )
		pFnPostRefineMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.PostRefineMessage" );

	UUIScene_Refine_execPostRefineMessage_Parms PostRefineMessage_Parms;
	memcpy ( &PostRefineMessage_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnPostRefineMessage, &PostRefineMessage_Parms, NULL );
};

// Function NowGame.UIScene_Refine.UpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_Refine::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.UpdatePage" );

	UUIScene_Refine_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_Refine.MessageEvent
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Refine::MessageEvent ( struct FString msg )
{
	static UFunction* pFnMessageEvent = NULL;

	if ( ! pFnMessageEvent )
		pFnMessageEvent = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.MessageEvent" );

	UUIScene_Refine_execMessageEvent_Parms MessageEvent_Parms;
	memcpy ( &MessageEvent_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnMessageEvent, &MessageEvent_Parms, NULL );
};

// Function NowGame.UIScene_Refine.FindTool
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UUIScene_Refine::FindTool ( )
{
	static UFunction* pFnFindTool = NULL;

	if ( ! pFnFindTool )
		pFnFindTool = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.FindTool" );

	UUIScene_Refine_execFindTool_Parms FindTool_Parms;

	this->ProcessEvent ( pFnFindTool, &FindTool_Parms, NULL );

	return FindTool_Parms.ReturnValue;
};

// Function NowGame.UIScene_Refine.UpdateWorkBench
// [0x00020002] 
// Parameters infos:

void UUIScene_Refine::UpdateWorkBench ( )
{
	static UFunction* pFnUpdateWorkBench = NULL;

	if ( ! pFnUpdateWorkBench )
		pFnUpdateWorkBench = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.UpdateWorkBench" );

	UUIScene_Refine_execUpdateWorkBench_Parms UpdateWorkBench_Parms;

	this->ProcessEvent ( pFnUpdateWorkBench, &UpdateWorkBench_Parms, NULL );
};

// Function NowGame.UIScene_Refine.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Refine::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.UpdateScene" );

	UUIScene_Refine_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Refine.OnCatalystSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// int                            Num                            ( CPF_Parm )

bool UUIScene_Refine::OnCatalystSlotClicked ( class UUIScreenObject* Target, int Num )
{
	static UFunction* pFnOnCatalystSlotClicked = NULL;

	if ( ! pFnOnCatalystSlotClicked )
		pFnOnCatalystSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.OnCatalystSlotClicked" );

	UUIScene_Refine_execOnCatalystSlotClicked_Parms OnCatalystSlotClicked_Parms;
	OnCatalystSlotClicked_Parms.Target = Target;
	OnCatalystSlotClicked_Parms.Num = Num;

	this->ProcessEvent ( pFnOnCatalystSlotClicked, &OnCatalystSlotClicked_Parms, NULL );

	return OnCatalystSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Refine.OnCatalystSlotDropped
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Refine::OnCatalystSlotDropped ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnCatalystSlotDropped = NULL;

	if ( ! pFnOnCatalystSlotDropped )
		pFnOnCatalystSlotDropped = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.OnCatalystSlotDropped" );

	UUIScene_Refine_execOnCatalystSlotDropped_Parms OnCatalystSlotDropped_Parms;
	OnCatalystSlotDropped_Parms.Target = Target;
	OnCatalystSlotDropped_Parms.Source = Source;

	this->ProcessEvent ( pFnOnCatalystSlotDropped, &OnCatalystSlotDropped_Parms, NULL );

	return OnCatalystSlotDropped_Parms.ReturnValue;
};

// Function NowGame.UIScene_Refine.OnRefineSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// int                            Num                            ( CPF_Parm )

bool UUIScene_Refine::OnRefineSlotClicked ( class UUIScreenObject* Target, int Num )
{
	static UFunction* pFnOnRefineSlotClicked = NULL;

	if ( ! pFnOnRefineSlotClicked )
		pFnOnRefineSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.OnRefineSlotClicked" );

	UUIScene_Refine_execOnRefineSlotClicked_Parms OnRefineSlotClicked_Parms;
	OnRefineSlotClicked_Parms.Target = Target;
	OnRefineSlotClicked_Parms.Num = Num;

	this->ProcessEvent ( pFnOnRefineSlotClicked, &OnRefineSlotClicked_Parms, NULL );

	return OnRefineSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Refine.OnRefineSlotDropped
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Refine::OnRefineSlotDropped ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnRefineSlotDropped = NULL;

	if ( ! pFnOnRefineSlotDropped )
		pFnOnRefineSlotDropped = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.OnRefineSlotDropped" );

	UUIScene_Refine_execOnRefineSlotDropped_Parms OnRefineSlotDropped_Parms;
	OnRefineSlotDropped_Parms.Target = Target;
	OnRefineSlotDropped_Parms.Source = Source;

	this->ProcessEvent ( pFnOnRefineSlotDropped, &OnRefineSlotDropped_Parms, NULL );

	return OnRefineSlotDropped_Parms.ReturnValue;
};

// Function NowGame.UIScene_Refine.OnProcess
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Refine::OnProcess ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnProcess = NULL;

	if ( ! pFnOnProcess )
		pFnOnProcess = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.OnProcess" );

	UUIScene_Refine_execOnProcess_Parms OnProcess_Parms;
	OnProcess_Parms.EventObject = EventObject;
	OnProcess_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnProcess, &OnProcess_Parms, NULL );

	return OnProcess_Parms.ReturnValue;
};

// Function NowGame.UIScene_Refine.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Refine::OnClose ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.OnClose" );

	UUIScene_Refine_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.EventObject = EventObject;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_Refine.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Refine::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.SceneDeactivated" );

	UUIScene_Refine_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Refine.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Refine::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.SceneActivated" );

	UUIScene_Refine_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Refine.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Refine::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refine.InitScene" );

	UUIScene_Refine_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Refining.UpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_Refining::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refining.UpdatePage" );

	UUIScene_Refining_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_Refining.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Refining::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refining.UpdateScene" );

	UUIScene_Refining_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Refining.OnSlotDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Refining::OnSlotDragDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnSlotDragDrop = NULL;

	if ( ! pFnOnSlotDragDrop )
		pFnOnSlotDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refining.OnSlotDragDrop" );

	UUIScene_Refining_execOnSlotDragDrop_Parms OnSlotDragDrop_Parms;
	OnSlotDragDrop_Parms.Target = Target;
	OnSlotDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnOnSlotDragDrop, &OnSlotDragDrop_Parms, NULL );

	return OnSlotDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_Refining.OnSlotClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Refining::OnSlotClick ( class UUIScreenObject* Target, int PlayerIndex )
{
	static UFunction* pFnOnSlotClick = NULL;

	if ( ! pFnOnSlotClick )
		pFnOnSlotClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refining.OnSlotClick" );

	UUIScene_Refining_execOnSlotClick_Parms OnSlotClick_Parms;
	OnSlotClick_Parms.Target = Target;
	OnSlotClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSlotClick, &OnSlotClick_Parms, NULL );

	return OnSlotClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_Refining.OnRefine
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Refining::OnRefine ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnRefine = NULL;

	if ( ! pFnOnRefine )
		pFnOnRefine = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refining.OnRefine" );

	UUIScene_Refining_execOnRefine_Parms OnRefine_Parms;
	OnRefine_Parms.EventObject = EventObject;
	OnRefine_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnRefine, &OnRefine_Parms, NULL );

	return OnRefine_Parms.ReturnValue;
};

// Function NowGame.UIScene_Refining.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Refining::OnClose ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refining.OnClose" );

	UUIScene_Refining_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.EventObject = EventObject;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_Refining.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Refining::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refining.SceneDeactivated" );

	UUIScene_Refining_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Refining.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Refining::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refining.SceneActivated" );

	UUIScene_Refining_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Refining.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Refining::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Refining.InitScene" );

	UUIScene_Refining_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_ShieldCreation.CreateClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreation::CreateClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCreateClicked = NULL;

	if ( ! pFnCreateClicked )
		pFnCreateClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreation.CreateClicked" );

	UUIScene_ShieldCreation_execCreateClicked_Parms CreateClicked_Parms;
	CreateClicked_Parms.EventObject = EventObject;
	CreateClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateClicked, &CreateClicked_Parms, NULL );

	return CreateClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreation.BackPageClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreation::BackPageClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackPageClicked = NULL;

	if ( ! pFnBackPageClicked )
		pFnBackPageClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreation.BackPageClicked" );

	UUIScene_ShieldCreation_execBackPageClicked_Parms BackPageClicked_Parms;
	BackPageClicked_Parms.EventObject = EventObject;
	BackPageClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackPageClicked, &BackPageClicked_Parms, NULL );

	return BackPageClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreation.NextPageClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreation::NextPageClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextPageClicked = NULL;

	if ( ! pFnNextPageClicked )
		pFnNextPageClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreation.NextPageClicked" );

	UUIScene_ShieldCreation_execNextPageClicked_Parms NextPageClicked_Parms;
	NextPageClicked_Parms.EventObject = EventObject;
	NextPageClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextPageClicked, &NextPageClicked_Parms, NULL );

	return NextPageClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreation.BackValueClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreation::BackValueClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackValueClicked = NULL;

	if ( ! pFnBackValueClicked )
		pFnBackValueClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreation.BackValueClicked" );

	UUIScene_ShieldCreation_execBackValueClicked_Parms BackValueClicked_Parms;
	BackValueClicked_Parms.EventObject = EventObject;
	BackValueClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackValueClicked, &BackValueClicked_Parms, NULL );

	return BackValueClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreation.NextValueClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreation::NextValueClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextValueClicked = NULL;

	if ( ! pFnNextValueClicked )
		pFnNextValueClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreation.NextValueClicked" );

	UUIScene_ShieldCreation_execNextValueClicked_Parms NextValueClicked_Parms;
	NextValueClicked_Parms.EventObject = EventObject;
	NextValueClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextValueClicked, &NextValueClicked_Parms, NULL );

	return NextValueClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreation.BackClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreation::BackClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackClicked = NULL;

	if ( ! pFnBackClicked )
		pFnBackClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreation.BackClicked" );

	UUIScene_ShieldCreation_execBackClicked_Parms BackClicked_Parms;
	BackClicked_Parms.EventObject = EventObject;
	BackClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackClicked, &BackClicked_Parms, NULL );

	return BackClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreation.NextClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreation::NextClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextClicked = NULL;

	if ( ! pFnNextClicked )
		pFnNextClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreation.NextClicked" );

	UUIScene_ShieldCreation_execNextClicked_Parms NextClicked_Parms;
	NextClicked_Parms.EventObject = EventObject;
	NextClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextClicked, &NextClicked_Parms, NULL );

	return NextClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreation.AbortClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreation::AbortClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAbortClicked = NULL;

	if ( ! pFnAbortClicked )
		pFnAbortClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreation.AbortClicked" );

	UUIScene_ShieldCreation_execAbortClicked_Parms AbortClicked_Parms;
	AbortClicked_Parms.EventObject = EventObject;
	AbortClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAbortClicked, &AbortClicked_Parms, NULL );

	return AbortClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreation.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_ShieldCreation::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreation.PostInitUpdate" );

	UUIScene_ShieldCreation_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_ShieldCreation.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_ShieldCreation::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreation.InitScene" );

	UUIScene_ShieldCreation_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_ShieldCreationNew.CreateClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreationNew::CreateClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCreateClicked = NULL;

	if ( ! pFnCreateClicked )
		pFnCreateClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.CreateClicked" );

	UUIScene_ShieldCreationNew_execCreateClicked_Parms CreateClicked_Parms;
	CreateClicked_Parms.EventObject = EventObject;
	CreateClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateClicked, &CreateClicked_Parms, NULL );

	return CreateClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreationNew.SetupSliders
// [0x00020002] 
// Parameters infos:

void UUIScene_ShieldCreationNew::SetupSliders ( )
{
	static UFunction* pFnSetupSliders = NULL;

	if ( ! pFnSetupSliders )
		pFnSetupSliders = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.SetupSliders" );

	UUIScene_ShieldCreationNew_execSetupSliders_Parms SetupSliders_Parms;

	this->ProcessEvent ( pFnSetupSliders, &SetupSliders_Parms, NULL );
};

// Function NowGame.UIScene_ShieldCreationNew.SetDoneVisibility
// [0x00020002] 
// Parameters infos:

void UUIScene_ShieldCreationNew::SetDoneVisibility ( )
{
	static UFunction* pFnSetDoneVisibility = NULL;

	if ( ! pFnSetDoneVisibility )
		pFnSetDoneVisibility = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.SetDoneVisibility" );

	UUIScene_ShieldCreationNew_execSetDoneVisibility_Parms SetDoneVisibility_Parms;

	this->ProcessEvent ( pFnSetDoneVisibility, &SetDoneVisibility_Parms, NULL );
};

// Function NowGame.UIScene_ShieldCreationNew.SetMaterial
// [0x00020002] 
// Parameters infos:
// class UUINow_ContentButton*    Target                         ( CPF_Parm )
// int                            eMat                           ( CPF_Parm )

void UUIScene_ShieldCreationNew::SetMaterial ( class UUINow_ContentButton* Target, int eMat )
{
	static UFunction* pFnSetMaterial = NULL;

	if ( ! pFnSetMaterial )
		pFnSetMaterial = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.SetMaterial" );

	UUIScene_ShieldCreationNew_execSetMaterial_Parms SetMaterial_Parms;
	SetMaterial_Parms.Target = Target;
	SetMaterial_Parms.eMat = eMat;

	this->ProcessEvent ( pFnSetMaterial, &SetMaterial_Parms, NULL );
};

// Function NowGame.UIScene_ShieldCreationNew.FrameMatDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_ShieldCreationNew::FrameMatDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnFrameMatDrop = NULL;

	if ( ! pFnFrameMatDrop )
		pFnFrameMatDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.FrameMatDrop" );

	UUIScene_ShieldCreationNew_execFrameMatDrop_Parms FrameMatDrop_Parms;
	FrameMatDrop_Parms.Target = Target;
	FrameMatDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnFrameMatDrop, &FrameMatDrop_Parms, NULL );

	return FrameMatDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreationNew.CoatMatDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_ShieldCreationNew::CoatMatDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnCoatMatDrop = NULL;

	if ( ! pFnCoatMatDrop )
		pFnCoatMatDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.CoatMatDrop" );

	UUIScene_ShieldCreationNew_execCoatMatDrop_Parms CoatMatDrop_Parms;
	CoatMatDrop_Parms.Target = Target;
	CoatMatDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnCoatMatDrop, &CoatMatDrop_Parms, NULL );

	return CoatMatDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreationNew.BaseMatDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_ShieldCreationNew::BaseMatDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnBaseMatDrop = NULL;

	if ( ! pFnBaseMatDrop )
		pFnBaseMatDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.BaseMatDrop" );

	UUIScene_ShieldCreationNew_execBaseMatDrop_Parms BaseMatDrop_Parms;
	BaseMatDrop_Parms.Target = Target;
	BaseMatDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnBaseMatDrop, &BaseMatDrop_Parms, NULL );

	return BaseMatDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreationNew.FrameMatClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreationNew::FrameMatClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnFrameMatClicked = NULL;

	if ( ! pFnFrameMatClicked )
		pFnFrameMatClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.FrameMatClicked" );

	UUIScene_ShieldCreationNew_execFrameMatClicked_Parms FrameMatClicked_Parms;
	FrameMatClicked_Parms.EventObject = EventObject;
	FrameMatClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnFrameMatClicked, &FrameMatClicked_Parms, NULL );

	return FrameMatClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreationNew.CoatMatClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreationNew::CoatMatClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCoatMatClicked = NULL;

	if ( ! pFnCoatMatClicked )
		pFnCoatMatClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.CoatMatClicked" );

	UUIScene_ShieldCreationNew_execCoatMatClicked_Parms CoatMatClicked_Parms;
	CoatMatClicked_Parms.EventObject = EventObject;
	CoatMatClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCoatMatClicked, &CoatMatClicked_Parms, NULL );

	return CoatMatClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreationNew.BaseMatClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreationNew::BaseMatClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBaseMatClicked = NULL;

	if ( ! pFnBaseMatClicked )
		pFnBaseMatClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.BaseMatClicked" );

	UUIScene_ShieldCreationNew_execBaseMatClicked_Parms BaseMatClicked_Parms;
	BaseMatClicked_Parms.EventObject = EventObject;
	BaseMatClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBaseMatClicked, &BaseMatClicked_Parms, NULL );

	return BaseMatClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreationNew.SetMaterialVisibility
// [0x00020002] 
// Parameters infos:

void UUIScene_ShieldCreationNew::SetMaterialVisibility ( )
{
	static UFunction* pFnSetMaterialVisibility = NULL;

	if ( ! pFnSetMaterialVisibility )
		pFnSetMaterialVisibility = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.SetMaterialVisibility" );

	UUIScene_ShieldCreationNew_execSetMaterialVisibility_Parms SetMaterialVisibility_Parms;

	this->ProcessEvent ( pFnSetMaterialVisibility, &SetMaterialVisibility_Parms, NULL );
};

// Function NowGame.UIScene_ShieldCreationNew.FrameClick
// [0x00020002] 
// Parameters infos:
// unsigned long                  bBack                          ( CPF_Parm )

void UUIScene_ShieldCreationNew::FrameClick ( unsigned long bBack )
{
	static UFunction* pFnFrameClick = NULL;

	if ( ! pFnFrameClick )
		pFnFrameClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.FrameClick" );

	UUIScene_ShieldCreationNew_execFrameClick_Parms FrameClick_Parms;
	FrameClick_Parms.bBack = bBack;

	this->ProcessEvent ( pFnFrameClick, &FrameClick_Parms, NULL );
};

// Function NowGame.UIScene_ShieldCreationNew.BackFrameClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreationNew::BackFrameClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackFrameClicked = NULL;

	if ( ! pFnBackFrameClicked )
		pFnBackFrameClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.BackFrameClicked" );

	UUIScene_ShieldCreationNew_execBackFrameClicked_Parms BackFrameClicked_Parms;
	BackFrameClicked_Parms.EventObject = EventObject;
	BackFrameClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackFrameClicked, &BackFrameClicked_Parms, NULL );

	return BackFrameClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreationNew.NextFrameClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreationNew::NextFrameClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextFrameClicked = NULL;

	if ( ! pFnNextFrameClicked )
		pFnNextFrameClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.NextFrameClicked" );

	UUIScene_ShieldCreationNew_execNextFrameClicked_Parms NextFrameClicked_Parms;
	NextFrameClicked_Parms.EventObject = EventObject;
	NextFrameClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextFrameClicked, &NextFrameClicked_Parms, NULL );

	return NextFrameClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreationNew.BaseClick
// [0x00020002] 
// Parameters infos:
// unsigned long                  bBack                          ( CPF_Parm )

void UUIScene_ShieldCreationNew::BaseClick ( unsigned long bBack )
{
	static UFunction* pFnBaseClick = NULL;

	if ( ! pFnBaseClick )
		pFnBaseClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.BaseClick" );

	UUIScene_ShieldCreationNew_execBaseClick_Parms BaseClick_Parms;
	BaseClick_Parms.bBack = bBack;

	this->ProcessEvent ( pFnBaseClick, &BaseClick_Parms, NULL );
};

// Function NowGame.UIScene_ShieldCreationNew.BackBaseClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreationNew::BackBaseClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackBaseClicked = NULL;

	if ( ! pFnBackBaseClicked )
		pFnBackBaseClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.BackBaseClicked" );

	UUIScene_ShieldCreationNew_execBackBaseClicked_Parms BackBaseClicked_Parms;
	BackBaseClicked_Parms.EventObject = EventObject;
	BackBaseClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackBaseClicked, &BackBaseClicked_Parms, NULL );

	return BackBaseClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreationNew.NextBaseClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreationNew::NextBaseClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextBaseClicked = NULL;

	if ( ! pFnNextBaseClicked )
		pFnNextBaseClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.NextBaseClicked" );

	UUIScene_ShieldCreationNew_execNextBaseClicked_Parms NextBaseClicked_Parms;
	NextBaseClicked_Parms.EventObject = EventObject;
	NextBaseClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextBaseClicked, &NextBaseClicked_Parms, NULL );

	return NextBaseClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreationNew.AbortClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_ShieldCreationNew::AbortClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAbortClicked = NULL;

	if ( ! pFnAbortClicked )
		pFnAbortClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.AbortClicked" );

	UUIScene_ShieldCreationNew_execAbortClicked_Parms AbortClicked_Parms;
	AbortClicked_Parms.EventObject = EventObject;
	AbortClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAbortClicked, &AbortClicked_Parms, NULL );

	return AbortClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_ShieldCreationNew.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_ShieldCreationNew::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.PostInitUpdate" );

	UUIScene_ShieldCreationNew_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_ShieldCreationNew.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_ShieldCreationNew::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_ShieldCreationNew.InitScene" );

	UUIScene_ShieldCreationNew_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Sidebar.GetPlayerHUD
// [0x00020002] 
// Parameters infos:
// class ANowHUD*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowHUD* UUIScene_Sidebar::GetPlayerHUD ( )
{
	static UFunction* pFnGetPlayerHUD = NULL;

	if ( ! pFnGetPlayerHUD )
		pFnGetPlayerHUD = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Sidebar.GetPlayerHUD" );

	UUIScene_Sidebar_execGetPlayerHUD_Parms GetPlayerHUD_Parms;

	this->ProcessEvent ( pFnGetPlayerHUD, &GetPlayerHUD_Parms, NULL );

	return GetPlayerHUD_Parms.ReturnValue;
};

// Function NowGame.UIScene_Sidebar.OnInventoryClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Sidebar::OnInventoryClick ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnInventoryClick = NULL;

	if ( ! pFnOnInventoryClick )
		pFnOnInventoryClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Sidebar.OnInventoryClick" );

	UUIScene_Sidebar_execOnInventoryClick_Parms OnInventoryClick_Parms;
	OnInventoryClick_Parms.EventObject = EventObject;
	OnInventoryClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnInventoryClick, &OnInventoryClick_Parms, NULL );

	return OnInventoryClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_Sidebar.OnPlayerClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Sidebar::OnPlayerClick ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnPlayerClick = NULL;

	if ( ! pFnOnPlayerClick )
		pFnOnPlayerClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Sidebar.OnPlayerClick" );

	UUIScene_Sidebar_execOnPlayerClick_Parms OnPlayerClick_Parms;
	OnPlayerClick_Parms.EventObject = EventObject;
	OnPlayerClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnPlayerClick, &OnPlayerClick_Parms, NULL );

	return OnPlayerClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_Sidebar.OnSkillClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Sidebar::OnSkillClick ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSkillClick = NULL;

	if ( ! pFnOnSkillClick )
		pFnOnSkillClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Sidebar.OnSkillClick" );

	UUIScene_Sidebar_execOnSkillClick_Parms OnSkillClick_Parms;
	OnSkillClick_Parms.EventObject = EventObject;
	OnSkillClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSkillClick, &OnSkillClick_Parms, NULL );

	return OnSkillClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_Sidebar.OnSpellClick
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Sidebar::OnSpellClick ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSpellClick = NULL;

	if ( ! pFnOnSpellClick )
		pFnOnSpellClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Sidebar.OnSpellClick" );

	UUIScene_Sidebar_execOnSpellClick_Parms OnSpellClick_Parms;
	OnSpellClick_Parms.EventObject = EventObject;
	OnSpellClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSpellClick, &OnSpellClick_Parms, NULL );

	return OnSpellClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_Sidebar.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Sidebar::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Sidebar.InitScene" );

	UUIScene_Sidebar_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_SkillBook.UpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_SkillBook::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.UpdatePage" );

	UUIScene_SkillBook_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_SkillBook.OnSlotDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_SkillBook::OnSlotDragDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnSlotDragDrop = NULL;

	if ( ! pFnOnSlotDragDrop )
		pFnOnSlotDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.OnSlotDragDrop" );

	UUIScene_SkillBook_execOnSlotDragDrop_Parms OnSlotDragDrop_Parms;
	OnSlotDragDrop_Parms.Target = Target;
	OnSlotDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnOnSlotDragDrop, &OnSlotDragDrop_Parms, NULL );

	return OnSlotDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_SkillBook.OnSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_SkillBook::OnSlotClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSlotClicked = NULL;

	if ( ! pFnOnSlotClicked )
		pFnOnSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.OnSlotClicked" );

	UUIScene_SkillBook_execOnSlotClicked_Parms OnSlotClicked_Parms;
	OnSlotClicked_Parms.EventObject = EventObject;
	OnSlotClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSlotClicked, &OnSlotClicked_Parms, NULL );

	return OnSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_SkillBook.OnItemDragBegin
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_SkillBook::OnItemDragBegin ( class UUIScreenObject* Source )
{
	static UFunction* pFnOnItemDragBegin = NULL;

	if ( ! pFnOnItemDragBegin )
		pFnOnItemDragBegin = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.OnItemDragBegin" );

	UUIScene_SkillBook_execOnItemDragBegin_Parms OnItemDragBegin_Parms;
	OnItemDragBegin_Parms.Source = Source;

	this->ProcessEvent ( pFnOnItemDragBegin, &OnItemDragBegin_Parms, NULL );

	return OnItemDragBegin_Parms.ReturnValue;
};

// Function NowGame.UIScene_SkillBook.SkillListChanged
// [0x00020002] 
// Parameters infos:

void UUIScene_SkillBook::SkillListChanged ( )
{
	static UFunction* pFnSkillListChanged = NULL;

	if ( ! pFnSkillListChanged )
		pFnSkillListChanged = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.SkillListChanged" );

	UUIScene_SkillBook_execSkillListChanged_Parms SkillListChanged_Parms;

	this->ProcessEvent ( pFnSkillListChanged, &SkillListChanged_Parms, NULL );
};

// Function NowGame.UIScene_SkillBook.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_SkillBook::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.SceneDeactivated" );

	UUIScene_SkillBook_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_SkillBook.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_SkillBook::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.UpdateScene" );

	UUIScene_SkillBook_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_SkillBook.UseTimer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_SkillBook::UseTimer ( )
{
	static UFunction* pFnUseTimer = NULL;

	if ( ! pFnUseTimer )
		pFnUseTimer = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.UseTimer" );

	UUIScene_SkillBook_execUseTimer_Parms UseTimer_Parms;

	this->ProcessEvent ( pFnUseTimer, &UseTimer_Parms, NULL );

	return UseTimer_Parms.ReturnValue;
};

// Function NowGame.UIScene_SkillBook.OnSkillActionClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_SkillBook::OnSkillActionClicked ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnSkillActionClicked = NULL;

	if ( ! pFnOnSkillActionClicked )
		pFnOnSkillActionClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.OnSkillActionClicked" );

	UUIScene_SkillBook_execOnSkillActionClicked_Parms OnSkillActionClicked_Parms;
	OnSkillActionClicked_Parms.O = O;
	OnSkillActionClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSkillActionClicked, &OnSkillActionClicked_Parms, NULL );

	return OnSkillActionClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_SkillBook.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_SkillBook::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.SceneActivated" );

	UUIScene_SkillBook_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_SkillBook.SkillChangeState
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_SkillBook::SkillChangeState ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnSkillChangeState = NULL;

	if ( ! pFnSkillChangeState )
		pFnSkillChangeState = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.SkillChangeState" );

	UUIScene_SkillBook_execSkillChangeState_Parms SkillChangeState_Parms;
	SkillChangeState_Parms.O = O;
	SkillChangeState_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnSkillChangeState, &SkillChangeState_Parms, NULL );

	return SkillChangeState_Parms.ReturnValue;
};

// Function NowGame.UIScene_SkillBook.OnGroupSelect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_SkillBook::OnGroupSelect ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnGroupSelect = NULL;

	if ( ! pFnOnGroupSelect )
		pFnOnGroupSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.OnGroupSelect" );

	UUIScene_SkillBook_execOnGroupSelect_Parms OnGroupSelect_Parms;
	OnGroupSelect_Parms.O = O;
	OnGroupSelect_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnGroupSelect, &OnGroupSelect_Parms, NULL );

	return OnGroupSelect_Parms.ReturnValue;
};

// Function NowGame.UIScene_SkillBook.AbortClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_SkillBook::AbortClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAbortClicked = NULL;

	if ( ! pFnAbortClicked )
		pFnAbortClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.AbortClicked" );

	UUIScene_SkillBook_execAbortClicked_Parms AbortClicked_Parms;
	AbortClicked_Parms.EventObject = EventObject;
	AbortClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAbortClicked, &AbortClicked_Parms, NULL );

	return AbortClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_SkillBook.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_SkillBook::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SkillBook.InitScene" );

	UUIScene_SkillBook_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Skills.ActionHoverChange
// [0x00824002] 
// Parameters infos:
// class UUIScreenObject*         Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIState*                NewlyActiveState               ( CPF_Parm )
// class UUIState*                PreviouslyActiveState          ( CPF_OptionalParm | CPF_Parm )

void UUIScene_Skills::ActionHoverChange ( class UUIScreenObject* Sender, int PlayerIndex, class UUIState* NewlyActiveState, class UUIState* PreviouslyActiveState )
{
	static UFunction* pFnActionHoverChange = NULL;

	if ( ! pFnActionHoverChange )
		pFnActionHoverChange = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.ActionHoverChange" );

	UUIScene_Skills_execActionHoverChange_Parms ActionHoverChange_Parms;
	ActionHoverChange_Parms.Sender = Sender;
	ActionHoverChange_Parms.PlayerIndex = PlayerIndex;
	ActionHoverChange_Parms.NewlyActiveState = NewlyActiveState;
	ActionHoverChange_Parms.PreviouslyActiveState = PreviouslyActiveState;

	this->ProcessEvent ( pFnActionHoverChange, &ActionHoverChange_Parms, NULL );
};

// Function NowGame.UIScene_Skills.SetupAttributeLabel
// [0x00020002] 
// Parameters infos:
// class UUILabel*                Label                          ( CPF_Parm )
// int                            eAttribute                     ( CPF_Parm )

void UUIScene_Skills::SetupAttributeLabel ( class UUILabel* Label, int eAttribute )
{
	static UFunction* pFnSetupAttributeLabel = NULL;

	if ( ! pFnSetupAttributeLabel )
		pFnSetupAttributeLabel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.SetupAttributeLabel" );

	UUIScene_Skills_execSetupAttributeLabel_Parms SetupAttributeLabel_Parms;
	SetupAttributeLabel_Parms.Label = Label;
	SetupAttributeLabel_Parms.eAttribute = eAttribute;

	this->ProcessEvent ( pFnSetupAttributeLabel, &SetupAttributeLabel_Parms, NULL );
};

// Function NowGame.UIScene_Skills.LockClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Skills::LockClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnLockClicked = NULL;

	if ( ! pFnLockClicked )
		pFnLockClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.LockClicked" );

	UUIScene_Skills_execLockClicked_Parms LockClicked_Parms;
	LockClicked_Parms.EventObject = EventObject;
	LockClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnLockClicked, &LockClicked_Parms, NULL );

	return LockClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Skills.LevelDownClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Skills::LevelDownClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnLevelDownClicked = NULL;

	if ( ! pFnLevelDownClicked )
		pFnLevelDownClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.LevelDownClicked" );

	UUIScene_Skills_execLevelDownClicked_Parms LevelDownClicked_Parms;
	LevelDownClicked_Parms.EventObject = EventObject;
	LevelDownClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnLevelDownClicked, &LevelDownClicked_Parms, NULL );

	return LevelDownClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Skills.SetupLockState
// [0x00020002] 
// Parameters infos:
// class UUINow_ContentButton*    Button                         ( CPF_Parm )
// int                            lockState                      ( CPF_Parm )

void UUIScene_Skills::SetupLockState ( class UUINow_ContentButton* Button, int lockState )
{
	static UFunction* pFnSetupLockState = NULL;

	if ( ! pFnSetupLockState )
		pFnSetupLockState = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.SetupLockState" );

	UUIScene_Skills_execSetupLockState_Parms SetupLockState_Parms;
	SetupLockState_Parms.Button = Button;
	SetupLockState_Parms.lockState = lockState;

	this->ProcessEvent ( pFnSetupLockState, &SetupLockState_Parms, NULL );
};

// Function NowGame.UIScene_Skills.SetupSkillBar
// [0x00020002] 
// Parameters infos:
// class UUINow_SkillBar*         Bar                            ( CPF_Parm )
// int                            SkillLevel                     ( CPF_Parm )
// int                            AttributeLevel                 ( CPF_Parm )
// int                            EnabledLevel                   ( CPF_Parm )

void UUIScene_Skills::SetupSkillBar ( class UUINow_SkillBar* Bar, int SkillLevel, int AttributeLevel, int EnabledLevel )
{
	static UFunction* pFnSetupSkillBar = NULL;

	if ( ! pFnSetupSkillBar )
		pFnSetupSkillBar = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.SetupSkillBar" );

	UUIScene_Skills_execSetupSkillBar_Parms SetupSkillBar_Parms;
	SetupSkillBar_Parms.Bar = Bar;
	SetupSkillBar_Parms.SkillLevel = SkillLevel;
	SetupSkillBar_Parms.AttributeLevel = AttributeLevel;
	SetupSkillBar_Parms.EnabledLevel = EnabledLevel;

	this->ProcessEvent ( pFnSetupSkillBar, &SetupSkillBar_Parms, NULL );
};

// Function NowGame.UIScene_Skills.SetActiveSkill
// [0x00020002] 
// Parameters infos:
// struct FSkillButton            Button                         ( CPF_Parm )

void UUIScene_Skills::SetActiveSkill ( struct FSkillButton Button )
{
	static UFunction* pFnSetActiveSkill = NULL;

	if ( ! pFnSetActiveSkill )
		pFnSetActiveSkill = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.SetActiveSkill" );

	UUIScene_Skills_execSetActiveSkill_Parms SetActiveSkill_Parms;
	memcpy ( &SetActiveSkill_Parms.Button, &Button, 0x1C );

	this->ProcessEvent ( pFnSetActiveSkill, &SetActiveSkill_Parms, NULL );
};

// Function NowGame.UIScene_Skills.OnActionDragBegin
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Skills::OnActionDragBegin ( class UUIScreenObject* Source )
{
	static UFunction* pFnOnActionDragBegin = NULL;

	if ( ! pFnOnActionDragBegin )
		pFnOnActionDragBegin = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.OnActionDragBegin" );

	UUIScene_Skills_execOnActionDragBegin_Parms OnActionDragBegin_Parms;
	OnActionDragBegin_Parms.Source = Source;

	this->ProcessEvent ( pFnOnActionDragBegin, &OnActionDragBegin_Parms, NULL );

	return OnActionDragBegin_Parms.ReturnValue;
};

// Function NowGame.UIScene_Skills.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Skills::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.UpdateScene" );

	UUIScene_Skills_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Skills.UseTimer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUIScene_Skills::UseTimer ( )
{
	static UFunction* pFnUseTimer = NULL;

	if ( ! pFnUseTimer )
		pFnUseTimer = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.UseTimer" );

	UUIScene_Skills_execUseTimer_Parms UseTimer_Parms;

	this->ProcessEvent ( pFnUseTimer, &UseTimer_Parms, NULL );

	return UseTimer_Parms.ReturnValue;
};

// Function NowGame.UIScene_Skills.ActionClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Skills::ActionClicked ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnActionClicked = NULL;

	if ( ! pFnActionClicked )
		pFnActionClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.ActionClicked" );

	UUIScene_Skills_execActionClicked_Parms ActionClicked_Parms;
	ActionClicked_Parms.O = O;
	ActionClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnActionClicked, &ActionClicked_Parms, NULL );

	return ActionClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Skills.ButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Skills::ButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnButtonClicked = NULL;

	if ( ! pFnButtonClicked )
		pFnButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.ButtonClicked" );

	UUIScene_Skills_execButtonClicked_Parms ButtonClicked_Parms;
	ButtonClicked_Parms.EventObject = EventObject;
	ButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnButtonClicked, &ButtonClicked_Parms, NULL );

	return ButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Skills.GetGroupWithChild
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 skillName                      ( CPF_Parm | CPF_NeedCtorLink )

int UUIScene_Skills::GetGroupWithChild ( struct FString skillName )
{
	static UFunction* pFnGetGroupWithChild = NULL;

	if ( ! pFnGetGroupWithChild )
		pFnGetGroupWithChild = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.GetGroupWithChild" );

	UUIScene_Skills_execGetGroupWithChild_Parms GetGroupWithChild_Parms;
	memcpy ( &GetGroupWithChild_Parms.skillName, &skillName, 0xC );

	this->ProcessEvent ( pFnGetGroupWithChild, &GetGroupWithChild_Parms, NULL );

	return GetGroupWithChild_Parms.ReturnValue;
};

// Function NowGame.UIScene_Skills.ShowGroups
// [0x00020002] 
// Parameters infos:

void UUIScene_Skills::ShowGroups ( )
{
	static UFunction* pFnShowGroups = NULL;

	if ( ! pFnShowGroups )
		pFnShowGroups = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.ShowGroups" );

	UUIScene_Skills_execShowGroups_Parms ShowGroups_Parms;

	this->ProcessEvent ( pFnShowGroups, &ShowGroups_Parms, NULL );
};

// Function NowGame.UIScene_Skills.UpdatePage
// [0x00820002] 
// Parameters infos:

void UUIScene_Skills::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.UpdatePage" );

	UUIScene_Skills_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_Skills.InitGroups
// [0x00020002] 
// Parameters infos:

void UUIScene_Skills::InitGroups ( )
{
	static UFunction* pFnInitGroups = NULL;

	if ( ! pFnInitGroups )
		pFnInitGroups = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.InitGroups" );

	UUIScene_Skills_execInitGroups_Parms InitGroups_Parms;

	this->ProcessEvent ( pFnInitGroups, &InitGroups_Parms, NULL );
};

// Function NowGame.UIScene_Skills.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_Skills::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.PostInitUpdate" );

	UUIScene_Skills_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_Skills.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Skills::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.SceneDeactivated" );

	UUIScene_Skills_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Skills.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Skills::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.SceneActivated" );

	UUIScene_Skills_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Skills.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Skills::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Skills.InitScene" );

	UUIScene_Skills_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_SpellBook.LastPageClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_SpellBook::LastPageClicked ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnLastPageClicked = NULL;

	if ( ! pFnLastPageClicked )
		pFnLastPageClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.LastPageClicked" );

	UUIScene_SpellBook_execLastPageClicked_Parms LastPageClicked_Parms;
	LastPageClicked_Parms.O = O;
	LastPageClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnLastPageClicked, &LastPageClicked_Parms, NULL );

	return LastPageClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_SpellBook.NextPageClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_SpellBook::NextPageClicked ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnNextPageClicked = NULL;

	if ( ! pFnNextPageClicked )
		pFnNextPageClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.NextPageClicked" );

	UUIScene_SpellBook_execNextPageClicked_Parms NextPageClicked_Parms;
	NextPageClicked_Parms.O = O;
	NextPageClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextPageClicked, &NextPageClicked_Parms, NULL );

	return NextPageClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_SpellBook.SetSpellSchoolLabel
// [0x00020002] 
// Parameters infos:

void UUIScene_SpellBook::SetSpellSchoolLabel ( )
{
	static UFunction* pFnSetSpellSchoolLabel = NULL;

	if ( ! pFnSetSpellSchoolLabel )
		pFnSetSpellSchoolLabel = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.SetSpellSchoolLabel" );

	UUIScene_SpellBook_execSetSpellSchoolLabel_Parms SetSpellSchoolLabel_Parms;

	this->ProcessEvent ( pFnSetSpellSchoolLabel, &SetSpellSchoolLabel_Parms, NULL );
};

// Function NowGame.UIScene_SpellBook.UpdateSpellSlot
// [0x00020002] 
// Parameters infos:
// int                            SpellID                        ( CPF_Parm )
// class USpellEffect_ContentInfo* spellCI                        ( CPF_Parm )

void UUIScene_SpellBook::UpdateSpellSlot ( int SpellID, class USpellEffect_ContentInfo* spellCI )
{
	static UFunction* pFnUpdateSpellSlot = NULL;

	if ( ! pFnUpdateSpellSlot )
		pFnUpdateSpellSlot = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.UpdateSpellSlot" );

	UUIScene_SpellBook_execUpdateSpellSlot_Parms UpdateSpellSlot_Parms;
	UpdateSpellSlot_Parms.SpellID = SpellID;
	UpdateSpellSlot_Parms.spellCI = spellCI;

	this->ProcessEvent ( pFnUpdateSpellSlot, &UpdateSpellSlot_Parms, NULL );
};

// Function NowGame.UIScene_SpellBook.UpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_SpellBook::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.UpdatePage" );

	UUIScene_SpellBook_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_SpellBook.StateChange
// [0x00024002] 
// Parameters infos:
// class UUIScreenObject*         Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIState*                NewlyActiveState               ( CPF_Parm )
// class UUIState*                PreviouslyActiveState          ( CPF_OptionalParm | CPF_Parm )

void UUIScene_SpellBook::StateChange ( class UUIScreenObject* Sender, int PlayerIndex, class UUIState* NewlyActiveState, class UUIState* PreviouslyActiveState )
{
	static UFunction* pFnStateChange = NULL;

	if ( ! pFnStateChange )
		pFnStateChange = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.StateChange" );

	UUIScene_SpellBook_execStateChange_Parms StateChange_Parms;
	StateChange_Parms.Sender = Sender;
	StateChange_Parms.PlayerIndex = PlayerIndex;
	StateChange_Parms.NewlyActiveState = NewlyActiveState;
	StateChange_Parms.PreviouslyActiveState = PreviouslyActiveState;

	this->ProcessEvent ( pFnStateChange, &StateChange_Parms, NULL );
};

// Function NowGame.UIScene_SpellBook.OnCompMouseover
// [0x00024002] 
// Parameters infos:
// class UUIScreenObject*         Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIState*                NewlyActiveState               ( CPF_Parm )
// class UUIState*                PreviouslyActiveState          ( CPF_OptionalParm | CPF_Parm )

void UUIScene_SpellBook::OnCompMouseover ( class UUIScreenObject* Sender, int PlayerIndex, class UUIState* NewlyActiveState, class UUIState* PreviouslyActiveState )
{
	static UFunction* pFnOnCompMouseover = NULL;

	if ( ! pFnOnCompMouseover )
		pFnOnCompMouseover = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.OnCompMouseover" );

	UUIScene_SpellBook_execOnCompMouseover_Parms OnCompMouseover_Parms;
	OnCompMouseover_Parms.Sender = Sender;
	OnCompMouseover_Parms.PlayerIndex = PlayerIndex;
	OnCompMouseover_Parms.NewlyActiveState = NewlyActiveState;
	OnCompMouseover_Parms.PreviouslyActiveState = PreviouslyActiveState;

	this->ProcessEvent ( pFnOnCompMouseover, &OnCompMouseover_Parms, NULL );
};

// Function NowGame.UIScene_SpellBook.ItemListChanged
// [0x00020002] 
// Parameters infos:
// TArray< struct FString >       ItemData                       ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_SpellBook::ItemListChanged ( TArray< struct FString > ItemData )
{
	static UFunction* pFnItemListChanged = NULL;

	if ( ! pFnItemListChanged )
		pFnItemListChanged = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.ItemListChanged" );

	UUIScene_SpellBook_execItemListChanged_Parms ItemListChanged_Parms;
	memcpy ( &ItemListChanged_Parms.ItemData, &ItemData, 0xC );

	this->ProcessEvent ( pFnItemListChanged, &ItemListChanged_Parms, NULL );
};

// Function NowGame.UIScene_SpellBook.OnSpellDragBegin
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_SpellBook::OnSpellDragBegin ( class UUIScreenObject* Source )
{
	static UFunction* pFnOnSpellDragBegin = NULL;

	if ( ! pFnOnSpellDragBegin )
		pFnOnSpellDragBegin = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.OnSpellDragBegin" );

	UUIScene_SpellBook_execOnSpellDragBegin_Parms OnSpellDragBegin_Parms;
	OnSpellDragBegin_Parms.Source = Source;

	this->ProcessEvent ( pFnOnSpellDragBegin, &OnSpellDragBegin_Parms, NULL );

	return OnSpellDragBegin_Parms.ReturnValue;
};

// Function NowGame.UIScene_SpellBook.OnSpellClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_SpellBook::OnSpellClicked ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnSpellClicked = NULL;

	if ( ! pFnOnSpellClicked )
		pFnOnSpellClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.OnSpellClicked" );

	UUIScene_SpellBook_execOnSpellClicked_Parms OnSpellClicked_Parms;
	OnSpellClicked_Parms.O = O;
	OnSpellClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSpellClicked, &OnSpellClicked_Parms, NULL );

	return OnSpellClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_SpellBook.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_SpellBook::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.SceneDeactivated" );

	UUIScene_SpellBook_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_SpellBook.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_SpellBook::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.SceneActivated" );

	UUIScene_SpellBook_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_SpellBook.OnSpellSelect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_SpellBook::OnSpellSelect ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSpellSelect = NULL;

	if ( ! pFnOnSpellSelect )
		pFnOnSpellSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.OnSpellSelect" );

	UUIScene_SpellBook_execOnSpellSelect_Parms OnSpellSelect_Parms;
	OnSpellSelect_Parms.EventObject = EventObject;
	OnSpellSelect_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSpellSelect, &OnSpellSelect_Parms, NULL );

	return OnSpellSelect_Parms.ReturnValue;
};

// Function NowGame.UIScene_SpellBook.OnSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_SpellBook::OnSlotClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnSlotClicked = NULL;

	if ( ! pFnOnSlotClicked )
		pFnOnSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.OnSlotClicked" );

	UUIScene_SpellBook_execOnSlotClicked_Parms OnSlotClicked_Parms;
	OnSlotClicked_Parms.EventObject = EventObject;
	OnSlotClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnSlotClicked, &OnSlotClicked_Parms, NULL );

	return OnSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_SpellBook.OnSlotDragDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_SpellBook::OnSlotDragDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnSlotDragDrop = NULL;

	if ( ! pFnOnSlotDragDrop )
		pFnOnSlotDragDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.OnSlotDragDrop" );

	UUIScene_SpellBook_execOnSlotDragDrop_Parms OnSlotDragDrop_Parms;
	OnSlotDragDrop_Parms.Target = Target;
	OnSlotDragDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnOnSlotDragDrop, &OnSlotDragDrop_Parms, NULL );

	return OnSlotDragDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_SpellBook.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_SpellBook::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_SpellBook.InitScene" );

	UUIScene_SpellBook_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Stable.getStable
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatar*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatar* UUIScene_Stable::getStable ( )
{
	static UFunction* pFngetStable = NULL;

	if ( ! pFngetStable )
		pFngetStable = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.getStable" );

	UUIScene_Stable_execgetStable_Parms getStable_Parms;

	this->ProcessEvent ( pFngetStable, &getStable_Parms, NULL );

	return getStable_Parms.ReturnValue;
};

// Function NowGame.UIScene_Stable.PostRefineMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Stable::PostRefineMessage ( struct FString msg )
{
	static UFunction* pFnPostRefineMessage = NULL;

	if ( ! pFnPostRefineMessage )
		pFnPostRefineMessage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.PostRefineMessage" );

	UUIScene_Stable_execPostRefineMessage_Parms PostRefineMessage_Parms;
	memcpy ( &PostRefineMessage_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnPostRefineMessage, &PostRefineMessage_Parms, NULL );
};

// Function NowGame.UIScene_Stable.UpdatePage
// [0x00020002] 
// Parameters infos:

void UUIScene_Stable::UpdatePage ( )
{
	static UFunction* pFnUpdatePage = NULL;

	if ( ! pFnUpdatePage )
		pFnUpdatePage = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.UpdatePage" );

	UUIScene_Stable_execUpdatePage_Parms UpdatePage_Parms;

	this->ProcessEvent ( pFnUpdatePage, &UpdatePage_Parms, NULL );
};

// Function NowGame.UIScene_Stable.MessageEvent
// [0x00020000] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UUIScene_Stable::MessageEvent ( struct FString msg )
{
	static UFunction* pFnMessageEvent = NULL;

	if ( ! pFnMessageEvent )
		pFnMessageEvent = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.MessageEvent" );

	UUIScene_Stable_execMessageEvent_Parms MessageEvent_Parms;
	memcpy ( &MessageEvent_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnMessageEvent, &MessageEvent_Parms, NULL );
};

// Function NowGame.UIScene_Stable.UpdateWorkBench
// [0x00020002] 
// Parameters infos:

void UUIScene_Stable::UpdateWorkBench ( )
{
	static UFunction* pFnUpdateWorkBench = NULL;

	if ( ! pFnUpdateWorkBench )
		pFnUpdateWorkBench = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.UpdateWorkBench" );

	UUIScene_Stable_execUpdateWorkBench_Parms UpdateWorkBench_Parms;

	this->ProcessEvent ( pFnUpdateWorkBench, &UpdateWorkBench_Parms, NULL );
};

// Function NowGame.UIScene_Stable.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Stable::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.UpdateScene" );

	UUIScene_Stable_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Stable.OnCatalystSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Stable::OnCatalystSlotClicked ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnCatalystSlotClicked = NULL;

	if ( ! pFnOnCatalystSlotClicked )
		pFnOnCatalystSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.OnCatalystSlotClicked" );

	UUIScene_Stable_execOnCatalystSlotClicked_Parms OnCatalystSlotClicked_Parms;
	OnCatalystSlotClicked_Parms.Target = Target;
	OnCatalystSlotClicked_Parms.Source = Source;

	this->ProcessEvent ( pFnOnCatalystSlotClicked, &OnCatalystSlotClicked_Parms, NULL );

	return OnCatalystSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Stable.OnToolSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Stable::OnToolSlotClicked ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnToolSlotClicked = NULL;

	if ( ! pFnOnToolSlotClicked )
		pFnOnToolSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.OnToolSlotClicked" );

	UUIScene_Stable_execOnToolSlotClicked_Parms OnToolSlotClicked_Parms;
	OnToolSlotClicked_Parms.Target = Target;
	OnToolSlotClicked_Parms.Source = Source;

	this->ProcessEvent ( pFnOnToolSlotClicked, &OnToolSlotClicked_Parms, NULL );

	return OnToolSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Stable.OnRefineSlotDropped
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_Stable::OnRefineSlotDropped ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnOnRefineSlotDropped = NULL;

	if ( ! pFnOnRefineSlotDropped )
		pFnOnRefineSlotDropped = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.OnRefineSlotDropped" );

	UUIScene_Stable_execOnRefineSlotDropped_Parms OnRefineSlotDropped_Parms;
	OnRefineSlotDropped_Parms.Target = Target;
	OnRefineSlotDropped_Parms.Source = Source;

	this->ProcessEvent ( pFnOnRefineSlotDropped, &OnRefineSlotDropped_Parms, NULL );

	return OnRefineSlotDropped_Parms.ReturnValue;
};

// Function NowGame.UIScene_Stable.OnRefineSlotClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Stable::OnRefineSlotClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnRefineSlotClicked = NULL;

	if ( ! pFnOnRefineSlotClicked )
		pFnOnRefineSlotClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.OnRefineSlotClicked" );

	UUIScene_Stable_execOnRefineSlotClicked_Parms OnRefineSlotClicked_Parms;
	OnRefineSlotClicked_Parms.EventObject = EventObject;
	OnRefineSlotClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnRefineSlotClicked, &OnRefineSlotClicked_Parms, NULL );

	return OnRefineSlotClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Stable.OnProcess
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Stable::OnProcess ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnProcess = NULL;

	if ( ! pFnOnProcess )
		pFnOnProcess = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.OnProcess" );

	UUIScene_Stable_execOnProcess_Parms OnProcess_Parms;
	OnProcess_Parms.EventObject = EventObject;
	OnProcess_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnProcess, &OnProcess_Parms, NULL );

	return OnProcess_Parms.ReturnValue;
};

// Function NowGame.UIScene_Stable.OnClose
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Stable::OnClose ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.OnClose" );

	UUIScene_Stable_execOnClose_Parms OnClose_Parms;
	OnClose_Parms.EventObject = EventObject;
	OnClose_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );

	return OnClose_Parms.ReturnValue;
};

// Function NowGame.UIScene_Stable.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Stable::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.SceneDeactivated" );

	UUIScene_Stable_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Stable.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Stable::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.SceneActivated" );

	UUIScene_Stable_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Stable.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Stable::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Stable.InitScene" );

	UUIScene_Stable_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Startup.UpdateScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AWorldInfo*              WorldInfo                      ( CPF_Parm )

void UUIScene_Startup::eventUpdateScene ( float DeltaTime, class AWorldInfo* WorldInfo )
{
	static UFunction* pFnUpdateScene = NULL;

	if ( ! pFnUpdateScene )
		pFnUpdateScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Startup.UpdateScene" );

	UUIScene_Startup_eventUpdateScene_Parms UpdateScene_Parms;
	UpdateScene_Parms.DeltaTime = DeltaTime;
	UpdateScene_Parms.WorldInfo = WorldInfo;

	this->ProcessEvent ( pFnUpdateScene, &UpdateScene_Parms, NULL );
};

// Function NowGame.UIScene_Startup.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Startup::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Startup.SceneDeactivated" );

	UUIScene_Startup_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Startup.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Startup::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Startup.SceneActivated" );

	UUIScene_Startup_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Startup.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Startup::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Startup.InitScene" );

	UUIScene_Startup_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_StealingInventory.UpdateTrade
// [0x00020002] 
// Parameters infos:

void UUIScene_StealingInventory::UpdateTrade ( )
{
	static UFunction* pFnUpdateTrade = NULL;

	if ( ! pFnUpdateTrade )
		pFnUpdateTrade = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StealingInventory.UpdateTrade" );

	UUIScene_StealingInventory_execUpdateTrade_Parms UpdateTrade_Parms;

	this->ProcessEvent ( pFnUpdateTrade, &UpdateTrade_Parms, NULL );
};

// Function NowGame.UIScene_StealingInventory.TradeRightClick
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_StealingInventory::TradeRightClick ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnTradeRightClick = NULL;

	if ( ! pFnTradeRightClick )
		pFnTradeRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StealingInventory.TradeRightClick" );

	UUIScene_StealingInventory_execTradeRightClick_Parms TradeRightClick_Parms;
	TradeRightClick_Parms.Sender = Sender;
	TradeRightClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnTradeRightClick, &TradeRightClick_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = TradeRightClick_Parms.CustomContextMenu;

	return TradeRightClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_StealingInventory.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_StealingInventory::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StealingInventory.PostInitUpdate" );

	UUIScene_StealingInventory_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_StealingInventory.OnInventoryItemRightClick
// [0x00020002] 
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void UUIScene_StealingInventory::OnInventoryItemRightClick ( int iBag, int iSlot )
{
	static UFunction* pFnOnInventoryItemRightClick = NULL;

	if ( ! pFnOnInventoryItemRightClick )
		pFnOnInventoryItemRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StealingInventory.OnInventoryItemRightClick" );

	UUIScene_StealingInventory_execOnInventoryItemRightClick_Parms OnInventoryItemRightClick_Parms;
	OnInventoryItemRightClick_Parms.iBag = iBag;
	OnInventoryItemRightClick_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnOnInventoryItemRightClick, &OnInventoryItemRightClick_Parms, NULL );
};

// Function NowGame.UIScene_StealingInventory.CancelButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_StealingInventory::CancelButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCancelButtonClicked = NULL;

	if ( ! pFnCancelButtonClicked )
		pFnCancelButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StealingInventory.CancelButtonClicked" );

	UUIScene_StealingInventory_execCancelButtonClicked_Parms CancelButtonClicked_Parms;
	CancelButtonClicked_Parms.EventObject = EventObject;
	CancelButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCancelButtonClicked, &CancelButtonClicked_Parms, NULL );

	return CancelButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_StealingInventory.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_StealingInventory::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StealingInventory.SceneDeactivated" );

	UUIScene_StealingInventory_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_StealingInventory.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_StealingInventory::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StealingInventory.SceneActivated" );

	UUIScene_StealingInventory_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_StealingInventory.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_StealingInventory::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_StealingInventory.InitScene" );

	UUIScene_StealingInventory_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Trade.UpdateTrade
// [0x00020002] 
// Parameters infos:

void UUIScene_Trade::UpdateTrade ( )
{
	static UFunction* pFnUpdateTrade = NULL;

	if ( ! pFnUpdateTrade )
		pFnUpdateTrade = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Trade.UpdateTrade" );

	UUIScene_Trade_execUpdateTrade_Parms UpdateTrade_Parms;

	this->ProcessEvent ( pFnUpdateTrade, &UpdateTrade_Parms, NULL );
};

// Function NowGame.UIScene_Trade.TradeRightClick
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_Trade::TradeRightClick ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnTradeRightClick = NULL;

	if ( ! pFnTradeRightClick )
		pFnTradeRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Trade.TradeRightClick" );

	UUIScene_Trade_execTradeRightClick_Parms TradeRightClick_Parms;
	TradeRightClick_Parms.Sender = Sender;
	TradeRightClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnTradeRightClick, &TradeRightClick_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = TradeRightClick_Parms.CustomContextMenu;

	return TradeRightClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_Trade.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_Trade::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Trade.PostInitUpdate" );

	UUIScene_Trade_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_Trade.OnInventoryItemRightClick
// [0x00020002] 
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void UUIScene_Trade::OnInventoryItemRightClick ( int iBag, int iSlot )
{
	static UFunction* pFnOnInventoryItemRightClick = NULL;

	if ( ! pFnOnInventoryItemRightClick )
		pFnOnInventoryItemRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Trade.OnInventoryItemRightClick" );

	UUIScene_Trade_execOnInventoryItemRightClick_Parms OnInventoryItemRightClick_Parms;
	OnInventoryItemRightClick_Parms.iBag = iBag;
	OnInventoryItemRightClick_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnOnInventoryItemRightClick, &OnInventoryItemRightClick_Parms, NULL );
};

// Function NowGame.UIScene_Trade.CancelButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Trade::CancelButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCancelButtonClicked = NULL;

	if ( ! pFnCancelButtonClicked )
		pFnCancelButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Trade.CancelButtonClicked" );

	UUIScene_Trade_execCancelButtonClicked_Parms CancelButtonClicked_Parms;
	CancelButtonClicked_Parms.EventObject = EventObject;
	CancelButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCancelButtonClicked, &CancelButtonClicked_Parms, NULL );

	return CancelButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Trade.UnacceptButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Trade::UnacceptButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnUnacceptButtonClicked = NULL;

	if ( ! pFnUnacceptButtonClicked )
		pFnUnacceptButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Trade.UnacceptButtonClicked" );

	UUIScene_Trade_execUnacceptButtonClicked_Parms UnacceptButtonClicked_Parms;
	UnacceptButtonClicked_Parms.EventObject = EventObject;
	UnacceptButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnUnacceptButtonClicked, &UnacceptButtonClicked_Parms, NULL );

	return UnacceptButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Trade.AcceptButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Trade::AcceptButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAcceptButtonClicked = NULL;

	if ( ! pFnAcceptButtonClicked )
		pFnAcceptButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Trade.AcceptButtonClicked" );

	UUIScene_Trade_execAcceptButtonClicked_Parms AcceptButtonClicked_Parms;
	AcceptButtonClicked_Parms.EventObject = EventObject;
	AcceptButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAcceptButtonClicked, &AcceptButtonClicked_Parms, NULL );

	return AcceptButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_Trade.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Trade::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Trade.SceneDeactivated" );

	UUIScene_Trade_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_Trade.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_Trade::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Trade.SceneActivated" );

	UUIScene_Trade_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_Trade.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Trade::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Trade.InitScene" );

	UUIScene_Trade_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_WeaponCreation.GetMatSlotName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            handleNr                       ( CPF_Parm )
// unsigned long                  visibleMat                     ( CPF_Parm )

struct FString UUIScene_WeaponCreation::GetMatSlotName ( int handleNr, unsigned long visibleMat )
{
	static UFunction* pFnGetMatSlotName = NULL;

	if ( ! pFnGetMatSlotName )
		pFnGetMatSlotName = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreation.GetMatSlotName" );

	UUIScene_WeaponCreation_execGetMatSlotName_Parms GetMatSlotName_Parms;
	GetMatSlotName_Parms.handleNr = handleNr;
	GetMatSlotName_Parms.visibleMat = visibleMat;

	this->ProcessEvent ( pFnGetMatSlotName, &GetMatSlotName_Parms, NULL );

	return GetMatSlotName_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreation.DoneClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreation::DoneClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnDoneClicked = NULL;

	if ( ! pFnDoneClicked )
		pFnDoneClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreation.DoneClicked" );

	UUIScene_WeaponCreation_execDoneClicked_Parms DoneClicked_Parms;
	DoneClicked_Parms.EventObject = EventObject;
	DoneClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnDoneClicked, &DoneClicked_Parms, NULL );

	return DoneClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreation.BackPageClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreation::BackPageClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackPageClicked = NULL;

	if ( ! pFnBackPageClicked )
		pFnBackPageClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreation.BackPageClicked" );

	UUIScene_WeaponCreation_execBackPageClicked_Parms BackPageClicked_Parms;
	BackPageClicked_Parms.EventObject = EventObject;
	BackPageClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackPageClicked, &BackPageClicked_Parms, NULL );

	return BackPageClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreation.NextPageClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreation::NextPageClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextPageClicked = NULL;

	if ( ! pFnNextPageClicked )
		pFnNextPageClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreation.NextPageClicked" );

	UUIScene_WeaponCreation_execNextPageClicked_Parms NextPageClicked_Parms;
	NextPageClicked_Parms.EventObject = EventObject;
	NextPageClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextPageClicked, &NextPageClicked_Parms, NULL );

	return NextPageClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreation.BackClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreation::BackClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackClicked = NULL;

	if ( ! pFnBackClicked )
		pFnBackClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreation.BackClicked" );

	UUIScene_WeaponCreation_execBackClicked_Parms BackClicked_Parms;
	BackClicked_Parms.EventObject = EventObject;
	BackClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackClicked, &BackClicked_Parms, NULL );

	return BackClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreation.NextClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreation::NextClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextClicked = NULL;

	if ( ! pFnNextClicked )
		pFnNextClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreation.NextClicked" );

	UUIScene_WeaponCreation_execNextClicked_Parms NextClicked_Parms;
	NextClicked_Parms.EventObject = EventObject;
	NextClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextClicked, &NextClicked_Parms, NULL );

	return NextClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreation.AbortClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreation::AbortClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAbortClicked = NULL;

	if ( ! pFnAbortClicked )
		pFnAbortClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreation.AbortClicked" );

	UUIScene_WeaponCreation_execAbortClicked_Parms AbortClicked_Parms;
	AbortClicked_Parms.EventObject = EventObject;
	AbortClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAbortClicked, &AbortClicked_Parms, NULL );

	return AbortClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreation.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_WeaponCreation::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreation.PostInitUpdate" );

	UUIScene_WeaponCreation_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_WeaponCreation.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_WeaponCreation::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreation.InitScene" );

	UUIScene_WeaponCreation_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_WeaponCreationNew.CreateHandleClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreationNew::CreateHandleClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCreateHandleClicked = NULL;

	if ( ! pFnCreateHandleClicked )
		pFnCreateHandleClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.CreateHandleClicked" );

	UUIScene_WeaponCreationNew_execCreateHandleClicked_Parms CreateHandleClicked_Parms;
	CreateHandleClicked_Parms.EventObject = EventObject;
	CreateHandleClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateHandleClicked, &CreateHandleClicked_Parms, NULL );

	return CreateHandleClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.CreateClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreationNew::CreateClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCreateClicked = NULL;

	if ( ! pFnCreateClicked )
		pFnCreateClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.CreateClicked" );

	UUIScene_WeaponCreationNew_execCreateClicked_Parms CreateClicked_Parms;
	CreateClicked_Parms.EventObject = EventObject;
	CreateClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateClicked, &CreateClicked_Parms, NULL );

	return CreateClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.DoneHandleClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreationNew::DoneHandleClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnDoneHandleClicked = NULL;

	if ( ! pFnDoneHandleClicked )
		pFnDoneHandleClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.DoneHandleClicked" );

	UUIScene_WeaponCreationNew_execDoneHandleClicked_Parms DoneHandleClicked_Parms;
	DoneHandleClicked_Parms.EventObject = EventObject;
	DoneHandleClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnDoneHandleClicked, &DoneHandleClicked_Parms, NULL );

	return DoneHandleClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.DoneWeaponClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreationNew::DoneWeaponClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnDoneWeaponClicked = NULL;

	if ( ! pFnDoneWeaponClicked )
		pFnDoneWeaponClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.DoneWeaponClicked" );

	UUIScene_WeaponCreationNew_execDoneWeaponClicked_Parms DoneWeaponClicked_Parms;
	DoneWeaponClicked_Parms.EventObject = EventObject;
	DoneWeaponClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnDoneWeaponClicked, &DoneWeaponClicked_Parms, NULL );

	return DoneWeaponClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.GetNextHead
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bBack                          ( CPF_Parm )
// unsigned long                  bBladeOnly                     ( CPF_Parm )

int UUIScene_WeaponCreationNew::GetNextHead ( unsigned long bBack, unsigned long bBladeOnly )
{
	static UFunction* pFnGetNextHead = NULL;

	if ( ! pFnGetNextHead )
		pFnGetNextHead = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.GetNextHead" );

	UUIScene_WeaponCreationNew_execGetNextHead_Parms GetNextHead_Parms;
	GetNextHead_Parms.bBack = bBack;
	GetNextHead_Parms.bBladeOnly = bBladeOnly;

	this->ProcessEvent ( pFnGetNextHead, &GetNextHead_Parms, NULL );

	return GetNextHead_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.GetNextHandle
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bBack                          ( CPF_Parm )
// unsigned long                  bBlade                         ( CPF_Parm )

int UUIScene_WeaponCreationNew::GetNextHandle ( unsigned long bBack, unsigned long bBlade )
{
	static UFunction* pFnGetNextHandle = NULL;

	if ( ! pFnGetNextHandle )
		pFnGetNextHandle = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.GetNextHandle" );

	UUIScene_WeaponCreationNew_execGetNextHandle_Parms GetNextHandle_Parms;
	GetNextHandle_Parms.bBack = bBack;
	GetNextHandle_Parms.bBlade = bBlade;

	this->ProcessEvent ( pFnGetNextHandle, &GetNextHandle_Parms, NULL );

	return GetNextHandle_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.SetDoneVisibility
// [0x00020002] 
// Parameters infos:

void UUIScene_WeaponCreationNew::SetDoneVisibility ( )
{
	static UFunction* pFnSetDoneVisibility = NULL;

	if ( ! pFnSetDoneVisibility )
		pFnSetDoneVisibility = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.SetDoneVisibility" );

	UUIScene_WeaponCreationNew_execSetDoneVisibility_Parms SetDoneVisibility_Parms;

	this->ProcessEvent ( pFnSetDoneVisibility, &SetDoneVisibility_Parms, NULL );
};

// Function NowGame.UIScene_WeaponCreationNew.HeadDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_WeaponCreationNew::HeadDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnHeadDrop = NULL;

	if ( ! pFnHeadDrop )
		pFnHeadDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.HeadDrop" );

	UUIScene_WeaponCreationNew_execHeadDrop_Parms HeadDrop_Parms;
	HeadDrop_Parms.Target = Target;
	HeadDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnHeadDrop, &HeadDrop_Parms, NULL );

	return HeadDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.nVisHandleDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_WeaponCreationNew::nVisHandleDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnnVisHandleDrop = NULL;

	if ( ! pFnnVisHandleDrop )
		pFnnVisHandleDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.nVisHandleDrop" );

	UUIScene_WeaponCreationNew_execnVisHandleDrop_Parms nVisHandleDrop_Parms;
	nVisHandleDrop_Parms.Target = Target;
	nVisHandleDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnnVisHandleDrop, &nVisHandleDrop_Parms, NULL );

	return nVisHandleDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.VisHandleDrop
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         Target                         ( CPF_Parm )
// class UUIScreenObject*         Source                         ( CPF_Parm )

bool UUIScene_WeaponCreationNew::VisHandleDrop ( class UUIScreenObject* Target, class UUIScreenObject* Source )
{
	static UFunction* pFnVisHandleDrop = NULL;

	if ( ! pFnVisHandleDrop )
		pFnVisHandleDrop = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.VisHandleDrop" );

	UUIScene_WeaponCreationNew_execVisHandleDrop_Parms VisHandleDrop_Parms;
	VisHandleDrop_Parms.Target = Target;
	VisHandleDrop_Parms.Source = Source;

	this->ProcessEvent ( pFnVisHandleDrop, &VisHandleDrop_Parms, NULL );

	return VisHandleDrop_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.HeadClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreationNew::HeadClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnHeadClicked = NULL;

	if ( ! pFnHeadClicked )
		pFnHeadClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.HeadClicked" );

	UUIScene_WeaponCreationNew_execHeadClicked_Parms HeadClicked_Parms;
	HeadClicked_Parms.EventObject = EventObject;
	HeadClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnHeadClicked, &HeadClicked_Parms, NULL );

	return HeadClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.nVisHandleClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreationNew::nVisHandleClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnnVisHandleClicked = NULL;

	if ( ! pFnnVisHandleClicked )
		pFnnVisHandleClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.nVisHandleClicked" );

	UUIScene_WeaponCreationNew_execnVisHandleClicked_Parms nVisHandleClicked_Parms;
	nVisHandleClicked_Parms.EventObject = EventObject;
	nVisHandleClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnnVisHandleClicked, &nVisHandleClicked_Parms, NULL );

	return nVisHandleClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.VisHandleClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreationNew::VisHandleClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnVisHandleClicked = NULL;

	if ( ! pFnVisHandleClicked )
		pFnVisHandleClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.VisHandleClicked" );

	UUIScene_WeaponCreationNew_execVisHandleClicked_Parms VisHandleClicked_Parms;
	VisHandleClicked_Parms.EventObject = EventObject;
	VisHandleClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnVisHandleClicked, &VisHandleClicked_Parms, NULL );

	return VisHandleClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.BackHeadClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreationNew::BackHeadClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackHeadClicked = NULL;

	if ( ! pFnBackHeadClicked )
		pFnBackHeadClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.BackHeadClicked" );

	UUIScene_WeaponCreationNew_execBackHeadClicked_Parms BackHeadClicked_Parms;
	BackHeadClicked_Parms.EventObject = EventObject;
	BackHeadClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackHeadClicked, &BackHeadClicked_Parms, NULL );

	return BackHeadClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.NextHeadClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreationNew::NextHeadClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextHeadClicked = NULL;

	if ( ! pFnNextHeadClicked )
		pFnNextHeadClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.NextHeadClicked" );

	UUIScene_WeaponCreationNew_execNextHeadClicked_Parms NextHeadClicked_Parms;
	NextHeadClicked_Parms.EventObject = EventObject;
	NextHeadClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextHeadClicked, &NextHeadClicked_Parms, NULL );

	return NextHeadClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.BackHandleClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreationNew::BackHandleClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnBackHandleClicked = NULL;

	if ( ! pFnBackHandleClicked )
		pFnBackHandleClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.BackHandleClicked" );

	UUIScene_WeaponCreationNew_execBackHandleClicked_Parms BackHandleClicked_Parms;
	BackHandleClicked_Parms.EventObject = EventObject;
	BackHandleClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnBackHandleClicked, &BackHandleClicked_Parms, NULL );

	return BackHandleClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.NextHandleClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreationNew::NextHandleClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnNextHandleClicked = NULL;

	if ( ! pFnNextHandleClicked )
		pFnNextHandleClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.NextHandleClicked" );

	UUIScene_WeaponCreationNew_execNextHandleClicked_Parms NextHandleClicked_Parms;
	NextHandleClicked_Parms.EventObject = EventObject;
	NextHandleClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnNextHandleClicked, &NextHandleClicked_Parms, NULL );

	return NextHandleClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.AbortClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WeaponCreationNew::AbortClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnAbortClicked = NULL;

	if ( ! pFnAbortClicked )
		pFnAbortClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.AbortClicked" );

	UUIScene_WeaponCreationNew_execAbortClicked_Parms AbortClicked_Parms;
	AbortClicked_Parms.EventObject = EventObject;
	AbortClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnAbortClicked, &AbortClicked_Parms, NULL );

	return AbortClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WeaponCreationNew.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_WeaponCreationNew::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.PostInitUpdate" );

	UUIScene_WeaponCreationNew_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_WeaponCreationNew.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_WeaponCreationNew::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WeaponCreationNew.InitScene" );

	UUIScene_WeaponCreationNew_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_Work.OnProffessionSelect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         O                              ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_Work::OnProffessionSelect ( class UUIScreenObject* O, int PlayerIndex )
{
	static UFunction* pFnOnProffessionSelect = NULL;

	if ( ! pFnOnProffessionSelect )
		pFnOnProffessionSelect = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Work.OnProffessionSelect" );

	UUIScene_Work_execOnProffessionSelect_Parms OnProffessionSelect_Parms;
	OnProffessionSelect_Parms.O = O;
	OnProffessionSelect_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnProffessionSelect, &OnProffessionSelect_Parms, NULL );

	return OnProffessionSelect_Parms.ReturnValue;
};

// Function NowGame.UIScene_Work.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_Work::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_Work.InitScene" );

	UUIScene_Work_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};

// Function NowGame.UIScene_WorldObjectTrade.UpdateTrade
// [0x00020002] 
// Parameters infos:

void UUIScene_WorldObjectTrade::UpdateTrade ( )
{
	static UFunction* pFnUpdateTrade = NULL;

	if ( ! pFnUpdateTrade )
		pFnUpdateTrade = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WorldObjectTrade.UpdateTrade" );

	UUIScene_WorldObjectTrade_execUpdateTrade_Parms UpdateTrade_Parms;

	this->ProcessEvent ( pFnUpdateTrade, &UpdateTrade_Parms, NULL );
};

// Function NowGame.UIScene_WorldObjectTrade.TradeRightClick
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIObject*               Sender                         ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )
// class UUIContextMenu*          CustomContextMenu              ( CPF_Parm | CPF_OutParm )

bool UUIScene_WorldObjectTrade::TradeRightClick ( class UUIObject* Sender, int PlayerIndex, class UUIContextMenu** CustomContextMenu )
{
	static UFunction* pFnTradeRightClick = NULL;

	if ( ! pFnTradeRightClick )
		pFnTradeRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WorldObjectTrade.TradeRightClick" );

	UUIScene_WorldObjectTrade_execTradeRightClick_Parms TradeRightClick_Parms;
	TradeRightClick_Parms.Sender = Sender;
	TradeRightClick_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnTradeRightClick, &TradeRightClick_Parms, NULL );

	if ( CustomContextMenu )
		*CustomContextMenu = TradeRightClick_Parms.CustomContextMenu;

	return TradeRightClick_Parms.ReturnValue;
};

// Function NowGame.UIScene_WorldObjectTrade.PostInitUpdate
// [0x00020002] 
// Parameters infos:

void UUIScene_WorldObjectTrade::PostInitUpdate ( )
{
	static UFunction* pFnPostInitUpdate = NULL;

	if ( ! pFnPostInitUpdate )
		pFnPostInitUpdate = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WorldObjectTrade.PostInitUpdate" );

	UUIScene_WorldObjectTrade_execPostInitUpdate_Parms PostInitUpdate_Parms;

	this->ProcessEvent ( pFnPostInitUpdate, &PostInitUpdate_Parms, NULL );
};

// Function NowGame.UIScene_WorldObjectTrade.getBridge
// [0x00020002] 
// Parameters infos:
// class ANowAtlasAvatarPlayerStructure* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ANowAtlasAvatarPlayerStructure* UUIScene_WorldObjectTrade::getBridge ( )
{
	static UFunction* pFngetBridge = NULL;

	if ( ! pFngetBridge )
		pFngetBridge = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WorldObjectTrade.getBridge" );

	UUIScene_WorldObjectTrade_execgetBridge_Parms getBridge_Parms;

	this->ProcessEvent ( pFngetBridge, &getBridge_Parms, NULL );

	return getBridge_Parms.ReturnValue;
};

// Function NowGame.UIScene_WorldObjectTrade.updateRescources
// [0x00020002] 
// Parameters infos:

void UUIScene_WorldObjectTrade::updateRescources ( )
{
	static UFunction* pFnupdateRescources = NULL;

	if ( ! pFnupdateRescources )
		pFnupdateRescources = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WorldObjectTrade.updateRescources" );

	UUIScene_WorldObjectTrade_execupdateRescources_Parms updateRescources_Parms;

	this->ProcessEvent ( pFnupdateRescources, &updateRescources_Parms, NULL );
};

// Function NowGame.UIScene_WorldObjectTrade.OnInventoryItemRightClick
// [0x00020002] 
// Parameters infos:
// int                            iBag                           ( CPF_Parm )
// int                            iSlot                          ( CPF_Parm )

void UUIScene_WorldObjectTrade::OnInventoryItemRightClick ( int iBag, int iSlot )
{
	static UFunction* pFnOnInventoryItemRightClick = NULL;

	if ( ! pFnOnInventoryItemRightClick )
		pFnOnInventoryItemRightClick = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WorldObjectTrade.OnInventoryItemRightClick" );

	UUIScene_WorldObjectTrade_execOnInventoryItemRightClick_Parms OnInventoryItemRightClick_Parms;
	OnInventoryItemRightClick_Parms.iBag = iBag;
	OnInventoryItemRightClick_Parms.iSlot = iSlot;

	this->ProcessEvent ( pFnOnInventoryItemRightClick, &OnInventoryItemRightClick_Parms, NULL );
};

// Function NowGame.UIScene_WorldObjectTrade.CancelButtonClicked
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         EventObject                    ( CPF_Parm )
// int                            PlayerIndex                    ( CPF_Parm )

bool UUIScene_WorldObjectTrade::CancelButtonClicked ( class UUIScreenObject* EventObject, int PlayerIndex )
{
	static UFunction* pFnCancelButtonClicked = NULL;

	if ( ! pFnCancelButtonClicked )
		pFnCancelButtonClicked = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WorldObjectTrade.CancelButtonClicked" );

	UUIScene_WorldObjectTrade_execCancelButtonClicked_Parms CancelButtonClicked_Parms;
	CancelButtonClicked_Parms.EventObject = EventObject;
	CancelButtonClicked_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCancelButtonClicked, &CancelButtonClicked_Parms, NULL );

	return CancelButtonClicked_Parms.ReturnValue;
};

// Function NowGame.UIScene_WorldObjectTrade.SceneDeactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_WorldObjectTrade::eventSceneDeactivated ( )
{
	static UFunction* pFnSceneDeactivated = NULL;

	if ( ! pFnSceneDeactivated )
		pFnSceneDeactivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WorldObjectTrade.SceneDeactivated" );

	UUIScene_WorldObjectTrade_eventSceneDeactivated_Parms SceneDeactivated_Parms;

	this->ProcessEvent ( pFnSceneDeactivated, &SceneDeactivated_Parms, NULL );
};

// Function NowGame.UIScene_WorldObjectTrade.SceneActivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInitialActivation             ( CPF_Parm )

void UUIScene_WorldObjectTrade::eventSceneActivated ( unsigned long bInitialActivation )
{
	static UFunction* pFnSceneActivated = NULL;

	if ( ! pFnSceneActivated )
		pFnSceneActivated = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WorldObjectTrade.SceneActivated" );

	UUIScene_WorldObjectTrade_eventSceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;

	this->ProcessEvent ( pFnSceneActivated, &SceneActivated_Parms, NULL );
};

// Function NowGame.UIScene_WorldObjectTrade.InitScene
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIScene_WorldObjectTrade::eventInitScene ( )
{
	static UFunction* pFnInitScene = NULL;

	if ( ! pFnInitScene )
		pFnInitScene = UObject::FindObject< UFunction > ( "Function NowGame.UIScene_WorldObjectTrade.InitScene" );

	UUIScene_WorldObjectTrade_eventInitScene_Parms InitScene_Parms;

	this->ProcessEvent ( pFnInitScene, &InitScene_Parms, NULL );
};


#ifdef _MSC_VER
	#pragma pack ( pop )
#endif